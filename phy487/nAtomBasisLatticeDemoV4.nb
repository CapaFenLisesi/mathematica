(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   3443739,      60678]
NotebookOptionsPosition[   3437814,      60502]
NotebookOutlinePosition[   3439463,      60552]
CellTagsIndexPosition[   3439111,      60540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Phonon Modes for 2D Lattice Vibrations", "DemoTitle",
 CellChangeTimes->{3.600887141142584*^9}],

Cell[CellGroupData[{

Cell["", "InitializationSection",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "glConstMinSquaredDistanceFromOrigin", ",", 
      "glConstMinAngleBetweenLatticeVectors", ",", "glConstLocDefault", ",", 
      "glConstDefaultMass", ",", "glConstKDefaults", ",", "glConstKMin", ",", 
      "glConstKMax", ",", "glConstMMax", ",", "glConstWindowHalfWidth", ",", 
      "glConstSpringColors", ",", "glConstPrimaryDisplaySize", ",", 
      "glConstTextDisplayOffsetHack", ",", "glConstNeighboringCellIndexes", 
      ",", "glConstDynPlotRange", ",", "glConstSpringColorsByN"}], "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstMinSquaredDistanceFromOrigin", " ", "=", " ", "0.1"}], 
    " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstMinAngleBetweenLatticeVectors", "=", 
     RowBox[{"Pi", "/", "6"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstLocDefault", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "1.3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.8"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstDefaultMass", "=", "20"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKDefaults", "=", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25", ",", "0.25", ",", "0.25", ",", "0.25"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKMin", "=", "0.05"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKMax", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstMMax", "=", "30"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstWindowHalfWidth", "=", "3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstSpringColors", "=", 
     RowBox[{"Darker", "@", 
      RowBox[{"{", 
       RowBox[{
       "Orange", ",", "Green", ",", "Purple", ",", "Cyan", ",", "Yellow"}], 
       "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstPrimaryDisplaySize", "=", 
     RowBox[{"{", 
      RowBox[{"380", ",", "380"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstTextDisplayOffsetHack", "=", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstNeighboringCellIndexes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstDynPlotRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "glConstWindowHalfWidth"}], "/", "2"}], ",", " ", 
         "glConstWindowHalfWidth"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "glConstWindowHalfWidth"}], "/", "2"}], ",", " ", 
         "glConstWindowHalfWidth"}], "}"}]}], "}"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"RGBColor", "[", "...", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], "\[Rule]", 
       RowBox[{"RGBColor", "[", "...", "]"}]}], ",", " ", "..."}], "}"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstSpringColorsByN", " ", "=", " ", 
     RowBox[{"DeleteDuplicates", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", " ", 
            RowBox[{
             RowBox[{"Append", "[", 
              RowBox[{"glConstNeighboringCellIndexes", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], " ", "\[Rule]", " ", 
           RowBox[{"glConstSpringColors", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"s", ",", " ", 
            RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "5"}], "}"}]}], " ", "]"}], ",", "1"}], 
       "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Future", " ", "possible", " ", "maintainance", " ", 
     RowBox[{"TODOs", ":", "\[IndentingNewLine]", GridBox[{
        {
         RowBox[{
          RowBox[{
          "implement", " ", "a", " ", "min", " ", "separation", " ", "for", 
           " ", "the", " ", "equilibrium", " ", "mass", " ", "positions", " ",
            "too", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "as", " ", "done", " ", "for", " ", "the", " ", "lattice", " ", 
              "vectors"}], ")"}], ".", " ", "\[IndentingNewLine]", 
            "Trickier"}]}], ",", " ", 
          RowBox[{
          "since", " ", "that", " ", "should", " ", "be", " ", "based", " ", 
           "on", " ", "the", " ", "separations", " ", "in", " ", "the", " ", 
           "origin", " ", "cell"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
          "and", " ", "not", " ", "the", " ", "obsolute", " ", "separations", 
           " ", "of", " ", "the", " ", 
           RowBox[{"locators", ".", "\[IndentingNewLine]", "Even"}], " ", 
           "if", " ", "that", " ", "is", " ", "done"}], ",", " ", 
          RowBox[{"that", " ", 
           RowBox[{"doesn", "'"}], "t", " ", "mean", " ", "that", " ", "the", 
           " ", "scaling", " ", 
           RowBox[{"won", "'"}], "t", " ", "allow", " ", "for", " ", 
           "overlap", " ", "in", " ", "the", " ", "dynamic", " ", 
           RowBox[{"tab", "."}]}]}]},
        {
         RowBox[{
         "would", " ", "be", " ", "cool", " ", "to", " ", "make", " ", "qLoc",
           " ", "a", " ", "pair", " ", "of", " ", "Locators", " ", 
          RowBox[{"that", ":", "\[IndentingNewLine]", " ", 
           RowBox[{
           "trace", " ", "out", " ", "constrained", " ", "positions", " ", 
            "along", " ", "the", " ", "2", " ", "Pi", " ", "scaled", " ", 
            "reciprocal", " ", "lattice", " ", 
            RowBox[{"vectors", ".", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
              "returning", " ", "the", " ", "distance", " ", "from", " ", 
               "the", " ", "origin", " ", "of", " ", "each", " ", "of", " ", 
               "those", " ", "locators"}], ")"}]}]}]}]}]},
        {
         RowBox[{"a", " ", "message", " ", "box", " ", "on", " ", "user", " ", 
          RowBox[{"error", ":", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"-", " ", "when"}], " ", "an", " ", "angle", " ", "or", 
            " ", "distance", " ", "from", " ", "origin", " ", "change", " ", 
            "has", " ", "driven", " ", "a", " ", "reset", " ", "of", " ", 
            "the", " ", "lattice", " ", 
            RowBox[{"vectors", ".", "\[IndentingNewLine]", 
             RowBox[{"-", " ", "when"}]}], " ", "too", " ", "many", " ", "of",
             " ", "the", " ", "locators", " ", "have", " ", "been", " ", 
            "deleted", " ", "and", " ", "a", " ", "forced", " ", "reset", " ",
             "to", " ", "the", " ", "defaults", " ", 
            RowBox[{"occurs", "."}]}]}]}]},
        {
         RowBox[{
         "Can", " ", "the", " ", "frequency", " ", "qPlaneLoc", " ", 
          "LocatorPane", " ", "look", " ", "more", " ", "like", " ", 
          "Slider2D", " ", "in", " ", "the", " ", "dynamics", " ", "tab", " ",
           "for", " ", 
          RowBox[{"consistency", "?"}]}]},
        {
         RowBox[{
          RowBox[{
          "Am", " ", "using", " ", "a", " ", "calculated", " ", "value", " ", 
           "for", " ", "the", " ", "max", " ", "freq", " ", "for", " ", "the",
            " ", "freq", " ", "plot", " ", "intersection", " ", 
           RowBox[{"plane", ".", " ", "\[IndentingNewLine]", "Hardcoded"}], 
           " ", "this", " ", "to", " ", "magic", " ", "#", " ", 
           RowBox[{"that", "'"}], "s", " ", "out", " ", "of", " ", "the", " ",
            "graphic", " ", 
           RowBox[{"(", "23", ")"}]}], ",", " ", 
          RowBox[{
          "but", " ", "that", " ", "could", " ", "be", " ", "wrong", " ", 
           "for", " ", "some", " ", "params"}]}]},
        {
         RowBox[{
          RowBox[{
          "Scaling", " ", "of", " ", "the", " ", "masses", " ", "ended", " ", 
           "up", " ", "different", " ", "for", " ", "the", " ", "dynPlot", 
           " ", 
           RowBox[{"vs", ".", " ", "parameters"}], " ", 
           RowBox[{"tab", ".", " ", "\[IndentingNewLine]", "Hacked"}], " ", 
           "the", " ", "dynPlot", " ", "scaling", " ", "for", " ", "now"}], 
          ",", " ", 
          RowBox[{"to", " ", "be", " ", "a", " ", "bit", " ", 
           RowBox[{"closer", "."}]}]}]}
       },
       GridBoxDividers->{
        "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{True}}, "RowsIndexed" -> {}}]}]}], "\[IndentingNewLine]",
     "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "checkAgainstRange", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"checkAgainstRange", "::", "usage"}], " ", "=", " ", 
     "\"\<This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator.\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"checkAgainstRange", "[", 
      RowBox[{
      "v_", ",", "default_", ",", "lowerLimit_", ",", " ", "upperLimit_", ",",
        " ", 
       RowBox[{"typeFunc_", " ", ":", " ", "NumberQ"}]}], "]"}], " ", ":=", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"typeFunc", "[", "v", "]"}], ",", "v", ",", " ", 
           "default"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", "<=", " ", "upperLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", ">=", " ", "lowerLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "springPoints", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Based", " ", "on", " ", "my", " ", "ListLinePlot", " ", "answer", " ", 
     "posted", " ", 
     RowBox[{"in", ":", " ", 
      ButtonBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
           "a"}], "/", "37228"}], "/", "10"}]}],
       BaseStyle->"Hyperlink",
       ButtonData->{
         URL["http://mathematica.stackexchange.com/a/37228/10"], None},
       ButtonNote->"http://mathematica.stackexchange.com/a/37228/10"]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"springPoints", "::", "usage"}], " ", "=", " ", 
     "\"\<springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"springPoints", "[", " ", 
      RowBox[{"a12_List", ",", " ", 
       RowBox[{"n_Integer:", "8"}], ",", 
       RowBox[{"h_:", ".05"}], ",", " ", 
       RowBox[{"f_:", " ", "0.1"}]}], " ", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a1", ",", " ", "a2", ",", " ", "n1", ",", " ", "springDiff", ",", 
         " ", "nd", ",", " ", "r", ",", " ", "r1"}], " ", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", " ", "a2"}], "}"}], " ", "=", " ", "a12"}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"n1", " ", "=", " ", 
         RowBox[{"Norm", "[", "a1", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"springDiff", " ", "=", " ", 
         RowBox[{"a2", " ", "-", " ", "a1"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nd", " ", "=", " ", 
         RowBox[{"Norm", "[", "springDiff", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"ArcTan", " ", "@@", "  ", "springDiff"}], " ", "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"r1", " ", "=", " ", 
         RowBox[{"r", " ", ".", " ", 
          RowBox[{"{", 
           RowBox[{"n1", ",", " ", "0"}], "}"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", " ", 
                 RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                 RowBox[{"t", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}]}], ",", " ", 
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", " ", 
                  RowBox[{"2", " ", "Pi", " ", "n", " ", "t"}], "]"}]}]}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", " ", 
                 RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}], " ", "+", " ", 
                 RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", 
                 RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "indexLabel", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"indexLabel", "::", "usage"}], " ", "=", " ", 
     "\"\<\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indexLabel", " ", "=", " ", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#1", ",", "Italic"}], "]"}], ",", " ", "#2"}], "]"}], " ", 
      "&"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "kLable", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kLable", "::", "usage"}], " ", "=", " ", 
     "\"\<SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kLable", " ", "=", " ", 
     RowBox[{
      RowBox[{"Style", "[", " ", 
       RowBox[{
        RowBox[{"indexLabel", "[", 
         RowBox[{"\"\<k\>\"", ",", " ", "#"}], "]"}], ",", " ", 
        RowBox[{"FontColor", "\[Rule]", 
         RowBox[{"glConstSpringColors", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}]}], " ", "]"}], " ", "&"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "massColors", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"massColors", " ", ":=", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"{", " ", 
          RowBox[{
          "Blue", ",", " ", "Green", ",", " ", "Purple", ",", " ", "Red", ",",
            " ", "Orange"}], " ", "}"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", " ", "5"}], "]"}], " ", "+", " ", "1"}], "]"}], 
        " ", "]"}], " ", "&"}], " ", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "massLabel", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"massLabel", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"indexLabel", "[", 
         RowBox[{"\"\<m\>\"", ",", " ", "#"}], "]"}], ",", " ", 
        RowBox[{"massColors", "[", "#", "]"}]}], "]"}], " ", "&"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcLineTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcLineTable", "[", " ", 
      RowBox[{"n_List", ",", " ", "b_List", ",", " ", "i_List"}], " ", "]"}], 
     " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"first", ",", " ", "second"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"first", ",", " ", "second"}], "}"}], " ", "=", " ", "i"}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Line", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"n", "[", 
                 RowBox[{"[", "first", "]"}], "]"}]}], 
               RowBox[{"b", "[", 
                RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"j", " ", 
               RowBox[{"b", "[", 
                RowBox[{"[", "second", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"[", "first", "]"}], "]"}], 
               RowBox[{"b", "[", 
                RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"j", " ", 
               RowBox[{"b", "[", 
                RowBox[{"[", "second", "]"}], "]"}]}]}]}], "}"}], " ", 
           "\[IndentingNewLine]", "]"}], " ", "\[IndentingNewLine]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"-", 
             RowBox[{"n", "[", 
              RowBox[{"[", "second", "]"}], "]"}]}], ",", " ", 
            RowBox[{"n", "[", 
             RowBox[{"[", "second", "]"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcReciprocalBasis", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcReciprocalBasis", "::", "usage"}], " ", "=", " ", 
     "\"\<Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcReciprocalBasis", "[", "loc_List", "]"}], " ", ":=", " ", 
     RowBox[{"Inverse", "[", " ", 
      RowBox[{"Transpose", "[", " ", "loc", " ", "]"}], " ", "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "nMassesFromLocArray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nMassesFromLocArray", "[", "uLoc_", "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Dimensions", "[", "uLoc", "]"}], " ", "//", " ", "First"}], 
        ")"}], " ", "-", "2"}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "adjustedmoSel", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"adjustedmoSel", "[", 
      RowBox[{"rNumM_", ",", "mOrigInd_", ",", "m1Ind_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rNumM", ">", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"mOrigInd", "\[Equal]", "m1Ind"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"First", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", "rNumM", "]"}], ",", "m1Ind"}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", "mOrigInd"}], " ", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"First", "@", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Range", "[", "2", "]"}], ",", "m1Ind"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "constructKArrayElements", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constructKArrayElements", "[", " ", 
      RowBox[{"i_Integer", ",", " ", "j_Integer"}], "  ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "j", ",", " ", 
                RowBox[{"s", " ", 
                 RowBox[{"glConstNeighboringCellIndexes", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}]}], "}"}], " ", "\[Rule]", 
              " ", 
              RowBox[{"glConstKDefaults", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"s", ",", " ", 
               RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], ",",
              " ", 
             RowBox[{"{", 
              RowBox[{"n", ",", " ", "4"}], "}"}]}], " ", "]"}], ",", " ", 
           "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", " ", 
         RowBox[{
          RowBox[{"i", " ", "<", " ", "j"}], ",", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], " ", "\[Rule]", " ", 
             RowBox[{"glConstKDefaults", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}]}], "]"}], ",", " ", "a"}], " ",
          "]"}]}]}], " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "constructKArray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constructKArray", "[", " ", "r_Integer", " ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"constructKArrayElements", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "r"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "r"}], "}"}]}], "]"}], ",", " ", "2"}], "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnAlteredKArrayElements", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnAlteredKArrayElements", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "m2Ind_Integer", ",", 
       "ni_Integer", ",", "v_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"kA", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"glConstNeighboringCellIndexes", "[", 
               RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", "_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"glConstNeighboringCellIndexes", "[", 
               RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", "v"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"-", 
               RowBox[{"glConstNeighboringCellIndexes", "[", 
                RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", "_"}], "]"}],
           "\[RuleDelayed]", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"-", 
               RowBox[{"glConstNeighboringCellIndexes", "[", 
                RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", "v"}], 
           "]"}]}]}], "}"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnAlteredKarrayOriginElement", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnAlteredKarrayOriginElement", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "moInd_Integer", ",", "v_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "m1oSet", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m1oSet", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "moInd"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"kA", "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"m1oSet", ",", "_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Rule", "[", 
            RowBox[{"m1oSet", ",", "v"}], "]"}]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "selectVFromKarray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"To", " ", "refresh", " ", "k1"}], ",", "k2", ",", "k3", ",", 
     RowBox[{
     "k4", " ", "after", " ", "changing", " ", "m1Sel", " ", "or", " ", 
      RowBox[{"m2Sel", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"selectVFromKarray", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "m2Ind_Integer", ",", 
       "ni_Integer"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m1Ind", ",", "m2Ind", ",", 
         RowBox[{"glConstNeighboringCellIndexes", "[", 
          RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], "/.", "kA"}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "selectOriginVFromKarray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "To", " ", "refresh", " ", "k5", " ", "after", " ", "changing", " ", 
     "m1Sel", " ", "and", " ", "moSel"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"selectOriginVFromKarray", "[", 
      RowBox[{"kA_List", ",", "m1Ind_Integer", ",", "moInd_Integer"}], "]"}], 
     ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"{", 
           RowBox[{"m1Ind", ",", "moInd"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "/.", "kA"}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnKarrayForAdditionalMassIndex", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnKarrayForAdditionalMassIndex", "[", " ", 
      RowBox[{"kA_List", ",", "nmNew_Integer"}], " ", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "k2", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k2", " ", "=", " ", 
         RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"constructKArrayElements", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], ")"}], "/@",
             " ", 
            RowBox[{"(", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "nmNew"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", " ", "nmNew"}], "}"}]}], "]"}], ",", 
                 " ", "1"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Max", "[", "#", "]"}], " ", "\[Equal]", " ", 
                 "nmNew"}], " ", "&"}]}], "]"}], ")"}]}], ",", " ", "2"}], 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"kArray", ",", " ", "k2"}], "]"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kA", ",", " ", "k2"}], "}"}], ",", " ", "1"}], "]"}]}]}], 
      " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "resetLatticeVectorsIfAngleTooSmall", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"resetLatticeVectorsIfAngleTooSmall", "[", " ", 
      RowBox[{"uLoc_List", ",", "minAngle_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", " ", "=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"Normalize", "[", 
             RowBox[{"uLoc", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"uLoc", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"t", " ", ">", " ", 
            RowBox[{"Pi", "/", "2"}]}], ",", " ", 
           RowBox[{"Pi", "-", "t"}], ",", " ", "t"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"t", " ", "<", " ", "minAngle"}], ",", 
          "\[IndentingNewLine]", "glConstLocDefault", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uLoc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"uLoc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "projOpU", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOpU", "[", "v_List", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], ",", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "}"}]}], "}"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOp", "::", "usage"}], " ", "=", " ", 
     "\"\<given an input vector \!\(\*OverscriptBox[\(v\), \
\(\[RightVector]\)]\) = {\!\(\*SubscriptBox[\(v\), \(x\)]\), \
\!\(\*SubscriptBox[\(v\), \(y\)]\)}, compute the projection matrix operator \
along the unit vector in that direction.\n\n   projOp[{1, 0}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"1\", \"0\"},
{\"0\", \"0\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{0, 1}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"0\", \"0\"},
{\"0\", \"1\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{a,b}] // MatrixForm = \!\
\(\*Cell[TextData[Cell[BoxData[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{
FractionBox[
SuperscriptBox[\"a\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]},
{
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
SuperscriptBox[\"b\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}]],
CellChangeTimes->{{3.5990911441851797`*^9, 3.599091144641206*^9}, \
3.5990913830438423`*^9, 3.5990915191646276`*^9, 3.599091555028679*^9, \
3.599091735722014*^9, {3.599091916353346*^9, 3.599091928988068*^9}}]]]\)\n\
\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "projOp", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOp", "[", "v_List", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"projOpU", "[", "v", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"v", ".", " ", "v"}], ")"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "relativeDifferences", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"relativeDifferences", "::", "usage"}], " ", "=", " ", 
     "\"\<Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"relativeDifferences", "[", " ", 
      RowBox[{"r_List", ",", "mp_List", ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "mIndex1_Integer", ",", " ", "mIndex2_Integer", ",", " ", "n_List"}], 
        "}"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "d", ",", " ", "pOrigin", ",", " ", "pOther", ",", " ", "dn"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pOrigin", " ", "=", " ", 
         RowBox[{"mp", "[", 
          RowBox[{"[", " ", "mIndex1", " ", "]"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pOther", " ", "=", " ", 
         RowBox[{
          RowBox[{"mp", "[", 
           RowBox[{"[", " ", "mIndex2", " ", "]"}], "]"}], "+", " ", 
          RowBox[{"n", " ", ".", " ", "r"}]}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"pOther", " ", "-", " ", "pOrigin"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dn", " ", "=", " ", 
         RowBox[{"d", " ", ".", "d"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"dn", ",", " ", "pOrigin", ",", " ", "pOther", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"projOpU", "[", "d", "]"}], "/", "dn"}], "  ", 
           RowBox[{"(*", 
            RowBox[{"//", " ", "MatrixForm"}], "*)"}], ")"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calculateCouplings", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateCouplings", "::", "usage"}], " ", "=", " ", 
     "\"\<Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions.\>\""}], 
    " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateCouplings", "[", 
      RowBox[{"ld_List", ",", " ", "kA_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "t", ",", " ", "t1", ",", " ", "t2", ",", " ", "r", ",", " ", "mp", 
         ",", " ", "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", " ", "mp", ",", " ", "numberOfMasses"}], "}"}], 
         " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", " ", "\"\<mPosFirstCell\>\"", ",", 
            " ", "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"relativeDifferences", "[", 
              RowBox[{"r", ",", " ", "mp", ",", " ", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}]}], " ", "]"}], "&"}],
           "/@", " ", 
          RowBox[{"(", 
           RowBox[{"kA", "/.", " ", 
            RowBox[{"Rule", " ", "\[Rule]", " ", "List"}]}], ")"}]}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", "1"}], 
            "]"}], " ", "&"}], "/@", " ", "t"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"t1", " ", "=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Select", "[", " ", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "i"}], ")"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "\[NotEqual]", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], ")"}]}], " ", 
                 "&"}]}], "]"}], ")"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}]}], " ", "&"}]}], "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"the", " ", "rest", " ", "of", " ", "the", " ", 
          RowBox[{"permutations", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t2", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"#", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
                 "1"}], "]"}], " ", "&"}], "/@", " ", "t2"}]}], "}"}], ",", 
           " ", "1"}], "]"}]}], "  ", ";", "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Select", "[", " ", 
               RowBox[{"t2", ",", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                   "i"}], ")"}], " ", "&"}]}], "]"}], ")"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t2", ",", " ", "t1"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "spScaled", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spScaled", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1_List", ",", "s2_List"}], "}"}], ",", " ", "scaleKValue_", 
       ",", " ", "referenceSepSquared_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "ds", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ds", " ", "=", " ", 
         RowBox[{"s2", " ", "-", " ", "s1"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"springPoints", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2"}], "}"}], ",", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"12", " ", "scaleKValue", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"ds", ".", "ds"}], ")"}], "/", "referenceSepSquared"}],
              "]"}]}], "]"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "oneTermOfdynamicsMatrix", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneTermOfdynamicsMatrix", "::", "usage"}], " ", "=", " ", 
     "\"\<\!\(TraditionalForm\`\(grab\\\ data\\\ \(from : \\\ \
rawArrayOfMasses\), \\\ parameterLocatorDependencies, \
\[IndentingNewLine]\(\(couplingData[\([_]\)]\)[\([_]\)]\)[\([_]\)]\\\  = \\\ \
{k, \\\ j, \\\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \\\ \
\*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\\  + \\\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]
ex : \\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]
to\\\ form\\\ equations\\\ of\\\ the\\\ \(form : \
\[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\\  = \\\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\\  \[NotEqual] \\\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\\ \
\((\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\
\[RightVector]\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), \
SubscriptBox[\(m\), \(k\)]] - \\\ \
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(j\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), \
SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \*SubscriptBox[\(m\), \(j\)]\)]] \
\*SuperscriptBox[\(e\), \(I\\\ \((\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\\  . \\\ \
\*OverscriptBox[\(q\), \(\[RightVector]\)]\\\ )\)\)])\)\[IndentingNewLine]
Note\\\ that\\\ qVec\\\ here\\\ is\\\ intended\\\ to\\\ be\\\ an\\\ undefined\
\\\ global . \\\ \\\ Is\\\ there\\\ a\\\ way\\\ to\\\ do\\\ that\\\ \
\(\(programatically\)\(?\)\)\)\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneTermOfdynamicsMatrix", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "k_Integer", ",", " ", "j_Integer", ",", " ", "mVec_List", ",", " ", 
         "kS_", ",", " ", "_", ",", "_", ",", "_", ",", "proj_List"}], "}"}], 
       ",", " ", "r_List", ",", " ", "mk_", ",", " ", "epsilon_List", ",", 
       " ", "mA_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"kS", " ", 
       RowBox[{"proj", "  ", ".", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"epsilon", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "/", "mk"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"epsilon", "[", 
            RowBox[{"[", "j", "]"}], "]"}], 
           RowBox[{
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"mVec", " ", ".", " ", "r"}], ")"}], ".", " ", 
                 "qVec"}], ")"}]}], ")"}]}], "/", 
            RowBox[{"Sqrt", "[", " ", 
             RowBox[{"mk", " ", 
              RowBox[{"mA", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}]}]}]}], ")"}]}]}], 
      "  ", ")"}]}], "  ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "dynamicsMatrix", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsMatrix", "[", 
      RowBox[{"ld_List", ",", " ", "cd_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cdFlatAndSorted", ",", " ", "r", ",", " ", "res", ",", " ", 
         "epsilon", ",", " ", "m", ",", "mScalarArray", ",", " ", 
         "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cdFlatAndSorted", " ", "=", " ", 
         RowBox[{"SplitBy", "[", " ", 
          RowBox[{
           RowBox[{"Sort", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"cd", ",", " ", "2"}], "]"}]}], " ", ",", " ", "First"}],
           " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "mScalarArray", ",", " ", "numberOfMasses"}], 
          "}"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", 
            " ", "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}],
         " ", ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Here", " ", 
            SubscriptBox[
             OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], " ", 
            RowBox[{"(", 
             RowBox[{"=", 
              RowBox[{"epsilon", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ")"}], " ", "is", " ", 
            "represented", " ", "as", " ", "a", " ", "2", "x", 
            RowBox[{"(", 
             RowBox[{"2", "N"}], ")"}], " ", "matrix", " ", "with", " ", 
            "the", " ", "vector", " ", "factored", " ", 
            RowBox[{"out", ".", "  ", "For"}], " ", "example", " ", "with", 
            " ", "N"}], " ", "=", " ", "3"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Epsilon]", "\[RightVector]"], "1"], "=", " ", 
           RowBox[{
            RowBox[{
             TagBox[
              RowBox[{"(", "\[NoBreak]", GridBox[{
                 {"1", "0", "0", "0", "0", "0"},
                 {"0", "1", "0", "0", "0", "0"}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
              Function[BoxForm`e$, 
               MatrixForm[BoxForm`e$]]], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "This", " ", "will", " ", "be", " ", 
             "pre"}], "-", 
            RowBox[{
            "multiplied", " ", "by", " ", "a", " ", "2", "x2", " ", 
             "projection", " ", 
             RowBox[{"matrix", ".", "\[IndentingNewLine]", "The"}], " ", 
             "whole", " ", "thing", " ", "should", " ", "be", " ", 
             "logically", " ", "treated", " ", "as", " ", "if", " ", "it", 
             " ", "is", " ", "post"}], "-", 
            RowBox[{
            "multiplied", " ", "by", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", Cell[TextData[Cell[BoxData[
              TagBox[
               RowBox[{"(", "\[NoBreak]", GridBox[{
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "2"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "2"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "2"}]]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
               Function[BoxForm`e$, 
                MatrixForm[BoxForm`e$]]]],
              
              CellChangeTimes->{{3.600871330362259*^9, 
               3.6008713538916054`*^9}}]]]}]}]}]}], "\[IndentingNewLine]", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"epsilon", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", " ", 
            RowBox[{"2", " ", "numberOfMasses"}], " ", "]"}], ",", "2"}], 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", " ", 
             RowBox[{
              RowBox[{"Total", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"oneTermOfdynamicsMatrix", "[", 
                   RowBox[{"#", ",", " ", "r", ",", " ", 
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "epsilon", ",", 
                    " ", "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{"cdFlatAndSorted", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ")"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], "]"}], " ",
             "//", " ", "Flatten"}], ",", " ", 
           RowBox[{"2", " ", "numberOfMasses"}]}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", " ", "/.", " ", 
          RowBox[{"qVec", " ", "\[Rule]", " ", "#"}]}], " ", "&"}]}]}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{"cdFlatAndSorted", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{"mScalarArray", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{
         RowBox[{
          RowBox[{"oneTermOfdynamicsMatrix", "[", 
           RowBox[{"#", ",", " ", "r", ",", " ", 
            RowBox[{"mScalarArray", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "epsilon", ",", " ", 
            "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"cdFlatAndSorted", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", "res"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", "epsilon"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"oneTermOfdynamicsMatrix", "[", " ", 
            RowBox[{
            "parameterLocatorDependencies", ",", " ", "couplingData"}], " ", 
            "]"}], "[", 
           RowBox[{"#", ",", " ", "r", ",", 
            RowBox[{"mScalarArray", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "epsilon", ",", 
            "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcDynamics", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcDynamics", "::", "usage"}], " ", "=", " ", 
     "\"\<a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \
\(k\)]\),\!\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for \
each of the system eigenvalues, when evaluated at qLoc.\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", ":", "\n", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ld", ",", " ", "cd", ",", " ", "basisAndMassPoints", ",", " ", 
         "kArray", ",", " ", "matrix", ",", " ", "dynamics", ",", " ", 
         "qPoint", ",", " ", "omegaIndex"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"basisAndMassPoints", " ", "=", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}]}], " ", "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ld", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{"basisAndMassPoints", ",", " ", "1", ",", 
           RowBox[{"{", "10", "}"}]}], " ", "]"}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cd", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"ld", ",", " ", "kArray"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPoint", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], "/", 
          "2"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"ld", ",", " ", "cd"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"calcDynamics", "[", " ", 
            RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}], " ", "//",
            " ", "First"}], " ", "//", " ", "TableForm"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcDynamics", "[", "mAtQ_List", "]"}], " ", ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Eigensystem", "[", " ", "mAtQ", " ", "]"}], " ", "//", " ", 
         "Transpose"}], ")"}]}], ")"}]}], "  ", ";"}], "\n", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "frequencyPlotCalc", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"frequencyPlotCalc", "::", "usage"}], " ", "=", " ", 
     "\"\<frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"frequencyPlotCalc", "[", 
      RowBox[{"ld_List", ",", "m_", ",", "meshSz_Integer"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eigTable2D", ",", " ", "eigTable1D", ",", " ", "qMax", ",", " ", 
         "omegaPointList2D", ",", " ", "omegaPointList1D", ",", " ", "range", 
         ",", " ", "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"qMax", ",", " ", "numberOfMasses"}], "}"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<qMaxVec\>\"", ",", "\"\<numberOfMasses\>\""}], "}"}], 
          " ", "/.", " ", "ld"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"eigTable2D", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"Table", "[", "  ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"qx", ",", " ", "qy"}], "}"}], " ", ",", 
                RowBox[{"Eigenvalues", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", " ", 
                   RowBox[{"{", 
                    RowBox[{"qx", ",", " ", "qy"}], "}"}], "  ", "]"}], " ", "//",
                   " ", "N"}], " ", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"qx", ",", " ", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"qMax", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/", " ", "meshSz"}]}], 
               "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"qy", ",", " ", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"qMax", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", " ", "meshSz"}]}], 
               "}"}]}], " ", "]"}], " ", "]"}], ",", "1"}], "]"}]}], " ", ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"omegaPointList2D", "[", "nn_", "]"}], " ", ":=", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "nn", "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
          " ", "eigTable2D"}]}], "  ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"range", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "numberOfMasses"}], ")"}], " ", "//", " ", 
           "Range"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot3D", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"omegaPointList2D", "[", "#", "]"}], " ", "&"}], "/@", 
           " ", "range"}], ",", " ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}], " ", ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(q\), \(x\)]\)\>\"", ",", " ", 
             "\"\<\!\(\*SubscriptBox[\(q\), \(y\)]\)\>\""}], "}"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\n", " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "showFreqPlot", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showFreqPlot", "::", "usage"}], " ", "=", " ", 
     "\"\<showFreqPlot[ qPlaneLoc, freqPlot ]\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showFreqPlot", "[", 
      RowBox[{"qpl_List", ",", " ", "freqPlotData_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aa", ",", " ", "bb"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"aa", ",", " ", "bb"}], "}"}], " ", "=", "  ", "qpl"}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"freqPlotData", ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", " ", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
               "  ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "23"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "23"}], "}"}]}], "}"}],
              "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "pointsTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pointsTable", "::", "usage"}], " ", "=", " ", 
     "\"\<Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage.\>\""}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pointsTable", "[", " ", 
      RowBox[{"massPosition_List", ",", " ", "latticeOrigins_List"}], " ", 
      "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", " ", "+", " ", "massPosition"}], ")"}], " ", "&"}], "/@",
        " ", "latticeOrigins"}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "findLatticeCells", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findLatticeCells", "::", "usage"}], " ", "=", " ", 
     "\"\<All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findLatticeCells", "[", 
      RowBox[{"latticeVectors_List", ",", "limits_List"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b", ",", "sol", ",", " ", "oneSolution"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", " ", "b"}], "}"}], " ", "=", " ", 
         "latticeVectors"}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Rationalize", " ", "to", " ", 
          RowBox[{"fix", ":", " ", "to", ":", " ", 
           ButtonBox[
            RowBox[{
             RowBox[{"http", ":"}], "//", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], 
                 "/", "questions"}], "/", "6055"}], "/", "how"}], "-", "to", 
              "-", "get", "-", "rid", "-", "of", "-", "warnings", "-", "when",
               "-", "using", "-", "solve", "-", "on", "-", "an", "-", 
              "equation", "-", "with", "-", "inexact", "-", "coeffici"}]}],
            BaseStyle->"Hyperlink",
            ButtonData->{
              URL[
              "http://mathematica.stackexchange.com/questions/6055/how-to-get-\
rid-of-warnings-when-using-solve-on-an-equation-with-inexact-coeffici"], None},
            
            ButtonNote->
             "http://mathematica.stackexchange.com/questions/6055/how-to-get-\
rid-of-warnings-when-using-solve-on-an-equation-with-inexact-coeffici"]}]}], 
         " ", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"oneSolution", "[", "o_", "]"}], " ", ":=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "m"}], "}"}], " ", "/.", 
          RowBox[{"Solve", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Rationalize", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "<", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", " ", "o"}], ")"}], " ", 
                 ".", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", " ", "o"}], ")"}], " ", 
                 ".", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}], " ", "<", " ", 
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "<", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", "o"}], ")"}], " ", ".", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", "o"}], ")"}], " ", ".", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], " ", "<", " ", 
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], " ", "]"}], 
            "\[IndentingNewLine]", ",", " ", 
            RowBox[{"{", 
             RowBox[{"n", ",", "m"}], "}"}], ",", " ", "Integers"}], 
           "]"}]}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sol", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"oneSolution", "[", "#", "]"}], " ", "&"}], "/@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "a", ",", " ", "b", ",",
                 " ", 
                RowBox[{"a", "+", "b"}]}], "}"}]}], " ", ",", "1"}], "]"}], 
           " ", "//", " ", "Sort"}], " ", "//", " ", "DeleteDuplicates"}]}], 
        " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"a", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
             RowBox[{"b", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], " ", "&"}], "/@", 
         " ", "sol"}]}]}], " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "locDependent", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"locDependent", "::", "usage"}], " ", "=", " ", 
     "\"\<Locator dependent calculations (i.e. based on the mass positions \
and the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"locDependent", "[", " ", 
      RowBox[{"uLoc_List", ",", "numMasses_Integer", ",", " ", "rma_List"}], 
      " ", "]"}], "  ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "m", ",", "latticeBasis", ",", " ", "numberLatticeLinesToDisplay", 
         ",", "reciprocalBasis", ",", "mObliqueComponents", ",", " ", 
         "mPosFirstCell", ",", " ", "reciprocalNorms", ",", " ", 
         "allLatticeCellOriginsInDynPlotRange", ",", " ", "cellOrigins"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"latticeBasis", " ", "=", 
         RowBox[{"Take", "[", 
          RowBox[{"uLoc", ",", " ", "2"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"uLoc", ",", " ", "2"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numberLatticeLinesToDisplay", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Ceiling", "[", "  ", 
             RowBox[{"Abs", "[", 
              RowBox[{"glConstWindowHalfWidth", "/", " ", 
               RowBox[{
                RowBox[{"latticeBasis", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], " ", "&"}], 
           " ", "/@", " ", 
           RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"reciprocalBasis", " ", "=", " ", 
         RowBox[{
         "calcReciprocalBasis", "[", " ", "latticeBasis", " ", "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"reciprocalNorms", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"reciprocalBasis", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
           " ", 
           RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"mObliqueComponents", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", " ", "i", " ", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"reciprocalBasis", "[", 
             RowBox[{"[", " ", "j", " ", "]"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numMasses"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "2"}], "}"}]}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mPosFirstCell", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", "-", " ", 
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{"mObliqueComponents", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", ".", " ", 
              "latticeBasis"}]}], " ", ")"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", "numMasses", "]"}]}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"allLatticeCellOriginsInDynPlotRange", " ", "=", " ", 
         RowBox[{
          RowBox[{"findLatticeCells", "[", 
           RowBox[{"latticeBasis", ",", "glConstDynPlotRange"}], "]"}], " ", "//",
           " ", "Transpose"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"cellOrigins", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
          "allLatticeCellOriginsInDynPlotRange", " ", "//", " ", "Last"}], 
          ")"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<mScalarArray\>\"", " ", "\[Rule]", " ", "rma"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<numberOfMasses\>\"", " ", "\[Rule]", " ", "numMasses"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<latticeBasis\>\"", " ", "\[Rule]", " ", "latticeBasis"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeNorms\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"latticeBasis", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeUnitVectors\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"latticeBasis", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<numberLatticeLinesToDisplay\>\"", "\[Rule]", " ", 
           "numberLatticeLinesToDisplay"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeCellOriginIndexes\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
            "allLatticeCellOriginsInDynPlotRange", " ", "//", " ", "First"}], 
            ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<reciprocalBasis\>\"", "\[Rule]", " ", "reciprocalBasis"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
          "\"\<reciprocalNorms\>\"", "\[Rule]", " ", "reciprocalNorms"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"\"\<qMaxVec\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "reciprocalNorms"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<mObliqueComponents\>\"", "\[Rule]", " ", 
           "mObliqueComponents"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<mPosFirstCell\>\"", "\[Rule]", " ", "mPosFirstCell"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<pointsDataTable\>\"", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"pointsTable", "[", 
                RowBox[{
                 RowBox[{"mPosFirstCell", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", " ", "cellOrigins"}], 
                "]"}], ")"}], " ", "&"}], "/@", " ", 
             RowBox[{"Range", "[", "numMasses", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<lineTable\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"calcLineTable", "[", " ", 
               RowBox[{
               "numberLatticeLinesToDisplay", ",", " ", "latticeBasis", ",", 
                " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
             RowBox[{"Permutations", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "plotSprings", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotSprings", "::", "usage"}], " ", "=", " ", 
     "\"\<Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotSprings", "[", 
      RowBox[{
      "uLoc_List", ",", " ", "ld_List", ",", "cd_List", ",", "m1Ind_Integer", 
       ",", " ", "m2Ind_Integer", ",", " ", "moInd_Integer"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "aLoc", ",", " ", "bLoc", ",", "mLoc", ",", "pointsList", ",", 
         "latticeBasis", ",", "reciprocalBasis", ",", "pointsDataTable", ",", 
         " ", "numberLatticeLinesToDisplay", ",", " ", "lines", ",", " ", 
         "cOrigin", ",", " ", "cN", ",", " ", "g", ",", " ", "mScalarArray", 
         ",", " ", "numberOfMasses", ",", " ", "scaleLoc"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"latticeBasis", " ", "=", " ", 
         RowBox[{"Take", "[", " ", 
          RowBox[{"uLoc", ",", " ", "2"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"aLoc", " ", "=", " ", 
         RowBox[{"uLoc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"bLoc", " ", "=", " ", 
         RowBox[{"uLoc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"scaleLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{"aLoc", ".", "aLoc"}], "  ", "+", " ", 
          RowBox[{"bLoc", " ", ".", "bLoc"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "mLoc", ",", "reciprocalBasis", ",", "pointsDataTable", ",", 
           "numberLatticeLinesToDisplay", ",", " ", "lines", ",", " ", 
           "mScalarArray", ",", " ", "numberOfMasses"}], "}"}], "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mPosFirstCell\>\"", ",", "\"\<reciprocalBasis\>\"", ",", 
            "\"\<pointsDataTable\>\"", ",", 
            "\"\<numberLatticeLinesToDisplay\>\"", ",", " ", 
            "\"\<lineTable\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", " ", 
            "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pointsList", "[", "n_Integer", "]"}], " ", ":=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"massColors", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
           ",", 
           RowBox[{"PointSize", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mScalarArray", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "/", "glConstMMax"}], "/", 
              "500"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", " ", "#", " ", "]"}], " ", "&"}], " ", "/@",
             " ", 
            RowBox[{"pointsDataTable", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"massLabel", "[", " ", "n", "]"}], ",", 
             RowBox[{
              RowBox[{"mLoc", "[", 
               RowBox[{"[", "n", "]"}], "]"}], " ", "+", " ", 
              "glConstTextDisplayOffsetHack"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"cOrigin", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"cd", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "m1Ind", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{"m1Ind", ",", " ", "moInd"}], "}"}]}], " ", "&"}]}], 
          " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"cN", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"cd", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "m1Ind", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", 
             RowBox[{"{", 
              RowBox[{"m1Ind", ",", " ", "m2Ind"}], "}"}]}], "&"}]}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"spScaled", "[", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"6", ",", "7"}], "}"}]}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "glConstKMax"}], ",", 
               " ", "scaleLoc"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                "glConstSpringColorsByN"}], ")"}]}]}], " ", "]"}], " ", "&"}],
           "/@", " ", "cN"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", " ", 
         RowBox[{
          RowBox[{"numberOfMasses", " ", ">", " ", "1"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"g", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"spScaled", "[", 
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}]}], "]"}], ",", " ", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "/", "glConstKMax"}], ",",
                   " ", "scaleLoc"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                   "glConstSpringColorsByN"}], ")"}]}]}], " ", "]"}], " ", 
              "&"}], "/@", " ", "cOrigin"}]}], "]"}], ","}], " ", "]"}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", " ", 
                 RowBox[{"lines", "\[IndentingNewLine]", ",", "Blue", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"reciprocalBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                   RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]", 
                  ",", "Thick", ",", 
                  RowBox[{"Arrowheads", "[", "0.05", "]"}], 
                  "\[IndentingNewLine]", ",", "Red", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                   RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]", 
                  ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"aLoc", "/", "2"}], " ", "+", " ", 
                    "glConstTextDisplayOffsetHack"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"bLoc", "/", "2"}], " ", "+", " ", 
                    "glConstTextDisplayOffsetHack"}]}], "]"}]}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"This", " ", "polygon", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "with", " ", "doubling", " ", "of", " ", "PlotRange"}], 
                    " ", "\[Rule]", " ", 
                    RowBox[{"glConstDynPlotRange", " ", "below"}]}], ")"}], 
                   " ", "was", " ", "to", " ", "visually", " ", "test", " ", 
                   "the", " ", "Solve", " ", "logic", " ", "used", " ", "to", 
                   " ", "find", " ", "all", " ", "the", " ", "lattice", " ", 
                   "cells", " ", "contained", " ", "or", " ", "just", " ", 
                   "outside", " ", "of", " ", "the", " ", 
                   RowBox[{"region", "."}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{",", 
                   RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", "Gray"}]}], "\[IndentingNewLine]",
                    ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pointsList", "[", "#", "]"}], " ", "&"}], "/@", 
                 " ", 
                 RowBox[{"Range", "[", "numberOfMasses", "]"}]}]}], 
               "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"PlotRange", " ", "\[Rule]", " ", 
              RowBox[{"(*", "2", "*)"}], " ", "glConstDynPlotRange"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "g"}], 
          "\[IndentingNewLine]", "}"}], " ", "]"}]}]}], " ", 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "dynamicsGraphicsTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsGraphicsTable", "::", "usage"}], " ", "=", " ", 
     "\"\<Calculate a time indexed table of positions for each of the \
masses\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Example", ":", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ld", ",", " ", "cd", ",", " ", "basisAndMassPoints", ",", " ", 
         "kArray", ",", " ", "matrix", ",", " ", "dynamics", ",", " ", "sc", 
         ",", " ", "qPoint", ",", " ", "omegaIndex", ",", "  ", "lines", ",", 
         "mScalarArray", ",", " ", "numberOfMasses", ",", " ", "pointsData", 
         ",", "dynAtOmegaIndex", ",", " ", "dynMesh", ",", "dynTable"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"basisAndMassPoints", " ", "=", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}]}], " ", "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ld", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{"basisAndMassPoints", ",", " ", "1", ",", 
           RowBox[{"{", "10", "}"}]}], " ", "]"}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cd", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"ld", ",", " ", "kArray"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sc", " ", "=", " ", "0.25"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPoint", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], "/", 
          "2"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"ld", ",", " ", "cd"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{"calcDynamics", "[", " ", 
          RowBox[{"matrix", "[", " ", "qPoint", " ", "]"}], " ", "]"}]}], " ",
         ";", "\[IndentingNewLine]", 
        RowBox[{"omegaIndex", " ", "=", " ", "1"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynAtOmegaIndex", " ", "=", " ", 
         RowBox[{"dynamics", "[", 
          RowBox[{"[", "omegaIndex", "]"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynMesh", " ", "=", " ", "30"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynTable", " ", "=", " ", 
         RowBox[{"dynamicsGraphicsTable", "[", 
          RowBox[{
          "ld", ",", " ", "dynAtOmegaIndex", ",", " ", "sc", ",", " ", 
           "qPoint", ",", " ", "dynMesh"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"With", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"showDynPlot", "[", " ", 
            RowBox[{"dynTable", ",", " ", "n"}], " ", "]"}]}], " ", "]"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Animate", "[", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"showDynPlot", "[", " ", 
           RowBox[{"dynTable", ",", " ", "n"}], " ", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "1", ",", " ", "dynMesh", ",", " ", "1"}], 
           "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsGraphicsTable", "[", 
      RowBox[{
      "ld_List", ",", " ", "dynAtOmegaIndex_List", ",", " ", "sc_", ",", " ", 
       "qPoint_List", ",", " ", "dynMesh_Integer"}], " ", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pointsDataTable", ",", "e", ",", " ", "omega", ",", " ", "lines", 
         ",", " ", "nu", ",", " ", "a", ",", "b", ",", " ", "mScalarArray", 
         ",", " ", "numberOfMasses", ",", " ", "latticeCellOriginIndexes", 
         ",", " ", "mPosFirstCell", ",", "pointsData"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", " ", "b"}], "}"}], ",", "pointsDataTable", ",", 
           "lines", ",", " ", "mScalarArray", ",", " ", "numberOfMasses", ",",
            " ", "latticeCellOriginIndexes", ",", " ", "mPosFirstCell"}], 
          "}"}], "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", "\"\<pointsDataTable\>\"", ",", " ", 
            "\"\<lineTable\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", " ", 
            "\"\<numberOfMasses\>\"", ",", " ", 
            "\"\<latticeCellOriginIndexes\>\"", ",", " ", 
            "\"\<mPosFirstCell\>\""}], "}"}], "  ", "/.", " ", "ld"}]}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"omega", ",", " ", "e"}], "}"}], " ", "=", " ", 
         "dynAtOmegaIndex"}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"e", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{"e", ",", "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nu", " ", "=", " ", 
         RowBox[{"2", " ", "Pi", " ", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"omega", " ", "\[Equal]", " ", "0"}], ",", " ", "1", ",", 
            " ", 
            RowBox[{"1", "/", "omega"}]}], "]"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pointsData", " ", ":=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"b", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
              "+", " ", 
              RowBox[{"mPosFirstCell", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "\[IndentingNewLine]", 
              "+", " ", 
              RowBox[{"sc", " ", 
               RowBox[{"Re", "[", " ", 
                RowBox[{
                 RowBox[{"e", "[", 
                  RowBox[{"[", " ", "k", " ", "]"}], "]"}], " ", 
                 RowBox[{"E", "^", 
                  RowBox[{"(", 
                   RowBox[{"I", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"qPoint", " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"b", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ")"}]}], "  ", 
                    "-", " ", 
                    RowBox[{"nu", " ", "tau"}]}], " ", ")"}]}], ")"}]}]}], 
                " ", "]"}]}]}], " ", "\[IndentingNewLine]", "&"}], "/@", " ", 
            "latticeCellOriginIndexes"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "numberOfMasses"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"tau", ",", "0", ",", "1", ",", 
             RowBox[{"1", "/", "dynMesh"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", " ", 
         RowBox[{
         "pointsData", ",", " ", "mScalarArray", ",", "numberOfMasses", ",", 
          "lines", ",", "dynMesh"}], " ", "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "showDynPlot", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showDynPlot", "::", "usage"}], " ", "=", " ", 
     "\"\<showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showDynPlot", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
        "pointsData_List", ",", " ", "mScalarArray_List", ",", 
         "numberOfMasses_Integer", ",", "lines_List", ",", " ", 
         "dynMesh_Integer"}], " ", "}"}], ",", " ", "n_"}], " ", "]"}], " ", ":=",
      " ", 
     RowBox[{"Show", "[", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"pointsData", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "n", "]"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{
              "PlotRange", " ", "\[Rule]", " ", "glConstDynPlotRange"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}], 
              "\[IndentingNewLine]", ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"PointSize", "[", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "glConstMMax"}], "/",
                     "350"}], "]"}], "]"}], ",", 
                 RowBox[{"massColors", "[", "k", "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"k", ",", "numberOfMasses"}], "}"}]}], "]"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{
            "{", "\[IndentingNewLine]", "lines", "\[IndentingNewLine]", "}"}],
             "]"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
         "}"}], ",", " ", "1"}], "]"}], "\[IndentingNewLine]", "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601384568255503*^9, 3.6013846068957133`*^9}, {
   3.601384697696907*^9, 3.6013847654097795`*^9}, 3.601385370746403*^9, {
   3.601385703897458*^9, 3.6013858671947985`*^9}, {3.6013859369007854`*^9, 
   3.6013862565130663`*^9}, {3.601386287618845*^9, 3.601386609852276*^9}, 
   3.6013883021340685`*^9, {3.601388339834225*^9, 3.6013883634195743`*^9}, 
   3.6013895576548805`*^9, 3.6013897858849344`*^9, {3.6013899175164633`*^9, 
   3.6013899237438197`*^9}, {3.6013902884636803`*^9, 3.601390307373762*^9}, {
   3.6013903606908116`*^9, 3.6013903655340886`*^9}, {3.6013904046453257`*^9, 
   3.6013904283296804`*^9}, {3.6013906600559344`*^9, 3.601390689104596*^9}, {
   3.601390728076825*^9, 3.6013907681771183`*^9}, 3.6013908182919846`*^9, {
   3.601390891800189*^9, 3.601390932180499*^9}, {3.6013909695316353`*^9, 
   3.6013909758089943`*^9}, {3.6013910645760717`*^9, 3.601391320952736*^9}, {
   3.601391435270274*^9, 3.6013916772021117`*^9}, 3.6013917100099883`*^9, {
   3.6013917417488036`*^9, 3.601391758067737*^9}, {3.6013919250272865`*^9, 
   3.601391931312646*^9}, 3.601391980636467*^9, {3.6013920515635242`*^9, 
   3.6013920860454965`*^9}, {3.601392228344635*^9, 3.6013922300747347`*^9}, {
   3.6013922885550795`*^9, 3.6013923711148014`*^9}, {3.601392403747668*^9, 
   3.601392429697152*^9}, {3.601392460009886*^9, 3.6013924618869934`*^9}, 
   3.601392495188898*^9, {3.6013925358982267`*^9, 3.60139256568093*^9}, {
   3.60139267443215*^9, 3.60139267687029*^9}, {3.601392795672085*^9, 
   3.601392812691058*^9}, {3.601487330343955*^9, 3.6014874916991835`*^9}, {
   3.601487744991671*^9, 3.6014877935674496`*^9}, {3.60148964525436*^9, 
   3.6014896667695904`*^9}, {3.6014911727117257`*^9, 3.6014912011403513`*^9}, 
   3.6014913920092688`*^9, {3.6015049201900363`*^9, 3.601504921465109*^9}, {
   3.6015049694438534`*^9, 3.6015051088448267`*^9}, 3.601510158678661*^9, {
   3.601510341001089*^9, 3.6015103715238347`*^9}, {3.6015104088279686`*^9, 
   3.6015107342535815`*^9}, {3.6015107662544117`*^9, 
   3.6015107759769683`*^9}, {3.6015111875295076`*^9, 3.601511306315302*^9}, {
   3.601512394495542*^9, 3.6015124103054466`*^9}, {3.6015124586622124`*^9, 
   3.601512461037348*^9}, {3.6015125348575706`*^9, 3.601512551233507*^9}, {
   3.601512837974908*^9, 3.601512840824071*^9}, 3.6015519253794203`*^9, {
   3.60155212137263*^9, 3.601552138440606*^9}, {3.6015928398373117`*^9, 
   3.6015928406963606`*^9}, {3.601592972262886*^9, 3.601593035706515*^9}, {
   3.601593106344555*^9, 3.6015931439477057`*^9}, {3.601593175770526*^9, 
   3.6015931831749496`*^9}, 3.6015932402212124`*^9, 3.6015933437151318`*^9, {
   3.60159339980434*^9, 3.6015934133541145`*^9}, {3.601593445458951*^9, 
   3.601593483192109*^9}, {3.601593515955983*^9, 3.6015935487328577`*^9}, 
   3.601595231242092*^9, 3.601595401817848*^9, {3.60159658197935*^9, 
   3.6015965875836706`*^9}, 3.601596631546185*^9},
 CellID->454600298]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tick", ";", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"This", " ", 
        RowBox[{"If", "[", "]"}], " ", "is", " ", "effectively", " ", "my", 
        " ", "Initialization"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "}"}], " ", 
         RowBox[{"block", ".", "  ", "Done"}], " ", "with", " ", "a", " ", 
         "variable", " ", "so", " ", "that", " ", "copies", " ", "of", " ", 
         "the", " ", "output", " ", "cell", " ", 
         RowBox[{"won", "'"}], "t", " ", "re"}], "-", 
        RowBox[{"execute", " ", "their", " ", "Initialization", " ", 
         RowBox[{"cells", ".", "  ", "This"}], " ", "allows", " ", 
         "\"\<interesting\>\"", " ", "settings", " ", "to", " ", "be", " ", 
         "maintained", " ", "per"}], "-", 
        RowBox[{
        "copy", " ", "of", " ", "the", " ", "output", " ", "cell"}]}]}], ",", 
      " ", 
      RowBox[{
      "but", " ", "still", " ", "provide", " ", "an", " ", "Initialization", 
       " ", "block", " ", "for", " ", "the", " ", "primary", " ", "output", 
       " ", 
       RowBox[{"cell", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", " ", 
    RowBox[{"If", " ", "[", " ", 
     RowBox[{"bInitDefaults", ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"glConstLocDefault", ",", " ", "mLocDefault"}], "}"}], 
           ",", " ", "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{
          "u", ",", " ", "rawNumberOfMasses", ",", "rawArrayOfMasses"}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "n", "}"}], ",", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", "2"}], " ", ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"n", "\[LessEqual]", "rawNumberOfMasses"}], ",", 
             RowBox[{
              RowBox[{"kArray", " ", "=", " ", 
               RowBox[{"returnKarrayForAdditionalMassIndex", "[", 
                RowBox[{"kArray", ",", "n"}], "]"}]}], " ", ";", " ", 
              RowBox[{"n", "++"}]}]}], "]"}]}]}], " ", "]"}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"qLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\"\<qMaxVec\>\"", " ", "/.", " ", 
            "parameterLocatorDependencies"}], ")"}], "/", "2"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPlaneLoc", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"couplingData", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", "kArray"}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshMatrix", ":", " ", 
           RowBox[{"dependent", " ", "on"}], ":", " ", 
           "parameterLocatorDependencies"}], ",", " ", "couplingData"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", "couplingData"}], 
          " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshDynamics", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "matrix"}]}], ",", " ", 
          "qLoc", ","}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{"calcDynamics", "[", " ", 
          RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}]}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshDynPlot", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "dynamics"}]}], ",", " ", 
          "omegaIndex", ",", " ", "scale"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dynPlot", " ", "=", " ", 
         RowBox[{"dynamicsGraphicsTable", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", 
           RowBox[{"dynamics", "[", 
            RowBox[{"[", "omegaIndex", "]"}], "]"}], ",", " ", "scale", ",", 
           " ", "qLoc", ",", " ", "dynMeshSize"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshFreqPlot", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "matrix"}]}], ",", " ", 
          "freqMeshSize"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"freqPlot", " ", "=", " ", 
         RowBox[{"frequencyPlotCalc", "[", " ", 
          RowBox[{
          "parameterLocatorDependencies", ",", " ", "matrix", ",", " ", 
           "freqMeshSize"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bInitDefaults", " ", "=", " ", "False"}], " ", ";"}], 
       "\[IndentingNewLine]", ")"}], ","}], "]"}], " ", ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "@", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"tabNumber", " ", "\[Equal]", " ", "dynTab"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{"bRefreshMatrix", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"matrix", " ", "=", " ", 
               RowBox[{"dynamicsMatrix", "[", " ", 
                RowBox[{
                "parameterLocatorDependencies", ",", " ", "couplingData"}], 
                " ", "]"}]}], " ", ";", 
              RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
              RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", ";", 
              " ", 
              RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
             ")"}], ","}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{"bRefreshDynamics", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"dynamics", " ", "=", " ", 
               RowBox[{"calcDynamics", "[", " ", 
                RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}]}], 
              " ", ";", 
              RowBox[{"bRefreshDynamics", " ", "=", " ", "False"}], " ", ";", 
              RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}]}], ")"}], 
            ","}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{"bRefreshDynPlot", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"dynPlot", " ", "=", " ", 
               RowBox[{"dynamicsGraphicsTable", "[", " ", 
                RowBox[{"parameterLocatorDependencies", ",", " ", 
                 RowBox[{"dynamics", "[", 
                  RowBox[{"[", "omegaIndex", "]"}], "]"}], ",", " ", "scale", 
                 ",", " ", "qLoc", ",", "dynMeshSize"}], " ", "]"}]}], " ", 
              ";", 
              RowBox[{"bRefreshDynPlot", " ", "=", " ", "False"}]}], ")"}], 
            ","}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"showDynPlot", "[", " ", 
           RowBox[{"dynPlot", ",", " ", "tauSliderValue"}], " ", "]"}]}], 
         "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tabNumber", " ", "\[Equal]", " ", "freqTab"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", " ", 
             RowBox[{"bRefreshMatrix", ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"matrix", " ", "=", " ", 
                 RowBox[{"dynamicsMatrix", "[", " ", 
                  RowBox[{
                  "parameterLocatorDependencies", ",", " ", "couplingData"}], 
                  " ", "]"}]}], " ", ";", 
                RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
                RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", ";",
                 " ", 
                RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
               ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{"bRefreshFreqPlot", ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"freqPlot", " ", "=", " ", 
                 RowBox[{"frequencyPlotCalc", "[", " ", 
                  RowBox[{
                  "parameterLocatorDependencies", ",", " ", "matrix", ",", 
                   " ", "freqMeshSize"}], "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"bRefreshFreqPlot", " ", "=", " ", "False"}]}], " ", 
               ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"showFreqPlot", "[", " ", 
             RowBox[{"qPlaneLoc", ",", " ", "freqPlot"}], " ", "]"}]}], 
           "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"LocatorPane", "[", " ", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"u", ",", 
              RowBox[{
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"u", " ", "=", " ", 
                  RowBox[{"If", " ", "[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], "<", "3"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Flatten", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"glConstLocDefault", ",", " ", "mLocDefault"}], 
                    "}"}], ",", " ", "1"}], "]"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "cap", " ", "the", " ", "number", " ", "of", " ", 
                    "Locators", " ", "at", " ", "5"}], ",", " ", 
                    RowBox[{
                    "so", " ", "the", " ", "selection", " ", "Pane", " ", 
                    RowBox[{"doesn", "'"}], "t", " ", "start", " ", 
                    "truncating", " ", 
                    RowBox[{"the", " ", "'"}], "to", " ", 
                    RowBox[{"neighbouring", "'"}], " ", "SetterBar"}]}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], " ", ">", " ", "7"}], ",", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", "7"}], "]"}], ",", " ", "#"}], "]"}]}], 
                   " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Module", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"rm", ",", "km"}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"rm", " ", "=", " ", 
                    RowBox[{"First", "@", 
                    RowBox[{"Dimensions", "[", "rawArrayOfMasses", "]"}]}]}], 
                    " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", " ", "[", 
                    RowBox[{
                    RowBox[{"rm", " ", ">", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Shrink", " ", "rawArrayOfMasses"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"rawArrayOfMasses", " ", "=", " ", 
                    RowBox[{"Take", "[", " ", 
                    RowBox[{"rawArrayOfMasses", ",", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], " ", 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Grow", " ", "rawArrayOfMasses", " ", "if", " ", 
                    "required"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"rm", "<", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "rawArrayOfMasses", ",", " ", "glConstDefaultMass"}], 
                    "]"}], " ", ";", " ", 
                    RowBox[{"rm", "++"}]}]}], " ", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], " ", ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"km", " ", "=", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"kArray", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "//", " ", 
                    "Max"}]}], " ", ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", " ", "[", 
                    RowBox[{
                    RowBox[{"km", " ", ">", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Shrink", " ", "kArray"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"Select", "[", 
                    RowBox[{"kArray", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "\[LessEqual]", "  ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], "&"}], 
                    ")"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Grow", " ", "kArray", " ", "if", " ", "required"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"km", "<", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"km", "++"}], " ", ";", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnKarrayForAdditionalMassIndex", "[", 
                    RowBox[{"kArray", ",", "km"}], "]"}]}]}]}], " ", "]"}]}], 
                    " ", "\[IndentingNewLine]", "]"}]}]}], 
                  "\[IndentingNewLine]", "]"}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                   "lattice", " ", "vector", " ", "end", " ", "points", " ", 
                   "to", " ", "be", " ", "too", " ", "close", " ", "to", " ", 
                   "the", " ", "origin"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"If", "[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ".", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "<", " ", 
                    "glConstMinSquaredDistanceFromOrigin"}], ",", " ", 
                    RowBox[{"glConstLocDefault", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"If", "[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ".", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "<", " ", 
                    "glConstMinSquaredDistanceFromOrigin"}], ",", " ", 
                    RowBox[{"glConstLocDefault", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                   "angle", " ", "between", " ", "lattice", " ", "vectors", 
                   " ", "get", " ", "too", " ", "small"}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], " ", "=", " ", 
                  RowBox[{"resetLatticeVectorsIfAngleTooSmall", "[", " ", 
                   RowBox[{
                   "u", ",", " ", " ", 
                    "glConstMinAngleBetweenLatticeVectors"}], " ", "]"}]}], 
                 " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"rawNumberOfMasses", " ", "=", " ", 
                  RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "These", " ", "are", " ", "in", " ", "case", " ", "the", 
                   " ", "number", " ", "of", " ", "locators", " ", "were", 
                   " ", "changed", " ", "and", " ", "we", " ", "have", " ", 
                   "a", " ", "mass", " ", "selected", " ", "that", " ", "is", 
                   " ", "now", " ", 
                   RowBox[{"invalid", "."}]}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"m1Sel", " ", "=", " ", 
                  RowBox[{"If", " ", "[", " ", 
                   RowBox[{
                    RowBox[{"m1Sel", " ", ">", "rawNumberOfMasses"}], ",", 
                    " ", "1", ",", " ", "m1Sel"}], "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"m2Sel", " ", "=", " ", 
                  RowBox[{"If", " ", "[", " ", 
                   RowBox[{
                    RowBox[{"m2Sel", " ", ">", "rawNumberOfMasses"}], ",", 
                    " ", "1", ",", " ", "m2Sel"}], "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"moSel", " ", "=", " ", 
                  RowBox[{"If", " ", "[", " ", 
                   RowBox[{
                    RowBox[{"moSel", " ", ">", "rawNumberOfMasses"}], ",", 
                    " ", "1", ",", " ", "moSel"}], " ", "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"moSel", " ", "=", " ", 
                  RowBox[{"adjustedmoSel", "[", " ", 
                   RowBox[{
                   "rawNumberOfMasses", ",", " ", "moSel", ",", " ", 
                    "m1Sel"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"omegaIndex", " ", "=", " ", 
                  RowBox[{"If", " ", "[", " ", 
                   RowBox[{
                    RowBox[{"omegaIndex", " ", ">", 
                    RowBox[{"(", 
                    RowBox[{"2", "rawNumberOfMasses"}], ")"}]}], ",", " ", 
                    "1", ",", " ", "omegaIndex"}], "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "Adjust", " ", "these", " ", "for", " ", "Slider", " ", 
                    "display", " ", "in", " ", "case", " ", "m1Sel"}], ",", 
                   " ", "m2Sel", ",", " ", 
                   RowBox[{
                   "or", " ", "moSel", " ", "were", " ", "changed", " ", 
                    "just", " ", 
                    RowBox[{"above", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"k1", " ", "=", " ", 
                  RowBox[{"selectVFromKarray", "[", 
                   RowBox[{
                   "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"k2", " ", "=", " ", 
                  RowBox[{"selectVFromKarray", "[", 
                   RowBox[{
                   "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "2"}],
                    "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"k3", " ", "=", " ", 
                  RowBox[{"selectVFromKarray", "[", 
                   RowBox[{
                   "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "3"}],
                    "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"k4", " ", "=", " ", 
                  RowBox[{"selectVFromKarray", "[", 
                   RowBox[{
                   "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "4"}],
                    "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"k5", " ", "=", " ", 
                  RowBox[{"selectOriginVFromKarray", "[", " ", 
                   RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], 
                   " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
                  RowBox[{"locDependent", "[", " ", 
                   RowBox[{
                   "u", ",", " ", "rawNumberOfMasses", ",", 
                    "rawArrayOfMasses"}], " ", "]"}]}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"Reset", " ", "in", " ", "case", " ", "a"}], ",", 
                   RowBox[{"or", " ", "b", " ", "changed"}], ",", " ", 
                   RowBox[{
                   "and", " ", "the", " ", "last", " ", "selected", " ", 
                    "value", " ", "is", " ", "now", " ", "out", " ", "of", 
                    " ", 
                    RowBox[{"range", "."}]}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"qLoc", " ", "=", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    "\"\<qMaxVec\>\"", "/.", "parameterLocatorDependencies"}],
                     " ", ")"}], "/", "2"}]}], "  ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"qPlaneLoc", " ", "=", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"couplingData", " ", "=", " ", 
                  RowBox[{"calculateCouplings", "[", " ", 
                   RowBox[{
                   "parameterLocatorDependencies", ",", " ", "kArray"}], " ", 
                   "]"}]}], " ", ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"tick", "=", 
                  RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"Why", " ", 
               RowBox[{"doesn", "'"}], "t", " ", "Alt"}], "-", 
              RowBox[{
              "click", " ", "to", " ", "remove", " ", "existing", " ", 
               "Locator", " ", "refresh", " ", "this", " ", 
               RowBox[{"plot", "?", "  ", 
                RowBox[{"Workaround", ":", " ", 
                 RowBox[{
                 "move", " ", "one", " ", "of", " ", "the", " ", "other", " ",
                   "locators", " ", "to", " ", "refresh"}]}]}]}]}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"plotSprings", "[", 
             RowBox[{
             "u", ",", " ", "parameterLocatorDependencies", ",", 
              "couplingData", ",", "m1Sel", ",", " ", "m2Sel", ",", " ", 
              "moSel"}], "]"}], " ", ",", "\[IndentingNewLine]", 
            RowBox[{"LocatorAutoCreate", "\[Rule]", "True"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", " ", 
         "]"}]}], "]"}], " ", 
      RowBox[{"(*", 
       RowBox[{"If", ",", "If"}], "*)"}], "\[IndentingNewLine]", ")"}]}]}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "@", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"k5manip", ",", 
        RowBox[{"TabView", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<dynamics\>\"", " ", "\[Rule]", "  ", 
             RowBox[{"Column", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "dynTab"}], " ", ";", 
               RowBox[{"{", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"OverVector", "[", "\"\<q\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", "\"\< = \>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "qm", "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"qm", " ", "=", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\"\<qMaxVec\>\"", "  ", "/.", 
                    "parameterLocatorDependencies"}], ")"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Slider2D", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"qLoc", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"qLoc", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"(*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "0.01"}], "}"}], ",", " ", "qm"}], 
                    "}"}], "*)"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "#"}], ",", "#"}], "}"}], "/", "2"}], " ", 
                    "&"}], " ", "@", " ", "qm"}], ")"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], 
                    "\[IndentingNewLine]", ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"150", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}], " ", "&"}], ")"}], 
                    " ", "@", " ", "qm"}]}]}], "\[IndentingNewLine]", 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", " ", 
                    "\[IndentingNewLine]", "\"\< 2 \[Pi] \>\"", ",", "  ", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"(", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"qLoc", "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi"}], ")"}]}], " ", "//", " ", 
                    "MatrixForm"}], ")"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ")"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"With", " ", "this", " ", "enabled"}], ",", " ", 
                    RowBox[{
                    "a", " ", "change", " ", "results", " ", "in", " ", "a", 
                    " ", "switch", " ", "through", " ", "the", " ", 
                    "tabNumbers"}], ",", " ", 
                    RowBox[{"first", " ", "freqTab"}], ",", " ", 
                    RowBox[{"then", " ", "to", " ", 
                    RowBox[{"parametersTab", "?", "  ", "Why"}]}], ",", " ", 
                    RowBox[{
                    "and", " ", "why", " ", "not", " ", "with", " ", "scale", 
                    " ", 
                    RowBox[{
                    "below", "?", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "As"}], " ", "a", " ", "work", " ",
                     "around", " ", 
                    RowBox[{"I", "'"}], "ve", " ", "just", " ", "hardcoded", 
                    " ", "the", " ", "mesh", " ", "size", " ", "to", " ", 
                    "something", " ", "that", " ", "is", " ", 
                    RowBox[{"smooth", "."}]}]}], "*)"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{
                    "Text", "@", "\"\<number of time intervals \>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"dynMeshSize", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"dynMeshSize", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "14", ",", " ", "4", ",", " ", "30", ",", 
                    " ", "IntegerQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "30", ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], ",", 
                    "\"\< \>\"", ",", " ", 
                    RowBox[{"Dynamic", "[", "dynMeshSize", "]"}]}], " ", 
                    "\[IndentingNewLine]", "}"}], "]"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Text", "@", 
                    "\"\<time, normalized to one period, t/T = \>\""}], ",", 
                    " ", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tauSliderValue", "-", "1"}], ")"}], "/", 
                    "dynMeshSize"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"tauSliderValue", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tauSliderValue", " ", "=", " ", "#"}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"dynMeshSize", "+", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "True"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppearanceElements", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<StepLeftButton\>\"", ",", "\"\<PlayPauseButton\>\"", 
                    ",", "\"\<StepRightButton\>\"", ",", 
                    "\"\<FasterSlowerButtons\>\"", ",", 
                    "\"\<DirectionButton\>\""}], "\[IndentingNewLine]", 
                    "}"}]}]}], "\[IndentingNewLine]", "]"}], " ", 
                   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{",", " ", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "60"}], "}"}]}]}], "*)"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"Text", "@", "\"\<oscillation scale factor:\>\""}],
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"scale", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"scale", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "0.05", ",", " ", "0.05", ",", " ", "1"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05", ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", "\"\< \>\""}], ",", "  ", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"(", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"scale", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ")"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Text", "@", 
                    "\"\<Angular frequency \[Omega](q), selection:\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"omegaIndex", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"omegaIndex", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"2", "rawNumberOfMasses"}], "]"}]}], " ", 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], " ", "]"}]}], 
                "\[IndentingNewLine]", "}"}]}], "]"}]}], " ", 
            RowBox[{"(*", " ", "Column", " ", "*)"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{
            "\"\<\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))\>\
\"", " ", "\[Rule]", "  ", 
             RowBox[{"Column", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "freqTab"}], " ", ";", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{
                    "Text", "@", "\"\<number of mesh intervals \>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"freqMeshSize", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"freqMeshSize", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{"#", ",", " ", "12", ",", " ", "2", ",", " ", 
                    "30", ",", " ", "EvenQ"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "30", ",", "2"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], ",", 
                    "\"\< \>\"", ",", " ", 
                    RowBox[{"Dynamic", "[", "freqMeshSize", "]"}]}], " ", 
                   "\[IndentingNewLine]", "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"LocatorPane", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "qPlaneLoc", 
                    RowBox[{"(*", 
                    RowBox[{",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"qPlaneLoc", " ", "=", " ", "#"}], ";", " ", 
                    RowBox[{"tick", "=", 
                    RowBox[{
                    RowBox[{"Not", "[", "tick", "]"}], " ", "&"}]}]}], 
                    ")"}]}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Lighter", "@", "Gray"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}], ",", 
                    "\[IndentingNewLine]", "Black", ",", 
                    RowBox[{"Line", "[", "qPlaneLoc", "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                    " ", 
                    RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    "/", "2"}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", " ", "\[Rule]", "  ", 
                    RowBox[{"200", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}]}]}], 
                    "\[IndentingNewLine]", "]"}], " ", "&"}], " ", "@", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\"\<qMaxVec\>\"", " ", "/.", 
                    "parameterLocatorDependencies"}], ")"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
                  "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{"\"\<parameters\>\"", "\[Rule]", 
             RowBox[{"Grid", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "parametersTab"}], " ", 
               ";", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Text", "[", "\"\<mass: \>\"", "]"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"If", " ", "[", " ", 
                    RowBox[{
                    RowBox[{"rawNumberOfMasses", " ", ">", " ", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"m1Sel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m1Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"massValue", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\"\<mScalarArray\>\"", " ", "/.", " ", 
                    "parameterLocatorDependencies"}], ")"}], "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "3"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "4"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"moSel", " ", "=", " ", 
                    RowBox[{"adjustedmoSel", "[", " ", 
                    RowBox[{
                    "rawNumberOfMasses", ",", " ", "moSel", ",", " ", 
                    "m1Sel"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", 
                    RowBox[{"selectOriginVFromKarray", "[", " ", 
                    RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], 
                    " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", " ", "]"}]}], "&"}], "/@",
                     " ", 
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}]}], 
                    ")"}]}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"massValue", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"massValue", " ", "=", " ", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{"#", ",", " ", "0.25", ",", " ", "0.25", ",", " ",
                     "glConstMMax"}], "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"rawArrayOfMasses", "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}], "=", "massValue"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
                    RowBox[{"(", 
                    RowBox[{"parameterLocatorDependencies", " ", "/.", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<mScalarArray\>\"", ",", " ", "_"}], "]"}], 
                    " ", "\[RuleDelayed]", " ", 
                    RowBox[{"Rule", "[", 
                    RowBox[{
                    "\"\<mScalarArray\>\"", ",", " ", "rawArrayOfMasses"}], 
                    "]"}]}], ")"}]}], " ", ")"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25", ",", 
                    RowBox[{"Dynamic", "@", "glConstMMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\"\< \>\"", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"massValue", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 " ", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "Text", "[", "\"\<coupling to neighbouring: \>\"", " ", 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"If", " ", "[", " ", 
                    RowBox[{
                    RowBox[{"rawNumberOfMasses", " ", ">", " ", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"m2Sel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m2Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "3"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", 
                    ",", "4"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                     " ", 
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}]}], 
                    ")"}]}], "\[IndentingNewLine]", "]"}], ",", 
                    RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "}"}], "\[IndentingNewLine]", ",", " ", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"Text", "@", "\"\<horizontal: \>\""}], ",", 
                    RowBox[{"kLable", "[", "1", "]"}], ",", " ", 
                    "\"\< || \>\"", ",", " ", 
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
                    "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"k1", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k1", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1", ",", " ", "k1"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", "\"\< \>\"", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"k1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 " ", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"Text", "@", "\"\<vertical: \>\""}], ",", 
                    RowBox[{"kLable", "[", "2", "]"}], ",", " ", 
                    "\"\< || \>\"", ",", " ", 
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
                    "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"k2", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k2", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "2", ",", " ", "k2"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\"\< \>\"", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"k2", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], " ", 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 " ", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
                    RowBox[{"kLable", "[", "3", "]"}], ",", " ", 
                    "\"\< || (\>\"", ",", "  ", 
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
                    "\"\< + \>\"", ",", " ", 
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
                    "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"k3", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k3", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "3", ",", " ", "k3"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\"\< \>\"", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"k3", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 " ", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
                    RowBox[{"kLable", "[", "4", "]"}], ",", " ", 
                    "\"\< || (\>\"", ",", "  ", 
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
                    "\"\< - \>\"", ",", " ", 
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
                    "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"k4", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k4", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "4", ",", " ", "k4"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{"parameterLocatorDependencies", ",", " ", 
                    "kArray"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\"\< \>\"", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"k4", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"k5manip", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"k5manip", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                "}"}]}], " ", "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", " ", "@", "tabNumber"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"250", ",", "350"}], "}"}]}]}], " ", 
         "\[IndentingNewLine]", "]"}]}], " ", "\[IndentingNewLine]", "]"}], 
      " ", "@", "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"rawNumberOfMasses", " ", "\[Equal]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Text", "@", "\"\<coupling from \>\""}], ",", " ", 
               RowBox[{"Dynamic", "@", 
                RowBox[{"massLabel", "[", " ", "m1Sel", "]"}]}], ",", 
               RowBox[{"Text", "@", "\"\< to: \>\""}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Dynamic", "@", 
             RowBox[{"If", " ", "[", " ", 
              RowBox[{
               RowBox[{"rawNumberOfMasses", " ", ">", " ", "2"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"moSel", ",", 
                   RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"moSel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", 
                    RowBox[{"selectOriginVFromKarray", "[", " ", 
                    RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], 
                    " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                  "]"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                    " ", 
                   RowBox[{"(", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}], ",", 
                    "m1Sel"}], "]"}], ")"}]}], ")"}]}], "\[IndentingNewLine]",
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Dynamic", "@", 
                RowBox[{"massLabel", "[", " ", 
                 RowBox[{"First", "@", 
                  RowBox[{"Delete", "[", " ", 
                   RowBox[{
                    RowBox[{"Range", "[", "2", "]"}], ",", " ", "m1Sel"}], 
                   "]"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], " ", ",", 
          RowBox[{"{", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"kLable", "[", "5", "]"}], ",", " ", "\"\<: \>\""}], 
              "}"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"k5", ",", 
                   RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k5", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKarrayOriginElement", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "moSel", ",", " ", 
                    "k5"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                   RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                 RowBox[{"AppearanceElements", "\[Rule]", 
                  RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "\"\< \>\"", ",", 
               RowBox[{"Dynamic", "@", 
                RowBox[{"NumberForm", "[", " ", 
                 RowBox[{"k5", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
           "}"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], " ", 
     RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tick", ",", "False"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qPlaneLoc", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qLoc", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tauSliderValue", ",", "1"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"omegaIndex", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scale", ",", " ", "0.2"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqMeshSize", ",", "12"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynMeshSize", ",", "14"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynamics", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynPlot", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqPlot", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bInitDefaults", ",", " ", "True"}], "}"}], ",", " ", "None"}], 
    "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshMatrix", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshDynamics", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshDynPlot", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshFreqPlot", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tabNumber", ",", "1"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynTab", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqTab", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parametersTab", ",", " ", "3"}], "}"}], ",", " ", "None"}], 
    "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "The", " ", "number", " ", "of", " ", "default", " ", "masses", " ", 
     "are", " ", "coupled", " ", "by", " ", "these", " ", "next", " ", "four",
      " ", 
     RowBox[{"variables", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rawNumberOfMasses", ",", " ", "3"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mLocDefault", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "0.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", " ", "1.2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1.3", ",", " ", "1.4"}], "}"}]}], "}"}]}], "}"}], ",", 
       " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rawArrayOfMasses", ",", " ", 
         RowBox[{"{", 
          RowBox[{"10", ",", " ", "15", ",", " ", "20"}], "}"}]}], "}"}], ",",
        " ", "None"}], "}"}]}], "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawNumberOfMasses", ",", " ", "1"}], "}"}], ",", " ", "None"}],
     "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mLocDefault", ",", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.7"}], "}"}], 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"{", 
           RowBox[{"0.4", ",", " ", "1.2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", " ", "1.4"}], "}"}]}], "*)"}], "}"}]}], "}"}], 
     ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawArrayOfMasses", ",", " ", 
       RowBox[{"{", "10", 
        RowBox[{"(*", 
         RowBox[{",", " ", "15", ",", " ", "20"}], "*)"}], "}"}]}], "}"}], 
     ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"moSel", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"pick", " ", "anything", " ", "that", " ", 
     RowBox[{"isn", "'"}], "t", " ", "m1Sel"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kArray", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], " ", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parameterLocatorDependencies", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"couplingData", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"glConstSpringColorsByN", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k1", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k2", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k3", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k4", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k5", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "tick", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"SynchronousInitialization", "\[Rule]", "False"}]}], "*)"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.6013845596960135`*^9, {3.6013849419158754`*^9, 3.6013850018713045`*^9}, {
   3.6013850794767437`*^9, 3.601385097266761*^9}, {3.601385134804908*^9, 
   3.6013851913481417`*^9}, 3.601385299290316*^9, {3.601385437846241*^9, 
   3.6013854385522814`*^9}, 3.60138559342614*^9, {3.6013868469728384`*^9, 
   3.6013870381917753`*^9}, 3.6013877675854945`*^9, {3.601388376944348*^9, 
   3.6013883890050373`*^9}, 3.6013884249690948`*^9, {3.601388673194292*^9, 
   3.6013886824388213`*^9}, {3.6013891407130327`*^9, 3.6013891464263597`*^9}, 
   3.601389335188156*^9, {3.601389712307726*^9, 3.601389713789811*^9}, {
   3.60138980486102*^9, 3.6013899056717863`*^9}, 3.6013901293345785`*^9, {
   3.60139028932573*^9, 3.6013902895987453`*^9}, {3.601390478563554*^9, 
   3.6013904836558447`*^9}, {3.6013905478495164`*^9, 3.601390553751854*^9}, 
   3.601390946273305*^9, {3.601391042574813*^9, 3.601391043374859*^9}, {
   3.6013918894322505`*^9, 3.601391892836445*^9}, {3.601392097848171*^9, 
   3.6013921005103235`*^9}, {3.601392139997582*^9, 3.6013921427507396`*^9}, 
   3.6015052226223345`*^9, {3.6015107568728757`*^9, 3.6015107572798986`*^9}, {
   3.601515719590727*^9, 3.601515719851742*^9}, {3.601551924279357*^9, 
   3.6015520208098783`*^9}, {3.6015520737049036`*^9, 
   3.6015520787571926`*^9}, {3.6015521640750723`*^9, 3.60155218763342*^9}, {
   3.6015525875472937`*^9, 3.601552630947776*^9}, {3.6015925911300864`*^9, 
   3.601592613813384*^9}, {3.6015926462762403`*^9, 3.6015926750798883`*^9}, 
   3.6015927261078067`*^9, {3.601592756429541*^9, 3.6015927749646015`*^9}, {
   3.601592813396799*^9, 3.6015928171110115`*^9}, {3.6015936054051*^9, 
   3.601593616936759*^9}, {3.6015936522817807`*^9, 3.601593659804211*^9}, {
   3.6015936977343807`*^9, 3.601593703482709*^9}, {3.6015938032044134`*^9, 
   3.601593839254475*^9}, {3.6015939055702677`*^9, 3.6015939355059805`*^9}, {
   3.6015940687956038`*^9, 3.601594074351922*^9}, {3.601594145196974*^9, 
   3.6015941714714766`*^9}, {3.6015942162630386`*^9, 3.601594258628462*^9}, {
   3.601594310046403*^9, 3.6015943121155214`*^9}, {3.601594409881113*^9, 
   3.601594438379743*^9}, {3.6015945562274837`*^9, 3.6015945581155915`*^9}, 
   3.601594604665254*^9, {3.6015946540800805`*^9, 3.601594656909242*^9}, {
   3.601594703469905*^9, 3.601594755839901*^9}, {3.6015948057987585`*^9, 
   3.601594991432376*^9}, {3.601595046788542*^9, 3.601595049002669*^9}, {
   3.6015950818715487`*^9, 3.601595181218231*^9}, {3.6015952625988855`*^9, 
   3.6015952890633993`*^9}, 3.6015953542951307`*^9, {3.6015955048957443`*^9, 
   3.6015955051827607`*^9}, {3.60159561566708*^9, 3.601595631144965*^9}, {
   3.601595829788327*^9, 3.6015958783671055`*^9}, {3.6015963343461857`*^9, 
   3.601596523434001*^9}, {3.6015979474234486`*^9, 3.6015979721458626`*^9}, 
   3.601598243986411*^9, {3.601598621801021*^9, 3.601598627504347*^9}},
 CellID->106836794],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{}}, {{{
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJxlln001Xccx22WJEc4hYhiddXUlGOtLflVJ5slLNZmcfQgVipUoscjJKK1
klpl0yLp4axTRip0OfJ40fV4dT1NhaZOdWpJqK1z7uf9dc73+8f95/XHvff1
+32/n8/Lem2oV+CHWlpaFe8/2u8/XpZnr1f+OarI42TrwPDGIfm8Y86TvELV
0s7iU1v2tWkxrvvc16PRqkVaqJj6Y4jJgBy8LcbPNDlBJVnYzkzL633CuNc4
ubG78z1pU6jl+GkuDYybTrSVVchaJX8Nl8Bv9escS3JXS+M138N40A/TN7uP
VklOmt9lfP+KVM/1kkqK1PzPheBKU8vtDg9aJPJiPMZvl0Paglbwot7kSZlv
vV/JLWRr/3bLb2a+4E4HTT4wyGpmvuDydzO+9b/QwnzBddpXanXatDJfcN1P
aurmOKiZL7jstlf/6xfNzBfcoTyqX9JrZL7se84EZF+3bWG+4Kk/HbA+6Mm8
GDe5+Hg4qnHEV8siP3048qlcT2V9vGxxPfMFj/5m9KtPt6mYL/il6fLX5vat
zBd8z5c96twNbcwXfEB+I3xDagvzBR/0UecpM5TMF9wx0qsn0rWB+YJ3Xyvf
M+SkZr7g04y+O7tvXTvzBfcoPr8m4YSa+ToYLhh6+/V9+cOtW94YOCuZL3jY
+Cn6BVdHzjO4zHCtx7PD7cwX3Cqg137b5BFf8CDtyUnNMxuYL3hw6d6NhwbL
mS94ZunCR07VI77g+1JcVfP3tjFf8AhLp9jYSR3MFzwyLzrBP1DFfJMnDHu8
XVUhX++yKUuKGPEFL9tZ2NY4tpX5gp+IuNTnPbaT+YLrbb7nKssZub/gh0uK
6xO8K5kvuIdXmF9BxR3mCz7h5av8/nXNzBc87nZibEVoB/MFN5vurA4OG3m/
4M7Lr8Q1z2hgvuc0XHIiDl9wY/oe+IIfoN+FL7gZ/U/4gnuSF3zB4+k5wBd8
ND03+ILjOcMXvJLeC3zBg+g9wneu5r1L2+m9wxc8ks4JfMFxruALfoHOIXzB
N9C5hS94AJ1z+ILjXsAX3JbuEXzBQ+newRf8Ad1T+H6kudeSG91r+IJ/THMA
vuBRpkazy0epmS/4XJoz8AV/Q3MJvuD9NMfgC465B19wzEn4gsfRXIUvuAHN
Yfj+o5nbkjHNbfiCY87DFzxrhfG7yKMj+wgcewS+4NNo78AXXIf2FHzBtWmv
wRf8Nu1B+IJjb8IXfArtWa43JOxlrjekJtrjXG9IB2nvc70hbaJO4HpDKqKu
4HpDsqIO4XpDWkndwvWG1EWdw/WGNI66iOsNCR3F95WvTNc5Z2Kj0FeO/RaL
fFY1CX2lH7LqcbB/g9BX9YrLlYt33hX6yuZ5SEHISYXQV4mef5gZLVMKfeVX
XHQ50LtR6KvdLlN1C6MahL6q7RuSp2fWCX1Vsnxy32dPFEJfvZstucuz64W+
Uv+rdNvdUC/0VeJhpwy/G3VCX7VMiau0N68V+irGLSxjza5yoa9KB3991PhC
IfTVJb0dD0/OqBP6yrz39fGuQ0qhry46rrZ2XKMU+qrK5dy101srhb7qyc7Z
eN9UKfTVvGJZ8lDKXaGvTod8PuF8sFLoK9n1/hDD5wqhryp9rSfmXS0R+mrR
7NykAvtyoa/qjZ7aBXVVCH1lfKCqZ8z9GqGvurTndeofqRX6KvFWVFHJlTKh
r+4ZjFmSoSgV+ip4QKe701wh9NWgX3ym81+1Ql9lpxT174itFPoqa3XWkL1h
odBX7s7tz6IU+UJf7Teen2Y3547QVybPgtxu7q0W+upomGOaw6lqoa925Cxp
MrK6I/TV0qYKnZfpRUJf/dIRbuybWSX0ld/30blJ4TVCX3WUrA58sbRc6KsH
dutmmczKFfrqv7GZ9omqbKGvmlNkYcs8SoW+ylr5+882Z6qFvtpydP5NdZhC
6KuIOb/FKFqLhb4KJ873VRh9D99XF+l3+b5S0//k++pDfY0X31cd9Bz4vlLT
c+P7yp+eM99XKfRe+L5ypffI99Uueu98Xx2hc8L3lRmdK76v4ukc8n3lQ+eW
76t0Oud8X12le8H3Fe4R31chdO/4vmqle8r3VTzda76vOmkO8H1VWOF2pjun
RugrFc0Zvq++ornE91UVzTG+r2xo7vF9lUpzku8rJ5qrfF/10Rzm+6qM5jbf
V5jzfF/5NDvqRncrhb7CHuH7qob2Dt9XcbSn+L5qor3G91US7UG+r7A3+b7C
nuX7CnuZ76t62uN8X0XT3uf7KoA6ge+rI9QVfF/ZUYfwfaWibuH7ypA6h++r
L6iL+L5CR/0PWkGohA==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95, 96, 
          97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 7, 6, 5, 
          4, 3, 2}]}, {
         GrayLevel[0], 
         Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 160, 150, 
          140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 103, 102}]}}}, 
      VertexNormals -> CompressedData["
1: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
RbiF9iJ0EPYiqWWCHgW1tEch26P+B/9fFQw=
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
       0.073601376182566, 0.4850663940104395}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$18458, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
     "mPosFirstCell" -> {{0.9, 0.7}}, 
     "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
      0.7, -1.9000000000000001`}, {2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
      0.8, -0.6000000000000001}, {2.6999999999999997`, 
      0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, {
      0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
      2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Function[$CellContext`k5manip$, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
               Row[{
                 OverVector["q"], " = ", 
                 
                 Module[{$CellContext`qm$}, $CellContext`qm$ = 
                   ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                  Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                 Dynamic[
                  NumberForm[
                   MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
               Row[{
                 Text["time, normalized to one period, t/T = "], 
                 Dynamic[
                  
                  N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
               Row[{
                 Manipulator[
                  
                  Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                  1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                  ContinuousAction -> True, Appearance -> "Open", 
                  AppearanceElements -> {
                   "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
               Row[{
                 Text["oscillation scale factor:"]}], 
               Row[{Manipulator[
                   
                   Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}] " ", 
                 Dynamic[
                  NumberForm[$CellContext`scale$$, {3, 2}]]}], 
               Row[{
                 Text["Angular frequency \[Omega](q), selection:"], 
                 Dynamic[
                  SetterBar[
                   
                   Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
               Row[{
                 Text["number of mesh intervals "], 
                 Manipulator[
                  
                  Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                  Tiny, ContinuousAction -> False, 
                  AppearanceElements -> {"InputField"}], " ", 
                 Dynamic[$CellContext`freqMeshSize$$]}], 
               LocatorPane[
                Dynamic[$CellContext`qPlaneLoc$$], 
                Dynamic[
                 (Graphics[{
                   Lighter[Gray], 
                   Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                   Line[$CellContext`qPlaneLoc$$]}, 
                  PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                  ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                ContinuousAction -> False]}], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                Row[{
                  Text["mass: "], 
                  Dynamic[
                   If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                Text["coupling to neighbouring: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}, {
                Row[{
                  Text["horizontal: "], 
                  $CellContext`kLable[1], " || ", 
                  OverVector["a"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                Row[{
                  Text["vertical: "], 
                  $CellContext`kLable[2], " || ", 
                  OverVector["b"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[3], " || (", 
                  OverVector["b"], " + ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[4], " || (", 
                  OverVector["b"], " - ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
               Part[$CellContext`k5manip$, 1], 
               Part[$CellContext`k5manip$, 2]}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
         If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
            Row[{
              Text["coupling from "], 
              Dynamic[
               $CellContext`massLabel[$CellContext`m1Sel$$]], 
              Text[" to: "]}], 
            Dynamic[
             If[$CellContext`rawNumberOfMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 
                 Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]]}, {
            Row[{
              $CellContext`kLable[5], ": "}], 
            Row[{
              Manipulator[
               
               Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                Dynamic[$CellContext`glConstKMin], 
                Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
               ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[
               NumberForm[$CellContext`k5$$, {3, 2}]]}]}}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {}}, 0}, {{
       Hold[$CellContext`qLoc$$], {}}, 0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 12}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], {}}, 0}, {{
       Hold[$CellContext`dynamics$$], {}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {}}, 0}, {{
       Hold[$CellContext`freqPlot$$], {}}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], True}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 1}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {}}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {}}, 0}, {{
       Hold[$CellContext`couplingData$$], {}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = {
    515., {254., 261.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        True, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {}, $CellContext`dynamics$$ = \
{}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 
        12, $CellContext`freqPlot$$ = {}, $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {}, $CellContext`k1$$ = 
        0.25, $CellContext`k2$$ = 0.25, $CellContext`k3$$ = 
        0.25, $CellContext`k4$$ = 0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 
        1, $CellContext`matrix$$ = {}, $CellContext`mLocDefault$$ = {{0.9, 
         0.7}}, $CellContext`moSel$$ = 2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {}, \
$CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {}, $CellContext`qPlaneLoc$$ = {}, \
$CellContext`rawArrayOfMasses$$ = {10}, $CellContext`rawNumberOfMasses$$ = 
        1, $CellContext`scale$$ = 0.2, $CellContext`tabNumber$$ = 
        1, $CellContext`tauSliderValue$$ = 1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
           LocatorPane[
            Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                  Dimensions[#]] < 3, 
                
                Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
                If[First[
                   Dimensions[#]] > 7, 
                 Take[#, 7], #]]; 
             Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
                First[
                  Dimensions[$CellContext`rawArrayOfMasses$$]]; 
               If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                   $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                 
                 While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                  Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                  Part[
                   Part[$CellContext`kArray$$, All, 1], All, 1]]; 
               If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                 Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                 
                 While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                  Part[$CellContext`u$$, 1], 
                  
                  Part[$CellContext`u$$, 
                   1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 1], 
                Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                  Part[$CellContext`u$$, 2], 
                  
                  Part[$CellContext`u$$, 
                   2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 2], 
                Part[$CellContext`u$$, 2]]; {
                Part[$CellContext`u$$, 1], 
                
                Part[$CellContext`u$$, 
                 2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
              If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
              If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
              If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
              If[$CellContext`omegaIndex$$ > 
                2 $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
              ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
               2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
            LocatorAutoCreate -> True, ContinuousAction -> False]]]]), 
      "Specifications" :> {
        Dynamic[
         Function[$CellContext`k5manip$, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
                Row[{
                  OverVector["q"], " = ", 
                  
                  Module[{$CellContext`qm$}, $CellContext`qm$ = 
                    ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                   Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                  Dynamic[
                   NumberForm[
                    MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
                Row[{
                  Text["time, normalized to one period, t/T = "], 
                  Dynamic[
                   
                   N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                   1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                   ContinuousAction -> True, Appearance -> "Open", 
                   AppearanceElements -> {
                    "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
                Row[{
                  Text["oscillation scale factor:"]}], 
                Row[{Manipulator[
                    
                    Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                    Tiny, ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}] " ", 
                  Dynamic[
                   NumberForm[$CellContext`scale$$, {3, 2}]]}], 
                Row[{
                  Text["Angular frequency \[Omega](q), selection:"], 
                  Dynamic[
                   SetterBar[
                    
                    Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
                Row[{
                  Text["number of mesh intervals "], 
                  Manipulator[
                   
                   Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[$CellContext`freqMeshSize$$]}], 
                LocatorPane[
                 Dynamic[$CellContext`qPlaneLoc$$], 
                 Dynamic[
                  (Graphics[{
                    Lighter[Gray], 
                    Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                    Line[$CellContext`qPlaneLoc$$]}, 
                   PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                   ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                 ContinuousAction -> False]}], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                 Row[{
                   Text["mass: "], 
                   Dynamic[
                    If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                 Text["coupling to neighbouring: "], 
                 Dynamic[
                  If[$CellContext`rawNumberOfMasses$$ > 1, 
                   SetterBar[
                    
                    Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                   $CellContext`massLabel[1]]]}, {
                 Row[{
                   Text["horizontal: "], 
                   $CellContext`kLable[1], " || ", 
                   OverVector["a"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                 Row[{
                   Text["vertical: "], 
                   $CellContext`kLable[2], " || ", 
                   OverVector["b"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[3], " || (", 
                   OverVector["b"], " + ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[4], " || (", 
                   OverVector["b"], " - ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
                Part[$CellContext`k5manip$, 1], 
                Part[$CellContext`k5manip$, 2]}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
          If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
             Row[{
               Text["coupling from "], 
               Dynamic[
                $CellContext`massLabel[$CellContext`m1Sel$$]], 
               Text[" to: "]}], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 2, 
               SetterBar[
                
                Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 DeleteCases[
                  
                  Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]]]]}, {
             Row[{
               $CellContext`kLable[5], ": "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                
                NumberForm[$CellContext`k5$$, {3, 
                 2}]]}]}}]]], {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`qLoc$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 12}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`dynamics$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`dynPlot$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, True}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {}}, 0, 
         ControlType -> None}, {{$CellContext`couplingData$$, {}}, 0, 
         ControlType -> None}, {{$CellContext`glConstSpringColorsByN$$, {}}, 
         0, ControlType -> None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (
                   Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$158]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$158]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$158 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], \
$CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.601598908584424*^9},
 CellID->415749290]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.6013905751210766`*^9},
 CellID->73064412]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
A lattice of atoms can be modelled as harmonic oscillators, with forces \
proportional to the displacements of the atoms from equilibrium positions. \
The simplest such model introduces coupling for only the nearest neighbor \
atoms. In this demonstration, a lattice cell containing 1-5 atoms is \
modelled, with nearest neighbor harmonic coupling to the mass(es) in each \
nearby cell. Normal mode solutions to these equations of motion are plotted. \
Controls are provided to alter the coupling \"spring constants\" and other \
free parameters, as well as controls to select from the reciprocal space \
vectors, and angular frequencies associated with the normal mode solutions. A \
time control is also provided to display changes of the lattice through one \
period of the lattice vibration.  A plot of the dispersion relation, showing \
the angular velocities associated with each reciprocal vector is also \
provided.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.6008873855675645`*^9, {3.601208787872481*^9, 3.601208804510481*^9}, {
   3.601209090380548*^9, 3.601209091209631*^9}, {3.6013823516277194`*^9, 
   3.601382454828622*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{0.5, -0.5}, {-0.5, 
        0.5}}}, {
       1, 3, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
        0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
        0.7538461538461539}}}}, {{
       2, 1, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{0.5, -0.5}, {-0.5, 
        0.5}}}, {
       2, 3, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
        0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
        0.047058823529411736`}}}}, {{
       3, 1, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
        0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
        0.7538461538461539}}}, {
       3, 2, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
        0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
        0.047058823529411736`}}}}}, {{{
       1, 3, {-1, 0}, 0.25, 0.45000000000000007`, {0.9, 0.7}, {1.2, 
        0.09999999999999987}, {{
        0.19999999999999987`, -0.3999999999999999}, {-0.3999999999999999, 
        0.8}}}, {
       1, 2, {-1, 0}, 0.25, 1., {0.9, 0.7}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.36, 0.48}, {0.48, 
        0.6400000000000001}}}, {
       1, 2, {-1, 1}, 0.25, 1.6899999999999995`, {0.9, 0.7}, {
        2.1999999999999997`, 0.7}, {{0.9999999999999999, 0.}, {0., 0.}}}, {
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 3, {0, -1}, 0.25, 2.2600000000000002`, {0.9, 
        0.7}, {-0.5999999999999999, 0.5999999999999999}, {{0.9955752212389379,
         0.06637168141592925}, {0.06637168141592925, 
        0.004424778761061955}}}, {
       1, 3, {1, -1}, 0.25, 3.3999999999999995`, {0.9, 
        0.7}, {-0.4999999999999998, 1.9}, {{
        0.5764705882352942, -0.4941176470588236}, {-0.4941176470588236, 
        0.423529411764706}}}, {
       1, 2, {1, 0}, 0.25, 3.4000000000000004`, {0.9, 0.7}, {0.5, 2.5}, {{
        0.047058823529411764`, -0.21176470588235294`}, {-0.21176470588235294`,
         0.9529411764705882}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 2, {0, 1}, 0.25, 3.65, {0.9, 0.7}, {2.3, 2.}, {{0.5369863013698629, 
        0.4986301369863013}, {0.4986301369863013, 0.463013698630137}}}, {
       1, 3, {1, 0}, 0.25, 4.25, {0.9, 0.7}, {1.4000000000000001`, 2.7}, {{
        0.05882352941176473, 0.23529411764705888`}, {0.23529411764705888`, 
        0.9411764705882353}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 3, {-1, -1}, 0.25, 4.520000000000001, {0.9, 
        0.7}, {-0.7, -0.7000000000000002}, {{0.5663716814159291, 
        0.49557522123893794`}, {0.49557522123893794`, 
        0.43362831858407075`}}}, {
       1, 3, {-1, 1}, 0.25, 4.879999999999999, {0.9, 0.7}, {
        3.0999999999999996`, 0.8999999999999999}, {{0.9918032786885246, 
        0.09016393442622948}, {0.09016393442622948, 0.008196721311475407}}}, {
       1, 2, {0, -1}, 0.25, 5.85, {0.9, 0.7}, {-1.5, 0.3999999999999999}, {{
        0.9846153846153846, 0.1230769230769231}, {0.1230769230769231, 
        0.015384615384615389`}}}, {
       1, 2, {1, -1}, 0.25, 6.289999999999999, {0.9, 0.7}, {-1.4, 1.7}, {{
        0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`, 
        0.15898251192368842`}}}, {
       1, 3, {0, 1}, 0.25, 7.540000000000002, {0.9, 0.7}, {3.2, 2.2}, {{
        0.7015915119363394, 0.45755968169761274`}, {0.45755968169761274`, 
        0.2984084880636605}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       1, 2, {-1, -1}, 0.25, 8.81, {0.9, 0.7}, {-1.6, -0.9000000000000001}, {{
        0.7094211123723042, 0.4540295119182747}, {0.4540295119182747, 
        0.29057888762769585`}}}, {
       1, 2, {1, 1}, 0.25, 9.009999999999998, {0.9, 0.7}, {2.4, 3.3}, {{
        0.24972253052164267`, 0.4328523862375139}, {0.4328523862375139, 
        0.7502774694783573}}}, {
       1, 3, {1, 1}, 0.25, 13.599999999999998`, {0.9, 0.7}, {3.3, 3.5}, {{
        0.423529411764706, 0.4941176470588236}, {0.4941176470588236, 
        0.5764705882352942}}}}, {{
       2, 1, {1, 0}, 0.25, 1., {0.4, 1.2}, {1., 2.}, {{0.36, 0.48}, {0.48, 
        0.6400000000000001}}}, {
       2, 3, {1, -1}, 0.25, 1.2999999999999996`, {0.4, 
        1.2}, {-0.4999999999999998, 1.9}, {{
        0.623076923076923, -0.4846153846153846}, {-0.4846153846153846, 
        0.376923076923077}}}, {
       2, 3, {0, -1}, 0.25, 1.3599999999999999`, {0.4, 
        1.2}, {-0.5999999999999999, 0.5999999999999999}, {{0.7352941176470588,
         0.44117647058823534`}, {0.44117647058823534`, 
        0.2647058823529413}}}, {
       2, 1, {1, -1}, 0.25, 1.6899999999999995`, {0.4, 
        1.2}, {-0.8999999999999998, 1.2}, {{0.9999999999999999, 0.}, {0., 
        0.}}}, {2, 2, {1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {0.5, 
        2.5}, {{0.005882352941176467, 0.0764705882352941}, {
        0.0764705882352941, 0.9941176470588234}}}, {
       2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       2, 3, {-1, 0}, 0.25, 1.85, {0.4, 1.2}, {1.2, 0.09999999999999987}, {{
        0.34594594594594585`, -0.4756756756756756}, {-0.4756756756756756, 
        0.654054054054054}}}, {
       2, 3, {1, 0}, 0.25, 3.250000000000001, {0.4, 1.2}, {
        1.4000000000000001`, 2.7}, {{0.3076923076923076, 
        0.46153846153846145`}, {0.46153846153846145`, 0.6923076923076924}}}, {
       2, 1, {-1, 0}, 0.25, 3.4000000000000004`, {0.4, 1.2}, {
        0.8, -0.6000000000000001}, {{
        0.047058823529411764`, -0.21176470588235294`}, {-0.21176470588235294`,
         0.9529411764705882}}}, {
       2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {-1.4, 1.7}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {
        2.1999999999999997`, 0.7}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 1, {0, -1}, 0.25, 3.65, {0.4, 
        1.2}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
        0.463013698630137}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.4, 1.2}, {2.3, 2.}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.4, 1.2}, {-1.5, 0.3999999999999999}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 3, {-1, -1}, 0.25, 4.82, {0.4, 1.2}, {-0.7, -0.7000000000000002}, {{
        0.25103734439834025`, 0.4336099585062241}, {0.4336099585062241, 
        0.7489626556016598}}}, {
       2, 1, {0, 1}, 0.25, 5.85, {0.4, 1.2}, {2.8, 1.5}, {{0.9846153846153846,
         0.1230769230769231}, {0.1230769230769231, 0.015384615384615389`}}}, {
       2, 1, {-1, 1}, 0.25, 6.289999999999999, {0.4, 1.2}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`, 
        0.15898251192368842`}}}, {
       2, 3, {-1, 1}, 0.25, 7.379999999999998, {0.4, 1.2}, {
        3.0999999999999996`, 0.8999999999999999}, {{
        0.9878048780487806, -0.10975609756097565`}, {-0.10975609756097565`, 
        0.01219512195121952}}}, {
       2, 2, {1, 1}, 0.25, 8.409999999999998, {0.4, 1.2}, {2.4, 3.3}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       2, 2, {-1, -1}, 0.25, 8.41, {0.4, 1.2}, {-1.6, -0.9000000000000001}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       2, 1, {1, 1}, 0.25, 8.809999999999999, {0.4, 1.2}, {2.9, 2.8}, {{
        0.7094211123723043, 0.4540295119182747}, {0.4540295119182747, 
        0.2905788876276958}}}, {
       2, 3, {0, 1}, 0.25, 8.840000000000002, {0.4, 1.2}, {3.2, 2.2}, {{
        0.8868778280542986, 0.3167420814479638}, {0.3167420814479638, 
        0.11312217194570139`}}}, {
       2, 1, {-1, -1}, 0.25, 9.010000000000002, {0.4, 
        1.2}, {-1.1, -1.4000000000000001`}, {{0.24972253052164256`, 
        0.4328523862375138}, {0.4328523862375138, 0.7502774694783573}}}, {
       2, 3, {1, 1}, 0.25, 13.7, {0.4, 1.2}, {3.3, 3.5}, {{0.6138686131386862,
         0.48686131386861314`}, {0.48686131386861314`, 
        0.3861313868613139}}}}, {{
       3, 1, {1, 0}, 0.25, 0.4500000000000001, {1.3, 1.4}, {1., 2.}, {{
        0.19999999999999998`, -0.39999999999999997`}, {-0.39999999999999997`, 
        0.7999999999999999}}}, {
       3, 2, {-1, 1}, 0.25, 1.2999999999999994`, {1.3, 1.4}, {
        2.1999999999999997`, 0.7}, {{
        0.6230769230769229, -0.48461538461538467`}, {-0.48461538461538467`, 
        0.3769230769230771}}}, {
       3, 2, {0, 1}, 0.25, 1.3599999999999997`, {1.3, 1.4}, {2.3, 2.}, {{
        0.7352941176470587, 0.4411764705882354}, {0.4411764705882354, 
        0.2647058823529413}}}, {
       3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3, 1.4}, {
        1.4000000000000001`, 2.7}, {{0.005882352941176479, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588236}}}, {
       3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3, 1.4}, {1.2, 
        0.09999999999999987}, {{0.00588235294117648, 0.07647058823529418}, {
        0.07647058823529418, 0.9941176470588234}}}, {
       3, 2, {1, 0}, 0.25, 1.8500000000000003`, {1.3, 1.4}, {0.5, 2.5}, {{
        0.34594594594594597`, -0.47567567567567565`}, {-0.47567567567567565`, 
        0.654054054054054}}}, {
       3, 1, {0, 1}, 0.25, 2.26, {1.3, 1.4}, {2.8, 1.5}, {{0.9955752212389379,
         0.06637168141592925}, {0.06637168141592925, 
        0.004424778761061955}}}, {
       3, 2, {-1, 0}, 0.25, 3.25, {1.3, 1.4}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.3076923076923077, 
        0.46153846153846156`}, {0.46153846153846156`, 0.6923076923076923}}}, {
       3, 1, {-1, 1}, 0.25, 3.399999999999999, {1.3, 1.4}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.576470588235294, -0.4941176470588235}, {-0.4941176470588235, 
        0.423529411764706}}}, {
       3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3, 
        1.4}, {-0.4999999999999998, 1.9}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 3, {-1, 1}, 0.25, 3.4899999999999984`, {1.3, 1.4}, {
        3.0999999999999996`, 0.8999999999999999}, {{
        0.9283667621776505, -0.25787965616045855`}, {-0.25787965616045855`, 
        0.07163323782234961}}}, {
       3, 3, {0, 1}, 0.25, 4.250000000000001, {1.3, 1.4}, {3.2, 2.2}, {{
        0.8494117647058822, 0.3576470588235295}, {0.3576470588235295, 
        0.15058823529411772`}}}, {
       3, 3, {0, -1}, 0.25, 4.25, {1.3, 1.4}, {-0.5999999999999999, 
        0.5999999999999999}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       3, 1, {-1, 0}, 0.25, 4.25, {1.3, 1.4}, {0.8, -0.6000000000000001}, {{
        0.058823529411764705`, 0.23529411764705882`}, {0.23529411764705882`, 
        0.9411764705882353}}}, {
       3, 1, {1, 1}, 0.25, 4.52, {1.3, 1.4}, {2.9, 2.8}, {{0.5663716814159292,
         0.49557522123893805`}, {0.49557522123893805`, 
        0.43362831858407075`}}}, {
       3, 2, {1, 1}, 0.25, 4.819999999999999, {1.3, 1.4}, {2.4, 3.3}, {{
        0.2510373443983402, 0.4336099585062241}, {0.4336099585062241, 
        0.7489626556016598}}}, {
       3, 1, {1, -1}, 0.25, 4.879999999999999, {1.3, 
        1.4}, {-0.8999999999999998, 1.2}, {{0.9918032786885246, 
        0.09016393442622948}, {0.09016393442622948, 0.008196721311475407}}}, {
       3, 2, {1, -1}, 0.25, 7.380000000000001, {1.3, 1.4}, {-1.4, 1.7}, {{
        0.9878048780487805, -0.10975609756097562`}, {-0.10975609756097562`, 
        0.012195121951219514`}}}, {
       3, 1, {0, -1}, 0.25, 7.539999999999999, {1.3, 
        1.4}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7015915119363395, 0.45755968169761274`}, {0.45755968169761274`, 
        0.2984084880636605}}}, {
       3, 3, {1, 1}, 0.25, 8.41, {1.3, 1.4}, {3.3, 3.5}, {{0.4756242568370986,
         0.49940546967895355`}, {0.49940546967895355`, 
        0.5243757431629014}}}, {
       3, 3, {-1, -1}, 0.25, 8.41, {1.3, 1.4}, {-0.7, -0.7000000000000002}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       3, 2, {0, -1}, 0.25, 8.84, {1.3, 1.4}, {-1.5, 0.3999999999999999}, {{
        0.8868778280542985, 0.3167420814479638}, {0.3167420814479638, 
        0.11312217194570136`}}}, {
       3, 1, {-1, -1}, 0.25, 13.600000000000001`, {1.3, 
        1.4}, {-1.1, -1.4000000000000001`}, {{0.42352941176470593`, 
        0.4941176470588235}, {0.4941176470588235, 0.576470588235294}}}, {
       3, 2, {-1, -1}, 0.25, 13.700000000000001`, {1.3, 
        1.4}, {-1.6, -0.9000000000000001}, {{0.6138686131386862, 
        0.4868613138686131}, {0.4868613138686131, 
        0.38613138686131376`}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.6790602328891914, 9.230900003615161*^-19], {
       Complex[0.7248589832535917, 0.], 
       Complex[0.650064949116095, -0.020858686170711016`], 
       Complex[0.11988513411713456`, -0.0981715969681187], 
       Complex[0.15160623794564831`, -0.028647866526790612`], 
       Complex[-0.002472802788942547, -0.01713913715451654], 
       Complex[0.05556524411678816, 0.01890267003822048]}}, {
      Complex[0.5524636587025472, -7.594543271602355*^-18], {
       Complex[-0.38354558530686395`, 0.09744499810272776], 
       Complex[0.1619813466218059, -0.23832737428749207`], 
       Complex[0.6766558452199941, 0.], 
       Complex[0.5279467930943094, 0.011722985858567875`], 
       Complex[-0.0019794387381373065`, 0.0612963317654061], 
       Complex[0.14074635807044672`, 0.0077645969691057665`]}}, {
      Complex[0.5222542056555272, 7.39373223091693*^-18], {
       Complex[-0.5047764091042254, 0.08027140607893792], 
       Complex[0.6076266586520926, 0.], 
       Complex[-0.41722429897453955`, -0.26584428115246467`], 
       Complex[-0.11870218623554862`, 0.011771602360776734`], 
       Complex[0.10106066627579662`, 0.15510216234064736`], 
       Complex[0.24672133224192438`, 0.12420825231706026`]}}, {
      Complex[0.47798270089481093`, 1.705186367657685*^-17], {
       Complex[0.11776747404882068`, -0.17021352942962187`], 
       Complex[-0.19349636076477256`, 0.18545691772731276`], 
       Complex[-0.005098087736675982, 0.0481703582836023], 
       Complex[0.12443545522518613`, -0.04846883240430583], 
       Complex[0.7520021001235273, 0.], 
       Complex[0.5450959458974042, 0.050065292585647264`]}}, {
      Complex[0.4208599945029234, 1.7181192359807767`*^-17], {
       Complex[0.046412084869462106`, -0.0633132278362492], 
       Complex[-0.15001494768060744`, 0.1368626263531111], 
       Complex[-0.49457449633790096`, -0.020339968952328036`], 
       Complex[0.7465187765334863, 0.], 
       Complex[-0.3425167147633056, -0.05320301419822421], 
       Complex[0.17190685158210708`, -0.02435844462026826]}}, {
      Complex[0.3371723422003491, 1.2680207595331082`*^-17], {
       Complex[0.08250671501222374, 0.03036710231625256], 
       Complex[-0.10759757386702096`, -0.00917692568070801], 
       Complex[0.15992951319705684`, 0.020880420200147097`], 
       Complex[-0.32856173648033754`, 0.004931060374980048], 
       Complex[-0.5245849484304596, 0.028709761501831688`], 
       Complex[0.7553839007471159, 0.]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
     "], {10, 15, 20}, 3, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 8, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyEvXd01MX7/h1QkBKk9yJdqdIhENjQQpVOqEqo0hNakCZFBKkB6VU6SJMq
iIEldAk1nZDN7oYkSO8lJODj8+G+Ztnr/np++Ydz5syZnX7N9eI9c5fqF9Bp
YEYPDw/P3B4eH/37b6fiG3//a0+mk+1W3nydPizN6nXip1nxx5ItSK9/YMux
t4ueW6OzNghquiLJ4p7/nvUrr7E7dj24ZdI7/C/9pvXO+klPy59zpXvI36Ij
iQc3P1X5LYM3rK48cY6r/Lbvy7fU8m/48uQeVR9L9wv5h1uGp1B90iwXW4eV
3ZQ7xfIu6nXLbk08TLuKTvhkzrunSSYd7UoLqlJ7+KIkyn/PeueddcqkcFc6
2hX2POfyBqHJJh3tCj/VaszwMrc5v+VN4YYhG5+70tGu+U831mn7w22uj2WZ
X+96g+qq+ltKfOwYWfQL9MMLK9p1zpr/5d93kkw62nVlUt/T9X7i/Pescw92
7vvVlRSTjnY9GO1fZuvV2yYd7fJt+Hr41i23Ob+lzy8ta1Qd7ioH7aq/PuHA
5CrJXB/LqF3VrvRbnsT1t+R7fWB9u1+SLB3+l55s2nXw+5iwpr8km3S0a3Ol
jMPutU+h/Pes9mEe1U9VcKWjXVd6D/QamctVDtrV8NTugTUqJnF+y5Kx61f8
duWWSUe7fp4z/vX487e4Ppb0XXe9TpRQ9bf41ew2ZV2eZAt+D+0689upCWGf
pJh0tGvj8lc199Xg/Pesi1uPP5+pfJJJR7vmZ2/fsfSBWyYdf4+qrHiZa+kt
zm/h/GhXMJWPdv3f9UmzoP7SXgvahfYiHe2i/rGYdrn3pwXtov43v0/jhfwW
Gl8L2mVznw+oj4XmD+pvwXzr8n5+mnbllfmJdLRrtMxn9/z3rJj/SEe7/GW9
IB3t+krWF+W3PJL1iHS0a6GsX6qPJUzWO9Xfclb2B9lPfNAu7CdIR7to//FB
u4Ld9ysftIv2N5//2A+R30L7pw/a9bf7fov6WGh/Rv0t2M9l/zftwv6PdLSL
9MK0q667vph2kR6ZdpF+mXaR3pl2dXTXR9Mu0lPTLtZftOtO/zbNLuxxKl1u
8Lzk5A55nUqXO5XY8v2XxxxKlwO+LVY+eJ9D6XL273zPZAxX+S1Ncm4/693I
qXR5VrMF3xy7pepjyVOz8N0fSiQqXX5kb7R55zOn0mWfCjMD9n/rVLpcfM7S
avMncP571vN1ju//fZ9T6fI8/zd9h+dOVLq84kDWlj/0T1S6fOHql0O8pyQq
Xe5RfcfTb/olKl2uP3nID4eyJypdrnxjUNcxc51Kl6OfeqZe7eZUupyzx6Iz
3ayc/541JMfZHTXqJipdfvyy8/XsoxOVLnsdTdyUf5zKb4lpPOj+8UaJSpcP
vkyMWBin6mOZWanWtD91/S2dR+Vvnn+YU+ly7qgpa2NOOJUup+3YXn7dp4lK
l2tnu7pg8gfpaFeFtC3PHUudSpfHhOadUvuVQ+nyuPbBXeb87lC6XKLb37uH
7XQoXc5XpH3ewlcdSpcfxnRMi/7GqXS5XKfOaQ/vOJUuJ79YE9VhKee/Z/1x
UqUS5+MdSpd71m/XJXWOQ+nysVcjTtYer/JbOD/axeWjXf93fdIsqD/rMtrL
ukz9Y/SrlHt/Gv2i/je/T+Nl9IvG1+iXl/t8MPpF88foF+Yb63J7mZ+syz/I
fGZdPiTzn3U5VtYL67K3rC/WZaxH1mWrrF/W5Vyy3lmXsT+wLmM/YV2m/cfo
V1f3/croF+1vRr9oPzT6Rfun0a9z7vut0S/an41+YT9nXcb+z7pMemHaNdVd
X0y7SI9Mu0i/TLtI70y7Orvro2kX6alpF+sv2jVu629j2v3uULp8c2qZKjPr
OZQu55ywI329j13pctjsngVTBicoXd4wedpV+3Ob0uVJOXte/ypTgtLlAdl/
ST56L0Hp8vz2/vdX9LQrXa4UFDh6QQW70uV+JXcGFP5M6/KpoJIRDVY4lC5X
yVLkQrrFoXQ5cMzd73/+zKF0+VL5VSVXV1T5LY3rx7waV8+hdDn2lxzVP/J2
KF2OcmSePM6L65NmKV7yYNt93g6ly87snkfmVnIoXe6/bPj0wOqc/561Y8US
pybXdihdrtKnR5NDdR1Kl3s1mFshqarKb/EalGNlSjGH0uVfFiTWTy6h6mPZ
2dYeFthT1d9ysJDnwy/+UrpmLeYd9vmBsASly7su5Hyd3tqudLnUxbVpq2rZ
lS6PHNd292z/BKXLW3ds8qgaYVO67P+23sx6nyQoXc6SHDT1+kZVH8vPnrUb
D1/H9UmzJP50vGBMX4fS5cRPv51Qa7ld6XLnDZPXB2S0K12um3fXoi+f2ZQu
H6nn531gvE3p8s47GfK/6aLyWzg/2lWTyke7/u/6/NsuqT/rMtrLukz9Y/TL
070/Xb7Svf/N79N4Gf2i8TX6VdZ9Phj9ovlj9AvzjXX5kMxP1uUdMp9ZlzH/
WZcbyHphXe4t64t1ubKsR9blzrJ+WZcHyHpnXU6U/YF1GfsJ6zLtP0a/brjv
V0a/aH8z+kX7odEv2j+NflV232+NftH+bPQL+znrMvZ/1mXSC9Ouge76YtpF
emTaRfrl4gDuemfalctdH027SE9Nu1h/0a6YbwuHNluhdNDa/OsBp777Il7p
crOILYMr94hVurwy8P7QrLVilC7f779pQY+uMUqXVyUUK/B9rZtKl6dVXRBU
t5RN6XL38tOnBK6wKV3OMmXI3TuPbEqXX3008nLemTaly1WC8u664x+vdLlZ
sz+uTPo2Xuny7WI7h766F690udeVuiG+/jaly/6D8lzOusumdPntX2uKd45X
9bHMLnt0TPVLqv6WEpfLdC/e2aZ0uckdS7235WxKl/9ZPzCX5xrO/+95I+O4
b1sn25Quh1qnvxwQZlO6fKv7xfCbs1V+i8dvO4tc+cKmdNmzWe7hH62IV7rc
vXRY6tMG8UqXk9/l9m+/Ml7p8u9tEgPX59e6nFjc81CDczaly6O2nbANGah0
1tqp7atLvmvjlS6neDW60+N6rNLl4xvrjt3yOFrp8vcTh6Rk6xCjdLlGVOuy
pbvcULq87ceIVi9m25QuD3pccPeda0oHrf1LPz33Nile6XITa7/JK8NjlS6/
SFkyr681WulypyYLLWMPRStd5vxoF5ePdv3f9UmzoP6sy2gv6zL1j9Gvae79
afSL+t/8Po2X0S8aX6Nfo93ng9Evmj9GvzDfWJf/lvnJuuwn85l1OYfMf9bl
j2W9sC5jfbEuW2U9si7XlPXLuvzRL+/XO+tyC9kfFMeW/YR1mfYfo1+v3fcr
o1+0vxn9ov3Q6Bftn0a/mrjvt0a/aH82+oX9nHUZ+7/i2O56Ydo13V1fTLtI
j0y7SL9Mu0jvTLtIH027SE9Nu1h/0a42I8qd+uZRnNLlnOPL1Q7teUPpcq5x
D2fkOxqldHlOnotxxbdFKl3O8+1nnjOTVH6L37N89pq3o5UuW8ZveunTNEbp
8pzo3MsTlscoXb6w7mTPwlExSpd7d3gSs8rvptLl1S2z7Og2NVbp8usW348v
tjxa6fLv284PP70tWulytZobFwdkj1G63OZVv5xjf4pRurwsNP+nCTlilS5f
yfjNliYbuD5plm+79XvQue8Npcsbxi4OiLp5Q+lygWwJS+Zk4/z3rL1vXvmi
zMBYpcshHTd3+DgmRuly0XHb555sF6N0eeaiAsVGhkcrXe63+N3eKROilS5v
PuxzeEJktNLleTVOVTj5WOmatfixjamlY5UOWms+bvXsxW8xSpcDotpWvTks
Runy5dCm/dcUilG63C/4p1fT90crXbZGX8taY0Ck0uW+/WvPXBUcqXR5kb9v
7oIzuT5plk0LM8968uKG0uX1w4r/vKB3jNLloz9cXLv8TrTS5Z6VrVHFTiid
tY7b/rxueolLSn853fy/CZWD+v/fv5tmQT1Zf9Eu1l/qB6NT1G9Gp6ifze/T
uBidonE0OjXSfdyNTtE8MTqFecX6O1fmIevvJpm3rL/9ZZ6z/k6XdcH6W0TW
Eevvn7LuWH+xTll/C8m6Zv3dKPsA6y/2DdZf2meMTtG+ZHSK9jGjU7TvGZ2i
fdLo1Cv3fdXoFO3DRqewb7P+Yp9n/SVdMO1q7K4jpl2kO6ZdpFOmXaRrpl25
3XXQtIt007SLdRbtKh945KsGS6OU/mYodfTPYYOilP4e6Vl1V4o1Qumvn6Pm
wu1xfyn9XXiq1p4abS8o/c10NueNJpcuKv0dn5rpp2vRl5X+7gm8VWpQ0jWl
v+XqPL847ni40t+AO4HefuOilP6W6N4qtV3dKKW/p7KUOLq3WqTS39EHik8+
vzdC6e/5WtvG9f8tQulvmEdcgV4hEUp/E17Wz3I5OULp7+wVl9u0qBOp9LfZ
1+8qVdkRqfT3n/HVe/1+O1Lp74JFlzt2Gc7571kTrvWe4PVPhNLfgccG5F3w
e4TS36e+zXN+skTlt/i0Hn7W54cIpb/f7xy+qfayCKW/3f5ISNiq62/J/vHP
Q/f0iVL6G9qv8qKFiyOU/vodrVX2Scp1pb9LEhbtqLThqtLfI68Wl9q8K0zp
79MFw2o1fHZB6W+GHW22ll1wTulvu/JTa+37+YrS37wR13vcfhSp9DdzLo8z
vt9HKf0tsn1W/7BskUp/T/zp+yzk52tKf4My/9Ure93zSn+PFY5t2eLQEaW/
nI76B1I5qP///btpFtST9RftYv2lfjA61dW934xOUT+b36dxMTpF42h0Kth9
3I1O0TwxOoV5xfqbWeYh628Xmbesv9NlnrP+NpF1wfqLdcT621vWHeuvXdYp
6+9iWdesvxm+e78PsP5i31D+132fMTqV6L4vGZ2ifczoFO17RqdonzQ6ddx9
XzU6Rfuw0Sns26y/2OdZf0kXTLuC3HXEtIt0x7SLdMq0i3TNtCvEXQdNu0g3
TbugsztSL03N9TrjyWblTvaY8u6V9bvGG/8peTbJpFezzCn6fZknVv+ZbyfY
D7nS0d7BPoeiYpYkWdL+12+PzXzw/uWl//Jm+O5Rf++HctA/RYsVWZLX35Xe
4H/lJ1nvXCler2NbVzr6Le6v5s32n+b0MGtVv9Qtj2640tGf1Rsuz5tlXrKl
5f/qE+WqZ8HLm2ZHJFu+onWK7y13DGhV1rtwmrW59M/YibW2rWlovmO0NqDv
md3blWbdWfTC7Ad+rnLQbwMmtJjcydNVDn8XTe2yrKv+tP2YaE6/aaluG/Y8
hyXFlI/x6nV8Ucmeru88rV5cvuRH/3vdmBMw4JorP9LxPbb7uCdZCjZs2KP6
dVc65qH/rwHLZ61MofYmWStG7p90poX5LhS65ipf8mN842se7R14wZWfvwOn
+WkZbet1/ewrrudzS1BOr/Dwjq7y28g8sRfpGvbTBPP9qqR/UL7kx/zx9Cj1
OMsAV36k4/tzWkeWBikTR1S5qOaDZez2qL8S1v6rN9H/Wy/WJjKvfKasbXFi
SbKlm5vuu74zdx+vNOuotQutYx4m0Xi5vrdH+cZfR1QvmOe+q3z+Xh3ld5X5
tmHX6qWbL3F7D3mb9rqPl2VPfJNX31a7zeNlvsNHfWrI/Ix+Vm3i21hXfTrJ
fMB38siPeXg4Z8W/PpmcYvK3o/yoj5fMzyLxC+rmXOyaP61lfuL7Z+THvO3f
8uTYAd3V/DT5UZ+6Mp8HBVTbeTDdVR8p3+qg+mPeJtzutzdroCs/0q/K9+Go
T3WZz4Mnrhs36oBaj6r+hktP9/0haZDaT8y9BtSnj8z/5atnnbmX7ur/9+N7
KqSRfMeO/Jjnp6Z2ujPsNuf38EB+2ictF7r9VMJiT+J90tSH5rOl8Pd/ZT58
S81nc/+i9/t92+or62Xn3Nv/pA7Gue1MiDffU3CbP2lW6JH7/HGtL5SPdVHa
OfnqV6Gu8tU9CPf+tFzd96ZNtTaqP725P829mznPkkYWT+b5YFkq9wtQny9l
vfhkmFzDa6+rPvWoPshv9vObDdJvfe7Kj/SfcZ9C6lNH1suEfP75Iwq76tNS
5tsSuQeB/FgXKXl3dZ04MYn2K9c9FNQH62Vf55Ee9dckmfq0kfrg/gjym++X
avVs3rKvK7+6V+K+n1hmFOnS/0HVJOpPV31oP7Qc2ZVj5qKeSbwfmvsyqE9j
WS/JKVN6VXx4y9SnNdUH+bEuCrwutbeU3ZUf6eb+i/v+b+n/6HS5aZHcnx/c
03Gfz5bD+TN9+jI2ieezyY9zTlNZL+kDtsduK+0653wl8x/53edPmrWBnIvc
54/rfhDKx7poX+pJnSM7kkz5fL8G5WO9NL5epIX/fu6fY97oH5oPllwng54P
PnmL54O5N4T6QF8KL6pbIN8UV306YL7JfHA/B96z5h76yn7i5S06B7ryoz6N
ZL0Et75V9nKIqz5+VB/kN9+NSPnIz/ebUJ96sl4WSvmoT9v/qD/WRU7pH/f2
uu4roT5VZb2gf2g/sfB+gnXRTsaX9kOTH/XxlfWC8XWvv6s+yM/rBfmRjntV
tP9b0mQ+0/6v6o91seDJ/Em1Fqj5bO6Lwb9AXwbIeoR/aUj3qshHWFE++Qiz
vlA+1gX2H5TP97ZQfk9ZL0my/7j3zz5v9A/NBwv2T5oP5j4a6gN9mS77J+pT
l+rj7u/uWZNl/3f3d//qjpxPaD5bDv35eeOnD1z1wXkM9+CQH+uijugXzX+T
H/WxyHr5TvQL9ekp8w3nT+THukgV/UX+DpQf9cF5zCL6S/uDqj/WBc4PtB+a
+32oD85jj7q3mbHzD1d93o/v2ZC2ct5GfqyLM3Iec8/v4YH8tP9bcF6i/d/4
3C3vz2PG/waKv0j/j3ttyN9Y1gvOe8jfRuY/7vERH7BCv4gPmPuMKB/rAufb
dOJIS+U+IPWnJcflqhFzeqZwf3pzf2Jd4HxO88HyUPwg6lNT1ss/7YbMiPFM
MfXpLPN/odxDdO/Pe9YB4i/SiXchP+oDfYG/oPls6oP8WBfwR8jP9zFRHznv
WV+1HFfr+CtXfVpJfYKp/lgXu8XfpROXS5X7lagP9CVS/B3tJ+YeKO2HliPi
T2k/NPlRnwayXjaLP0V9fKU+uO+J/FgXucS/pxM/xD1Q2v8tFvHjtP+b+mx7
7+vNugDnQXoLWRfgALS+rIXE79D6MusF5WCeg2NQP1hyFJ45/fGBFO4HyyW5
x0rjaEkQrkLjaPLjd2UcrWOFq7i399/5LJwH5cs+bKkinAflY96GUX0wP72F
OyE/0vG+AX4X87awcCekYx7WEA5G69TSUzgYyu8o5eM+L+0zlv7C5WifMfd8
8buYh+uFyyEd86qG8EbaJy1jhB/SPmn2VZpXVvAipA+UcQfnpH6w3BQuinSM
Czgq0tHPxYW7Ir2K9Fsf4b00Dy3gvTTPLROIG4Mnn1gY/mJaQ6fiydPzP1r+
UT+n4sm7T/T0G+nrVDz5ef+zFzvPcyqejHtqzJPn76xWaExtp+LJRa/ev7ep
mlPx5Lf9s59568/pYdY2w0suOTLKqXhyx/xfZD692ql48polf7fpH+lUPBn3
BJknf9442+qZS5yKJ+MeLvPkpedu3wiZ61Q8ucCon9+MWutUPJnLAU++7x+b
2XFN9YPlx4BhK0JsTsWT750v3+CTo07Fk035xJMbl2685/kzp+LJuEfMPPnz
uQn9J1VLVDz58bHVOzzLJCqeXOZInx/bl01UPNmUTzz5eKXthUMaJyqejPuS
zJPrHPAfOcqH6/ncsq1baJ1i+RMVTz4duXf++aGJiieb8oknD64dNK7t8ETF
k3FvmnnyZ5lP/jIpUs0Hy8L4Tumf/tv/zJNzFZy9r+C/6cyTeR5iXmVf2PLQ
yT48Xq574syTM2VYO+5NilPxZNyTZZ6coVnWzBUmcHsPeZv2Ek++liWs4tuv
1XiZ++PMkzft/7LC3Q/qA56M+93Mk1Ozt14TUzpR8WTkZ57cqP+c9cmVEhVP
xr115smZlza/FVRCzU+Tn3nykmmLv2zmk6h4Mtcf8zbHhPR+QR8lKp6Me83M
k8d7bdtVSq9HVX/Mc3vElQz1wtR+Yu7jM0+uEV9z+4ZDTsWTx8r9a+bJ0d5p
weV+5/weHsjPPLn7jMtDV8xV+6SpD/Nkn3KNvjozUc1n824A8+RJyZ5eS391
Mk9w3a8nnvxM9Ih5MtYX8+TAq6XeBV13Mj9R5cO/bM1w/FDqatWf3mOoP7Eu
tl2YuGHzRKfiyUFyL555co5ph/cP+qA+9ag+zJNtTd5GbRznJH7ywTsDxJMn
td1+aelYp+LJn8n9febJd7YN9JnShPcr1/sJzJO7NRicNbKeqz5tqD7Mk0+t
nlB2RE4n80PXewjEkzs2Xrh8SRHuT1d9mCdf2hTa6m5ltR+adx6YJ99+u2/w
ipMOU5/WVB/mySviT66vfcRBvPSDdxuIJ/+R4XTDv8aq/d/1vgTx5I1bapZ8
OUDNZ5OfefLdlKC/l0xwKp6M/MyTcS5ynz+udy2YJ7+dPe75oepOxZO5P7Fe
Vm7+fq59OffPMW/0D/Pkv8+M7NJ4g4Png3nvgnnyD+WbNP7mM6fiyXiPgnly
5ztzBq467VA8uRTNZ/j9kJZrptVY7aqPH9WHeXJHKR/5+V0O5snHpXzmyVx/
c/9O+od58jjaT+D3p0v/0H5i4f3E/D+LjC/thyY/8+QVMr7Mk1Ef5snLZb0w
T8b+yTz5jsxn2v9V/bEusi7rlNZvi5rP5p0T5slHZT0yT8Z7IMyTs0n5zJOx
vpgnh8n+wzyZywdPTpH9h3ky+od5cqjsn8yTcd5gntxJ9k/myagP8+S7sv8z
T8a7KMyTW2369En9tk7Fk/F+C/Nku+gX82TkZ548WfSLeTLOn8yTob/Mk5Gf
eXJO0V/myVx/rAucH5gn47zNPDn2oz8mXV3mVDy5gZy3mSfHyHmMeTLyM0/G
eYl5Ms4/zJPhL5gn4z0W5sk47zFPxvszzJPXi34xT8Y7PMyTE+R8yzwZ79gw
Tz5w43SbtI8TFU/2pv7EuvCU8znzZPhB5snDq470WvDSqXgy3s9hnvyx+Avm
ycjPPHmp+AvmyagP8+R08UfMk/GOEPPk5V6zAxZ2SFQ8meuPdQF/xzwZ7wIx
T94q/o55Mt4vYp6cWfwp82TkZ56cUfwp82TUh3nyUPHvzJPxfhHzZPhx5smo
D/NkcB7myeAAzJMbit9hnoz1wjwZHIN58oD5IzM2bqr6wby/xDz5hHAV5snI
zzy5lnAV5sl3hfMwTy4nnId5MtcH87OpcCfmyXgninlyWeFOzJPBwZgng4Mx
T0b5zJMLCpdjnoz3qZgnPxAuxzy5k/BG5slfCD9knox9lXnyAuFFzJPBOZkn
vxMuyjwZHJV58gLhrsyTwXuZJ4P3Mk9mbgyeXOLaoCtXdjkUT/74zPqJPt4O
xZPbpZXycHzrUDz58a9PLvZfbFc8Ge+rME8+1Gykb1uHXfHkPG3PRwSMtSue
7HdkxdxMXTg9zHpy/85BGYvYFU8uNrBHlmzl7IonTy23qsOzanbFk/G+DfPk
Wz3nvW62w6F4Mt6PYp58P3H3k4N3HYon553lW9FvgEPxZC4HPHluVd+sjauo
frC8azzTUayBXfHkC+1Ob/m9nkPxZFM+8WRL4WJnQ+o7FE/G+1fMk59Ztw3t
tNeuePLccrbN9v12xZMd7WZumF3RoXiyKZ94crs7G/03V3Ionox3t5gnrz/f
8PP2d+yKJ6/JUnd0aIpd8eT0JhOqf+56/8fwZFM+8eS8+3OXs1Z2KJ6M976Y
J99qcatJ+gf1wbyq0etepvHX7Yonj6rZaVmrFXbFk4vTPMS8Kl2gV95OW3m8
XO+bMU/+Y8LYtw+j7Yon430n5slXju3Ltacmt/eQt2kv8eSGHZ622FtRjZd5
94x58tg39aceD7Mrnox3yZgn9wu+b/3rql3xZORnnvz4Vu9Vez6YP/AveG+K
eXJIgde1x1ZR89PkZ57c6MznPhnC7Yonc/0xb5NXTS30+lu74skB8h4X8+T6
R8b2qlJZrUdVf8xza4FnZZ61UvuJeUeOefK0gzubtCllVzx5m7wbxjx5b/DN
CpMKcX4PD+Rnnty/Tqv5i9qofdLUh3ny4LV91t2foeazee+OeXLdh2Vu5bqd
oHiyeYeNePIj0SPmydjnmSdPreXb5vfyduYnqnz4l/nHvlk5JbPqT2/uT6yL
u0kV4maUVPPB0lfec2OeXP+w5+WZRe3Mf0x9mCfvfljmXNKSBOInH7yPRzz5
eOyFbldH2BVPzirvzjFPLuOx/s3lAN6vXPmZJ3c+M2n9zQqu+rSh+jBPztut
4/Ni923MD13v+BFP/tK6el6PXdyfuv5YFxPveActyedQPBnv7zFP3hs4uUTg
Vld9WlN9mCd/0So8W76lNuKlH7w3SDz53NArT8p841A82byLSDw57FpSxmnL
HIonIz/z5Ow30lI+vWVXPBn5mSfjXOQ+f1zvMTJPHh0d++hBe7viydyfWC8/
jlnXtvBe7p9j3ugf5smea1r4j7Oq+WDeaWSevO9U6sKS4QmKJ+MdRebJpdJz
/TStdYLiyZ40n+H3HQtTbKGervnsR/VhnlxCykd+fk+SebJTymeezPXHusgu
/cM82Z/2E/j9PdI/tJ9YeD/Buhgj40v7ocnPPBnjyzwZ9WGe/LmsF+bJeMeS
ebKnzGfa/1X9sS4q/lRv53cFHDyfzfuczJPPynpknox3LJknV5DymSdjfTFP
/k72H+bJXD54MvYf5snoH+bJeWT/ZJ6M9z+ZJ1eR/ZN5MurDPLmc7P/Mk3E+
YZ48Ynpq0fJ+CYon491R5sm7RL+YJyM/8+RQ0S/myXhHlHky9Jd5MvIzT24g
+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
8on3DqsT2mLngQjFexFXl3nvuZo5lxUeGK54b5GZsb/7LQhXvHf5+B+bvf6g
/DZcPvFe2/FxTWpvjFC8F3FIFe9Nebyt1blwxXsPtZow6fq/v8u8d3tqeuCT
dxGK9/I8xLw6Uu16m1lVoxTvRfxi5r2jy2b4c1OFCMV7u0lcV+a99s058+7f
zu095G3aS7x3VrkyDy//osbLxDVm3nv/n2x5a5cIV7x3ucSfZd6bf0P4tu23
ryvei/zMe7d23dz7wo4IxXsRT5l5795rnbtOP67mp8nPvDd2afSYjqevK97L
9ce8LX2zQKcvz11TvPdPicPLvPejUsXHn0iOULyX6495HvCF37KgALWfmDjR
zHv3+1yOzl/omuK9ryReMPPe17OOR3bKzPk9PJCfee9X80b+OGSH2idNfZj3
bq/Wss2Dj9R8NvGsmff6BP8RWi5PuOK9VsRfJt7rL3rEvBfri3lvtmPHs8d4
X1e89wSVD//SMPemPvb0q4r3vqT+xLpoXiJPoYi/rijem1niODPvnbnsfP8h
1a8p3ov6MO+d/bTyjDX/1sudn9yzfoe41cR7Dz+MCmg76LrivR0l3jTz3sgS
fgm+AdcV70V+5r2Fpu5p1G3UX4r3jpf6MO9tl/GffrdOnVa89xTicRPv9Skf
nP7u9XXFeztR/bEuavt2X+t7KVLxXsTdZt477PKw4fsGnVK896TUh3nvf+S3
nKT6g/fuHRDQMSgv8/MP4p4T782SrVXBNyOjFO9Ffua9zoGbb07PEqF4bybJ
z7z3gZyLiL+ZeOvMewe3mF++U2i44r15qD8xz0fH3Sy7pWao4r1W6k/46zWr
xt0fUues4r2nJT/z3jvtZuXIH39V8V7ET2feO6BA2Qu2pIuK93ah+Yx53lfy
oz5IH03zGf46SepD69fEi2feu1zay7y3E9Uf62KE9CfzXg/aTzDPh8p40f5m
sdJ+An99S+YP7bcmP/PegTL/mfc+lv2Qee+iXqfzzjkTqXgv5hvz3j2yXpj3
Ir48816Uz7wX64V5by3ZH5j3cvngvf/RXm+0l3lvC9nfmPcelvMA895Gsr8x
7+0k9WHei/2Zee9UOT+o73vHfb/t8+NnFe+dL+cZ5r3fi74w710o+Zn3Ql+Y
9+J8yLy3kegj816L5Gfe+4PoI/PeYKo/5jn0nXmvn5yHmfc+LHKv76obVxTv
fSTnYea9z+W8xLwX+Zn3WuQ8w7wX5xPmvUfl/M+8N+BOoLffuCjFe9vKeYx5
b7Ov31WqoubPv+tC9IV5b2Y5j6nve+X8ybx39orLbVrUiVS8d2CpTzoMP8T9
c9b7MfUn1kUROT8z7+0pfo15b9HY+WO8WkQq3pv4sn6Wy8ncn/es++X8z7wX
+Zn3XpfzP/PeXlIf5r15xL8w77WJ/2Xe+/OGiJRZhyIU7+X6Y13AfzHvDfOI
K9ArJELx3nviv5j3BgsfUN/3in9k3rtI8jPvTRD/yLwX9WHeGy/+mnnv+Vrb
xvX/LULx3l/FLzPvXSz1Yd4LDsO89434dOa9W8WPMO/FemHeW1Q4A/PeA5P3
N7+9QfWDZfSB4pPP71XjaPlWuAfzXuRn3vuXcA/mvdeEwzDv/VU4DPNerg/m
5xXhQsx7j2cpcXRvtUjFe88KF2Le+6twKua94FTMe1E+895uws2Y95bo3iq1
Xd0oxXu3Czdj3ptPeCDzXo+G7/ke817sq8x7DwvPYd5rFQ7JvLejcEvmveOF
czLvPS5clHmvXXgs895g4bHMe8F1O/1vvWQyvDdLUt93OSskW/55315wPCvi
FSI/uOLijd2CxzdxpSP/V15jd+x6cMuk4xxb9P74r+7cuGXKb4V9QOInIj/S
76yf9LT8OVc5zWQcG1b6svPAeFf6+1E85L3oSOLBzU9d6d2l/9N3NXr8aSNX
PTtL/w/esLryxDmu9IbS/+08hi9eV9RVH/jHWv4NX57c40qH3/RdWqG6R44U
k47zcPcL+YdbhrvSsV8tnhN44XGjlH/3rfc8EPVcJ/EW30n/YFyyf1ekz+HQ
JJOO/n96LOjGmP2udB4vpKP/41Jvz7nZKtn8LtpbUOJOvvuPcTH1kf6/enP3
x11Gu/Kj/xFvFOlo16CRpwt+Mv+2Zaf8LvpttMTfRH6MC+KcIh31bDorIPXl
n650jMt8ieuKdJS/qOzUuj1siBurxwX5kb5M4u0iHePVo8r6iJO//dtvwqnQ
rg0Sp7WTcCqM18V1f8bn8ko26Riv3St65mlaKcWkY7zmShxbpGO8vPP2bJLa
7rbl7X/0D/JjvB5I/FxTHxmvwt0rtyx37LbwNMNnrA6J74z8GEdfiSOMdLS3
08gNV4dk+XccpR/Qz4Mnrhs36oCrvagn4k0jHeN4af2S0VGXXPkxjvUlvjbS
UX7UltknHzmTzO9iXBCXGfkxjqMkrjfSkf/09VG/x65GXOZkM16VooavWfEq
2aRjvELbZLgS7Z1i0tFvduk3pGO8/JJq1C60LtnS8T/6AfkxXohXbuoj4/Vj
zjntO6z7t73/+zsGnmBd3Hr8+UzlXfXHeCFOOtIxXoPXbH0XmH7LpKM+iFOP
dIxLnn+yXcgb5krHuPw8Z/zr8edd6RiX80WqFy767Jal/X/0P/IjPX3XXa8T
JVzp5vz2aMPNPSuTzPkP41KjjC264TrX/WGMy6rAI2977nbl5/5BOsbl00r9
PfPdv2XS0f/zs7fvWPqAKx39f7zYs82FN7vS0c+Pqqx4mWupKx39fELyt/6P
fkN+9D//Lvqf64lygqld6P+V1A/o543LX9XcV8PVb+jnmtKf0v8W9DP6H+no
53Myvkg3/ew+Hwynwvz5/kyZyk1SD3hze5Ef/U/z0IL+p3lr+Y95bkH/z5L1
0sSd+5m49siP+tC6s6D/sX6Rjv63ua93U/5J2R/a9Iqr373tX97c/8iP9M2V
Mg67195VDsYF+4/8f4cZl1OyXyEd4xIt+yHSMS7YP5GOcbks+y3S0f/+si+Z
35X+7yb7/Fv3c76Jn478GJevRC+QjnEpIbrj9x/9ifwYl0eiX0jHuDRy10Ef
1B86iPwoH3HhkY7xgv4iHeOCuOdIN/oiOi7/b+uDcfGWuOd+/9EPcn4w+XvK
+QHpGMef5XyC8pE+1v1cpPof6Rjf5u7nItU/pj4yvjiPvdepTKb8unK+3S71
QfmF3c+HPv9x3vPBuF9xPx/6YHzpPOmD8b0h51LUB/UfIudz1Af1X+9+TvbB
uP/tfu71wbg/kXNyt/8Yd+RHOuKhIx3zAedwOc+b8cV5HukYxxbuvkD1M9LR
z+3dfYfpB/Ipph/I15hxIR9kxsVbfNP7/z/S/Yb8GC/yX2a8iouPQzrK6eju
+0z/L3X3iaafo7M2CGq6wpWOfoYPZX+ap3Id//n+TuVPz0t8IvanvnP6vbWm
OJQ/7VRiy/dfHnOlo/8dTfw79TnsUP4U8ZjYnwZ8W6x88D5XOeb8EFD9RctQ
VzrGJft3vmcyhrvSMS7bT78881kWV/3R/01ybj/r3ciVjv5PqlDk57RFrnT0
/6xmC745dsuVjv6/1KBz2c8yuOqP/s9Ts/DdH0q40tH/07Lu9i2YNVH5U8RV
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
f9ps5cxl4T5xyp82i9gyuHKPWOVPH268cGf1uRjlT1PkvWj2pysD7w/NWitG
+dMmQ1tM3t/MlY5xedB/04IeXV3pGJemG+3X7zW7ofzpqoRiBb6vdVP50wWZ
u56Lq+iqj4kvU3VBUN1SLp9r4tFU/ORN596udPMdafnpUwJXuNLR//s6vqi5
57RN+VPEfWN/mue4T8j3T+OVP/X6OiWkxoB45U+byXixP12+b//aP36NV/4U
8d3Yn+Idb/anG18E5v2svE35U7yvzv70myJbm+340ab8KeK4sT/Fu+7sT78s
1G3c3tM25U/fyjv27E+bvPq1ZZNIm/KnGBf2p7MlvgD70/DXDwZuD7Ypf4q4
aexPS57ptGWmvysd47W8w4MGlU660jkuHvvTV/5pe7vF2pQ/Rf+wP0U8O/an
nTy3Ddjwq035U8TXYH+KuAnsT5/8cOxll+425U8Rv4z9KeLBsT+dlfr16b/t
8SYd44h4Z+xPa9R8WGPSkHjlTxF3jP0p4o6xP/1l0cPKpYbGK396qdb4PA8+
8HEYrwr9ki+EL7Mpf4p+Y3/aN7Vn11gPm/Kn/+x93w/sTxGfhf1p0dNFel37
PU75U8TPYn+KuDDsT68/OFb1H0eM8qeIy8P+tMTCDnu6lYxR/nSqxCFif3rj
854/FugUq/wp+p/9KeJtsT8dUSXnkewjbyp/OiDrj38862lT/jQ8cGepsJtx
yp8ivhLSzb2SzmkfvTXxvFz+FPGbzO9K/2/Otzj57h/Ryp+aeF7yh37eIvnZ
n5p4ZPKH/uffRf8Xo3qinKbULvR/JPUD+tnErZM/9PNA6U/2p8Ol/9mfYnzZ
n05znw/GB2H+sD9F3DT2pzQPjT8Kd5+35vx/232eGx9UXNYL+1PE8WF/2sl9
3Rkf1E/WL/vT0e7r3ZRfUfYH9qfof/aniAfE/hT7D/tT7FfsT7Efsj/NIfsn
+9M5st+yP/1Y9mf2p89ln2d/ingx7E+hF+xPO4rusD9Ff7I/Rbwb9qep7jpo
zu3QQfaniIPD/nSN6C/7U8R5YX9aTnSc/SnivLA/RT+wP8X5gf2pj5xP2J9+
4X4uUv3P/rSy+7lI9Q/706/lPMb+dLqcb9mfjnI/HxofROc944PofGj8Dp0n
jd9ZKudS9qer5XzO/nSS+znZ+KMm7ude44/qyjmZ/SnGnf0p4r+wP8U5nP0p
zvPsT8kXqH5mf0q+w/TDSnefYvqhibuvMeNy390HmXGBb2J/2sTd35nxIv9l
xgs+jv1pc3ffZ/rf190nmn72/XrAqe++cP0u+jlYfCj70yqjt6blLBen/Cne
e2R/mvNl1vihc1x+EPlzjXs4I99R1/1W9P+lpvFVC38Zpfwp3s9kfzonz8W4
4tsilT+9EjL2WYfmrvIxLnm+/cxzZpIrHeNSq8rqFzcHuspH//s9y2eveduV
jv5vc/jm0Pr5Xe1C/1vGb3rp09SVjv5PKt/zXM4RrnT0/5zo3MsTlrvS0f8V
6g95nXY4RvlTvIfJ/nTSpXTr67s3lD9t1fJ0zmNzY5Q/xXixP+32qvTTgPXR
yp8iXgz7U4wL+9Nnw2tNLXwjWvlTvAfL/rRR/hnXnrSKUf4U76OyP8U7tOxP
A3uHfFohLEb5U7y7y/60RqJXj1zdYpU/nSvjwv70iryHzP60aBVHyzCPG8qf
Ig4L+9Ne1iPTvxxzw6RjvP4Y7fdN9JFYk85xdtifzi/wR0jeErHKn6J/2J8i
Pg7702H9t45I/DlG+VPEQ2F/ijgy7E+vZuzTeUWuGOVPEQ+F/Sniy7A/fbZo
bvKLra50Ew9C3j9nf/rD5s8OpP07D9mfIo4J+1PEMWF/Wmjs9Edr+8Uqf/pF
1LggzzMxyp9e7xe26O8FMcqfot/Yn65vc6FlgyYxyp+iH9ifIr4M+9MVXwza
82lytPKniMfB/hRxTNif5jq42yNubpTyp1aJO8D+NFfxj84nT4hU/hRxOtif
pjqPt47NGq38Kfqf/eliiTfB/nT1+G1tPj4eq/zprldjCuYpE6P8adbYZn/c
iIhW/rQH4qfIH8Yly8n47y4PClf+0cQfkT/z3SnigKA+Mi6cjv7ndPQ/p6P/
x1M6+t9T6ol0c3+B2oX+Rz8k5Zxa83Lpc96o/wQqH/1v4uPIH/of/cy+dZWM
C/vW1zLu7Fv7us8T448wr9i3oh/Yt550n5/GN+V2n8/GF9D8N/5opawj9q2I
R8C+ldaj8UdY1+xbR7rvA6Z87BvsW9H/7FsR14B9K/Yl9q0FZB9j3zpD9kn2
rf1lX2Xf+lT2Yfat02W/Yt96RfZ/9q3QX/atiBfAvhV6xL4V/cm+Fe/2s28l
fTTneegj+1boLPvWY6LL7FvxXj371q9F39m3Iq4c+1b0A/vWInKuYN9aXc4t
7FvpvKT6n30rnZdU/7BvbSjnNPatjeXcy77V1/3caPwRnQONP6Jzo/FBdM40
PshPzqvsW3FuZ99K52fjm+g8bHwTzs/sWwvLuLNvXSPv2LNvnSznc/atX8g5
n31rsrtfUP3MvpX8iOoH9q3kd8y4kD8y43JZ/BT7VvJ9ZrzIl5nxuiz+jn1r
Hnc/aPo/t7t/NP2cc3y52qE9Xf2JfoY/Zd+69MKRmZ2nRCnfGirvVrFvjW84
pmaFJa505P+9Z9VdKdYI5VsDypX1Wud3TX/3K+90sW/1c9RcuD3uL+VbR3c8
VHxEXlc6xmXhqVp7arS9oHzrxaalT9ef78qP/s90NueNJpcuKt/ayD5335yO
l5Rv/S4100/Xoi8r3zp0RMrAK1evKt+6N/BWqUFJ15RvHRox7OWDa9eVb90i
73qxbz1X0ra6k1+U8q2B+w7GvjsYqXzrKRkv9q2rbcWL/PkoQvnWU/K+GftW
vJ/GvnXdM+d3+X+LUL4V79qxb/2riI+v/XCE8q1n5Z039q14T499a9SkuTnz
XY9QvjVB3g9k31qzxccVs30aqXwrxkX9v6q868i+ddCb5Ab1AyKVb8V78uxb
fWdO9cu0M9Kkm/t01ZYln6vtSud4AexbN571970VF6F8K/qHfSve+Wffusuj
a+6LWyKUb10q74iyb8V7+OxbV13ofrfMvAjlW/GuO/tWvIPKvrXPxPs1G8x3
pWMc8Q48+9Z7+7eefFAiUvlWvMfOvhXvsbNv3f/N0S0VPo5SvnX+gmpxlpBw
5VuvLWk0+Yeb15Rv/Vn6jX1r2WG5B97eeln5VvQD+9bf5V1c9q2Rp95VDGx/
UflWvCvOvvWpvMfLvjV19c371U6eV741o7yfzL61wrfJw+8GX1S+Fe+fs2/9
7GCWY78UC1e+Ff3PvhXvkLNvXfDk708L1o1SvnX4/kGVzrQLV771daNKG5tU
vaR861i8Ay9/GJftc4pMW/FTqPKt7fGOuvxhXI7hPXPUR8aF09H/nI7+53T0
fwilo/9/lXoiHfUcQ+0y3ED6gX1rKJWP/jdxBOTP/L+29DP71vkyLuxbS8i4
s2/t4j5PjD/CvGLfekLqyb6V5qfxTW/c57PxBTT/jT+KknXEvhXvKrNvPeK+
Ho0/wrpm37rIfR8w5V+VfYN9K/qffSveZ2bfin2Jfese2cfYt96VfZJ963TZ
V9m39pV9mH1rE9mv2Leulv2ffSve72XfCh1h37pd9Ih9K/ZV9q29RdfYt653
10dznoc+sm+1i86ybz0qusy+Fe/usm9tJfqufKu8u8u+Ff3AvhXnCvatteTc
wr71gvt5SfU/+9Zo9/OS6h/2rTinsW8dL+de9q1n3M+Nxh/ROdD4o7Xu50bj
g+icaXzQSjmvsm/NIud29q3b3M/Pxjcddz8PG980Us7P7Fsx7uxb8R4v+9bz
cj5n3zpEzvnsWwe7+wXTz0Hu/sL0c0N3P2L64WN3/+IaR3e/Y8aF/JEZF/gp
9q3H3X2fGa9u7r7MjNc48XfsW0Pc/aDpf7u7fzT9nKHU0T+HDXL1J/oZ/hT+
Bf1z50rxeh3bJpl09ENVv9Qtj24kWbbJuRHjMnZirW1rGrreB0b/4B2wf+i8
jffHcP7E71aM3D/pTIsU9Jt6xxV+AfWxF+ka9tOE25audG7He6fyvrHxHQ3k
fbb3+9tjU3+fKWtbnFjiSjfv6T2rNvFtbLJlq/wuxqVw/IK6ORenSLsem/oP
Cqi282B6CvYr9X5pe6rnfalnGuoj7Vq6etaZe+nmHTn1fub7cqJM/XfOvf1P
6uBkUx/z/2L73rSp1ibZ+BSMSyN5L9FPyjHfpci7iG+kHLT3u3z++SMKJ1t6
SH60d1/nkR711yRZhrbp9cm8CudD+P1M5Ee7klOm9Kr48JYp39zTeXS63LTI
JEs7OVegXekDtsduK50s+0mUaVfj60Va+O+/ZWl//0y7+2dOhKBdeIezq5SD
dhVeVLdAvilJpj5oV3DrW2Uvh+BdzUMh/C5lU8mP9VVEyvFFPaVdqE8bOnfh
Hcv3+9tj064B0t62dO7CO5atpHy0N0n6LV3KQbumF+nS/0HVJEt3yY92Hf7z
88ZPHyRZOtN5Eu9zZngfJ8icWybI+Lam8wPeY/Sjdi2Vdkm8IdMPT7q3mbHz
j2RLL6kPxhfzU9av6Qe804t2ob05LleNmNPTvA+s3lFEOegHj/ZDZsR4pphy
0A9Yj53p/IP3JGUfM/3wquW4WsdfpZj+Md9byj6A/OZ7UXnnuSPpHd4PlP3N
tMuz8Mzpjw+kmHJQzyqy770lHce7iMiP+vQ8vqhkz3/3k3TSZbzXt1vyo//H
yP4M3Ud/4j1A6D7qiX0e+fndP+RH/aEXwqOMHvWZ+XaC/RDeZdXv+6Eccx+8
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
K9BPeP4O+sn69KUh6gi98BOev/M/1mB5lA==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtlgmwTmUYx889lqN7vmMbQpbuzXZxLdnDtW+5lpuQfc1gSJbIlGEQiqJo
DKUUarSZokWyL9mXkZr2lEJikOxFv/88z8z3zPM///O8z3m/9322zKGPdx8b
BkFQIS0I8qGnR0FQCP0iumEcBN14WTgJgj7oOvD90I3ge6KLwhdDeoMfiM2+
K7gIXFlkOLgZXGOkGms343MwXBZ4I7gMNo/yvBVcD5sO4HS4gej7sOmPHuLf
3YtNXWxa8Hw7FQT/IU3A98Ot4F1pbN5FfxCZTVpiuCr85+g62h/8Da0DDwDf
jU1TxyXBo9F1sX9SfnmeiW7L+zbo1kgIl41MA+/H5250c+x3ovOwW43uyvuu
4DfAD4I7IK+Bu8B1B78Dfkjnh2zW/4OriowHt4DLRZaCK8Hl+Llt4ltjxIE/
BX8Ibgj+Btwdm/d57ol9HrIGfAL+kdj2NQJuALIefAb+LnAuuAHvx4OPggty
4RMcD4QfC94P7qO7A88DdwDngBfqf4Fbgj8D/4nPm34XOv8x8PvAt8D1sWsv
/4mdoe50HXxF+AI8f8262uB64O9SxucHHwPfC/6XmNwLztY5wB8Fz4mM3wfO
hC+KzwVwd+BuIwdThkvCL4G/DoYKZnkMNMLPdYiJPCvuT/E+ApQCFwvN/gay
B5sK2BeGfw7bych5+O3wl9Hp8H+kmQjP5P2EyL71TGR+5f90mq3lCIK56Fu+
N+1Rd/oYkp+XzfnWKHCmx0JjbCYp7uCfQteAr+2x1yY2/mlwdbht+K0eWEwq
X5RjpRPTei6VWN4qj4b4N7PBuyKLa91NvsRyTDaK+fbIHPj6ieG5ijnf50hw
hcT86D/cC66CjPMY1h3rrpXX5TzHVQfKgxd4/NTx/GqnWIot57IS25P2dhzd
GX4ZfOXE7qYoslOxxvN8cEedA3gDuAe4DLoMa8uiZ7D+Kmf8JfZX0CUCu1fF
VRHw87yvoBoALodu6vGZg26p/wRurvxH7gnsnHLcRud10+NK8XLJYyAFXyK0
bxUOTYTTtc5j+ziLVvHtLPAR8OLI/tePygV0Oexj9HzFJ/owfLnYYm8HOCO2
ON/v8S+bQ+BWXldVQ9P8fynHOiIZgeVhL+zbga9EFreKz/HgsvB/8bwtZfEa
emzP8nhWLCu2ZbMV4jp4D0ajOfv+qvnYRNSQdfoe+Bh6r84uMLvBsXFPqFeA
d4FHgnco9rDZjn4dnxmqJ/ivH1o9r6s6jFQJLG/L+v1moldHdi8foxsrHgOr
7xX9vlQvsv088xRDfg5V0WO9lip2m3pMKt4WIcXhK7HHiXC1Aut/05UH4Bno
KaHl2mT0VM8p5eckz1nl5CykCXh2aGu0VvlzJLKcauC1XXmU4Xmjb72MHur3
qNxVreMXTI0sThS389QrE/uGcueI58tOdK3E9qr6cIJzLA1eqroFrqR9x1bT
lBdbPK4KsHZKZHGlGjU7stwpqP8VWX/U/1WN6e53oR7f27G44V5PRqBfQeoF
1sOW+JksQn+ivAIvDq0Hqm++hz6TZr1MPa0b32oG/pVvve1nqJ7aC8kE90Av
d5/yfVL9Xu/Z+MOs/Uj7Am9Ct8bmi9D6lfxf5DvDFE+B1dkRvmfVsAOR8epx
axUTgfXUU5HtU73sXGT+BuH/58hs1PvW+/86EFqeKF/OonelrC6Ux+eh0PLu
IPqnyPZ23uub/Mhfv9je98f/hZTFaw24TrGdX1ufI7R2RWgzjOajEomd25vg
TqrViZ2R5o1aseXQt/j7BSmpO4st14rhZyH6t5TVzaqqKzx3CmxOOALXHnwY
PSA2PQ7fJz2uZP8qduXBp+GyYsO/p4xXPq5B34jMj2aMzbwrFFp+pfOcF9i8
UdznS82QG/ysNoZ2pzp/3YPOQbHTRnftc47mKM1db4E7wx2LLNc0/+icxXdL
rPaqjz+r2SFltV5z41VwTXDN2GZL1XslwVe+T83AKz1/Nc8pRhVjzbVfn3M0
IykOVccueD9V/VkZ2Zmot5xKWb/SXb+A3s3z3x4bLXy+Ui/TXK0Yv5yy+Uu1
9KXQ5kndb25ifUHz+TSf/RT/fRPrZ6oPyvdc75vtEpu9Nav/o29GVmuHJ/Z9
9Sb1RtVk3ZHuSvOY6uRa8LLI+kh1n1e3sHYYa7eicwKbXzWbqZddxH+12Grz
WXCEXafQ6vNAnxXVo895jN3xGVW9YFRi96B6onqf6/W5C/qS/g9Yf/pKymq6
7quX72eo8jFlfVexXTm2/vk93KDYYixm7SWvgcopzRKa95Yrr1O2T83Dq7z+
qw+0iq3GJ/jvC+4Cn7+Q9cr8ms0iyyfFeanQvqs+/wP+rim34cNCloOab6/5
+ajHnQH/D8aYdX4=
            "]], 
           Polygon[CompressedData["
1:eJwtmHm4llUVxd97GM6F73tlhgQEQZB5CBBQBnEAHFBUCFGQydS0gUEezcon
S03NTMtMyzE1SiWRcgRRBhlFVHAKJUcEFdMEBEW09XvW/mPfe9aZvnP22Xvt
vd8OM2ae9qNUFMX4mqKoq/8vVoviBcm9uSj+Krld8i31N9OkLeofWxbFnWof
rb4tGjte+C7hAayN+bdJXtXc12KvbhpvXXhP+vol78ncV4RflvxJ7T9LXlK7
vsYP0HjHSlG8KdxI+CDhv2XPrSfcsvCaTcJ1hJsI/074v8LthdsLPyC8Q3iM
cJvC91ki3EC4gfBlwvslX0ku1D3mSv6n8UM13qrweWZLpJpip/5slbwv2SbR
0YrLNfac5u8XbizcoeI9Nmr9cYX3flrjH2pc/4o5ws+r0V3jTYXvEX5fuG3c
52bhbcKthNsJ3yr8H+GWwi2EbxL+pOo7crf5ko/YX/IXte+WvKP225I71b4r
u90s9E3ffdm6QUfvxdoOah9YeA/O8EfJ1qrP9oGkY+j3DvVP1v0mSc7UXSdJ
+qh9mcZ7aHxZto00SbYB3neqxheHvXwkPE74fuHDhDcJHyv8e+HBwq8K1xWe
KYxR/kBylH5jhKSr+rtJ6khGqv9Y9pTMEX5R/0dr/Zda/4bkdcl49X8nZL7G
hxQeO0v4UfYV/lD4U3QquUD935ecI/kudqC+zySl2tXSZ+As56m9QuuHa/3W
7LlPCp9YeA1970nOLT2XPegvamVHtf6N1Zy/8G8P0J79JQ3VX5GcLLlX40do
fLPGd0qf44U7CC8Qbqvxc4UPEf6XcF/hK4S/Lbw2e82/JSfFXtO091RJRb9d
lWzWfhXNb6v585gr3EX4YOE+Fb/tGuGTCr/xCcK3Cg8VHiv8huY3FW4kfKPW
d0Rvwhewh9qDJNeofTVvrPY7mjMMW0dHpe/wILqt+m6Pqv0INln6vQ/S/0/k
L720ZiX+LDkG39fYGI31kPxE7b7qW62x4cIfaP52yUPJPoAdp9L20Qg96P+h
mv9Yts1yr7rSRb1a6wBugWPQzWzNf17tseprUGtuwLawMTjip8L1hffo99Zo
/i+zuWBb8MMt2bpBR29p/O/ZvjxY+JuY3xBb0dxnquYT+KGO+i7U2FP4d435
r502vjibl3eob1nVNjuCt0+25Wuy58KZK2Ic275Z+BiN7xIeKfw4/lLaNg7H
l5Nt5P7g9wHCX1btg4OEH072TXwW370dHyvt13AjHAnHX5HNbV/qfOur5qjm
ws2TuesF4f5wKZxY+g7cRc3iIo1dHefnzsur9h3s5elkH6qvNxhV+E14m33Z
vrcSfhDeHfd7TnhmaV/GXpYn+/QlwvVif3TLnuy9VPK90hwNV6+Dc4SnSOen
xHvDLR/H/fFxfJ3f5LdXSX5YmivhZjgazrwy+27ccWnYdyfhE4k5Glgi3K2w
v8Ar3Svm/nbCH1dtj/hmT+HdwtM05wm1F0lmxHvwvnAY3Iov4bvHJfsUOkAX
J6tvsvZ+LZtbb1PfKHwlmwsfFB4h3KniWERMJDbu1fge/Ed6ryP5Qn0DIx4R
f/cLD414QXxZJ+mu9o/V17O0Te+K+IitH1uxr/4MjtL4r8M/8J9VVQttfOoX
GlspXGpuM+E/ZNsEb8cbtq1YpzsiV2kjvCHiv45aXKv5s0rrgLufJRlSmovg
pKFqr8NYk9/o4IrjHfqvUd+zGrsuO5YT09cKr5Z8UWObxraZ802N35216BBd
LiCmqL1Kfb01dxacU9rH8DVyJnKnt7O5lDflbYlT85L5bYLap0d8fEAyUe2X
s2MlfYy9lZ1r3S18ivB24RPCHuCDFZE/5eQ4jM/he3A4XL4zO/bA8XA9sZJY
wxk4yyvCA4WvFx5WOp7hb/cJnyb8UHYsmsAblT4DZ4HfT8X2NN5P478hRgmP
rjg2EaMGl74jd8VH39XcJyRdiDXkKBp7PJurJ3J+fJUYIzwFm4MPJKMiXpH/
cF50hG7g/690/31Vn3Nhdn6JLtAJuSUxkvOcLdyqdPzqIHlW/esli+JMnGVa
zJmu/2uy13YSviWZ0zZkC3fmroz1l/QLniUWkxORG03VmpalYyL22BNO01hn
4esiPxlT8dpLkzmaPXoL9yrNo+TXrUvvxZ7Ls89+fsR/7rA28lFSjl+FvWLb
2Dy2vyb8DR9sX7G99lF7nMYPKJ3T4rv48N4a2/++GvM7mBjaWeNzIrYS8+Ey
OG2YFrYpfUbOtiLiOvnKefBlvDFvPSlZr8QM9uY38CtsCts6XdKitA/NTT4j
Z0UXl4T+0clerR8U8R3bWRD2eZj69oQt0KYPmxio9Vcl+9DG7HzyGOF/ZudT
5J+c85ns/AOdjE326VXRR25Cjsrcz7X/qck6QTdNS+uyT+QnT2VzPlxPLtkk
7t8lzttF+KbkmEvshfP7Juck8+JM5HrkvJyVHLhr+Bm2152cJJnj4XrGLk72
QeagQ3QJRw+p2CfQA3puHjI52ccWhv13Vfso9X1ddb1ADkPuAmnCAfg5cRpu
IM8iHgxL1iNzhifXGKytET487vuPbB1cFOdBN+iI+HBGsu6oZw5JrjmoPS7N
tmVsmloLG/46bAXbpqajtuuRXLuS/1Frsgd7wTlwz5X4VOkYhm7RMbFtYfDL
kOCOR0Lf2Cy2+1jwUa/kt14f/EbOC3fg93AdPtw59idWtkiuXcmXGwcXb4lY
gh/hX7trXGOST8FRcBUxj9jXW/j1yKfIL/aFLzJOLPqsxrGSmpfaDH19WnUO
QS5BfUedOD/yg87JtePc7FyTnJPa9KrIV+CHjVXndOR21ATUBjdkx1ZiLLU2
OQa5xvGSXdWw4cJvjC8+GfkN49QzcDbcDWfBC+QM5A4HJteqW6I+JV9GV/At
3DwjmX/JKcgt8Hl8/13NaZ0co4nV6Khhsk7QzcPx/tSHuXSdjC2OEK5Xujbg
97FZbPfFiKc/T+ZacmByYTgD7mAP9sL/akv7Abk898W28Vl8b3ayL68OPoWz
qFWoOeH2a4WPKO2zcBf3wZcXh79x33alawZ0gU6o3TdHfL48ObaQQ5FLESOI
Fb+NfAWdbK+ad4kN1OQDSnMCsYT5cMVL2bGHGERutCLwOcncvSnyDfIlarmt
8f2BbxJ8m6BOHZ185sXBb/gyHNO4dA5ELkSOQa5BPrYhOYf/PNseeZN6EcvJ
wZfG+MSKa5Ybk2scapmjY0/2opYh5yXXIefZIfxmdj5FfjOydI57R8RP7k49
vyw536CWhCPgCr7B8C1musaXJNcc1KqckbNwprNL1+jchTudWTonW5ica5Bz
sCc1ArUBv8X3kfXJNQnnnVI61+OMnJUag7qBupLagza1xOjCfdQs1C5jCufh
fNNgjDnnx++TG5KTjZO+zhC+QfhI4W3Z3xfYg7V7Q2foblKcjZyY3DjLqWtr
fWdyUnLR6eEPxFXyRr7t4eP4Mj49WOuuD76BD8i9yamxFWyGPIwzcBZqcmrz
I4Mf4Uy4kxqS2pQahlqGHJM9WEsuR42En8HD1E7U3NRi1GR8x2AMX4SjmQOn
w+34CLksNdKi0P+Eit+TGpGaYFbYHLbHNxe+veCT7MFafJXYdk/YAzGO73mc
gd/mWwo+QQ5B7oCvwHENw4/hvv8DGDOebA==
            "]], 
           Polygon[CompressedData["
1:eJw1lnmYT2UUx+9MTXdyfxcVCmOZMWPfxzpmIzL7ljEo0ijSokz2JaMYZafN
UlGoKDyhp+zMDNkJ7U/WNtUYJiZR6nOec/rj8zzf+z3nvfddzvu+Nzz/6ZwR
wY7jFEEINPYcpybG3VALTgUcJyjUcdKIFfO8Gypcx/kFNqIPQjKxmzzPg7kS
o01D/LfQP6F/hJ+hHl5T3t8V+qFz4H6403ecPnifoBPR3aEH/ECbBnj1Icza
RuI3gihYjJeKVwN9F9SEgXgxeOnwBvo1eB16E7vXVy3eQkghZw59nA2L4B68
89JX6TfcgP14/Wn3LX41dFWoAlG0vWDjbIb+Ff0bNPH0PWfQZ+Gc5ND+Mbx4
YuHoCPiXd6cyb9vwt8Lvrs7Bp+gtsBkGkfcwDIZ82IGXS04IOhHdXcYF0Xi9
8Jail8Aim5cWEIVuAo3hMn2JJ+8jmXdPxyhjPQHH4Qy8LzFyesIm9Mfwss3V
IeIHoTd6Jl4COa3QLdFZkA2VfCMV/210JrGz5J+DNLxVeN+jy+Ai5Mq6Q19Y
K/VAfj24HOQ4AZ592GPvW4F+B5ZDBjnJMBfdjVgsxIEHyXhJcB90sHmROklD
n+Kbp2E4XileP7y/eL7uat3XsPWVdT7NdzPIS4dM63sWOQPQ69Hr4EPrcwI8
g34FXpX5Jqe/p7XzJPopGOHrd/fKmKAE8myNItFlfO8ilEMyeUmQYvMo4y3G
L2NextDXGfCiq98dSXw0jJI19rXu30Qvk/0n84A3mtxRsFNqlHfU9bR/B4gv
gPlW47ssXkDuNJhu6/Ye8Xdhpc1Btqd1kkUsG3KgGYzHGwdjpDbJCeXcyKTG
j/J8BAbineQbt6Ibob9Afwnt0N3w4iAW/sHbD3/Tlwae7k/Zp+NgLOy2uQgj
NsT2RV/0VWKVMAh9DG8ksdvpQxVYiL8ALtG2KbEVNj4Z5yG8m7yvIe1uohOI
r8XfDFvgO7zWeG3As70/E/8lKCFWXfYI+hq6K7oLdIK2nq6TrNdxG3cE3p/o
jlKf0B5ae1qXUp8XXD0HZe9PQk+EfTYXRehbGEs6c7qPnM/gmtWv1PFtoTru
Al/nZRd6J2z//9wgnkHbwzwfggc8PWPlXF4qex9WQ3Xa5so4iG/neQf8QV4F
XAlorLOnZ11tdF2oY2fnKnJXwiZIkXMtoHMeIWsuZyW09PSOqGNtw+0MDdC/
bPq3gefjMBjvqK2XtDmG/hwipbbwTgR0TRfa/Dp4QRBi9TUBf7z0n1gl8zcV
XY2xFRB/Vs4nWSc5A4i3RbeTcdm6FZI7Bea7+q3tsmaejsnlHaFSW76uZbTU
BrF15K6HFr7uR9mXE6GHnAWyjtAT/bx8g5xeptuh20M0VPX1TpS7McP6t412
W6G+3SNxnup89BAYHqx3yx5ySuGkq2djPV/XMk/2B/SxdXuO+GQ4TN+D8Wah
Y/EfRQ+DoRAm96XkytzLOQ+tfT135+FdYj7Lg/QbS2i/GJrbWSb3THP8yehJ
MMHmIID3OPoJGAuJnn73EXRtYnWgrq/znIqXLue21dBeW8P6nu472X8bYYOc
a66+Q/os/xb9pbZhANyB9zVtv4JvbK1kv9Wyf4Vu6F1ypkCS3Wtd5D0Q4+vZ
FIN3nbY3ZB9CCbnF0IF4EbGj1l7ec8DVOWvj610h99p5vHI5e1w9X+Telvs7
Xva/p3doK6s/qcOr5CwndxmscfX7ciYO431DpQbs/sqzcTwk5wU8GKz/PtKv
QvRUmCF3AF5H66voTujOcMTWP9zT/zb5f5P7t4J5vgpXoDSg8zKLvDkwO1jv
fandF9DTYZrVs9TLFPtuoc2BI/868g/p67na3u6P1egPYE2w/m/8B6ucSUE=

            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3nQj1UUxx/vU3rydH8iSzGyJluUoZS2KaOhRmJskX3flyyvfffy2vfl
te8hVISkZaZ1WkfEVFSMpSjDJEn0+Trnjzvf7z333Pu7z7ln+5Xt2K9J36wo
iu7NF0UxWDETRXsgK9Mo6sa4wOKkEEWlkihqwXoxsCSjFbwaeH9iOpPRacq+
UcibCRlT4MdYm8A5zZkfCb6GvDX4EmM8vAV4EL2m8MB5h5xLlmF+FBzK3u/A
V5AfybK11ro368edX82ye54ER6PfOTU+BN6Y38hGpxHYFfk55OORd0jt/GHw
0omdr9+pAW8ve4AddX94Eec/sD4c/bacNQb5eHAc8hHwNujUZz4U/jS4ljEH
Pg7MYUyETwaro9cJ3pN9E5lPhY8F/+TsbvBL4ADmufBBYD/GJPhgsBd7XwXP
c4fDWWbnFcy7JWbPGZzZx/W174zb7RT4FDrF9Dbsvca8C/Ir4MPIBsBrgW0Y
g+EvgzXcbrVj+x591+Ngd37jIvumc0495gORPyPbxmaHzuA0/y59XyfnPcCe
she8O9jBbfgE2CU1m1fijif8bqfBX/x99ea70VsA3wWuYiyBvw++w1gI3wfm
MabDl4JrOHMlfG1ib90MXgg+hrGM9Qz+vgichXyJ/DExvghcor3I7kRnMN95
OcveawFjBjqj0Jmf2F3Ko/Omn7NTPo7+z+h3QrcvowCyFcgWMWJ4b2R5qd15
DmdsSO07qnHODnA+8u3ga4x58M3g8MS+axK42v1qr/wqsfXi7F3BOW/Ay8Br
ylfQeVDnuS/NBS9yh2xwZmpvrLduwhnDmFdjvifYHu19MrH4HQ5vCX+Ltcry
A2RzUvPlH5F9znhOb4msEL/9tueQ6an56jnWD3qOGI9sLKMh/AtkrzNKwgch
m5Ka73yE7DijnfwY2algPj0VfhW+Ab4Ufgk+Et4/sbhQbmkHvoe8DvLG8N+D
xxL68xkz4fm4YwF/+0V6h9Rskx/ZDfRzZffU4krxNZBzyjFawu8G16NTWL8r
e8MrwesjvyO2+NV73yZfh98OZsXmz4q5gonlN+WZhcHW5A8Zzz9lwL9Y6w6/
kWX7dU5BsDBrbeHlE+PKRdnB9K4zRsAfQ55BdzW8gcfai7HZ/HnwK9kstTj+
BD7a37cV+z4Llr/0jtJRXH4cbL/O6ZxYrtM5XyonM5r4m76gN4zsXZVntedr
36v5N/BGiem0TsxfdKbuWNpzy32x2UX2UR1QzlIOGMPe82BX5DXZO5jfK6sY
8DzfTnuRn3Ud6Sqf/AaODXaObKsc3wv5P8znBntT6YxzG8rmdRKL0X7wW8GK
zivEdq5qx0T0e6SWp2fAS7DWR/EClmP00DvGFiv63qrKn4nFlHxStbUDvAq8
kMda8dhyhvxE+a+H59hpnD8wtfUcvV2wmqfccpfn7aKKh2A+1wf5KMaz8E+R
HfIYmeXxrtq7H9nw1PL9gWCx/wB8d7B1xVF7t7POb5hYTnhIuTYY6rv0nv1S
87dVyLe5LRTLDRI7c6/ra/8++CPIU+WHYDrD1DOopvmbbg/mL6o7zZF/6z4m
n1kMzw+vlVgdVyyUhQ9JzXd2sP4B41H4CGTVFaOR5TXp6A13sr7LY1Z5rG5i
76X4rerfpfu293yi3KIcrjvnBatPqlO6w0TvbQ673WTf74PJ1dcchZ9m9Pbc
NVc5Dv5T8FjinGmp9Q2qm13Bycy7yBfQyUmtTp5wrvr5K/wMo7/nNNlT/lkP
POZ9iXJmK3BCZGet83wom+i9lEvWIFvm9pTPjHaf2ep5V/Vadbukx6ZitHZi
+U15Lzu1vuBDt7fqSN3YfFU9xibkmz1PDkgtL3VULHgMqu+YF6zfVB0fA15h
vj62GndBfhlbP7NU9Vq9BLhKeRm+SnkyWK8p3z7pdpYNE/L4QvhI+DzGcvVI
idUN1dxN4Fm3oeyf4+cvS6wub0VeImN9jnJLBeQVvK6pN1ieWp0vjSzXe4Nq
7sOK+9n6Dvhq9m5EXjRjNVv3X4t8P7wSshn6PXTyEqtNs5DHyJf5HUrCs/UN
qifwvon1dfqu1L9R9WsbOBP5FrCU5yLluJt74VPBmYn1FKXY9672RXaPDYnd
cx3nLE6tbwroLEhMZ01ifYW4ZLqbfucedGbHdh/V1OXee5RFXixj77jUa6vu
f0vG/i/ov0MJ/WZq/VqRjPWlnSLri6swPxDbfdSDqadSX6ZarH7ssvcv6oVG
gH+7n6ifqex7defrwXpQ1fGb9Vy9cWw9ifroP4L1geq1csHZqfXg14LlT/Wz
W4L1e3qXLM7eGDznev+jWP4vWFzrPurR9N9BtXh+sDPV+/8bzLbqOQtzzv+2
obBD
            "]], 
           Polygon[CompressedData["
1:eJw1mHf81lUVx788F/Obj/cBRVKcTIlRDkzTLJPEVY4IVEBA9o+9Ym9B9gaF
nzIEWWquHJm7vacz0xQUxVyVopZZfd58Tn+c13PPOfd7xxmfc+7Tov/orqMq
RVF0a1AUDfX79bIoLhbdlovidtETok6pKL4t3Tcl/0HIGHcVPaRxe+k7iE4R
bRXfSL/DNP/L0t8n/l7RNzS+RPSIxr2kv0bjfqKHs7+7VOPLQjZT3/ZOnvsd
0RkaT5VsZtVzOAtn4ts7RedoPFGyb0n3Q/FfED9F/JXie4p6iH4s+U9EvxSd
K/1s6QdI/l3xLcW3Sj7nLdl34OxfEW3T+CzpRmj+ueJ3it8hukDjC+NO46Vr
l3zXmaK9MuiVkh1X2oadpRsXtv1R9hk521Wi80SjpTtRc76Xfd5p4ruI/7n4
X4suTt7jktgPW/4qdJM0XiLdWs05tFYUv5DsQo0n49PSdx6YvCZr/5S7iZ8l
vr/4WeJf13kHiT9F/Grx/xQ/Unxn8b1F09lb3/xWusdEj4qmyBdTRZ2kP1W0
UbJNojtEx2vuqPi+i2iMxlmyDdLdKKoXfUnys0V3a9xGuklxXtY4RPyQwmtz
J+52vaim8TrpP6l4/a9Jf4P4htINjvOfKRqqcQO+kW6tqCDe9HOSdJvFH5Rs
8zPErxLfVPxY8ROq/v6LohWSr4yzshZrcmZkzYNn7lLx7+s8fcXX6fvl4pcR
g9KdXnr8XsX3QbZFfGN931/8WaXP+N+K92S9B8V3TLZZl7AfMUJsoLtO9Kbm
95N+iPabK/7tin3QKYi93q1Yd63oHY37SDa46hhvFfFIHF1ROldOkuwB6eZj
E/FbxDeVvX+THYvEzxx9v0D8UeIHiD9Hc8eK5mu8XrJGmt+u9Nk44xzNXSg6
Urrhkn1Vuj9mxxIx1ae0D/ElMXOPdN8XtY34vYi1xf9da/UQ37Z0DnF27nCX
dIPEXws2if9d9n26i36v8aWSLYozsDf5y5zLJB9Y+tsns8/EWfqKDtMdZkq/
UmvOFX+Q+KXil4kO1ri96HGN10t/A/4n/0QtJW8laqxxN+me05knZfuF2CRG
yZG2mvOwxpsl2yp7Hiv+NnJD/DLNPa5mGePlojmi2aLjJTsh9rif2C689/kR
72AYWMY3fLuBnBR9tuY92esW0Wmlc4GcWK/5WyS7GSI2wwYzwNJk28zkHOJX
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
            "]], 
           Polygon[CompressedData["
1:eJwtlnlUV0UYhm8gefXnJcU13HAPl/zHpdJSS620xSw1W9wVt8ByQxFUVhEV
wQAFQUBAc8Mtl8qyU6e9zmk9WamltptatrhlPe+Z74/nnPe+883cuTPzfXPb
TUoYGR/meV4mRMCqwPP+wJgR8rzV6DWwyfe8MtoOhHvei/A8z8W0V6Mv0X4Z
rkB4pOfl4hXQlkxMCmxCH8TrSFsn6Awd8TvASnvXdGJ+Q88jbhX6HPo8LEUP
xRsIg+A9e0ceei2s0VyIeQZuRK+nfQMUa954iXgX0L/rPTAXryVeW2gDO/Fu
ZR49YCu6Gd4AdC26A7o9xMC8kBtvEToJFsM/xLRjLnvRZbQV0K9Q40Ala1WO
fxRqaJsNYehrfOu/UETf7bANdsA9tCUTUwWvomMZt5pxanz3jv14+2APlBLT
CL8hLKTvMcabiJcEt9PeD+6AKtqqiClnLkd4fgU2E/MsRKGraa+BLRBN3M2Q
gb7AeF3Qk4k7ib4CVyE5cN8RTt8IqAOFePmB+yZ92yWYRcybeI/TPhamQmbI
rY3WqNJ339iV76rQ+WB+L/P8ElSE3Hu/ZZzTcAqWMFaifWck8TFaE9iIF9Cn
AdSHePpl2vzj0F2J6QZr8XIhT/tle5lle/0cegU6O3Cx6lOOjtQaak2YYwuI
hh14JcS3RbeBGNt77cdi+nzNe6PsXOt8V9g4CbRXojdDLP4t0Mt357UErxRd
yhrs5rlWZ9ry4hzjnYeLlotlilUuQsi+VzlYg94KW6AZc4qCEvRSxsmBVXCV
Phl46bBMuRNya6i1TKftLO+YhteC5+awDO8XvPboXPwl9LmI9yf8BU3wG8Mi
++5JxHyEHk7ccvRTtD0NnaETJNF2nbie6OU29tSQWwutifo+SN8HYJjmaOf5
NvRrtB2F1+GI8hWvJ/SGRcRMpP8EmOO7eX5OzMPoh+BJGIn3Gd4H8D58aPPU
O95GT0BPhDthCd47lo8p6LH0fwL+1rrjbcBL5TkNTuNNwpsMM2AFbV/gjUA/
AmO03njNiG0KC2g7w3e3RreCltBdY+PND9w6J9PnBM/Hw9x37AlcnVK96gQL
iFkIsehuyiHVY2IGMc5AGOG7NVPu90H31rpYvr8QuNxvjG4KTcyrtbyYT9sw
4ofDOvRKOy86N/8Frj42RDeC5pY7Wqsh6MFwt9WwA3g90PczzigYDTND7jtz
AldrVXNT8R4lbhQ8ZnuUrVqunNH5hh8DV9vrouuBbzmTozqGnqt5wE+BqwfK
i76MPRiG6DvwWuG1hstWm84Gbmy9Y77dN8p5395xk+VsHfJonc4Y42QrJ+Eb
nXc4Dlm05RH3JXq07fUx9FfKNfQ4vFRIg5OqkdYnX/VCOeG7XC3F2wjFsJ62
dNUO9GF51IVii1WfDN/ducrzG8CDMLtzdQ/qHdk6i6q5Nr9reJWq/cpNy33d
yYdUI3TOtaeRbs9z0Ku1JnCdfuN53zjfrZnu5lm+W/s56J+Vx/Cr7dtsvDPo
7+GHwO2vcu9j9CfwaeBqgmrDNN/Fa38T0PHKXd2feCHmcgp/FnomTLfcmkr7
FO2DvV97rj0q0LdrXaFQ/wF4EVDX9k9eUciN7ePVg/rQn7H6wVDVZMsj5bXy
u8h3/yxaF51n1RvVne6QyFjf4cWhp8EUyMKbTp84WG3/Hfo/UK5q7L3ofbBf
9yIxY3xXK3Ru0kLuP+de5QzcB+/aGRpv9UV15oT9v0Sj74IBsAvvEByEw5Z3
ml+J7keOxzbluNZP9cbusI205/Gcb94uvJ2wPdzdb28wTl90H+gFi/EC4hpA
pN0tOqe7ieuC7gwdrTZpnYtUJxVje/lW4P7d9A/XP9zV2BSrhVNC7n7QPfE/
OO1WcQ==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3mwj2UUx19+b9N7++WtaSEppZSh7LuxL1OkZBmkJBRRliSlIgyhLJmE
KMvYr/3ady7Z7nUt1xYX1y4hxFBp6vOdc/545nyf7+88z/ss53yf8yvSoUez
7nmDICicJwgS2KZhEBzFtsLeiYIgE5w3JQimxEHQBm5PMgimgt8G7wNnJc13
Ymy4JXgSuDP2OGO7YPfDd8DOgB+BHUlbCF5E6wQ+wO8B39iP2Qv+yb+l766h
H4NfhqtHO8sid7CuQ7Sl+G/HLsPnDnxLfj+mPvwu7Bb4MoztCH8SnKt9MueH
9AvAr4fbgl8q/ApsM/hbzLMUvgn4OjgNvJC2GJ9N+HSCT2Hsarh24DzglUnb
Y0fwLLhL+G3F/zb2FPxE+Gz4SdiT8D9iD8H3wC6FL86arsBXwZag/Qx/EP60
j90PHou9gM84bCV8LoOfxhZ1XBm7C/8G/D4G/4Y6M9ro2Pj64FHgI+BPwD+A
K4d25jWwI+jXxu5IWr86bVhsWD66n0x+a05/Avw2cFXw1+C77DMLl/vxGUm/
q9bP7+PAjcEZ4Fc9rpr63Jp3qGKG9j04F5+K6nPmc8HHsavwP4U9Sv9LnTm/
p9OGKLbgcmgDwBvgVtL6gn+FS/Pz0pyKtyPME7O2zcw1AzxXseFY3Fr6C8Hp
Cbsv3c8+5sihzQSXZ2xh7Dp8jka29yr0B/P7dFo7z4V5vnedQ6rngGL73hQ7
n38i+4a+tS1h97MNfBV+N37N6Pdj3CBaRfAvcN+C6/i9fAp+HnwZ/530Mxh7
E7wB/Dh8T35Ppb+duUuDZycNl1FMYlfgfx6b1JmBL4Az8L+MbYzPfPyPgquB
54GX4LOV3xeAT8DXiC0XcsH1PddC5qoVWx7Jpyb4ts6Usf9icyI7N635v4Th
e0LL37v038C/pOf1YuZe6fmoHN8NNx98MWF7mQVeAD8HvBOuHONW098PrgTe
53s8iP3b40e6cM15ncEtX5vWeMjv4gD2LHNeBJflrn4Dpyp+dA6h8epLT8pi
B8Bv9fO/xffP6T7A1yO7N+WLcisdnxLYr/DfCH4W/Dm4Gy2/6498XgD3h3tJ
8RJYjj0VWsz1im3+QuCPYrtr4e6x+UhnpDeprlGbI9uP9qW4zvK962zE62wq
M/Ywv62BP+36+Rd8C9cNxapyehP8M/T7xLYWfe/j2OJWfr3B2ZGNbaV4wK5k
bBbcqqTFxjvwb3ncbtYaPd+LcM5zXP+z4XeDR4emaQvAH7iGnADPAp8DT/N3
R2/EGdoU8GG4U4pdcE3GnnZ8SWNpw5RHcJtog8GP4VPNz005/B585HpezPOx
OHZ50uKzdWxYsdwG3J4WuObviyzGViQtHhQb7/L7OvDD4Pf9rdiBTz7sWt23
cjCyd+0BuM7u/xC4i+6X347wraqeg8JVwBViywdp46Ps4SzzPIddAf+Z695h
1/blsWnjQGlWbP7CG/0sLzG2G3a7a/gQ5a+fj3R1p+uezlzvhd7x/Cn2ZnWH
X+ZaqzV8EZo+99P+4EvjdxW+GvY8/B/g6uC6tBuB3YvubqrWjP99mjewe/k9
aT71UuzuhuOzC5/+ofnoDTjm31oDXwi/c/DFsBfg58BnxpbDylnFw0CdnWvp
oqS9Jw3gzmBX43NFucKZLwJvjAxLW8rq/CN7I6TZqf5GrIvszZAurQHvcSxO
c0lLyyu/PBeUE+n+1ujNUZ5Kr0rFdl+9WdtYzx1pb3WvOzbh/2fC8kh6WTs2
HU7T2xFZLCl+Gsa2L2lyXc9Hjc3FLkmaxjeKTcel53sjW6f2fgD8Wmz6qDqn
Ofim1z8aq7fiFbjxsb3fesd3eX0lre4bW84or1VXqb7SW1nBY74U9sHQdEY1
XD3XFmlHL68HFE/S89maM7L7PQEuyDwJWnZg+jAGv9OB1Uw1FReB1RFFQ8sp
6ZRyZy54GbaP9COw872sGk7xynq/CS2eh3n8q75VndtEuhKYFpeT1gdWO0b+
Vr6IbeT6IP0r6BoiTXxCZxDYG1zd13YjsrzUHrXXfH4m0oUCPlZzPBLafSn/
M/yO0iM7O/nr/ZAWqobJ5D6Ge51222sA1XXfwT0d2tsqnd6aMH/VPk/6evT2
jPLc11nU8bvQndQK7ZxVO86gnQdPD61205n0DK1+Vt2+g29Npr0Z2n+Brv6W
6R1RHZSDf3vstNDiQRo9yHnVamc9948wrnVob6X+M7T1HFcNLa3RHemNUA2s
urdkir31c8BpkX1f/hr3usetYnuC69L40Gpj2T38XibF9nQstppdMZMITUOk
M9tiq9P0P2UmuEVosaGabG5oa5C+qEaSVqznW239LZD+Tw5Ni1S7D/G9Dw3t
TVPczsZexO8auBbf+R8lpBHw
            "]], 
           Polygon[CompressedData["
1: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
P0v+uyTXcBbORM75DHrLO4M=
            "]], 
           Polygon[CompressedData["
1:eJwtlndYV2UUx6/w8+mH127TXC0rRwMUULRMRMRsOtDcKy1zBVqZmuZIpdQ0
zVHmSNNEtoggCLIEFExjFJiCiTlSrEQMzbT8nN7zx+d5vvd7zvve95533VZj
w0PDPCzLioCG8KNtWW+7LGsiTIAEx7Ie8bKsh8EfvsMrxFsEC2ExPItXQLs9
bstKgi54xzwtKxN9GP814v2hH6wjVgRL0C3pry20g5V4IXhF5K9CfwEVUC59
wRZivxKLRy9H/2KbMcnYgqCWscfgR8MFYmXkfY0+jfYm7gP5eHlQoO8/SSwH
2qBn4M2EWfI95P5Bf5vxN8FTPK/BXw1rYTpeBe2a4j8ArWA13lFiP+tYzxD3
xfeD6XgP4j0Ej0MWsVO2abOLWCLslvdq3WKI5VG7fAihfR1jWUFuPFyyzTu+
RW+Fb7QuhyAIvYTYUlgGf9P+OnjQxzDJxdsOI9AjYRyU0i6XnBzwJ3aJ9x9G
N6CNBcXER5G3hVgVejH6E4iAA3hzoT3aR+oEubIO8FaiV0E4lOO56MsTytDj
dV0lay2P2aaOUs+f0JPwYojFQhzMB1+8PGJ/MbZ6mIfXB68vPK3vnY3XGv0E
PAbZug42ojfAeqi2zZp8FT0VpsGX5Jy1zdqulO+Ek1Ci375V6g3bHLM/ZPw7
0VEQDTWM5yJcc5s5+EzWHgxFD4FBsjZod4v4TWjsZb5xOTlXea6DFbr+C8n7
wTbztRFvE2zWsYzGewPG6HxI3nCdyxE6v//Q1w23meexeHfInlUtc70DHQkb
HLMfZV8O1vHlQyd0ZwiABVp7f7QfdJA5JyeV/vfCITjDevEmpyvv+ZMls52c
bZLLczr+PPRcmAPHaRtHm1hoT+wgbSPlvEHfRTwdfY7Yeeig8Wh0BuwXZJ2Q
N4nYZJgCA+WbybsB12EPOYPwXofBsgfUi4Ij6N/gAnQi9go0oj8bzuMlkjME
rx59DW5BMp4fXiE6njFkQTZMwGtCu/vhXsggLw280HdCY3jLMTXtqPtD9snH
eONkPuBNXddS01L6LIEUtCXzLGcBzxVw2m2++x3H1Ooe9N3gwD7bnBNyXhTD
VcY5QGqHLnCb77mJV44eqlq+aRh6OIyBf/H+g4b0l0osGK+S5yqohgTb1F/m
4Xlix/Fi8ZJkP2qt6vW9Uuej6BIoho5ytuFdRl+EGuir8yZzU0afp6AaJjqm
blK/+7SmAXilsg5sc0b9f1ah2xJ/EtrJ2idnl23WYk+ZK3KKFNHyjS7yTsi6
1fqOxBsFoyEMWuKdJV4LV3StNcVrDs209tK2AdoTPHSOqsithEtuc4/IWELg
lNatF/oFx9RK5qYfuj+EQgptkqGbnDfEDrjNGnLTzzPgDeMdczYEortDL70j
5bzvge4JwXrmSJ1r6acOrkAfvAxYKOsO5sv5Rk4m3n7IggXqdWa//k5pvpLz
UM5QntOIp8I++Ej3bzf8y+RFyRko+wbvZcfMq8zvOd1HJXjFMneOuYfl3E3X
fk6gm9NPC7iIjpU4sR48B+udKXdnoJeJnSb2IvSGl/SskHUvd8Vk9PdyZ3ma
8zRDv6kJbVtDG9hFXRPAV/fxTtvsYdnLwTpX8XKvwizazoYPIYVYhGP+bw7a
5i6VO1W8rnjPQReX+feR+2OHrBOY4jL/SHNk7tG9YYCMk5ypeOEwTddcpm3W
n/wbyD9CC/UCdU3E2WYfy37urutY9miQ1Msx/1LL8JbCpy7zT/Mo3/w5OhJq
mKsAnpPIe4/ndyHMZe5k+d6Z6klsr2P+S9ag18Fal/mnkXt6BvoDeN9l/n3k
X2AROptYDuSCzXsaQTMvE5P/g92MOxF8dB+nodfL+Ux8IITCEfq6DRqcino=

            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJw1l2eMVVUQx+/bfY/dy7vsoUrvva5AAAFpSlUEBKRIkQCyShcUCGCB0JEm
SAvRDyaG+AUhEBKEiCJEgkpEJQQTiRqKIL0sHX//zPjhZP5n7sw5c86ZdmuP
nTZwak4URTVSUZQLXRCiaH0mipomUVSHMRU8C14+uDK4LXguYya4LrxmjK7o
noqjaA78GfB3g+dCG8P/IjbdSszb8b0eeBb4XXBD8FLwcnAFxpV0FD3MRtF8
eB3R3QbdxHgGvBG6wW07zpql0K0OfwO4pfTh58lmcBr8Hvw60MrIVIOWZJQF
50MzjArgPOiDtMmkwFfB5cDXofcYAfwbtGzG+KWhp5jngX+FTmCPDPgONheB
T8NLs/8t5j/pLAXYjk5FZNpmzA7tpbvoxKidsjvNc3tKQR+jlwU/hOYwLwOO
oHfcnirgAkYpcAJtwZm7gX9n/1rMy4NrQLOMquAy0FaJ3eU2bPtI7wB/HfQg
OouhS+EHZFqBe4NbQmsi0w76GTIDoKPgN4fWg98aWugykj2GbTH4OHS4v/s+
8Gvo/gC9wz0MBT/hKF+mzXdaIvMOtCf8PfDOIzNH50mZf+yLTUZvXR/b5sH7
ABv2Mp+t9wU/lzEf6JqxdbX+buh05s1T5rt/+Hvp3V5k3hD8MrSPY/F2xbbv
Aegat20VdAt7bIWehj8Y3Bv8CbhRYj55VOeL7S7X8/1DxQf8ldCtrvs0so0T
W28NvBv4RoTMcPQ6uA+M1j0onsDdoV0Uf+Ae0Gb+jk0UM4zW4I+hL/kZ+0M3
su4Gj9kl0DYpe9c5sfnJsthsWA1vHbKX08a/CW0fLE6yfK/rNtTP2H5NZQvf
Y77VVByCE3BDcGdwI/fbBi4r3W2x6Qs3db7W6op8afexnv6OuqtDsdmueB8B
7c63FvJxnSW29ddDN8fmb9s99mVDp2A+qtjqBe7BGKb7SizPyE8W+r7y2T7B
7JNtT8Ern9gdD4RfVnEEHhCMr3cYBC4JrqZ4QW84874Z0x0DHqx4BjdhtEfm
R2ReDxYDsqEGY5zeCl5Hf1O9bTc/o85VKbH4GhkMyzdHB7szvftqZIa671Xg
+zC3oSK4XzAfKpNYHlQsyD938q63cbMd0OaJ5c5FweJIvq3YqgWeBH8m/J3M
p4Fngyd7XEzMWP4X/234UxkTFPPwjiHfBZmTsenK376BbsnYPWyWX/v6M4Ld
i/infV+t/ZZqBfOL2FgGXJiY3mbwWXgJ8pegfzsWr8h9+03FNbrPpyy+Lnj+
OQd9A/0FGYtl3b/iWvH9iueWodDDzDsrh0OXuHwDZI/EFrur4C3MWIwvgi4O
Fnv7+T7Pa5xq3wnmnVLGVy1bBn8l35cr7lNW2w66zC9eE5XHJijHJmb/GfjV
wCPhTw6GR4Engau7/0wBF7m/VUks/2ivFfA+j+29VHN154XgPbH5pOJ9bTA/
kD/0gF8vWP3L5fs1ctFBvp0rsPwvP1+LzH3453XvyL7K/Aj4OjIPsvZepYPF
nOraitj4equy8Mcwz4E/GfozvJKqTdDyiquM1WjVLeWfWci8EFs+HOF4L7L/
sFeHYPlIeSmdWN1uBG9abLaFYDlf55K/9/cYUywUZ61u5/gdjoXfF5xKrI4v
1J7gR8jUDCavep4LPgB95LEzJTa/Uk/ymHEDXqVgNUu1Zph8MFgtVL7qFZs9
smuHrzME3lFwvmIKvEBrqkbKtmB1/UnW+hfdZ8WM5Vjl1Gf5/oC7OIHMePRm
xtYbqLe5gs5d1u+rfOs9T+7/d6tcE2yvKqplseVJ5U/l0SJ/o9Gx3a3saRBM
T/pNHCv3Kgdnmf+lnog9cxLrlWp5n5NCZmRsfPUptYPdrfqXyP3nPnAA9F/O
8hX8q+id9XOpd5J/qHe6VGDvq55nvmKWcQ/dftDLfNvvut96rVdPIT/U2Zqx
16609R6Ks8vIFSPTJzY/l52jlKv4Vj9luT6TeH8UbM1DWp99SiTW67WAfz1r
/n8NfrH3iuoZ93tf8bX3OQ/YayD0sL+13vy294H30b2ZtV7odoHpSFf7jQ2W
mxTXKffJVLAYVD4rAM+OzfeK0T2Ttvv5M211Wb1eVWTGee3b7vemuL5SYH6r
On8X/J3fm85aMlhu1ZuOCNZPqKbI7u8Zt/yt5MMn02Z/LvuOje29FNfTYzuj
+r5HyOcFs+9u1u5NPqZ8oJ5Ha95AZqLnVuVb5f80MuOUq4Pdr2Lhfe9zlAcH
+d3K/yv7P8KjrNVl9STVvC6pto6BjtfaKYv5con1hm2C9bHy/02qdcFqiWrZ
kGC9oGrrp7H1t6rpJYL1jjqLYk156SL2F3oeU08lH1PveqHA3kj/AvonqBjs
X0J2jnHblN/zPY6UG/8DOfp7eA==
            "]], 
           Polygon[CompressedData["
1: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
vgWLdSt6DvAYPoifzIgzn58c09zF/wCJZn0G
            "]], 
           Polygon[CompressedData["
1:eJwtlnlQllUUh19QxNfvk09wBRcEDbUyUVsVcUlNQTBxSdxQQHFBUHDBRBu1
cMsFE1zGlplmqn9bzEmtbBmnzHDGMtMps819w1wRtec39/zxzHfu75577n3v
PefeLyG3OKso3PO8CoiA+ijPq2noeTcDnncf+wE8GQI6n4KBEBP0vCRYgT2T
vlkwG170PW8kXGPMQWJMwB4B6XAebQ/aFeLOxXc6Y/MhF9oTawo+k+Eififx
K8COQx9L/0swDgoY1xYtG3svPp/BELRnIR6tCX2VjNviOy0BrSN0AJ++SWhp
2OkwCtqgDUV7HLs79IZmaFWM3wpvwTDNj88Y7NGQD0eZ91/W2RrfEfRn0z8B
JsJoSEXrD0OgBT4tYbjNm2bx3iTOLmhlMcajzYFp2FNhErQLujkysEdCpvlp
X8bIT/6QC5O1//ZNU7Bz4B3ivw2x5q/9i8Lugd0TkmEwWhY+o+Am33SYb8vB
DuCXqDXofKCPjX1COYA9CJ638xiPloedr3OFYdDL9nK49hxWE7MC3vBdDM07
SjGwB8EAaI7/BcuTNPwmwiTYDJt8d1aKG8IvGvraPmu/M+m7Sm7tZ+yX8AVc
inJ+feifAjnaR/x2EGs7fOC7tSuHsuAF7KFam51bKloX7KZBlw9Vth6tq87q
5AZz3oFT2L/CCYhk3Dn6d2MP1RyQrVpAT4cMyLO8T8HuC/1sriDaFcYeYOy1
gKsJ1cYM+pfS/wj9e2nvg1t2Xv/hl0s7z3d7sA/tFzgOl/EZrjyGs7amywGX
k8rtMcQdC+PgNv3X6X+gb8K+G+X2oBt+XSHJ1rcIbSEshmK0xKBbj9Z1RGeM
toK+8JDbD+3Lz3CbuMn47qR/B32/43sKkrB9jcHeABuhBn6Ek77z34nPSliC
XQaLoDOxFtgaPsTvK/gaHtN5oU2ECbaWBmgR2JHQSPuIVgmbsTfBBuiGzzK0
cliu77M51mOv0R5gf0/8Q9AA7Q7fdBeO2bcVahx+r8Bkq99OUIq9EBbAUnxK
YS52IczWHYXPb8QcFMa+0N4OPdDuEvNv3TXwDwRs7Bz6E+jfzZhPfXefKp86
oH1E+2PojtYELQDREGF39krsV2EVVODTLORia46LcI85jzN+AGvZgk8lHKYd
j999+sMUg/YqCKKdRSvGLodlsATKYA20UB3h8z72e/AJlNge/ISdyhwVtF+D
A7T3KwZ2FaTQd9R35zuf9jwoslxLQKvTWrUetHC0Y/j2Z8zrtNfDQdprdW6w
zs6vC34n0Afit412te59tMigW2sP/JKhJ5zGbzB+5ei7oBc+bdAvqX5Uc1Yn
9+Eqdq3qFWLxyWRsBpyxOh6r+wt9o/JNv5ZrtwLuLbmH33TVuO/yRXtUplyH
l6E3NEeL0Z2q/MWno3Ja3x7hHm7tgc7oodYF9eChTSPmVCiEvyyHdG7nsc/B
GahjHQ/htu2p9ra97ntoCiE7Z/k9HXLvgd6FNtA46N6KTqop1Qs8h09X3We6
O6y2GwZdnSsflZeNTdO8t4gdR7utchifBay1FJZDQ6tV5bRy+3Pf/e9Q7sYz
vgB7FsxUflida0widifoHHL3ge6krdhVUB1ytaX9aKz1qVZC7h7/A+1POA2N
bI4Z9ibrbS5GewZSsPtBrO3BfLR5UGL1qZqutf9BtQF3BtPsHdB7cIO+7+i7
HnD3kHLi0aC782rsfTlE/w9wxP6PrbQ7aQ/938C3vrub1qGthdWW49FoF6yW
Y5Q74Ck3iBlmdazcKNLdAfX4XbHcVS20JE5raGX12xbioF3I/c/SfynlqnJW
NaE3Y7HvakFxWqK1gtYh9ybpbWpmayrB3gbVvvs/pv8s72L/D7P1QAI=
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJxFl3mwj1UYx98f/V7u6837iiRFyDKWweDad127i+vKvu9LrhZLYy2lmqZt
+tsSLVQk2kgxGKnRUJZUyhJRibJvqc93nmemP955vr/vec45zznn2X5VRxcV
TCsWBMG9mSAojhwWBcEL4OnImmkQ9AmDYGwcBEuyQdAZ/lhOEOQzNgi+AePL
nNf4ePT6w9eBn498Hj4P+SDfLHAh8gLz+4CXoj/O9eui/w6/832dt/kGgtcg
I8Yng0NkLb6HwSWQu11nJ7Ivv58G90MWx7ZdcJuTIDjHXj3hA7jG7DGU8Yns
2Skye/pGZofsWYGcENu56qV2Rq05XHPhVzK+nDULwA/BN4TvE5td5+C3MD4E
/susfbJhJfx9jFfmuwm+wJeC+zGvDPJR9Msib8CXRxbCV0IWZWzeEr+T85wj
xaamcEPRacq3lrGlzGsBPw9+OtxY5DjtB3e3r98isj2ExVUITV5jbjXGxsPX
jf4fuw7fl7US8CXwMHArcHnWnAx+Av0B6F/I2txLyMr8HgvuxfiP/B4uP0F+
wzcMvA/ZPrJzNUb+lrU3PZe1Mel8jzzINxi8H1kavUO6S2yoyN7tsGFEbLaV
Bv8N3xn8BzoHwF1is0G2XOX3XX6fr4NXo5MLPoEciU5JxpaDH8/YnZ0BDwX/
jvwpa+scQZaL7CzVtSa/x4AvZ+3MOvsNZFXmz9AdhuYburfzendsbus2j+Gb
j05v1hkF7gxfnfFq8seM+YfOJ50OyNHo9ELWQOcae0yF/xd50+/2etbW6YLO
/eiU5WvmvpF6vChuKoY2V++qd2yJLJfa3egt5GvlQjuL7jTX3ygP2QT9buDT
+N4hznOePSvC70vsHvNiix3FvnLAr+i9gXwtsbhVbL6PnMu6z4DnICcxZxSy
JTZMQi7K2Bn+ZE515QnGx3veWBxafCnWzzI+hr1ngPOYWwT/HDqT4dZ7/K7T
e4bmn7Pk7+i8Ap4d2fsrjnZkLZa7gk9i70z0Fmds3b9zLKbeZK9Jkdnbw/ea
De4KnhWbXYXgac53A49G/0XWeRhZL7T8UEe5Cp2XtT78Y+AndSb0cz0fKq4U
F3qXO+EbO6/xmei/Cp7LeGvNVy6K7Z3nKa6R3fnmZMyfFoV2J9rjIfQeQXZM
7Y7Ez0JOdb4TfEPPCfWRzeD7gW9yB0We/wch26I3hfEpjE9FPgs/TfP4Fuq8
2j8yO2fE5gN9wVeQS7jHrdxn69h8Sb6xAu6Ux+D2rMWF/Ly4fJh1jsK9576g
PN9VuZG1NsGvhT+eY3l4GTjLnCqM92eNAbHFX0m4epH5fBPkP+h1hB8ZWx7U
eYco/4cW+6uytqb85yKytt9nA+Sg2O6mFGv+kmN+Ln9P+N0IfnBsOtKNUqsH
evdWyMLI/Gok8hF0FqLTWn7iMT4ytFq5AFyAzmB/04GhzVWMNEW/RWxnX8M5
moM/Um1MrOYpvrZl7a31LuOZly+/AfcMrW7rLPKRYR4XI0LL4aoRzVl/gsfg
AmQx5j+Ysffa6Hn4M+QT/u46g/KX7B8cWZ9QpLyVWj3Q+lPly8zfzLwPsHO6
12XpdY0t3x+E/ws5Gv4sslpqviUfk46479CplVpdV+/R02uc1lfPoD6idmr5
RHeZC24Tm09tSgzrbj4FN/S6r1pfwfNhHfBJxoqFltu/dnv2ID9PrLdoG1sd
V02P0Wnj96W4uCc1v1KebJTa/aqvKMXvA8z5IrF8JL9SvyOsXPhWYrW7AP4a
/Mdwg9TbMG+DY3GXGfsAuVq1mPWfCi1+FafiV3m9U+3bCG4f2747ErNBZ6mA
3M7vvfDtYottxXhJnRf+MHxH1fbY3vnDxLDebj34DF+GffPh8r2fU4/R0u2/
qnyfWK+m2rrB4129VmWvazXBVTyHyGfKuo/J1/ajf9LriPKSckkHdCulFp+K
WfUA/VX72GtPYrW5U2znVY+wE66C11nlRvUDquGfwG9LrP/Q2bck9sZ601uJ
5Q3lB+Vw1YouqdVcxU0x8A+J9Tfd4LrHVvN/Tqzuqv7ewdwgtdqv/FPgb6Qc
WMb7NOWZ2HOFcsLFxHo+9X6Xvd9T33UbOjW89o31vNQlsryn3vUscmBs9aRE
av6hPPAua0xE7yV0HkWe5ncQeg/m9Vr250QWy3pr9cbygeusWdzfKIusBD8F
XDuynkb9gHpD8Vf4fcTzj3L7pRy7B+kd0x27L+ldksj6KPUJNTz/KKfKn3uA
zyC/dTvlVw/ElvP3wvWIrcf5zXtm9SG57kv6fTyxGt1dfVqO7S87jib2RrLz
MLhDbL3kV4nlz0L0b+WYLys/347c7bHfOzYfVL+knvRUYvfS221TD7susf8F
ys31uf+tHlOKo9Jes1ULtK/61V2M95SfgU+A/wNtL5jE
            "]], 
           Polygon[CompressedData["
1:eJwtmHm8V2Mex89PnZPf09E5qZAirdKK0r1tupW03ZZ7b+kq3fZFWqSNZB9m
htes/pYYUxONKCXDaDDGEs0whilLKpIlFCXVLZ+37/eP7+s8n+f7PN/zLN/1
aTl1QeX806IoqihEUV19D2ZR1CCJopnCLUMU9cmjqLdoYRpFN4ieFf/FOIqq
GS/+VaKxois1ZnBucy4QfZuZrHPUnqqx32rOh8I/FqOoUvh54T8JD5DM8cLv
Cr8p3Fcy5uj/v1DfBM19T31fxybjbOHTRVVqv66+fyBP1EzjzxWdk9haV+j7
+4KtmfWwl+80fqfGHtL/RwqvFX5EuJ7Gd9D4eerrqrHH1HemcCNRU+Sq7xrx
vtL4/4t3XNRc/bPU11q8SFSu9rPibxTv76Jtsa3vuczOiLN6VPjPwm+JPlJ7
gvqCeM1F09X+UH3/Fq+f1rNA8u9W3zXiXSF8vfBvhacKXyiao/anGv9OZmvu
Ikpy20t7ta8T/6D474pfKnyDcHvJqC/+Ke1/rK/38czulHNaonFLRV+KP0z8
9eL/RfxBua2Bf09zor0QuaLNGrM1tvt8Su0S/199/e9r4UKw/+0U/z/Cg9EV
UYlkTteYl9T3tnhjNKZW/35SeK/wHtF6tc/S2MnifSL8X+F5wvcK3625Vbnp
DLrznmi72r2D3WUn8VPXyWVq31EwXR0ufLPwL4WnCI8Rvkf4PuH5wg9JxiOx
2cM+redl4e3cjegVtU8Wba2s+dXMdJC75s5fUDuXjInivyX8Ymb3wX3l+sd3
mekwuvym+FtdP8bxr9hsCx1D1w6IdmRmM9gO97lL7cNFWxtrXCXcXfPnFkz/
T/p5TRF+Rfy/ZaaDr6r9Wmy62dDX973wx+i6cI3w++xBuI904SrhF4QfEG4i
/qSC3Ql3g86iu9z5Zr/vhcJt9P8DwrHw1cIbxV8j/LnWO1R4tfBK4RGp6ftJ
4f3CB8QfLrxJ+K/CT7t97BI9o3Y7yZstfh3J/0z4SfU/IVrHeNGj6tus79Oi
x9RuG8w2sdETwhe5PWDT2PYn+t9g4Yc1/sHM7hydQpfQhTZ+HifE/9TPhzPj
rI6p7wc//y1qb1Bf4vtFR9CVZtiI8FHhvcKVuekqOnudeKmfH3tkr+9ndhfc
CbozWuNHiRbpnBaLvuEfiekQtn/C/c95ohai77We0eJt4EzE2y2qjW39x3wP
tOnbx/4zO3vuoLn7H9a813lH3T9zXw9nZiOTRcNys50hat8sflv9u65whegu
tf+ovuXi7dGc1sKtROeLyrWH4aLP1f+F+yvssyDeV8Kf6X9DXJ+xPfZ+h3h/
KNgZdNP4Bfh+9R11/cKfvoHPcXtC3/fHFiuG+vpGa3w7yarhHIVLiQ/CpaJJ
7g/miNcT/yZ8p3B1MP6MxHwTPor4QhzoKV6vYGv4QXRpsLVtYV+xxYgzghF3
zN3C20RMiC3GFYP5d+Lbb4QnBrPRl2LzcdguOr/L72dwajaGDOZie93Yk+bf
KP4Vwj2EJwjfIzzG4/Xtwr8SniHcVbjK48lI4f7EcuHbhauEB9Anaq/+i0SX
iMY5n7g+nLsXdVZ/F9GlPmasx376qjX+loKNvVx4nvBt3EEw/cHXTlNfr9zW
ND1YnGatk4KtnT10ym1N/Js1dBQeKRqRm41iq/igJ0SNg/kmYg6xB53tlVp8
uUntgdiI5q3EzkWjyAGKZvPYPjazp2g+Dl83ghxFeLdokNqP4f9El0nGZMm6
VX0jguUM61weuQT+Z4vHi9LUbAbbwed1F64X7O6fcf9EDvBybD4f308fvgs/
wlhyCGIzMZPYucrjETbSLbWYDZ+c47j+39T9DfHvn5npH7q4zf09Z7U7Np/G
mf1L+B3XR/73nMcvcqo6wWIWcSwL5o+QQexIXbeJycRmYkSjYD57k8fvnqnN
3eb2gIznPX7iI7FdYh6xaYrnc7UeT5GxNjP/d6fO+9fqmxVMHypFZbnpLjaK
rT6k8efn5vPwfRs9BrRQX5nmL9GYvhp7JvoqvKJgesx5cxdbPHacyix/xEf0
ET/KrY8284k/bd3v4s9a5qbL6DR6vNb3Tww7or2cJn65+EuF+wWjy0WF3HgX
4kc9vyW/a5WbTGRhG41yW/Mwtz18WKWvH9/WVLin21u58Lm59dFGP89W+yzR
wGD+4VjR7pZ8bjWxQ7y+7j/IwxjbW3hZweYQsznLDR5nW5NDiX9XwfJxbBrb
HqW+tuI1wY4T89FlwWyOfyAbW8R2l3v8w4Y7BIvJxGLy9Vp91+g/14vfA3+k
8fPdf81LzT/UBMtByUWJochC5tDcdARdWSw80McscX84yePWUuHfCc8OFsPo
o32tqA1rTSxmENuG5CYLmQtSkz8zWFxCN6s8nt8v/tLUcgb6aC9LLWde7/ZU
klqNg3/a6jkYMZ24diN+CpvS3M6uL/hhYupQ4eW+njrovfufaZrXILc5/d13
k9N3EX9RwXL9INzV94O+FIVPz00H0UV8/Bi/b+Z3yO0uudOZqdUQ1BLj1K5O
zWfi69a5PiCro9sXMlf7fqkZDhbNJrHNVbHF0DWes1W7/XcMVo81Fu9IZrXi
DOE0sZqRPnhNEouznV3/iWHEsoaiixOzaeyEuDUysT2wF2Qg6wzRoczOhLNp
SK6UWU1AbcCZc47UTp1Fse+bM+FsuiV21tggtlaSmG3iE9h7y8R8BWeMbbIe
zh4bxBa75xY7Sjxek3OQW/ycgyRmw9htM7cfbLK5z+eu+yVm2+gAujA7MV3F
prFdxmPrxGBymYmJxeZBwWwRmcjGxxD7KxLzPRczJ7H4ShwnBhB7yF2JDVe6
/BrPf8p9/+MT2xNEm3j9c+4RzJfh0/AV6Bi6zPmiewX3x+hwHc8biO+LEnsz
gGhjc9jeeN//VOELsOXUbA2bq3Q95vyRiWxyAmq3WxPLFeb6edxE7pkb0cZf
4IsmpKYP6BC6NNnzD3zEMD8v9kOORq5W5vkMPmmA7xdfOCuxtwpqLmovYghx
Y5n7I3LiCs8/yDeoOfbKPq4OlvvN8fmV7k/5R5nHAWILbxjkSPgUfMsK7iFY
DXCt+O0Sqw3wYfiyRaLFwWo4ajnq7dfUrnB95s65+0Nuzw96ftPf7wsbwpZW
ev5CPtUjtTiEfmOD2GKN6xNvEvhk7oi7muaxkbx4PrmPcOPcfDq+nZqA2uBj
r3cOi47HVq/wbRXsPYUcm1jMeZJ7v+32jI9oId6XXkdgs1083mEL6DuxiBqU
tw7eIKhNeVPZ7nUZtQ5vCPs9/yDf3uf1EjUjcf514R1ej1H34UPwJdQslant
gbrrsmB7w0fhq9gze8dn4jvxk+g/byD1EquRWQ81FrUWNRG1UZbbWTH/kmBE
G5mHNS53f8GZcDa8IVDLUtPytoBPq+/7LfUcgtg5N7HcAn1gT+yFWpYaep/X
yeQ2nA25IzkkZ/SGcN3Ean7ya97Mdrif5i2NNxDeQnjDqB/sjemb2OrT9n6H
nGWt3y1vFrxdsN7zPJayPmo8YiqyeevgfvkH+Sxvhrx7fJRZvsD7xo8a84H3
HfH1MhYd3+n5coNgOoIsZP4vszeyYmI2g+1Qh56KTWanYLpEXyePA9Sk6Bi6
Ra36E4JOfZ0=
            "]], 
           Polygon[CompressedData["
1:eJwtlmlUVlUUhi8YJh9XLormkDiFmuSUDAqooQyKIijOOCCaaIpihppZ2eDq
V6tp9bfRLGtpow3aZKZm5YCkpuXQIIKIM2JmSs+7zv7xLN77nn3Od/a5Z+9L
tznlhUvCPc9bCxGwNOR5z4Xxt7nnlcNMnqfBfPQaeJaxcp7fDjzvfSak+J53
PdLz/oVl+M8zvoK45TCX51CM592LHgD9YBrxRTAQ7TPWEqIVQ+wASA+5sQCv
Av0C6z3K82p4gOe+0AeSoCteBHHFrDcM3R7dATpCFNyN1xv62+8Ox8uAEbAM
rwxvkUB3xesG3WEp3uN42ZAFqXgz8FLQrdCtIRZy4RG8VbASlhCTxr5SYbrF
xxCziOeFsBLW4hXirUC/SG5P8vwELCP+fhiPnqAY6ElcDyhA50MezCEmi7mZ
MB5m4CXaGdyHHg4Z0AXvLhiDHg05UELMed7TOdjE+9vK+7uBXu67fY1XPqy5
Gh6Dl9lfKf4zyo+YSMb7ovtAAky18ytT7rAYhhGTBnO1V5it90ZMb70PSIBJ
ePPw+mk96A/T8ObjtdV83Tv0Heh2kKg7AW1sLAO9wHe5D9DdgYHQB6bjFWlv
tl4T+d2C3eR7hHyjmTsbfwTjdxLfCeJgF+M74Qc4RFwGMReZdwE85mzDe4Wx
Op7PwKt2/y+ha6EG3sBbj5ekdwEH0L9AFXzP2A5bO4r12kOHkKsb1c86xnYz
1gzvY/QX6C3wNaSz1pd4p9E1WguG4l1lXgNsZOwzvMF476I3oweh/2PsJtTD
WdhgY43KC92TM+gFt8M44i/hXYTLEOg+4GXCceachBNwgLEhvjuPT9Bh7Dcc
rtqcQt/Vseq5AB2OV629Qw1M1HvFa0Rfg38C926q7KyOwnBi/tYY+jo0wRi8
qaw5Bcp0P60udddK0BP1XqEEkvGSIMXGdP9Uv4M0BwZbXaYoFrJD7j7ctP21
Q8dBJ7gRuH6ViE6GJOtNQ5kzBGZZ71G9xcMC/R6MtHpT/Y5VL0QXED/O7nGS
rZdud70z3jz0Qt/lqFy7QGcYi+cxVsVeRhKXA6PgYes5mdbPFqNL1avhHquz
UrxCnieEXH2ozvK1byi2OpqJVwyzrJfk2trlvutbi2y9KXiTddZWv+qTeg95
yhHyY1x+yrMo5Pqq+oH2V4F+CB60vruK8ZfoL0/z/BRU4P1oNar3/xP6Z6iE
3/B+hz8hi7FDeGfRI313PjqnYei9ePthH3wTuBqsRG9DfwfbVbPW91J91xfU
HzbjfWV19qlqSfUHn8MW+60c+91z6HqoM2+regZ6F2y3upwArcgpFlrDlcDV
R1t0G4i22jqPF4UOQXOrwQ/w/rA8P0R/BIfhEt5FOA+jfFfXqu8WIZej+otq
9Rh6L3of7A9cDTbTdxJugz2qK+Zdi3R9RnmnEZMPYYy31HfZ7lqItSNVG7au
aj8bXY0+A7WqWetrv6IPw0HrneoJ6g2Vlk8suq3uPsSHXF/QXib57jt+C90E
nr5bjHfXnQu5XqEanExcPHoU5CoX4qrJ4RS8xvg6fiORmDetB5+2HJVrsvoi
3g7YCesD945i7Oz1DhqUQ+ByUm4X7Jz1TR5n31B9S3vxu8fUuxiPY3+9IQFy
ibuCdxUadF+JCSc2DJpZD9C3W+d3ivEWPEfCQeJimB9AR7hsc/Ub6n3qgY0w
2ndn0MP+p9H/NucC9y3LRG8g5p0I18NOwHE4afvUXJ3Be+hNsBHeCtye9XtH
0EdVZ/C6neVf9m3RN6YW7xZeHvF1qofA3Rf1pFp7rg9cDe6xWlBNfIv3P95I
TZ8=
            "]], 
           Polygon[{{4102, 4101, 3157, 1569, 1579, 3159}}]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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

            "]], 
           Polygon[CompressedData["
1:eJxFmHlwltUVxt8X4X3hfl/1YtVWnXbGOm2nddppp2Onm522U6e1U9vRaV3r
giK1bthdq4JUWxEV2XdCSAgkBAiBBAIECIEIgbAHAoQdZJGiIAIVivT5eU6n
f5z57nPP/e57l3Oec8697qG+tz/VJUmS29Ik6arfHSFJWtQu5EnSEJNksXC9
8JksSSqFP5CckswrJsl8yWm1f6Wx7Rrzb43dIlmu9nmNnyFdVkiSbpIo6Vmw
OZjrrGS62rM0fqbG7xYeI/yO8FHJv9Q+Lsl7Jsnjmn+fxjToe8fU91PhVcL7
NO6s8N3CW4Q/FB4pvENzdUpGq71MfbOkOyQ8MdqaWfvlWssnC/aNn+n/61L7
9gDJaLVf1/g7pTsofEDyntq/0LiRapdJP0T6e9Q3VHMNkUxWu0wyRLJVug7J
ULWXaPw8jd8lPEy4q/bzsObpLemmdg+tYWNqfeguaPxW4QeFuwiXCVcJT9T/
H9D/Dwm3CV8rfbPwAsmX1b5Bsoh74RvMLZmv9jOSOv23XvKs2u/r/xv0//uk
/0j4iPBa4euE1wjvFH5L+FPCy6KNYez9kkTrmSx9pfQjNN990s30+1sk/Dfh
gZmdHWf4onSt6rsmt/WuVnuY+iZLN1hj7oq2J/Y2QTJOcnc0HWNe0tjx3j+K
OSX3Sl+p3yrJXMkejVmpsZ/R/G9Jt0JyVW7rb1F7tPTl0o/V2PvddvtItzc1
Oxgi/aTU5uc7D0Yby3+el3699EvU/qz+0yZd72hrZc2TJXXS10q/Se03pXtY
Uq52meQhxkpfIX2FcB/h30nWqt0m+a3avSST1B6vMcM1tntPs3lsfYGkQX1z
pdvPGI1tF24WPi08VXhQsP8yxyPCc4RrUvsG38InNwvflpuvlvh6Vkg/UHiE
3wfrfYzxkjs19i7JOfdHfONLwpuEV0k+p/YK9XVw9tHOhjNah+0Kv6a5BmXm
L23qWyzdMeEp0q2XfFH9X5CsVbsvc0rXKvl9NB+GS+AUfLtFeFFq/jxYeJpw
dWr3/xS2IzzBz/dx7l94ofB67FB4r+Rbmuvbkv1qvyBpkG6BpL9/D+74rvR7
hAvyxyAp6A6KkvHST5G+UeNflP5t4dXCt2v8TuEa55cW6V/y82b9N0rfKbw5
2l7Zc7vaXTT3NunvEN4hvE3yc7VvlWxXe67bU63m+4PwBj/v6yUb1f6HpEm6
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
1cC1Hk9Z338Byld6Tg==
            "]], 
           Polygon[CompressedData["
1:eJw1lnlQV1UYhq+lmD9u9SMdNSvLlpn2fd+zfZvKxl1LzX2vZirLXQQVAcUF
hRSDFEQQoRQBTU1l0VwQ9xXJyg0XUlRQ7HnnfP3xzLz3/b5z7rnnfOec26rH
kDaDr/E8LxwaQGbQ8y6FeF6873mbAp63GZai+zb0vEfgYThLThV8iP4A3oPF
5AzHW0XbNLWBZTAd7zBeProQiuArvGy8JZABY2kbjbcDPRldQM4KiMXbhlcG
eyCaWBL+XJhAbIP6QA9EL0CPJj4IPRiGwhD40vqNIpaIrkD/CcdgCl4MHEAf
goMwjZwE+pwN8yEf7we8JeS14zs7QHuoxrs+lDb1PK8Tzx2hhvxw37X5jvgw
+B6m453Em4OeC0lwBN6kzRvQGjJ8l1dJ3mk4BeHkVNPnJ8T7wX7e5fPOw/jl
+hZ4BT+ddtPgOG3m4aXAzxBF20nQS8/EZqETybuBNo/DE7CC2CS8LTbPmu8o
vAl4RegSKIaJQfeOE+gLUA2T8GbjeVp/dJbmCWZo3aG/rcso363XOvR62Kj+
8GYqF+KtRmLxMmmXAbmw39ajDL0NKuBB3rUUr7d900itK/6PVmtaW61xufXX
x+pE7+uL7mdjrkc/DSEEfgm6elPdxdk86ts0l0fRU/GSbV5noWvwzsF51S9e
J4hFj7Pv1vePVp94K2EtRNBuLP4YaE8sWjWCl4oOMoYw7Su8GXg55GTDmoCr
G9XBQkiDdNufM612NUdT8KZCHIzDy8XLg+XwDV4M7EPvhd22j7S+hejxxCIg
UrWqGtTeV//QBS+VMSyASMtXHXymedC+0BoSiw+4/bsLbydst/3Wwb5zFPGp
mlt9P97v/8+Hxgv56MF8f6Mwz2tGfTcPdeuZaPOo/EXoneiPyMsi/xzP5+EA
3jN4adpjPFcG3Bl2lTZ1cNHm6mu8rehSyLQzZz9eG9p+Co/BAt/NwTTiiyEL
upKzlz73QAqxe8nbZXVQS/wKXNb48MbgpaMHBN0ZpbNqA5RAKQRou1I1Cq+h
X4WXbf+uwWuGbgpNYI7v8rS/F6FP0/5MwJ0br+OdQNfCZdvTN+I1hptgvvZd
0NWn6vSM1VUS3Eb8dmgJRdpD9k1b0aU6b827D+8BuN++V2fEZvqpgn91Tmu9
tSYwj9gd5BXjTdTZDN00B9q/Vh+qk854OTqj0N0tPtx3Z22C3TW6c3bDrTY+
jVl6HXo9FKoe4Ba8FtAc5pKzNui+XXNws3n78J5CPwmP2vrqHG+L3k1sj9YW
NsHdeMn6RvSWoDu7khlfCqTa3fKTfWeJzhTYCON15kNHOwOGkbOV5y3wh/V7
AP03+i/4x9Yvw/prhb4L7rT5S/BdnSxD58JyqISTcAret7u2se4B7oMBPPeH
XN/dPQV25qywe2sh3vM2B5qLQ3i12sPortAZslU/9HeI/rrx/Dl4PF8HDaFJ
qNufAfZnJrlvo9+Fd1SHQbcPtR8bkdfH/g+0D7UfLwTcfOu+rLLxn8W7AnVw
GMrhFLxl/ek/Yg3jXw2/6Yzy3XsVP0rsGByHkTACRgXdf4fy8tF5UGDnQqrv
/l80rvqMvwGEQFPGWsH3DsIfCHm+W6+Wtj/usXrQ+fIc+ll42vqbDw+h43Q3
hLj7aDXjXwXFAXcf6k5Rnu6rMvR22GHr8QLeS/AiHMQLYyzljKU3z710J4W6
c3yZ/SPpX+lb8uox7p7Ev4Duegc5Lcg9QtuPeR6q+9x369sFnYO+lnh9uIR3
EWospjWPZKwR0M7O8xj0VXQdeLyrh70jGn8yzAm4862tjUXxX31XI6qVODvn
e+ruJG8Esf8AmvSeJg==
            "]], 
           
           Polygon[{{4286, 4285, 3226, 1803, 1813, 
            3228}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0M0uA1EYgOFvpq2ZqdqwrI2kNgQ7liyVlrY7WxfQxl/8/1wCCTciXIUb
YVWJPZ4hmXfeNzlzvpwzc/ujwTCJiD18iHW+TyMesKmfuc+NPGISPV3nArs6
5ww7usZVdHWFU3R0kpcfRmzTTxaxxd/c5jfzN/iVX7Cmn/gRy/qIDzGv+9zD
rF4p1zGjp7iBuv5yh/I+B+an5X6u8DGfoKpP+Qw1fc4XmNCXfAVPXHvdZH/H
jlu+Q6ELQ6d5gRfR1B3uoqWHPMKSHjvIJ1b1e/L/f38B1Wsfog==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0MkuA1AUgOGjNt00iKmlFl6DhHdoqZoS09KwYlkJC5a61OqkplfwIqw0
8RQSNr6bLv78f25uzj25iwdnpdORiNjEZybijmujEZe4111+5LdsxCt6+oWf
0dVP3EdH99IZ2rqTjJZu8UNCN7nJDW7wu/l17qd3cKuv+SrtoPd5Dxd6lVdw
ohe4iCP9Z+9fbOtvLnHO/DKP8RqP8wTW9SRPoaKneQYbepbzqOoCz2WH/zLP
RWzpH/MPOe/tAo71Ei/jXO/wLmr6y90BbvRHZvi//9jcK/I=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Mkug1EcxuG/VIxXYUfCVo0x1IqExK5ba+ONCNfQUtWKoS02rFoWJLVk
SSIx1dQb8CQWvzzv4ss5J1/P0triaktEpFVLRDxyuTViRW/2Jpuc6YxI6dee
5pR+7ElO6Nse55i+7FGO6NMe5pAadpIfHOQ7c85/4ja39GBvcF139gLndW0P
sF+Xdje7VLFfvftFRbvODPMdEVkWuMMiD7RrH/JIOfuYJ9qzSywrb1d4qn37
jOcq2M/OL7PN3e26sHvZpyt7lnOq2ze+vdW9XU38/98/eTE3Qw==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0EsuA1AYQOFf0kpMmCE60SFDJkSLqgbxLhOaVGIBbEBYRTfCiKSbUIq0
HototfVIfI3ByTk3N/nvI316XjwbiIgj3CQiZiyOkxElLOgLXuWPoYh35PUb
v2JFN7mBnH7hZyzrJ65jST/yAxZ1jbN8zxmumD/LV3yJaX3CZaR1ljMY1yme
wIjuuWsXg/2zuI5fb6hyiwvmt3mNP3mdN9DRm7yFrt7mHfT0Lu/hS+9zEd/6
gA/xo2vmJ53Z4jaG9ag7jfXRczyPSX1r/w5T+jrx/79/g6cwpg==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Esuw1EUgPHTxF/ULpCwEaWtx8CAGBGDRid9oKJFJAy9HwtgRGIVklpI
1aP1XoJfY/Dl+25u7snJHVopz5VSEbGImyRi32G8PyKDQ13gK94djNjBpd7m
Bi50nbdwrje5hjO9wes41WtcxYmu8DGX+Yj3zD/gIq+ioXOcRVWP8SiKOs0D
WNZvdn3Fgn7kJmb1PWe4lY6Y4DZP8jO/INt7yx3kdJffkdcf/Ikp/cXfmNY/
/IsZ/WD+PD9xG0u6z05Jb389zCOo6Fv3d6jr6+T/f/8AU3sxzw==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0DsvQ3Ecx+GfpU3QKuJSmzdAwhuRmqw2S72DBlG3MlRSd0YGiRrZGDWV
uIzul5mEN+A5MXzyfM8Z/vmfMzg5XSi2RMSEKqmIOw9D6YhhPdhj/ORAW0Re
H3Y/+/Ru97JHb3Y3u/RqdzKnF7uDWT3bGT6xnY+ccv49x1lQwx7liC6Tc5jT
uf3rfj86tW95oyO7zhMd2DXWWGqN2OAMNznLOW3Z8yxr217gonbsJS5r115h
RXv2Kte0bx87/5BNXqtuf/FbZ8l3uWtGF3bVu3VdJeel/v/vH3+LMrI=
          "]]}, {
         Line[{2, 487, 11, 500, 501, 20, 526, 527, 29, 560, 561, 38, 594, 595,
           47, 628, 629, 56, 662, 663, 65, 694, 74}], 
         Line[{1905, 485, 1922, 3268, 2845, 3269, 1940, 3291, 2853, 3290, 
          1958, 3317, 2861, 3318, 1975, 3343, 2870, 3342, 1990, 3366, 2879, 
          3367, 2007, 3396, 2890, 3395, 2026, 3421, 2024, 2046}], 
         Line[{1907, 486, 1923, 504, 3271, 1941, 3294, 2854, 3295, 1959, 3321,
           2864, 3320, 1976, 3345, 2873, 3346, 1991, 3371, 2882, 3370, 2008, 
          3398, 2893, 3399, 2027, 3423, 2028, 2047}], 
         Line[{1909, 2843, 3264, 1925, 2848, 3274, 3275, 1943, 3302, 2856, 
          3300, 1961, 3328, 2866, 3326, 1978, 608, 3351, 1993, 3376, 2885, 
          3379, 2010, 3406, 2896, 3404, 2030, 3429, 2034, 2049}], 
         Line[{1912, 2844, 3266, 1928, 2850, 3284, 3286, 1946, 3313, 2859, 
          3311, 1964, 3334, 2868, 3339, 1980, 2877, 3360, 3362, 1996, 3391, 
          2888, 3386, 2012, 3413, 2898, 3418, 2032, 3435, 2040, 2051}], 
         Line[{1914, 1921, 3270, 1930, 1939, 3292, 3293, 1949, 3288, 2862, 
          3319, 1967, 3315, 2871, 3344, 1982, 3341, 2881, 3369, 1998, 3364, 
          2891, 3397, 2015, 3422, 2900, 3394, 2036, 3420, 2907, 2053}], 
         Line[{1916, 1926, 3273, 1933, 3299, 2855, 3298, 1952, 3325, 2865, 
          3324, 1969, 3348, 2874, 3350, 1985, 3375, 2883, 3374, 2001, 3401, 
          2894, 3403, 2018, 3425, 2901, 3427, 2038, 3440, 2909, 2056}], 
         Line[{1918, 1931, 3278, 1935, 1950, 3305, 3307, 1954, 578, 3331, 
          1971, 3356, 2876, 3355, 1987, 1999, 3381, 3383, 2003, 3411, 2897, 
          3410, 2021, 3431, 2903, 3433, 2042, 3442, 2910, 2058}], 
         Line[{1920, 3261, 2852, 1938, 1955, 3279, 3281, 1957, 3308, 2869, 
          3337, 1974, 620, 3332, 1989, 3357, 2889, 3389, 2006, 688, 3390, 
          2023, 3417, 2905, 3438, 2045, 3444, 2912, 2060}], 
         Line[{2048, 2033, 3428, 2029, 2013, 3407, 3405, 2009, 3378, 3377, 
          2884, 1992, 609, 3352, 1977, 1965, 3329, 3327, 1960, 1947, 3303, 
          3301, 1942, 511, 3276, 1924, 1906, 3263, 1908}], 
         Line[{2050, 2039, 3434, 2031, 2019, 3414, 3412, 2011, 3385, 3384, 
          2887, 1995, 3361, 2878, 3358, 1979, 3338, 2867, 3333, 1963, 3310, 
          3309, 2858, 1945, 3285, 2851, 3282, 1927, 1910, 3265, 1911}], 
         Line[{2052, 2906, 3419, 2035, 3393, 3392, 2025, 2014, 2892, 3365, 
          3363, 1997, 3368, 2880, 3340, 1981, 2872, 3316, 3314, 1966, 2863, 
          3289, 3287, 1948, 529, 3267, 1929, 2846, 3262, 1913}], 
         Line[{2055, 2908, 3439, 2037, 2902, 3426, 3424, 2017, 2895, 3402, 
          3400, 2000, 3373, 3372, 1994, 1984, 2875, 3349, 3347, 1968, 3323, 
          3322, 1962, 1951, 3297, 3296, 1944, 1932, 2847, 3272, 1915}], 
         Line[{2057, 3441, 2054, 2041, 2904, 3432, 3430, 2020, 3409, 3408, 
          2016, 2002, 3382, 2886, 3380, 1986, 3354, 3353, 1983, 1970, 579, 
          3330, 1953, 3306, 2857, 3304, 1934, 2849, 3277, 1917}], 
         Line[{2059, 2911, 3443, 2044, 3437, 3436, 2043, 2022, 2899, 3416, 
          3415, 2005, 3388, 3387, 2004, 1988, 621, 3359, 1973, 3336, 3335, 
          1972, 1956, 3280, 2860, 3312, 1937, 3283, 1936, 1919}], 
         Line[{83, 725, 92, 738, 739, 101, 764, 765, 110, 798, 799, 119, 832, 
          833, 128, 866, 867, 137, 900, 901, 146, 932, 155}], 
         Line[{2061, 723, 2078, 3452, 2915, 3453, 2096, 3475, 2923, 3474, 
          2114, 3501, 2931, 3502, 2131, 3527, 2940, 3526, 2146, 3550, 2949, 
          3551, 2163, 3580, 2960, 3579, 2182, 3605, 2180, 2202}], 
         Line[{2063, 724, 2079, 742, 3455, 2097, 3478, 2924, 3479, 2115, 3505,
           2934, 3504, 2132, 3529, 2943, 3530, 2147, 3555, 2952, 3554, 2164, 
          3582, 2963, 3583, 2183, 3607, 2184, 2203}], 
         Line[{2065, 2913, 3448, 2081, 2918, 3458, 3459, 2099, 3486, 2926, 
          3484, 2117, 3512, 2936, 3510, 2134, 846, 3535, 2149, 3560, 2955, 
          3563, 2166, 3590, 2966, 3588, 2186, 3613, 2190, 2205}], 
         Line[{2068, 2914, 3450, 2084, 2920, 3468, 3470, 2102, 3497, 2929, 
          3495, 2120, 3518, 2938, 3523, 2136, 2947, 3544, 3546, 2152, 3575, 
          2958, 3570, 2168, 3597, 2968, 3602, 2188, 3619, 2196, 2207}], 
         Line[{2070, 2077, 3454, 2086, 2095, 3476, 3477, 2105, 3472, 2932, 
          3503, 2123, 3499, 2941, 3528, 2138, 3525, 2951, 3553, 2154, 3548, 
          2961, 3581, 2171, 3606, 2970, 3578, 2192, 3604, 2977, 2209}], 
         Line[{2072, 2082, 3457, 2089, 3483, 2925, 3482, 2108, 3509, 2935, 
          3508, 2125, 3532, 2944, 3534, 2141, 3559, 2953, 3558, 2157, 3585, 
          2964, 3587, 2174, 3609, 2971, 3611, 2194, 3624, 2979, 2212}], 
         Line[{2074, 2087, 3462, 2091, 2106, 3489, 3491, 2110, 816, 3515, 
          2127, 3540, 2946, 3539, 2143, 2155, 3565, 3567, 2159, 3595, 2967, 
          3594, 2177, 3615, 2973, 3617, 2198, 3626, 2980, 2214}], 
         Line[{2076, 3445, 2922, 2094, 2111, 3463, 3465, 2113, 3492, 2939, 
          3521, 2130, 858, 3516, 2145, 3541, 2959, 3573, 2162, 926, 3574, 
          2179, 3601, 2975, 3622, 2201, 3628, 2982, 2216}], 
         Line[{2204, 2189, 3612, 2185, 2169, 3591, 3589, 2165, 3562, 3561, 
          2954, 2148, 847, 3536, 2133, 2121, 3513, 3511, 2116, 2103, 3487, 
          3485, 2098, 749, 3460, 2080, 2062, 3447, 2064}], 
         Line[{2206, 2195, 3618, 2187, 2175, 3598, 3596, 2167, 3569, 3568, 
          2957, 2151, 3545, 2948, 3542, 2135, 3522, 2937, 3517, 2119, 3494, 
          3493, 2928, 2101, 3469, 2921, 3466, 2083, 2066, 3449, 2067}], 
         Line[{2208, 2976, 3603, 2191, 3577, 3576, 2181, 2170, 2962, 3549, 
          3547, 2153, 3552, 2950, 3524, 2137, 2942, 3500, 3498, 2122, 2933, 
          3473, 3471, 2104, 767, 3451, 2085, 2916, 3446, 2069}], 
         Line[{2211, 2978, 3623, 2193, 2972, 3610, 3608, 2173, 2965, 3586, 
          3584, 2156, 3557, 3556, 2150, 2140, 2945, 3533, 3531, 2124, 3507, 
          3506, 2118, 2107, 3481, 3480, 2100, 2088, 2917, 3456, 2071}], 
         Line[{2213, 3625, 2210, 2197, 2974, 3616, 3614, 2176, 3593, 3592, 
          2172, 2158, 3566, 2956, 3564, 2142, 3538, 3537, 2139, 2126, 817, 
          3514, 2109, 3490, 2927, 3488, 2090, 2919, 3461, 2073}], 
         Line[{2215, 2981, 3627, 2200, 3621, 3620, 2199, 2178, 2969, 3600, 
          3599, 2161, 3572, 3571, 2160, 2144, 859, 3543, 2129, 3520, 3519, 
          2128, 2112, 3464, 2930, 3496, 2093, 3467, 2092, 2075}], 
         Line[{164, 963, 173, 976, 977, 182, 1002, 1003, 191, 1036, 1037, 200,
           1070, 1071, 209, 1104, 1105, 218, 1138, 1139, 227, 1170, 236}], 
         Line[{2217, 961, 2234, 3636, 2985, 3637, 2252, 3659, 2993, 3658, 
          2270, 3685, 3001, 3686, 2287, 3711, 3010, 3710, 2302, 3734, 3019, 
          3735, 2319, 3764, 3030, 3763, 2338, 3789, 2336, 2358}], 
         Line[{2219, 962, 2235, 980, 3639, 2253, 3662, 2994, 3663, 2271, 3689,
           3004, 3688, 2288, 3713, 3013, 3714, 2303, 3739, 3022, 3738, 2320, 
          3766, 3033, 3767, 2339, 3791, 2340, 2359}], 
         Line[{2221, 2983, 3632, 2237, 2988, 3642, 3643, 2255, 3670, 2996, 
          3668, 2273, 3696, 3006, 3694, 2290, 1084, 3719, 2305, 3744, 3025, 
          3747, 2322, 3774, 3036, 3772, 2342, 3797, 2346, 2361}], 
         Line[{2224, 2984, 3634, 2240, 2990, 3652, 3654, 2258, 3681, 2999, 
          3679, 2276, 3702, 3008, 3707, 2292, 3017, 3728, 3730, 2308, 3759, 
          3028, 3754, 2324, 3781, 3038, 3786, 2344, 3803, 2352, 2363}], 
         Line[{2226, 2233, 3638, 2242, 2251, 3660, 3661, 2261, 3656, 3002, 
          3687, 2279, 3683, 3011, 3712, 2294, 3709, 3021, 3737, 2310, 3732, 
          3031, 3765, 2327, 3790, 3040, 3762, 2348, 3788, 3047, 2365}], 
         Line[{2228, 2238, 3641, 2245, 3667, 2995, 3666, 2264, 3693, 3005, 
          3692, 2281, 3716, 3014, 3718, 2297, 3743, 3023, 3742, 2313, 3769, 
          3034, 3771, 2330, 3793, 3041, 3795, 2350, 3808, 3049, 2368}], 
         Line[{2230, 2243, 3646, 2247, 2262, 3673, 3675, 2266, 1054, 3699, 
          2283, 3724, 3016, 3723, 2299, 2311, 3749, 3751, 2315, 3779, 3037, 
          3778, 2333, 3799, 3043, 3801, 2354, 3810, 3050, 2370}], 
         Line[{2232, 3629, 2992, 2250, 2267, 3647, 3649, 2269, 3676, 3009, 
          3705, 2286, 1096, 3700, 2301, 3725, 3029, 3757, 2318, 1164, 3758, 
          2335, 3785, 3045, 3806, 2357, 3812, 3052, 2372}], 
         Line[{2360, 2345, 3796, 2341, 2325, 3775, 3773, 2321, 3746, 3745, 
          3024, 2304, 1085, 3720, 2289, 2277, 3697, 3695, 2272, 2259, 3671, 
          3669, 2254, 987, 3644, 2236, 2218, 3631, 2220}], 
         Line[{2362, 2351, 3802, 2343, 2331, 3782, 3780, 2323, 3753, 3752, 
          3027, 2307, 3729, 3018, 3726, 2291, 3706, 3007, 3701, 2275, 3678, 
          3677, 2998, 2257, 3653, 2991, 3650, 2239, 2222, 3633, 2223}], 
         Line[{2364, 3046, 3787, 2347, 3761, 3760, 2337, 2326, 3032, 3733, 
          3731, 2309, 3736, 3020, 3708, 2293, 3012, 3684, 3682, 2278, 3003, 
          3657, 3655, 2260, 1005, 3635, 2241, 2986, 3630, 2225}], 
         Line[{2367, 3048, 3807, 2349, 3042, 3794, 3792, 2329, 3035, 3770, 
          3768, 2312, 3741, 3740, 2306, 2296, 3015, 3717, 3715, 2280, 3691, 
          3690, 2274, 2263, 3665, 3664, 2256, 2244, 2987, 3640, 2227}], 
         Line[{2369, 3809, 2366, 2353, 3044, 3800, 3798, 2332, 3777, 3776, 
          2328, 2314, 3750, 3026, 3748, 2298, 3722, 3721, 2295, 2282, 1055, 
          3698, 2265, 3674, 2997, 3672, 2246, 2989, 3645, 2229}], 
         Line[{2371, 3051, 3811, 2356, 3805, 3804, 2355, 2334, 3039, 3784, 
          3783, 2317, 3756, 3755, 2316, 2300, 1097, 3727, 2285, 3704, 3703, 
          2284, 2268, 3648, 3000, 3680, 2249, 3651, 2248, 2231}], 
         Line[{245, 1201, 254, 1214, 1215, 263, 1240, 1241, 272, 1274, 1275, 
          281, 1308, 1309, 290, 1342, 1343, 299, 1376, 1377, 308, 1408, 317}], 
         Line[{2373, 1199, 2390, 3820, 3055, 3821, 2408, 3843, 3063, 3842, 
          2426, 3869, 3071, 3870, 2443, 3895, 3080, 3894, 2458, 3918, 3089, 
          3919, 2475, 3948, 3100, 3947, 2494, 3973, 2492, 2514}], 
         Line[{2375, 1200, 2391, 1218, 3823, 2409, 3846, 3064, 3847, 2427, 
          3873, 3074, 3872, 2444, 3897, 3083, 3898, 2459, 3923, 3092, 3922, 
          2476, 3950, 3103, 3951, 2495, 3975, 2496, 2515}], 
         Line[{2377, 3053, 3816, 2393, 3058, 3826, 3827, 2411, 3854, 3066, 
          3852, 2429, 3880, 3076, 3878, 2446, 1322, 3903, 2461, 3928, 3095, 
          3931, 2478, 3958, 3106, 3956, 2498, 3981, 2502, 2517}], 
         Line[{2380, 3054, 3818, 2396, 3060, 3836, 3838, 2414, 3865, 3069, 
          3863, 2432, 3886, 3078, 3891, 2448, 3087, 3912, 3914, 2464, 3943, 
          3098, 3938, 2480, 3965, 3108, 3970, 2500, 3987, 2508, 2519}], 
         Line[{2382, 2389, 3822, 2398, 2407, 3844, 3845, 2417, 3840, 3072, 
          3871, 2435, 3867, 3081, 3896, 2450, 3893, 3091, 3921, 2466, 3916, 
          3101, 3949, 2483, 3974, 3110, 3946, 2504, 3972, 3117, 2521}], 
         Line[{2384, 2394, 3825, 2401, 3851, 3065, 3850, 2420, 3877, 3075, 
          3876, 2437, 3900, 3084, 3902, 2453, 3927, 3093, 3926, 2469, 3953, 
          3104, 3955, 2486, 3977, 3111, 3979, 2506, 3992, 3119, 2524}], 
         Line[{2386, 2399, 3830, 2403, 2418, 3857, 3859, 2422, 1292, 3883, 
          2439, 3908, 3086, 3907, 2455, 2467, 3933, 3935, 2471, 3963, 3107, 
          3962, 2489, 3983, 3113, 3985, 2510, 3994, 3120, 2526}], 
         Line[{2388, 3813, 3062, 2406, 2423, 3831, 3833, 2425, 3860, 3079, 
          3889, 2442, 1334, 3884, 2457, 3909, 3099, 3941, 2474, 1402, 3942, 
          2491, 3969, 3115, 3990, 2513, 3996, 3122, 2528}], 
         Line[{2516, 2501, 3980, 2497, 2481, 3959, 3957, 2477, 3930, 3929, 
          3094, 2460, 1323, 3904, 2445, 2433, 3881, 3879, 2428, 2415, 3855, 
          3853, 2410, 1225, 3828, 2392, 2374, 3815, 2376}], 
         Line[{2518, 2507, 3986, 2499, 2487, 3966, 3964, 2479, 3937, 3936, 
          3097, 2463, 3913, 3088, 3910, 2447, 3890, 3077, 3885, 2431, 3862, 
          3861, 3068, 2413, 3837, 3061, 3834, 2395, 2378, 3817, 2379}], 
         Line[{2520, 3116, 3971, 2503, 3945, 3944, 2493, 2482, 3102, 3917, 
          3915, 2465, 3920, 3090, 3892, 2449, 3082, 3868, 3866, 2434, 3073, 
          3841, 3839, 2416, 1243, 3819, 2397, 3056, 3814, 2381}], 
         Line[{2523, 3118, 3991, 2505, 3112, 3978, 3976, 2485, 3105, 3954, 
          3952, 2468, 3925, 3924, 2462, 2452, 3085, 3901, 3899, 2436, 3875, 
          3874, 2430, 2419, 3849, 3848, 2412, 2400, 3057, 3824, 2383}], 
         Line[{2525, 3993, 2522, 2509, 3114, 3984, 3982, 2488, 3961, 3960, 
          2484, 2470, 3934, 3096, 3932, 2454, 3906, 3905, 2451, 2438, 1293, 
          3882, 2421, 3858, 3067, 3856, 2402, 3059, 3829, 2385}], 
         Line[{2527, 3121, 3995, 2512, 3989, 3988, 2511, 2490, 3109, 3968, 
          3967, 2473, 3940, 3939, 2472, 2456, 1335, 3911, 2441, 3888, 3887, 
          2440, 2424, 3832, 3070, 3864, 2405, 3835, 2404, 2387}], 
         Line[{326, 1439, 335, 1452, 1453, 344, 1478, 1479, 353, 1512, 1513, 
          362, 1546, 1547, 370, 1576, 1577, 379, 1610, 1611, 388, 1642, 397}], 
         Line[{2529, 1437, 2546, 4004, 3125, 4005, 2564, 4027, 3133, 4026, 
          2582, 4051, 3141, 4052, 2599, 4079, 3152, 4078, 2615, 4077, 3158, 
          4100, 2632, 4132, 3169, 4131, 2651, 4157, 2649, 2671}], 
         Line[{2531, 1438, 2547, 1456, 4007, 2565, 4030, 3134, 4031, 2583, 
          4055, 3144, 4054, 2600, 4083, 3155, 4084, 2616, 4107, 3161, 4106, 
          2633, 4134, 3172, 4135, 2652, 4159, 2653, 2672}], 
         Line[{2533, 3123, 4000, 2549, 3128, 4010, 4011, 2567, 4038, 3136, 
          4036, 2585, 4062, 3146, 4060, 2602, 1560, 4089, 2618, 4112, 3164, 
          4115, 2635, 4142, 3175, 4140, 2655, 4165, 2659, 2674}], 
         Line[{2536, 3124, 4002, 2552, 3130, 4020, 4022, 2570, 4049, 3139, 
          4047, 2588, 4068, 3148, 4074, 2605, 4101, 3157, 4096, 2621, 4127, 
          3167, 4122, 2637, 4149, 3177, 4154, 2657, 4171, 2665, 2676}], 
         Line[{2538, 2545, 4006, 2554, 2563, 4028, 4029, 2573, 4024, 3142, 
          4053, 2591, 4050, 3150, 4076, 2607, 4103, 3160, 4105, 2623, 4098, 
          3170, 4133, 2640, 4158, 3179, 4130, 2661, 4156, 3186, 2678}], 
         Line[{2540, 2550, 4009, 2557, 4035, 3135, 4034, 2576, 4059, 3145, 
          4058, 2593, 4081, 3153, 4085, 2609, 4111, 3162, 4110, 2626, 4137, 
          3173, 4139, 2643, 4161, 3180, 4163, 2663, 4176, 3188, 2681}], 
         Line[{2542, 2555, 4014, 2559, 2574, 4041, 4043, 2578, 1530, 4065, 
          2595, 4091, 3156, 4088, 2611, 2624, 4117, 4119, 2628, 4147, 3176, 
          4146, 2646, 4167, 3182, 4169, 2667, 4178, 3189, 2683}], 
         Line[{2544, 3997, 3132, 2562, 2579, 4015, 4017, 2581, 4044, 3151, 
          4071, 2598, 1566, 4066, 2614, 4093, 3168, 4125, 2631, 1636, 4126, 
          2648, 4153, 3184, 4174, 2670, 4180, 3191, 2685}], 
         Line[{2673, 2658, 4164, 2654, 2638, 4143, 4141, 2634, 4114, 4113, 
          3163, 2617, 1561, 4090, 2601, 2589, 4063, 4061, 2584, 2571, 4039, 
          4037, 2566, 1463, 4012, 2548, 2530, 3999, 2532}], 
         Line[{2675, 2664, 4170, 2656, 2644, 4150, 4148, 2636, 4121, 4120, 
          3166, 2620, 4095, 4094, 2612, 2604, 4073, 3147, 4067, 2587, 4046, 
          4045, 3138, 2569, 4021, 3131, 4018, 2551, 2534, 4001, 2535}], 
         Line[{2677, 3185, 4155, 2660, 4129, 4128, 2650, 2639, 3171, 4099, 
          4097, 2622, 4104, 3159, 4102, 2606, 4075, 4072, 3149, 2590, 3143, 
          4025, 4023, 2572, 1481, 4003, 2553, 3126, 3998, 2537}], 
         Line[{2680, 3187, 4175, 2662, 3181, 4162, 4160, 2642, 3174, 4138, 
          4136, 2625, 4109, 4108, 2619, 2608, 3154, 4082, 4080, 2592, 4057, 
          4056, 2586, 2575, 4033, 4032, 2568, 2556, 3127, 4008, 2539}], 
         Line[{2682, 4177, 2679, 2666, 3183, 4168, 4166, 2645, 4145, 4144, 
          2641, 2627, 4118, 3165, 4116, 2610, 4087, 4086, 2603, 2594, 1531, 
          4064, 2577, 4042, 3137, 4040, 2558, 3129, 4013, 2541}], 
         Line[{2684, 3190, 4179, 2669, 4173, 4172, 2668, 2647, 3178, 4152, 
          4151, 2630, 4124, 4123, 2629, 2613, 1567, 4092, 2597, 4070, 4069, 
          2596, 2580, 4016, 3140, 4048, 2561, 4019, 2560, 2543}], 
         Line[{406, 1673, 415, 1686, 1687, 424, 1712, 1713, 433, 1746, 1747, 
          442, 1780, 1781, 450, 1810, 1811, 459, 1844, 1845, 468, 1876, 477}], 
         Line[{2686, 1671, 2703, 4188, 3194, 4189, 2721, 4211, 3202, 4210, 
          2739, 4235, 3210, 4236, 2756, 4263, 3221, 4262, 2772, 4261, 3227, 
          4284, 2789, 4316, 3238, 4315, 2808, 4341, 2806, 2828}], 
         Line[{2688, 1672, 2704, 1690, 4191, 2722, 4214, 3203, 4215, 2740, 
          4239, 3213, 4238, 2757, 4267, 3224, 4268, 2773, 4291, 3230, 4290, 
          2790, 4318, 3241, 4319, 2809, 4343, 2810, 2829}], 
         Line[{2690, 3192, 4184, 2706, 3197, 4194, 4195, 2724, 4222, 3205, 
          4220, 2742, 4246, 3215, 4244, 2759, 1794, 4273, 2775, 4296, 3233, 
          4299, 2792, 4326, 3244, 4324, 2812, 4349, 2816, 2831}], 
         Line[{2693, 3193, 4186, 2709, 3199, 4204, 4206, 2727, 4233, 3208, 
          4231, 2745, 4252, 3217, 4258, 2762, 4285, 3226, 4280, 2778, 4311, 
          3236, 4306, 2794, 4333, 3246, 4338, 2814, 4355, 2822, 2833}], 
         Line[{2695, 2702, 4190, 2711, 2720, 4212, 4213, 2730, 4208, 3211, 
          4237, 2748, 4234, 3219, 4260, 2764, 4287, 3229, 4289, 2780, 4282, 
          3239, 4317, 2797, 4342, 3248, 4314, 2818, 4340, 3255, 2835}], 
         Line[{2697, 2707, 4193, 2714, 4219, 3204, 4218, 2733, 4243, 3214, 
          4242, 2750, 4265, 3222, 4269, 2766, 4295, 3231, 4294, 2783, 4321, 
          3242, 4323, 2800, 4345, 3249, 4347, 2820, 4360, 3257, 2838}], 
         Line[{2699, 2712, 4198, 2716, 2731, 4225, 4227, 2735, 1764, 4249, 
          2752, 4275, 3225, 4272, 2768, 2781, 4301, 4303, 2785, 4331, 3245, 
          4330, 2803, 4351, 3251, 4353, 2824, 4362, 3258, 2840}], 
         Line[{2701, 4181, 3201, 2719, 2736, 4199, 4201, 2738, 4228, 3220, 
          4255, 2755, 1800, 4250, 2771, 4277, 3237, 4309, 2788, 1870, 4310, 
          2805, 4337, 3253, 4358, 2827, 4364, 3260, 2842}], 
         Line[{2830, 2815, 4348, 2811, 2795, 4327, 4325, 2791, 4298, 4297, 
          3232, 2774, 1795, 4274, 2758, 2746, 4247, 4245, 2741, 2728, 4223, 
          4221, 2723, 1697, 4196, 2705, 2687, 4183, 2689}], 
         Line[{2832, 2821, 4354, 2813, 2801, 4334, 4332, 2793, 4305, 4304, 
          3235, 2777, 4279, 4278, 2769, 2761, 4257, 3216, 4251, 2744, 4230, 
          4229, 3207, 2726, 4205, 3200, 4202, 2708, 2691, 4185, 2692}], 
         Line[{2834, 3254, 4339, 2817, 4313, 4312, 2807, 2796, 3240, 4283, 
          4281, 2779, 4288, 3228, 4286, 2763, 4259, 4256, 3218, 2747, 3212, 
          4209, 4207, 2729, 1715, 4187, 2710, 3195, 4182, 2694}], 
         Line[{2837, 3256, 4359, 2819, 3250, 4346, 4344, 2799, 3243, 4322, 
          4320, 2782, 4293, 4292, 2776, 2765, 3223, 4266, 4264, 2749, 4241, 
          4240, 2743, 2732, 4217, 4216, 2725, 2713, 3196, 4192, 2696}], 
         Line[{2839, 4361, 2836, 2823, 3252, 4352, 4350, 2802, 4329, 4328, 
          2798, 2784, 4302, 3234, 4300, 2767, 4271, 4270, 2760, 2751, 1765, 
          4248, 2734, 4226, 3206, 4224, 2715, 3198, 4197, 2698}], 
         Line[{2841, 3259, 4363, 2826, 4357, 4356, 2825, 2804, 3247, 4336, 
          4335, 2787, 4308, 4307, 2786, 2770, 1801, 4276, 2754, 4254, 4253, 
          2753, 2737, 4200, 3209, 4232, 2718, 4203, 2717, 2700}]}, {
         Line[{489, 3390, 689, 3416, 683, 681, 3410, 3409, 675, 3403, 673, 
          3402, 667, 3397, 665, 3365, 653, 651, 3386, 3385, 645, 643, 3379, 
          3378, 637, 3370, 635, 629, 625, 3367, 661}], 
         Line[{496, 655, 3389, 3388, 649, 3383, 3382, 647, 641, 639, 3374, 
          3373, 633, 3369, 3368, 631, 619, 3362, 3361, 617, 611, 3351, 609, 
          603, 601, 3346, 595, 3342, 591, 627}], 
         Line[{499, 485, 487, 486, 490, 3263, 491, 3264, 492, 3265, 493, 3266,
           494, 3262, 502, 3270, 503, 3272, 508, 3273, 509, 3277, 514, 3278, 
          515, 3283, 520, 3261, 521}], 
         Line[{18, 1938, 1937, 17, 1935, 1934, 16, 1933, 1932, 15, 1930, 1929,
           14, 1928, 1927, 13, 1925, 1924, 12, 1923, 11, 1922, 10}], 
         Line[{524, 497, 3268, 500, 504, 506, 3276, 510, 3274, 512, 3282, 516,
           3284, 518, 3267, 528, 3292, 530, 3296, 536, 3299, 538, 3304, 544, 
          3305, 546, 3312, 552, 3279, 554}], 
         Line[{555, 3281, 3280, 553, 547, 3307, 3306, 545, 539, 537, 3298, 
          3297, 531, 3293, 529, 519, 3286, 3285, 517, 513, 3275, 511, 507, 
          3271, 505, 501, 498, 3269, 525}], 
         Line[{558, 3291, 522, 526, 532, 3294, 534, 3301, 3302, 540, 542, 
          3309, 548, 3313, 550, 3287, 3288, 562, 564, 3322, 570, 3325, 572, 
          3330, 578, 580, 3335, 586, 3308, 588}], 
         Line[{589, 587, 3337, 3336, 581, 3331, 579, 573, 571, 3324, 3323, 
          565, 3319, 563, 3289, 551, 549, 3311, 3310, 543, 3300, 541, 3303, 
          535, 533, 3295, 527, 3290, 523, 559}], 
         Line[{592, 556, 3317, 560, 3321, 566, 568, 3327, 3328, 574, 576, 
          3333, 3334, 582, 584, 3314, 3315, 596, 598, 3347, 3348, 604, 606, 
          3353, 612, 3356, 614, 3359, 620, 622}], 
         Line[{623, 3332, 621, 615, 613, 3355, 3354, 607, 3350, 605, 3349, 
          599, 3344, 597, 3316, 585, 3339, 3338, 583, 577, 3326, 575, 3329, 
          569, 3320, 567, 561, 557, 3318, 593}], 
         Line[{626, 3343, 590, 594, 600, 3345, 602, 3352, 608, 610, 3358, 616,
           3360, 618, 3340, 3341, 630, 632, 3372, 638, 3375, 640, 3380, 646, 
          3381, 648, 3387, 654, 3357, 495}], 
         Line[{657, 714, 3438, 3437, 710, 3433, 708, 3432, 704, 3427, 702, 
          3426, 698, 696, 3394, 3393, 687, 3418, 685, 3414, 679, 3404, 677, 
          3407, 671, 669, 3399, 663, 3395, 659, 693}], 
         Line[{660, 624, 3366, 628, 3371, 634, 636, 3377, 642, 3376, 644, 
          3384, 650, 3391, 652, 3363, 3364, 664, 666, 3400, 3401, 672, 674, 
          3408, 680, 3411, 682, 3415, 688, 488}], 
         Line[{690, 722, 3444, 3443, 721, 3442, 720, 3441, 719, 718, 3440, 
          3439, 717, 716, 3420, 3419, 712, 711, 3435, 3434, 706, 705, 3429, 
          3428, 700, 699, 3423, 694, 3421, 691, 715}], 
         Line[{692, 3396, 658, 662, 668, 3398, 670, 3405, 3406, 676, 678, 
          3412, 3413, 684, 686, 3392, 695, 3422, 697, 3424, 3425, 701, 703, 
          3430, 3431, 707, 709, 3436, 713, 3417, 656}], 
         Line[{727, 3574, 927, 3600, 921, 919, 3594, 3593, 913, 3587, 911, 
          3586, 905, 3581, 903, 3549, 891, 889, 3570, 3569, 883, 881, 3563, 
          3562, 875, 3554, 873, 867, 863, 3551, 899}], 
         Line[{734, 893, 3573, 3572, 887, 3567, 3566, 885, 879, 877, 3558, 
          3557, 871, 3553, 3552, 869, 857, 3546, 3545, 855, 849, 3535, 847, 
          841, 839, 3530, 833, 3526, 829, 865}], 
         Line[{737, 723, 725, 724, 728, 3447, 729, 3448, 730, 3449, 731, 3450,
           732, 3446, 740, 3454, 741, 3456, 746, 3457, 747, 3461, 752, 3462, 
          753, 3467, 758, 3445, 759}], 
         Line[{99, 2094, 2093, 98, 2091, 2090, 97, 2089, 2088, 96, 2086, 2085,
           95, 2084, 2083, 94, 2081, 2080, 93, 2079, 92, 2078, 91}], 
         Line[{762, 735, 3452, 738, 742, 744, 3460, 748, 3458, 750, 3466, 754,
           3468, 756, 3451, 766, 3476, 768, 3480, 774, 3483, 776, 3488, 782, 
          3489, 784, 3496, 790, 3463, 792}], 
         Line[{793, 3465, 3464, 791, 785, 3491, 3490, 783, 777, 775, 3482, 
          3481, 769, 3477, 767, 757, 3470, 3469, 755, 751, 3459, 749, 745, 
          3455, 743, 739, 736, 3453, 763}], 
         Line[{796, 3475, 760, 764, 770, 3478, 772, 3485, 3486, 778, 780, 
          3493, 786, 3497, 788, 3471, 3472, 800, 802, 3506, 808, 3509, 810, 
          3514, 816, 818, 3519, 824, 3492, 826}], 
         Line[{827, 825, 3521, 3520, 819, 3515, 817, 811, 809, 3508, 3507, 
          803, 3503, 801, 3473, 789, 787, 3495, 3494, 781, 3484, 779, 3487, 
          773, 771, 3479, 765, 3474, 761, 797}], 
         Line[{830, 794, 3501, 798, 3505, 804, 806, 3511, 3512, 812, 814, 
          3517, 3518, 820, 822, 3498, 3499, 834, 836, 3531, 3532, 842, 844, 
          3537, 850, 3540, 852, 3543, 858, 860}], 
         Line[{861, 3516, 859, 853, 851, 3539, 3538, 845, 3534, 843, 3533, 
          837, 3528, 835, 3500, 823, 3523, 3522, 821, 815, 3510, 813, 3513, 
          807, 3504, 805, 799, 795, 3502, 831}], 
         Line[{864, 3527, 828, 832, 838, 3529, 840, 3536, 846, 848, 3542, 854,
           3544, 856, 3524, 3525, 868, 870, 3556, 876, 3559, 878, 3564, 884, 
          3565, 886, 3571, 892, 3541, 733}], 
         Line[{895, 952, 3622, 3621, 948, 3617, 946, 3616, 942, 3611, 940, 
          3610, 936, 934, 3578, 3577, 925, 3602, 923, 3598, 917, 3588, 915, 
          3591, 909, 907, 3583, 901, 3579, 897, 931}], 
         Line[{898, 862, 3550, 866, 3555, 872, 874, 3561, 880, 3560, 882, 
          3568, 888, 3575, 890, 3547, 3548, 902, 904, 3584, 3585, 910, 912, 
          3592, 918, 3595, 920, 3599, 926, 726}], 
         Line[{928, 960, 3628, 3627, 959, 3626, 958, 3625, 957, 956, 3624, 
          3623, 955, 954, 3604, 3603, 950, 949, 3619, 3618, 944, 943, 3613, 
          3612, 938, 937, 3607, 932, 3605, 929, 953}], 
         Line[{930, 3580, 896, 900, 906, 3582, 908, 3589, 3590, 914, 916, 
          3596, 3597, 922, 924, 3576, 933, 3606, 935, 3608, 3609, 939, 941, 
          3614, 3615, 945, 947, 3620, 951, 3601, 894}], 
         Line[{965, 3758, 1165, 3784, 1159, 1157, 3778, 3777, 1151, 3771, 
          1149, 3770, 1143, 3765, 1141, 3733, 1129, 1127, 3754, 3753, 1121, 
          1119, 3747, 3746, 1113, 3738, 1111, 1105, 1101, 3735, 1137}], 
         Line[{972, 1131, 3757, 3756, 1125, 3751, 3750, 1123, 1117, 1115, 
          3742, 3741, 1109, 3737, 3736, 1107, 1095, 3730, 3729, 1093, 1087, 
          3719, 1085, 1079, 1077, 3714, 1071, 3710, 1067, 1103}], 
         Line[{975, 961, 963, 962, 966, 3631, 967, 3632, 968, 3633, 969, 3634,
           970, 3630, 978, 3638, 979, 3640, 984, 3641, 985, 3645, 990, 3646, 
          991, 3651, 996, 3629, 997}], 
         Line[{180, 2250, 2249, 179, 2247, 2246, 178, 2245, 2244, 177, 2242, 
          2241, 176, 2240, 2239, 175, 2237, 2236, 174, 2235, 173, 2234, 172}], 
         Line[{1000, 973, 3636, 976, 980, 982, 3644, 986, 3642, 988, 3650, 
          992, 3652, 994, 3635, 1004, 3660, 1006, 3664, 1012, 3667, 1014, 
          3672, 1020, 3673, 1022, 3680, 1028, 3647, 1030}], 
         Line[{1031, 3649, 3648, 1029, 1023, 3675, 3674, 1021, 1015, 1013, 
          3666, 3665, 1007, 3661, 1005, 995, 3654, 3653, 993, 989, 3643, 987, 
          983, 3639, 981, 977, 974, 3637, 1001}], 
         Line[{1034, 3659, 998, 1002, 1008, 3662, 1010, 3669, 3670, 1016, 
          1018, 3677, 1024, 3681, 1026, 3655, 3656, 1038, 1040, 3690, 1046, 
          3693, 1048, 3698, 1054, 1056, 3703, 1062, 3676, 1064}], 
         Line[{1065, 1063, 3705, 3704, 1057, 3699, 1055, 1049, 1047, 3692, 
          3691, 1041, 3687, 1039, 3657, 1027, 1025, 3679, 3678, 1019, 3668, 
          1017, 3671, 1011, 1009, 3663, 1003, 3658, 999, 1035}], 
         Line[{1068, 1032, 3685, 1036, 3689, 1042, 1044, 3695, 3696, 1050, 
          1052, 3701, 3702, 1058, 1060, 3682, 3683, 1072, 1074, 3715, 3716, 
          1080, 1082, 3721, 1088, 3724, 1090, 3727, 1096, 1098}], 
         Line[{1099, 3700, 1097, 1091, 1089, 3723, 3722, 1083, 3718, 1081, 
          3717, 1075, 3712, 1073, 3684, 1061, 3707, 3706, 1059, 1053, 3694, 
          1051, 3697, 1045, 3688, 1043, 1037, 1033, 3686, 1069}], 
         Line[{1102, 3711, 1066, 1070, 1076, 3713, 1078, 3720, 1084, 1086, 
          3726, 1092, 3728, 1094, 3708, 3709, 1106, 1108, 3740, 1114, 3743, 
          1116, 3748, 1122, 3749, 1124, 3755, 1130, 3725, 971}], 
         Line[{1133, 1190, 3806, 3805, 1186, 3801, 1184, 3800, 1180, 3795, 
          1178, 3794, 1174, 1172, 3762, 3761, 1163, 3786, 1161, 3782, 1155, 
          3772, 1153, 3775, 1147, 1145, 3767, 1139, 3763, 1135, 1169}], 
         Line[{1136, 1100, 3734, 1104, 3739, 1110, 1112, 3745, 1118, 3744, 
          1120, 3752, 1126, 3759, 1128, 3731, 3732, 1140, 1142, 3768, 3769, 
          1148, 1150, 3776, 1156, 3779, 1158, 3783, 1164, 964}], 
         Line[{1166, 1198, 3812, 3811, 1197, 3810, 1196, 3809, 1195, 1194, 
          3808, 3807, 1193, 1192, 3788, 3787, 1188, 1187, 3803, 3802, 1182, 
          1181, 3797, 3796, 1176, 1175, 3791, 1170, 3789, 1167, 1191}], 
         Line[{1168, 3764, 1134, 1138, 1144, 3766, 1146, 3773, 3774, 1152, 
          1154, 3780, 3781, 1160, 1162, 3760, 1171, 3790, 1173, 3792, 3793, 
          1177, 1179, 3798, 3799, 1183, 1185, 3804, 1189, 3785, 1132}], 
         Line[{1203, 3942, 1403, 3968, 1397, 1395, 3962, 3961, 1389, 3955, 
          1387, 3954, 1381, 3949, 1379, 3917, 1367, 1365, 3938, 3937, 1359, 
          1357, 3931, 3930, 1351, 3922, 1349, 1343, 1339, 3919, 1375}], 
         Line[{1210, 1369, 3941, 3940, 1363, 3935, 3934, 1361, 1355, 1353, 
          3926, 3925, 1347, 3921, 3920, 1345, 1333, 3914, 3913, 1331, 1325, 
          3903, 1323, 1317, 1315, 3898, 1309, 3894, 1305, 1341}], 
         Line[{1213, 1199, 1201, 1200, 1204, 3815, 1205, 3816, 1206, 3817, 
          1207, 3818, 1208, 3814, 1216, 3822, 1217, 3824, 1222, 3825, 1223, 
          3829, 1228, 3830, 1229, 3835, 1234, 3813, 1235}], 
         Line[{261, 2406, 2405, 260, 2403, 2402, 259, 2401, 2400, 258, 2398, 
          2397, 257, 2396, 2395, 256, 2393, 2392, 255, 2391, 254, 2390, 253}], 
         Line[{1238, 1211, 3820, 1214, 1218, 1220, 3828, 1224, 3826, 1226, 
          3834, 1230, 3836, 1232, 3819, 1242, 3844, 1244, 3848, 1250, 3851, 
          1252, 3856, 1258, 3857, 1260, 3864, 1266, 3831, 1268}], 
         Line[{1269, 3833, 3832, 1267, 1261, 3859, 3858, 1259, 1253, 1251, 
          3850, 3849, 1245, 3845, 1243, 1233, 3838, 3837, 1231, 1227, 3827, 
          1225, 1221, 3823, 1219, 1215, 1212, 3821, 1239}], 
         Line[{1272, 3843, 1236, 1240, 1246, 3846, 1248, 3853, 3854, 1254, 
          1256, 3861, 1262, 3865, 1264, 3839, 3840, 1276, 1278, 3874, 1284, 
          3877, 1286, 3882, 1292, 1294, 3887, 1300, 3860, 1302}], 
         Line[{1303, 1301, 3889, 3888, 1295, 3883, 1293, 1287, 1285, 3876, 
          3875, 1279, 3871, 1277, 3841, 1265, 1263, 3863, 3862, 1257, 3852, 
          1255, 3855, 1249, 1247, 3847, 1241, 3842, 1237, 1273}], 
         Line[{1306, 1270, 3869, 1274, 3873, 1280, 1282, 3879, 3880, 1288, 
          1290, 3885, 3886, 1296, 1298, 3866, 3867, 1310, 1312, 3899, 3900, 
          1318, 1320, 3905, 1326, 3908, 1328, 3911, 1334, 1336}], 
         Line[{1337, 3884, 1335, 1329, 1327, 3907, 3906, 1321, 3902, 1319, 
          3901, 1313, 3896, 1311, 3868, 1299, 3891, 3890, 1297, 1291, 3878, 
          1289, 3881, 1283, 3872, 1281, 1275, 1271, 3870, 1307}], 
         Line[{1340, 3895, 1304, 1308, 1314, 3897, 1316, 3904, 1322, 1324, 
          3910, 1330, 3912, 1332, 3892, 3893, 1344, 1346, 3924, 1352, 3927, 
          1354, 3932, 1360, 3933, 1362, 3939, 1368, 3909, 1209}], 
         Line[{1371, 1428, 3990, 3989, 1424, 3985, 1422, 3984, 1418, 3979, 
          1416, 3978, 1412, 1410, 3946, 3945, 1401, 3970, 1399, 3966, 1393, 
          3956, 1391, 3959, 1385, 1383, 3951, 1377, 3947, 1373, 1407}], 
         Line[{1374, 1338, 3918, 1342, 3923, 1348, 1350, 3929, 1356, 3928, 
          1358, 3936, 1364, 3943, 1366, 3915, 3916, 1378, 1380, 3952, 3953, 
          1386, 1388, 3960, 1394, 3963, 1396, 3967, 1402, 1202}], 
         Line[{1404, 1436, 3996, 3995, 1435, 3994, 1434, 3993, 1433, 1432, 
          3992, 3991, 1431, 1430, 3972, 3971, 1426, 1425, 3987, 3986, 1420, 
          1419, 3981, 3980, 1414, 1413, 3975, 1408, 3973, 1405, 1429}], 
         Line[{1406, 3948, 1372, 1376, 1382, 3950, 1384, 3957, 3958, 1390, 
          1392, 3964, 3965, 1398, 1400, 3944, 1409, 3974, 1411, 3976, 3977, 
          1415, 1417, 3982, 3983, 1421, 1423, 3988, 1427, 3969, 1370}], 
         Line[{1441, 4126, 1637, 4152, 1631, 1629, 4146, 4145, 1623, 4139, 
          1621, 4138, 1615, 4133, 1613, 4099, 1601, 1599, 4122, 4121, 1593, 
          1591, 4115, 4114, 1585, 4106, 1583, 1577, 1573, 4100, 1609}], 
         Line[{1448, 1603, 4125, 4124, 1597, 4119, 4118, 1595, 1589, 1587, 
          4110, 4109, 1581, 4105, 4104, 1579, 1569, 4096, 4095, 1563, 4089, 
          1561, 1555, 1553, 4084, 1547, 4078, 1543, 1575}], 
         Line[{1451, 1437, 1439, 1438, 1442, 3999, 1443, 4000, 1444, 4001, 
          1445, 4002, 1446, 3998, 1454, 4006, 1455, 4008, 1460, 4009, 1461, 
          4013, 1466, 4014, 1467, 4019, 1472, 3997, 1473}], 
         Line[{342, 2562, 2561, 341, 2559, 2558, 340, 2557, 2556, 339, 2554, 
          2553, 338, 2552, 2551, 337, 2549, 2548, 336, 2547, 335, 2546, 334}], 
         Line[{1476, 1449, 4004, 1452, 1456, 1458, 4012, 1462, 4010, 1464, 
          4018, 1468, 4020, 1470, 4003, 1480, 4028, 1482, 4032, 1488, 4035, 
          1490, 4040, 1496, 4041, 1498, 4048, 1504, 4015, 1506}], 
         Line[{1507, 4017, 4016, 1505, 1499, 4043, 4042, 1497, 1491, 1489, 
          4034, 4033, 1483, 4029, 1481, 1471, 4022, 4021, 1469, 1465, 4011, 
          1463, 1459, 4007, 1457, 1453, 1450, 4005, 1477}], 
         Line[{1510, 4027, 1474, 1478, 1484, 4030, 1486, 4037, 4038, 1492, 
          1494, 4045, 1500, 4049, 1502, 4023, 4024, 1514, 1516, 4056, 1522, 
          4059, 1524, 4064, 1530, 1532, 4069, 1538, 4044, 1540}], 
         Line[{1541, 1539, 4071, 4070, 1533, 4065, 1531, 1525, 1523, 4058, 
          4057, 1517, 4053, 1515, 4025, 1503, 1501, 4047, 4046, 1495, 4036, 
          1493, 4039, 1487, 1485, 4031, 1479, 4026, 1475, 1511}], 
         Line[{1544, 1508, 4051, 1512, 4055, 1518, 1520, 4061, 4062, 1526, 
          1528, 4067, 4068, 1534, 4072, 1536, 4050, 1548, 4080, 4081, 1550, 
          1556, 4086, 1558, 4091, 1564, 4092, 1566, 1570}], 
         Line[{1571, 4066, 1567, 1565, 1559, 4088, 4087, 1557, 4085, 1551, 
          4082, 1549, 1537, 4076, 4075, 4074, 4073, 1535, 1529, 4060, 1527, 
          4063, 1521, 4054, 1519, 1513, 1509, 4052, 1545}], 
         Line[{1574, 4079, 1542, 1546, 1552, 4083, 1554, 4090, 1560, 1562, 
          4094, 1568, 4101, 4102, 4103, 1578, 1580, 4108, 1586, 4111, 1588, 
          4116, 1594, 4117, 1596, 4123, 1602, 4093, 1447}], 
         Line[{1605, 1662, 4174, 4173, 1658, 4169, 1656, 4168, 1652, 4163, 
          1650, 4162, 1646, 1644, 4130, 4129, 1635, 4154, 1633, 4150, 1627, 
          4140, 1625, 4143, 1619, 1617, 4135, 1611, 4131, 1607, 1641}], 
         Line[{1608, 1572, 4077, 1576, 4107, 1582, 1584, 4113, 1590, 4112, 
          1592, 4120, 1598, 4127, 1600, 4097, 4098, 1612, 1614, 4136, 4137, 
          1620, 1622, 4144, 1628, 4147, 1630, 4151, 1636, 1440}], 
         Line[{1638, 1670, 4180, 4179, 1669, 4178, 1668, 4177, 1667, 1666, 
          4176, 4175, 1665, 1664, 4156, 4155, 1660, 1659, 4171, 4170, 1654, 
          1653, 4165, 4164, 1648, 1647, 4159, 1642, 4157, 1639, 1663}], 
         Line[{1640, 4132, 1606, 1610, 1616, 4134, 1618, 4141, 4142, 1624, 
          1626, 4148, 4149, 1632, 1634, 4128, 1643, 4158, 1645, 4160, 4161, 
          1649, 1651, 4166, 4167, 1655, 1657, 4172, 1661, 4153, 1604}], 
         Line[{1675, 4310, 1871, 4336, 1865, 1863, 4330, 4329, 1857, 4323, 
          1855, 4322, 1849, 4317, 1847, 4283, 1835, 1833, 4306, 4305, 1827, 
          1825, 4299, 4298, 1819, 4290, 1817, 1811, 1807, 4284, 1843}], 
         Line[{1682, 1837, 4309, 4308, 1831, 4303, 4302, 1829, 1823, 1821, 
          4294, 4293, 1815, 4289, 4288, 1813, 1803, 4280, 4279, 1797, 4273, 
          1795, 1789, 1787, 4268, 1781, 4262, 1777, 1809}], 
         Line[{1685, 1671, 1673, 1672, 1676, 4183, 1677, 4184, 1678, 4185, 
          1679, 4186, 1680, 4182, 1688, 4190, 1689, 4192, 1694, 4193, 1695, 
          4197, 1700, 4198, 1701, 4203, 1706, 4181, 1707}], 
         Line[{422, 2719, 2718, 421, 2716, 2715, 420, 2714, 2713, 419, 2711, 
          2710, 418, 2709, 2708, 417, 2706, 2705, 416, 2704, 415, 2703, 414}], 
         Line[{1710, 1683, 4188, 1686, 1690, 1692, 4196, 1696, 4194, 1698, 
          4202, 1702, 4204, 1704, 4187, 1714, 4212, 1716, 4216, 1722, 4219, 
          1724, 4224, 1730, 4225, 1732, 4232, 1738, 4199, 1740}], 
         Line[{1741, 4201, 4200, 1739, 1733, 4227, 4226, 1731, 1725, 1723, 
          4218, 4217, 1717, 4213, 1715, 1705, 4206, 4205, 1703, 1699, 4195, 
          1697, 1693, 4191, 1691, 1687, 1684, 4189, 1711}], 
         Line[{1744, 4211, 1708, 1712, 1718, 4214, 1720, 4221, 4222, 1726, 
          1728, 4229, 1734, 4233, 1736, 4207, 4208, 1748, 1750, 4240, 1756, 
          4243, 1758, 4248, 1764, 1766, 4253, 1772, 4228, 1774}], 
         Line[{1775, 1773, 4255, 4254, 1767, 4249, 1765, 1759, 1757, 4242, 
          4241, 1751, 4237, 1749, 4209, 1737, 1735, 4231, 4230, 1729, 4220, 
          1727, 4223, 1721, 1719, 4215, 1713, 4210, 1709, 1745}], 
         Line[{1778, 1742, 4235, 1746, 4239, 1752, 1754, 4245, 4246, 1760, 
          1762, 4251, 4252, 1768, 4256, 1770, 4234, 1782, 4264, 4265, 1784, 
          1790, 4270, 1792, 4275, 1798, 4276, 1800, 1804}], 
         Line[{1805, 4250, 1801, 1799, 1793, 4272, 4271, 1791, 4269, 1785, 
          4266, 1783, 1771, 4260, 4259, 4258, 4257, 1769, 1763, 4244, 1761, 
          4247, 1755, 4238, 1753, 1747, 1743, 4236, 1779}], 
         Line[{1808, 4263, 1776, 1780, 1786, 4267, 1788, 4274, 1794, 1796, 
          4278, 1802, 4285, 4286, 4287, 1812, 1814, 4292, 1820, 4295, 1822, 
          4300, 1828, 4301, 1830, 4307, 1836, 4277, 1681}], 
         Line[{1839, 1896, 4358, 4357, 1892, 4353, 1890, 4352, 1886, 4347, 
          1884, 4346, 1880, 1878, 4314, 4313, 1869, 4338, 1867, 4334, 1861, 
          4324, 1859, 4327, 1853, 1851, 4319, 1845, 4315, 1841, 1875}], 
         Line[{1842, 1806, 4261, 1810, 4291, 1816, 1818, 4297, 1824, 4296, 
          1826, 4304, 1832, 4311, 1834, 4281, 4282, 1846, 1848, 4320, 4321, 
          1854, 1856, 4328, 1862, 4331, 1864, 4335, 1870, 1674}], 
         Line[{1872, 1904, 4364, 4363, 1903, 4362, 1902, 4361, 1901, 1900, 
          4360, 4359, 1899, 1898, 4340, 4339, 1894, 1893, 4355, 4354, 1888, 
          1887, 4349, 4348, 1882, 1881, 4343, 1876, 4341, 1873, 1897}], 
         Line[{1874, 4316, 1840, 1844, 1850, 4318, 1852, 4325, 4326, 1858, 
          1860, 4332, 4333, 1866, 1868, 4312, 1877, 4342, 1879, 4344, 4345, 
          1883, 1885, 4350, 4351, 1889, 1891, 4356, 1895, 4337, 
          1838}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
v2RKlzZZr5zp+XXRnJdwv2HPYi2JZLzdYn1JjOBMQsSI++x18ei5dmH1wpne
uKtbOvsQmW8SFT9o4jYWP8DET1ncWLxBPBVvwMSbUfVYfKLF3bH4RCY+Dcff
K9Ori8EsG65fXx+5or5FiIcgmde7YvH9++TTUUMw+7jdlli07Cq71Ufw4c5t
t0tN5enoPCXnjMzbYLTdMuGDBJmXkgTX2/o5iVju08QhG+6EEuMsPkkROw91
fph6U8sDzzi+zcHNC4Bn2dTHAeS7IqZj+xfmU/sXmP3rT+130Kb2O7TR+92b
wgf4ROEDMPjgqTGGJ3iawhNk8EQoPoHjHfih6qqqHWvtk3B2V5qUEVl3S6sB
l+8itvhoRmbJgYkB6MSqmzmJ2GP90+jrd3K+4W6Y8+qliBUUxEZ+Gj0/fN7Y
b/7lQAaM/z3jk+/TUNj14UWqK+EFnXk3L3+cmwarFq3mdeoOhW9DInqvh//B
Wyih8BYYvN1O4TP0XR3DZ2Dw+ShrDM/BsngMz5HBcxr/cQeF/8jg/wmBMb5A
iZ4xvkCGL2opfoHpFL8Awy/PKD4CLoqPwInmI5q/IJniL2D4ayrFd3Cd4jtg
+G4yxY/AS/EjMvx4juJTKKD4FBk+pfkXaf5Fhn+XLIyc+0AlDKefX+hueyQV
/Ksmeu4ldhqvtTBd9j4cExJXCrF2pEKZfcFBYTI+7dhBY/4zCTgskTR++0Aq
pBcuaOYgetR6LJVi1NNwIM3m7FT5MPi51Ke4iPg/vDZRUePNJbyUUfNOZtEZ
mHBIcYolwYFOTbybr5mH94J98xUzfdH5jLhwNZlX9QneLYqFGTj+5IZL08h5
spjXXNKL6G9rj70WejMBXz180mdurIdnbNX3uZJ4ezVbt9zteyJGPc7Rqoi5
AAsVrxRMJuPLdgYqXnlpDz17Zi6WD4iHM7x4Oo2MhzaddubqlQfZ30K77Xcm
w8Inmvt6SBwujAVZn2o/nLDx2PXZqeGwrjV1KIKsr/SanlCDr9G4z8Lq9c7l
54H76tdN9mS8YvuBvA0bE5Ansqzs8zx9LJIWH59B9C84t7fiuGkYZjcK1x07
aI3Lpd5EGhH/z/tmpVCUFoLWC8IC/94wxmWTRuLqyPi5vZeuGxh5oQsH/0Nv
U1Nsme1gbkzih3dcj9f2DZG40995914uBzQVttj/inzXQ+TKdOOj6RB6LMv9
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
QSszTglNck8XoOWr2OS/bdv7sPNyPk40fyzqy5WMZzy4hzcQ+X10XVs4W10b
73vHhyYCZVijOc7/8YVM9ND71KBE7k0HaPlINvlV30zKz5L76aBdk9uZkXgM
r5bPeTDwvzq+UjZ7rlPnB+TaPXZ+QOb8oEPX981mq+9b3rRrg+L6IgzfqX7k
1KRwlMoujHhH1reErr+bwlZ/pxjK+/rVhBIsv7VVQvpPHG63zN2x5zULyml5
YTb5aOq8hAf8x85LyJyXOul77h+2e+5D6n4B1X5j9wtg7hdFdF3ba6pOGZk6
5YOv7k0LPJ+B5xqbj7vpJ6PiJM1vsWR95ek6vjS2Or67FH/BJYq/gOEvXbqe
8awHVc/InPeuFzlKPCG4E6TsbT9tMAcDNvg255DzSR1dD9hK1wNOp+sBV9y2
8PiZUIZ/W0709uam4e+24a5csr7VtH/msflH0B2lDs8qxFMS811u+sei+nLZ
7InkvHSQrnN8dYGqc3xL1zlKOfC6bxFLw+16Gqpz16egeeuCO1lkX3TTdYjR
dB3iVboO8dI+R91LO/Jx2ZbCXzKS+Xj6rqqi/CtyPqTlU9jkJwuzqlmz0pAj
7VryykemaNlexQtkP8rQ9kx0/Lc9nqvnXNs1bIdVxoK+LXbJUKhqfDWK8MtK
uh6zm67HZOqp368UeHfi6WWc/t0vz60nDxV3udjzkXPX+/+wZ1jtyMvv8lFo
Y6SzsNQwAfuPiqe6EHv46PrKbnWqvvInXV85oCWuuP+vN7q+fZWVKeEFFovF
nXtG442uA73PVge6lLqfwlHqfgrM/bSXln/CJv/H/8/NbSudsO/HcY7jwWfx
w/GrfwtInAjQ9vxls6evqaSm8HcoKEw56qucFQ9tbk4L9Ij+j3QdKBdbHagb
dR8H+j4OzH385X/YE0rleVCAyvMgk+fRoPIA2ELlAZDJAxRS9x1Mou47yNx3
ttL7JYltv3TEOzy1jQzFQ0Zcge9mFODa53ITvUnczuGbZbB6agAkaFrqrneN
gF9yUvwnyH5sputYP7PVsQb9+uN1k9yHo4dsNIyWpsBuufIV4sQ/N2j5r2zy
QieCK4uNvLDp1PO9CkczsKvwj+BxYn/IsoOzQ06mg4FlYL3pMXus4bvScYjc
4y4Kb7KwnVEErSfvTussKILLmb8vziX7sYPWz2n8b/13qLwT3KDyTsDknb7S
9bZJbPW2oRtzG0pvlkCVdklf74MImOS/yCyC7KMf6kndJrZVcNj1j0BeaQrU
WSytNCP3LBsqDwY2VB4MmDzYAK0/iE1/JZWXgw4qLwdMXk6crvPlZ6vzJfCe
OTL5Kiy6vCc3V6gI2s3/wIc8wke1Zb/S3teCX31DzKKiAmhIUTuJNYQfqfwh
cMmM5Q+ByR9O7aRwtZ8NV2dS+SIUofJFyOSLtOo/6Hp11ICgoOpeSfE8OGS6
oZ2vkQUua3aHLOMvA2/HD2FGnenQaTQUZdlDzvNUHhW4zMfyqKBK51EDqbwr
yPKM5V2RybtaUfleeLR9LN+LTL7X5/hYvhcKqHwvMvlezbqxvDEoUXljZPLG
b7u2B2zx9cDYdM1eSUEHONqYKH2C7NPgnMg7XdUxOP9Twynj9B1o3Lk7ePR9
u9b6GTYFFcH4wWuPurG1EmS2fCl/Q/xTUb7OeCTcDmyTb767FkzW/XDOtwmj
uEfXqb1lq1O75RSqbPsgDevlL67MMN8KnMLSxY9JfM5uSVH5OCMLb5Y0Tl60
xQeP7T+0kO87CyZt3Px3XcolXJKY9PN1czDm7Z4nmkL8bGAaMa2kLg/71n06
/7AlAh/x7l+9hZwn+VW6eDKP5+LloK2mua2hqBuouOkD2aeNA/WKJ/R1ULbz
Z6q9oC1eXDc3/iGZbx5dJxjKVid4fCgq34X3Irauc+usRXfsWJQ1pDFaj0bX
4fKy1eFWa3Wrf3p5Fh4+cD//STAKYiWXPn1Ixl8MB0f19/viIs+o7inbg3He
5co2OeKfY7QefjY9t4W8tGNCLuGb4u6LkVaRmNEtK3WL7IsNP48qdOumYXGr
dOZywwDcG7PKew/x23fdnGXjbCNxjcm54LlFIThxnO7ITeJn7f/QP+v57+66
NZHYLzot4wRnOAayONa7EfnDdB3xarY64sUTZXe+M49Gpx1c6poubnjRKzF6
9D2GuRCnkfQrMh/dKbMXF57DzkX9Re1kXrHS916LKcShTPwcw8KV0RinJ1F6
m+DzMVr/Wjb9FRERESu6fHH7cw6PEx2u2G4lvXWQ6LGk65f3sNUvy/8Zd+4v
SxmCz8+wsjb0hs9uX7hH67bme4Q6H8t2Bq55C09PIXjg+efI5pvEzv6tGUe9
dnvgJfElzcsv2eEW597Uk6Pvq2n9qmz6dz+J2ClWfA7P3eYvOt5mjVILf+W3
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
U9XO8+oigTArv9OwQisZZ8bqPBgdn0P3JzxO9yespfvvnQ1tzTzACoOFPX1T
jc+5Q1G98sTR98MqtD2SbPZ0dY44b2aFwttpiYH9MoYgHrG5OuT/lS89/E++
9MMXo/4HN4IgZpsHZ8++RLT+461uRvyTTvdFXMLWFzF5nVxVqJIr8MxPH/+0
LRmXq3233knkk/+jj+KlBYI7J13xwwIrnlaN2QnQHdN4/DORz6D7EMqz9SHk
ps5FuJY6FwFzLppA92N8yNaPUXycwjI/Xl/c/OHh9gHfJPj48KPk+V+jdRb/
7mfI+LOvyW/uEi1/+NzhnWotZo8ThSav4//L+Mee9supf/7/gir7CzpKxp6Q
OCuy54NsIHotMawYvX89Y+vTGET3abzjZxxrqhaM89a/89/TEgUGl7KDkNhp
9x99FNMWBAhmDjljltRtl7SqWLAyVyn/SOStafmFbPKmR3atPVHhDr0/Ez83
lYXjTP5ZtW9G+/nQ9hiy2fOgXP6GxWs3mKM4Qa/YNRaPjrvC85Ton033k+Rk
6yf57uKaCT8veSPXszrZU8FhIBiQO6uf6Lel7RFjs0ddfGHUzeQg3MV1fr7R
a284nx33zJh89wDdH1KZrT9kJ+Uf2En5Bxn/pP9HH8ud1PqCPbW+yKxvPC3v
yiavaNFQ+f/Q9d5xPf7f43+kkC0ZkWwhM1TWQdlSUiGVpKLSVCqkvffee2vv
ojqEpBQysislhAohGf0ez67H8+3zur4//16303mex3msc07Xde72d/1QY9ee
N8b85jB5nOCK2//Hnr0se2J9Tr6daemH55VyMoe0nkTsGL2ak6econ0so1h9
LGOY9QwZzHpG7nqOofbYs+wRvH9dreJsCIy4YTrSRioKs7v3vnjX/7c/Zwur
P6eK5usPYauJS9I7F/MkRUGsXtNAE9H/ifaxjKF9LBNpH8uJjH6cyegHrv7U
f+yvXad2fZ5j740PTizoDZ8UC9elygU0OfuF6o9l6f+2KTPcyiQQMxcK3ozV
cUXvmbjyN6cOQ/2TwvLPlH1rVDf+IPYEpsS2zQ/Ercrempy+E2dp/8/9rP6f
MXu9hmRODMBQU+vRHfKh8Gz/l8vhRP4rtSeCZY+qLkL1kjDcZ3vSWzXSDzoq
g29z+knepf08k1j9PE9OyxTfetEPl29+NO4c2ZcLVk5b2Eyea9G+o9dZfUdz
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
0s4pSPjFwVq/gaCDCoHQ+3TJlC1E/+XhpusTsuLB9UrkPjUlUxB20bsmQOR3
MXVOuMDUOZFb53zM1EXhFlMXRW5d9DxTj4V4ph6L3HqsIFOPxb1MPRa59Vhh
pq6LaUxdF7l1XZ97hoJVE8xhQmqgfFNtIGTqbhh9lMzLpFftMU6pTqhx7Hy2
fl8KHBGyjlUm6/xrecmRpUmWcKLR0XLHjgjQWvxOazGnH+++yUk4LhwX7/it
M8E4GY0kO++rkfN5O+UqCnT+l6s4yvekyektvlh/NOvagh2X4c/ETwO6nH7d
daMzj+3JxalWci94ZQvhw7dfcXEPu8FbT2LM/OYSfOwyat6WnxlgdfOS5VAi
b7p3aeVrXcQclUyPndtPQZGFltzkqm54aPNxeYUHouuk8ooO97PY5clnfvIq
udc2/H4+foIOGsvpv1zjWYoLx5wz2PCUnD+Ua+lNuZbZlGvZsppntcfzULCQ
VTb9vCMYZCvVbYdweIKUD5tA+bBIOZIbhd/NHr3SGsr7PhoM1bSHs97w3Ivz
/tuNNuOnV8KgMzFp95HrkTAs90sDJ792ZHFmuXqUlm9uzPxdgZpHSpTyJgWj
tDlYNt0g+8tITMQ67xLerBszVM41BCdOvP7r8D1yzneKdSsK2ENK9PvF1aWp
YH/s2Lr3RI8t1Z/J0q94pO7+oXlOcHlns1KCaiKsOrw8Bck5qU/5tv0svq2I
z+br6R+L8U2p+LH3pZE4zTv44zgSl65yv7Rpr3IJrj5xke9CURzG37af5vyk
GxpmTNeU3xqE9bm+6523e8Il80ZbznciOlT/G5Z+3Kv9aeVnTbyncnMVr5c/
yO1VD7vJ6XdKubqzWVzdtuV2x28czcN3D2Z0wcQ47P288dV4sh+TT/en39HN
xL3rr5t5fotB+epLtgkkbnT87XJ4hL0Ojjr5QkLWyAbCjmsnVg381S/C0v9o
jfKa11rn8fCIVncx7+MYbb/l4k0iP4/yfAspz1eN8nwVDVT6ditm4Ra5Wj7R
nASUeiczagp5Pu6PT8Xp4iTc3hxw3W9TOt5+n2alSOy5bR2TvMwsDu6nNyYo
dKTBG+WB6YIcfjTl9tJ1CNx1OCVcckQ4vx+4VH9bNTfHCz6PuWbI+T/UZsov
3sDiF6/JS1vp3JgEsj8sRm8i+e/42rk8U8nvLqD831wW/9ehNmnzt1wrOBb0
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
P8+m83KbNS/dH7/Ku97zBXcJUQWlR9GQenbsATeynvd4VuzbxecNIiLHmxTH
RgIP1K3dz+EdUy65CYtLHtLRm46TiB9fiQdI80Wg/qrk6gEOl1zyhGmiizOa
GcX9eLM4DDftGfguw+k/T7nzS1nc+Q8PBAKSevRhwZ09yidNXXF4wuOtBkT/
auqfvLb/+seB8uJNWLz4H0ai2iVLQ6H50E7tpOlG4Np6xOkx+d1llA9+hsUH
j6dc9WgWV134eVplsGsiDKxqff5YyhX2+3t0OJD5XUn54DtZfPAwyluvY/HW
BVvk94VYJUGutdjukOYgKJwe9LOSrB9DyhNPZfHEm2LkRSQ1o+G3lPOMs4t9
oD61cQfnOxdryvVeyeJ636Zc7wgW1/visPH8gi+8Ie3TtJuB2nZwhndc0wtO
X8RSm2nnV0qj4OqGEjEfN1w7eu80DgczeXYPmJP14fD8s9OBy7IYdNXoLWed
rKJ+s2f5LcLAS3nj9AR4KLM8dF9TKGgMa9JOJfsr9B/c+VrKW29k8dabhPaP
+iKXBksn8W3wOh4N15a+/aFFzoEb/+BTy1Cutz2L66268+eKU2XJ0KDdum7O
Dm9wXm4y2H/yCOV6F7G43gYLb7UmSkaD6IBB09VdB6Fao2xMGpn34ZRbbcji
VhcUep4ekeoEYhm38gw3+2K/sqR4PHl+i/r/NMv/HYcYnvVYFs86bO8Y+478
Uxgx7NDjj6HhOBJSB45z3ot+lFuxbMAPREQTpB6LhkG9YH9PGLGnfl0+tkfE
wFR3n+fTCmKAzzqEL63vL0/8Pcs/7+wNdMIjIqG2Y4nlI9dI0Cx/7j6OjNeK
8rJPsHjZZy7MKN431xFuRua+29FjB7teCReokXk37vDWFV9sVv5bovqKebvB
//LT8Q1P+J1Ou6EGT19kWZAjJq+Iucjpr8JD/abH8tteymW+wOIyv4xouDox
Ngrfp0w4uGVFNPI5+C6zIuufn3KZ17C4zPoPxDRjv0fhQLDPz6iRsdg++WZt
L/GD9j+4w2KMP3Eq40/k+nPBvkH/w3bG/8D1fzYzvxh4cXB+gTu/0yn3+efM
/3Kf5/smXzLkicOCw+G1Ub2aOMXHW+An5/yk4z3HGq805S9rs/jLAY9X14pa
pmBWYO0Z8ckBmOfaX/eA3DsmlC88lsUXNgu1q5FQTcOAS43Njy+S+D17u/iu
L385uWYsTm76P7jDD5U//VT1ScQUI6WVPBIhGOInZTGV2BNCubpWLK7uWP2Q
DHshPzS2yP04ImkJptd+3cjpP6NJ/S/H8r8n5e2eYvF21xQNnj9QwZw/wD1/
Zh1pKi2/5o0Fo1btV09zwC+asZZ1RP/GojF1lf5xGF828x7e98clE2I9Lcl6
fk95x0dYvOO28KfOwTZJOFo6P0PPPxgPdy7ZFkPOgbuUL3yBxRceWHNoqsmr
eFSMjN9rXu+Gc66J7eH8P86d8lifsHisOynHNpfFsW2cNyc1QicIv0nkr34l
YIy7l0a/4Hx3EED9acby5z7Kk22+8F+e7NRxbj+G903DMddjnurGeoBslF7t
PvJcj/JVf7D4qlNOMZxZERZnFpn7F3yZ+xe4968n5ahqsTiq2cw9DveYexz0
6D1+l3JUw1kc1c3UDwksP4RLzb56vtwDd94u+CHTEomXDbR4ZMlzswe7vy1M
cUSXoPaP7/6E4PJrSUE+5HeN/sE51aH+b2T5n2/8zvRXCufh4ZKpnd/PmmHG
jFiPUs7/c6l/hKr+6x//3u+mIbqxMMr3gyj/fDfwb4n8HMjhFDPxLQgy8S18
ofGtD+Wc7mdxTnsor3bYr//yaiW+PYn8vCYJhHTDHwx/EQBVmZOVpcm6Oka5
q0tZ3NVuPnUFzeHk/guYrp670g8KepYO4+Qvz5n4HHiY+By48bkt5Zy+ZnFO
N1COah6Lo/qbiZNhCxMnAzdOdqfzfpg179KUr/qcxVdtY+JwaN05GIcDNw7X
ZuJ5PD91MJ5HbjxfyeQFMP7ZYF4A3Lygkvp5MsvPzUzeAckTBvMO4OYdLdQP
Q1h+sGHyGtjD5DWwgOY1yUweBDFMHgTcPEiTyZvAnMmbgJs3baR+S2L5bTyT
f0EVk38BN/96OGEwj4MSJo/DBprHCTB5HwjMG8z7cDvN+1YxeSI0MXkicvNE
/eUbNuT6+cM18z6NZc/cUMo3qXcFJ36YP5iHwnsmD0VuHmqz97C47cwgfMAb
tKhwD4mDnJp9lxO/LWJ4B8i3ZpB3AFzeQf+fvDHp4uG4zCn1yJyIBGhweiUq
QtbbpEPy+qONovG7eOywzZ8TICl39g0eYufiDH3tkSPjcbGzqml6UBSYm+ic
2NbHec//RYB2bxjuMrHokFl0GoZf6ZXk9M85/MJ8b7hqInYlWppOkA2E/oXu
+Xkc/tdY/Tky8Snoqaew6toIV+isG3LdmugPLo/Zc+RNOvonX+7cMNcI+A/s
GWtO/OboJJ24Y04GDpkQUZghchqXKi4Yr0vm/aEaNmapZeIDP4+sPSkeaGc0
b9Il4n9xibOf4vnTUbrnZrHuRh98+fuggQLRU6ohsG5PbjLy6KxOF+z0w3wB
45Wu5He7pgpJX9uTgOMi3AyjJR1x/09eqZNkfutuR9wMqI/GO03P24z1tdDI
SnW3A4fPpdRWHacVg6cuhC7y1j4Op/l3pWqQ59spp3U4i9P69fL55lo7Q3h5
PL9TzCMG6jRMHOU4+UtKc8W9U2fR5ML3e3eDIoBHQyxtAofvQ+eLlzVfqyfe
lB+jF4jLXxWNKj7lDgmytX4cPkgE5bHqsHis6+i8yLDmpWjVHLVnkyLRa3KM
R/zqA6C0dzX/bM7zzfsyV6+JxjEhRUU9IscxT3resGRiZ56BguIzhTA8e/ij
lcFLY9zicqiG870nP+WuqrC4q7PNdpUcPhWIqdcmVRySP4OL1r4JOUHW7dxk
vUx+twCMSl2iY/jUFE22v08I4sRL3yy25SX645nZgT4DtfooNvJPJIeL5NVt
etXgoDcq1c+4WxdpgEtsnjyeQc6TW3ReulnzYrUrvUb7hCu68Yxucjt1CquF
zxlz8mXVcQeNRvb6YY6XlOzTKHPkOTliKOf70643DOe0i3JOl1DOae/ZG3VA
8qxQj1uvN6/WAMj1X32V+NPDOIq/YkMABMw7++BLjD7kyEyXSyN6XlOOrRuL
Y2tn/eUt38YAkldv9mlYawqvs17f4fSZF6H+SWP5p4XyZ0VZ/Nm2u7xWTW/D
QLdBPHqs62lIbN4afI48/0B5owUs3uhtymkdzuK0LnSXzuj9FQ1HykOK9ihv
xdJf4ivPE7+9fcfwRtNZvFFnym/NZPFblSYpHhpaFwaC7dKPj/42Q+NfvJkO
nP+PUz7paKv/8kn1P6RdOXLEDVQfaIwwKfVFzcaaaSYcng7lhGZSTmg75YRy
uaWLWJzQBwfqLu8L1gdhpwVleb+i0OT2dTcO1/KQ/OuDHfe9YK7eiiszvlji
8AZvTQ5P8O7J8w52G0Mg4PPqGxEDhuBTVwS8RP9H6rdSlt/Mt4SWfheMha/2
J6I/ZQaC4povocXkHHChfihn+aGQ8luLWPzWYTpDP/J+iYfx1+YcE7nmDX1q
znLTONzJf/AuCykn9AuLE1q2W/bjOZ84qPqaH/uU1wgPLm+fn05+151yQptY
nNCSzc8f8ThGQnjVw7v+KQEYf1DjezaR96IczD0sDubPuz/L/A6GwvmFeq9/
kLxkSlvyxJfE/mTq/8Us/8+kfExVFh9zu5nBVv7mINgUGC/QcjEBN1kOzX9C
ng/b/u5L6hZvvPHQUl/BMASkLrW/X0X0iGq2dIy1UQe3wHuZIVsi4OuT4mmc
PHcZ9Y8Syz+q07f5puhZgta5x7pGo0Lgq5Fz0XcO14zyN5ey+JtTTFv8M4Yo
wMV5kjvVbthAXktqBOf7uFnLV/Pz5yqWa0ZLJdiW/uVLyrVYnnOrO4GHvrrI
LFxqj+k+fdpZA//mh/JUMpxHHRbnMWesqMg6Q2sc0iwz+9aPENSNqIy/Sexc
TDmPQ1icx2zPkKR7TyRR/Fp00hWBCMxQu+F3mPOeGOUY2rA4hl+2DfoTnjD+
RK4/lzP+x3WM/4Hr/xfM/OIRZn6BO782lCMpyuJIxt+bZfhkXgzGfPqaPWuW
Pyw9OrdEjqyfkXS82qzxKlCe4w4Wz7Fn2Tf7w4lxuMBVvCdTRQNmomtDGnlu
QnmFGSxeYSuUW3WtS0CzjP64XGVPnGuzeo8gsWcb5e4VsLh75/7BMawfI9H1
pikOp+7LXB8kH4BtRpN1Od81c7mBRSxOn5Nc4y27e8H4eZK3ULehMb6+Z2w5
idM/gfr/DMv/wym/T5bF73Njzh8MY84f4J4/x1LGHBq74SSGNub13FKOBLO7
FmdHcfrofnXb6bzIFwNn5Nx4cMQXNud6K3HqA3coPzGUxU90tP5R0dUTivs3
rvndmXsGxsrf8U74/ZdvKMLiFX70+tCddicC399ZcMBn41w8mdnBy+Edp1C+
myGL7zaJcvEcWFy8inNKKyq1w9Gjp9Kzf+NpvKzz4D2n7qFN/VnB8ud8yqeL
ZfHpWuU/fx6t6o+m+1YvHiJlgudyM09XkfE++v/o+uqoqprvb0UFKbEDCxMV
ExTF2gaimCAKYgCiGCgC0ggiJd3d3Z0qIJuwAFEswsYW49qBCu9cztyv65n3
51r8NeuuuXP2zNmz9+UT1K+tkPFrK6W+dQaMb50Vd//iN+7+RcH9+4j6sg1k
fNl+cfc43vPoucdRcI/voL5s5owvmwSNgwMTh6PK11N2DA+CttVjhmgfOgKR
sd4v3cj3vqrdds2s1BsUtRRypJT2g5iS50k5ss551DfNl/FNK6HxN2Hir3Gl
+rTm1EBokDSdNLzCErqjFq8I5eOCaHzOMvHJSM6ekXAvGoTEc2wjQ8zgRa+y
wWkk/ne4+hZGcfUtCOpbGeqbdpPxTdtD/e9KGP870c7h327cjgJ571ApW8uV
mO7/9OcPMv9W6uO2gfFxW7C7jTclLwCcd/YrcR3tgd8O3Yvl61ve5epzeMjV
5yCoz/2pb5oK45t2mPqy/WZ82Xam9dTJ4MTVySiokwV+fArMvgdVc35taoxf
2zquDsePXB2Ogjr8B1fPQwlXz6Ognu83qqcvgFFcXwCCvqCFxlmaifNKru+A
bVzfAYK+4z6Nw10mDq5cXwMfB/b0NSDoa4K5PghauD4IBX3Qfa5vAm+ub0JB
32RB49bFxG0z13/BS67/QkH/NZbr42A618ehoI/7otXT98E3ru9DQd/3mOsT
gfaJKOgTd841OTrtTTDEx8oN5q1MxBLbvC1D+TpyXB8KN7k+FAV96JDHMyYI
7zCA5oTxtkYtRfAmM//Atpc8MOP0k/EBp58MAv3kkbo5ga7V2bj7hXjWpV9F
YHN7mmH/uzyAGx/17PAMbr549dqT9lJ425YyrLKc3PurhTva+pfjsxyZQAnz
dBCvfhRXf4X03Y7Tc1NXFeMdZ+mQmxbuWKag9ebMc5KXZlxWH7SmEi8dVNS2
rLUGl2f+CXsvkXpv49quhmVVOOHJ29G+88PR0swoyZbMf/t+X9Gh26txkFHm
zn7rszCu8um0q+k8+Cm0z2tF/wrkRew55jovH2VW/H68pJIHB14rzb+oV4Lu
+jp618sKcdu0Uxd3NvIgzvnIQXvpHHTfPu/i5KpM9HoktMybxCFUQyQn+k4s
3v1Wd6BcKB4vJ6R8UOHrjfhbfgv47Y8tKyUu3FsbgIa7p1cV8/FOxfNfJw04
jCrjPU8rKO/HrRFxF3kknzi42BwsyrCEby6d+t8fnUTh1HT1ZDIeTX3ffjC+
b6KfIvxWTnTEyg22dzPlYkHn+qix08j5f748ckJ0ZBJeKOxUD7oaBBZTpdos
yHpM6H7dZfbryoyhPNGrBZgnn+rpaWsI2kGbJk56ywNd6u9WRf3d7Km/mzDd
l3q6L+V0X37oOk/ffq0AeSPrF72pC8HDO76KbergweszWtn7C3MxW0tR5J1W
HF6fHNH7yDuSz992xBioJ+LoxqF+nx4Go8rBuZaS5LzdsuZ83HQYH7c36mpq
ScVuaFx1wsTnggv6LbiSJcL/f8SrXouTOo5h9uVjd/t6OCAv/+Irvo766kzJ
US9PmoDtauNz+90tMG6yX5+bZFx3Qs3Hhx9OQ+YWWYPP0gZg8+2eJd/XQInu
yyRmX37N3qPd1BQIz4W/ibmqu4J0n+CN/P+3Kocd/d1LLwCuNHr6bamzgZEt
2a78ey2W+qbtpr5prdQ37arykqMPfJwxZFLzwehNDug0s2MaX7d/+YykR7Lb
PHGdW3zwAAkDXF4qe3EDGU/4h+9e52Jfuy3bD4DhJ4npcQOc4cp6+cP8/ws/
pPE5wsTnM/Wz82T87E79sKq6Nywe8q+3X7Fy9ge/5greU5Int1H/sk+Mf9kf
6vv2g/F9Gxb9rXrZuAKoUJ2wlXQtYOl5Z/0Tcn48qX/ZEupfto36l+2lfnCK
jB+c2saBdt5PCyE3xWVjWqIfzNh3IC//FVk/9TubyfidaflIissmZoLk2jc3
62qdcbeK47vTfJ9K6js2jPEd+0p9x54zvmM+12xO3FIPha17n4fLfAvBrpvX
N8qRcz7KTMat72ZTqJufvW/Cz9Pw59QGTf7/L64qHZmtpR8O8fg7qaw5FJ4p
RDomkfm1ady+MXHDDQdJk5gH/qfkCp7/zoaClS/WP3zyNw5zmTgYUj84WcYP
TvdcWUXy3FIwWR4u/mRrIZh0Be4ecvXf/lnTqO+YLOM7Nt928bUdIsWgt6jP
gvX7U+BL3PaXpSSfhFPfsdeM71jV5Il37m3IgureouptHu7odynzQg2JmzL1
1VrB+Gp12i29MHW/HzxZNX/K9SXFmLg5V+EQyQ9faPx/MfF/QP22zBi/rV4T
pbfvu+SEXm6tqw5HnsMk0YbS4GYexGc7Vxr1joQiu8ZnSVOzQU79gMq3DzxQ
fb4s4vrSfFhxV1Eh+2EJGLpqD3S4QfIzjc9IJj67uhy7r7QVwNABm/x8ggrh
sROuP0zmD6R+Xl8YP68xml81n8yLgb2jo97KvY0A01uxMuLkfTlV/fvHgPDT
FVtzQ6On5zr+rz/tnvWuTWV3PKYEGl/eox6OSgN3ajiS8w80bkuYuM2nvlHR
jG+U0Of0598GF+B1HSu/YeuLUfGV7Nn3t8j9SH2jYhnfqGWfzI2jZHOwWDtC
/HfnGfyU0fIt/hqp26kvki7jixTJxROzuHiiIJ4TufiDHxd/EMT/Pbe/eJvb
XxDs7xbqSzWJ8aVKOTd+78PubPwmITxS8rEHLHlytGbep7/PG8Y87yPqDyXa
y6XHH+om9YeSOLFWPU+4BMemm2qNmZ+Jert/3vFuI+/jP/yPDoStmCJ7qBQv
6o+SvKlQhL5KX6P21/318VlOfXzSqI/Pv3yR+ledHVrvV4CjNbXbr3Rm4pRx
twZuaOeBIvX9iWN8f570EY+TNotFYdV7r/MiIzDx/fSUpp//8+nDPUz8Y6kf
0D7GD+gml3+wkss/KMg/Q22P9N+xIgQTfTtfyb0KgvSVh97mkXxVcmjb7Eib
XBTqlXYlZ9Fx8Ft0U8iAxP8k9WPqc+a/fkwaSWPFhxoUYf1A+9mTDnrgiK87
f98k41X/8D+6plXcPG9/Hobm/HbbfzgQTVUSvqzi66BSvxg/xi/mwT98i4Z+
9U3ZpxaJ8f7idma/gnClf1R3Ocmf8jSesUw8j1G/mwmM383MbSPSdPeawOZB
x1+cd9fHVPO2+3w9+ZXU/yWV8X95RH1wLjM+ODrc/QuTTvfcvyC4f+2oz8tK
xuelkbvHwYa7x0Fwjz/h/F5xx4//+rw00zg8YOIwETpC5nzxQ2Hz6Wr6ttaY
WdWmfI/UCVrjH+hu/eKBlVLZj37NsUSxgMqmRWSecurDIpnN+bDIUB+WHTT+
Wkz89UovF4k0mELjy65Nx6fYg6Pa8HF8/xpdGp96Jj6Gp55ZxUinAmxWLTZJ
ioKWPV1CenzfUq6+hbNcfQuC+nYp9WHRY3xY5lA/nQrqp/OH+ulY+885Ov54
ARxZMelFmWY49D07ujGR3C+jqS+MHuMLcwo71moZ5kPd50HWyt5mWLdu7hwJ
3v/qc3Dh6nMQ1Of+1IelhPFhcaU+L3WMzwuPq5OhnquTUVAn29B9V2X8ieKp
/8tWxv9lHVeHw22uDkdBHR7H1fM4z7WnngdBPb+Y6wvgBtcXgKAv2EnjXMHE
OYLrO8Ce6ztA0HcY0ji4MnHo4voaeMv1NSDoa+5wfRD04/ogEPRBLlzfBFJc
3wSCvkkQt2Ymbm1c/wU3uf4LBf2XJNfHwXuuj0NBHzeP6/tgA9f3oaDv68P1
iaDJ9Yko6BPPmw/23/YpCM75aMsPH1CAT9L6Sy4n5yGY60PxDteHoqAPHbal
baK/yxHc+qdqytiPhXD2db6vA8nnBzm9RzzD6T2CQO9xUs726e8vOeLVW2Nz
efal8EXp6TWhxyR/ek98knEwGA3P/Wxcd6cEbqhtneVKxg2LpDavN4jBl/oL
v98ZmwJ157aHppL3Iq7EM9tKNxHlbETv7/vsjDZNreXbST3geS9nTev0JJz6
dOpO3ZiD6P5nWRPfb0iu8VSSv0QiVqXqmnW9D8ApA0RyU8m9ECFxT17lfTw2
2Dt3pJnH4/UnRyVVSV2tovGt2/1IJD4NuDlhct9ofPqk1Hs+mWf4ki+6Qp2B
OPrELRWjcWH4fu++hY7kvLnefjRcWT4QZ43V6dYfHIR+16XEVcm5GhKjYXPc
MADrNc50uEv44pkTa56+J+N71H+VHC8LwR19Jsjq7PJHr6JIhTFk/JLvAmUt
sUgccGW90L78AMyG+bUyZP49b2ryp6jG4fzhIpaXajwxe0Vnqw153+Opj8wf
6iPzgPrISC6xbRWvtYLRY8tFvpsUw82h/fYWkzrBuI9dk7aUC2aqHtm7XKoA
1u1o8TR49+/9Mpn7bvrRlbF4deex6nkDgsD91btRvcn3WlG/mL7UL+Yc9YuJ
ofsygdmXeRnRz967ROGry3kjDrxxw1Gv2i1OkOdqf7tx/Pb1gegx3n/g0yde
uLd03G9+fNqEzgQM/OyAzknT5MbMPY2rB44at6bH9+r/9oW507Vcbo67PsSk
HLhYancKq8aK5pSSz7c9eXIh79g+eKcvdsq0txeeaWyv5eNaw02qqgds3w8Z
wxbUdNUEotAKBacIvr7c7YLC6TNIPnEx+BkTFYyJ80wiJPn4Crovo5h98Vh4
4fmz5T7Q5CLcIGoeio//GL7g/248U3/xQOUcQ+iULtUd8S4e5yrEhdj++uvD
0kF9WMyoD8uI9K3L/d9FwrNap6KTUgkgYTemLobkn/LvCuOGTFmC9yZIrpKL
jCJ1revVfny9XOqzk8347DQkqly8JmaNsXD4qmGLL+zK3z/gPd83nMYniomP
JfXHCWb8cQqL79vZbTCBZTceXNn50R3crfLua3T/9XNh/VCCqI9MH+//+sjY
SS62TU0LhoroTxtbAwJgXR8dH5k//HqV80M5wvihRFF/mXrGX+b+L73J/l0J
MMtGpio+7xToVHdWZ3b+9XNxYvxTRnksXxNYEA4f3QfGSo9LQtRYtOYlea+/
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
coWaN2aXRpPn7aZ8ohSGTyTb88OJ89KYVg/yZ/C/30/0Kd9qIMO3Gtmcf352
tz8MH5+4qHV8ODQO6fwQTtaze92vuUfPpcDt/e2LJ671Adc5Jj0+L/WLC/FZ
ZCwM8vC9P6ooFvrZhPZLJ/vbSXlYlxke1g6bYXjbKgWsDe3HnA/3hBjDlZnS
5PN7/C7NGmKWCLUpZwzLjjrAhWjdVSYkniayde1JC2NgV/eRlmpVLbikc04y
nczzk/K5Whk+F8/xiEFEZBRcfyFn1ewWBXoV9z2kyLjWi1XL1yTGwpT0/Ku3
F4XDfZ+tm8X4Om+U/3WL4X9drBs6yKV/IrxN0tsBUkkA99o0lpLzv8X0bK2P
UhREjir/9UvKCWyszwyrI+u5UOxl1j/NBYZk1RUYrfDDzu0LZyaQ+E/j4okj
uHiiIJ4XNlR3HQ+Lh6KA+J9WU6NARjn8fROJw1HKLzvA8MtuTB6ze/w3d/Bp
t9n4cIozzgu28+1P9qtWSyU7BjZin+1dsi6bIvGc9Qtlfp5X2yjp+KLwKPr3
3dH6LiwCRSGtm+/350x5bUcYXpvPyTGlmyc5Q1NU/uu1H06B6hPpot1k/v33
rh9/VRSGZ0mHtbPbE39Hlt4ewcc5Uz6XOcPnWrG553tBhfteEHzvv3hwXxvb
hF3M3HFrrx9R54KdMWVubCYfX9cuxPHd0hm+WwYXZwzI7IkzCOLsnNv/yYwO
a7C7vDRlioUV5vomXufju7Kvc/y4qww/bjnlx1kz/LgbkdeqB8dF47PUQVor
58ZgPye/2dYk/jJ+KWVGveIxTDuiPvqLHo7w9RH7Rd7H1L6HVskOswfT8tDR
sl4h4Grb/KmTPO+SX5VNM90ssfP3jia39hC86//OpDdZZ7dJlvxGg3icZ3lK
t8EgCSNnCg/k19t7bk/Ti/sejd9DfH9Fi8bhs+GX67+QePr14fh6eQxfL5fy
0UYa/ZePlqzgc1NthxtuXOIadV7EGIZr3i3i62HOfrB/bIiwJ2rPu1tdWR+O
IWddH/P4OpOU97eV4f0toPy4PQw/zrd1fv14q1TMCKq3nDk8EAvcOhtuk7ru
2mW/+AV6Sbgu0C1ou2kA7nxavY6PbyynPLhuhgenQXlwzQwP7msuxysMZHiF
0rtazlbU+mCkuLz6nnQn/KwXZ9XQ9W++oUnYqSsKO9PRv+zmo9bMGIzIVZmp
St5rpRLJhsqAeAw5N+4G3gpAuUFxXlYkDzRSHuJMhoe4eZ13sEVsIjre1fow
9HsE+g6wm/CJ5L20YTnnw4UycMOBB1P2zIzH65csM2RInXlr+8dfO32TMPnY
tnm9FEIx1H+RxUjyvDzKZwxg+IwDKW9RkeEt6l40HVhLzkGOw8IcLVVXLB69
YmgDGX9ZOHnTeuVkVBuYrm2zOBIt7pZce0ri/yjirmuIfTL2VirMOhwQgtod
cmtiyTpHZ6uPEXWIxYe3VewPHI3AUyXjRVvIebbxTG5alBWJRq31qskZAdi1
6pJPL7KeCMqXdGL4kv+vrvOO5/L7/39LQ0lLe4iiqaWi0lNGi6SyskISSVbZ
W2bZe++RLVvpKSRRSCINlRIqs9D2O1evy/dz67r93rebv87tup3rvM451znP
53Ee98fcC8Hpjly+2G+e0zs9cSPeqB0W+U363ydvvqvh90TcdHhAUXmRJ84v
s9lD+WU0NjjfqCpMROvZaZf2dfuixR62z5tI+YRdSouNOuJQOiJO+vIjd+Sp
XCelQ/o/2eTbNq0VXji/9h7fETlz7GlV4qDWgUT2A5ISdwzxrLP+Vva9bvC4
t1ieipe88v/GUZDPiqNgPI7KZMXVUMeKq0GPjqtlaV0nMHSdZv7Tvzybbglv
PsUf/TNyBTgzH2SUUr4tO3sMB2WS4MfPhX2e7f5w8HNHvBPFBRppixjamQgz
dcKap73yh4qMhfLC5HclCK2+a3PbE+Fh3nfxNxF4S19rggR57wNaHyrL0Ie+
XcOTEn4uEJUEbwp2sBvi0c1Rr2Sp+UzrQFUYOlDr5qMj/Mkkjg9839vzJxi3
VCYGepN6NKwvc5qpRuOluSlqF5f7YmvlhGPU+Y8wrRvlZ+hG9WndaLDFv7rR
JSvdv0/7tgSHKqOf68R4gkSkXq0MKU/jPHyjQ9YGvm9c/HHUygTTl8d4FpNy
iUvDM/aSdT+7Xmow4Uwghu8rSRCjdM20/tSeoT9NvTLkOLrIAtsXJufJTPVC
+/6yxTNIPREW80bvFDvinc/zbbw6bEBcoEmeWse+66/yGxi+CpyNx3GaTTjw
V2YFNJN6Yll5EDiw8iAYz4M8aX3rR+1/9a0cSWFlp8Vc0KBOzNb/kDnJk7J4
DCg9FK17bWToXrV+nP86ujkQ+u8u63y/6Apkhwf3UedLjq3z31QdvwgSZ/Ly
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
6WDTRdrvSPMq9Ri8ylCaD2nH4ENesXn+ZWRnOHxTOWhun+AKV04cL6B4Jgdp
nmc0g+f5mV+yUf+XMUzN1j/2x14ZTG9VzaD2NTOOPVbJKYFQEDkk/czPDw5P
VvfiJuOoSPM/pRj8T7fY5RrHfgbDwtb0s5ucXUD5ZsAsG/J81PNLWjusyHfX
X9X0PdMOipa+KjYk/RZaLKTtJhsHVSfX52oGhkB814RFa8g8f/ZTY43vnzjg
seQuj812APW7P+6mUf4FNF/0CoMvGtc37ViDeQa8bij7ImGdBAFs0w8vJf1T
OW/mueMaBpBewv7h7Hwf+H5Qcv5E8rvu0jxSVwaP9KtGldqDp4EwYmCrtnHf
NVg7E9UDqXn7vOlIwWAAQFJr4+EbHvj1jKsbpduSYS9pef8zDCzOnU4ZOu2F
ebZvJVx+/Y9reoHBNV3qsV/SPzcU+t3nRC9dmYB4Skiyi7qvS3M7NzG4nWyW
LsLecSlg+eHkqqBLSfBii9NkLpLXrOxV2/xkTxHIuY8occ6+CTY/9WWLSdye
ajf2o9OkCMQcM7q/haRBsvR6vitNJM4pFkrWSPaEe0uvyOZPSMHDWu+yppP3
7qZ5qpYMnuolmi+6k8EX5aR5qj4MnurrSrc7bUUuaP82wGjG41BQ/Sy8iIf0
j4enf2rQjWJoW3r68ka9eGjEab3+zf2gMhQcWpYaB5P2d5l9Ec+HUskDv3RI
/P+D5qyaMDirZby/Vao35gK8KTyQ6xMDhYoCIcmkf/Y1vZuyJq0EJF8lzqwu
TwDrpHjdsEYSV1+Vvt5bnw3Lgz04PUy8cPY9hbpTZL+Lo3mthxi81hy9xybK
95JBzN82u2tTKXQvPnX7I4krdKY+OXxhXjJ0w+qRPS9zISj4V/D59//ju+5i
8F2tj1XzWzTlgKSsl/z3VeWgrz3k+i6D7MsiMpE8LdFQ/aBdP/ZrPNo6TbRP
I/uOppuhVbqCG0yzmJM/eV0Bmidpphq/64dZVX/7E3xY/Ynj/VklWb+AfUsm
bHva1qA4Pw/k2wbr28n+20zzYycz+LHsmTZX2peagVj+7uQD+wrQ4M7R1iRS
/6vJIusmTzqOf04oruhdUIKb2F0OB5F1o3FP5k4vF2tYw11b4a1WiGymk0tt
SX5qZbllX0JeCswqUxFtmRMALbvnPqgj8Rg3zbN1ZfBsOc3WlOiUucHdTFNh
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
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
       0.09259458092137765, 0.7486122776543305}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
     0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
     0.25, {3, 3, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
    1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$5912, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
    1.4}}, $CellContext`moSel$$ = 2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10, 15, 20}, "numberOfMasses" -> 3, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
      0.8200836820083681, 0.1673640167364017}, {0.6778242677824267, 
      0.6485355648535565}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, 
     "pointsDataTable" -> CompressedData["
1:eJw9kkFKA0EQRXsSo1EkeAWvYLKvOoNHEIzuvIpLM2ThNVzVbIPRjausFARh
IKBiCEokmun/fwqaT3d113/V3cdnV6fn7ZRSM3qb0dqMQb+JryhHTXSqYY43
u8i6jodpEzuO/GdIkV9yXhvqvMYIdfwm68T+crzHbZ7fsd7c5APd9ZTj2+6R
jz64DOsf1ORY33Odg18dSG85WffAwbUiZ1GV5BI/eJKLH/mfeCQH1p9M/PAr
XPzkDvQ7s5IqfuxrufiH9EV+xfMvJn6st138GWO6YH9dcbJuj/3WUWBDpf71
rjo3BleQOy6p4rxGfwa/Ln3ndsJ7oRrua0H/JfvdJ0fhv/m9n+mz1j1zX2fb
F7gO+U9moTr6B9Aj/westChU
      "], "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {10, 15, 
    20}, $CellContext`rawNumberOfMasses$$ = 3, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Function[$CellContext`k5manip$, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
               Row[{
                 OverVector["q"], " = ", 
                 
                 Module[{$CellContext`qm$}, $CellContext`qm$ = 
                   ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                  Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                 Dynamic[
                  NumberForm[
                   MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
               Row[{
                 Text["time, normalized to one period, t/T = "], 
                 Dynamic[
                  
                  N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
               Row[{
                 Manipulator[
                  
                  Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                  1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                  ContinuousAction -> True, Appearance -> "Open", 
                  AppearanceElements -> {
                   "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
               Row[{
                 Text["oscillation scale factor:"]}], 
               Row[{Manipulator[
                   
                   Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}] " ", 
                 Dynamic[
                  NumberForm[$CellContext`scale$$, {3, 2}]]}], 
               Row[{
                 Text["Angular frequency \[Omega](q), selection:"], 
                 Dynamic[
                  SetterBar[
                   
                   Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
               Row[{
                 Text["number of mesh intervals "], 
                 Manipulator[
                  
                  Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                  Tiny, ContinuousAction -> False, 
                  AppearanceElements -> {"InputField"}], " ", 
                 Dynamic[$CellContext`freqMeshSize$$]}], 
               LocatorPane[
                Dynamic[$CellContext`qPlaneLoc$$], 
                Dynamic[
                 (Graphics[{
                   Lighter[Gray], 
                   Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                   Line[$CellContext`qPlaneLoc$$]}, 
                  PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                  ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                ContinuousAction -> False]}], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                Row[{
                  Text["mass: "], 
                  Dynamic[
                   If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                Text["coupling to neighbouring: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}, {
                Row[{
                  Text["horizontal: "], 
                  $CellContext`kLable[1], " || ", 
                  OverVector["a"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                Row[{
                  Text["vertical: "], 
                  $CellContext`kLable[2], " || ", 
                  OverVector["b"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[3], " || (", 
                  OverVector["b"], " + ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[4], " || (", 
                  OverVector["b"], " - ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
               Part[$CellContext`k5manip$, 1], 
               Part[$CellContext`k5manip$, 2]}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
         If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
            Row[{
              Text["coupling from "], 
              Dynamic[
               $CellContext`massLabel[$CellContext`m1Sel$$]], 
              Text[" to: "]}], 
            Dynamic[
             If[$CellContext`rawNumberOfMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 
                 Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]]}, {
            Row[{
              $CellContext`kLable[5], ": "}], 
            Row[{
              Manipulator[
               
               Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                Dynamic[$CellContext`glConstKMin], 
                Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
               ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[
               NumberForm[$CellContext`k5$$, {3, 2}]]}]}}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 8}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$5912, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.6790602328891914, 9.230900003615161*^-19], {
          Complex[0.7248589832535917, 0.], 
          Complex[0.650064949116095, -0.020858686170711016`], 
          Complex[0.11988513411713456`, -0.0981715969681187], 
          Complex[0.15160623794564831`, -0.028647866526790612`], 
          Complex[-0.002472802788942547, -0.01713913715451654], 
          Complex[0.05556524411678816, 0.01890267003822048]}}, {
         Complex[0.5524636587025472, -7.594543271602355*^-18], {
          Complex[-0.38354558530686395`, 0.09744499810272776], 
          Complex[0.1619813466218059, -0.23832737428749207`], 
          Complex[0.6766558452199941, 0.], 
          Complex[0.5279467930943094, 0.011722985858567875`], 
          Complex[-0.0019794387381373065`, 0.0612963317654061], 
          Complex[0.14074635807044672`, 0.0077645969691057665`]}}, {
         Complex[0.5222542056555272, 7.39373223091693*^-18], {
          Complex[-0.5047764091042254, 0.08027140607893792], 
          Complex[0.6076266586520926, 0.], 
          Complex[-0.41722429897453955`, -0.26584428115246467`], 
          Complex[-0.11870218623554862`, 0.011771602360776734`], 
          Complex[0.10106066627579662`, 0.15510216234064736`], 
          Complex[0.24672133224192438`, 0.12420825231706026`]}}, {
         Complex[0.47798270089481093`, 1.705186367657685*^-17], {
          Complex[0.11776747404882068`, -0.17021352942962187`], 
          Complex[-0.19349636076477256`, 0.18545691772731276`], 
          Complex[-0.005098087736675982, 0.0481703582836023], 
          Complex[0.12443545522518613`, -0.04846883240430583], 
          Complex[0.7520021001235273, 0.], 
          Complex[0.5450959458974042, 0.050065292585647264`]}}, {
         Complex[0.4208599945029234, 1.7181192359807767`*^-17], {
          Complex[0.046412084869462106`, -0.0633132278362492], 
          Complex[-0.15001494768060744`, 0.1368626263531111], 
          Complex[-0.49457449633790096`, -0.020339968952328036`], 
          Complex[0.7465187765334863, 0.], 
          Complex[-0.3425167147633056, -0.05320301419822421], 
          Complex[0.17190685158210708`, -0.02435844462026826]}}, {
         Complex[0.3371723422003491, 1.2680207595331082`*^-17], {
          Complex[0.08250671501222374, 0.03036710231625256], 
          Complex[-0.10759757386702096`, -0.00917692568070801], 
          Complex[0.15992951319705684`, 0.020880420200147097`], 
          Complex[-0.32856173648033754`, 0.004931060374980048], 
          Complex[-0.5245849484304596, 0.028709761501831688`], 
          Complex[0.7553839007471159, 0.]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
        "], {10, 15, 20}, 3, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyEvXd01MX7/h1QkBKk9yJdqdIhENjQQpVOqEqo0hNakCZFBKkB6VU6SJMq
iIEldAk1nZDN7oYkSO8lJODj8+G+Ztnr/np++Ydz5syZnX7N9eI9c5fqF9Bp
YEYPDw/P3B4eH/37b6fiG3//a0+mk+1W3nydPizN6nXip1nxx5ItSK9/YMux
t4ueW6OzNghquiLJ4p7/nvUrr7E7dj24ZdI7/C/9pvXO+klPy59zpXvI36Ij
iQc3P1X5LYM3rK48cY6r/Lbvy7fU8m/48uQeVR9L9wv5h1uGp1B90iwXW4eV
3ZQ7xfIu6nXLbk08TLuKTvhkzrunSSYd7UoLqlJ7+KIkyn/PeueddcqkcFc6
2hX2POfyBqHJJh3tCj/VaszwMrc5v+VN4YYhG5+70tGu+U831mn7w22uj2WZ
X+96g+qq+ltKfOwYWfQL9MMLK9p1zpr/5d93kkw62nVlUt/T9X7i/Pescw92
7vvVlRSTjnY9GO1fZuvV2yYd7fJt+Hr41i23Ob+lzy8ta1Qd7ioH7aq/PuHA
5CrJXB/LqF3VrvRbnsT1t+R7fWB9u1+SLB3+l55s2nXw+5iwpr8km3S0a3Ol
jMPutU+h/Pes9mEe1U9VcKWjXVd6D/QamctVDtrV8NTugTUqJnF+y5Kx61f8
duWWSUe7fp4z/vX487e4Ppb0XXe9TpRQ9bf41ew2ZV2eZAt+D+0689upCWGf
pJh0tGvj8lc199Xg/Pesi1uPP5+pfJJJR7vmZ2/fsfSBWyYdf4+qrHiZa+kt
zm/h/GhXMJWPdv3f9UmzoP7SXgvahfYiHe2i/rGYdrn3pwXtov43v0/jhfwW
Gl8L2mVznw+oj4XmD+pvwXzr8n5+mnbllfmJdLRrtMxn9/z3rJj/SEe7/GW9
IB3t+krWF+W3PJL1iHS0a6GsX6qPJUzWO9Xfclb2B9lPfNAu7CdIR7to//FB
u4Ld9ysftIv2N5//2A+R30L7pw/a9bf7fov6WGh/Rv0t2M9l/zftwv6PdLSL
9MK0q667vph2kR6ZdpF+mXaR3pl2dXTXR9Mu0lPTLtZftOtO/zbNLuxxKl1u
8Lzk5A55nUqXO5XY8v2XxxxKlwO+LVY+eJ9D6XL273zPZAxX+S1Ncm4/693I
qXR5VrMF3xy7pepjyVOz8N0fSiQqXX5kb7R55zOn0mWfCjMD9n/rVLpcfM7S
avMncP571vN1ju//fZ9T6fI8/zd9h+dOVLq84kDWlj/0T1S6fOHql0O8pyQq
Xe5RfcfTb/olKl2uP3nID4eyJypdrnxjUNcxc51Kl6OfeqZe7eZUupyzx6Iz
3ayc/541JMfZHTXqJipdfvyy8/XsoxOVLnsdTdyUf5zKb4lpPOj+8UaJSpcP
vkyMWBin6mOZWanWtD91/S2dR+Vvnn+YU+ly7qgpa2NOOJUup+3YXn7dp4lK
l2tnu7pg8gfpaFeFtC3PHUudSpfHhOadUvuVQ+nyuPbBXeb87lC6XKLb37uH
7XQoXc5XpH3ewlcdSpcfxnRMi/7GqXS5XKfOaQ/vOJUuJ79YE9VhKee/Z/1x
UqUS5+MdSpd71m/XJXWOQ+nysVcjTtYer/JbOD/axeWjXf93fdIsqD/rMtrL
ukz9Y/SrlHt/Gv2i/je/T+Nl9IvG1+iXl/t8MPpF88foF+Yb63J7mZ+syz/I
fGZdPiTzn3U5VtYL67K3rC/WZaxH1mWrrF/W5Vyy3lmXsT+wLmM/YV2m/cfo
V1f3/croF+1vRr9oPzT6Rfun0a9z7vut0S/an41+YT9nXcb+z7pMemHaNdVd
X0y7SI9Mu0i/TLtI70y7Orvro2kX6alpF+sv2jVu629j2v3uULp8c2qZKjPr
OZQu55ywI329j13pctjsngVTBicoXd4wedpV+3Ob0uVJOXte/ypTgtLlAdl/
ST56L0Hp8vz2/vdX9LQrXa4UFDh6QQW70uV+JXcGFP5M6/KpoJIRDVY4lC5X
yVLkQrrFoXQ5cMzd73/+zKF0+VL5VSVXV1T5LY3rx7waV8+hdDn2lxzVP/J2
KF2OcmSePM6L65NmKV7yYNt93g6ly87snkfmVnIoXe6/bPj0wOqc/561Y8US
pybXdihdrtKnR5NDdR1Kl3s1mFshqarKb/EalGNlSjGH0uVfFiTWTy6h6mPZ
2dYeFthT1d9ysJDnwy/+UrpmLeYd9vmBsASly7su5Hyd3tqudLnUxbVpq2rZ
lS6PHNd292z/BKXLW3ds8qgaYVO67P+23sx6nyQoXc6SHDT1+kZVH8vPnrUb
D1/H9UmzJP50vGBMX4fS5cRPv51Qa7ld6XLnDZPXB2S0K12um3fXoi+f2ZQu
H6nn531gvE3p8s47GfK/6aLyWzg/2lWTyke7/u/6/NsuqT/rMtrLukz9Y/TL
070/Xb7Svf/N79N4Gf2i8TX6VdZ9Phj9ovlj9AvzjXX5kMxP1uUdMp9ZlzH/
WZcbyHphXe4t64t1ubKsR9blzrJ+WZcHyHpnXU6U/YF1GfsJ6zLtP0a/brjv
V0a/aH8z+kX7odEv2j+NflV232+NftH+bPQL+znrMvZ/1mXSC9Ouge76YtpF
emTaRfrl4gDuemfalctdH027SE9Nu1h/0a6YbwuHNluhdNDa/OsBp777Il7p
crOILYMr94hVurwy8P7QrLVilC7f779pQY+uMUqXVyUUK/B9rZtKl6dVXRBU
t5RN6XL38tOnBK6wKV3OMmXI3TuPbEqXX3008nLemTaly1WC8u664x+vdLlZ
sz+uTPo2Xuny7WI7h766F690udeVuiG+/jaly/6D8lzOusumdPntX2uKd45X
9bHMLnt0TPVLqv6WEpfLdC/e2aZ0uckdS7235WxKl/9ZPzCX5xrO/+95I+O4
b1sn25Quh1qnvxwQZlO6fKv7xfCbs1V+i8dvO4tc+cKmdNmzWe7hH62IV7rc
vXRY6tMG8UqXk9/l9m+/Ml7p8u9tEgPX59e6nFjc81CDczaly6O2nbANGah0
1tqp7atLvmvjlS6neDW60+N6rNLl4xvrjt3yOFrp8vcTh6Rk6xCjdLlGVOuy
pbvcULq87ceIVi9m25QuD3pccPeda0oHrf1LPz33Nile6XITa7/JK8NjlS6/
SFkyr681WulypyYLLWMPRStd5vxoF5ePdv3f9UmzoP6sy2gv6zL1j9Gvae79
afSL+t/8Po2X0S8aX6Nfo93ng9Evmj9GvzDfWJf/lvnJuuwn85l1OYfMf9bl
j2W9sC5jfbEuW2U9si7XlPXLuvzRL+/XO+tyC9kfFMeW/YR1mfYfo1+v3fcr
o1+0vxn9ov3Q6Bftn0a/mrjvt0a/aH82+oX9nHUZ+7/i2O56Ydo13V1fTLtI
j0y7SL9Mu0jvTLtIH027SE9Nu1h/0a42I8qd+uZRnNLlnOPL1Q7teUPpcq5x
D2fkOxqldHlOnotxxbdFKl3O8+1nnjOTVH6L37N89pq3o5UuW8ZveunTNEbp
8pzo3MsTlscoXb6w7mTPwlExSpd7d3gSs8rvptLl1S2z7Og2NVbp8usW348v
tjxa6fLv284PP70tWulytZobFwdkj1G63OZVv5xjf4pRurwsNP+nCTlilS5f
yfjNliYbuD5plm+79XvQue8Npcsbxi4OiLp5Q+lygWwJS+Zk4/z3rL1vXvmi
zMBYpcshHTd3+DgmRuly0XHb555sF6N0eeaiAsVGhkcrXe63+N3eKROilS5v
PuxzeEJktNLleTVOVTj5WOmatfixjamlY5UOWms+bvXsxW8xSpcDotpWvTks
Runy5dCm/dcUilG63C/4p1fT90crXbZGX8taY0Ck0uW+/WvPXBUcqXR5kb9v
7oIzuT5plk0LM8968uKG0uX1w4r/vKB3jNLloz9cXLv8TrTS5Z6VrVHFTiid
tY7b/rxueolLSn853fy/CZWD+v/fv5tmQT1Zf9Eu1l/qB6NT1G9Gp6ifze/T
uBidonE0OjXSfdyNTtE8MTqFecX6O1fmIevvJpm3rL/9ZZ6z/k6XdcH6W0TW
Eevvn7LuWH+xTll/C8m6Zv3dKPsA6y/2DdZf2meMTtG+ZHSK9jGjU7TvGZ2i
fdLo1Cv3fdXoFO3DRqewb7P+Yp9n/SVdMO1q7K4jpl2kO6ZdpFOmXaRrpl25
3XXQtIt007SLdRbtKh945KsGS6OU/mYodfTPYYOilP4e6Vl1V4o1Qumvn6Pm
wu1xfyn9XXiq1p4abS8o/c10NueNJpcuKv0dn5rpp2vRl5X+7gm8VWpQ0jWl
v+XqPL847ni40t+AO4HefuOilP6W6N4qtV3dKKW/p7KUOLq3WqTS39EHik8+
vzdC6e/5WtvG9f8tQulvmEdcgV4hEUp/E17Wz3I5OULp7+wVl9u0qBOp9LfZ
1+8qVdkRqfT3n/HVe/1+O1Lp74JFlzt2Gc7571kTrvWe4PVPhNLfgccG5F3w
e4TS36e+zXN+skTlt/i0Hn7W54cIpb/f7xy+qfayCKW/3f5ISNiq62/J/vHP
Q/f0iVL6G9qv8qKFiyOU/vodrVX2Scp1pb9LEhbtqLThqtLfI68Wl9q8K0zp
79MFw2o1fHZB6W+GHW22ll1wTulvu/JTa+37+YrS37wR13vcfhSp9DdzLo8z
vt9HKf0tsn1W/7BskUp/T/zp+yzk52tKf4My/9Ure93zSn+PFY5t2eLQEaW/
nI76B1I5qP///btpFtST9RftYv2lfjA61dW934xOUT+b36dxMTpF42h0Kth9
3I1O0TwxOoV5xfqbWeYh628Xmbesv9NlnrP+NpF1wfqLdcT621vWHeuvXdYp
6+9iWdesvxm+e78PsP5i31D+132fMTqV6L4vGZ2ifczoFO17RqdonzQ6ddx9
XzU6Rfuw0Sns26y/2OdZf0kXTLuC3HXEtIt0x7SLdMq0i3TNtCvEXQdNu0g3
TbugsztSL03N9TrjyWblTvaY8u6V9bvGG/8peTbJpFezzCn6fZknVv+ZbyfY
D7nS0d7BPoeiYpYkWdL+12+PzXzw/uWl//Jm+O5Rf++HctA/RYsVWZLX35Xe
4H/lJ1nvXCler2NbVzr6Le6v5s32n+b0MGtVv9Qtj2640tGf1Rsuz5tlXrKl
5f/qE+WqZ8HLm2ZHJFu+onWK7y13DGhV1rtwmrW59M/YibW2rWlovmO0NqDv
md3blWbdWfTC7Ad+rnLQbwMmtJjcydNVDn8XTe2yrKv+tP2YaE6/aaluG/Y8
hyXFlI/x6nV8Ucmeru88rV5cvuRH/3vdmBMw4JorP9LxPbb7uCdZCjZs2KP6
dVc65qH/rwHLZ61MofYmWStG7p90poX5LhS65ipf8mN842se7R14wZWfvwOn
+WkZbet1/ewrrudzS1BOr/Dwjq7y28g8sRfpGvbTBPP9qqR/UL7kx/zx9Cj1
OMsAV36k4/tzWkeWBikTR1S5qOaDZez2qL8S1v6rN9H/Wy/WJjKvfKasbXFi
SbKlm5vuu74zdx+vNOuotQutYx4m0Xi5vrdH+cZfR1QvmOe+q3z+Xh3ld5X5
tmHX6qWbL3F7D3mb9rqPl2VPfJNX31a7zeNlvsNHfWrI/Ix+Vm3i21hXfTrJ
fMB38siPeXg4Z8W/PpmcYvK3o/yoj5fMzyLxC+rmXOyaP61lfuL7Z+THvO3f
8uTYAd3V/DT5UZ+6Mp8HBVTbeTDdVR8p3+qg+mPeJtzutzdroCs/0q/K9+Go
T3WZz4Mnrhs36oBaj6r+hktP9/0haZDaT8y9BtSnj8z/5atnnbmX7ur/9+N7
KqSRfMeO/Jjnp6Z2ujPsNuf38EB+2ictF7r9VMJiT+J90tSH5rOl8Pd/ZT58
S81nc/+i9/t92+or62Xn3Nv/pA7Gue1MiDffU3CbP2lW6JH7/HGtL5SPdVHa
OfnqV6Gu8tU9CPf+tFzd96ZNtTaqP725P829mznPkkYWT+b5YFkq9wtQny9l
vfhkmFzDa6+rPvWoPshv9vObDdJvfe7Kj/SfcZ9C6lNH1suEfP75Iwq76tNS
5tsSuQeB/FgXKXl3dZ04MYn2K9c9FNQH62Vf55Ee9dckmfq0kfrg/gjym++X
avVs3rKvK7+6V+K+n1hmFOnS/0HVJOpPV31oP7Qc2ZVj5qKeSbwfmvsyqE9j
WS/JKVN6VXx4y9SnNdUH+bEuCrwutbeU3ZUf6eb+i/v+b+n/6HS5aZHcnx/c
03Gfz5bD+TN9+jI2ieezyY9zTlNZL+kDtsduK+0653wl8x/53edPmrWBnIvc
54/rfhDKx7poX+pJnSM7kkz5fL8G5WO9NL5epIX/fu6fY97oH5oPllwng54P
PnmL54O5N4T6QF8KL6pbIN8UV306YL7JfHA/B96z5h76yn7i5S06B7ryoz6N
ZL0Et75V9nKIqz5+VB/kN9+NSPnIz/ebUJ96sl4WSvmoT9v/qD/WRU7pH/f2
uu4roT5VZb2gf2g/sfB+gnXRTsaX9kOTH/XxlfWC8XWvv6s+yM/rBfmRjntV
tP9b0mQ+0/6v6o91seDJ/Em1Fqj5bO6Lwb9AXwbIeoR/aUj3qshHWFE++Qiz
vlA+1gX2H5TP97ZQfk9ZL0my/7j3zz5v9A/NBwv2T5oP5j4a6gN9mS77J+pT
l+rj7u/uWZNl/3f3d//qjpxPaD5bDv35eeOnD1z1wXkM9+CQH+uijugXzX+T
H/WxyHr5TvQL9ekp8w3nT+THukgV/UX+DpQf9cF5zCL6S/uDqj/WBc4PtB+a
+32oD85jj7q3mbHzD1d93o/v2ZC2ct5GfqyLM3Iec8/v4YH8tP9bcF6i/d/4
3C3vz2PG/waKv0j/j3ttyN9Y1gvOe8jfRuY/7vERH7BCv4gPmPuMKB/rAufb
dOJIS+U+IPWnJcflqhFzeqZwf3pzf2Jd4HxO88HyUPwg6lNT1ss/7YbMiPFM
MfXpLPN/odxDdO/Pe9YB4i/SiXchP+oDfYG/oPls6oP8WBfwR8jP9zFRHznv
WV+1HFfr+CtXfVpJfYKp/lgXu8XfpROXS5X7lagP9CVS/B3tJ+YeKO2HliPi
T2k/NPlRnwayXjaLP0V9fKU+uO+J/FgXucS/pxM/xD1Q2v8tFvHjtP+b+mx7
7+vNugDnQXoLWRfgALS+rIXE79D6MusF5WCeg2NQP1hyFJ45/fGBFO4HyyW5
x0rjaEkQrkLjaPLjd2UcrWOFq7i399/5LJwH5cs+bKkinAflY96GUX0wP72F
OyE/0vG+AX4X87awcCekYx7WEA5G69TSUzgYyu8o5eM+L+0zlv7C5WifMfd8
8buYh+uFyyEd86qG8EbaJy1jhB/SPmn2VZpXVvAipA+UcQfnpH6w3BQuinSM
Czgq0tHPxYW7Ir2K9Fsf4b00Dy3gvTTPLROIG4Mnn1gY/mJaQ6fiydPzP1r+
UT+n4sm7T/T0G+nrVDz5ef+zFzvPcyqejHtqzJPn76xWaExtp+LJRa/ev7ep
mlPx5Lf9s59568/pYdY2w0suOTLKqXhyx/xfZD692ql48polf7fpH+lUPBn3
BJknf9442+qZS5yKJ+MeLvPkpedu3wiZ61Q8ucCon9+MWutUPJnLAU++7x+b
2XFN9YPlx4BhK0JsTsWT750v3+CTo07Fk035xJMbl2685/kzp+LJuEfMPPnz
uQn9J1VLVDz58bHVOzzLJCqeXOZInx/bl01UPNmUTzz5eKXthUMaJyqejPuS
zJPrHPAfOcqH6/ncsq1baJ1i+RMVTz4duXf++aGJiieb8oknD64dNK7t8ETF
k3FvmnnyZ5lP/jIpUs0Hy8L4Tumf/tv/zJNzFZy9r+C/6cyTeR5iXmVf2PLQ
yT48Xq574syTM2VYO+5NilPxZNyTZZ6coVnWzBUmcHsPeZv2Ek++liWs4tuv
1XiZ++PMkzft/7LC3Q/qA56M+93Mk1Ozt14TUzpR8WTkZ57cqP+c9cmVEhVP
xr115smZlza/FVRCzU+Tn3nykmmLv2zmk6h4Mtcf8zbHhPR+QR8lKp6Me83M
k8d7bdtVSq9HVX/Mc3vElQz1wtR+Yu7jM0+uEV9z+4ZDTsWTx8r9a+bJ0d5p
weV+5/weHsjPPLn7jMtDV8xV+6SpD/Nkn3KNvjozUc1n824A8+RJyZ5eS391
Mk9w3a8nnvxM9Ih5MtYX8+TAq6XeBV13Mj9R5cO/bM1w/FDqatWf3mOoP7Eu
tl2YuGHzRKfiyUFyL555co5ph/cP+qA+9ag+zJNtTd5GbRznJH7ywTsDxJMn
td1+aelYp+LJn8n9febJd7YN9JnShPcr1/sJzJO7NRicNbKeqz5tqD7Mk0+t
nlB2RE4n80PXewjEkzs2Xrh8SRHuT1d9mCdf2hTa6m5ltR+adx6YJ99+u2/w
ipMOU5/WVB/mySviT66vfcRBvPSDdxuIJ/+R4XTDv8aq/d/1vgTx5I1bapZ8
OUDNZ5OfefLdlKC/l0xwKp6M/MyTcS5ynz+udy2YJ7+dPe75oepOxZO5P7Fe
Vm7+fq59OffPMW/0D/Pkv8+M7NJ4g4Png3nvgnnyD+WbNP7mM6fiyXiPgnly
5ztzBq467VA8uRTNZ/j9kJZrptVY7aqPH9WHeXJHKR/5+V0O5snHpXzmyVx/
c/9O+od58jjaT+D3p0v/0H5i4f3E/D+LjC/thyY/8+QVMr7Mk1Ef5snLZb0w
T8b+yTz5jsxn2v9V/bEusi7rlNZvi5rP5p0T5slHZT0yT8Z7IMyTs0n5zJOx
vpgnh8n+wzyZywdPTpH9h3ky+od5cqjsn8yTcd5gntxJ9k/myagP8+S7sv8z
T8a7KMyTW2369En9tk7Fk/F+C/Nku+gX82TkZ548WfSLeTLOn8yTob/Mk5Gf
eXJO0V/myVx/rAucH5gn47zNPDn2oz8mXV3mVDy5gZy3mSfHyHmMeTLyM0/G
eYl5Ms4/zJPhL5gn4z0W5sk47zFPxvszzJPXi34xT8Y7PMyTE+R8yzwZ79gw
Tz5w43SbtI8TFU/2pv7EuvCU8znzZPhB5snDq470WvDSqXgy3s9hnvyx+Avm
ycjPPHmp+AvmyagP8+R08UfMk/GOEPPk5V6zAxZ2SFQ8meuPdQF/xzwZ7wIx
T94q/o55Mt4vYp6cWfwp82TkZ56cUfwp82TUh3nyUPHvzJPxfhHzZPhx5smo
D/NkcB7myeAAzJMbit9hnoz1wjwZHIN58oD5IzM2bqr6wby/xDz5hHAV5snI
zzy5lnAV5sl3hfMwTy4nnId5MtcH87OpcCfmyXgninlyWeFOzJPBwZgng4Mx
T0b5zJMLCpdjnoz3qZgnPxAuxzy5k/BG5slfCD9knox9lXnyAuFFzJPBOZkn
vxMuyjwZHJV58gLhrsyTwXuZJ4P3Mk9mbgyeXOLaoCtXdjkUT/74zPqJPt4O
xZPbpZXycHzrUDz58a9PLvZfbFc8Ge+rME8+1Gykb1uHXfHkPG3PRwSMtSue
7HdkxdxMXTg9zHpy/85BGYvYFU8uNrBHlmzl7IonTy23qsOzanbFk/G+DfPk
Wz3nvW62w6F4Mt6PYp58P3H3k4N3HYon553lW9FvgEPxZC4HPHluVd+sjauo
frC8azzTUayBXfHkC+1Ob/m9nkPxZFM+8WRL4WJnQ+o7FE/G+1fMk59Ztw3t
tNeuePLccrbN9v12xZMd7WZumF3RoXiyKZ94crs7G/03V3Ionox3t5gnrz/f
8PP2d+yKJ6/JUnd0aIpd8eT0JhOqf+56/8fwZFM+8eS8+3OXs1Z2KJ6M976Y
J99qcatJ+gf1wbyq0etepvHX7Yonj6rZaVmrFXbFk4vTPMS8Kl2gV95OW3m8
XO+bMU/+Y8LYtw+j7Yon430n5slXju3Ltacmt/eQt2kv8eSGHZ622FtRjZd5
94x58tg39aceD7Mrnox3yZgn9wu+b/3rql3xZORnnvz4Vu9Vez6YP/AveG+K
eXJIgde1x1ZR89PkZ57c6MznPhnC7Yonc/0xb5NXTS30+lu74skB8h4X8+T6
R8b2qlJZrUdVf8xza4FnZZ61UvuJeUeOefK0gzubtCllVzx5m7wbxjx5b/DN
CpMKcX4PD+Rnnty/Tqv5i9qofdLUh3ny4LV91t2foeazee+OeXLdh2Vu5bqd
oHiyeYeNePIj0SPmydjnmSdPreXb5vfyduYnqnz4l/nHvlk5JbPqT2/uT6yL
u0kV4maUVPPB0lfec2OeXP+w5+WZRe3Mf0x9mCfvfljmXNKSBOInH7yPRzz5
eOyFbldH2BVPzirvzjFPLuOx/s3lAN6vXPmZJ3c+M2n9zQqu+rSh+jBPztut
4/Ni923MD13v+BFP/tK6el6PXdyfuv5YFxPveActyedQPBnv7zFP3hs4uUTg
Vld9WlN9mCd/0So8W76lNuKlH7w3SDz53NArT8p841A82byLSDw57FpSxmnL
HIonIz/z5Ow30lI+vWVXPBn5mSfjXOQ+f1zvMTJPHh0d++hBe7viydyfWC8/
jlnXtvBe7p9j3ugf5smea1r4j7Oq+WDeaWSevO9U6sKS4QmKJ+MdRebJpdJz
/TStdYLiyZ40n+H3HQtTbKGervnsR/VhnlxCykd+fk+SebJTymeezPXHusgu
/cM82Z/2E/j9PdI/tJ9YeD/Buhgj40v7ocnPPBnjyzwZ9WGe/LmsF+bJeMeS
ebKnzGfa/1X9sS4q/lRv53cFHDyfzfuczJPPynpknox3LJknV5DymSdjfTFP
/k72H+bJXD54MvYf5snoH+bJeWT/ZJ6M9z+ZJ1eR/ZN5MurDPLmc7P/Mk3E+
YZ48Ynpq0fJ+CYon491R5sm7RL+YJyM/8+RQ0S/myXhHlHky9Jd5MvIzT24g
+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
8on3DqsT2mLngQjFexFXl3nvuZo5lxUeGK54b5GZsb/7LQhXvHf5+B+bvf6g
/DZcPvFe2/FxTWpvjFC8F3FIFe9Nebyt1blwxXsPtZow6fq/v8u8d3tqeuCT
dxGK9/I8xLw6Uu16m1lVoxTvRfxi5r2jy2b4c1OFCMV7u0lcV+a99s058+7f
zu095G3aS7x3VrkyDy//osbLxDVm3nv/n2x5a5cIV7x3ucSfZd6bf0P4tu23
ryvei/zMe7d23dz7wo4IxXsRT5l5795rnbtOP67mp8nPvDd2afSYjqevK97L
9ce8LX2zQKcvz11TvPdPicPLvPejUsXHn0iOULyX6495HvCF37KgALWfmDjR
zHv3+1yOzl/omuK9ryReMPPe17OOR3bKzPk9PJCfee9X80b+OGSH2idNfZj3
bq/Wss2Dj9R8NvGsmff6BP8RWi5PuOK9VsRfJt7rL3rEvBfri3lvtmPHs8d4
X1e89wSVD//SMPemPvb0q4r3vqT+xLpoXiJPoYi/rijem1niODPvnbnsfP8h
1a8p3ov6MO+d/bTyjDX/1sudn9yzfoe41cR7Dz+MCmg76LrivR0l3jTz3sgS
fgm+AdcV70V+5r2Fpu5p1G3UX4r3jpf6MO9tl/GffrdOnVa89xTicRPv9Skf
nP7u9XXFeztR/bEuavt2X+t7KVLxXsTdZt477PKw4fsGnVK896TUh3nvf+S3
nKT6g/fuHRDQMSgv8/MP4p4T782SrVXBNyOjFO9Ffua9zoGbb07PEqF4bybJ
z7z3gZyLiL+ZeOvMewe3mF++U2i44r15qD8xz0fH3Sy7pWao4r1W6k/46zWr
xt0fUues4r2nJT/z3jvtZuXIH39V8V7ET2feO6BA2Qu2pIuK93ah+Yx53lfy
oz5IH03zGf46SepD69fEi2feu1zay7y3E9Uf62KE9CfzXg/aTzDPh8p40f5m
sdJ+An99S+YP7bcmP/PegTL/mfc+lv2Qee+iXqfzzjkTqXgv5hvz3j2yXpj3
Ir48816Uz7wX64V5by3ZH5j3cvngvf/RXm+0l3lvC9nfmPcelvMA895Gsr8x
7+0k9WHei/2Zee9UOT+o73vHfb/t8+NnFe+dL+cZ5r3fi74w710o+Zn3Ql+Y
9+J8yLy3kegj816L5Gfe+4PoI/PeYKo/5jn0nXmvn5yHmfc+LHKv76obVxTv
fSTnYea9z+W8xLwX+Zn3WuQ8w7wX5xPmvUfl/M+8N+BOoLffuCjFe9vKeYx5
b7Ov31WqoubPv+tC9IV5b2Y5j6nve+X8ybx39orLbVrUiVS8d2CpTzoMP8T9
c9b7MfUn1kUROT8z7+0pfo15b9HY+WO8WkQq3pv4sn6Wy8ncn/es++X8z7wX
+Zn3XpfzP/PeXlIf5r15xL8w77WJ/2Xe+/OGiJRZhyIU7+X6Y13AfzHvDfOI
K9ArJELx3nviv5j3BgsfUN/3in9k3rtI8jPvTRD/yLwX9WHeGy/+mnnv+Vrb
xvX/LULx3l/FLzPvXSz1Yd4LDsO89434dOa9W8WPMO/FemHeW1Q4A/PeA5P3
N7+9QfWDZfSB4pPP71XjaPlWuAfzXuRn3vuXcA/mvdeEwzDv/VU4DPNerg/m
5xXhQsx7j2cpcXRvtUjFe88KF2Le+6twKua94FTMe1E+895uws2Y95bo3iq1
Xd0oxXu3Czdj3ptPeCDzXo+G7/ke817sq8x7DwvPYd5rFQ7JvLejcEvmveOF
czLvPS5clHmvXXgs895g4bHMe8F1O/1vvWQyvDdLUt93OSskW/55315wPCvi
FSI/uOLijd2CxzdxpSP/V15jd+x6cMuk4xxb9P74r+7cuGXKb4V9QOInIj/S
76yf9LT8OVc5zWQcG1b6svPAeFf6+1E85L3oSOLBzU9d6d2l/9N3NXr8aSNX
PTtL/w/esLryxDmu9IbS/+08hi9eV9RVH/jHWv4NX57c40qH3/RdWqG6R44U
k47zcPcL+YdbhrvSsV8tnhN44XGjlH/3rfc8EPVcJ/EW30n/YFyyf1ekz+HQ
JJOO/n96LOjGmP2udB4vpKP/41Jvz7nZKtn8LtpbUOJOvvuPcTH1kf6/enP3
x11Gu/Kj/xFvFOlo16CRpwt+Mv+2Zaf8LvpttMTfRH6MC+KcIh31bDorIPXl
n650jMt8ieuKdJS/qOzUuj1siBurxwX5kb5M4u0iHePVo8r6iJO//dtvwqnQ
rg0Sp7WTcCqM18V1f8bn8ko26Riv3St65mlaKcWkY7zmShxbpGO8vPP2bJLa
7rbl7X/0D/JjvB5I/FxTHxmvwt0rtyx37LbwNMNnrA6J74z8GEdfiSOMdLS3
08gNV4dk+XccpR/Qz4Mnrhs36oCrvagn4k0jHeN4af2S0VGXXPkxjvUlvjbS
UX7UltknHzmTzO9iXBCXGfkxjqMkrjfSkf/09VG/x65GXOZkM16VooavWfEq
2aRjvELbZLgS7Z1i0tFvduk3pGO8/JJq1C60LtnS8T/6AfkxXohXbuoj4/Vj
zjntO6z7t73/+zsGnmBd3Hr8+UzlXfXHeCFOOtIxXoPXbH0XmH7LpKM+iFOP
dIxLnn+yXcgb5krHuPw8Z/zr8edd6RiX80WqFy767Jal/X/0P/IjPX3XXa8T
JVzp5vz2aMPNPSuTzPkP41KjjC264TrX/WGMy6rAI2977nbl5/5BOsbl00r9
PfPdv2XS0f/zs7fvWPqAKx39f7zYs82FN7vS0c+Pqqx4mWupKx39fELyt/6P
fkN+9D//Lvqf64lygqld6P+V1A/o543LX9XcV8PVb+jnmtKf0v8W9DP6H+no
53Myvkg3/ew+Hwynwvz5/kyZyk1SD3hze5Ef/U/z0IL+p3lr+Y95bkH/z5L1
0sSd+5m49siP+tC6s6D/sX6Rjv63ua93U/5J2R/a9Iqr373tX97c/8iP9M2V
Mg67195VDsYF+4/8f4cZl1OyXyEd4xIt+yHSMS7YP5GOcbks+y3S0f/+si+Z
35X+7yb7/Fv3c76Jn478GJevRC+QjnEpIbrj9x/9ifwYl0eiX0jHuDRy10Ef
1B86iPwoH3HhkY7xgv4iHeOCuOdIN/oiOi7/b+uDcfGWuOd+/9EPcn4w+XvK
+QHpGMef5XyC8pE+1v1cpPof6Rjf5u7nItU/pj4yvjiPvdepTKb8unK+3S71
QfmF3c+HPv9x3vPBuF9xPx/6YHzpPOmD8b0h51LUB/UfIudz1Af1X+9+TvbB
uP/tfu71wbg/kXNyt/8Yd+RHOuKhIx3zAedwOc+b8cV5HukYxxbuvkD1M9LR
z+3dfYfpB/Ipph/I15hxIR9kxsVbfNP7/z/S/Yb8GC/yX2a8iouPQzrK6eju
+0z/L3X3iaafo7M2CGq6wpWOfoYPZX+ap3Id//n+TuVPz0t8IvanvnP6vbWm
OJQ/7VRiy/dfHnOlo/8dTfw79TnsUP4U8ZjYnwZ8W6x88D5XOeb8EFD9RctQ
VzrGJft3vmcyhrvSMS7bT78881kWV/3R/01ybj/r3ciVjv5PqlDk57RFrnT0
/6xmC745dsuVjv6/1KBz2c8yuOqP/s9Ts/DdH0q40tH/07Lu9i2YNVH5U8RV
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
f9ps5cxl4T5xyp82i9gyuHKPWOVPH268cGf1uRjlT1PkvWj2pysD7w/NWitG
+dMmQ1tM3t/MlY5xedB/04IeXV3pGJemG+3X7zW7ofzpqoRiBb6vdVP50wWZ
u56Lq+iqj4kvU3VBUN1SLp9r4tFU/ORN596udPMdafnpUwJXuNLR//s6vqi5
57RN+VPEfWN/mue4T8j3T+OVP/X6OiWkxoB45U+byXixP12+b//aP36NV/4U
8d3Yn+Idb/anG18E5v2svE35U7yvzv70myJbm+340ab8KeK4sT/Fu+7sT78s
1G3c3tM25U/fyjv27E+bvPq1ZZNIm/KnGBf2p7MlvgD70/DXDwZuD7Ypf4q4
aexPS57ptGWmvysd47W8w4MGlU660jkuHvvTV/5pe7vF2pQ/Rf+wP0U8O/an
nTy3Ddjwq035U8TXYH+KuAnsT5/8cOxll+425U8Rv4z9KeLBsT+dlfr16b/t
8SYd44h4Z+xPa9R8WGPSkHjlTxF3jP0p4o6xP/1l0cPKpYbGK396qdb4PA8+
8HEYrwr9ki+EL7Mpf4p+Y3/aN7Vn11gPm/Kn/+x93w/sTxGfhf1p0dNFel37
PU75U8TPYn+KuDDsT68/OFb1H0eM8qeIy8P+tMTCDnu6lYxR/nSqxCFif3rj
854/FugUq/wp+p/9KeJtsT8dUSXnkewjbyp/OiDrj38862lT/jQ8cGepsJtx
yp8ivhLSzb2SzmkfvTXxvFz+FPGbzO9K/2/Otzj57h/Ryp+aeF7yh37eIvnZ
n5p4ZPKH/uffRf8Xo3qinKbULvR/JPUD+tnErZM/9PNA6U/2p8Ol/9mfYnzZ
n05znw/GB2H+sD9F3DT2pzQPjT8Kd5+35vx/232eGx9UXNYL+1PE8WF/2sl9
3Rkf1E/WL/vT0e7r3ZRfUfYH9qfof/aniAfE/hT7D/tT7FfsT7Efsj/NIfsn
+9M5st+yP/1Y9mf2p89ln2d/ingx7E+hF+xPO4rusD9Ff7I/Rbwb9qep7jpo
zu3QQfaniIPD/nSN6C/7U8R5YX9aTnSc/SnivLA/RT+wP8X5gf2pj5xP2J9+
4X4uUv3P/rSy+7lI9Q/706/lPMb+dLqcb9mfjnI/HxofROc944PofGj8Dp0n
jd9ZKudS9qer5XzO/nSS+znZ+KMm7ude44/qyjmZ/SnGnf0p4r+wP8U5nP0p
zvPsT8kXqH5mf0q+w/TDSnefYvqhibuvMeNy390HmXGBb2J/2sTd35nxIv9l
xgs+jv1pc3ffZ/rf190nmn72/XrAqe++cP0u+jlYfCj70yqjt6blLBen/Cne
e2R/mvNl1vihc1x+EPlzjXs4I99R1/1W9P+lpvFVC38Zpfwp3s9kfzonz8W4
4tsilT+9EjL2WYfmrvIxLnm+/cxzZpIrHeNSq8rqFzcHuspH//s9y2eveduV
jv5vc/jm0Pr5Xe1C/1vGb3rp09SVjv5PKt/zXM4RrnT0/5zo3MsTlrvS0f8V
6g95nXY4RvlTvIfJ/nTSpXTr67s3lD9t1fJ0zmNzY5Q/xXixP+32qvTTgPXR
yp8iXgz7U4wL+9Nnw2tNLXwjWvlTvAfL/rRR/hnXnrSKUf4U76OyP8U7tOxP
A3uHfFohLEb5U7y7y/60RqJXj1zdYpU/nSvjwv70iryHzP60aBVHyzCPG8qf
Ig4L+9Ne1iPTvxxzw6RjvP4Y7fdN9JFYk85xdtifzi/wR0jeErHKn6J/2J8i
Pg7702H9t45I/DlG+VPEQ2F/ijgy7E+vZuzTeUWuGOVPEQ+F/Sniy7A/fbZo
bvKLra50Ew9C3j9nf/rD5s8OpP07D9mfIo4J+1PEMWF/Wmjs9Edr+8Uqf/pF
1LggzzMxyp9e7xe26O8FMcqfot/Yn65vc6FlgyYxyp+iH9ifIr4M+9MVXwza
82lytPKniMfB/hRxTNif5jq42yNubpTyp1aJO8D+NFfxj84nT4hU/hRxOtif
pjqPt47NGq38Kfqf/eliiTfB/nT1+G1tPj4eq/zprldjCuYpE6P8adbYZn/c
iIhW/rQH4qfIH8Yly8n47y4PClf+0cQfkT/z3SnigKA+Mi6cjv7ndPQ/p6P/
x1M6+t9T6ol0c3+B2oX+Rz8k5Zxa83Lpc96o/wQqH/1v4uPIH/of/cy+dZWM
C/vW1zLu7Fv7us8T448wr9i3oh/Yt550n5/GN+V2n8/GF9D8N/5opawj9q2I
R8C+ldaj8UdY1+xbR7rvA6Z87BvsW9H/7FsR14B9K/Yl9q0FZB9j3zpD9kn2
rf1lX2Xf+lT2Yfat02W/Yt96RfZ/9q3QX/atiBfAvhV6xL4V/cm+Fe/2s28l
fTTneegj+1boLPvWY6LL7FvxXj371q9F39m3Iq4c+1b0A/vWInKuYN9aXc4t
7FvpvKT6n30rnZdU/7BvbSjnNPatjeXcy77V1/3caPwRnQONP6Jzo/FBdM40
PshPzqvsW3FuZ99K52fjm+g8bHwTzs/sWwvLuLNvXSPv2LNvnSznc/atX8g5
n31rsrtfUP3MvpX8iOoH9q3kd8y4kD8y43JZ/BT7VvJ9ZrzIl5nxuiz+jn1r
Hnc/aPo/t7t/NP2cc3y52qE9Xf2JfoY/Zd+69MKRmZ2nRCnfGirvVrFvjW84
pmaFJa505P+9Z9VdKdYI5VsDypX1Wud3TX/3K+90sW/1c9RcuD3uL+VbR3c8
VHxEXlc6xmXhqVp7arS9oHzrxaalT9ef78qP/s90NueNJpcuKt/ayD5335yO
l5Rv/S4100/Xoi8r3zp0RMrAK1evKt+6N/BWqUFJ15RvHRox7OWDa9eVb90i
73qxbz1X0ra6k1+U8q2B+w7GvjsYqXzrKRkv9q2rbcWL/PkoQvnWU/K+GftW
vJ/GvnXdM+d3+X+LUL4V79qxb/2riI+v/XCE8q1n5Z039q14T499a9SkuTnz
XY9QvjVB3g9k31qzxccVs30aqXwrxkX9v6q868i+ddCb5Ab1AyKVb8V78uxb
fWdO9cu0M9Kkm/t01ZYln6vtSud4AexbN571970VF6F8K/qHfSve+Wffusuj
a+6LWyKUb10q74iyb8V7+OxbV13ofrfMvAjlW/GuO/tWvIPKvrXPxPs1G8x3
pWMc8Q48+9Z7+7eefFAiUvlWvMfOvhXvsbNv3f/N0S0VPo5SvnX+gmpxlpBw
5VuvLWk0+Yeb15Rv/Vn6jX1r2WG5B97eeln5VvQD+9bf5V1c9q2Rp95VDGx/
UflWvCvOvvWpvMfLvjV19c371U6eV741o7yfzL61wrfJw+8GX1S+Fe+fs2/9
7GCWY78UC1e+Ff3PvhXvkLNvXfDk708L1o1SvnX4/kGVzrQLV771daNKG5tU
vaR861i8Ay9/GJftc4pMW/FTqPKt7fGOuvxhXI7hPXPUR8aF09H/nI7+53T0
fwilo/9/lXoiHfUcQ+0y3ED6gX1rKJWP/jdxBOTP/L+29DP71vkyLuxbS8i4
s2/t4j5PjD/CvGLfekLqyb6V5qfxTW/c57PxBTT/jT+KknXEvhXvKrNvPeK+
Ho0/wrpm37rIfR8w5V+VfYN9K/qffSveZ2bfin2Jfese2cfYt96VfZJ963TZ
V9m39pV9mH1rE9mv2Leulv2ffSve72XfCh1h37pd9Ih9K/ZV9q29RdfYt653
10dznoc+sm+1i86ybz0qusy+Fe/usm9tJfqufKu8u8u+Ff3AvhXnCvatteTc
wr71gvt5SfU/+9Zo9/OS6h/2rTinsW8dL+de9q1n3M+Nxh/ROdD4o7Xu50bj
g+icaXzQSjmvsm/NIud29q3b3M/Pxjcddz8PG980Us7P7Fsx7uxb8R4v+9bz
cj5n3zpEzvnsWwe7+wXTz0Hu/sL0c0N3P2L64WN3/+IaR3e/Y8aF/JEZF/gp
9q3H3X2fGa9u7r7MjNc48XfsW0Pc/aDpf7u7fzT9nKHU0T+HDXL1J/oZ/hT+
Bf1z50rxeh3bJpl09ENVv9Qtj24kWbbJuRHjMnZirW1rGrreB0b/4B2wf+i8
jffHcP7E71aM3D/pTIsU9Jt6xxV+AfWxF+ka9tOE25audG7He6fyvrHxHQ3k
fbb3+9tjU3+fKWtbnFjiSjfv6T2rNvFtbLJlq/wuxqVw/IK6ORenSLsem/oP
Cqi282B6CvYr9X5pe6rnfalnGuoj7Vq6etaZe+nmHTn1fub7cqJM/XfOvf1P
6uBkUx/z/2L73rSp1ibZ+BSMSyN5L9FPyjHfpci7iG+kHLT3u3z++SMKJ1t6
SH60d1/nkR711yRZhrbp9cm8CudD+P1M5Ee7klOm9Kr48JYp39zTeXS63LTI
JEs7OVegXekDtsduK50s+0mUaVfj60Va+O+/ZWl//0y7+2dOhKBdeIezq5SD
dhVeVLdAvilJpj5oV3DrW2Uvh+BdzUMh/C5lU8mP9VVEyvFFPaVdqE8bOnfh
Hcv3+9tj064B0t62dO7CO5atpHy0N0n6LV3KQbumF+nS/0HVJEt3yY92Hf7z
88ZPHyRZOtN5Eu9zZngfJ8icWybI+Lam8wPeY/Sjdi2Vdkm8IdMPT7q3mbHz
j2RLL6kPxhfzU9av6Qe804t2ob05LleNmNPTvA+s3lFEOegHj/ZDZsR4pphy
0A9Yj53p/IP3JGUfM/3wquW4WsdfpZj+Md9byj6A/OZ7UXnnuSPpHd4PlP3N
tMuz8Mzpjw+kmHJQzyqy770lHce7iMiP+vQ8vqhkz3/3k3TSZbzXt1vyo//H
yP4M3Ud/4j1A6D7qiX0e+fndP+RH/aEXwqOMHvWZ+XaC/RDeZdXv+6Eccx+8
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
K9BPeP4O+sn69KUh6gi98BOev/M/1mB5lA==
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwtlgmwTmUYx889lqN7vmMbQpbuzXZxLdnDtW+5lpuQfc1gSJbIlGEQiqJo
DKUUarSZokWyL9mXkZr2lEJikOxFv/88z8z3zPM///O8z3m/9322zKGPdx8b
BkFQIS0I8qGnR0FQCP0iumEcBN14WTgJgj7oOvD90I3ge6KLwhdDeoMfiM2+
K7gIXFlkOLgZXGOkGms343MwXBZ4I7gMNo/yvBVcD5sO4HS4gej7sOmPHuLf
3YtNXWxa8Hw7FQT/IU3A98Ot4F1pbN5FfxCZTVpiuCr85+g62h/8Da0DDwDf
jU1TxyXBo9F1sX9SfnmeiW7L+zbo1kgIl41MA+/H5250c+x3ovOwW43uyvuu
4DfAD4I7IK+Bu8B1B78Dfkjnh2zW/4OriowHt4DLRZaCK8Hl+Llt4ltjxIE/
BX8Ibgj+Btwdm/d57ol9HrIGfAL+kdj2NQJuALIefAb+LnAuuAHvx4OPggty
4RMcD4QfC94P7qO7A88DdwDngBfqf4Fbgj8D/4nPm34XOv8x8PvAt8D1sWsv
/4mdoe50HXxF+AI8f8262uB64O9SxucHHwPfC/6XmNwLztY5wB8Fz4mM3wfO
hC+KzwVwd+BuIwdThkvCL4G/DoYKZnkMNMLPdYiJPCvuT/E+ApQCFwvN/gay
B5sK2BeGfw7bych5+O3wl9Hp8H+kmQjP5P2EyL71TGR+5f90mq3lCIK56Fu+
N+1Rd/oYkp+XzfnWKHCmx0JjbCYp7uCfQteAr+2x1yY2/mlwdbht+K0eWEwq
X5RjpRPTei6VWN4qj4b4N7PBuyKLa91NvsRyTDaK+fbIHPj6ieG5ijnf50hw
hcT86D/cC66CjPMY1h3rrpXX5TzHVQfKgxd4/NTx/GqnWIot57IS25P2dhzd
GX4ZfOXE7qYoslOxxvN8cEedA3gDuAe4DLoMa8uiZ7D+Kmf8JfZX0CUCu1fF
VRHw87yvoBoALodu6vGZg26p/wRurvxH7gnsnHLcRud10+NK8XLJYyAFXyK0
bxUOTYTTtc5j+ziLVvHtLPAR8OLI/tePygV0Oexj9HzFJ/owfLnYYm8HOCO2
ON/v8S+bQ+BWXldVQ9P8fynHOiIZgeVhL+zbga9EFreKz/HgsvB/8bwtZfEa
emzP8nhWLCu2ZbMV4jp4D0ajOfv+qvnYRNSQdfoe+Bh6r84uMLvBsXFPqFeA
d4FHgnco9rDZjn4dnxmqJ/ivH1o9r6s6jFQJLG/L+v1moldHdi8foxsrHgOr
7xX9vlQvsv088xRDfg5V0WO9lip2m3pMKt4WIcXhK7HHiXC1Aut/05UH4Bno
KaHl2mT0VM8p5eckz1nl5CykCXh2aGu0VvlzJLKcauC1XXmU4Xmjb72MHur3
qNxVreMXTI0sThS389QrE/uGcueI58tOdK3E9qr6cIJzLA1eqroFrqR9x1bT
lBdbPK4KsHZKZHGlGjU7stwpqP8VWX/U/1WN6e53oR7f27G44V5PRqBfQeoF
1sOW+JksQn+ivAIvDq0Hqm++hz6TZr1MPa0b32oG/pVvve1nqJ7aC8kE90Av
d5/yfVL9Xu/Z+MOs/Uj7Am9Ct8bmi9D6lfxf5DvDFE+B1dkRvmfVsAOR8epx
axUTgfXUU5HtU73sXGT+BuH/58hs1PvW+/86EFqeKF/OonelrC6Ux+eh0PLu
IPqnyPZ23uub/Mhfv9je98f/hZTFaw24TrGdX1ufI7R2RWgzjOajEomd25vg
TqrViZ2R5o1aseXQt/j7BSmpO4st14rhZyH6t5TVzaqqKzx3CmxOOALXHnwY
PSA2PQ7fJz2uZP8qduXBp+GyYsO/p4xXPq5B34jMj2aMzbwrFFp+pfOcF9i8
UdznS82QG/ysNoZ2pzp/3YPOQbHTRnftc47mKM1db4E7wx2LLNc0/+icxXdL
rPaqjz+r2SFltV5z41VwTXDN2GZL1XslwVe+T83AKz1/Nc8pRhVjzbVfn3M0
IykOVccueD9V/VkZ2Zmot5xKWb/SXb+A3s3z3x4bLXy+Ui/TXK0Yv5yy+Uu1
9KXQ5kndb25ifUHz+TSf/RT/fRPrZ6oPyvdc75vtEpu9Nav/o29GVmuHJ/Z9
9Sb1RtVk3ZHuSvOY6uRa8LLI+kh1n1e3sHYYa7eicwKbXzWbqZddxH+12Grz
WXCEXafQ6vNAnxXVo895jN3xGVW9YFRi96B6onqf6/W5C/qS/g9Yf/pKymq6
7quX72eo8jFlfVexXTm2/vk93KDYYixm7SWvgcopzRKa95Yrr1O2T83Dq7z+
qw+0iq3GJ/jvC+4Cn7+Q9cr8ms0iyyfFeanQvqs+/wP+rim34cNCloOab6/5
+ajHnQH/D8aYdX4=
               "]], 
              Polygon[CompressedData["
1:eJwtmHm4llUVxd97GM6F73tlhgQEQZB5CBBQBnEAHFBUCFGQydS0gUEezcon
S03NTMtMyzE1SiWRcgRRBhlFVHAKJUcEFdMEBEW09XvW/mPfe9aZvnP22Xvt
vd8OM2ae9qNUFMX4mqKoq/8vVoviBcm9uSj+Krld8i31N9OkLeofWxbFnWof
rb4tGjte+C7hAayN+bdJXtXc12KvbhpvXXhP+vol78ncV4RflvxJ7T9LXlK7
vsYP0HjHSlG8KdxI+CDhv2XPrSfcsvCaTcJ1hJsI/074v8LthdsLPyC8Q3iM
cJvC91ki3EC4gfBlwvslX0ku1D3mSv6n8UM13qrweWZLpJpip/5slbwv2SbR
0YrLNfac5u8XbizcoeI9Nmr9cYX3flrjH2pc/4o5ws+r0V3jTYXvEX5fuG3c
52bhbcKthNsJ3yr8H+GWwi2EbxL+pOo7crf5ko/YX/IXte+WvKP225I71b4r
u90s9E3ffdm6QUfvxdoOah9YeA/O8EfJ1qrP9oGkY+j3DvVP1v0mSc7UXSdJ
+qh9mcZ7aHxZto00SbYB3neqxheHvXwkPE74fuHDhDcJHyv8e+HBwq8K1xWe
KYxR/kBylH5jhKSr+rtJ6khGqv9Y9pTMEX5R/0dr/Zda/4bkdcl49X8nZL7G
hxQeO0v4UfYV/lD4U3QquUD935ecI/kudqC+zySl2tXSZ+As56m9QuuHa/3W
7LlPCp9YeA1970nOLT2XPegvamVHtf6N1Zy/8G8P0J79JQ3VX5GcLLlX40do
fLPGd0qf44U7CC8Qbqvxc4UPEf6XcF/hK4S/Lbw2e82/JSfFXtO091RJRb9d
lWzWfhXNb6v585gr3EX4YOE+Fb/tGuGTCr/xCcK3Cg8VHiv8huY3FW4kfKPW
d0Rvwhewh9qDJNeofTVvrPY7mjMMW0dHpe/wILqt+m6Pqv0INln6vQ/S/0/k
L720ZiX+LDkG39fYGI31kPxE7b7qW62x4cIfaP52yUPJPoAdp9L20Qg96P+h
mv9Yts1yr7rSRb1a6wBugWPQzWzNf17tseprUGtuwLawMTjip8L1hffo99Zo
/i+zuWBb8MMt2bpBR29p/O/ZvjxY+JuY3xBb0dxnquYT+KGO+i7U2FP4d435
r502vjibl3eob1nVNjuCt0+25Wuy58KZK2Ic275Z+BiN7xIeKfw4/lLaNg7H
l5Nt5P7g9wHCX1btg4OEH072TXwW370dHyvt13AjHAnHX5HNbV/qfOur5qjm
ws2TuesF4f5wKZxY+g7cRc3iIo1dHefnzsur9h3s5elkH6qvNxhV+E14m33Z
vrcSfhDeHfd7TnhmaV/GXpYn+/QlwvVif3TLnuy9VPK90hwNV6+Dc4SnSOen
xHvDLR/H/fFxfJ3f5LdXSX5YmivhZjgazrwy+27ccWnYdyfhE4k5Glgi3K2w
v8Ar3Svm/nbCH1dtj/hmT+HdwtM05wm1F0lmxHvwvnAY3Iov4bvHJfsUOkAX
J6tvsvZ+LZtbb1PfKHwlmwsfFB4h3KniWERMJDbu1fge/Ed6ryP5Qn0DIx4R
f/cLD414QXxZJ+mu9o/V17O0Te+K+IitH1uxr/4MjtL4r8M/8J9VVQttfOoX
GlspXGpuM+E/ZNsEb8cbtq1YpzsiV2kjvCHiv45aXKv5s0rrgLufJRlSmovg
pKFqr8NYk9/o4IrjHfqvUd+zGrsuO5YT09cKr5Z8UWObxraZ802N35216BBd
LiCmqL1Kfb01dxacU9rH8DVyJnKnt7O5lDflbYlT85L5bYLap0d8fEAyUe2X
s2MlfYy9lZ1r3S18ivB24RPCHuCDFZE/5eQ4jM/he3A4XL4zO/bA8XA9sZJY
wxk4yyvCA4WvFx5WOp7hb/cJnyb8UHYsmsAblT4DZ4HfT8X2NN5P478hRgmP
rjg2EaMGl74jd8VH39XcJyRdiDXkKBp7PJurJ3J+fJUYIzwFm4MPJKMiXpH/
cF50hG7g/690/31Vn3Nhdn6JLtAJuSUxkvOcLdyqdPzqIHlW/esli+JMnGVa
zJmu/2uy13YSviWZ0zZkC3fmroz1l/QLniUWkxORG03VmpalYyL22BNO01hn
4esiPxlT8dpLkzmaPXoL9yrNo+TXrUvvxZ7Ls89+fsR/7rA28lFSjl+FvWLb
2Dy2vyb8DR9sX7G99lF7nMYPKJ3T4rv48N4a2/++GvM7mBjaWeNzIrYS8+Ey
OG2YFrYpfUbOtiLiOvnKefBlvDFvPSlZr8QM9uY38CtsCts6XdKitA/NTT4j
Z0UXl4T+0clerR8U8R3bWRD2eZj69oQt0KYPmxio9Vcl+9DG7HzyGOF/ZudT
5J+c85ns/AOdjE326VXRR25Cjsrcz7X/qck6QTdNS+uyT+QnT2VzPlxPLtkk
7t8lzttF+KbkmEvshfP7Juck8+JM5HrkvJyVHLhr+Bm2152cJJnj4XrGLk72
QeagQ3QJRw+p2CfQA3puHjI52ccWhv13Vfso9X1ddb1ADkPuAmnCAfg5cRpu
IM8iHgxL1iNzhifXGKytET487vuPbB1cFOdBN+iI+HBGsu6oZw5JrjmoPS7N
tmVsmloLG/46bAXbpqajtuuRXLuS/1Frsgd7wTlwz5X4VOkYhm7RMbFtYfDL
kOCOR0Lf2Cy2+1jwUa/kt14f/EbOC3fg93AdPtw59idWtkiuXcmXGwcXb4lY
gh/hX7trXGOST8FRcBUxj9jXW/j1yKfIL/aFLzJOLPqsxrGSmpfaDH19WnUO
QS5BfUedOD/yg87JtePc7FyTnJPa9KrIV+CHjVXndOR21ATUBjdkx1ZiLLU2
OQa5xvGSXdWw4cJvjC8+GfkN49QzcDbcDWfBC+QM5A4HJteqW6I+JV9GV/At
3DwjmX/JKcgt8Hl8/13NaZ0co4nV6Khhsk7QzcPx/tSHuXSdjC2OEK5Xujbg
97FZbPfFiKc/T+ZacmByYTgD7mAP9sL/akv7Abk898W28Vl8b3ayL68OPoWz
qFWoOeH2a4WPKO2zcBf3wZcXh79x33alawZ0gU6o3TdHfL48ObaQQ5FLESOI
Fb+NfAWdbK+ad4kN1OQDSnMCsYT5cMVL2bGHGERutCLwOcncvSnyDfIlarmt
8f2BbxJ8m6BOHZ185sXBb/gyHNO4dA5ELkSOQa5BPrYhOYf/PNseeZN6EcvJ
wZfG+MSKa5Ybk2scapmjY0/2opYh5yXXIefZIfxmdj5FfjOydI57R8RP7k49
vyw536CWhCPgCr7B8C1musaXJNcc1KqckbNwprNL1+jchTudWTonW5ica5Bz
sCc1ArUBv8X3kfXJNQnnnVI61+OMnJUag7qBupLagza1xOjCfdQs1C5jCufh
fNNgjDnnx++TG5KTjZO+zhC+QfhI4W3Z3xfYg7V7Q2foblKcjZyY3DjLqWtr
fWdyUnLR6eEPxFXyRr7t4eP4Mj49WOuuD76BD8i9yamxFWyGPIwzcBZqcmrz
I4Mf4Uy4kxqS2pQahlqGHJM9WEsuR42En8HD1E7U3NRi1GR8x2AMX4SjmQOn
w+34CLksNdKi0P+Eit+TGpGaYFbYHLbHNxe+veCT7MFafJXYdk/YAzGO73mc
gd/mWwo+QQ5B7oCvwHENw4/hvv8DGDOebA==
               "]], 
              Polygon[CompressedData["
1:eJw1lnmYT2UUx+9MTXdyfxcVCmOZMWPfxzpmIzL7ljEo0ijSokz2JaMYZafN
UlGoKDyhp+zMDNkJ7U/WNtUYJiZR6nOec/rj8zzf+z3nvfddzvu+Nzz/6ZwR
wY7jFEEINPYcpybG3VALTgUcJyjUcdKIFfO8Gypcx/kFNqIPQjKxmzzPg7kS
o01D/LfQP6F/hJ+hHl5T3t8V+qFz4H6403ecPnifoBPR3aEH/ECbBnj1Icza
RuI3gihYjJeKVwN9F9SEgXgxeOnwBvo1eB16E7vXVy3eQkghZw59nA2L4B68
89JX6TfcgP14/Wn3LX41dFWoAlG0vWDjbIb+Ff0bNPH0PWfQZ+Gc5ND+Mbx4
YuHoCPiXd6cyb9vwt8Lvrs7Bp+gtsBkGkfcwDIZ82IGXS04IOhHdXcYF0Xi9
8Jail8Aim5cWEIVuAo3hMn2JJ+8jmXdPxyhjPQHH4Qy8LzFyesIm9Mfwss3V
IeIHoTd6Jl4COa3QLdFZkA2VfCMV/210JrGz5J+DNLxVeN+jy+Ai5Mq6Q19Y
K/VAfj24HOQ4AZ592GPvW4F+B5ZDBjnJMBfdjVgsxIEHyXhJcB90sHmROklD
n+Kbp2E4XileP7y/eL7uat3XsPWVdT7NdzPIS4dM63sWOQPQ69Hr4EPrcwI8
g34FXpX5Jqe/p7XzJPopGOHrd/fKmKAE8myNItFlfO8ilEMyeUmQYvMo4y3G
L2NextDXGfCiq98dSXw0jJI19rXu30Qvk/0n84A3mtxRsFNqlHfU9bR/B4gv
gPlW47ssXkDuNJhu6/Ye8Xdhpc1Btqd1kkUsG3KgGYzHGwdjpDbJCeXcyKTG
j/J8BAbineQbt6Ibob9Afwnt0N3w4iAW/sHbD3/Tlwae7k/Zp+NgLOy2uQgj
NsT2RV/0VWKVMAh9DG8ksdvpQxVYiL8ALtG2KbEVNj4Z5yG8m7yvIe1uohOI
r8XfDFvgO7zWeG3As70/E/8lKCFWXfYI+hq6K7oLdIK2nq6TrNdxG3cE3p/o
jlKf0B5ae1qXUp8XXD0HZe9PQk+EfTYXRehbGEs6c7qPnM/gmtWv1PFtoTru
Al/nZRd6J2z//9wgnkHbwzwfggc8PWPlXF4qex9WQ3Xa5so4iG/neQf8QV4F
XAlorLOnZ11tdF2oY2fnKnJXwiZIkXMtoHMeIWsuZyW09PSOqGNtw+0MDdC/
bPq3gefjMBjvqK2XtDmG/hwipbbwTgR0TRfa/Dp4QRBi9TUBf7z0n1gl8zcV
XY2xFRB/Vs4nWSc5A4i3RbeTcdm6FZI7Bea7+q3tsmaejsnlHaFSW76uZbTU
BrF15K6HFr7uR9mXE6GHnAWyjtAT/bx8g5xeptuh20M0VPX1TpS7McP6t412
W6G+3SNxnup89BAYHqx3yx5ySuGkq2djPV/XMk/2B/SxdXuO+GQ4TN+D8Wah
Y/EfRQ+DoRAm96XkytzLOQ+tfT135+FdYj7Lg/QbS2i/GJrbWSb3THP8yehJ
MMHmIID3OPoJGAuJnn73EXRtYnWgrq/znIqXLue21dBeW8P6nu472X8bYYOc
a66+Q/os/xb9pbZhANyB9zVtv4JvbK1kv9Wyf4Vu6F1ypkCS3Wtd5D0Q4+vZ
FIN3nbY3ZB9CCbnF0IF4EbGj1l7ec8DVOWvj610h99p5vHI5e1w9X+Telvs7
Xva/p3doK6s/qcOr5CwndxmscfX7ciYO431DpQbs/sqzcTwk5wU8GKz/PtKv
QvRUmCF3AF5H66voTujOcMTWP9zT/zb5f5P7t4J5vgpXoDSg8zKLvDkwO1jv
fandF9DTYZrVs9TLFPtuoc2BI/868g/p67na3u6P1egPYE2w/m/8B6ucSUE=

               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwtl3nQj1UUxx/vU3rydH8iSzGyJluUoZS2KaOhRmJskX3flyyvfffy2vfl
te8hVISkZaZ1WkfEVFSMpSjDJEn0+Trnjzvf7z333Pu7z7ln+5Xt2K9J36wo
iu7NF0UxWDETRXsgK9Mo6sa4wOKkEEWlkihqwXoxsCSjFbwaeH9iOpPRacq+
UcibCRlT4MdYm8A5zZkfCb6GvDX4EmM8vAV4EL2m8MB5h5xLlmF+FBzK3u/A
V5AfybK11ro368edX82ye54ER6PfOTU+BN6Y38hGpxHYFfk55OORd0jt/GHw
0omdr9+pAW8ve4AddX94Eec/sD4c/bacNQb5eHAc8hHwNujUZz4U/jS4ljEH
Pg7MYUyETwaro9cJ3pN9E5lPhY8F/+TsbvBL4ADmufBBYD/GJPhgsBd7XwXP
c4fDWWbnFcy7JWbPGZzZx/W174zb7RT4FDrF9Dbsvca8C/Ir4MPIBsBrgW0Y
g+EvgzXcbrVj+x591+Ngd37jIvumc0495gORPyPbxmaHzuA0/y59XyfnPcCe
she8O9jBbfgE2CU1m1fijif8bqfBX/x99ea70VsA3wWuYiyBvw++w1gI3wfm
MabDl4JrOHMlfG1ib90MXgg+hrGM9Qz+vgichXyJ/DExvghcor3I7kRnMN95
OcveawFjBjqj0Jmf2F3Ko/Omn7NTPo7+z+h3QrcvowCyFcgWMWJ4b2R5qd15
DmdsSO07qnHODnA+8u3ga4x58M3g8MS+axK42v1qr/wqsfXi7F3BOW/Ay8Br
ylfQeVDnuS/NBS9yh2xwZmpvrLduwhnDmFdjvifYHu19MrH4HQ5vCX+Ltcry
A2RzUvPlH5F9znhOb4msEL/9tueQ6an56jnWD3qOGI9sLKMh/AtkrzNKwgch
m5Ka73yE7DijnfwY2algPj0VfhW+Ab4Ufgk+Et4/sbhQbmkHvoe8DvLG8N+D
xxL68xkz4fm4YwF/+0V6h9Rskx/ZDfRzZffU4krxNZBzyjFawu8G16NTWL8r
e8MrwesjvyO2+NV73yZfh98OZsXmz4q5gonlN+WZhcHW5A8Zzz9lwL9Y6w6/
kWX7dU5BsDBrbeHlE+PKRdnB9K4zRsAfQ55BdzW8gcfai7HZ/HnwK9kstTj+
BD7a37cV+z4Llr/0jtJRXH4cbL/O6ZxYrtM5XyonM5r4m76gN4zsXZVntedr
36v5N/BGiem0TsxfdKbuWNpzy32x2UX2UR1QzlIOGMPe82BX5DXZO5jfK6sY
8DzfTnuRn3Ud6Sqf/AaODXaObKsc3wv5P8znBntT6YxzG8rmdRKL0X7wW8GK
zivEdq5qx0T0e6SWp2fAS7DWR/EClmP00DvGFiv63qrKn4nFlHxStbUDvAq8
kMda8dhyhvxE+a+H59hpnD8wtfUcvV2wmqfccpfn7aKKh2A+1wf5KMaz8E+R
HfIYmeXxrtq7H9nw1PL9gWCx/wB8d7B1xVF7t7POb5hYTnhIuTYY6rv0nv1S
87dVyLe5LRTLDRI7c6/ra/8++CPIU+WHYDrD1DOopvmbbg/mL6o7zZF/6z4m
n1kMzw+vlVgdVyyUhQ9JzXd2sP4B41H4CGTVFaOR5TXp6A13sr7LY1Z5rG5i
76X4rerfpfu293yi3KIcrjvnBatPqlO6w0TvbQ673WTf74PJ1dcchZ9m9Pbc
NVc5Dv5T8FjinGmp9Q2qm13Bycy7yBfQyUmtTp5wrvr5K/wMo7/nNNlT/lkP
POZ9iXJmK3BCZGet83wom+i9lEvWIFvm9pTPjHaf2ep5V/Vadbukx6ZitHZi
+U15Lzu1vuBDt7fqSN3YfFU9xibkmz1PDkgtL3VULHgMqu+YF6zfVB0fA15h
vj62GndBfhlbP7NU9Vq9BLhKeRm+SnkyWK8p3z7pdpYNE/L4QvhI+DzGcvVI
idUN1dxN4Fm3oeyf4+cvS6wub0VeImN9jnJLBeQVvK6pN1ieWp0vjSzXe4Nq
7sOK+9n6Dvhq9m5EXjRjNVv3X4t8P7wSshn6PXTyEqtNs5DHyJf5HUrCs/UN
qifwvon1dfqu1L9R9WsbOBP5FrCU5yLluJt74VPBmYn1FKXY9672RXaPDYnd
cx3nLE6tbwroLEhMZ01ifYW4ZLqbfucedGbHdh/V1OXee5RFXixj77jUa6vu
f0vG/i/ov0MJ/WZq/VqRjPWlnSLri6swPxDbfdSDqadSX6ZarH7ssvcv6oVG
gH+7n6ifqex7defrwXpQ1fGb9Vy9cWw9ifroP4L1geq1csHZqfXg14LlT/Wz
W4L1e3qXLM7eGDznev+jWP4vWFzrPurR9N9BtXh+sDPV+/8bzLbqOQtzzv+2
obBD
               "]], 
              Polygon[CompressedData["
1:eJw1mHf81lUVx788F/Obj/cBRVKcTIlRDkzTLJPEVY4IVEBA9o+9Ym9B9gaF
nzIEWWquHJm7vacz0xQUxVyVopZZfd58Tn+c13PPOfd7xxmfc+7Tov/orqMq
RVF0a1AUDfX79bIoLhbdlovidtETok6pKL4t3Tcl/0HIGHcVPaRxe+k7iE4R
bRXfSL/DNP/L0t8n/l7RNzS+RPSIxr2kv0bjfqKHs7+7VOPLQjZT3/ZOnvsd
0RkaT5VsZtVzOAtn4ts7RedoPFGyb0n3Q/FfED9F/JXie4p6iH4s+U9EvxSd
K/1s6QdI/l3xLcW3Sj7nLdl34OxfEW3T+CzpRmj+ueJ3it8hukDjC+NO46Vr
l3zXmaK9MuiVkh1X2oadpRsXtv1R9hk521Wi80SjpTtRc76Xfd5p4ruI/7n4
X4suTt7jktgPW/4qdJM0XiLdWs05tFYUv5DsQo0n49PSdx6YvCZr/5S7iZ8l
vr/4WeJf13kHiT9F/Grx/xQ/Unxn8b1F09lb3/xWusdEj4qmyBdTRZ2kP1W0
UbJNojtEx2vuqPi+i2iMxlmyDdLdKKoXfUnys0V3a9xGuklxXtY4RPyQwmtz
J+52vaim8TrpP6l4/a9Jf4P4htINjvOfKRqqcQO+kW6tqCDe9HOSdJvFH5Rs
8zPErxLfVPxY8ROq/v6LohWSr4yzshZrcmZkzYNn7lLx7+s8fcXX6fvl4pcR
g9KdXnr8XsX3QbZFfGN931/8WaXP+N+K92S9B8V3TLZZl7AfMUJsoLtO9Kbm
95N+iPabK/7tin3QKYi93q1Yd63oHY37SDa46hhvFfFIHF1ROldOkuwB6eZj
E/FbxDeVvX+THYvEzxx9v0D8UeIHiD9Hc8eK5mu8XrJGmt+u9Nk44xzNXSg6
Urrhkn1Vuj9mxxIx1ae0D/ElMXOPdN8XtY34vYi1xf9da/UQ37Z0DnF27nCX
dIPEXws2if9d9n26i36v8aWSLYozsDf5y5zLJB9Y+tsns8/EWfqKDtMdZkq/
UmvOFX+Q+KXil4kO1ri96HGN10t/A/4n/0QtJW8laqxxN+me05knZfuF2CRG
yZG2mvOwxpsl2yp7Hiv+NnJD/DLNPa5mGePlojmi2aLjJTsh9rif2C689/kR
72AYWMY3fLuBnBR9tuY92esW0Wmlc4GcWK/5WyS7GSI2wwYzwNJk28zkHOJX
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
               "]], 
              Polygon[CompressedData["
1:eJwtlnlUV0UYhm8gefXnJcU13HAPl/zHpdJSS620xSw1W9wVt8ByQxFUVhEV
wQAFQUBAc8Mtl8qyU6e9zmk9WamltptatrhlPe+Z74/nnPe+883cuTPzfXPb
TUoYGR/meV4mRMCqwPP+wJgR8rzV6DWwyfe8MtoOhHvei/A8z8W0V6Mv0X4Z
rkB4pOfl4hXQlkxMCmxCH8TrSFsn6Awd8TvASnvXdGJ+Q88jbhX6HPo8LEUP
xRsIg+A9e0ceei2s0VyIeQZuRK+nfQMUa954iXgX0L/rPTAXryVeW2gDO/Fu
ZR49YCu6Gd4AdC26A7o9xMC8kBtvEToJFsM/xLRjLnvRZbQV0K9Q40Ala1WO
fxRqaJsNYehrfOu/UETf7bANdsA9tCUTUwWvomMZt5pxanz3jv14+2APlBLT
CL8hLKTvMcabiJcEt9PeD+6AKtqqiClnLkd4fgU2E/MsRKGraa+BLRBN3M2Q
gb7AeF3Qk4k7ib4CVyE5cN8RTt8IqAOFePmB+yZ92yWYRcybeI/TPhamQmbI
rY3WqNJ339iV76rQ+WB+L/P8ElSE3Hu/ZZzTcAqWMFaifWck8TFaE9iIF9Cn
AdSHePpl2vzj0F2J6QZr8XIhT/tle5lle/0cegU6O3Cx6lOOjtQaak2YYwuI
hh14JcS3RbeBGNt77cdi+nzNe6PsXOt8V9g4CbRXojdDLP4t0Mt357UErxRd
yhrs5rlWZ9ry4hzjnYeLlotlilUuQsi+VzlYg94KW6AZc4qCEvRSxsmBVXCV
Phl46bBMuRNya6i1TKftLO+YhteC5+awDO8XvPboXPwl9LmI9yf8BU3wG8Mi
++5JxHyEHk7ccvRTtD0NnaETJNF2nbie6OU29tSQWwutifo+SN8HYJjmaOf5
NvRrtB2F1+GI8hWvJ/SGRcRMpP8EmOO7eX5OzMPoh+BJGIn3Gd4H8D58aPPU
O95GT0BPhDthCd47lo8p6LH0fwL+1rrjbcBL5TkNTuNNwpsMM2AFbV/gjUA/
AmO03njNiG0KC2g7w3e3RreCltBdY+PND9w6J9PnBM/Hw9x37AlcnVK96gQL
iFkIsehuyiHVY2IGMc5AGOG7NVPu90H31rpYvr8QuNxvjG4KTcyrtbyYT9sw
4ofDOvRKOy86N/8Frj42RDeC5pY7Wqsh6MFwt9WwA3g90PczzigYDTND7jtz
AldrVXNT8R4lbhQ8ZnuUrVqunNH5hh8DV9vrouuBbzmTozqGnqt5wE+BqwfK
i76MPRiG6DvwWuG1hstWm84Gbmy9Y77dN8p5395xk+VsHfJonc4Y42QrJ+Eb
nXc4Dlm05RH3JXq07fUx9FfKNfQ4vFRIg5OqkdYnX/VCOeG7XC3F2wjFsJ62
dNUO9GF51IVii1WfDN/ducrzG8CDMLtzdQ/qHdk6i6q5Nr9reJWq/cpNy33d
yYdUI3TOtaeRbs9z0Ku1JnCdfuN53zjfrZnu5lm+W/s56J+Vx/Cr7dtsvDPo
7+GHwO2vcu9j9CfwaeBqgmrDNN/Fa38T0PHKXd2feCHmcgp/FnomTLfcmkr7
FO2DvV97rj0q0LdrXaFQ/wF4EVDX9k9eUciN7ePVg/rQn7H6wVDVZMsj5bXy
u8h3/yxaF51n1RvVne6QyFjf4cWhp8EUyMKbTp84WG3/Hfo/UK5q7L3ofbBf
9yIxY3xXK3Ru0kLuP+de5QzcB+/aGRpv9UV15oT9v0Sj74IBsAvvEByEw5Z3
ml+J7keOxzbluNZP9cbusI205/Gcb94uvJ2wPdzdb28wTl90H+gFi/EC4hpA
pN0tOqe7ieuC7gwdrTZpnYtUJxVje/lW4P7d9A/XP9zV2BSrhVNC7n7QPfE/
OO1WcQ==
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
TVPczsZexO8auBbf+R8lpBHw
               "]], 
              Polygon[CompressedData["
1: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
P0v+uyTXcBbORM75DHrLO4M=
               "]], 
              Polygon[CompressedData["
1:eJwtlndYV2UUx6/w8+mH127TXC0rRwMUULRMRMRsOtDcKy1zBVqZmuZIpdQ0
zVHmSNNEtoggCLIEFExjFJiCiTlSrEQMzbT8nN7zx+d5vvd7zvve95533VZj
w0PDPCzLioCG8KNtWW+7LGsiTIAEx7Ie8bKsh8EfvsMrxFsEC2ExPItXQLs9
bstKgi54xzwtKxN9GP814v2hH6wjVgRL0C3pry20g5V4IXhF5K9CfwEVUC59
wRZivxKLRy9H/2KbMcnYgqCWscfgR8MFYmXkfY0+jfYm7gP5eHlQoO8/SSwH
2qBn4M2EWfI95P5Bf5vxN8FTPK/BXw1rYTpeBe2a4j8ArWA13lFiP+tYzxD3
xfeD6XgP4j0Ej0MWsVO2abOLWCLslvdq3WKI5VG7fAihfR1jWUFuPFyyzTu+
RW+Fb7QuhyAIvYTYUlgGf9P+OnjQxzDJxdsOI9AjYRyU0i6XnBzwJ3aJ9x9G
N6CNBcXER5G3hVgVejH6E4iAA3hzoT3aR+oEubIO8FaiV0E4lOO56MsTytDj
dV0lay2P2aaOUs+f0JPwYojFQhzMB1+8PGJ/MbZ6mIfXB68vPK3vnY3XGv0E
PAbZug42ojfAeqi2zZp8FT0VpsGX5Jy1zdqulO+Ek1Ci375V6g3bHLM/ZPw7
0VEQDTWM5yJcc5s5+EzWHgxFD4FBsjZod4v4TWjsZb5xOTlXea6DFbr+C8n7
wTbztRFvE2zWsYzGewPG6HxI3nCdyxE6v//Q1w23meexeHfInlUtc70DHQkb
HLMfZV8O1vHlQyd0ZwiABVp7f7QfdJA5JyeV/vfCITjDevEmpyvv+ZMls52c
bZLLczr+PPRcmAPHaRtHm1hoT+wgbSPlvEHfRTwdfY7Yeeig8Wh0BuwXZJ2Q
N4nYZJgCA+WbybsB12EPOYPwXofBsgfUi4Ij6N/gAnQi9go0oj8bzuMlkjME
rx59DW5BMp4fXiE6njFkQTZMwGtCu/vhXsggLw280HdCY3jLMTXtqPtD9snH
eONkPuBNXddS01L6LIEUtCXzLGcBzxVw2m2++x3H1Ooe9N3gwD7bnBNyXhTD
VcY5QGqHLnCb77mJV44eqlq+aRh6OIyBf/H+g4b0l0osGK+S5yqohgTb1F/m
4Xlix/Fi8ZJkP2qt6vW9Uuej6BIoho5ytuFdRl+EGuir8yZzU0afp6AaJjqm
blK/+7SmAXilsg5sc0b9f1ah2xJ/EtrJ2idnl23WYk+ZK3KKFNHyjS7yTsi6
1fqOxBsFoyEMWuKdJV4LV3StNcVrDs209tK2AdoTPHSOqsithEtuc4/IWELg
lNatF/oFx9RK5qYfuj+EQgptkqGbnDfEDrjNGnLTzzPgDeMdczYEortDL70j
5bzvge4JwXrmSJ1r6acOrkAfvAxYKOsO5sv5Rk4m3n7IggXqdWa//k5pvpLz
UM5QntOIp8I++Ej3bzf8y+RFyRko+wbvZcfMq8zvOd1HJXjFMneOuYfl3E3X
fk6gm9NPC7iIjpU4sR48B+udKXdnoJeJnSb2IvSGl/SskHUvd8Vk9PdyZ3ma
8zRDv6kJbVtDG9hFXRPAV/fxTtvsYdnLwTpX8XKvwizazoYPIYVYhGP+bw7a
5i6VO1W8rnjPQReX+feR+2OHrBOY4jL/SHNk7tG9YYCMk5ypeOEwTddcpm3W
n/wbyD9CC/UCdU3E2WYfy37urutY9miQ1Msx/1LL8JbCpy7zT/Mo3/w5OhJq
mKsAnpPIe4/ndyHMZe5k+d6Z6klsr2P+S9ag18Fal/mnkXt6BvoDeN9l/n3k
X2AROptYDuSCzXsaQTMvE5P/g92MOxF8dB+nodfL+Ux8IITCEfq6DRqcino=

               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJw1l2eMVVUQx+/bfY/dy7vsoUrvva5AAAFpSlUEBKRIkQCyShcUCGCB0JEm
SAvRDyaG+AUhEBKEiCJEgkpEJQQTiRqKIL0sHX//zPjhZP5n7sw5c86ZdmuP
nTZwak4URTVSUZQLXRCiaH0mipomUVSHMRU8C14+uDK4LXguYya4LrxmjK7o
noqjaA78GfB3g+dCG8P/IjbdSszb8b0eeBb4XXBD8FLwcnAFxpV0FD3MRtF8
eB3R3QbdxHgGvBG6wW07zpql0K0OfwO4pfTh58lmcBr8Hvw60MrIVIOWZJQF
50MzjArgPOiDtMmkwFfB5cDXofcYAfwbtGzG+KWhp5jngX+FTmCPDPgONheB
T8NLs/8t5j/pLAXYjk5FZNpmzA7tpbvoxKidsjvNc3tKQR+jlwU/hOYwLwOO
oHfcnirgAkYpcAJtwZm7gX9n/1rMy4NrQLOMquAy0FaJ3eU2bPtI7wB/HfQg
OouhS+EHZFqBe4NbQmsi0w76GTIDoKPgN4fWg98aWugykj2GbTH4OHS4v/s+
8Gvo/gC9wz0MBT/hKF+mzXdaIvMOtCf8PfDOIzNH50mZf+yLTUZvXR/b5sH7
ABv2Mp+t9wU/lzEf6JqxdbX+buh05s1T5rt/+Hvp3V5k3hD8MrSPY/F2xbbv
Aegat20VdAt7bIWehj8Y3Bv8CbhRYj55VOeL7S7X8/1DxQf8ldCtrvs0so0T
W28NvBv4RoTMcPQ6uA+M1j0onsDdoV0Uf+Ae0Gb+jk0UM4zW4I+hL/kZ+0M3
su4Gj9kl0DYpe9c5sfnJsthsWA1vHbKX08a/CW0fLE6yfK/rNtTP2H5NZQvf
Y77VVByCE3BDcGdwI/fbBi4r3W2x6Qs3db7W6op8afexnv6OuqtDsdmueB8B
7c63FvJxnSW29ddDN8fmb9s99mVDp2A+qtjqBe7BGKb7SizPyE8W+r7y2T7B
7JNtT8Ern9gdD4RfVnEEHhCMr3cYBC4JrqZ4QW84874Z0x0DHqx4BjdhtEfm
R2ReDxYDsqEGY5zeCl5Hf1O9bTc/o85VKbH4GhkMyzdHB7szvftqZIa671Xg
+zC3oSK4XzAfKpNYHlQsyD938q63cbMd0OaJ5c5FweJIvq3YqgWeBH8m/J3M
p4Fngyd7XEzMWP4X/234UxkTFPPwjiHfBZmTsenK376BbsnYPWyWX/v6M4Ld
i/infV+t/ZZqBfOL2FgGXJiY3mbwWXgJ8pegfzsWr8h9+03FNbrPpyy+Lnj+
OQd9A/0FGYtl3b/iWvH9iueWodDDzDsrh0OXuHwDZI/EFrur4C3MWIwvgi4O
Fnv7+T7Pa5xq3wnmnVLGVy1bBn8l35cr7lNW2w66zC9eE5XHJijHJmb/GfjV
wCPhTw6GR4Engau7/0wBF7m/VUks/2ivFfA+j+29VHN154XgPbH5pOJ9bTA/
kD/0gF8vWP3L5fs1ctFBvp0rsPwvP1+LzH3453XvyL7K/Aj4OjIPsvZepYPF
nOraitj4equy8Mcwz4E/GfozvJKqTdDyiquM1WjVLeWfWci8EFs+HOF4L7L/
sFeHYPlIeSmdWN1uBG9abLaFYDlf55K/9/cYUywUZ61u5/gdjoXfF5xKrI4v
1J7gR8jUDCavep4LPgB95LEzJTa/Uk/ymHEDXqVgNUu1Zph8MFgtVL7qFZs9
smuHrzME3lFwvmIKvEBrqkbKtmB1/UnW+hfdZ8WM5Vjl1Gf5/oC7OIHMePRm
xtYbqLe5gs5d1u+rfOs9T+7/d6tcE2yvKqplseVJ5U/l0SJ/o9Gx3a3saRBM
T/pNHCv3Kgdnmf+lnog9cxLrlWp5n5NCZmRsfPUptYPdrfqXyP3nPnAA9F/O
8hX8q+id9XOpd5J/qHe6VGDvq55nvmKWcQ/dftDLfNvvut96rVdPIT/U2Zqx
16609R6Ks8vIFSPTJzY/l52jlKv4Vj9luT6TeH8UbM1DWp99SiTW67WAfz1r
/n8NfrH3iuoZ93tf8bX3OQ/YayD0sL+13vy294H30b2ZtV7odoHpSFf7jQ2W
mxTXKffJVLAYVD4rAM+OzfeK0T2Ttvv5M211Wb1eVWTGee3b7vemuL5SYH6r
On8X/J3fm85aMlhu1ZuOCNZPqKbI7u8Zt/yt5MMn02Z/LvuOje29FNfTYzuj
+r5HyOcFs+9u1u5NPqZ8oJ5Ha95AZqLnVuVb5f80MuOUq4Pdr2Lhfe9zlAcH
+d3K/yv7P8KjrNVl9STVvC6pto6BjtfaKYv5con1hm2C9bHy/02qdcFqiWrZ
kGC9oGrrp7H1t6rpJYL1jjqLYk156SL2F3oeU08lH1PveqHA3kj/AvonqBjs
X0J2jnHblN/zPY6UG/8DOfp7eA==
               "]], 
              Polygon[CompressedData["
1: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
vgWLdSt6DvAYPoifzIgzn58c09zF/wCJZn0G
               "]], 
              Polygon[CompressedData["
1:eJwtlnlQllUUh19QxNfvk09wBRcEDbUyUVsVcUlNQTBxSdxQQHFBUHDBRBu1
cMsFE1zGlplmqn9bzEmtbBmnzHDGMtMps819w1wRtec39/zxzHfu75577n3v
PefeLyG3OKso3PO8CoiA+ijPq2noeTcDnncf+wE8GQI6n4KBEBP0vCRYgT2T
vlkwG170PW8kXGPMQWJMwB4B6XAebQ/aFeLOxXc6Y/MhF9oTawo+k+Eififx
K8COQx9L/0swDgoY1xYtG3svPp/BELRnIR6tCX2VjNviOy0BrSN0AJ++SWhp
2OkwCtqgDUV7HLs79IZmaFWM3wpvwTDNj88Y7NGQD0eZ91/W2RrfEfRn0z8B
JsJoSEXrD0OgBT4tYbjNm2bx3iTOLmhlMcajzYFp2FNhErQLujkysEdCpvlp
X8bIT/6QC5O1//ZNU7Bz4B3ivw2x5q/9i8Lugd0TkmEwWhY+o+Am33SYb8vB
DuCXqDXofKCPjX1COYA9CJ638xiPloedr3OFYdDL9nK49hxWE7MC3vBdDM07
SjGwB8EAaI7/BcuTNPwmwiTYDJt8d1aKG8IvGvraPmu/M+m7Sm7tZ+yX8AVc
inJ+feifAjnaR/x2EGs7fOC7tSuHsuAF7KFam51bKloX7KZBlw9Vth6tq87q
5AZz3oFT2L/CCYhk3Dn6d2MP1RyQrVpAT4cMyLO8T8HuC/1sriDaFcYeYOy1
gKsJ1cYM+pfS/wj9e2nvg1t2Xv/hl0s7z3d7sA/tFzgOl/EZrjyGs7amywGX
k8rtMcQdC+PgNv3X6X+gb8K+G+X2oBt+XSHJ1rcIbSEshmK0xKBbj9Z1RGeM
toK+8JDbD+3Lz3CbuMn47qR/B32/43sKkrB9jcHeABuhBn6Ek77z34nPSliC
XQaLoDOxFtgaPsTvK/gaHtN5oU2ECbaWBmgR2JHQSPuIVgmbsTfBBuiGzzK0
cliu77M51mOv0R5gf0/8Q9AA7Q7fdBeO2bcVahx+r8Bkq99OUIq9EBbAUnxK
YS52IczWHYXPb8QcFMa+0N4OPdDuEvNv3TXwDwRs7Bz6E+jfzZhPfXefKp86
oH1E+2PojtYELQDREGF39krsV2EVVODTLORia46LcI85jzN+AGvZgk8lHKYd
j999+sMUg/YqCKKdRSvGLodlsATKYA20UB3h8z72e/AJlNge/ISdyhwVtF+D
A7T3KwZ2FaTQd9R35zuf9jwoslxLQKvTWrUetHC0Y/j2Z8zrtNfDQdprdW6w
zs6vC34n0Afit412te59tMigW2sP/JKhJ5zGbzB+5ei7oBc+bdAvqX5Uc1Yn
9+Eqdq3qFWLxyWRsBpyxOh6r+wt9o/JNv5ZrtwLuLbmH33TVuO/yRXtUplyH
l6E3NEeL0Z2q/MWno3Ja3x7hHm7tgc7oodYF9eChTSPmVCiEvyyHdG7nsc/B
GahjHQ/htu2p9ra97ntoCiE7Z/k9HXLvgd6FNtA46N6KTqop1Qs8h09X3We6
O6y2GwZdnSsflZeNTdO8t4gdR7utchifBay1FJZDQ6tV5bRy+3Pf/e9Q7sYz
vgB7FsxUflida0widifoHHL3ge6krdhVUB1ytaX9aKz1qVZC7h7/A+1POA2N
bI4Z9ibrbS5GewZSsPtBrO3BfLR5UGL1qZqutf9BtQF3BtPsHdB7cIO+7+i7
HnD3kHLi0aC782rsfTlE/w9wxP6PrbQ7aQ/938C3vrub1qGthdWW49FoF6yW
Y5Q74Ck3iBlmdazcKNLdAfX4XbHcVS20JE5raGX12xbioF3I/c/SfynlqnJW
NaE3Y7HvakFxWqK1gtYh9ybpbWpmayrB3gbVvvs/pv8s72L/D7P1QAI=
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJxFl3mwj1UYx98f/V7u6837iiRFyDKWweDad127i+vKvu9LrhZLYy2lmqZt
+tsSLVQk2kgxGKnRUJZUyhJRibJvqc93nmemP955vr/vec45zznn2X5VRxcV
TCsWBMG9mSAojhwWBcEL4OnImmkQ9AmDYGwcBEuyQdAZ/lhOEOQzNgi+AePL
nNf4ePT6w9eBn498Hj4P+SDfLHAh8gLz+4CXoj/O9eui/w6/832dt/kGgtcg
I8Yng0NkLb6HwSWQu11nJ7Ivv58G90MWx7ZdcJuTIDjHXj3hA7jG7DGU8Yns
2Skye/pGZofsWYGcENu56qV2Rq05XHPhVzK+nDULwA/BN4TvE5td5+C3MD4E
/susfbJhJfx9jFfmuwm+wJeC+zGvDPJR9Msib8CXRxbCV0IWZWzeEr+T85wj
xaamcEPRacq3lrGlzGsBPw9+OtxY5DjtB3e3r98isj2ExVUITV5jbjXGxsPX
jf4fuw7fl7US8CXwMHArcHnWnAx+Av0B6F/I2txLyMr8HgvuxfiP/B4uP0F+
wzcMvA/ZPrJzNUb+lrU3PZe1Mel8jzzINxi8H1kavUO6S2yoyN7tsGFEbLaV
Bv8N3xn8BzoHwF1is0G2XOX3XX6fr4NXo5MLPoEciU5JxpaDH8/YnZ0BDwX/
jvwpa+scQZaL7CzVtSa/x4AvZ+3MOvsNZFXmz9AdhuYburfzendsbus2j+Gb
j05v1hkF7gxfnfFq8seM+YfOJ50OyNHo9ELWQOcae0yF/xd50+/2etbW6YLO
/eiU5WvmvpF6vChuKoY2V++qd2yJLJfa3egt5GvlQjuL7jTX3ygP2QT9buDT
+N4hznOePSvC70vsHvNiix3FvnLAr+i9gXwtsbhVbL6PnMu6z4DnICcxZxSy
JTZMQi7K2Bn+ZE515QnGx3veWBxafCnWzzI+hr1ngPOYWwT/HDqT4dZ7/K7T
e4bmn7Pk7+i8Ap4d2fsrjnZkLZa7gk9i70z0Fmds3b9zLKbeZK9Jkdnbw/ea
De4KnhWbXYXgac53A49G/0XWeRhZL7T8UEe5Cp2XtT78Y+AndSb0cz0fKq4U
F3qXO+EbO6/xmei/Cp7LeGvNVy6K7Z3nKa6R3fnmZMyfFoV2J9rjIfQeQXZM
7Y7Ez0JOdb4TfEPPCfWRzeD7gW9yB0We/wch26I3hfEpjE9FPgs/TfP4Fuq8
2j8yO2fE5gN9wVeQS7jHrdxn69h8Sb6xAu6Ux+D2rMWF/Ly4fJh1jsK9576g
PN9VuZG1NsGvhT+eY3l4GTjLnCqM92eNAbHFX0m4epH5fBPkP+h1hB8ZWx7U
eYco/4cW+6uytqb85yKytt9nA+Sg2O6mFGv+kmN+Ln9P+N0IfnBsOtKNUqsH
evdWyMLI/Gok8hF0FqLTWn7iMT4ytFq5AFyAzmB/04GhzVWMNEW/RWxnX8M5
moM/Um1MrOYpvrZl7a31LuOZly+/AfcMrW7rLPKRYR4XI0LL4aoRzVl/gsfg
AmQx5j+Ysffa6Hn4M+QT/u46g/KX7B8cWZ9QpLyVWj3Q+lPly8zfzLwPsHO6
12XpdY0t3x+E/ws5Gv4sslpqviUfk46479CplVpdV+/R02uc1lfPoD6idmr5
RHeZC24Tm09tSgzrbj4FN/S6r1pfwfNhHfBJxoqFltu/dnv2ID9PrLdoG1sd
V02P0Wnj96W4uCc1v1KebJTa/aqvKMXvA8z5IrF8JL9SvyOsXPhWYrW7AP4a
/Mdwg9TbMG+DY3GXGfsAuVq1mPWfCi1+FafiV3m9U+3bCG4f2747ErNBZ6mA
3M7vvfDtYottxXhJnRf+MHxH1fbY3vnDxLDebj34DF+GffPh8r2fU4/R0u2/
qnyfWK+m2rrB4129VmWvazXBVTyHyGfKuo/J1/ajf9LriPKSckkHdCulFp+K
WfUA/VX72GtPYrW5U2znVY+wE66C11nlRvUDquGfwG9LrP/Q2bck9sZ601uJ
5Q3lB+Vw1YouqdVcxU0x8A+J9Tfd4LrHVvN/Tqzuqv7ewdwgtdqv/FPgb6Qc
WMb7NOWZ2HOFcsLFxHo+9X6Xvd9T33UbOjW89o31vNQlsryn3vUscmBs9aRE
av6hPPAua0xE7yV0HkWe5ncQeg/m9Vr250QWy3pr9cbygeusWdzfKIusBD8F
XDuynkb9gHpD8Vf4fcTzj3L7pRy7B+kd0x27L+ldksj6KPUJNTz/KKfKn3uA
zyC/dTvlVw/ElvP3wvWIrcf5zXtm9SG57kv6fTyxGt1dfVqO7S87jib2RrLz
MLhDbL3kV4nlz0L0b+WYLys/347c7bHfOzYfVL+knvRUYvfS221TD7susf8F
ys31uf+tHlOKo9Jes1ULtK/61V2M95SfgU+A/wNtL5jE
               "]], 
              Polygon[CompressedData["
1:eJwtmHm8V2Mex89PnZPf09E5qZAirdKK0r1tupW03ZZ7b+kq3fZFWqSNZB9m
htes/pYYUxONKCXDaDDGEs0whilLKpIlFCXVLZ+37/eP7+s8n+f7PN/zLN/1
aTl1QeX806IoqihEUV19D2ZR1CCJopnCLUMU9cmjqLdoYRpFN4ieFf/FOIqq
GS/+VaKxois1ZnBucy4QfZuZrHPUnqqx32rOh8I/FqOoUvh54T8JD5DM8cLv
Cr8p3Fcy5uj/v1DfBM19T31fxybjbOHTRVVqv66+fyBP1EzjzxWdk9haV+j7
+4KtmfWwl+80fqfGHtL/RwqvFX5EuJ7Gd9D4eerrqrHH1HemcCNRU+Sq7xrx
vtL4/4t3XNRc/bPU11q8SFSu9rPibxTv76Jtsa3vuczOiLN6VPjPwm+JPlJ7
gvqCeM1F09X+UH3/Fq+f1rNA8u9W3zXiXSF8vfBvhacKXyiao/anGv9OZmvu
Ikpy20t7ta8T/6D474pfKnyDcHvJqC/+Ke1/rK/38czulHNaonFLRV+KP0z8
9eL/RfxBua2Bf09zor0QuaLNGrM1tvt8Su0S/199/e9r4UKw/+0U/z/Cg9EV
UYlkTteYl9T3tnhjNKZW/35SeK/wHtF6tc/S2MnifSL8X+F5wvcK3625Vbnp
DLrznmi72r2D3WUn8VPXyWVq31EwXR0ufLPwL4WnCI8Rvkf4PuH5wg9JxiOx
2cM+redl4e3cjegVtU8Wba2s+dXMdJC75s5fUDuXjInivyX8Ymb3wX3l+sd3
mekwuvym+FtdP8bxr9hsCx1D1w6IdmRmM9gO97lL7cNFWxtrXCXcXfPnFkz/
T/p5TRF+Rfy/ZaaDr6r9Wmy62dDX973wx+i6cI3w++xBuI904SrhF4QfEG4i
/qSC3Ql3g86iu9z5Zr/vhcJt9P8DwrHw1cIbxV8j/LnWO1R4tfBK4RGp6ftJ
4f3CB8QfLrxJ+K/CT7t97BI9o3Y7yZstfh3J/0z4SfU/IVrHeNGj6tus79Oi
x9RuG8w2sdETwhe5PWDT2PYn+t9g4Yc1/sHM7hydQpfQhTZ+HifE/9TPhzPj
rI6p7wc//y1qb1Bf4vtFR9CVZtiI8FHhvcKVuekqOnudeKmfH3tkr+9ndhfc
CbozWuNHiRbpnBaLvuEfiekQtn/C/c95ohai77We0eJt4EzE2y2qjW39x3wP
tOnbx/4zO3vuoLn7H9a813lH3T9zXw9nZiOTRcNys50hat8sflv9u65whegu
tf+ovuXi7dGc1sKtROeLyrWH4aLP1f+F+yvssyDeV8Kf6X9DXJ+xPfZ+h3h/
KNgZdNP4Bfh+9R11/cKfvoHPcXtC3/fHFiuG+vpGa3w7yarhHIVLiQ/CpaJJ
7g/miNcT/yZ8p3B1MP6MxHwTPor4QhzoKV6vYGv4QXRpsLVtYV+xxYgzghF3
zN3C20RMiC3GFYP5d+Lbb4QnBrPRl2LzcdguOr/L72dwajaGDOZie93Yk+bf
KP4Vwj2EJwjfIzzG4/Xtwr8SniHcVbjK48lI4f7EcuHbhauEB9Anaq/+i0SX
iMY5n7g+nLsXdVZ/F9GlPmasx376qjX+loKNvVx4nvBt3EEw/cHXTlNfr9zW
ND1YnGatk4KtnT10ym1N/Js1dBQeKRqRm41iq/igJ0SNg/kmYg6xB53tlVp8
uUntgdiI5q3EzkWjyAGKZvPYPjazp2g+Dl83ghxFeLdokNqP4f9El0nGZMm6
VX0jguUM61weuQT+Z4vHi9LUbAbbwed1F64X7O6fcf9EDvBybD4f308fvgs/
wlhyCGIzMZPYucrjETbSLbWYDZ+c47j+39T9DfHvn5npH7q4zf09Z7U7Np/G
mf1L+B3XR/73nMcvcqo6wWIWcSwL5o+QQexIXbeJycRmYkSjYD57k8fvnqnN
3eb2gIznPX7iI7FdYh6xaYrnc7UeT5GxNjP/d6fO+9fqmxVMHypFZbnpLjaK
rT6k8efn5vPwfRs9BrRQX5nmL9GYvhp7JvoqvKJgesx5cxdbPHacyix/xEf0
ET/KrY8284k/bd3v4s9a5qbL6DR6vNb3Tww7or2cJn65+EuF+wWjy0WF3HgX
4kc9vyW/a5WbTGRhG41yW/Mwtz18WKWvH9/WVLin21u58Lm59dFGP89W+yzR
wGD+4VjR7pZ8bjWxQ7y+7j/IwxjbW3hZweYQsznLDR5nW5NDiX9XwfJxbBrb
HqW+tuI1wY4T89FlwWyOfyAbW8R2l3v8w4Y7BIvJxGLy9Vp91+g/14vfA3+k
8fPdf81LzT/UBMtByUWJochC5tDcdARdWSw80McscX84yePWUuHfCc8OFsPo
o32tqA1rTSxmENuG5CYLmQtSkz8zWFxCN6s8nt8v/tLUcgb6aC9LLWde7/ZU
klqNg3/a6jkYMZ24diN+CpvS3M6uL/hhYupQ4eW+njrovfufaZrXILc5/d13
k9N3EX9RwXL9INzV94O+FIVPz00H0UV8/Bi/b+Z3yO0uudOZqdUQ1BLj1K5O
zWfi69a5PiCro9sXMlf7fqkZDhbNJrHNVbHF0DWes1W7/XcMVo81Fu9IZrXi
DOE0sZqRPnhNEouznV3/iWHEsoaiixOzaeyEuDUysT2wF2Qg6wzRoczOhLNp
SK6UWU1AbcCZc47UTp1Fse+bM+FsuiV21tggtlaSmG3iE9h7y8R8BWeMbbIe
zh4bxBa75xY7Sjxek3OQW/ycgyRmw9htM7cfbLK5z+eu+yVm2+gAujA7MV3F
prFdxmPrxGBymYmJxeZBwWwRmcjGxxD7KxLzPRczJ7H4ShwnBhB7yF2JDVe6
/BrPf8p9/+MT2xNEm3j9c+4RzJfh0/AV6Bi6zPmiewX3x+hwHc8biO+LEnsz
gGhjc9jeeN//VOELsOXUbA2bq3Q95vyRiWxyAmq3WxPLFeb6edxE7pkb0cZf
4IsmpKYP6BC6NNnzD3zEMD8v9kOORq5W5vkMPmmA7xdfOCuxtwpqLmovYghx
Y5n7I3LiCs8/yDeoOfbKPq4OlvvN8fmV7k/5R5nHAWILbxjkSPgUfMsK7iFY
DXCt+O0Sqw3wYfiyRaLFwWo4ajnq7dfUrnB95s65+0Nuzw96ftPf7wsbwpZW
ev5CPtUjtTiEfmOD2GKN6xNvEvhk7oi7muaxkbx4PrmPcOPcfDq+nZqA2uBj
r3cOi47HVq/wbRXsPYUcm1jMeZJ7v+32jI9oId6XXkdgs1083mEL6DuxiBqU
tw7eIKhNeVPZ7nUZtQ5vCPs9/yDf3uf1EjUjcf514R1ej1H34UPwJdQslant
gbrrsmB7w0fhq9gze8dn4jvxk+g/byD1EquRWQ81FrUWNRG1UZbbWTH/kmBE
G5mHNS53f8GZcDa8IVDLUtPytoBPq+/7LfUcgtg5N7HcAn1gT+yFWpYaep/X
yeQ2nA25IzkkZ/SGcN3Ean7ya97Mdrif5i2NNxDeQnjDqB/sjemb2OrT9n6H
nGWt3y1vFrxdsN7zPJayPmo8YiqyeevgfvkH+Sxvhrx7fJRZvsD7xo8a84H3
HfH1MhYd3+n5coNgOoIsZP4vszeyYmI2g+1Qh56KTWanYLpEXyePA9Sk6Bi6
Ra36E4JOfZ0=
               "]], 
              Polygon[CompressedData["
1:eJwtlmlUVlUUhi8YJh9XLormkDiFmuSUDAqooQyKIijOOCCaaIpihppZ2eDq
V6tp9bfRLGtpow3aZKZm5YCkpuXQIIKIM2JmSs+7zv7xLN77nn3Od/a5Z+9L
tznlhUvCPc9bCxGwNOR5z4Xxt7nnlcNMnqfBfPQaeJaxcp7fDjzvfSak+J53
PdLz/oVl+M8zvoK45TCX51CM592LHgD9YBrxRTAQ7TPWEqIVQ+wASA+5sQCv
Av0C6z3K82p4gOe+0AeSoCteBHHFrDcM3R7dATpCFNyN1xv62+8Ox8uAEbAM
rwxvkUB3xesG3WEp3uN42ZAFqXgz8FLQrdCtIRZy4RG8VbASlhCTxr5SYbrF
xxCziOeFsBLW4hXirUC/SG5P8vwELCP+fhiPnqAY6ElcDyhA50MezCEmi7mZ
MB5m4CXaGdyHHg4Z0AXvLhiDHg05UELMed7TOdjE+9vK+7uBXu67fY1XPqy5
Gh6Dl9lfKf4zyo+YSMb7ovtAAky18ytT7rAYhhGTBnO1V5it90ZMb70PSIBJ
ePPw+mk96A/T8ObjtdV83Tv0Heh2kKg7AW1sLAO9wHe5D9DdgYHQB6bjFWlv
tl4T+d2C3eR7hHyjmTsbfwTjdxLfCeJgF+M74Qc4RFwGMReZdwE85mzDe4Wx
Op7PwKt2/y+ha6EG3sBbj5ekdwEH0L9AFXzP2A5bO4r12kOHkKsb1c86xnYz
1gzvY/QX6C3wNaSz1pd4p9E1WguG4l1lXgNsZOwzvMF476I3oweh/2PsJtTD
WdhgY43KC92TM+gFt8M44i/hXYTLEOg+4GXCceachBNwgLEhvjuPT9Bh7Dcc
rtqcQt/Vseq5AB2OV629Qw1M1HvFa0Rfg38C926q7KyOwnBi/tYY+jo0wRi8
qaw5Bcp0P60udddK0BP1XqEEkvGSIMXGdP9Uv4M0BwZbXaYoFrJD7j7ctP21
Q8dBJ7gRuH6ViE6GJOtNQ5kzBGZZ71G9xcMC/R6MtHpT/Y5VL0QXED/O7nGS
rZdud70z3jz0Qt/lqFy7QGcYi+cxVsVeRhKXA6PgYes5mdbPFqNL1avhHquz
UrxCnieEXH2ozvK1byi2OpqJVwyzrJfk2trlvutbi2y9KXiTddZWv+qTeg95
yhHyY1x+yrMo5Pqq+oH2V4F+CB60vruK8ZfoL0/z/BRU4P1oNar3/xP6Z6iE
3/B+hz8hi7FDeGfRI313PjqnYei9ePthH3wTuBqsRG9DfwfbVbPW91J91xfU
HzbjfWV19qlqSfUHn8MW+60c+91z6HqoM2+regZ6F2y3upwArcgpFlrDlcDV
R1t0G4i22jqPF4UOQXOrwQ/w/rA8P0R/BIfhEt5FOA+jfFfXqu8WIZej+otq
9Rh6L3of7A9cDTbTdxJugz2qK+Zdi3R9RnmnEZMPYYy31HfZ7lqItSNVG7au
aj8bXY0+A7WqWetrv6IPw0HrneoJ6g2Vlk8suq3uPsSHXF/QXib57jt+C90E
nr5bjHfXnQu5XqEanExcPHoU5CoX4qrJ4RS8xvg6fiORmDetB5+2HJVrsvoi
3g7YCesD945i7Oz1DhqUQ+ByUm4X7Jz1TR5n31B9S3vxu8fUuxiPY3+9IQFy
ibuCdxUadF+JCSc2DJpZD9C3W+d3ivEWPEfCQeJimB9AR7hsc/Ub6n3qgY0w
2ndn0MP+p9H/NucC9y3LRG8g5p0I18NOwHE4afvUXJ3Be+hNsBHeCtye9XtH
0EdVZ/C6neVf9m3RN6YW7xZeHvF1qofA3Rf1pFp7rg9cDe6xWlBNfIv3P95I
TZ8=
               "]], 
              Polygon[{{4102, 4101, 3157, 1569, 1579, 3159}}]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJw1l3eMVlUQxd+y+D54e8WHogGDUaMmEjWWGDUaS9RoLLEGpEpRijSxRBEQ
kCJdYFl626UsHZYOuyC9iXTpvYgoRSAIAkH8HWf84+acd+7c8t07d2a+uxt8
+l7LUlEUVc6KomywKImiQvho8PsQRSviKOqURlHNTBRtR68BvkvbBv8EPIXd
Rvgl8DS2C+B/xjZ2OdiRsXditwb9PrAt38XoXeh/M2NjXwcvMH4LvGxOFPWm
bw68BK0efTvgdcFGtJ3whuA7tL3wVmAz2i54U/B939uj4JXE9nuJNWcFs8lm
/jjH5sguH0WPg+vRHwF7sq918LfgMxk7Hb4MnJLYb/mOeV6mbwP6i+BitGlZ
dkY96fsDHMA639IK0HMZ1wt9o/rRptA26XzQn/Z1tf6rGfvtr4FP0VbDnwAn
YjcLPhdcwNjD8FvZe1f4EuZsl5qNeAf4bvhKbMbSvyjY2QR+Yxf6TmGTh/aR
r1UfnMN3AzDCZj9j79Vvw7aPzgr7vvA7/O50h1u1FvwIWEw7jM1gbG7TWaBX
AHNoq7RP8HbaCnhFcDBzXsZ+MvZXwGL0C7GttRv8IbU5S9BXg32DzZ+HPgP+
NnOchU+lbyo288GsjO0nA97t93IP+A/j5sH/BkvzvQheCixPWwY/h74ntrPV
79wR25y/gCFjPlwGPB6bDxwD9/ucB8FfnS9J7Ftc2tHY1vodLOt705kd8zFD
2f8m/+3bXFPfEPQj4Gz0Q7H5SxH8fGxvQG8hN9gYjdV5rfK9rQfXxGazLrZ9
a+1hzHkDvnIQPc2xs9bYs/JR+vbpzJnzZGx3dwksZK3J8G7o3VKbt3uw96B3
cUz9fD/H92H6ewU7s1bwNrQSf9dfw+fDO8PrwPPgbeBTg72b43orqfn9tGD+
/CM27dG+gfeF14S3hveBV4d3B/PZQ2/5emL6B+gzsanFPJfho+CV4MtTe7Pj
sR+hO+L7GfRJ9A9g3Cj06X72OsMZ2Iz0N6L33gLb3ejNwYXBsAxvpCLneBS9
GK0q9pMVE+BRjsWna2jz+D6Ezc1o15nrALwcPJNjc1YAO2AzBj6Q/mY+z0j4
ENoI9F6J/fYh8E7w3u43iiG5qfmi7m62v9+s8vZe5DuD6B+X2r0qFumNa12t
3y+xM9RZ9pCt7jq2Jt6e/nO0N5jzDHNspVWBj5PvwR/M2Ntv7TF8vGIkPEJf
C58QLG4V653Srsq30fbAq6EXBbuv2vCraKs9voxG66Fv97cBzDWc/fRILG7L
/gr9+XyPRR8M1kHbnGV3L58ZCu+Kvj61WFAQLKbpDW5W/EwtNg1DHxubn0+I
Ld/9BDamvwiciD41trVmgV+iD3Z9ODjC/XCY7kB3Bn6oe3ebIteH6Wx1d36n
ut8ewdbqjn1p7qxxxvLdUt+P3oB8YBzYCJv2wXjD1PKx8rL8rV2wcxiaWK7J
x6aBvz/lI+WlLR5DpsXmb4Vgc3+z2xV34f3hJ/Sb4LtoVTOWx5t4bn0Y7Oex
QvH2XGp7nhsst+7H5sYcu1vl1uoZ25P2Jt+46HPq3kcGyw9L0A4lllPOJBaX
s5Vv0ccEy0E/O1e9sFG+nFjtcRU8yfcrHjekvwT/LbU5lGt2oIUc29tF+Wcw
fz6fGletcRpeGKxG2JtaXn5evg0/kFpuVqyQjeqCfZ6DlDcv+BtRTXItsdio
3LQDm520+/29zA9Wj1xILe5pn8dSi59a6yj8r9RqKe3zBc+ziq1VvC56QDVA
MK4661psvzHbz0xnN8vjnnLsCvha2l3u/zoL2efD16BX9re2CH4TfDh8ULA8
OUk+TEtUHzCuKLX8OpT+W7xWUWxd7DZ6RyOC5fmlaOsSy30aW87z7GO+/yfB
El9T82g+5U7lTcWNDYnloF3gQ55rcmOrGaSrf5DXD9OYZ7bHHO0t43lWOa+r
xxDlr4HB8nwh2lyPXeNdVw6coHjiNZtyaymvE9YkNpfy6ByPYTpDnf0Ur10U
08p4nbAC+9Gp1b6qryb4792v9xgsX1TCH8endi4683V+R7qX/964YgvzdAwW
k1rQ3zZYbKnmuU/xWTG7U7D49AV6QWxv/2P4JO0Pm9mx5QXVd9dTixWj0Oql
Nlbx4PPU7GQ/iXU3u9+qbpzvddHC2GwUA2vRvz21u9EZ5nmsU1zsnFitmwcO
9Nz6f04R74v+lcdH1QMj5WtZtvcC52M9NqqWaZJabFWsrQuvnVrOVv3QMbFz
0HmUJX62zFg+TZwrL7f13DoosTpBsbo/2C9YXVaQ2v8LxcDPUss1Op/6qf0W
1R414Cc8zpzxe1H8bIoWl7f4qBi40t+U/Fb1hWLUsxnbv9ZVvv0XzPgSIg==

               "]], 
              Polygon[CompressedData["
1:eJxFmHlwltUVxt8X4X3hfl/1YtVWnXbGOm2nddppp2Onm522U6e1U9vRaV3r
giK1bthdq4JUWxEV2XdCSAgkBAiBBAIECIEIgbAHAoQdZJGiIAIVivT5eU6n
f5z57nPP/e57l3Oec8697qG+tz/VJUmS29Ik6arfHSFJWtQu5EnSEJNksXC9
8JksSSqFP5CckswrJsl8yWm1f6Wx7Rrzb43dIlmu9nmNnyFdVkiSbpIo6Vmw
OZjrrGS62rM0fqbG7xYeI/yO8FHJv9Q+Lsl7Jsnjmn+fxjToe8fU91PhVcL7
NO6s8N3CW4Q/FB4pvENzdUpGq71MfbOkOyQ8MdqaWfvlWssnC/aNn+n/61L7
9gDJaLVf1/g7pTsofEDyntq/0LiRapdJP0T6e9Q3VHMNkUxWu0wyRLJVug7J
ULWXaPw8jd8lPEy4q/bzsObpLemmdg+tYWNqfeguaPxW4QeFuwiXCVcJT9T/
H9D/Dwm3CV8rfbPwAsmX1b5Bsoh74RvMLZmv9jOSOv23XvKs2u/r/xv0//uk
/0j4iPBa4euE1wjvFH5L+FPCy6KNYez9kkTrmSx9pfQjNN990s30+1sk/Dfh
gZmdHWf4onSt6rsmt/WuVnuY+iZLN1hj7oq2J/Y2QTJOcnc0HWNe0tjx3j+K
OSX3Sl+p3yrJXMkejVmpsZ/R/G9Jt0JyVW7rb1F7tPTl0o/V2PvddvtItzc1
Oxgi/aTU5uc7D0Yby3+el3699EvU/qz+0yZd72hrZc2TJXXS10q/Se03pXtY
Uq52meQhxkpfIX2FcB/h30nWqt0m+a3avSST1B6vMcM1tntPs3lsfYGkQX1z
pdvPGI1tF24WPi08VXhQsP8yxyPCc4RrUvsG38InNwvflpuvlvh6Vkg/UHiE
3wfrfYzxkjs19i7JOfdHfONLwpuEV0k+p/YK9XVw9tHOhjNah+0Kv6a5BmXm
L23qWyzdMeEp0q2XfFH9X5CsVbsvc0rXKvl9NB+GS+AUfLtFeFFq/jxYeJpw
dWr3/xS2IzzBz/dx7l94ofB67FB4r+Rbmuvbkv1qvyBpkG6BpL9/D+74rvR7
hAvyxyAp6A6KkvHST5G+UeNflP5t4dXCt2v8TuEa55cW6V/y82b9N0rfKbw5
2l7Zc7vaXTT3NunvEN4hvE3yc7VvlWxXe67bU63m+4PwBj/v6yUb1f6HpEm6
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
1cC1Hk9Z338Byld6Tg==
               "]], 
              Polygon[CompressedData["
1:eJw1lnlQV1UYhq+lmD9u9SMdNSvLlpn2fd+zfZvKxl1LzX2vZirLXQQVAcUF
hRSDFEQQoRQBTU1l0VwQ9xXJyg0XUlRQ7HnnfP3xzLz3/b5z7rnnfOec26rH
kDaDr/E8LxwaQGbQ8y6FeF6873mbAp63GZai+zb0vEfgYThLThV8iP4A3oPF
5AzHW0XbNLWBZTAd7zBeProQiuArvGy8JZABY2kbjbcDPRldQM4KiMXbhlcG
eyCaWBL+XJhAbIP6QA9EL0CPJj4IPRiGwhD40vqNIpaIrkD/CcdgCl4MHEAf
goMwjZwE+pwN8yEf7we8JeS14zs7QHuoxrs+lDb1PK8Tzx2hhvxw37X5jvgw
+B6m453Em4OeC0lwBN6kzRvQGjJ8l1dJ3mk4BeHkVNPnJ8T7wX7e5fPOw/jl
+hZ4BT+ddtPgOG3m4aXAzxBF20nQS8/EZqETybuBNo/DE7CC2CS8LTbPmu8o
vAl4RegSKIaJQfeOE+gLUA2T8GbjeVp/dJbmCWZo3aG/rcso363XOvR62Kj+
8GYqF+KtRmLxMmmXAbmw39ajDL0NKuBB3rUUr7d900itK/6PVmtaW61xufXX
x+pE7+uL7mdjrkc/DSEEfgm6elPdxdk86ts0l0fRU/GSbV5noWvwzsF51S9e
J4hFj7Pv1vePVp94K2EtRNBuLP4YaE8sWjWCl4oOMoYw7Su8GXg55GTDmoCr
G9XBQkiDdNufM612NUdT8KZCHIzDy8XLg+XwDV4M7EPvhd22j7S+hejxxCIg
UrWqGtTeV//QBS+VMSyASMtXHXymedC+0BoSiw+4/bsLbydst/3Wwb5zFPGp
mlt9P97v/8+Hxgv56MF8f6Mwz2tGfTcPdeuZaPOo/EXoneiPyMsi/xzP5+EA
3jN4adpjPFcG3Bl2lTZ1cNHm6mu8rehSyLQzZz9eG9p+Co/BAt/NwTTiiyEL
upKzlz73QAqxe8nbZXVQS/wKXNb48MbgpaMHBN0ZpbNqA5RAKQRou1I1Cq+h
X4WXbf+uwWuGbgpNYI7v8rS/F6FP0/5MwJ0br+OdQNfCZdvTN+I1hptgvvZd
0NWn6vSM1VUS3Eb8dmgJRdpD9k1b0aU6b827D+8BuN++V2fEZvqpgn91Tmu9
tSYwj9gd5BXjTdTZDN00B9q/Vh+qk854OTqj0N0tPtx3Z22C3TW6c3bDrTY+
jVl6HXo9FKoe4Ba8FtAc5pKzNui+XXNws3n78J5CPwmP2vrqHG+L3k1sj9YW
NsHdeMn6RvSWoDu7khlfCqTa3fKTfWeJzhTYCON15kNHOwOGkbOV5y3wh/V7
AP03+i/4x9Yvw/prhb4L7rT5S/BdnSxD58JyqISTcAret7u2se4B7oMBPPeH
XN/dPQV25qywe2sh3vM2B5qLQ3i12sPortAZslU/9HeI/rrx/Dl4PF8HDaFJ
qNufAfZnJrlvo9+Fd1SHQbcPtR8bkdfH/g+0D7UfLwTcfOu+rLLxn8W7AnVw
GMrhFLxl/ek/Yg3jXw2/6Yzy3XsVP0rsGByHkTACRgXdf4fy8tF5UGDnQqrv
/l80rvqMvwGEQFPGWsH3DsIfCHm+W6+Wtj/usXrQ+fIc+ll42vqbDw+h43Q3
hLj7aDXjXwXFAXcf6k5Rnu6rMvR22GHr8QLeS/AiHMQLYyzljKU3z710J4W6
c3yZ/SPpX+lb8uox7p7Ev4Duegc5Lcg9QtuPeR6q+9x369sFnYO+lnh9uIR3
EWospjWPZKwR0M7O8xj0VXQdeLyrh70jGn8yzAm4862tjUXxX31XI6qVODvn
e+ruJG8Esf8AmvSeJg==
               "]], 
              
              Polygon[{{4286, 4285, 3226, 1803, 1813, 
               3228}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0M0uA1EYgOFvpq2ZqdqwrI2kNgQ7liyVlrY7WxfQxl/8/1wCCTciXIUb
YVWJPZ4hmXfeNzlzvpwzc/ujwTCJiD18iHW+TyMesKmfuc+NPGISPV3nArs6
5ww7usZVdHWFU3R0kpcfRmzTTxaxxd/c5jfzN/iVX7Cmn/gRy/qIDzGv+9zD
rF4p1zGjp7iBuv5yh/I+B+an5X6u8DGfoKpP+Qw1fc4XmNCXfAVPXHvdZH/H
jlu+Q6ELQ6d5gRfR1B3uoqWHPMKSHjvIJ1b1e/L/f38B1Wsfog==
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0MkuA1AUgOGjNt00iKmlFl6DhHdoqZoS09KwYlkJC5a61OqkplfwIqw0
8RQSNr6bLv78f25uzj25iwdnpdORiNjEZybijmujEZe4111+5LdsxCt6+oWf
0dVP3EdH99IZ2rqTjJZu8UNCN7nJDW7wu/l17qd3cKuv+SrtoPd5Dxd6lVdw
ohe4iCP9Z+9fbOtvLnHO/DKP8RqP8wTW9SRPoaKneQYbepbzqOoCz2WH/zLP
RWzpH/MPOe/tAo71Ei/jXO/wLmr6y90BbvRHZvi//9jcK/I=
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0Mkug1EcxuG/VIxXYUfCVo0x1IqExK5ba+ONCNfQUtWKoS02rFoWJLVk
SSIx1dQb8CQWvzzv4ss5J1/P0triaktEpFVLRDxyuTViRW/2Jpuc6YxI6dee
5pR+7ElO6Nse55i+7FGO6NMe5pAadpIfHOQ7c85/4ja39GBvcF139gLndW0P
sF+Xdje7VLFfvftFRbvODPMdEVkWuMMiD7RrH/JIOfuYJ9qzSywrb1d4qn37
jOcq2M/OL7PN3e26sHvZpyt7lnOq2ze+vdW9XU38/98/eTE3Qw==
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0EsuA1AYQOFf0kpMmCE60SFDJkSLqgbxLhOaVGIBbEBYRTfCiKSbUIq0
HototfVIfI3ByTk3N/nvI316XjwbiIgj3CQiZiyOkxElLOgLXuWPoYh35PUb
v2JFN7mBnH7hZyzrJ65jST/yAxZ1jbN8zxmumD/LV3yJaX3CZaR1ljMY1yme
wIjuuWsXg/2zuI5fb6hyiwvmt3mNP3mdN9DRm7yFrt7mHfT0Lu/hS+9zEd/6
gA/xo2vmJ53Z4jaG9ag7jfXRczyPSX1r/w5T+jrx/79/g6cwpg==
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0Esuw1EUgPHTxF/ULpCwEaWtx8CAGBGDRid9oKJFJAy9HwtgRGIVklpI
1aP1XoJfY/Dl+25u7snJHVopz5VSEbGImyRi32G8PyKDQ13gK94djNjBpd7m
Bi50nbdwrje5hjO9wes41WtcxYmu8DGX+Yj3zD/gIq+ioXOcRVWP8SiKOs0D
WNZvdn3Fgn7kJmb1PWe4lY6Y4DZP8jO/INt7yx3kdJffkdcf/Ikp/cXfmNY/
/IsZ/WD+PD9xG0u6z05Jb389zCOo6Fv3d6jr6+T/f/8AU3sxzw==
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0DsvQ3Ecx+GfpU3QKuJSmzdAwhuRmqw2S72DBlG3MlRSd0YGiRrZGDWV
uIzul5mEN+A5MXzyfM8Z/vmfMzg5XSi2RMSEKqmIOw9D6YhhPdhj/ORAW0Re
H3Y/+/Ru97JHb3Y3u/RqdzKnF7uDWT3bGT6xnY+ccv49x1lQwx7liC6Tc5jT
uf3rfj86tW95oyO7zhMd2DXWWGqN2OAMNznLOW3Z8yxr217gonbsJS5r115h
RXv2Kte0bx87/5BNXqtuf/FbZ8l3uWtGF3bVu3VdJeel/v/vH3+LMrI=
             "]]}, {
            
            Line[{2, 487, 11, 500, 501, 20, 526, 527, 29, 560, 561, 38, 594, 
             595, 47, 628, 629, 56, 662, 663, 65, 694, 74}], 
            
            Line[{1905, 485, 1922, 3268, 2845, 3269, 1940, 3291, 2853, 3290, 
             1958, 3317, 2861, 3318, 1975, 3343, 2870, 3342, 1990, 3366, 2879,
              3367, 2007, 3396, 2890, 3395, 2026, 3421, 2024, 2046}], 
            
            Line[{1907, 486, 1923, 504, 3271, 1941, 3294, 2854, 3295, 1959, 
             3321, 2864, 3320, 1976, 3345, 2873, 3346, 1991, 3371, 2882, 3370,
              2008, 3398, 2893, 3399, 2027, 3423, 2028, 2047}], 
            
            Line[{1909, 2843, 3264, 1925, 2848, 3274, 3275, 1943, 3302, 2856, 
             3300, 1961, 3328, 2866, 3326, 1978, 608, 3351, 1993, 3376, 2885, 
             3379, 2010, 3406, 2896, 3404, 2030, 3429, 2034, 2049}], 
            
            Line[{1912, 2844, 3266, 1928, 2850, 3284, 3286, 1946, 3313, 2859, 
             3311, 1964, 3334, 2868, 3339, 1980, 2877, 3360, 3362, 1996, 3391,
              2888, 3386, 2012, 3413, 2898, 3418, 2032, 3435, 2040, 2051}], 
            
            Line[{1914, 1921, 3270, 1930, 1939, 3292, 3293, 1949, 3288, 2862, 
             3319, 1967, 3315, 2871, 3344, 1982, 3341, 2881, 3369, 1998, 3364,
              2891, 3397, 2015, 3422, 2900, 3394, 2036, 3420, 2907, 2053}], 
            
            Line[{1916, 1926, 3273, 1933, 3299, 2855, 3298, 1952, 3325, 2865, 
             3324, 1969, 3348, 2874, 3350, 1985, 3375, 2883, 3374, 2001, 3401,
              2894, 3403, 2018, 3425, 2901, 3427, 2038, 3440, 2909, 2056}], 
            
            Line[{1918, 1931, 3278, 1935, 1950, 3305, 3307, 1954, 578, 3331, 
             1971, 3356, 2876, 3355, 1987, 1999, 3381, 3383, 2003, 3411, 2897,
              3410, 2021, 3431, 2903, 3433, 2042, 3442, 2910, 2058}], 
            
            Line[{1920, 3261, 2852, 1938, 1955, 3279, 3281, 1957, 3308, 2869, 
             3337, 1974, 620, 3332, 1989, 3357, 2889, 3389, 2006, 688, 3390, 
             2023, 3417, 2905, 3438, 2045, 3444, 2912, 2060}], 
            
            Line[{2048, 2033, 3428, 2029, 2013, 3407, 3405, 2009, 3378, 3377, 
             2884, 1992, 609, 3352, 1977, 1965, 3329, 3327, 1960, 1947, 3303, 
             3301, 1942, 511, 3276, 1924, 1906, 3263, 1908}], 
            
            Line[{2050, 2039, 3434, 2031, 2019, 3414, 3412, 2011, 3385, 3384, 
             2887, 1995, 3361, 2878, 3358, 1979, 3338, 2867, 3333, 1963, 3310,
              3309, 2858, 1945, 3285, 2851, 3282, 1927, 1910, 3265, 1911}], 
            
            Line[{2052, 2906, 3419, 2035, 3393, 3392, 2025, 2014, 2892, 3365, 
             3363, 1997, 3368, 2880, 3340, 1981, 2872, 3316, 3314, 1966, 2863,
              3289, 3287, 1948, 529, 3267, 1929, 2846, 3262, 1913}], 
            
            Line[{2055, 2908, 3439, 2037, 2902, 3426, 3424, 2017, 2895, 3402, 
             3400, 2000, 3373, 3372, 1994, 1984, 2875, 3349, 3347, 1968, 3323,
              3322, 1962, 1951, 3297, 3296, 1944, 1932, 2847, 3272, 1915}], 
            
            Line[{2057, 3441, 2054, 2041, 2904, 3432, 3430, 2020, 3409, 3408, 
             2016, 2002, 3382, 2886, 3380, 1986, 3354, 3353, 1983, 1970, 579, 
             3330, 1953, 3306, 2857, 3304, 1934, 2849, 3277, 1917}], 
            Line[{2059, 2911, 3443, 2044, 3437, 3436, 2043, 2022, 2899, 3416, 
             3415, 2005, 3388, 3387, 2004, 1988, 621, 3359, 1973, 3336, 3335, 
             1972, 1956, 3280, 2860, 3312, 1937, 3283, 1936, 1919}], 
            
            Line[{83, 725, 92, 738, 739, 101, 764, 765, 110, 798, 799, 119, 
             832, 833, 128, 866, 867, 137, 900, 901, 146, 932, 155}], 
            
            Line[{2061, 723, 2078, 3452, 2915, 3453, 2096, 3475, 2923, 3474, 
             2114, 3501, 2931, 3502, 2131, 3527, 2940, 3526, 2146, 3550, 2949,
              3551, 2163, 3580, 2960, 3579, 2182, 3605, 2180, 2202}], 
            
            Line[{2063, 724, 2079, 742, 3455, 2097, 3478, 2924, 3479, 2115, 
             3505, 2934, 3504, 2132, 3529, 2943, 3530, 2147, 3555, 2952, 3554,
              2164, 3582, 2963, 3583, 2183, 3607, 2184, 2203}], 
            
            Line[{2065, 2913, 3448, 2081, 2918, 3458, 3459, 2099, 3486, 2926, 
             3484, 2117, 3512, 2936, 3510, 2134, 846, 3535, 2149, 3560, 2955, 
             3563, 2166, 3590, 2966, 3588, 2186, 3613, 2190, 2205}], 
            
            Line[{2068, 2914, 3450, 2084, 2920, 3468, 3470, 2102, 3497, 2929, 
             3495, 2120, 3518, 2938, 3523, 2136, 2947, 3544, 3546, 2152, 3575,
              2958, 3570, 2168, 3597, 2968, 3602, 2188, 3619, 2196, 2207}], 
            
            Line[{2070, 2077, 3454, 2086, 2095, 3476, 3477, 2105, 3472, 2932, 
             3503, 2123, 3499, 2941, 3528, 2138, 3525, 2951, 3553, 2154, 3548,
              2961, 3581, 2171, 3606, 2970, 3578, 2192, 3604, 2977, 2209}], 
            
            Line[{2072, 2082, 3457, 2089, 3483, 2925, 3482, 2108, 3509, 2935, 
             3508, 2125, 3532, 2944, 3534, 2141, 3559, 2953, 3558, 2157, 3585,
              2964, 3587, 2174, 3609, 2971, 3611, 2194, 3624, 2979, 2212}], 
            
            Line[{2074, 2087, 3462, 2091, 2106, 3489, 3491, 2110, 816, 3515, 
             2127, 3540, 2946, 3539, 2143, 2155, 3565, 3567, 2159, 3595, 2967,
              3594, 2177, 3615, 2973, 3617, 2198, 3626, 2980, 2214}], 
            
            Line[{2076, 3445, 2922, 2094, 2111, 3463, 3465, 2113, 3492, 2939, 
             3521, 2130, 858, 3516, 2145, 3541, 2959, 3573, 2162, 926, 3574, 
             2179, 3601, 2975, 3622, 2201, 3628, 2982, 2216}], 
            
            Line[{2204, 2189, 3612, 2185, 2169, 3591, 3589, 2165, 3562, 3561, 
             2954, 2148, 847, 3536, 2133, 2121, 3513, 3511, 2116, 2103, 3487, 
             3485, 2098, 749, 3460, 2080, 2062, 3447, 2064}], 
            
            Line[{2206, 2195, 3618, 2187, 2175, 3598, 3596, 2167, 3569, 3568, 
             2957, 2151, 3545, 2948, 3542, 2135, 3522, 2937, 3517, 2119, 3494,
              3493, 2928, 2101, 3469, 2921, 3466, 2083, 2066, 3449, 2067}], 
            
            Line[{2208, 2976, 3603, 2191, 3577, 3576, 2181, 2170, 2962, 3549, 
             3547, 2153, 3552, 2950, 3524, 2137, 2942, 3500, 3498, 2122, 2933,
              3473, 3471, 2104, 767, 3451, 2085, 2916, 3446, 2069}], 
            
            Line[{2211, 2978, 3623, 2193, 2972, 3610, 3608, 2173, 2965, 3586, 
             3584, 2156, 3557, 3556, 2150, 2140, 2945, 3533, 3531, 2124, 3507,
              3506, 2118, 2107, 3481, 3480, 2100, 2088, 2917, 3456, 2071}], 
            
            Line[{2213, 3625, 2210, 2197, 2974, 3616, 3614, 2176, 3593, 3592, 
             2172, 2158, 3566, 2956, 3564, 2142, 3538, 3537, 2139, 2126, 817, 
             3514, 2109, 3490, 2927, 3488, 2090, 2919, 3461, 2073}], 
            
            Line[{2215, 2981, 3627, 2200, 3621, 3620, 2199, 2178, 2969, 3600, 
             3599, 2161, 3572, 3571, 2160, 2144, 859, 3543, 2129, 3520, 3519, 
             2128, 2112, 3464, 2930, 3496, 2093, 3467, 2092, 2075}], 
            
            Line[{164, 963, 173, 976, 977, 182, 1002, 1003, 191, 1036, 1037, 
             200, 1070, 1071, 209, 1104, 1105, 218, 1138, 1139, 227, 1170, 
             236}], 
            
            Line[{2217, 961, 2234, 3636, 2985, 3637, 2252, 3659, 2993, 3658, 
             2270, 3685, 3001, 3686, 2287, 3711, 3010, 3710, 2302, 3734, 3019,
              3735, 2319, 3764, 3030, 3763, 2338, 3789, 2336, 2358}], 
            
            Line[{2219, 962, 2235, 980, 3639, 2253, 3662, 2994, 3663, 2271, 
             3689, 3004, 3688, 2288, 3713, 3013, 3714, 2303, 3739, 3022, 3738,
              2320, 3766, 3033, 3767, 2339, 3791, 2340, 2359}], 
            
            Line[{2221, 2983, 3632, 2237, 2988, 3642, 3643, 2255, 3670, 2996, 
             3668, 2273, 3696, 3006, 3694, 2290, 1084, 3719, 2305, 3744, 3025,
              3747, 2322, 3774, 3036, 3772, 2342, 3797, 2346, 2361}], 
            
            Line[{2224, 2984, 3634, 2240, 2990, 3652, 3654, 2258, 3681, 2999, 
             3679, 2276, 3702, 3008, 3707, 2292, 3017, 3728, 3730, 2308, 3759,
              3028, 3754, 2324, 3781, 3038, 3786, 2344, 3803, 2352, 2363}], 
            
            Line[{2226, 2233, 3638, 2242, 2251, 3660, 3661, 2261, 3656, 3002, 
             3687, 2279, 3683, 3011, 3712, 2294, 3709, 3021, 3737, 2310, 3732,
              3031, 3765, 2327, 3790, 3040, 3762, 2348, 3788, 3047, 2365}], 
            
            Line[{2228, 2238, 3641, 2245, 3667, 2995, 3666, 2264, 3693, 3005, 
             3692, 2281, 3716, 3014, 3718, 2297, 3743, 3023, 3742, 2313, 3769,
              3034, 3771, 2330, 3793, 3041, 3795, 2350, 3808, 3049, 2368}], 
            
            Line[{2230, 2243, 3646, 2247, 2262, 3673, 3675, 2266, 1054, 3699, 
             2283, 3724, 3016, 3723, 2299, 2311, 3749, 3751, 2315, 3779, 3037,
              3778, 2333, 3799, 3043, 3801, 2354, 3810, 3050, 2370}], 
            
            Line[{2232, 3629, 2992, 2250, 2267, 3647, 3649, 2269, 3676, 3009, 
             3705, 2286, 1096, 3700, 2301, 3725, 3029, 3757, 2318, 1164, 3758,
              2335, 3785, 3045, 3806, 2357, 3812, 3052, 2372}], 
            
            Line[{2360, 2345, 3796, 2341, 2325, 3775, 3773, 2321, 3746, 3745, 
             3024, 2304, 1085, 3720, 2289, 2277, 3697, 3695, 2272, 2259, 3671,
              3669, 2254, 987, 3644, 2236, 2218, 3631, 2220}], 
            
            Line[{2362, 2351, 3802, 2343, 2331, 3782, 3780, 2323, 3753, 3752, 
             3027, 2307, 3729, 3018, 3726, 2291, 3706, 3007, 3701, 2275, 3678,
              3677, 2998, 2257, 3653, 2991, 3650, 2239, 2222, 3633, 2223}], 
            
            Line[{2364, 3046, 3787, 2347, 3761, 3760, 2337, 2326, 3032, 3733, 
             3731, 2309, 3736, 3020, 3708, 2293, 3012, 3684, 3682, 2278, 3003,
              3657, 3655, 2260, 1005, 3635, 2241, 2986, 3630, 2225}], 
            
            Line[{2367, 3048, 3807, 2349, 3042, 3794, 3792, 2329, 3035, 3770, 
             3768, 2312, 3741, 3740, 2306, 2296, 3015, 3717, 3715, 2280, 3691,
              3690, 2274, 2263, 3665, 3664, 2256, 2244, 2987, 3640, 2227}], 
            
            Line[{2369, 3809, 2366, 2353, 3044, 3800, 3798, 2332, 3777, 3776, 
             2328, 2314, 3750, 3026, 3748, 2298, 3722, 3721, 2295, 2282, 1055,
              3698, 2265, 3674, 2997, 3672, 2246, 2989, 3645, 2229}], 
            
            Line[{2371, 3051, 3811, 2356, 3805, 3804, 2355, 2334, 3039, 3784, 
             3783, 2317, 3756, 3755, 2316, 2300, 1097, 3727, 2285, 3704, 3703,
              2284, 2268, 3648, 3000, 3680, 2249, 3651, 2248, 2231}], 
            
            Line[{245, 1201, 254, 1214, 1215, 263, 1240, 1241, 272, 1274, 
             1275, 281, 1308, 1309, 290, 1342, 1343, 299, 1376, 1377, 308, 
             1408, 317}], 
            
            Line[{2373, 1199, 2390, 3820, 3055, 3821, 2408, 3843, 3063, 3842, 
             2426, 3869, 3071, 3870, 2443, 3895, 3080, 3894, 2458, 3918, 3089,
              3919, 2475, 3948, 3100, 3947, 2494, 3973, 2492, 2514}], 
            
            Line[{2375, 1200, 2391, 1218, 3823, 2409, 3846, 3064, 3847, 2427, 
             3873, 3074, 3872, 2444, 3897, 3083, 3898, 2459, 3923, 3092, 3922,
              2476, 3950, 3103, 3951, 2495, 3975, 2496, 2515}], 
            
            Line[{2377, 3053, 3816, 2393, 3058, 3826, 3827, 2411, 3854, 3066, 
             3852, 2429, 3880, 3076, 3878, 2446, 1322, 3903, 2461, 3928, 3095,
              3931, 2478, 3958, 3106, 3956, 2498, 3981, 2502, 2517}], 
            
            Line[{2380, 3054, 3818, 2396, 3060, 3836, 3838, 2414, 3865, 3069, 
             3863, 2432, 3886, 3078, 3891, 2448, 3087, 3912, 3914, 2464, 3943,
              3098, 3938, 2480, 3965, 3108, 3970, 2500, 3987, 2508, 2519}], 
            
            Line[{2382, 2389, 3822, 2398, 2407, 3844, 3845, 2417, 3840, 3072, 
             3871, 2435, 3867, 3081, 3896, 2450, 3893, 3091, 3921, 2466, 3916,
              3101, 3949, 2483, 3974, 3110, 3946, 2504, 3972, 3117, 2521}], 
            
            Line[{2384, 2394, 3825, 2401, 3851, 3065, 3850, 2420, 3877, 3075, 
             3876, 2437, 3900, 3084, 3902, 2453, 3927, 3093, 3926, 2469, 3953,
              3104, 3955, 2486, 3977, 3111, 3979, 2506, 3992, 3119, 2524}], 
            Line[{2386, 2399, 3830, 2403, 2418, 3857, 3859, 2422, 1292, 3883, 
             2439, 3908, 3086, 3907, 2455, 2467, 3933, 3935, 2471, 3963, 3107,
              3962, 2489, 3983, 3113, 3985, 2510, 3994, 3120, 2526}], 
            
            Line[{2388, 3813, 3062, 2406, 2423, 3831, 3833, 2425, 3860, 3079, 
             3889, 2442, 1334, 3884, 2457, 3909, 3099, 3941, 2474, 1402, 3942,
              2491, 3969, 3115, 3990, 2513, 3996, 3122, 2528}], 
            
            Line[{2516, 2501, 3980, 2497, 2481, 3959, 3957, 2477, 3930, 3929, 
             3094, 2460, 1323, 3904, 2445, 2433, 3881, 3879, 2428, 2415, 3855,
              3853, 2410, 1225, 3828, 2392, 2374, 3815, 2376}], 
            
            Line[{2518, 2507, 3986, 2499, 2487, 3966, 3964, 2479, 3937, 3936, 
             3097, 2463, 3913, 3088, 3910, 2447, 3890, 3077, 3885, 2431, 3862,
              3861, 3068, 2413, 3837, 3061, 3834, 2395, 2378, 3817, 2379}], 
            
            Line[{2520, 3116, 3971, 2503, 3945, 3944, 2493, 2482, 3102, 3917, 
             3915, 2465, 3920, 3090, 3892, 2449, 3082, 3868, 3866, 2434, 3073,
              3841, 3839, 2416, 1243, 3819, 2397, 3056, 3814, 2381}], 
            
            Line[{2523, 3118, 3991, 2505, 3112, 3978, 3976, 2485, 3105, 3954, 
             3952, 2468, 3925, 3924, 2462, 2452, 3085, 3901, 3899, 2436, 3875,
              3874, 2430, 2419, 3849, 3848, 2412, 2400, 3057, 3824, 2383}], 
            
            Line[{2525, 3993, 2522, 2509, 3114, 3984, 3982, 2488, 3961, 3960, 
             2484, 2470, 3934, 3096, 3932, 2454, 3906, 3905, 2451, 2438, 1293,
              3882, 2421, 3858, 3067, 3856, 2402, 3059, 3829, 2385}], 
            
            Line[{2527, 3121, 3995, 2512, 3989, 3988, 2511, 2490, 3109, 3968, 
             3967, 2473, 3940, 3939, 2472, 2456, 1335, 3911, 2441, 3888, 3887,
              2440, 2424, 3832, 3070, 3864, 2405, 3835, 2404, 2387}], 
            
            Line[{326, 1439, 335, 1452, 1453, 344, 1478, 1479, 353, 1512, 
             1513, 362, 1546, 1547, 370, 1576, 1577, 379, 1610, 1611, 388, 
             1642, 397}], 
            
            Line[{2529, 1437, 2546, 4004, 3125, 4005, 2564, 4027, 3133, 4026, 
             2582, 4051, 3141, 4052, 2599, 4079, 3152, 4078, 2615, 4077, 3158,
              4100, 2632, 4132, 3169, 4131, 2651, 4157, 2649, 2671}], 
            
            Line[{2531, 1438, 2547, 1456, 4007, 2565, 4030, 3134, 4031, 2583, 
             4055, 3144, 4054, 2600, 4083, 3155, 4084, 2616, 4107, 3161, 4106,
              2633, 4134, 3172, 4135, 2652, 4159, 2653, 2672}], 
            
            Line[{2533, 3123, 4000, 2549, 3128, 4010, 4011, 2567, 4038, 3136, 
             4036, 2585, 4062, 3146, 4060, 2602, 1560, 4089, 2618, 4112, 3164,
              4115, 2635, 4142, 3175, 4140, 2655, 4165, 2659, 2674}], 
            
            Line[{2536, 3124, 4002, 2552, 3130, 4020, 4022, 2570, 4049, 3139, 
             4047, 2588, 4068, 3148, 4074, 2605, 4101, 3157, 4096, 2621, 4127,
              3167, 4122, 2637, 4149, 3177, 4154, 2657, 4171, 2665, 2676}], 
            
            Line[{2538, 2545, 4006, 2554, 2563, 4028, 4029, 2573, 4024, 3142, 
             4053, 2591, 4050, 3150, 4076, 2607, 4103, 3160, 4105, 2623, 4098,
              3170, 4133, 2640, 4158, 3179, 4130, 2661, 4156, 3186, 2678}], 
            
            Line[{2540, 2550, 4009, 2557, 4035, 3135, 4034, 2576, 4059, 3145, 
             4058, 2593, 4081, 3153, 4085, 2609, 4111, 3162, 4110, 2626, 4137,
              3173, 4139, 2643, 4161, 3180, 4163, 2663, 4176, 3188, 2681}], 
            
            Line[{2542, 2555, 4014, 2559, 2574, 4041, 4043, 2578, 1530, 4065, 
             2595, 4091, 3156, 4088, 2611, 2624, 4117, 4119, 2628, 4147, 3176,
              4146, 2646, 4167, 3182, 4169, 2667, 4178, 3189, 2683}], 
            
            Line[{2544, 3997, 3132, 2562, 2579, 4015, 4017, 2581, 4044, 3151, 
             4071, 2598, 1566, 4066, 2614, 4093, 3168, 4125, 2631, 1636, 4126,
              2648, 4153, 3184, 4174, 2670, 4180, 3191, 2685}], 
            
            Line[{2673, 2658, 4164, 2654, 2638, 4143, 4141, 2634, 4114, 4113, 
             3163, 2617, 1561, 4090, 2601, 2589, 4063, 4061, 2584, 2571, 4039,
              4037, 2566, 1463, 4012, 2548, 2530, 3999, 2532}], 
            
            Line[{2675, 2664, 4170, 2656, 2644, 4150, 4148, 2636, 4121, 4120, 
             3166, 2620, 4095, 4094, 2612, 2604, 4073, 3147, 4067, 2587, 4046,
              4045, 3138, 2569, 4021, 3131, 4018, 2551, 2534, 4001, 2535}], 
            Line[{2677, 3185, 4155, 2660, 4129, 4128, 2650, 2639, 3171, 4099, 
             4097, 2622, 4104, 3159, 4102, 2606, 4075, 4072, 3149, 2590, 3143,
              4025, 4023, 2572, 1481, 4003, 2553, 3126, 3998, 2537}], 
            
            Line[{2680, 3187, 4175, 2662, 3181, 4162, 4160, 2642, 3174, 4138, 
             4136, 2625, 4109, 4108, 2619, 2608, 3154, 4082, 4080, 2592, 4057,
              4056, 2586, 2575, 4033, 4032, 2568, 2556, 3127, 4008, 2539}], 
            
            Line[{2682, 4177, 2679, 2666, 3183, 4168, 4166, 2645, 4145, 4144, 
             2641, 2627, 4118, 3165, 4116, 2610, 4087, 4086, 2603, 2594, 1531,
              4064, 2577, 4042, 3137, 4040, 2558, 3129, 4013, 2541}], 
            
            Line[{2684, 3190, 4179, 2669, 4173, 4172, 2668, 2647, 3178, 4152, 
             4151, 2630, 4124, 4123, 2629, 2613, 1567, 4092, 2597, 4070, 4069,
              2596, 2580, 4016, 3140, 4048, 2561, 4019, 2560, 2543}], 
            
            Line[{406, 1673, 415, 1686, 1687, 424, 1712, 1713, 433, 1746, 
             1747, 442, 1780, 1781, 450, 1810, 1811, 459, 1844, 1845, 468, 
             1876, 477}], 
            
            Line[{2686, 1671, 2703, 4188, 3194, 4189, 2721, 4211, 3202, 4210, 
             2739, 4235, 3210, 4236, 2756, 4263, 3221, 4262, 2772, 4261, 3227,
              4284, 2789, 4316, 3238, 4315, 2808, 4341, 2806, 2828}], 
            
            Line[{2688, 1672, 2704, 1690, 4191, 2722, 4214, 3203, 4215, 2740, 
             4239, 3213, 4238, 2757, 4267, 3224, 4268, 2773, 4291, 3230, 4290,
              2790, 4318, 3241, 4319, 2809, 4343, 2810, 2829}], 
            
            Line[{2690, 3192, 4184, 2706, 3197, 4194, 4195, 2724, 4222, 3205, 
             4220, 2742, 4246, 3215, 4244, 2759, 1794, 4273, 2775, 4296, 3233,
              4299, 2792, 4326, 3244, 4324, 2812, 4349, 2816, 2831}], 
            
            Line[{2693, 3193, 4186, 2709, 3199, 4204, 4206, 2727, 4233, 3208, 
             4231, 2745, 4252, 3217, 4258, 2762, 4285, 3226, 4280, 2778, 4311,
              3236, 4306, 2794, 4333, 3246, 4338, 2814, 4355, 2822, 2833}], 
            
            Line[{2695, 2702, 4190, 2711, 2720, 4212, 4213, 2730, 4208, 3211, 
             4237, 2748, 4234, 3219, 4260, 2764, 4287, 3229, 4289, 2780, 4282,
              3239, 4317, 2797, 4342, 3248, 4314, 2818, 4340, 3255, 2835}], 
            
            Line[{2697, 2707, 4193, 2714, 4219, 3204, 4218, 2733, 4243, 3214, 
             4242, 2750, 4265, 3222, 4269, 2766, 4295, 3231, 4294, 2783, 4321,
              3242, 4323, 2800, 4345, 3249, 4347, 2820, 4360, 3257, 2838}], 
            
            Line[{2699, 2712, 4198, 2716, 2731, 4225, 4227, 2735, 1764, 4249, 
             2752, 4275, 3225, 4272, 2768, 2781, 4301, 4303, 2785, 4331, 3245,
              4330, 2803, 4351, 3251, 4353, 2824, 4362, 3258, 2840}], 
            
            Line[{2701, 4181, 3201, 2719, 2736, 4199, 4201, 2738, 4228, 3220, 
             4255, 2755, 1800, 4250, 2771, 4277, 3237, 4309, 2788, 1870, 4310,
              2805, 4337, 3253, 4358, 2827, 4364, 3260, 2842}], 
            
            Line[{2830, 2815, 4348, 2811, 2795, 4327, 4325, 2791, 4298, 4297, 
             3232, 2774, 1795, 4274, 2758, 2746, 4247, 4245, 2741, 2728, 4223,
              4221, 2723, 1697, 4196, 2705, 2687, 4183, 2689}], 
            
            Line[{2832, 2821, 4354, 2813, 2801, 4334, 4332, 2793, 4305, 4304, 
             3235, 2777, 4279, 4278, 2769, 2761, 4257, 3216, 4251, 2744, 4230,
              4229, 3207, 2726, 4205, 3200, 4202, 2708, 2691, 4185, 2692}], 
            
            Line[{2834, 3254, 4339, 2817, 4313, 4312, 2807, 2796, 3240, 4283, 
             4281, 2779, 4288, 3228, 4286, 2763, 4259, 4256, 3218, 2747, 3212,
              4209, 4207, 2729, 1715, 4187, 2710, 3195, 4182, 2694}], 
            
            Line[{2837, 3256, 4359, 2819, 3250, 4346, 4344, 2799, 3243, 4322, 
             4320, 2782, 4293, 4292, 2776, 2765, 3223, 4266, 4264, 2749, 4241,
              4240, 2743, 2732, 4217, 4216, 2725, 2713, 3196, 4192, 2696}], 
            
            Line[{2839, 4361, 2836, 2823, 3252, 4352, 4350, 2802, 4329, 4328, 
             2798, 2784, 4302, 3234, 4300, 2767, 4271, 4270, 2760, 2751, 1765,
              4248, 2734, 4226, 3206, 4224, 2715, 3198, 4197, 2698}], 
            
            Line[{2841, 3259, 4363, 2826, 4357, 4356, 2825, 2804, 3247, 4336, 
             4335, 2787, 4308, 4307, 2786, 2770, 1801, 4276, 2754, 4254, 4253,
              2753, 2737, 4200, 3209, 4232, 2718, 4203, 2717, 2700}]}, {
            Line[{489, 3390, 689, 3416, 683, 681, 3410, 3409, 675, 3403, 673, 
             3402, 667, 3397, 665, 3365, 653, 651, 3386, 3385, 645, 643, 3379,
              3378, 637, 3370, 635, 629, 625, 3367, 661}], 
            
            Line[{496, 655, 3389, 3388, 649, 3383, 3382, 647, 641, 639, 3374, 
             3373, 633, 3369, 3368, 631, 619, 3362, 3361, 617, 611, 3351, 609,
              603, 601, 3346, 595, 3342, 591, 627}], 
            
            Line[{499, 485, 487, 486, 490, 3263, 491, 3264, 492, 3265, 493, 
             3266, 494, 3262, 502, 3270, 503, 3272, 508, 3273, 509, 3277, 514,
              3278, 515, 3283, 520, 3261, 521}], 
            
            Line[{18, 1938, 1937, 17, 1935, 1934, 16, 1933, 1932, 15, 1930, 
             1929, 14, 1928, 1927, 13, 1925, 1924, 12, 1923, 11, 1922, 10}], 
            
            Line[{524, 497, 3268, 500, 504, 506, 3276, 510, 3274, 512, 3282, 
             516, 3284, 518, 3267, 528, 3292, 530, 3296, 536, 3299, 538, 3304,
              544, 3305, 546, 3312, 552, 3279, 554}], 
            
            Line[{555, 3281, 3280, 553, 547, 3307, 3306, 545, 539, 537, 3298, 
             3297, 531, 3293, 529, 519, 3286, 3285, 517, 513, 3275, 511, 507, 
             3271, 505, 501, 498, 3269, 525}], 
            
            Line[{558, 3291, 522, 526, 532, 3294, 534, 3301, 3302, 540, 542, 
             3309, 548, 3313, 550, 3287, 3288, 562, 564, 3322, 570, 3325, 572,
              3330, 578, 580, 3335, 586, 3308, 588}], 
            
            Line[{589, 587, 3337, 3336, 581, 3331, 579, 573, 571, 3324, 3323, 
             565, 3319, 563, 3289, 551, 549, 3311, 3310, 543, 3300, 541, 3303,
              535, 533, 3295, 527, 3290, 523, 559}], 
            
            Line[{592, 556, 3317, 560, 3321, 566, 568, 3327, 3328, 574, 576, 
             3333, 3334, 582, 584, 3314, 3315, 596, 598, 3347, 3348, 604, 606,
              3353, 612, 3356, 614, 3359, 620, 622}], 
            
            Line[{623, 3332, 621, 615, 613, 3355, 3354, 607, 3350, 605, 3349, 
             599, 3344, 597, 3316, 585, 3339, 3338, 583, 577, 3326, 575, 3329,
              569, 3320, 567, 561, 557, 3318, 593}], 
            
            Line[{626, 3343, 590, 594, 600, 3345, 602, 3352, 608, 610, 3358, 
             616, 3360, 618, 3340, 3341, 630, 632, 3372, 638, 3375, 640, 3380,
              646, 3381, 648, 3387, 654, 3357, 495}], 
            
            Line[{657, 714, 3438, 3437, 710, 3433, 708, 3432, 704, 3427, 702, 
             3426, 698, 696, 3394, 3393, 687, 3418, 685, 3414, 679, 3404, 677,
              3407, 671, 669, 3399, 663, 3395, 659, 693}], 
            
            Line[{660, 624, 3366, 628, 3371, 634, 636, 3377, 642, 3376, 644, 
             3384, 650, 3391, 652, 3363, 3364, 664, 666, 3400, 3401, 672, 674,
              3408, 680, 3411, 682, 3415, 688, 488}], 
            
            Line[{690, 722, 3444, 3443, 721, 3442, 720, 3441, 719, 718, 3440, 
             3439, 717, 716, 3420, 3419, 712, 711, 3435, 3434, 706, 705, 3429,
              3428, 700, 699, 3423, 694, 3421, 691, 715}], 
            
            Line[{692, 3396, 658, 662, 668, 3398, 670, 3405, 3406, 676, 678, 
             3412, 3413, 684, 686, 3392, 695, 3422, 697, 3424, 3425, 701, 703,
              3430, 3431, 707, 709, 3436, 713, 3417, 656}], 
            
            Line[{727, 3574, 927, 3600, 921, 919, 3594, 3593, 913, 3587, 911, 
             3586, 905, 3581, 903, 3549, 891, 889, 3570, 3569, 883, 881, 3563,
              3562, 875, 3554, 873, 867, 863, 3551, 899}], 
            
            Line[{734, 893, 3573, 3572, 887, 3567, 3566, 885, 879, 877, 3558, 
             3557, 871, 3553, 3552, 869, 857, 3546, 3545, 855, 849, 3535, 847,
              841, 839, 3530, 833, 3526, 829, 865}], 
            
            Line[{737, 723, 725, 724, 728, 3447, 729, 3448, 730, 3449, 731, 
             3450, 732, 3446, 740, 3454, 741, 3456, 746, 3457, 747, 3461, 752,
              3462, 753, 3467, 758, 3445, 759}], 
            
            Line[{99, 2094, 2093, 98, 2091, 2090, 97, 2089, 2088, 96, 2086, 
             2085, 95, 2084, 2083, 94, 2081, 2080, 93, 2079, 92, 2078, 91}], 
            
            Line[{762, 735, 3452, 738, 742, 744, 3460, 748, 3458, 750, 3466, 
             754, 3468, 756, 3451, 766, 3476, 768, 3480, 774, 3483, 776, 3488,
              782, 3489, 784, 3496, 790, 3463, 792}], 
            
            Line[{793, 3465, 3464, 791, 785, 3491, 3490, 783, 777, 775, 3482, 
             3481, 769, 3477, 767, 757, 3470, 3469, 755, 751, 3459, 749, 745, 
             3455, 743, 739, 736, 3453, 763}], 
            
            Line[{796, 3475, 760, 764, 770, 3478, 772, 3485, 3486, 778, 780, 
             3493, 786, 3497, 788, 3471, 3472, 800, 802, 3506, 808, 3509, 810,
              3514, 816, 818, 3519, 824, 3492, 826}], 
            
            Line[{827, 825, 3521, 3520, 819, 3515, 817, 811, 809, 3508, 3507, 
             803, 3503, 801, 3473, 789, 787, 3495, 3494, 781, 3484, 779, 3487,
              773, 771, 3479, 765, 3474, 761, 797}], 
            
            Line[{830, 794, 3501, 798, 3505, 804, 806, 3511, 3512, 812, 814, 
             3517, 3518, 820, 822, 3498, 3499, 834, 836, 3531, 3532, 842, 844,
              3537, 850, 3540, 852, 3543, 858, 860}], 
            
            Line[{861, 3516, 859, 853, 851, 3539, 3538, 845, 3534, 843, 3533, 
             837, 3528, 835, 3500, 823, 3523, 3522, 821, 815, 3510, 813, 3513,
              807, 3504, 805, 799, 795, 3502, 831}], 
            
            Line[{864, 3527, 828, 832, 838, 3529, 840, 3536, 846, 848, 3542, 
             854, 3544, 856, 3524, 3525, 868, 870, 3556, 876, 3559, 878, 3564,
              884, 3565, 886, 3571, 892, 3541, 733}], 
            
            Line[{895, 952, 3622, 3621, 948, 3617, 946, 3616, 942, 3611, 940, 
             3610, 936, 934, 3578, 3577, 925, 3602, 923, 3598, 917, 3588, 915,
              3591, 909, 907, 3583, 901, 3579, 897, 931}], 
            
            Line[{898, 862, 3550, 866, 3555, 872, 874, 3561, 880, 3560, 882, 
             3568, 888, 3575, 890, 3547, 3548, 902, 904, 3584, 3585, 910, 912,
              3592, 918, 3595, 920, 3599, 926, 726}], 
            
            Line[{928, 960, 3628, 3627, 959, 3626, 958, 3625, 957, 956, 3624, 
             3623, 955, 954, 3604, 3603, 950, 949, 3619, 3618, 944, 943, 3613,
              3612, 938, 937, 3607, 932, 3605, 929, 953}], 
            
            Line[{930, 3580, 896, 900, 906, 3582, 908, 3589, 3590, 914, 916, 
             3596, 3597, 922, 924, 3576, 933, 3606, 935, 3608, 3609, 939, 941,
              3614, 3615, 945, 947, 3620, 951, 3601, 894}], 
            
            Line[{965, 3758, 1165, 3784, 1159, 1157, 3778, 3777, 1151, 3771, 
             1149, 3770, 1143, 3765, 1141, 3733, 1129, 1127, 3754, 3753, 1121,
              1119, 3747, 3746, 1113, 3738, 1111, 1105, 1101, 3735, 1137}], 
            
            Line[{972, 1131, 3757, 3756, 1125, 3751, 3750, 1123, 1117, 1115, 
             3742, 3741, 1109, 3737, 3736, 1107, 1095, 3730, 3729, 1093, 1087,
              3719, 1085, 1079, 1077, 3714, 1071, 3710, 1067, 1103}], 
            
            Line[{975, 961, 963, 962, 966, 3631, 967, 3632, 968, 3633, 969, 
             3634, 970, 3630, 978, 3638, 979, 3640, 984, 3641, 985, 3645, 990,
              3646, 991, 3651, 996, 3629, 997}], 
            
            Line[{180, 2250, 2249, 179, 2247, 2246, 178, 2245, 2244, 177, 
             2242, 2241, 176, 2240, 2239, 175, 2237, 2236, 174, 2235, 173, 
             2234, 172}], 
            
            Line[{1000, 973, 3636, 976, 980, 982, 3644, 986, 3642, 988, 3650, 
             992, 3652, 994, 3635, 1004, 3660, 1006, 3664, 1012, 3667, 1014, 
             3672, 1020, 3673, 1022, 3680, 1028, 3647, 1030}], 
            
            Line[{1031, 3649, 3648, 1029, 1023, 3675, 3674, 1021, 1015, 1013, 
             3666, 3665, 1007, 3661, 1005, 995, 3654, 3653, 993, 989, 3643, 
             987, 983, 3639, 981, 977, 974, 3637, 1001}], 
            
            Line[{1034, 3659, 998, 1002, 1008, 3662, 1010, 3669, 3670, 1016, 
             1018, 3677, 1024, 3681, 1026, 3655, 3656, 1038, 1040, 3690, 1046,
              3693, 1048, 3698, 1054, 1056, 3703, 1062, 3676, 1064}], 
            
            Line[{1065, 1063, 3705, 3704, 1057, 3699, 1055, 1049, 1047, 3692, 
             3691, 1041, 3687, 1039, 3657, 1027, 1025, 3679, 3678, 1019, 3668,
              1017, 3671, 1011, 1009, 3663, 1003, 3658, 999, 1035}], 
            
            Line[{1068, 1032, 3685, 1036, 3689, 1042, 1044, 3695, 3696, 1050, 
             1052, 3701, 3702, 1058, 1060, 3682, 3683, 1072, 1074, 3715, 3716,
              1080, 1082, 3721, 1088, 3724, 1090, 3727, 1096, 1098}], 
            
            Line[{1099, 3700, 1097, 1091, 1089, 3723, 3722, 1083, 3718, 1081, 
             3717, 1075, 3712, 1073, 3684, 1061, 3707, 3706, 1059, 1053, 3694,
              1051, 3697, 1045, 3688, 1043, 1037, 1033, 3686, 1069}], 
            
            Line[{1102, 3711, 1066, 1070, 1076, 3713, 1078, 3720, 1084, 1086, 
             3726, 1092, 3728, 1094, 3708, 3709, 1106, 1108, 3740, 1114, 3743,
              1116, 3748, 1122, 3749, 1124, 3755, 1130, 3725, 971}], 
            
            Line[{1133, 1190, 3806, 3805, 1186, 3801, 1184, 3800, 1180, 3795, 
             1178, 3794, 1174, 1172, 3762, 3761, 1163, 3786, 1161, 3782, 1155,
              3772, 1153, 3775, 1147, 1145, 3767, 1139, 3763, 1135, 1169}], 
            
            Line[{1136, 1100, 3734, 1104, 3739, 1110, 1112, 3745, 1118, 3744, 
             1120, 3752, 1126, 3759, 1128, 3731, 3732, 1140, 1142, 3768, 3769,
              1148, 1150, 3776, 1156, 3779, 1158, 3783, 1164, 964}], 
            
            Line[{1166, 1198, 3812, 3811, 1197, 3810, 1196, 3809, 1195, 1194, 
             3808, 3807, 1193, 1192, 3788, 3787, 1188, 1187, 3803, 3802, 1182,
              1181, 3797, 3796, 1176, 1175, 3791, 1170, 3789, 1167, 1191}], 
            
            Line[{1168, 3764, 1134, 1138, 1144, 3766, 1146, 3773, 3774, 1152, 
             1154, 3780, 3781, 1160, 1162, 3760, 1171, 3790, 1173, 3792, 3793,
              1177, 1179, 3798, 3799, 1183, 1185, 3804, 1189, 3785, 1132}], 
            
            Line[{1203, 3942, 1403, 3968, 1397, 1395, 3962, 3961, 1389, 3955, 
             1387, 3954, 1381, 3949, 1379, 3917, 1367, 1365, 3938, 3937, 1359,
              1357, 3931, 3930, 1351, 3922, 1349, 1343, 1339, 3919, 1375}], 
            
            Line[{1210, 1369, 3941, 3940, 1363, 3935, 3934, 1361, 1355, 1353, 
             3926, 3925, 1347, 3921, 3920, 1345, 1333, 3914, 3913, 1331, 1325,
              3903, 1323, 1317, 1315, 3898, 1309, 3894, 1305, 1341}], 
            
            Line[{1213, 1199, 1201, 1200, 1204, 3815, 1205, 3816, 1206, 3817, 
             1207, 3818, 1208, 3814, 1216, 3822, 1217, 3824, 1222, 3825, 1223,
              3829, 1228, 3830, 1229, 3835, 1234, 3813, 1235}], 
            
            Line[{261, 2406, 2405, 260, 2403, 2402, 259, 2401, 2400, 258, 
             2398, 2397, 257, 2396, 2395, 256, 2393, 2392, 255, 2391, 254, 
             2390, 253}], 
            
            Line[{1238, 1211, 3820, 1214, 1218, 1220, 3828, 1224, 3826, 1226, 
             3834, 1230, 3836, 1232, 3819, 1242, 3844, 1244, 3848, 1250, 3851,
              1252, 3856, 1258, 3857, 1260, 3864, 1266, 3831, 1268}], 
            Line[{1269, 3833, 3832, 1267, 1261, 3859, 3858, 1259, 1253, 1251, 
             3850, 3849, 1245, 3845, 1243, 1233, 3838, 3837, 1231, 1227, 3827,
              1225, 1221, 3823, 1219, 1215, 1212, 3821, 1239}], 
            
            Line[{1272, 3843, 1236, 1240, 1246, 3846, 1248, 3853, 3854, 1254, 
             1256, 3861, 1262, 3865, 1264, 3839, 3840, 1276, 1278, 3874, 1284,
              3877, 1286, 3882, 1292, 1294, 3887, 1300, 3860, 1302}], 
            
            Line[{1303, 1301, 3889, 3888, 1295, 3883, 1293, 1287, 1285, 3876, 
             3875, 1279, 3871, 1277, 3841, 1265, 1263, 3863, 3862, 1257, 3852,
              1255, 3855, 1249, 1247, 3847, 1241, 3842, 1237, 1273}], 
            
            Line[{1306, 1270, 3869, 1274, 3873, 1280, 1282, 3879, 3880, 1288, 
             1290, 3885, 3886, 1296, 1298, 3866, 3867, 1310, 1312, 3899, 3900,
              1318, 1320, 3905, 1326, 3908, 1328, 3911, 1334, 1336}], 
            
            Line[{1337, 3884, 1335, 1329, 1327, 3907, 3906, 1321, 3902, 1319, 
             3901, 1313, 3896, 1311, 3868, 1299, 3891, 3890, 1297, 1291, 3878,
              1289, 3881, 1283, 3872, 1281, 1275, 1271, 3870, 1307}], 
            
            Line[{1340, 3895, 1304, 1308, 1314, 3897, 1316, 3904, 1322, 1324, 
             3910, 1330, 3912, 1332, 3892, 3893, 1344, 1346, 3924, 1352, 3927,
              1354, 3932, 1360, 3933, 1362, 3939, 1368, 3909, 1209}], 
            
            Line[{1371, 1428, 3990, 3989, 1424, 3985, 1422, 3984, 1418, 3979, 
             1416, 3978, 1412, 1410, 3946, 3945, 1401, 3970, 1399, 3966, 1393,
              3956, 1391, 3959, 1385, 1383, 3951, 1377, 3947, 1373, 1407}], 
            
            Line[{1374, 1338, 3918, 1342, 3923, 1348, 1350, 3929, 1356, 3928, 
             1358, 3936, 1364, 3943, 1366, 3915, 3916, 1378, 1380, 3952, 3953,
              1386, 1388, 3960, 1394, 3963, 1396, 3967, 1402, 1202}], 
            
            Line[{1404, 1436, 3996, 3995, 1435, 3994, 1434, 3993, 1433, 1432, 
             3992, 3991, 1431, 1430, 3972, 3971, 1426, 1425, 3987, 3986, 1420,
              1419, 3981, 3980, 1414, 1413, 3975, 1408, 3973, 1405, 1429}], 
            
            Line[{1406, 3948, 1372, 1376, 1382, 3950, 1384, 3957, 3958, 1390, 
             1392, 3964, 3965, 1398, 1400, 3944, 1409, 3974, 1411, 3976, 3977,
              1415, 1417, 3982, 3983, 1421, 1423, 3988, 1427, 3969, 1370}], 
            
            Line[{1441, 4126, 1637, 4152, 1631, 1629, 4146, 4145, 1623, 4139, 
             1621, 4138, 1615, 4133, 1613, 4099, 1601, 1599, 4122, 4121, 1593,
              1591, 4115, 4114, 1585, 4106, 1583, 1577, 1573, 4100, 1609}], 
            
            Line[{1448, 1603, 4125, 4124, 1597, 4119, 4118, 1595, 1589, 1587, 
             4110, 4109, 1581, 4105, 4104, 1579, 1569, 4096, 4095, 1563, 4089,
              1561, 1555, 1553, 4084, 1547, 4078, 1543, 1575}], 
            
            Line[{1451, 1437, 1439, 1438, 1442, 3999, 1443, 4000, 1444, 4001, 
             1445, 4002, 1446, 3998, 1454, 4006, 1455, 4008, 1460, 4009, 1461,
              4013, 1466, 4014, 1467, 4019, 1472, 3997, 1473}], 
            
            Line[{342, 2562, 2561, 341, 2559, 2558, 340, 2557, 2556, 339, 
             2554, 2553, 338, 2552, 2551, 337, 2549, 2548, 336, 2547, 335, 
             2546, 334}], 
            
            Line[{1476, 1449, 4004, 1452, 1456, 1458, 4012, 1462, 4010, 1464, 
             4018, 1468, 4020, 1470, 4003, 1480, 4028, 1482, 4032, 1488, 4035,
              1490, 4040, 1496, 4041, 1498, 4048, 1504, 4015, 1506}], 
            
            Line[{1507, 4017, 4016, 1505, 1499, 4043, 4042, 1497, 1491, 1489, 
             4034, 4033, 1483, 4029, 1481, 1471, 4022, 4021, 1469, 1465, 4011,
              1463, 1459, 4007, 1457, 1453, 1450, 4005, 1477}], 
            
            Line[{1510, 4027, 1474, 1478, 1484, 4030, 1486, 4037, 4038, 1492, 
             1494, 4045, 1500, 4049, 1502, 4023, 4024, 1514, 1516, 4056, 1522,
              4059, 1524, 4064, 1530, 1532, 4069, 1538, 4044, 1540}], 
            
            Line[{1541, 1539, 4071, 4070, 1533, 4065, 1531, 1525, 1523, 4058, 
             4057, 1517, 4053, 1515, 4025, 1503, 1501, 4047, 4046, 1495, 4036,
              1493, 4039, 1487, 1485, 4031, 1479, 4026, 1475, 1511}], 
            
            Line[{1544, 1508, 4051, 1512, 4055, 1518, 1520, 4061, 4062, 1526, 
             1528, 4067, 4068, 1534, 4072, 1536, 4050, 1548, 4080, 4081, 1550,
              1556, 4086, 1558, 4091, 1564, 4092, 1566, 1570}], 
            Line[{1571, 4066, 1567, 1565, 1559, 4088, 4087, 1557, 4085, 1551, 
             4082, 1549, 1537, 4076, 4075, 4074, 4073, 1535, 1529, 4060, 1527,
              4063, 1521, 4054, 1519, 1513, 1509, 4052, 1545}], 
            
            Line[{1574, 4079, 1542, 1546, 1552, 4083, 1554, 4090, 1560, 1562, 
             4094, 1568, 4101, 4102, 4103, 1578, 1580, 4108, 1586, 4111, 1588,
              4116, 1594, 4117, 1596, 4123, 1602, 4093, 1447}], 
            
            Line[{1605, 1662, 4174, 4173, 1658, 4169, 1656, 4168, 1652, 4163, 
             1650, 4162, 1646, 1644, 4130, 4129, 1635, 4154, 1633, 4150, 1627,
              4140, 1625, 4143, 1619, 1617, 4135, 1611, 4131, 1607, 1641}], 
            
            Line[{1608, 1572, 4077, 1576, 4107, 1582, 1584, 4113, 1590, 4112, 
             1592, 4120, 1598, 4127, 1600, 4097, 4098, 1612, 1614, 4136, 4137,
              1620, 1622, 4144, 1628, 4147, 1630, 4151, 1636, 1440}], 
            
            Line[{1638, 1670, 4180, 4179, 1669, 4178, 1668, 4177, 1667, 1666, 
             4176, 4175, 1665, 1664, 4156, 4155, 1660, 1659, 4171, 4170, 1654,
              1653, 4165, 4164, 1648, 1647, 4159, 1642, 4157, 1639, 1663}], 
            
            Line[{1640, 4132, 1606, 1610, 1616, 4134, 1618, 4141, 4142, 1624, 
             1626, 4148, 4149, 1632, 1634, 4128, 1643, 4158, 1645, 4160, 4161,
              1649, 1651, 4166, 4167, 1655, 1657, 4172, 1661, 4153, 1604}], 
            
            Line[{1675, 4310, 1871, 4336, 1865, 1863, 4330, 4329, 1857, 4323, 
             1855, 4322, 1849, 4317, 1847, 4283, 1835, 1833, 4306, 4305, 1827,
              1825, 4299, 4298, 1819, 4290, 1817, 1811, 1807, 4284, 1843}], 
            
            Line[{1682, 1837, 4309, 4308, 1831, 4303, 4302, 1829, 1823, 1821, 
             4294, 4293, 1815, 4289, 4288, 1813, 1803, 4280, 4279, 1797, 4273,
              1795, 1789, 1787, 4268, 1781, 4262, 1777, 1809}], 
            
            Line[{1685, 1671, 1673, 1672, 1676, 4183, 1677, 4184, 1678, 4185, 
             1679, 4186, 1680, 4182, 1688, 4190, 1689, 4192, 1694, 4193, 1695,
              4197, 1700, 4198, 1701, 4203, 1706, 4181, 1707}], 
            
            Line[{422, 2719, 2718, 421, 2716, 2715, 420, 2714, 2713, 419, 
             2711, 2710, 418, 2709, 2708, 417, 2706, 2705, 416, 2704, 415, 
             2703, 414}], 
            
            Line[{1710, 1683, 4188, 1686, 1690, 1692, 4196, 1696, 4194, 1698, 
             4202, 1702, 4204, 1704, 4187, 1714, 4212, 1716, 4216, 1722, 4219,
              1724, 4224, 1730, 4225, 1732, 4232, 1738, 4199, 1740}], 
            
            Line[{1741, 4201, 4200, 1739, 1733, 4227, 4226, 1731, 1725, 1723, 
             4218, 4217, 1717, 4213, 1715, 1705, 4206, 4205, 1703, 1699, 4195,
              1697, 1693, 4191, 1691, 1687, 1684, 4189, 1711}], 
            
            Line[{1744, 4211, 1708, 1712, 1718, 4214, 1720, 4221, 4222, 1726, 
             1728, 4229, 1734, 4233, 1736, 4207, 4208, 1748, 1750, 4240, 1756,
              4243, 1758, 4248, 1764, 1766, 4253, 1772, 4228, 1774}], 
            
            Line[{1775, 1773, 4255, 4254, 1767, 4249, 1765, 1759, 1757, 4242, 
             4241, 1751, 4237, 1749, 4209, 1737, 1735, 4231, 4230, 1729, 4220,
              1727, 4223, 1721, 1719, 4215, 1713, 4210, 1709, 1745}], 
            
            Line[{1778, 1742, 4235, 1746, 4239, 1752, 1754, 4245, 4246, 1760, 
             1762, 4251, 4252, 1768, 4256, 1770, 4234, 1782, 4264, 4265, 1784,
              1790, 4270, 1792, 4275, 1798, 4276, 1800, 1804}], 
            
            Line[{1805, 4250, 1801, 1799, 1793, 4272, 4271, 1791, 4269, 1785, 
             4266, 1783, 1771, 4260, 4259, 4258, 4257, 1769, 1763, 4244, 1761,
              4247, 1755, 4238, 1753, 1747, 1743, 4236, 1779}], 
            
            Line[{1808, 4263, 1776, 1780, 1786, 4267, 1788, 4274, 1794, 1796, 
             4278, 1802, 4285, 4286, 4287, 1812, 1814, 4292, 1820, 4295, 1822,
              4300, 1828, 4301, 1830, 4307, 1836, 4277, 1681}], 
            
            Line[{1839, 1896, 4358, 4357, 1892, 4353, 1890, 4352, 1886, 4347, 
             1884, 4346, 1880, 1878, 4314, 4313, 1869, 4338, 1867, 4334, 1861,
              4324, 1859, 4327, 1853, 1851, 4319, 1845, 4315, 1841, 1875}], 
            
            Line[{1842, 1806, 4261, 1810, 4291, 1816, 1818, 4297, 1824, 4296, 
             1826, 4304, 1832, 4311, 1834, 4281, 4282, 1846, 1848, 4320, 4321,
              1854, 1856, 4328, 1862, 4331, 1864, 4335, 1870, 1674}], 
            Line[{1872, 1904, 4364, 4363, 1903, 4362, 1902, 4361, 1901, 1900, 
             4360, 4359, 1899, 1898, 4340, 4339, 1894, 1893, 4355, 4354, 1888,
              1887, 4349, 4348, 1882, 1881, 4343, 1876, 4341, 1873, 1897}], 
            
            Line[{1874, 4316, 1840, 1844, 1850, 4318, 1852, 4325, 4326, 1858, 
             1860, 4332, 4333, 1866, 1868, 4312, 1877, 4342, 1879, 4344, 4345,
              1883, 1885, 4350, 4351, 1889, 1891, 4356, 1895, 4337, 
             1838}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1: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
v2RKlzZZr5zp+XXRnJdwv2HPYi2JZLzdYn1JjOBMQsSI++x18ei5dmH1wpne
uKtbOvsQmW8SFT9o4jYWP8DET1ncWLxBPBVvwMSbUfVYfKLF3bH4RCY+Dcff
K9Ori8EsG65fXx+5or5FiIcgmde7YvH9++TTUUMw+7jdlli07Cq71Ufw4c5t
t0tN5enoPCXnjMzbYLTdMuGDBJmXkgTX2/o5iVju08QhG+6EEuMsPkkROw91
fph6U8sDzzi+zcHNC4Bn2dTHAeS7IqZj+xfmU/sXmP3rT+130Kb2O7TR+92b
wgf4ROEDMPjgqTGGJ3iawhNk8EQoPoHjHfih6qqqHWvtk3B2V5qUEVl3S6sB
l+8itvhoRmbJgYkB6MSqmzmJ2GP90+jrd3K+4W6Y8+qliBUUxEZ+Gj0/fN7Y
b/7lQAaM/z3jk+/TUNj14UWqK+EFnXk3L3+cmwarFq3mdeoOhW9DInqvh//B
Wyih8BYYvN1O4TP0XR3DZ2Dw+ShrDM/BsngMz5HBcxr/cQeF/8jg/wmBMb5A
iZ4xvkCGL2opfoHpFL8Awy/PKD4CLoqPwInmI5q/IJniL2D4ayrFd3Cd4jtg
+G4yxY/AS/EjMvx4juJTKKD4FBk+pfkXaf5Fhn+XLIyc+0AlDKefX+hueyQV
/Ksmeu4ldhqvtTBd9j4cExJXCrF2pEKZfcFBYTI+7dhBY/4zCTgskTR++0Aq
pBcuaOYgetR6LJVi1NNwIM3m7FT5MPi51Ke4iPg/vDZRUePNJbyUUfNOZtEZ
mHBIcYolwYFOTbybr5mH94J98xUzfdH5jLhwNZlX9QneLYqFGTj+5IZL08h5
spjXXNKL6G9rj70WejMBXz180mdurIdnbNX3uZJ4ezVbt9zteyJGPc7Rqoi5
AAsVrxRMJuPLdgYqXnlpDz17Zi6WD4iHM7x4Oo2MhzaddubqlQfZ30K77Xcm
w8Inmvt6SBwujAVZn2o/nLDx2PXZqeGwrjV1KIKsr/SanlCDr9G4z8Lq9c7l
54H76tdN9mS8YvuBvA0bE5Ansqzs8zx9LJIWH59B9C84t7fiuGkYZjcK1x07
aI3Lpd5EGhH/z/tmpVCUFoLWC8IC/94wxmWTRuLqyPi5vZeuGxh5oQsH/0Nv
U1Nsme1gbkzih3dcj9f2DZG40995914uBzQVttj/inzXQ+TKdOOj6RB6LMv9
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
QSszTglNck8XoOWr2OS/bdv7sPNyPk40fyzqy5WMZzy4hzcQ+X10XVs4W10b
73vHhyYCZVijOc7/8YVM9ND71KBE7k0HaPlINvlV30zKz5L76aBdk9uZkXgM
r5bPeTDwvzq+UjZ7rlPnB+TaPXZ+QOb8oEPX981mq+9b3rRrg+L6IgzfqX7k
1KRwlMoujHhH1reErr+bwlZ/pxjK+/rVhBIsv7VVQvpPHG63zN2x5zULyml5
YTb5aOq8hAf8x85LyJyXOul77h+2e+5D6n4B1X5j9wtg7hdFdF3ba6pOGZk6
5YOv7k0LPJ+B5xqbj7vpJ6PiJM1vsWR95ek6vjS2Or67FH/BJYq/gOEvXbqe
8awHVc/InPeuFzlKPCG4E6TsbT9tMAcDNvg255DzSR1dD9hK1wNOp+sBV9y2
8PiZUIZ/W0709uam4e+24a5csr7VtH/msflH0B2lDs8qxFMS811u+sei+nLZ
7InkvHSQrnN8dYGqc3xL1zlKOfC6bxFLw+16Gqpz16egeeuCO1lkX3TTdYjR
dB3iVboO8dI+R91LO/Jx2ZbCXzKS+Xj6rqqi/CtyPqTlU9jkJwuzqlmz0pAj
7VryykemaNlexQtkP8rQ9kx0/Lc9nqvnXNs1bIdVxoK+LXbJUKhqfDWK8MtK
uh6zm67HZOqp368UeHfi6WWc/t0vz60nDxV3udjzkXPX+/+wZ1jtyMvv8lFo
Y6SzsNQwAfuPiqe6EHv46PrKbnWqvvInXV85oCWuuP+vN7q+fZWVKeEFFovF
nXtG442uA73PVge6lLqfwlHqfgrM/bSXln/CJv/H/8/NbSudsO/HcY7jwWfx
w/GrfwtInAjQ9vxls6evqaSm8HcoKEw56qucFQ9tbk4L9Ij+j3QdKBdbHagb
dR8H+j4OzH385X/YE0rleVCAyvMgk+fRoPIA2ELlAZDJAxRS9x1Mou47yNx3
ttL7JYltv3TEOzy1jQzFQ0Zcge9mFODa53ITvUnczuGbZbB6agAkaFrqrneN
gF9yUvwnyH5sputYP7PVsQb9+uN1k9yHo4dsNIyWpsBuufIV4sQ/N2j5r2zy
QieCK4uNvLDp1PO9CkczsKvwj+BxYn/IsoOzQ06mg4FlYL3pMXus4bvScYjc
4y4Kb7KwnVEErSfvTussKILLmb8vziX7sYPWz2n8b/13qLwT3KDyTsDknb7S
9bZJbPW2oRtzG0pvlkCVdklf74MImOS/yCyC7KMf6kndJrZVcNj1j0BeaQrU
WSytNCP3LBsqDwY2VB4MmDzYAK0/iE1/JZWXgw4qLwdMXk6crvPlZ6vzJfCe
OTL5Kiy6vCc3V6gI2s3/wIc8wke1Zb/S3teCX31DzKKiAmhIUTuJNYQfqfwh
cMmM5Q+ByR9O7aRwtZ8NV2dS+SIUofJFyOSLtOo/6Hp11ICgoOpeSfE8OGS6
oZ2vkQUua3aHLOMvA2/HD2FGnenQaTQUZdlDzvNUHhW4zMfyqKBK51EDqbwr
yPKM5V2RybtaUfleeLR9LN+LTL7X5/hYvhcKqHwvMvlezbqxvDEoUXljZPLG
b7u2B2zx9cDYdM1eSUEHONqYKH2C7NPgnMg7XdUxOP9Twynj9B1o3Lk7ePR9
u9b6GTYFFcH4wWuPurG1EmS2fCl/Q/xTUb7OeCTcDmyTb767FkzW/XDOtwmj
uEfXqb1lq1O75RSqbPsgDevlL67MMN8KnMLSxY9JfM5uSVH5OCMLb5Y0Tl60
xQeP7T+0kO87CyZt3Px3XcolXJKY9PN1czDm7Z4nmkL8bGAaMa2kLg/71n06
/7AlAh/x7l+9hZwn+VW6eDKP5+LloK2mua2hqBuouOkD2aeNA/WKJ/R1ULbz
Z6q9oC1eXDc3/iGZbx5dJxjKVid4fCgq34X3Irauc+usRXfsWJQ1pDFaj0bX
4fKy1eFWa3Wrf3p5Fh4+cD//STAKYiWXPn1Ixl8MB0f19/viIs+o7inbg3He
5co2OeKfY7QefjY9t4W8tGNCLuGb4u6LkVaRmNEtK3WL7IsNP48qdOumYXGr
dOZywwDcG7PKew/x23fdnGXjbCNxjcm54LlFIThxnO7ITeJn7f/QP+v57+66
NZHYLzot4wRnOAayONa7EfnDdB3xarY64sUTZXe+M49Gpx1c6poubnjRKzF6
9D2GuRCnkfQrMh/dKbMXF57DzkX9Re1kXrHS916LKcShTPwcw8KV0RinJ1F6
m+DzMVr/Wjb9FRERESu6fHH7cw6PEx2u2G4lvXWQ6LGk65f3sNUvy/8Zd+4v
SxmCz8+wsjb0hs9uX7hH67bme4Q6H8t2Bq55C09PIXjg+efI5pvEzv6tGUe9
dnvgJfElzcsv2eEW597Uk6Pvq2n9qmz6dz+J2ClWfA7P3eYvOt5mjVILf+W3
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
U9XO8+oigTArv9OwQisZZ8bqPBgdn0P3JzxO9yespfvvnQ1tzTzACoOFPX1T
jc+5Q1G98sTR98MqtD2SbPZ0dY44b2aFwttpiYH9MoYgHrG5OuT/lS89/E++
9MMXo/4HN4IgZpsHZ8++RLT+461uRvyTTvdFXMLWFzF5nVxVqJIr8MxPH/+0
LRmXq3233knkk/+jj+KlBYI7J13xwwIrnlaN2QnQHdN4/DORz6D7EMqz9SHk
ps5FuJY6FwFzLppA92N8yNaPUXycwjI/Xl/c/OHh9gHfJPj48KPk+V+jdRb/
7mfI+LOvyW/uEi1/+NzhnWotZo8ThSav4//L+Mee9supf/7/gir7CzpKxp6Q
OCuy54NsIHotMawYvX89Y+vTGET3abzjZxxrqhaM89a/89/TEgUGl7KDkNhp
9x99FNMWBAhmDjljltRtl7SqWLAyVyn/SOStafmFbPKmR3atPVHhDr0/Ez83
lYXjTP5ZtW9G+/nQ9hiy2fOgXP6GxWs3mKM4Qa/YNRaPjrvC85Ton033k+Rk
6yf57uKaCT8veSPXszrZU8FhIBiQO6uf6Lel7RFjs0ddfGHUzeQg3MV1fr7R
a284nx33zJh89wDdH1KZrT9kJ+Uf2En5Bxn/pP9HH8ud1PqCPbW+yKxvPC3v
yiavaNFQ+f/Q9d5xPf7f43+kkC0ZkWwhM1TWQdlSUiGVpKLSVCqkvffee2vv
ojqEpBQysislhAohGf0ez67H8+3zur4//16303mex3msc07Xde72d/1QY9ee
N8b85jB5nOCK2//Hnr0se2J9Tr6daemH55VyMoe0nkTsGL2ak6econ0so1h9
LGOY9QwZzHpG7nqOofbYs+wRvH9dreJsCIy4YTrSRioKs7v3vnjX/7c/Zwur
P6eK5usPYauJS9I7F/MkRUGsXtNAE9H/ifaxjKF9LBNpH8uJjH6cyegHrv7U
f+yvXad2fZ5j740PTizoDZ8UC9elygU0OfuF6o9l6f+2KTPcyiQQMxcK3ozV
cUXvmbjyN6cOQ/2TwvLPlH1rVDf+IPYEpsS2zQ/Ercrempy+E2dp/8/9rP6f
MXu9hmRODMBQU+vRHfKh8Gz/l8vhRP4rtSeCZY+qLkL1kjDcZ3vSWzXSDzoq
g29z+knepf08k1j9PE9OyxTfetEPl29+NO4c2ZcLVk5b2Eyea9G+o9dZfUdz
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
0s4pSPjFwVq/gaCDCoHQ+3TJlC1E/+XhpusTsuLB9UrkPjUlUxB20bsmQOR3
MXVOuMDUOZFb53zM1EXhFlMXRW5d9DxTj4V4ph6L3HqsIFOPxb1MPRa59Vhh
pq6LaUxdF7l1XZ97hoJVE8xhQmqgfFNtIGTqbhh9lMzLpFftMU6pTqhx7Hy2
fl8KHBGyjlUm6/xrecmRpUmWcKLR0XLHjgjQWvxOazGnH+++yUk4LhwX7/it
M8E4GY0kO++rkfN5O+UqCnT+l6s4yvekyektvlh/NOvagh2X4c/ETwO6nH7d
daMzj+3JxalWci94ZQvhw7dfcXEPu8FbT2LM/OYSfOwyat6WnxlgdfOS5VAi
b7p3aeVrXcQclUyPndtPQZGFltzkqm54aPNxeYUHouuk8ooO97PY5clnfvIq
udc2/H4+foIOGsvpv1zjWYoLx5wz2PCUnD+Ua+lNuZbZlGvZsppntcfzULCQ
VTb9vCMYZCvVbYdweIKUD5tA+bBIOZIbhd/NHr3SGsr7PhoM1bSHs97w3Ivz
/tuNNuOnV8KgMzFp95HrkTAs90sDJ792ZHFmuXqUlm9uzPxdgZpHSpTyJgWj
tDlYNt0g+8tITMQ67xLerBszVM41BCdOvP7r8D1yzneKdSsK2ENK9PvF1aWp
YH/s2Lr3RI8t1Z/J0q94pO7+oXlOcHlns1KCaiKsOrw8Bck5qU/5tv0svq2I
z+br6R+L8U2p+LH3pZE4zTv44zgSl65yv7Rpr3IJrj5xke9CURzG37af5vyk
GxpmTNeU3xqE9bm+6523e8Il80ZbznciOlT/G5Z+3Kv9aeVnTbyncnMVr5c/
yO1VD7vJ6XdKubqzWVzdtuV2x28czcN3D2Z0wcQ47P288dV4sh+TT/en39HN
xL3rr5t5fotB+epLtgkkbnT87XJ4hL0Ojjr5QkLWyAbCjmsnVg381S/C0v9o
jfKa11rn8fCIVncx7+MYbb/l4k0iP4/yfAspz1eN8nwVDVT6ditm4Ra5Wj7R
nASUeiczagp5Pu6PT8Xp4iTc3hxw3W9TOt5+n2alSOy5bR2TvMwsDu6nNyYo
dKTBG+WB6YIcfjTl9tJ1CNx1OCVcckQ4vx+4VH9bNTfHCz6PuWbI+T/UZsov
3sDiF6/JS1vp3JgEsj8sRm8i+e/42rk8U8nvLqD831wW/9ehNmnzt1wrOBb0
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
P8+m83KbNS/dH7/Ku97zBXcJUQWlR9GQenbsATeynvd4VuzbxecNIiLHmxTH
RgIP1K3dz+EdUy65CYtLHtLRm46TiB9fiQdI80Wg/qrk6gEOl1zyhGmiizOa
GcX9eLM4DDftGfguw+k/T7nzS1nc+Q8PBAKSevRhwZ09yidNXXF4wuOtBkT/
auqfvLb/+seB8uJNWLz4H0ai2iVLQ6H50E7tpOlG4Np6xOkx+d1llA9+hsUH
j6dc9WgWV134eVplsGsiDKxqff5YyhX2+3t0OJD5XUn54DtZfPAwyluvY/HW
BVvk94VYJUGutdjukOYgKJwe9LOSrB9DyhNPZfHEm2LkRSQ1o+G3lPOMs4t9
oD61cQfnOxdryvVeyeJ636Zc7wgW1/visPH8gi+8Ie3TtJuB2nZwhndc0wtO
X8RSm2nnV0qj4OqGEjEfN1w7eu80DgczeXYPmJP14fD8s9OBy7IYdNXoLWed
rKJ+s2f5LcLAS3nj9AR4KLM8dF9TKGgMa9JOJfsr9B/c+VrKW29k8dabhPaP
+iKXBksn8W3wOh4N15a+/aFFzoEb/+BTy1Cutz2L66268+eKU2XJ0KDdum7O
Dm9wXm4y2H/yCOV6F7G43gYLb7UmSkaD6IBB09VdB6Fao2xMGpn34ZRbbcji
VhcUep4ekeoEYhm38gw3+2K/sqR4PHl+i/r/NMv/HYcYnvVYFs86bO8Y+478
Uxgx7NDjj6HhOBJSB45z3ot+lFuxbMAPREQTpB6LhkG9YH9PGLGnfl0+tkfE
wFR3n+fTCmKAzzqEL63vL0/8Pcs/7+wNdMIjIqG2Y4nlI9dI0Cx/7j6OjNeK
8rJPsHjZZy7MKN431xFuRua+29FjB7teCReokXk37vDWFV9sVv5bovqKebvB
//LT8Q1P+J1Ou6EGT19kWZAjJq+Iucjpr8JD/abH8tteymW+wOIyv4xouDox
Ngrfp0w4uGVFNPI5+C6zIuufn3KZ17C4zPoPxDRjv0fhQLDPz6iRsdg++WZt
L/GD9j+4w2KMP3Eq40/k+nPBvkH/w3bG/8D1fzYzvxh4cXB+gTu/0yn3+efM
/3Kf5/smXzLkicOCw+G1Ub2aOMXHW+An5/yk4z3HGq805S9rs/jLAY9X14pa
pmBWYO0Z8ckBmOfaX/eA3DsmlC88lsUXNgu1q5FQTcOAS43Njy+S+D17u/iu
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
baK/yxHc+qdqytiPhXD2db6vA8nnBzm9RzzD6T2CQO9xUs726e8vOeLVW2Nz
efal8EXp6TWhxyR/ek98knEwGA3P/Wxcd6cEbqhtneVKxg2LpDavN4jBl/oL
v98ZmwJ157aHppL3Iq7EM9tKNxHlbETv7/vsjDZNreXbST3geS9nTev0JJz6
dOpO3ZiD6P5nWRPfb0iu8VSSv0QiVqXqmnW9D8ApA0RyU8m9ECFxT17lfTw2
2Dt3pJnH4/UnRyVVSV2tovGt2/1IJD4NuDlhct9ofPqk1Hs+mWf4ki+6Qp2B
OPrELRWjcWH4fu++hY7kvLnefjRcWT4QZ43V6dYfHIR+16XEVcm5GhKjYXPc
MADrNc50uEv44pkTa56+J+N71H+VHC8LwR19Jsjq7PJHr6JIhTFk/JLvAmUt
sUgccGW90L78AMyG+bUyZP49b2ryp6jG4fzhIpaXajwxe0Vnqw153+Opj8wf
6iPzgPrISC6xbRWvtYLRY8tFvpsUw82h/fYWkzrBuI9dk7aUC2aqHtm7XKoA
1u1o8TR49+/9Mpn7bvrRlbF4deex6nkDgsD91btRvcn3WlG/mL7UL+Yc9YuJ
ofsygdmXeRnRz967ROGry3kjDrxxw1Gv2i1OkOdqf7tx/Pb1gegx3n/g0yde
uLd03G9+fNqEzgQM/OyAzknT5MbMPY2rB44at6bH9+r/9oW507Vcbo67PsSk
HLhYancKq8aK5pSSz7c9eXIh79g+eKcvdsq0txeeaWyv5eNaw02qqgds3w8Z
wxbUdNUEotAKBacIvr7c7YLC6TNIPnEx+BkTFYyJ80wiJPn4Crovo5h98Vh4
4fmz5T7Q5CLcIGoeio//GL7g/248U3/xQOUcQ+iULtUd8S4e5yrEhdj++uvD
0kF9WMyoD8uI9K3L/d9FwrNap6KTUgkgYTemLobkn/LvCuOGTFmC9yZIrpKL
jCJ1revVfny9XOqzk8347DQkqly8JmaNsXD4qmGLL+zK3z/gPd83nMYniomP
JfXHCWb8cQqL79vZbTCBZTceXNn50R3crfLua3T/9XNh/VCCqI9MH+//+sjY
SS62TU0LhoroTxtbAwJgXR8dH5k//HqV80M5wvihRFF/mXrGX+b+L73J/l0J
MMtGpio+7xToVHdWZ3b+9XNxYvxTRnksXxNYEA4f3QfGSo9LQtRYtOYlea+/
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
coWaN2aXRpPn7aZ8ohSGTyTb88OJ89KYVg/yZ/C/30/0Kd9qIMO3Gtmcf352
tz8MH5+4qHV8ODQO6fwQTtaze92vuUfPpcDt/e2LJ671Adc5Jj0+L/WLC/FZ
ZCwM8vC9P6ooFvrZhPZLJ/vbSXlYlxke1g6bYXjbKgWsDe3HnA/3hBjDlZnS
5PN7/C7NGmKWCLUpZwzLjjrAhWjdVSYkniayde1JC2NgV/eRlmpVLbikc04y
nczzk/K5Whk+F8/xiEFEZBRcfyFn1ewWBXoV9z2kyLjWi1XL1yTGwpT0/Ku3
F4XDfZ+tm8X4Om+U/3WL4X9drBs6yKV/IrxN0tsBUkkA99o0lpLzv8X0bK2P
UhREjir/9UvKCWyszwyrI+u5UOxl1j/NBYZk1RUYrfDDzu0LZyaQ+E/j4okj
uHiiIJ4XNlR3HQ+Lh6KA+J9WU6NARjn8fROJw1HKLzvA8MtuTB6ze/w3d/Bp
t9n4cIozzgu28+1P9qtWSyU7BjZin+1dsi6bIvGc9Qtlfp5X2yjp+KLwKPr3
3dH6LiwCRSGtm+/350x5bUcYXpvPyTGlmyc5Q1NU/uu1H06B6hPpot1k/v33
rh9/VRSGZ0mHtbPbE39Hlt4ewcc5Uz6XOcPnWrG553tBhfteEHzvv3hwXxvb
hF3M3HFrrx9R54KdMWVubCYfX9cuxPHd0hm+WwYXZwzI7IkzCOLsnNv/yYwO
a7C7vDRlioUV5vomXufju7Kvc/y4qww/bjnlx1kz/LgbkdeqB8dF47PUQVor
58ZgPye/2dYk/jJ+KWVGveIxTDuiPvqLHo7w9RH7Rd7H1L6HVskOswfT8tDR
sl4h4Grb/KmTPO+SX5VNM90ssfP3jia39hC86//OpDdZZ7dJlvxGg3icZ3lK
t8EgCSNnCg/k19t7bk/Ti/sejd9DfH9Fi8bhs+GX67+QePr14fh6eQxfL5fy
0UYa/ZePlqzgc1NthxtuXOIadV7EGIZr3i3i62HOfrB/bIiwJ2rPu1tdWR+O
IWddH/P4OpOU97eV4f0toPy4PQw/zrd1fv14q1TMCKq3nDk8EAvcOhtuk7ru
2mW/+AV6Sbgu0C1ou2kA7nxavY6PbyynPLhuhgenQXlwzQwP7msuxysMZHiF
0rtazlbU+mCkuLz6nnQn/KwXZ9XQ9W++oUnYqSsKO9PRv+zmo9bMGIzIVZmp
St5rpRLJhsqAeAw5N+4G3gpAuUFxXlYkDzRSHuJMhoe4eZ13sEVsIjre1fow
9HsE+g6wm/CJ5L20YTnnw4UycMOBB1P2zIzH65csM2RInXlr+8dfO32TMPnY
tnm9FEIx1H+RxUjyvDzKZwxg+IwDKW9RkeEt6l40HVhLzkGOw8IcLVVXLB69
YmgDGX9ZOHnTeuVkVBuYrm2zOBIt7pZce0ri/yjirmuIfTL2VirMOhwQgtod
cmtiyTpHZ6uPEXWIxYe3VewPHI3AUyXjRVvIebbxTG5alBWJRq31qskZAdi1
6pJPL7KeCMqXdGL4kv+vrvOO5/L7/39LQ0lLe4iiqaWi0lNGi6SyskISSVbZ
W2bZe++RLVvpKSRRSCINlRIqs9D2O1evy/dz67r93rebv87tup3rvM451znP
53Ee98fcC8Hpjly+2G+e0zs9cSPeqB0W+U363ydvvqvh90TcdHhAUXmRJ84v
s9lD+WU0NjjfqCpMROvZaZf2dfuixR62z5tI+YRdSouNOuJQOiJO+vIjd+Sp
XCelQ/o/2eTbNq0VXji/9h7fETlz7GlV4qDWgUT2A5ISdwzxrLP+Vva9bvC4
t1ieipe88v/GUZDPiqNgPI7KZMXVUMeKq0GPjqtlaV0nMHSdZv7Tvzybbglv
PsUf/TNyBTgzH2SUUr4tO3sMB2WS4MfPhX2e7f5w8HNHvBPFBRppixjamQgz
dcKap73yh4qMhfLC5HclCK2+a3PbE+Fh3nfxNxF4S19rggR57wNaHyrL0Ie+
XcOTEn4uEJUEbwp2sBvi0c1Rr2Sp+UzrQFUYOlDr5qMj/Mkkjg9839vzJxi3
VCYGepN6NKwvc5qpRuOluSlqF5f7YmvlhGPU+Y8wrRvlZ+hG9WndaLDFv7rR
JSvdv0/7tgSHKqOf68R4gkSkXq0MKU/jPHyjQ9YGvm9c/HHUygTTl8d4FpNy
iUvDM/aSdT+7Xmow4Uwghu8rSRCjdM20/tSeoT9NvTLkOLrIAtsXJufJTPVC
+/6yxTNIPREW80bvFDvinc/zbbw6bEBcoEmeWse+66/yGxi+CpyNx3GaTTjw
V2YFNJN6Yll5EDiw8iAYz4M8aX3rR+1/9a0cSWFlp8Vc0KBOzNb/kDnJk7J4
DCg9FK17bWToXrV+nP86ujkQ+u8u63y/6Apkhwf3UedLjq3z31QdvwgSZ/Ly
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
6WDTRdrvSPMq9Ri8ylCaD2nH4ENesXn+ZWRnOHxTOWhun+AKV04cL6B4Jgdp
nmc0g+f5mV+yUf+XMUzN1j/2x14ZTG9VzaD2NTOOPVbJKYFQEDkk/czPDw5P
VvfiJuOoSPM/pRj8T7fY5RrHfgbDwtb0s5ucXUD5ZsAsG/J81PNLWjusyHfX
X9X0PdMOipa+KjYk/RZaLKTtJhsHVSfX52oGhkB814RFa8g8f/ZTY43vnzjg
seQuj812APW7P+6mUf4FNF/0CoMvGtc37ViDeQa8bij7ImGdBAFs0w8vJf1T
OW/mueMaBpBewv7h7Hwf+H5Qcv5E8rvu0jxSVwaP9KtGldqDp4EwYmCrtnHf
NVg7E9UDqXn7vOlIwWAAQFJr4+EbHvj1jKsbpduSYS9pef8zDCzOnU4ZOu2F
ebZvJVx+/Y9reoHBNV3qsV/SPzcU+t3nRC9dmYB4Skiyi7qvS3M7NzG4nWyW
LsLecSlg+eHkqqBLSfBii9NkLpLXrOxV2/xkTxHIuY8occ6+CTY/9WWLSdye
ajf2o9OkCMQcM7q/haRBsvR6vitNJM4pFkrWSPaEe0uvyOZPSMHDWu+yppP3
7qZ5qpYMnuolmi+6k8EX5aR5qj4MnurrSrc7bUUuaP82wGjG41BQ/Sy8iIf0
j4enf2rQjWJoW3r68ka9eGjEab3+zf2gMhQcWpYaB5P2d5l9Ec+HUskDv3RI
/P+D5qyaMDirZby/Vao35gK8KTyQ6xMDhYoCIcmkf/Y1vZuyJq0EJF8lzqwu
TwDrpHjdsEYSV1+Vvt5bnw3Lgz04PUy8cPY9hbpTZL+Lo3mthxi81hy9xybK
95JBzN82u2tTKXQvPnX7I4krdKY+OXxhXjJ0w+qRPS9zISj4V/D59//ju+5i
8F2tj1XzWzTlgKSsl/z3VeWgrz3k+i6D7MsiMpE8LdFQ/aBdP/ZrPNo6TbRP
I/uOppuhVbqCG0yzmJM/eV0Bmidpphq/64dZVX/7E3xY/Ynj/VklWb+AfUsm
bHva1qA4Pw/k2wbr28n+20zzYycz+LHsmTZX2peagVj+7uQD+wrQ4M7R1iRS
/6vJIusmTzqOf04oruhdUIKb2F0OB5F1o3FP5k4vF2tYw11b4a1WiGymk0tt
SX5qZbllX0JeCswqUxFtmRMALbvnPqgj8Rg3zbN1ZfBsOc3WlOiUucHdTFNh
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
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0.09259458092137765, 0.7486122776543305}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 3}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
       1.4}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10, 15, 20}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
        0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
        0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
        0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
        0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
        0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
        0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 0.25, {2, 1, {1, 1}} -> 
        0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
        0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 
        0.25, {2, 2, {-1, 1}} -> 0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
        0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
        0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
        0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
        0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 
        0.25, {1, 3, {1, -1}} -> 0.25, {1, 3, {0, 0}} -> 
        0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
        0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 
        0.25, {2, 3, {1, 0}} -> 0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0\
.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 0.25, {3, 1, {-1, 0}} -> 
        0.25, {3, 1, {0, -1}} -> 0.25, {3, 1, {-1, -1}} -> 
        0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
        0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
        0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
        0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
        0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 0.25, {3, 2, {1, 1}} -> 
        0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
        0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 
        0.25, {3, 3, {-1, 1}} -> 0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
        0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {0.4, 
       1.2}, {1.3, 1.4}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10, 15, 20}, "numberOfMasses" -> 3, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
         0.8200836820083681, 0.1673640167364017}, {0.6778242677824267, 
         0.6485355648535565}}, 
        "mPosFirstCell" -> {{0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, 
        "pointsDataTable" -> CompressedData["
1:eJw9kkFKA0EQRXsSo1EkeAWvYLKvOoNHEIzuvIpLM2ThNVzVbIPRjausFARh
IKBiCEokmun/fwqaT3d113/V3cdnV6fn7ZRSM3qb0dqMQb+JryhHTXSqYY43
u8i6jodpEzuO/GdIkV9yXhvqvMYIdfwm68T+crzHbZ7fsd7c5APd9ZTj2+6R
jz64DOsf1ORY33Odg18dSG85WffAwbUiZ1GV5BI/eJKLH/mfeCQH1p9M/PAr
XPzkDvQ7s5IqfuxrufiH9EV+xfMvJn6st138GWO6YH9dcbJuj/3WUWBDpf71
rjo3BleQOy6p4rxGfwa/Ln3ndsJ7oRrua0H/JfvdJ0fhv/m9n+mz1j1zX2fb
F7gO+U9moTr6B9Aj/westChU
         "], "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{{
          1, 2, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
           0.5, -0.5}, {-0.5, 0.5}}}, {
          1, 3, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
           0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
           0.7538461538461539}}}}, {{
          2, 1, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
           0.5, -0.5}, {-0.5, 0.5}}}, {
          2, 3, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
           0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
           0.047058823529411736`}}}}, {{
          3, 1, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
           0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
           0.7538461538461539}}}, {
          3, 2, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
           0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
           0.047058823529411736`}}}}}, {{{
          1, 3, {-1, 0}, 0.25, 0.45000000000000007`, {0.9, 0.7}, {1.2, 
           0.09999999999999987}, {{
           0.19999999999999987`, -0.3999999999999999}, {-0.3999999999999999, 
           0.8}}}, {
          1, 2, {-1, 0}, 0.25, 1., {0.9, 0.7}, {
           0.30000000000000004`, -0.10000000000000009`}, {{0.36, 0.48}, {0.48,
            0.6400000000000001}}}, {
          1, 2, {-1, 1}, 0.25, 1.6899999999999995`, {0.9, 0.7}, {
           2.1999999999999997`, 0.7}, {{0.9999999999999999, 0.}, {0., 0.}}}, {
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 3, {0, -1}, 0.25, 2.2600000000000002`, {0.9, 
           0.7}, {-0.5999999999999999, 0.5999999999999999}, {{
           0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
           0.004424778761061955}}}, {
          1, 3, {1, -1}, 0.25, 3.3999999999999995`, {0.9, 
           0.7}, {-0.4999999999999998, 1.9}, {{
           0.5764705882352942, -0.4941176470588236}, {-0.4941176470588236, 
           0.423529411764706}}}, {
          1, 2, {1, 0}, 0.25, 3.4000000000000004`, {0.9, 0.7}, {0.5, 2.5}, {{
           0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 2, {0, 1}, 0.25, 3.65, {0.9, 0.7}, {2.3, 2.}, {{
           0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
           0.463013698630137}}}, {
          1, 3, {1, 0}, 0.25, 4.25, {0.9, 0.7}, {1.4000000000000001`, 2.7}, {{
           0.05882352941176473, 0.23529411764705888`}, {0.23529411764705888`, 
           0.9411764705882353}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 3, {-1, -1}, 0.25, 4.520000000000001, {0.9, 
           0.7}, {-0.7, -0.7000000000000002}, {{0.5663716814159291, 
           0.49557522123893794`}, {0.49557522123893794`, 
           0.43362831858407075`}}}, {
          1, 3, {-1, 1}, 0.25, 4.879999999999999, {0.9, 0.7}, {
           3.0999999999999996`, 0.8999999999999999}, {{0.9918032786885246, 
           0.09016393442622948}, {0.09016393442622948, 
           0.008196721311475407}}}, {
          1, 2, {0, -1}, 0.25, 5.85, {0.9, 0.7}, {-1.5, 
           0.3999999999999999}, {{0.9846153846153846, 0.1230769230769231}, {
           0.1230769230769231, 0.015384615384615389`}}}, {
          1, 2, {1, -1}, 0.25, 6.289999999999999, {0.9, 0.7}, {-1.4, 1.7}, {{
           0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`,
            0.15898251192368842`}}}, {
          1, 3, {0, 1}, 0.25, 7.540000000000002, {0.9, 0.7}, {3.2, 2.2}, {{
           0.7015915119363394, 0.45755968169761274`}, {0.45755968169761274`, 
           0.2984084880636605}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          1, 2, {-1, -1}, 0.25, 8.81, {0.9, 
           0.7}, {-1.6, -0.9000000000000001}, {{0.7094211123723042, 
           0.4540295119182747}, {0.4540295119182747, 
           0.29057888762769585`}}}, {
          1, 2, {1, 1}, 0.25, 9.009999999999998, {0.9, 0.7}, {2.4, 3.3}, {{
           0.24972253052164267`, 0.4328523862375139}, {0.4328523862375139, 
           0.7502774694783573}}}, {
          1, 3, {1, 1}, 0.25, 13.599999999999998`, {0.9, 0.7}, {3.3, 3.5}, {{
           0.423529411764706, 0.4941176470588236}, {0.4941176470588236, 
           0.5764705882352942}}}}, {{
          2, 1, {1, 0}, 0.25, 1., {0.4, 1.2}, {1., 2.}, {{0.36, 0.48}, {0.48, 
           0.6400000000000001}}}, {
          2, 3, {1, -1}, 0.25, 1.2999999999999996`, {0.4, 
           1.2}, {-0.4999999999999998, 1.9}, {{
           0.623076923076923, -0.4846153846153846}, {-0.4846153846153846, 
           0.376923076923077}}}, {
          2, 3, {0, -1}, 0.25, 1.3599999999999999`, {0.4, 
           1.2}, {-0.5999999999999999, 0.5999999999999999}, {{
           0.7352941176470588, 0.44117647058823534`}, {0.44117647058823534`, 
           0.2647058823529413}}}, {
          2, 1, {1, -1}, 0.25, 1.6899999999999995`, {0.4, 
           1.2}, {-0.8999999999999998, 1.2}, {{0.9999999999999999, 0.}, {0., 
           0.}}}, {2, 2, {1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {0.5, 
           2.5}, {{0.005882352941176467, 0.0764705882352941}, {
           0.0764705882352941, 0.9941176470588234}}}, {
          2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {
           0.30000000000000004`, -0.10000000000000009`}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          2, 3, {-1, 0}, 0.25, 1.85, {0.4, 1.2}, {1.2, 
           0.09999999999999987}, {{
           0.34594594594594585`, -0.4756756756756756}, {-0.4756756756756756, 
           0.654054054054054}}}, {
          2, 3, {1, 0}, 0.25, 3.250000000000001, {0.4, 1.2}, {
           1.4000000000000001`, 2.7}, {{0.3076923076923076, 
           0.46153846153846145`}, {0.46153846153846145`, 
           0.6923076923076924}}}, {
          2, 1, {-1, 0}, 0.25, 3.4000000000000004`, {0.4, 1.2}, {
           0.8, -0.6000000000000001}, {{
           0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
          2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {-1.4, 
           1.7}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {
           2.1999999999999997`, 0.7}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          2, 1, {0, -1}, 0.25, 3.65, {0.4, 
           1.2}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
           0.463013698630137}}}, {
          2, 2, {0, 1}, 0.25, 4.25, {0.4, 1.2}, {2.3, 2.}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          2, 2, {0, -1}, 0.25, 4.25, {0.4, 1.2}, {-1.5, 
           0.3999999999999999}, {{0.8494117647058823, 0.35764705882352943`}, {
           0.35764705882352943`, 0.15058823529411766`}}}, {
          2, 3, {-1, -1}, 0.25, 4.82, {0.4, 
           1.2}, {-0.7, -0.7000000000000002}, {{0.25103734439834025`, 
           0.4336099585062241}, {0.4336099585062241, 0.7489626556016598}}}, {
          2, 1, {0, 1}, 0.25, 5.85, {0.4, 1.2}, {2.8, 1.5}, {{
           0.9846153846153846, 0.1230769230769231}, {0.1230769230769231, 
           0.015384615384615389`}}}, {
          2, 1, {-1, 1}, 0.25, 6.289999999999999, {0.4, 1.2}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`,
            0.15898251192368842`}}}, {
          2, 3, {-1, 1}, 0.25, 7.379999999999998, {0.4, 1.2}, {
           3.0999999999999996`, 0.8999999999999999}, {{
           0.9878048780487806, -0.10975609756097565`}, {-0.10975609756097565`,
            0.01219512195121952}}}, {
          2, 2, {1, 1}, 0.25, 8.409999999999998, {0.4, 1.2}, {2.4, 3.3}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          2, 2, {-1, -1}, 0.25, 8.41, {0.4, 
           1.2}, {-1.6, -0.9000000000000001}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          2, 1, {1, 1}, 0.25, 8.809999999999999, {0.4, 1.2}, {2.9, 2.8}, {{
           0.7094211123723043, 0.4540295119182747}, {0.4540295119182747, 
           0.2905788876276958}}}, {
          2, 3, {0, 1}, 0.25, 8.840000000000002, {0.4, 1.2}, {3.2, 2.2}, {{
           0.8868778280542986, 0.3167420814479638}, {0.3167420814479638, 
           0.11312217194570139`}}}, {
          2, 1, {-1, -1}, 0.25, 9.010000000000002, {0.4, 
           1.2}, {-1.1, -1.4000000000000001`}, {{0.24972253052164256`, 
           0.4328523862375138}, {0.4328523862375138, 0.7502774694783573}}}, {
          2, 3, {1, 1}, 0.25, 13.7, {0.4, 1.2}, {3.3, 3.5}, {{
           0.6138686131386862, 0.48686131386861314`}, {0.48686131386861314`, 
           0.3861313868613139}}}}, {{
          3, 1, {1, 0}, 0.25, 0.4500000000000001, {1.3, 1.4}, {1., 2.}, {{
           0.19999999999999998`, -0.39999999999999997`}, \
{-0.39999999999999997`, 0.7999999999999999}}}, {
          3, 2, {-1, 1}, 0.25, 1.2999999999999994`, {1.3, 1.4}, {
           2.1999999999999997`, 0.7}, {{
           0.6230769230769229, -0.48461538461538467`}, {-0.48461538461538467`,
            0.3769230769230771}}}, {
          3, 2, {0, 1}, 0.25, 1.3599999999999997`, {1.3, 1.4}, {2.3, 2.}, {{
           0.7352941176470587, 0.4411764705882354}, {0.4411764705882354, 
           0.2647058823529413}}}, {
          3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3, 1.4}, {
           1.4000000000000001`, 2.7}, {{0.005882352941176479, 
           0.07647058823529418}, {0.07647058823529418, 
           0.9941176470588236}}}, {
          3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3, 1.4}, {1.2, 
           0.09999999999999987}, {{0.00588235294117648, 
           0.07647058823529418}, {0.07647058823529418, 
           0.9941176470588234}}}, {
          3, 2, {1, 0}, 0.25, 1.8500000000000003`, {1.3, 1.4}, {0.5, 2.5}, {{
           0.34594594594594597`, -0.47567567567567565`}, \
{-0.47567567567567565`, 0.654054054054054}}}, {
          3, 1, {0, 1}, 0.25, 2.26, {1.3, 1.4}, {2.8, 1.5}, {{
           0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
           0.004424778761061955}}}, {
          3, 2, {-1, 0}, 0.25, 3.25, {1.3, 1.4}, {
           0.30000000000000004`, -0.10000000000000009`}, {{0.3076923076923077,
            0.46153846153846156`}, {0.46153846153846156`, 
           0.6923076923076923}}}, {
          3, 1, {-1, 1}, 0.25, 3.399999999999999, {1.3, 1.4}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.576470588235294, -0.4941176470588235}, {-0.4941176470588235, 
           0.423529411764706}}}, {
          3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3, 
           1.4}, {-0.4999999999999998, 1.9}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          3, 3, {-1, 1}, 0.25, 3.4899999999999984`, {1.3, 1.4}, {
           3.0999999999999996`, 0.8999999999999999}, {{
           0.9283667621776505, -0.25787965616045855`}, {-0.25787965616045855`,
            0.07163323782234961}}}, {
          3, 3, {0, 1}, 0.25, 4.250000000000001, {1.3, 1.4}, {3.2, 2.2}, {{
           0.8494117647058822, 0.3576470588235295}, {0.3576470588235295, 
           0.15058823529411772`}}}, {
          3, 3, {0, -1}, 0.25, 4.25, {1.3, 1.4}, {-0.5999999999999999, 
           0.5999999999999999}, {{0.8494117647058823, 0.35764705882352943`}, {
           0.35764705882352943`, 0.15058823529411766`}}}, {
          3, 1, {-1, 0}, 0.25, 4.25, {1.3, 1.4}, {
           0.8, -0.6000000000000001}, {{0.058823529411764705`, 
           0.23529411764705882`}, {0.23529411764705882`, 
           0.9411764705882353}}}, {
          3, 1, {1, 1}, 0.25, 4.52, {1.3, 1.4}, {2.9, 2.8}, {{
           0.5663716814159292, 0.49557522123893805`}, {0.49557522123893805`, 
           0.43362831858407075`}}}, {
          3, 2, {1, 1}, 0.25, 4.819999999999999, {1.3, 1.4}, {2.4, 3.3}, {{
           0.2510373443983402, 0.4336099585062241}, {0.4336099585062241, 
           0.7489626556016598}}}, {
          3, 1, {1, -1}, 0.25, 4.879999999999999, {1.3, 
           1.4}, {-0.8999999999999998, 1.2}, {{0.9918032786885246, 
           0.09016393442622948}, {0.09016393442622948, 
           0.008196721311475407}}}, {
          3, 2, {1, -1}, 0.25, 7.380000000000001, {1.3, 1.4}, {-1.4, 1.7}, {{
           0.9878048780487805, -0.10975609756097562`}, {-0.10975609756097562`,
            0.012195121951219514`}}}, {
          3, 1, {0, -1}, 0.25, 7.539999999999999, {1.3, 
           1.4}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.7015915119363395, 0.45755968169761274`}, {0.45755968169761274`, 
           0.2984084880636605}}}, {
          3, 3, {1, 1}, 0.25, 8.41, {1.3, 1.4}, {3.3, 3.5}, {{
           0.4756242568370986, 0.49940546967895355`}, {0.49940546967895355`, 
           0.5243757431629014}}}, {
          3, 3, {-1, -1}, 0.25, 8.41, {1.3, 
           1.4}, {-0.7, -0.7000000000000002}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          3, 2, {0, -1}, 0.25, 8.84, {1.3, 1.4}, {-1.5, 
           0.3999999999999999}, {{0.8868778280542985, 0.3167420814479638}, {
           0.3167420814479638, 0.11312217194570136`}}}, {
          3, 1, {-1, -1}, 0.25, 13.600000000000001`, {1.3, 
           1.4}, {-1.1, -1.4000000000000001`}, {{0.42352941176470593`, 
           0.4941176470588235}, {0.4941176470588235, 0.576470588235294}}}, {
          3, 2, {-1, -1}, 0.25, 13.700000000000001`, {1.3, 
           1.4}, {-1.6, -0.9000000000000001}, {{0.6138686131386862, 
           0.4868613138686131}, {0.4868613138686131, 
           0.38613138686131376`}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = {
    515., {254., 261.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{{
            1, 2, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
             0.5, -0.5}, {-0.5, 0.5}}}, {
            1, 3, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
             0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
             0.7538461538461539}}}}, {{
            2, 1, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
             0.5, -0.5}, {-0.5, 0.5}}}, {
            2, 3, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
             0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`,
              0.047058823529411736`}}}}, {{
            3, 1, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
             0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
             0.7538461538461539}}}, {
            3, 2, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
             0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`,
              0.047058823529411736`}}}}}, {{{
            1, 3, {-1, 0}, 0.25, 0.45000000000000007`, {0.9, 0.7}, {1.2, 
             0.09999999999999987}, {{
             0.19999999999999987`, -0.3999999999999999}, {-0.3999999999999999,
              0.8}}}, {
            1, 2, {-1, 0}, 0.25, 1., {0.9, 0.7}, {
             0.30000000000000004`, -0.10000000000000009`}, {{0.36, 0.48}, {
             0.48, 0.6400000000000001}}}, {
            1, 2, {-1, 1}, 0.25, 1.6899999999999995`, {0.9, 0.7}, {
             2.1999999999999997`, 0.7}, {{0.9999999999999999, 0.}, {0., 
             0.}}}, {1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1.,
              2.}, {{0.005882352941176467, 0.0764705882352941}, {
             0.0764705882352941, 0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 3, {0, -1}, 0.25, 2.2600000000000002`, {0.9, 
             0.7}, {-0.5999999999999999, 0.5999999999999999}, {{
             0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
             0.004424778761061955}}}, {
            1, 3, {1, -1}, 0.25, 3.3999999999999995`, {0.9, 
             0.7}, {-0.4999999999999998, 1.9}, {{
             0.5764705882352942, -0.4941176470588236}, {-0.4941176470588236, 
             0.423529411764706}}}, {
            1, 2, {1, 0}, 0.25, 3.4000000000000004`, {0.9, 0.7}, {0.5, 
             2.5}, {{0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 2, {0, 1}, 0.25, 3.65, {0.9, 0.7}, {2.3, 2.}, {{
             0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
             0.463013698630137}}}, {
            1, 3, {1, 0}, 0.25, 4.25, {0.9, 0.7}, {1.4000000000000001`, 
             2.7}, {{0.05882352941176473, 0.23529411764705888`}, {
             0.23529411764705888`, 0.9411764705882353}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 3, {-1, -1}, 0.25, 4.520000000000001, {0.9, 
             0.7}, {-0.7, -0.7000000000000002}, {{0.5663716814159291, 
             0.49557522123893794`}, {0.49557522123893794`, 
             0.43362831858407075`}}}, {
            1, 3, {-1, 1}, 0.25, 4.879999999999999, {0.9, 0.7}, {
             3.0999999999999996`, 0.8999999999999999}, {{0.9918032786885246, 
             0.09016393442622948}, {0.09016393442622948, 
             0.008196721311475407}}}, {
            1, 2, {0, -1}, 0.25, 5.85, {0.9, 0.7}, {-1.5, 
             0.3999999999999999}, {{0.9846153846153846, 0.1230769230769231}, {
             0.1230769230769231, 0.015384615384615389`}}}, {
            1, 2, {1, -1}, 0.25, 6.289999999999999, {0.9, 0.7}, {-1.4, 
             1.7}, {{0.8410174880763116, -0.36565977742448336`}, \
{-0.36565977742448336`, 0.15898251192368842`}}}, {
            1, 3, {0, 1}, 0.25, 7.540000000000002, {0.9, 0.7}, {3.2, 2.2}, {{
             0.7015915119363394, 0.45755968169761274`}, {0.45755968169761274`,
              0.2984084880636605}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            1, 2, {-1, -1}, 0.25, 8.81, {0.9, 
             0.7}, {-1.6, -0.9000000000000001}, {{0.7094211123723042, 
             0.4540295119182747}, {0.4540295119182747, 
             0.29057888762769585`}}}, {
            1, 2, {1, 1}, 0.25, 9.009999999999998, {0.9, 0.7}, {2.4, 3.3}, {{
             0.24972253052164267`, 0.4328523862375139}, {0.4328523862375139, 
             0.7502774694783573}}}, {
            1, 3, {1, 1}, 0.25, 13.599999999999998`, {0.9, 0.7}, {3.3, 
             3.5}, {{0.423529411764706, 0.4941176470588236}, {
             0.4941176470588236, 0.5764705882352942}}}}, {{
            2, 1, {1, 0}, 0.25, 1., {0.4, 1.2}, {1., 2.}, {{0.36, 0.48}, {
             0.48, 0.6400000000000001}}}, {
            2, 3, {1, -1}, 0.25, 1.2999999999999996`, {0.4, 
             1.2}, {-0.4999999999999998, 1.9}, {{
             0.623076923076923, -0.4846153846153846}, {-0.4846153846153846, 
             0.376923076923077}}}, {
            2, 3, {0, -1}, 0.25, 1.3599999999999999`, {0.4, 
             1.2}, {-0.5999999999999999, 0.5999999999999999}, {{
             0.7352941176470588, 0.44117647058823534`}, {0.44117647058823534`,
              0.2647058823529413}}}, {
            2, 1, {1, -1}, 0.25, 1.6899999999999995`, {0.4, 
             1.2}, {-0.8999999999999998, 1.2}, {{0.9999999999999999, 0.}, {0.,
              0.}}}, {
            2, 2, {1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {0.5, 
             2.5}, {{0.005882352941176467, 0.0764705882352941}, {
             0.0764705882352941, 0.9941176470588234}}}, {
            2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {
             0.30000000000000004`, -0.10000000000000009`}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            2, 3, {-1, 0}, 0.25, 1.85, {0.4, 1.2}, {1.2, 
             0.09999999999999987}, {{
             0.34594594594594585`, -0.4756756756756756}, {-0.4756756756756756,
              0.654054054054054}}}, {
            2, 3, {1, 0}, 0.25, 3.250000000000001, {0.4, 1.2}, {
             1.4000000000000001`, 2.7}, {{0.3076923076923076, 
             0.46153846153846145`}, {0.46153846153846145`, 
             0.6923076923076924}}}, {
            2, 1, {-1, 0}, 0.25, 3.4000000000000004`, {0.4, 1.2}, {
             0.8, -0.6000000000000001}, {{
             0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
            2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {-1.4, 
             1.7}, {{0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {
             2.1999999999999997`, 0.7}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            2, 1, {0, -1}, 0.25, 3.65, {0.4, 
             1.2}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
             0.463013698630137}}}, {
            2, 2, {0, 1}, 0.25, 4.25, {0.4, 1.2}, {2.3, 2.}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            2, 2, {0, -1}, 0.25, 4.25, {0.4, 1.2}, {-1.5, 
             0.3999999999999999}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            2, 3, {-1, -1}, 0.25, 4.82, {0.4, 
             1.2}, {-0.7, -0.7000000000000002}, {{0.25103734439834025`, 
             0.4336099585062241}, {0.4336099585062241, 
             0.7489626556016598}}}, {
            2, 1, {0, 1}, 0.25, 5.85, {0.4, 1.2}, {2.8, 1.5}, {{
             0.9846153846153846, 0.1230769230769231}, {0.1230769230769231, 
             0.015384615384615389`}}}, {
            2, 1, {-1, 1}, 0.25, 6.289999999999999, {0.4, 1.2}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.8410174880763116, -0.36565977742448336`}, \
{-0.36565977742448336`, 0.15898251192368842`}}}, {
            2, 3, {-1, 1}, 0.25, 7.379999999999998, {0.4, 1.2}, {
             3.0999999999999996`, 0.8999999999999999}, {{
             0.9878048780487806, -0.10975609756097565`}, \
{-0.10975609756097565`, 0.01219512195121952}}}, {
            2, 2, {1, 1}, 0.25, 8.409999999999998, {0.4, 1.2}, {2.4, 3.3}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            2, 2, {-1, -1}, 0.25, 8.41, {0.4, 
             1.2}, {-1.6, -0.9000000000000001}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            2, 1, {1, 1}, 0.25, 8.809999999999999, {0.4, 1.2}, {2.9, 2.8}, {{
             0.7094211123723043, 0.4540295119182747}, {0.4540295119182747, 
             0.2905788876276958}}}, {
            2, 3, {0, 1}, 0.25, 8.840000000000002, {0.4, 1.2}, {3.2, 2.2}, {{
             0.8868778280542986, 0.3167420814479638}, {0.3167420814479638, 
             0.11312217194570139`}}}, {
            2, 1, {-1, -1}, 0.25, 9.010000000000002, {0.4, 
             1.2}, {-1.1, -1.4000000000000001`}, {{0.24972253052164256`, 
             0.4328523862375138}, {0.4328523862375138, 
             0.7502774694783573}}}, {
            2, 3, {1, 1}, 0.25, 13.7, {0.4, 1.2}, {3.3, 3.5}, {{
             0.6138686131386862, 0.48686131386861314`}, {0.48686131386861314`,
              0.3861313868613139}}}}, {{
            3, 1, {1, 0}, 0.25, 0.4500000000000001, {1.3, 1.4}, {1., 2.}, {{
             0.19999999999999998`, -0.39999999999999997`}, \
{-0.39999999999999997`, 0.7999999999999999}}}, {
            3, 2, {-1, 1}, 0.25, 1.2999999999999994`, {1.3, 1.4}, {
             2.1999999999999997`, 0.7}, {{
             0.6230769230769229, -0.48461538461538467`}, \
{-0.48461538461538467`, 0.3769230769230771}}}, {
            3, 2, {0, 1}, 0.25, 1.3599999999999997`, {1.3, 1.4}, {2.3, 2.}, {{
             0.7352941176470587, 0.4411764705882354}, {0.4411764705882354, 
             0.2647058823529413}}}, {
            3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3, 1.4}, {
             1.4000000000000001`, 2.7}, {{0.005882352941176479, 
             0.07647058823529418}, {0.07647058823529418, 
             0.9941176470588236}}}, {
            3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3, 1.4}, {1.2, 
             0.09999999999999987}, {{0.00588235294117648, 
             0.07647058823529418}, {0.07647058823529418, 
             0.9941176470588234}}}, {
            3, 2, {1, 0}, 0.25, 1.8500000000000003`, {1.3, 1.4}, {0.5, 
             2.5}, {{0.34594594594594597`, -0.47567567567567565`}, \
{-0.47567567567567565`, 0.654054054054054}}}, {
            3, 1, {0, 1}, 0.25, 2.26, {1.3, 1.4}, {2.8, 1.5}, {{
             0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
             0.004424778761061955}}}, {
            3, 2, {-1, 0}, 0.25, 3.25, {1.3, 1.4}, {
             0.30000000000000004`, -0.10000000000000009`}, {{
             0.3076923076923077, 0.46153846153846156`}, {0.46153846153846156`,
              0.6923076923076923}}}, {
            3, 1, {-1, 1}, 0.25, 3.399999999999999, {1.3, 1.4}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.576470588235294, -0.4941176470588235}, {-0.4941176470588235, 
             0.423529411764706}}}, {
            3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3, 
             1.4}, {-0.4999999999999998, 1.9}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            3, 3, {-1, 1}, 0.25, 3.4899999999999984`, {1.3, 1.4}, {
             3.0999999999999996`, 0.8999999999999999}, {{
             0.9283667621776505, -0.25787965616045855`}, \
{-0.25787965616045855`, 0.07163323782234961}}}, {
            3, 3, {0, 1}, 0.25, 4.250000000000001, {1.3, 1.4}, {3.2, 2.2}, {{
             0.8494117647058822, 0.3576470588235295}, {0.3576470588235295, 
             0.15058823529411772`}}}, {
            3, 3, {0, -1}, 0.25, 4.25, {1.3, 1.4}, {-0.5999999999999999, 
             0.5999999999999999}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            3, 1, {-1, 0}, 0.25, 4.25, {1.3, 1.4}, {
             0.8, -0.6000000000000001}, {{0.058823529411764705`, 
             0.23529411764705882`}, {0.23529411764705882`, 
             0.9411764705882353}}}, {
            3, 1, {1, 1}, 0.25, 4.52, {1.3, 1.4}, {2.9, 2.8}, {{
             0.5663716814159292, 0.49557522123893805`}, {0.49557522123893805`,
              0.43362831858407075`}}}, {
            3, 2, {1, 1}, 0.25, 4.819999999999999, {1.3, 1.4}, {2.4, 3.3}, {{
             0.2510373443983402, 0.4336099585062241}, {0.4336099585062241, 
             0.7489626556016598}}}, {
            3, 1, {1, -1}, 0.25, 4.879999999999999, {1.3, 
             1.4}, {-0.8999999999999998, 1.2}, {{0.9918032786885246, 
             0.09016393442622948}, {0.09016393442622948, 
             0.008196721311475407}}}, {
            3, 2, {1, -1}, 0.25, 7.380000000000001, {1.3, 1.4}, {-1.4, 
             1.7}, {{0.9878048780487805, -0.10975609756097562`}, \
{-0.10975609756097562`, 0.012195121951219514`}}}, {
            3, 1, {0, -1}, 0.25, 7.539999999999999, {1.3, 
             1.4}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.7015915119363395, 0.45755968169761274`}, {0.45755968169761274`,
              0.2984084880636605}}}, {
            3, 3, {1, 1}, 0.25, 8.41, {1.3, 1.4}, {3.3, 3.5}, {{
             0.4756242568370986, 0.49940546967895355`}, {0.49940546967895355`,
              0.5243757431629014}}}, {
            3, 3, {-1, -1}, 0.25, 8.41, {1.3, 
             1.4}, {-0.7, -0.7000000000000002}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            3, 2, {0, -1}, 0.25, 8.84, {1.3, 1.4}, {-1.5, 
             0.3999999999999999}, {{0.8868778280542985, 0.3167420814479638}, {
             0.3167420814479638, 0.11312217194570136`}}}, {
            3, 1, {-1, -1}, 0.25, 13.600000000000001`, {1.3, 
             1.4}, {-1.1, -1.4000000000000001`}, {{0.42352941176470593`, 
             0.4941176470588235}, {0.4941176470588235, 0.576470588235294}}}, {
            3, 2, {-1, -1}, 0.25, 13.700000000000001`, {1.3, 
             1.4}, {-1.6, -0.9000000000000001}, {{0.6138686131386862, 
             0.4868613138686131}, {0.4868613138686131, 
             0.38613138686131376`}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.6790602328891914, 9.230900003615161*^-19], {
            Complex[0.7248589832535917, 0.], 
            Complex[0.650064949116095, -0.020858686170711016`], 
            Complex[0.11988513411713456`, -0.0981715969681187], 
            Complex[0.15160623794564831`, -0.028647866526790612`], 
            Complex[-0.002472802788942547, -0.01713913715451654], 
            Complex[0.05556524411678816, 0.01890267003822048]}}, {
           Complex[0.5524636587025472, -7.594543271602355*^-18], {
            Complex[-0.38354558530686395`, 0.09744499810272776], 
            Complex[0.1619813466218059, -0.23832737428749207`], 
            Complex[0.6766558452199941, 0.], 
            Complex[0.5279467930943094, 0.011722985858567875`], 
            Complex[-0.0019794387381373065`, 0.0612963317654061], 
            Complex[0.14074635807044672`, 0.0077645969691057665`]}}, {
           Complex[0.5222542056555272, 7.39373223091693*^-18], {
            Complex[-0.5047764091042254, 0.08027140607893792], 
            Complex[0.6076266586520926, 0.], 
            Complex[-0.41722429897453955`, -0.26584428115246467`], 
            Complex[-0.11870218623554862`, 0.011771602360776734`], 
            Complex[0.10106066627579662`, 0.15510216234064736`], 
            Complex[0.24672133224192438`, 0.12420825231706026`]}}, {
           Complex[0.47798270089481093`, 1.705186367657685*^-17], {
            Complex[0.11776747404882068`, -0.17021352942962187`], 
            Complex[-0.19349636076477256`, 0.18545691772731276`], 
            Complex[-0.005098087736675982, 0.0481703582836023], 
            Complex[0.12443545522518613`, -0.04846883240430583], 
            Complex[0.7520021001235273, 0.], 
            Complex[0.5450959458974042, 0.050065292585647264`]}}, {
           Complex[0.4208599945029234, 1.7181192359807767`*^-17], {
            Complex[0.046412084869462106`, -0.0633132278362492], 
            Complex[-0.15001494768060744`, 0.1368626263531111], 
            Complex[-0.49457449633790096`, -0.020339968952328036`], 
            Complex[0.7465187765334863, 0.], 
            Complex[-0.3425167147633056, -0.05320301419822421], 
            Complex[0.17190685158210708`, -0.02435844462026826]}}, {
           Complex[0.3371723422003491, 1.2680207595331082`*^-17], {
            Complex[0.08250671501222374, 0.03036710231625256], 
            Complex[-0.10759757386702096`, -0.00917692568070801], 
            Complex[0.15992951319705684`, 0.020880420200147097`], 
            Complex[-0.32856173648033754`, 0.004931060374980048], 
            Complex[-0.5245849484304596, 0.028709761501831688`], 
            Complex[0.7553839007471159, 0.]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
          "], {10, 15, 20}, 3, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 8, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyEvXd01MX7/h1QkBKk9yJdqdIhENjQQpVOqEqo0hNakCZFBKkB6VU6SJMq
iIEldAk1nZDN7oYkSO8lJODj8+G+Ztnr/np++Ydz5syZnX7N9eI9c5fqF9Bp
YEYPDw/P3B4eH/37b6fiG3//a0+mk+1W3nydPizN6nXip1nxx5ItSK9/YMux
t4ueW6OzNghquiLJ4p7/nvUrr7E7dj24ZdI7/C/9pvXO+klPy59zpXvI36Ij
iQc3P1X5LYM3rK48cY6r/Lbvy7fU8m/48uQeVR9L9wv5h1uGp1B90iwXW4eV
3ZQ7xfIu6nXLbk08TLuKTvhkzrunSSYd7UoLqlJ7+KIkyn/PeueddcqkcFc6
2hX2POfyBqHJJh3tCj/VaszwMrc5v+VN4YYhG5+70tGu+U831mn7w22uj2WZ
X+96g+qq+ltKfOwYWfQL9MMLK9p1zpr/5d93kkw62nVlUt/T9X7i/Pescw92
7vvVlRSTjnY9GO1fZuvV2yYd7fJt+Hr41i23Ob+lzy8ta1Qd7ioH7aq/PuHA
5CrJXB/LqF3VrvRbnsT1t+R7fWB9u1+SLB3+l55s2nXw+5iwpr8km3S0a3Ol
jMPutU+h/Pes9mEe1U9VcKWjXVd6D/QamctVDtrV8NTugTUqJnF+y5Kx61f8
duWWSUe7fp4z/vX487e4Ppb0XXe9TpRQ9bf41ew2ZV2eZAt+D+0689upCWGf
pJh0tGvj8lc199Xg/Pesi1uPP5+pfJJJR7vmZ2/fsfSBWyYdf4+qrHiZa+kt
zm/h/GhXMJWPdv3f9UmzoP7SXgvahfYiHe2i/rGYdrn3pwXtov43v0/jhfwW
Gl8L2mVznw+oj4XmD+pvwXzr8n5+mnbllfmJdLRrtMxn9/z3rJj/SEe7/GW9
IB3t+krWF+W3PJL1iHS0a6GsX6qPJUzWO9Xfclb2B9lPfNAu7CdIR7to//FB
u4Ld9ysftIv2N5//2A+R30L7pw/a9bf7fov6WGh/Rv0t2M9l/zftwv6PdLSL
9MK0q667vph2kR6ZdpF+mXaR3pl2dXTXR9Mu0lPTLtZftOtO/zbNLuxxKl1u
8Lzk5A55nUqXO5XY8v2XxxxKlwO+LVY+eJ9D6XL273zPZAxX+S1Ncm4/693I
qXR5VrMF3xy7pepjyVOz8N0fSiQqXX5kb7R55zOn0mWfCjMD9n/rVLpcfM7S
avMncP571vN1ju//fZ9T6fI8/zd9h+dOVLq84kDWlj/0T1S6fOHql0O8pyQq
Xe5RfcfTb/olKl2uP3nID4eyJypdrnxjUNcxc51Kl6OfeqZe7eZUupyzx6Iz
3ayc/541JMfZHTXqJipdfvyy8/XsoxOVLnsdTdyUf5zKb4lpPOj+8UaJSpcP
vkyMWBin6mOZWanWtD91/S2dR+Vvnn+YU+ly7qgpa2NOOJUup+3YXn7dp4lK
l2tnu7pg8gfpaFeFtC3PHUudSpfHhOadUvuVQ+nyuPbBXeb87lC6XKLb37uH
7XQoXc5XpH3ewlcdSpcfxnRMi/7GqXS5XKfOaQ/vOJUuJ79YE9VhKee/Z/1x
UqUS5+MdSpd71m/XJXWOQ+nysVcjTtYer/JbOD/axeWjXf93fdIsqD/rMtrL
ukz9Y/SrlHt/Gv2i/je/T+Nl9IvG1+iXl/t8MPpF88foF+Yb63J7mZ+syz/I
fGZdPiTzn3U5VtYL67K3rC/WZaxH1mWrrF/W5Vyy3lmXsT+wLmM/YV2m/cfo
V1f3/croF+1vRr9oPzT6Rfun0a9z7vut0S/an41+YT9nXcb+z7pMemHaNdVd
X0y7SI9Mu0i/TLtI70y7Orvro2kX6alpF+sv2jVu629j2v3uULp8c2qZKjPr
OZQu55ywI329j13pctjsngVTBicoXd4wedpV+3Ob0uVJOXte/ypTgtLlAdl/
ST56L0Hp8vz2/vdX9LQrXa4UFDh6QQW70uV+JXcGFP5M6/KpoJIRDVY4lC5X
yVLkQrrFoXQ5cMzd73/+zKF0+VL5VSVXV1T5LY3rx7waV8+hdDn2lxzVP/J2
KF2OcmSePM6L65NmKV7yYNt93g6ly87snkfmVnIoXe6/bPj0wOqc/561Y8US
pybXdihdrtKnR5NDdR1Kl3s1mFshqarKb/EalGNlSjGH0uVfFiTWTy6h6mPZ
2dYeFthT1d9ysJDnwy/+UrpmLeYd9vmBsASly7su5Hyd3tqudLnUxbVpq2rZ
lS6PHNd292z/BKXLW3ds8qgaYVO67P+23sx6nyQoXc6SHDT1+kZVH8vPnrUb
D1/H9UmzJP50vGBMX4fS5cRPv51Qa7ld6XLnDZPXB2S0K12um3fXoi+f2ZQu
H6nn531gvE3p8s47GfK/6aLyWzg/2lWTyke7/u/6/NsuqT/rMtrLukz9Y/TL
070/Xb7Svf/N79N4Gf2i8TX6VdZ9Phj9ovlj9AvzjXX5kMxP1uUdMp9ZlzH/
WZcbyHphXe4t64t1ubKsR9blzrJ+WZcHyHpnXU6U/YF1GfsJ6zLtP0a/brjv
V0a/aH8z+kX7odEv2j+NflV232+NftH+bPQL+znrMvZ/1mXSC9Ouge76YtpF
emTaRfrl4gDuemfalctdH027SE9Nu1h/0a6YbwuHNluhdNDa/OsBp777Il7p
crOILYMr94hVurwy8P7QrLVilC7f779pQY+uMUqXVyUUK/B9rZtKl6dVXRBU
t5RN6XL38tOnBK6wKV3OMmXI3TuPbEqXX3008nLemTaly1WC8u664x+vdLlZ
sz+uTPo2Xuny7WI7h766F690udeVuiG+/jaly/6D8lzOusumdPntX2uKd45X
9bHMLnt0TPVLqv6WEpfLdC/e2aZ0uckdS7235WxKl/9ZPzCX5xrO/+95I+O4
b1sn25Quh1qnvxwQZlO6fKv7xfCbs1V+i8dvO4tc+cKmdNmzWe7hH62IV7rc
vXRY6tMG8UqXk9/l9m+/Ml7p8u9tEgPX59e6nFjc81CDczaly6O2nbANGah0
1tqp7atLvmvjlS6neDW60+N6rNLl4xvrjt3yOFrp8vcTh6Rk6xCjdLlGVOuy
pbvcULq87ceIVi9m25QuD3pccPeda0oHrf1LPz33Nile6XITa7/JK8NjlS6/
SFkyr681WulypyYLLWMPRStd5vxoF5ePdv3f9UmzoP6sy2gv6zL1j9Gvae79
afSL+t/8Po2X0S8aX6Nfo93ng9Evmj9GvzDfWJf/lvnJuuwn85l1OYfMf9bl
j2W9sC5jfbEuW2U9si7XlPXLuvzRL+/XO+tyC9kfFMeW/YR1mfYfo1+v3fcr
o1+0vxn9ov3Q6Bftn0a/mrjvt0a/aH82+oX9nHUZ+7/i2O56Ydo13V1fTLtI
j0y7SL9Mu0jvTLtIH027SE9Nu1h/0a42I8qd+uZRnNLlnOPL1Q7teUPpcq5x
D2fkOxqldHlOnotxxbdFKl3O8+1nnjOTVH6L37N89pq3o5UuW8ZveunTNEbp
8pzo3MsTlscoXb6w7mTPwlExSpd7d3gSs8rvptLl1S2z7Og2NVbp8usW348v
tjxa6fLv284PP70tWulytZobFwdkj1G63OZVv5xjf4pRurwsNP+nCTlilS5f
yfjNliYbuD5plm+79XvQue8Npcsbxi4OiLp5Q+lygWwJS+Zk4/z3rL1vXvmi
zMBYpcshHTd3+DgmRuly0XHb555sF6N0eeaiAsVGhkcrXe63+N3eKROilS5v
PuxzeEJktNLleTVOVTj5WOmatfixjamlY5UOWms+bvXsxW8xSpcDotpWvTks
Runy5dCm/dcUilG63C/4p1fT90crXbZGX8taY0Ck0uW+/WvPXBUcqXR5kb9v
7oIzuT5plk0LM8968uKG0uX1w4r/vKB3jNLloz9cXLv8TrTS5Z6VrVHFTiid
tY7b/rxueolLSn853fy/CZWD+v/fv5tmQT1Zf9Eu1l/qB6NT1G9Gp6ifze/T
uBidonE0OjXSfdyNTtE8MTqFecX6O1fmIevvJpm3rL/9ZZ6z/k6XdcH6W0TW
Eevvn7LuWH+xTll/C8m6Zv3dKPsA6y/2DdZf2meMTtG+ZHSK9jGjU7TvGZ2i
fdLo1Cv3fdXoFO3DRqewb7P+Yp9n/SVdMO1q7K4jpl2kO6ZdpFOmXaRrpl25
3XXQtIt007SLdRbtKh945KsGS6OU/mYodfTPYYOilP4e6Vl1V4o1Qumvn6Pm
wu1xfyn9XXiq1p4abS8o/c10NueNJpcuKv0dn5rpp2vRl5X+7gm8VWpQ0jWl
v+XqPL847ni40t+AO4HefuOilP6W6N4qtV3dKKW/p7KUOLq3WqTS39EHik8+
vzdC6e/5WtvG9f8tQulvmEdcgV4hEUp/E17Wz3I5OULp7+wVl9u0qBOp9LfZ
1+8qVdkRqfT3n/HVe/1+O1Lp74JFlzt2Gc7571kTrvWe4PVPhNLfgccG5F3w
e4TS36e+zXN+skTlt/i0Hn7W54cIpb/f7xy+qfayCKW/3f5ISNiq62/J/vHP
Q/f0iVL6G9qv8qKFiyOU/vodrVX2Scp1pb9LEhbtqLThqtLfI68Wl9q8K0zp
79MFw2o1fHZB6W+GHW22ll1wTulvu/JTa+37+YrS37wR13vcfhSp9DdzLo8z
vt9HKf0tsn1W/7BskUp/T/zp+yzk52tKf4My/9Ure93zSn+PFY5t2eLQEaW/
nI76B1I5qP///btpFtST9RftYv2lfjA61dW934xOUT+b36dxMTpF42h0Kth9
3I1O0TwxOoV5xfqbWeYh628Xmbesv9NlnrP+NpF1wfqLdcT621vWHeuvXdYp
6+9iWdesvxm+e78PsP5i31D+132fMTqV6L4vGZ2ifczoFO17RqdonzQ6ddx9
XzU6Rfuw0Sns26y/2OdZf0kXTLuC3HXEtIt0x7SLdMq0i3TNtCvEXQdNu0g3
TbugsztSL03N9TrjyWblTvaY8u6V9bvGG/8peTbJpFezzCn6fZknVv+ZbyfY
D7nS0d7BPoeiYpYkWdL+12+PzXzw/uWl//Jm+O5Rf++HctA/RYsVWZLX35Xe
4H/lJ1nvXCler2NbVzr6Le6v5s32n+b0MGtVv9Qtj2640tGf1Rsuz5tlXrKl
5f/qE+WqZ8HLm2ZHJFu+onWK7y13DGhV1rtwmrW59M/YibW2rWlovmO0NqDv
md3blWbdWfTC7Ad+rnLQbwMmtJjcydNVDn8XTe2yrKv+tP2YaE6/aaluG/Y8
hyXFlI/x6nV8Ucmeru88rV5cvuRH/3vdmBMw4JorP9LxPbb7uCdZCjZs2KP6
dVc65qH/rwHLZ61MofYmWStG7p90poX5LhS65ipf8mN842se7R14wZWfvwOn
+WkZbet1/ewrrudzS1BOr/Dwjq7y28g8sRfpGvbTBPP9qqR/UL7kx/zx9Cj1
OMsAV36k4/tzWkeWBikTR1S5qOaDZez2qL8S1v6rN9H/Wy/WJjKvfKasbXFi
SbKlm5vuu74zdx+vNOuotQutYx4m0Xi5vrdH+cZfR1QvmOe+q3z+Xh3ld5X5
tmHX6qWbL3F7D3mb9rqPl2VPfJNX31a7zeNlvsNHfWrI/Ix+Vm3i21hXfTrJ
fMB38siPeXg4Z8W/PpmcYvK3o/yoj5fMzyLxC+rmXOyaP61lfuL7Z+THvO3f
8uTYAd3V/DT5UZ+6Mp8HBVTbeTDdVR8p3+qg+mPeJtzutzdroCs/0q/K9+Go
T3WZz4Mnrhs36oBaj6r+hktP9/0haZDaT8y9BtSnj8z/5atnnbmX7ur/9+N7
KqSRfMeO/Jjnp6Z2ujPsNuf38EB+2ictF7r9VMJiT+J90tSH5rOl8Pd/ZT58
S81nc/+i9/t92+or62Xn3Nv/pA7Gue1MiDffU3CbP2lW6JH7/HGtL5SPdVHa
OfnqV6Gu8tU9CPf+tFzd96ZNtTaqP725P829mznPkkYWT+b5YFkq9wtQny9l
vfhkmFzDa6+rPvWoPshv9vObDdJvfe7Kj/SfcZ9C6lNH1suEfP75Iwq76tNS
5tsSuQeB/FgXKXl3dZ04MYn2K9c9FNQH62Vf55Ee9dckmfq0kfrg/gjym++X
avVs3rKvK7+6V+K+n1hmFOnS/0HVJOpPV31oP7Qc2ZVj5qKeSbwfmvsyqE9j
WS/JKVN6VXx4y9SnNdUH+bEuCrwutbeU3ZUf6eb+i/v+b+n/6HS5aZHcnx/c
03Gfz5bD+TN9+jI2ieezyY9zTlNZL+kDtsduK+0653wl8x/53edPmrWBnIvc
54/rfhDKx7poX+pJnSM7kkz5fL8G5WO9NL5epIX/fu6fY97oH5oPllwng54P
PnmL54O5N4T6QF8KL6pbIN8UV306YL7JfHA/B96z5h76yn7i5S06B7ryoz6N
ZL0Et75V9nKIqz5+VB/kN9+NSPnIz/ebUJ96sl4WSvmoT9v/qD/WRU7pH/f2
uu4roT5VZb2gf2g/sfB+gnXRTsaX9kOTH/XxlfWC8XWvv6s+yM/rBfmRjntV
tP9b0mQ+0/6v6o91seDJ/Em1Fqj5bO6Lwb9AXwbIeoR/aUj3qshHWFE++Qiz
vlA+1gX2H5TP97ZQfk9ZL0my/7j3zz5v9A/NBwv2T5oP5j4a6gN9mS77J+pT
l+rj7u/uWZNl/3f3d//qjpxPaD5bDv35eeOnD1z1wXkM9+CQH+uijugXzX+T
H/WxyHr5TvQL9ekp8w3nT+THukgV/UX+DpQf9cF5zCL6S/uDqj/WBc4PtB+a
+32oD85jj7q3mbHzD1d93o/v2ZC2ct5GfqyLM3Iec8/v4YH8tP9bcF6i/d/4
3C3vz2PG/waKv0j/j3ttyN9Y1gvOe8jfRuY/7vERH7BCv4gPmPuMKB/rAufb
dOJIS+U+IPWnJcflqhFzeqZwf3pzf2Jd4HxO88HyUPwg6lNT1ss/7YbMiPFM
MfXpLPN/odxDdO/Pe9YB4i/SiXchP+oDfYG/oPls6oP8WBfwR8jP9zFRHznv
WV+1HFfr+CtXfVpJfYKp/lgXu8XfpROXS5X7lagP9CVS/B3tJ+YeKO2HliPi
T2k/NPlRnwayXjaLP0V9fKU+uO+J/FgXucS/pxM/xD1Q2v8tFvHjtP+b+mx7
7+vNugDnQXoLWRfgALS+rIXE79D6MusF5WCeg2NQP1hyFJ45/fGBFO4HyyW5
x0rjaEkQrkLjaPLjd2UcrWOFq7i399/5LJwH5cs+bKkinAflY96GUX0wP72F
OyE/0vG+AX4X87awcCekYx7WEA5G69TSUzgYyu8o5eM+L+0zlv7C5WifMfd8
8buYh+uFyyEd86qG8EbaJy1jhB/SPmn2VZpXVvAipA+UcQfnpH6w3BQuinSM
Czgq0tHPxYW7Ir2K9Fsf4b00Dy3gvTTPLROIG4Mnn1gY/mJaQ6fiydPzP1r+
UT+n4sm7T/T0G+nrVDz5ef+zFzvPcyqejHtqzJPn76xWaExtp+LJRa/ev7ep
mlPx5Lf9s59568/pYdY2w0suOTLKqXhyx/xfZD692ql48polf7fpH+lUPBn3
BJknf9442+qZS5yKJ+MeLvPkpedu3wiZ61Q8ucCon9+MWutUPJnLAU++7x+b
2XFN9YPlx4BhK0JsTsWT750v3+CTo07Fk035xJMbl2685/kzp+LJuEfMPPnz
uQn9J1VLVDz58bHVOzzLJCqeXOZInx/bl01UPNmUTzz5eKXthUMaJyqejPuS
zJPrHPAfOcqH6/ncsq1baJ1i+RMVTz4duXf++aGJiieb8oknD64dNK7t8ETF
k3FvmnnyZ5lP/jIpUs0Hy8L4Tumf/tv/zJNzFZy9r+C/6cyTeR5iXmVf2PLQ
yT48Xq574syTM2VYO+5NilPxZNyTZZ6coVnWzBUmcHsPeZv2Ek++liWs4tuv
1XiZ++PMkzft/7LC3Q/qA56M+93Mk1Ozt14TUzpR8WTkZ57cqP+c9cmVEhVP
xr115smZlza/FVRCzU+Tn3nykmmLv2zmk6h4Mtcf8zbHhPR+QR8lKp6Me83M
k8d7bdtVSq9HVX/Mc3vElQz1wtR+Yu7jM0+uEV9z+4ZDTsWTx8r9a+bJ0d5p
weV+5/weHsjPPLn7jMtDV8xV+6SpD/Nkn3KNvjozUc1n824A8+RJyZ5eS391
Mk9w3a8nnvxM9Ih5MtYX8+TAq6XeBV13Mj9R5cO/bM1w/FDqatWf3mOoP7Eu
tl2YuGHzRKfiyUFyL555co5ph/cP+qA+9ag+zJNtTd5GbRznJH7ywTsDxJMn
td1+aelYp+LJn8n9febJd7YN9JnShPcr1/sJzJO7NRicNbKeqz5tqD7Mk0+t
nlB2RE4n80PXewjEkzs2Xrh8SRHuT1d9mCdf2hTa6m5ltR+adx6YJ99+u2/w
ipMOU5/WVB/mySviT66vfcRBvPSDdxuIJ/+R4XTDv8aq/d/1vgTx5I1bapZ8
OUDNZ5OfefLdlKC/l0xwKp6M/MyTcS5ynz+udy2YJ7+dPe75oepOxZO5P7Fe
Vm7+fq59OffPMW/0D/Pkv8+M7NJ4g4Png3nvgnnyD+WbNP7mM6fiyXiPgnly
5ztzBq467VA8uRTNZ/j9kJZrptVY7aqPH9WHeXJHKR/5+V0O5snHpXzmyVx/
c/9O+od58jjaT+D3p0v/0H5i4f3E/D+LjC/thyY/8+QVMr7Mk1Ef5snLZb0w
T8b+yTz5jsxn2v9V/bEusi7rlNZvi5rP5p0T5slHZT0yT8Z7IMyTs0n5zJOx
vpgnh8n+wzyZywdPTpH9h3ky+od5cqjsn8yTcd5gntxJ9k/myagP8+S7sv8z
T8a7KMyTW2369En9tk7Fk/F+C/Nku+gX82TkZ548WfSLeTLOn8yTob/Mk5Gf
eXJO0V/myVx/rAucH5gn47zNPDn2oz8mXV3mVDy5gZy3mSfHyHmMeTLyM0/G
eYl5Ms4/zJPhL5gn4z0W5sk47zFPxvszzJPXi34xT8Y7PMyTE+R8yzwZ79gw
Tz5w43SbtI8TFU/2pv7EuvCU8znzZPhB5snDq470WvDSqXgy3s9hnvyx+Avm
ycjPPHmp+AvmyagP8+R08UfMk/GOEPPk5V6zAxZ2SFQ8meuPdQF/xzwZ7wIx
T94q/o55Mt4vYp6cWfwp82TkZ56cUfwp82TUh3nyUPHvzJPxfhHzZPhx5smo
D/NkcB7myeAAzJMbit9hnoz1wjwZHIN58oD5IzM2bqr6wby/xDz5hHAV5snI
zzy5lnAV5sl3hfMwTy4nnId5MtcH87OpcCfmyXgninlyWeFOzJPBwZgng4Mx
T0b5zJMLCpdjnoz3qZgnPxAuxzy5k/BG5slfCD9knox9lXnyAuFFzJPBOZkn
vxMuyjwZHJV58gLhrsyTwXuZJ4P3Mk9mbgyeXOLaoCtXdjkUT/74zPqJPt4O
xZPbpZXycHzrUDz58a9PLvZfbFc8Ge+rME8+1Gykb1uHXfHkPG3PRwSMtSue
7HdkxdxMXTg9zHpy/85BGYvYFU8uNrBHlmzl7IonTy23qsOzanbFk/G+DfPk
Wz3nvW62w6F4Mt6PYp58P3H3k4N3HYon553lW9FvgEPxZC4HPHluVd+sjauo
frC8azzTUayBXfHkC+1Ob/m9nkPxZFM+8WRL4WJnQ+o7FE/G+1fMk59Ztw3t
tNeuePLccrbN9v12xZMd7WZumF3RoXiyKZ94crs7G/03V3Ionox3t5gnrz/f
8PP2d+yKJ6/JUnd0aIpd8eT0JhOqf+56/8fwZFM+8eS8+3OXs1Z2KJ6M976Y
J99qcatJ+gf1wbyq0etepvHX7Yonj6rZaVmrFXbFk4vTPMS8Kl2gV95OW3m8
XO+bMU/+Y8LYtw+j7Yon430n5slXju3Ltacmt/eQt2kv8eSGHZ622FtRjZd5
94x58tg39aceD7Mrnox3yZgn9wu+b/3rql3xZORnnvz4Vu9Vez6YP/AveG+K
eXJIgde1x1ZR89PkZ57c6MznPhnC7Yonc/0xb5NXTS30+lu74skB8h4X8+T6
R8b2qlJZrUdVf8xza4FnZZ61UvuJeUeOefK0gzubtCllVzx5m7wbxjx5b/DN
CpMKcX4PD+Rnnty/Tqv5i9qofdLUh3ny4LV91t2foeazee+OeXLdh2Vu5bqd
oHiyeYeNePIj0SPmydjnmSdPreXb5vfyduYnqnz4l/nHvlk5JbPqT2/uT6yL
u0kV4maUVPPB0lfec2OeXP+w5+WZRe3Mf0x9mCfvfljmXNKSBOInH7yPRzz5
eOyFbldH2BVPzirvzjFPLuOx/s3lAN6vXPmZJ3c+M2n9zQqu+rSh+jBPztut
4/Ni923MD13v+BFP/tK6el6PXdyfuv5YFxPveActyedQPBnv7zFP3hs4uUTg
Vld9WlN9mCd/0So8W76lNuKlH7w3SDz53NArT8p841A82byLSDw57FpSxmnL
HIonIz/z5Ow30lI+vWVXPBn5mSfjXOQ+f1zvMTJPHh0d++hBe7viydyfWC8/
jlnXtvBe7p9j3ugf5smea1r4j7Oq+WDeaWSevO9U6sKS4QmKJ+MdRebJpdJz
/TStdYLiyZ40n+H3HQtTbKGervnsR/VhnlxCykd+fk+SebJTymeezPXHusgu
/cM82Z/2E/j9PdI/tJ9YeD/Buhgj40v7ocnPPBnjyzwZ9WGe/LmsF+bJeMeS
ebKnzGfa/1X9sS4q/lRv53cFHDyfzfuczJPPynpknox3LJknV5DymSdjfTFP
/k72H+bJXD54MvYf5snoH+bJeWT/ZJ6M9z+ZJ1eR/ZN5MurDPLmc7P/Mk3E+
YZ48Ynpq0fJ+CYon491R5sm7RL+YJyM/8+RQ0S/myXhHlHky9Jd5MvIzT24g
+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
8on3DqsT2mLngQjFexFXl3nvuZo5lxUeGK54b5GZsb/7LQhXvHf5+B+bvf6g
/DZcPvFe2/FxTWpvjFC8F3FIFe9Nebyt1blwxXsPtZow6fq/v8u8d3tqeuCT
dxGK9/I8xLw6Uu16m1lVoxTvRfxi5r2jy2b4c1OFCMV7u0lcV+a99s058+7f
zu095G3aS7x3VrkyDy//osbLxDVm3nv/n2x5a5cIV7x3ucSfZd6bf0P4tu23
ryvei/zMe7d23dz7wo4IxXsRT5l5795rnbtOP67mp8nPvDd2afSYjqevK97L
9ce8LX2zQKcvz11TvPdPicPLvPejUsXHn0iOULyX6495HvCF37KgALWfmDjR
zHv3+1yOzl/omuK9ryReMPPe17OOR3bKzPk9PJCfee9X80b+OGSH2idNfZj3
bq/Wss2Dj9R8NvGsmff6BP8RWi5PuOK9VsRfJt7rL3rEvBfri3lvtmPHs8d4
X1e89wSVD//SMPemPvb0q4r3vqT+xLpoXiJPoYi/rijem1niODPvnbnsfP8h
1a8p3ov6MO+d/bTyjDX/1sudn9yzfoe41cR7Dz+MCmg76LrivR0l3jTz3sgS
fgm+AdcV70V+5r2Fpu5p1G3UX4r3jpf6MO9tl/GffrdOnVa89xTicRPv9Skf
nP7u9XXFeztR/bEuavt2X+t7KVLxXsTdZt477PKw4fsGnVK896TUh3nvf+S3
nKT6g/fuHRDQMSgv8/MP4p4T782SrVXBNyOjFO9Ffua9zoGbb07PEqF4bybJ
z7z3gZyLiL+ZeOvMewe3mF++U2i44r15qD8xz0fH3Sy7pWao4r1W6k/46zWr
xt0fUues4r2nJT/z3jvtZuXIH39V8V7ET2feO6BA2Qu2pIuK93ah+Yx53lfy
oz5IH03zGf46SepD69fEi2feu1zay7y3E9Uf62KE9CfzXg/aTzDPh8p40f5m
sdJ+An99S+YP7bcmP/PegTL/mfc+lv2Qee+iXqfzzjkTqXgv5hvz3j2yXpj3
Ir48816Uz7wX64V5by3ZH5j3cvngvf/RXm+0l3lvC9nfmPcelvMA895Gsr8x
7+0k9WHei/2Zee9UOT+o73vHfb/t8+NnFe+dL+cZ5r3fi74w710o+Zn3Ql+Y
9+J8yLy3kegj816L5Gfe+4PoI/PeYKo/5jn0nXmvn5yHmfc+LHKv76obVxTv
fSTnYea9z+W8xLwX+Zn3WuQ8w7wX5xPmvUfl/M+8N+BOoLffuCjFe9vKeYx5
b7Ov31WqoubPv+tC9IV5b2Y5j6nve+X8ybx39orLbVrUiVS8d2CpTzoMP8T9
c9b7MfUn1kUROT8z7+0pfo15b9HY+WO8WkQq3pv4sn6Wy8ncn/es++X8z7wX
+Zn3XpfzP/PeXlIf5r15xL8w77WJ/2Xe+/OGiJRZhyIU7+X6Y13AfzHvDfOI
K9ArJELx3nviv5j3BgsfUN/3in9k3rtI8jPvTRD/yLwX9WHeGy/+mnnv+Vrb
xvX/LULx3l/FLzPvXSz1Yd4LDsO89434dOa9W8WPMO/FemHeW1Q4A/PeA5P3
N7+9QfWDZfSB4pPP71XjaPlWuAfzXuRn3vuXcA/mvdeEwzDv/VU4DPNerg/m
5xXhQsx7j2cpcXRvtUjFe88KF2Le+6twKua94FTMe1E+895uws2Y95bo3iq1
Xd0oxXu3Czdj3ptPeCDzXo+G7/ke817sq8x7DwvPYd5rFQ7JvLejcEvmveOF
czLvPS5clHmvXXgs895g4bHMe8F1O/1vvWQyvDdLUt93OSskW/55315wPCvi
FSI/uOLijd2CxzdxpSP/V15jd+x6cMuk4xxb9P74r+7cuGXKb4V9QOInIj/S
76yf9LT8OVc5zWQcG1b6svPAeFf6+1E85L3oSOLBzU9d6d2l/9N3NXr8aSNX
PTtL/w/esLryxDmu9IbS/+08hi9eV9RVH/jHWv4NX57c40qH3/RdWqG6R44U
k47zcPcL+YdbhrvSsV8tnhN44XGjlH/3rfc8EPVcJ/EW30n/YFyyf1ekz+HQ
JJOO/n96LOjGmP2udB4vpKP/41Jvz7nZKtn8LtpbUOJOvvuPcTH1kf6/enP3
x11Gu/Kj/xFvFOlo16CRpwt+Mv+2Zaf8LvpttMTfRH6MC+KcIh31bDorIPXl
n650jMt8ieuKdJS/qOzUuj1siBurxwX5kb5M4u0iHePVo8r6iJO//dtvwqnQ
rg0Sp7WTcCqM18V1f8bn8ko26Riv3St65mlaKcWkY7zmShxbpGO8vPP2bJLa
7rbl7X/0D/JjvB5I/FxTHxmvwt0rtyx37LbwNMNnrA6J74z8GEdfiSOMdLS3
08gNV4dk+XccpR/Qz4Mnrhs36oCrvagn4k0jHeN4af2S0VGXXPkxjvUlvjbS
UX7UltknHzmTzO9iXBCXGfkxjqMkrjfSkf/09VG/x65GXOZkM16VooavWfEq
2aRjvELbZLgS7Z1i0tFvduk3pGO8/JJq1C60LtnS8T/6AfkxXohXbuoj4/Vj
zjntO6z7t73/+zsGnmBd3Hr8+UzlXfXHeCFOOtIxXoPXbH0XmH7LpKM+iFOP
dIxLnn+yXcgb5krHuPw8Z/zr8edd6RiX80WqFy767Jal/X/0P/IjPX3XXa8T
JVzp5vz2aMPNPSuTzPkP41KjjC264TrX/WGMy6rAI2977nbl5/5BOsbl00r9
PfPdv2XS0f/zs7fvWPqAKx39f7zYs82FN7vS0c+Pqqx4mWupKx39fELyt/6P
fkN+9D//Lvqf64lygqld6P+V1A/o543LX9XcV8PVb+jnmtKf0v8W9DP6H+no
53Myvkg3/ew+Hwynwvz5/kyZyk1SD3hze5Ef/U/z0IL+p3lr+Y95bkH/z5L1
0sSd+5m49siP+tC6s6D/sX6Rjv63ua93U/5J2R/a9Iqr373tX97c/8iP9M2V
Mg67195VDsYF+4/8f4cZl1OyXyEd4xIt+yHSMS7YP5GOcbks+y3S0f/+si+Z
35X+7yb7/Fv3c76Jn478GJevRC+QjnEpIbrj9x/9ifwYl0eiX0jHuDRy10Ef
1B86iPwoH3HhkY7xgv4iHeOCuOdIN/oiOi7/b+uDcfGWuOd+/9EPcn4w+XvK
+QHpGMef5XyC8pE+1v1cpPof6Rjf5u7nItU/pj4yvjiPvdepTKb8unK+3S71
QfmF3c+HPv9x3vPBuF9xPx/6YHzpPOmD8b0h51LUB/UfIudz1Af1X+9+TvbB
uP/tfu71wbg/kXNyt/8Yd+RHOuKhIx3zAedwOc+b8cV5HukYxxbuvkD1M9LR
z+3dfYfpB/Ipph/I15hxIR9kxsVbfNP7/z/S/Yb8GC/yX2a8iouPQzrK6eju
+0z/L3X3iaafo7M2CGq6wpWOfoYPZX+ap3Id//n+TuVPz0t8IvanvnP6vbWm
OJQ/7VRiy/dfHnOlo/8dTfw79TnsUP4U8ZjYnwZ8W6x88D5XOeb8EFD9RctQ
VzrGJft3vmcyhrvSMS7bT78881kWV/3R/01ybj/r3ciVjv5PqlDk57RFrnT0
/6xmC745dsuVjv6/1KBz2c8yuOqP/s9Ts/DdH0q40tH/07Lu9i2YNVH5U8RV
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
f9ps5cxl4T5xyp82i9gyuHKPWOVPH268cGf1uRjlT1PkvWj2pysD7w/NWitG
+dMmQ1tM3t/MlY5xedB/04IeXV3pGJemG+3X7zW7ofzpqoRiBb6vdVP50wWZ
u56Lq+iqj4kvU3VBUN1SLp9r4tFU/ORN596udPMdafnpUwJXuNLR//s6vqi5
57RN+VPEfWN/mue4T8j3T+OVP/X6OiWkxoB45U+byXixP12+b//aP36NV/4U
8d3Yn+Idb/anG18E5v2svE35U7yvzv70myJbm+340ab8KeK4sT/Fu+7sT78s
1G3c3tM25U/fyjv27E+bvPq1ZZNIm/KnGBf2p7MlvgD70/DXDwZuD7Ypf4q4
aexPS57ptGWmvysd47W8w4MGlU660jkuHvvTV/5pe7vF2pQ/Rf+wP0U8O/an
nTy3Ddjwq035U8TXYH+KuAnsT5/8cOxll+425U8Rv4z9KeLBsT+dlfr16b/t
8SYd44h4Z+xPa9R8WGPSkHjlTxF3jP0p4o6xP/1l0cPKpYbGK396qdb4PA8+
8HEYrwr9ki+EL7Mpf4p+Y3/aN7Vn11gPm/Kn/+x93w/sTxGfhf1p0dNFel37
PU75U8TPYn+KuDDsT68/OFb1H0eM8qeIy8P+tMTCDnu6lYxR/nSqxCFif3rj
854/FugUq/wp+p/9KeJtsT8dUSXnkewjbyp/OiDrj38862lT/jQ8cGepsJtx
yp8ivhLSzb2SzmkfvTXxvFz+FPGbzO9K/2/Otzj57h/Ryp+aeF7yh37eIvnZ
n5p4ZPKH/uffRf8Xo3qinKbULvR/JPUD+tnErZM/9PNA6U/2p8Ol/9mfYnzZ
n05znw/GB2H+sD9F3DT2pzQPjT8Kd5+35vx/232eGx9UXNYL+1PE8WF/2sl9
3Rkf1E/WL/vT0e7r3ZRfUfYH9qfof/aniAfE/hT7D/tT7FfsT7Efsj/NIfsn
+9M5st+yP/1Y9mf2p89ln2d/ingx7E+hF+xPO4rusD9Ff7I/Rbwb9qep7jpo
zu3QQfaniIPD/nSN6C/7U8R5YX9aTnSc/SnivLA/RT+wP8X5gf2pj5xP2J9+
4X4uUv3P/rSy+7lI9Q/706/lPMb+dLqcb9mfjnI/HxofROc944PofGj8Dp0n
jd9ZKudS9qer5XzO/nSS+znZ+KMm7ude44/qyjmZ/SnGnf0p4r+wP8U5nP0p
zvPsT8kXqH5mf0q+w/TDSnefYvqhibuvMeNy390HmXGBb2J/2sTd35nxIv9l
xgs+jv1pc3ffZ/rf190nmn72/XrAqe++cP0u+jlYfCj70yqjt6blLBen/Cne
e2R/mvNl1vihc1x+EPlzjXs4I99R1/1W9P+lpvFVC38Zpfwp3s9kfzonz8W4
4tsilT+9EjL2WYfmrvIxLnm+/cxzZpIrHeNSq8rqFzcHuspH//s9y2eveduV
jv5vc/jm0Pr5Xe1C/1vGb3rp09SVjv5PKt/zXM4RrnT0/5zo3MsTlrvS0f8V
6g95nXY4RvlTvIfJ/nTSpXTr67s3lD9t1fJ0zmNzY5Q/xXixP+32qvTTgPXR
yp8iXgz7U4wL+9Nnw2tNLXwjWvlTvAfL/rRR/hnXnrSKUf4U76OyP8U7tOxP
A3uHfFohLEb5U7y7y/60RqJXj1zdYpU/nSvjwv70iryHzP60aBVHyzCPG8qf
Ig4L+9Ne1iPTvxxzw6RjvP4Y7fdN9JFYk85xdtifzi/wR0jeErHKn6J/2J8i
Pg7702H9t45I/DlG+VPEQ2F/ijgy7E+vZuzTeUWuGOVPEQ+F/Sniy7A/fbZo
bvKLra50Ew9C3j9nf/rD5s8OpP07D9mfIo4J+1PEMWF/Wmjs9Edr+8Uqf/pF
1LggzzMxyp9e7xe26O8FMcqfot/Yn65vc6FlgyYxyp+iH9ifIr4M+9MVXwza
82lytPKniMfB/hRxTNif5jq42yNubpTyp1aJO8D+NFfxj84nT4hU/hRxOtif
pjqPt47NGq38Kfqf/eliiTfB/nT1+G1tPj4eq/zprldjCuYpE6P8adbYZn/c
iIhW/rQH4qfIH8Yly8n47y4PClf+0cQfkT/z3SnigKA+Mi6cjv7ndPQ/p6P/
x1M6+t9T6ol0c3+B2oX+Rz8k5Zxa83Lpc96o/wQqH/1v4uPIH/of/cy+dZWM
C/vW1zLu7Fv7us8T448wr9i3oh/Yt550n5/GN+V2n8/GF9D8N/5opawj9q2I
R8C+ldaj8UdY1+xbR7rvA6Z87BvsW9H/7FsR14B9K/Yl9q0FZB9j3zpD9kn2
rf1lX2Xf+lT2Yfat02W/Yt96RfZ/9q3QX/atiBfAvhV6xL4V/cm+Fe/2s28l
fTTneegj+1boLPvWY6LL7FvxXj371q9F39m3Iq4c+1b0A/vWInKuYN9aXc4t
7FvpvKT6n30rnZdU/7BvbSjnNPatjeXcy77V1/3caPwRnQONP6Jzo/FBdM40
PshPzqvsW3FuZ99K52fjm+g8bHwTzs/sWwvLuLNvXSPv2LNvnSznc/atX8g5
n31rsrtfUP3MvpX8iOoH9q3kd8y4kD8y43JZ/BT7VvJ9ZrzIl5nxuiz+jn1r
Hnc/aPo/t7t/NP2cc3y52qE9Xf2JfoY/Zd+69MKRmZ2nRCnfGirvVrFvjW84
pmaFJa505P+9Z9VdKdYI5VsDypX1Wud3TX/3K+90sW/1c9RcuD3uL+VbR3c8
VHxEXlc6xmXhqVp7arS9oHzrxaalT9ef78qP/s90NueNJpcuKt/ayD5335yO
l5Rv/S4100/Xoi8r3zp0RMrAK1evKt+6N/BWqUFJ15RvHRox7OWDa9eVb90i
73qxbz1X0ra6k1+U8q2B+w7GvjsYqXzrKRkv9q2rbcWL/PkoQvnWU/K+GftW
vJ/GvnXdM+d3+X+LUL4V79qxb/2riI+v/XCE8q1n5Z039q14T499a9SkuTnz
XY9QvjVB3g9k31qzxccVs30aqXwrxkX9v6q868i+ddCb5Ab1AyKVb8V78uxb
fWdO9cu0M9Kkm/t01ZYln6vtSud4AexbN571970VF6F8K/qHfSve+Wffusuj
a+6LWyKUb10q74iyb8V7+OxbV13ofrfMvAjlW/GuO/tWvIPKvrXPxPs1G8x3
pWMc8Q48+9Z7+7eefFAiUvlWvMfOvhXvsbNv3f/N0S0VPo5SvnX+gmpxlpBw
5VuvLWk0+Yeb15Rv/Vn6jX1r2WG5B97eeln5VvQD+9bf5V1c9q2Rp95VDGx/
UflWvCvOvvWpvMfLvjV19c371U6eV741o7yfzL61wrfJw+8GX1S+Fe+fs2/9
7GCWY78UC1e+Ff3PvhXvkLNvXfDk708L1o1SvnX4/kGVzrQLV771daNKG5tU
vaR861i8Ay9/GJftc4pMW/FTqPKt7fGOuvxhXI7hPXPUR8aF09H/nI7+53T0
fwilo/9/lXoiHfUcQ+0y3ED6gX1rKJWP/jdxBOTP/L+29DP71vkyLuxbS8i4
s2/t4j5PjD/CvGLfekLqyb6V5qfxTW/c57PxBTT/jT+KknXEvhXvKrNvPeK+
Ho0/wrpm37rIfR8w5V+VfYN9K/qffSveZ2bfin2Jfese2cfYt96VfZJ963TZ
V9m39pV9mH1rE9mv2Leulv2ffSve72XfCh1h37pd9Ih9K/ZV9q29RdfYt653
10dznoc+sm+1i86ybz0qusy+Fe/usm9tJfqufKu8u8u+Ff3AvhXnCvatteTc
wr71gvt5SfU/+9Zo9/OS6h/2rTinsW8dL+de9q1n3M+Nxh/ROdD4o7Xu50bj
g+icaXzQSjmvsm/NIud29q3b3M/Pxjcddz8PG980Us7P7Fsx7uxb8R4v+9bz
cj5n3zpEzvnsWwe7+wXTz0Hu/sL0c0N3P2L64WN3/+IaR3e/Y8aF/JEZF/gp
9q3H3X2fGa9u7r7MjNc48XfsW0Pc/aDpf7u7fzT9nKHU0T+HDXL1J/oZ/hT+
Bf1z50rxeh3bJpl09ENVv9Qtj24kWbbJuRHjMnZirW1rGrreB0b/4B2wf+i8
jffHcP7E71aM3D/pTIsU9Jt6xxV+AfWxF+ka9tOE25audG7He6fyvrHxHQ3k
fbb3+9tjU3+fKWtbnFjiSjfv6T2rNvFtbLJlq/wuxqVw/IK6ORenSLsem/oP
Cqi282B6CvYr9X5pe6rnfalnGuoj7Vq6etaZe+nmHTn1fub7cqJM/XfOvf1P
6uBkUx/z/2L73rSp1ibZ+BSMSyN5L9FPyjHfpci7iG+kHLT3u3z++SMKJ1t6
SH60d1/nkR711yRZhrbp9cm8CudD+P1M5Ee7klOm9Kr48JYp39zTeXS63LTI
JEs7OVegXekDtsduK50s+0mUaVfj60Va+O+/ZWl//0y7+2dOhKBdeIezq5SD
dhVeVLdAvilJpj5oV3DrW2Uvh+BdzUMh/C5lU8mP9VVEyvFFPaVdqE8bOnfh
Hcv3+9tj064B0t62dO7CO5atpHy0N0n6LV3KQbumF+nS/0HVJEt3yY92Hf7z
88ZPHyRZOtN5Eu9zZngfJ8icWybI+Lam8wPeY/Sjdi2Vdkm8IdMPT7q3mbHz
j2RLL6kPxhfzU9av6Qe804t2ob05LleNmNPTvA+s3lFEOegHj/ZDZsR4pphy
0A9Yj53p/IP3JGUfM/3wquW4WsdfpZj+Md9byj6A/OZ7UXnnuSPpHd4PlP3N
tMuz8Mzpjw+kmHJQzyqy770lHce7iMiP+vQ8vqhkz3/3k3TSZbzXt1vyo//H
yP4M3Ud/4j1A6D7qiX0e+fndP+RH/aEXwqOMHvWZ+XaC/RDeZdXv+6Eccx+8
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
K9BPeP4O+sn69KUh6gi98BOev/M/1mB5lA==
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwtlgmwTmUYx889lqN7vmMbQpbuzXZxLdnDtW+5lpuQfc1gSJbIlGEQiqJo
DKUUarSZokWyL9mXkZr2lEJikOxFv/88z8z3zPM///O8z3m/9322zKGPdx8b
BkFQIS0I8qGnR0FQCP0iumEcBN14WTgJgj7oOvD90I3ge6KLwhdDeoMfiM2+
K7gIXFlkOLgZXGOkGms343MwXBZ4I7gMNo/yvBVcD5sO4HS4gej7sOmPHuLf
3YtNXWxa8Hw7FQT/IU3A98Ot4F1pbN5FfxCZTVpiuCr85+g62h/8Da0DDwDf
jU1TxyXBo9F1sX9SfnmeiW7L+zbo1kgIl41MA+/H5250c+x3ovOwW43uyvuu
4DfAD4I7IK+Bu8B1B78Dfkjnh2zW/4OriowHt4DLRZaCK8Hl+Llt4ltjxIE/
BX8Ibgj+Btwdm/d57ol9HrIGfAL+kdj2NQJuALIefAb+LnAuuAHvx4OPggty
4RMcD4QfC94P7qO7A88DdwDngBfqf4Fbgj8D/4nPm34XOv8x8PvAt8D1sWsv
/4mdoe50HXxF+AI8f8262uB64O9SxucHHwPfC/6XmNwLztY5wB8Fz4mM3wfO
hC+KzwVwd+BuIwdThkvCL4G/DoYKZnkMNMLPdYiJPCvuT/E+ApQCFwvN/gay
B5sK2BeGfw7bych5+O3wl9Hp8H+kmQjP5P2EyL71TGR+5f90mq3lCIK56Fu+
N+1Rd/oYkp+XzfnWKHCmx0JjbCYp7uCfQteAr+2x1yY2/mlwdbht+K0eWEwq
X5RjpRPTei6VWN4qj4b4N7PBuyKLa91NvsRyTDaK+fbIHPj6ieG5ijnf50hw
hcT86D/cC66CjPMY1h3rrpXX5TzHVQfKgxd4/NTx/GqnWIot57IS25P2dhzd
GX4ZfOXE7qYoslOxxvN8cEedA3gDuAe4DLoMa8uiZ7D+Kmf8JfZX0CUCu1fF
VRHw87yvoBoALodu6vGZg26p/wRurvxH7gnsnHLcRud10+NK8XLJYyAFXyK0
bxUOTYTTtc5j+ziLVvHtLPAR8OLI/tePygV0Oexj9HzFJ/owfLnYYm8HOCO2
ON/v8S+bQ+BWXldVQ9P8fynHOiIZgeVhL+zbga9EFreKz/HgsvB/8bwtZfEa
emzP8nhWLCu2ZbMV4jp4D0ajOfv+qvnYRNSQdfoe+Bh6r84uMLvBsXFPqFeA
d4FHgnco9rDZjn4dnxmqJ/ivH1o9r6s6jFQJLG/L+v1moldHdi8foxsrHgOr
7xX9vlQvsv088xRDfg5V0WO9lip2m3pMKt4WIcXhK7HHiXC1Aut/05UH4Bno
KaHl2mT0VM8p5eckz1nl5CykCXh2aGu0VvlzJLKcauC1XXmU4Xmjb72MHur3
qNxVreMXTI0sThS389QrE/uGcueI58tOdK3E9qr6cIJzLA1eqroFrqR9x1bT
lBdbPK4KsHZKZHGlGjU7stwpqP8VWX/U/1WN6e53oR7f27G44V5PRqBfQeoF
1sOW+JksQn+ivAIvDq0Hqm++hz6TZr1MPa0b32oG/pVvve1nqJ7aC8kE90Av
d5/yfVL9Xu/Z+MOs/Uj7Am9Ct8bmi9D6lfxf5DvDFE+B1dkRvmfVsAOR8epx
axUTgfXUU5HtU73sXGT+BuH/58hs1PvW+/86EFqeKF/OonelrC6Ux+eh0PLu
IPqnyPZ23uub/Mhfv9je98f/hZTFaw24TrGdX1ufI7R2RWgzjOajEomd25vg
TqrViZ2R5o1aseXQt/j7BSmpO4st14rhZyH6t5TVzaqqKzx3CmxOOALXHnwY
PSA2PQ7fJz2uZP8qduXBp+GyYsO/p4xXPq5B34jMj2aMzbwrFFp+pfOcF9i8
UdznS82QG/ysNoZ2pzp/3YPOQbHTRnftc47mKM1db4E7wx2LLNc0/+icxXdL
rPaqjz+r2SFltV5z41VwTXDN2GZL1XslwVe+T83AKz1/Nc8pRhVjzbVfn3M0
IykOVccueD9V/VkZ2Zmot5xKWb/SXb+A3s3z3x4bLXy+Ui/TXK0Yv5yy+Uu1
9KXQ5kndb25ifUHz+TSf/RT/fRPrZ6oPyvdc75vtEpu9Nav/o29GVmuHJ/Z9
9Sb1RtVk3ZHuSvOY6uRa8LLI+kh1n1e3sHYYa7eicwKbXzWbqZddxH+12Grz
WXCEXafQ6vNAnxXVo895jN3xGVW9YFRi96B6onqf6/W5C/qS/g9Yf/pKymq6
7quX72eo8jFlfVexXTm2/vk93KDYYixm7SWvgcopzRKa95Yrr1O2T83Dq7z+
qw+0iq3GJ/jvC+4Cn7+Q9cr8ms0iyyfFeanQvqs+/wP+rim34cNCloOab6/5
+ajHnQH/D8aYdX4=
                 "]], 
                Polygon[CompressedData["
1:eJwtmHm4llUVxd97GM6F73tlhgQEQZB5CBBQBnEAHFBUCFGQydS0gUEezcon
S03NTMtMyzE1SiWRcgRRBhlFVHAKJUcEFdMEBEW09XvW/mPfe9aZvnP22Xvt
vd8OM2ae9qNUFMX4mqKoq/8vVoviBcm9uSj+Krld8i31N9OkLeofWxbFnWof
rb4tGjte+C7hAayN+bdJXtXc12KvbhpvXXhP+vol78ncV4RflvxJ7T9LXlK7
vsYP0HjHSlG8KdxI+CDhv2XPrSfcsvCaTcJ1hJsI/074v8LthdsLPyC8Q3iM
cJvC91ki3EC4gfBlwvslX0ku1D3mSv6n8UM13qrweWZLpJpip/5slbwv2SbR
0YrLNfac5u8XbizcoeI9Nmr9cYX3flrjH2pc/4o5ws+r0V3jTYXvEX5fuG3c
52bhbcKthNsJ3yr8H+GWwi2EbxL+pOo7crf5ko/YX/IXte+WvKP225I71b4r
u90s9E3ffdm6QUfvxdoOah9YeA/O8EfJ1qrP9oGkY+j3DvVP1v0mSc7UXSdJ
+qh9mcZ7aHxZto00SbYB3neqxheHvXwkPE74fuHDhDcJHyv8e+HBwq8K1xWe
KYxR/kBylH5jhKSr+rtJ6khGqv9Y9pTMEX5R/0dr/Zda/4bkdcl49X8nZL7G
hxQeO0v4UfYV/lD4U3QquUD935ecI/kudqC+zySl2tXSZ+As56m9QuuHa/3W
7LlPCp9YeA1970nOLT2XPegvamVHtf6N1Zy/8G8P0J79JQ3VX5GcLLlX40do
fLPGd0qf44U7CC8Qbqvxc4UPEf6XcF/hK4S/Lbw2e82/JSfFXtO091RJRb9d
lWzWfhXNb6v585gr3EX4YOE+Fb/tGuGTCr/xCcK3Cg8VHiv8huY3FW4kfKPW
d0Rvwhewh9qDJNeofTVvrPY7mjMMW0dHpe/wILqt+m6Pqv0INln6vQ/S/0/k
L720ZiX+LDkG39fYGI31kPxE7b7qW62x4cIfaP52yUPJPoAdp9L20Qg96P+h
mv9Yts1yr7rSRb1a6wBugWPQzWzNf17tseprUGtuwLawMTjip8L1hffo99Zo
/i+zuWBb8MMt2bpBR29p/O/ZvjxY+JuY3xBb0dxnquYT+KGO+i7U2FP4d435
r502vjibl3eob1nVNjuCt0+25Wuy58KZK2Ic275Z+BiN7xIeKfw4/lLaNg7H
l5Nt5P7g9wHCX1btg4OEH072TXwW370dHyvt13AjHAnHX5HNbV/qfOur5qjm
ws2TuesF4f5wKZxY+g7cRc3iIo1dHefnzsur9h3s5elkH6qvNxhV+E14m33Z
vrcSfhDeHfd7TnhmaV/GXpYn+/QlwvVif3TLnuy9VPK90hwNV6+Dc4SnSOen
xHvDLR/H/fFxfJ3f5LdXSX5YmivhZjgazrwy+27ccWnYdyfhE4k5Glgi3K2w
v8Ar3Svm/nbCH1dtj/hmT+HdwtM05wm1F0lmxHvwvnAY3Iov4bvHJfsUOkAX
J6tvsvZ+LZtbb1PfKHwlmwsfFB4h3KniWERMJDbu1fge/Ed6ryP5Qn0DIx4R
f/cLD414QXxZJ+mu9o/V17O0Te+K+IitH1uxr/4MjtL4r8M/8J9VVQttfOoX
GlspXGpuM+E/ZNsEb8cbtq1YpzsiV2kjvCHiv45aXKv5s0rrgLufJRlSmovg
pKFqr8NYk9/o4IrjHfqvUd+zGrsuO5YT09cKr5Z8UWObxraZ802N35216BBd
LiCmqL1Kfb01dxacU9rH8DVyJnKnt7O5lDflbYlT85L5bYLap0d8fEAyUe2X
s2MlfYy9lZ1r3S18ivB24RPCHuCDFZE/5eQ4jM/he3A4XL4zO/bA8XA9sZJY
wxk4yyvCA4WvFx5WOp7hb/cJnyb8UHYsmsAblT4DZ4HfT8X2NN5P478hRgmP
rjg2EaMGl74jd8VH39XcJyRdiDXkKBp7PJurJ3J+fJUYIzwFm4MPJKMiXpH/
cF50hG7g/690/31Vn3Nhdn6JLtAJuSUxkvOcLdyqdPzqIHlW/esli+JMnGVa
zJmu/2uy13YSviWZ0zZkC3fmroz1l/QLniUWkxORG03VmpalYyL22BNO01hn
4esiPxlT8dpLkzmaPXoL9yrNo+TXrUvvxZ7Ls89+fsR/7rA28lFSjl+FvWLb
2Dy2vyb8DR9sX7G99lF7nMYPKJ3T4rv48N4a2/++GvM7mBjaWeNzIrYS8+Ey
OG2YFrYpfUbOtiLiOvnKefBlvDFvPSlZr8QM9uY38CtsCts6XdKitA/NTT4j
Z0UXl4T+0clerR8U8R3bWRD2eZj69oQt0KYPmxio9Vcl+9DG7HzyGOF/ZudT
5J+c85ns/AOdjE326VXRR25Cjsrcz7X/qck6QTdNS+uyT+QnT2VzPlxPLtkk
7t8lzttF+KbkmEvshfP7Juck8+JM5HrkvJyVHLhr+Bm2152cJJnj4XrGLk72
QeagQ3QJRw+p2CfQA3puHjI52ccWhv13Vfso9X1ddb1ADkPuAmnCAfg5cRpu
IM8iHgxL1iNzhifXGKytET487vuPbB1cFOdBN+iI+HBGsu6oZw5JrjmoPS7N
tmVsmloLG/46bAXbpqajtuuRXLuS/1Frsgd7wTlwz5X4VOkYhm7RMbFtYfDL
kOCOR0Lf2Cy2+1jwUa/kt14f/EbOC3fg93AdPtw59idWtkiuXcmXGwcXb4lY
gh/hX7trXGOST8FRcBUxj9jXW/j1yKfIL/aFLzJOLPqsxrGSmpfaDH19WnUO
QS5BfUedOD/yg87JtePc7FyTnJPa9KrIV+CHjVXndOR21ATUBjdkx1ZiLLU2
OQa5xvGSXdWw4cJvjC8+GfkN49QzcDbcDWfBC+QM5A4HJteqW6I+JV9GV/At
3DwjmX/JKcgt8Hl8/13NaZ0co4nV6Khhsk7QzcPx/tSHuXSdjC2OEK5Xujbg
97FZbPfFiKc/T+ZacmByYTgD7mAP9sL/akv7Abk898W28Vl8b3ayL68OPoWz
qFWoOeH2a4WPKO2zcBf3wZcXh79x33alawZ0gU6o3TdHfL48ObaQQ5FLESOI
Fb+NfAWdbK+ad4kN1OQDSnMCsYT5cMVL2bGHGERutCLwOcncvSnyDfIlarmt
8f2BbxJ8m6BOHZ185sXBb/gyHNO4dA5ELkSOQa5BPrYhOYf/PNseeZN6EcvJ
wZfG+MSKa5Ybk2scapmjY0/2opYh5yXXIefZIfxmdj5FfjOydI57R8RP7k49
vyw536CWhCPgCr7B8C1musaXJNcc1KqckbNwprNL1+jchTudWTonW5ica5Bz
sCc1ArUBv8X3kfXJNQnnnVI61+OMnJUag7qBupLagza1xOjCfdQs1C5jCufh
fNNgjDnnx++TG5KTjZO+zhC+QfhI4W3Z3xfYg7V7Q2foblKcjZyY3DjLqWtr
fWdyUnLR6eEPxFXyRr7t4eP4Mj49WOuuD76BD8i9yamxFWyGPIwzcBZqcmrz
I4Mf4Uy4kxqS2pQahlqGHJM9WEsuR42En8HD1E7U3NRi1GR8x2AMX4SjmQOn
w+34CLksNdKi0P+Eit+TGpGaYFbYHLbHNxe+veCT7MFafJXYdk/YAzGO73mc
gd/mWwo+QQ5B7oCvwHENw4/hvv8DGDOebA==
                 "]], 
                Polygon[CompressedData["
1:eJw1lnmYT2UUx+9MTXdyfxcVCmOZMWPfxzpmIzL7ljEo0ijSokz2JaMYZafN
UlGoKDyhp+zMDNkJ7U/WNtUYJiZR6nOec/rj8zzf+z3nvfddzvu+Nzz/6ZwR
wY7jFEEINPYcpybG3VALTgUcJyjUcdKIFfO8Gypcx/kFNqIPQjKxmzzPg7kS
o01D/LfQP6F/hJ+hHl5T3t8V+qFz4H6403ecPnifoBPR3aEH/ECbBnj1Icza
RuI3gihYjJeKVwN9F9SEgXgxeOnwBvo1eB16E7vXVy3eQkghZw59nA2L4B68
89JX6TfcgP14/Wn3LX41dFWoAlG0vWDjbIb+Ff0bNPH0PWfQZ+Gc5ND+Mbx4
YuHoCPiXd6cyb9vwt8Lvrs7Bp+gtsBkGkfcwDIZ82IGXS04IOhHdXcYF0Xi9
8Jail8Aim5cWEIVuAo3hMn2JJ+8jmXdPxyhjPQHH4Qy8LzFyesIm9Mfwss3V
IeIHoTd6Jl4COa3QLdFZkA2VfCMV/210JrGz5J+DNLxVeN+jy+Ai5Mq6Q19Y
K/VAfj24HOQ4AZ592GPvW4F+B5ZDBjnJMBfdjVgsxIEHyXhJcB90sHmROklD
n+Kbp2E4XileP7y/eL7uat3XsPWVdT7NdzPIS4dM63sWOQPQ69Hr4EPrcwI8
g34FXpX5Jqe/p7XzJPopGOHrd/fKmKAE8myNItFlfO8ilEMyeUmQYvMo4y3G
L2NextDXGfCiq98dSXw0jJI19rXu30Qvk/0n84A3mtxRsFNqlHfU9bR/B4gv
gPlW47ssXkDuNJhu6/Ye8Xdhpc1Btqd1kkUsG3KgGYzHGwdjpDbJCeXcyKTG
j/J8BAbineQbt6Ibob9Afwnt0N3w4iAW/sHbD3/Tlwae7k/Zp+NgLOy2uQgj
NsT2RV/0VWKVMAh9DG8ksdvpQxVYiL8ALtG2KbEVNj4Z5yG8m7yvIe1uohOI
r8XfDFvgO7zWeG3As70/E/8lKCFWXfYI+hq6K7oLdIK2nq6TrNdxG3cE3p/o
jlKf0B5ae1qXUp8XXD0HZe9PQk+EfTYXRehbGEs6c7qPnM/gmtWv1PFtoTru
Al/nZRd6J2z//9wgnkHbwzwfggc8PWPlXF4qex9WQ3Xa5so4iG/neQf8QV4F
XAlorLOnZ11tdF2oY2fnKnJXwiZIkXMtoHMeIWsuZyW09PSOqGNtw+0MDdC/
bPq3gefjMBjvqK2XtDmG/hwipbbwTgR0TRfa/Dp4QRBi9TUBf7z0n1gl8zcV
XY2xFRB/Vs4nWSc5A4i3RbeTcdm6FZI7Bea7+q3tsmaejsnlHaFSW76uZbTU
BrF15K6HFr7uR9mXE6GHnAWyjtAT/bx8g5xeptuh20M0VPX1TpS7McP6t412
W6G+3SNxnup89BAYHqx3yx5ySuGkq2djPV/XMk/2B/SxdXuO+GQ4TN+D8Wah
Y/EfRQ+DoRAm96XkytzLOQ+tfT135+FdYj7Lg/QbS2i/GJrbWSb3THP8yehJ
MMHmIID3OPoJGAuJnn73EXRtYnWgrq/znIqXLue21dBeW8P6nu472X8bYYOc
a66+Q/os/xb9pbZhANyB9zVtv4JvbK1kv9Wyf4Vu6F1ypkCS3Wtd5D0Q4+vZ
FIN3nbY3ZB9CCbnF0IF4EbGj1l7ec8DVOWvj610h99p5vHI5e1w9X+Telvs7
Xva/p3doK6s/qcOr5CwndxmscfX7ciYO431DpQbs/sqzcTwk5wU8GKz/PtKv
QvRUmCF3AF5H66voTujOcMTWP9zT/zb5f5P7t4J5vgpXoDSg8zKLvDkwO1jv
fandF9DTYZrVs9TLFPtuoc2BI/868g/p67na3u6P1egPYE2w/m/8B6ucSUE=

                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwtl3nQj1UUxx/vU3rydH8iSzGyJluUoZS2KaOhRmJskX3flyyvfffy2vfl
te8hVISkZaZ1WkfEVFSMpSjDJEn0+Trnjzvf7z333Pu7z7ln+5Xt2K9J36wo
iu7NF0UxWDETRXsgK9Mo6sa4wOKkEEWlkihqwXoxsCSjFbwaeH9iOpPRacq+
UcibCRlT4MdYm8A5zZkfCb6GvDX4EmM8vAV4EL2m8MB5h5xLlmF+FBzK3u/A
V5AfybK11ro368edX82ye54ER6PfOTU+BN6Y38hGpxHYFfk55OORd0jt/GHw
0omdr9+pAW8ve4AddX94Eec/sD4c/bacNQb5eHAc8hHwNujUZz4U/jS4ljEH
Pg7MYUyETwaro9cJ3pN9E5lPhY8F/+TsbvBL4ADmufBBYD/GJPhgsBd7XwXP
c4fDWWbnFcy7JWbPGZzZx/W174zb7RT4FDrF9Dbsvca8C/Ir4MPIBsBrgW0Y
g+EvgzXcbrVj+x591+Ngd37jIvumc0495gORPyPbxmaHzuA0/y59XyfnPcCe
she8O9jBbfgE2CU1m1fijif8bqfBX/x99ea70VsA3wWuYiyBvw++w1gI3wfm
MabDl4JrOHMlfG1ib90MXgg+hrGM9Qz+vgichXyJ/DExvghcor3I7kRnMN95
OcveawFjBjqj0Jmf2F3Ko/Omn7NTPo7+z+h3QrcvowCyFcgWMWJ4b2R5qd15
DmdsSO07qnHODnA+8u3ga4x58M3g8MS+axK42v1qr/wqsfXi7F3BOW/Ay8Br
ylfQeVDnuS/NBS9yh2xwZmpvrLduwhnDmFdjvifYHu19MrH4HQ5vCX+Ltcry
A2RzUvPlH5F9znhOb4msEL/9tueQ6an56jnWD3qOGI9sLKMh/AtkrzNKwgch
m5Ka73yE7DijnfwY2algPj0VfhW+Ab4Ufgk+Et4/sbhQbmkHvoe8DvLG8N+D
xxL68xkz4fm4YwF/+0V6h9Rskx/ZDfRzZffU4krxNZBzyjFawu8G16NTWL8r
e8MrwesjvyO2+NV73yZfh98OZsXmz4q5gonlN+WZhcHW5A8Zzz9lwL9Y6w6/
kWX7dU5BsDBrbeHlE+PKRdnB9K4zRsAfQ55BdzW8gcfai7HZ/HnwK9kstTj+
BD7a37cV+z4Llr/0jtJRXH4cbL/O6ZxYrtM5XyonM5r4m76gN4zsXZVntedr
36v5N/BGiem0TsxfdKbuWNpzy32x2UX2UR1QzlIOGMPe82BX5DXZO5jfK6sY
8DzfTnuRn3Ud6Sqf/AaODXaObKsc3wv5P8znBntT6YxzG8rmdRKL0X7wW8GK
zivEdq5qx0T0e6SWp2fAS7DWR/EClmP00DvGFiv63qrKn4nFlHxStbUDvAq8
kMda8dhyhvxE+a+H59hpnD8wtfUcvV2wmqfccpfn7aKKh2A+1wf5KMaz8E+R
HfIYmeXxrtq7H9nw1PL9gWCx/wB8d7B1xVF7t7POb5hYTnhIuTYY6rv0nv1S
87dVyLe5LRTLDRI7c6/ra/8++CPIU+WHYDrD1DOopvmbbg/mL6o7zZF/6z4m
n1kMzw+vlVgdVyyUhQ9JzXd2sP4B41H4CGTVFaOR5TXp6A13sr7LY1Z5rG5i
76X4rerfpfu293yi3KIcrjvnBatPqlO6w0TvbQ673WTf74PJ1dcchZ9m9Pbc
NVc5Dv5T8FjinGmp9Q2qm13Bycy7yBfQyUmtTp5wrvr5K/wMo7/nNNlT/lkP
POZ9iXJmK3BCZGet83wom+i9lEvWIFvm9pTPjHaf2ep5V/Vadbukx6ZitHZi
+U15Lzu1vuBDt7fqSN3YfFU9xibkmz1PDkgtL3VULHgMqu+YF6zfVB0fA15h
vj62GndBfhlbP7NU9Vq9BLhKeRm+SnkyWK8p3z7pdpYNE/L4QvhI+DzGcvVI
idUN1dxN4Fm3oeyf4+cvS6wub0VeImN9jnJLBeQVvK6pN1ieWp0vjSzXe4Nq
7sOK+9n6Dvhq9m5EXjRjNVv3X4t8P7wSshn6PXTyEqtNs5DHyJf5HUrCs/UN
qifwvon1dfqu1L9R9WsbOBP5FrCU5yLluJt74VPBmYn1FKXY9672RXaPDYnd
cx3nLE6tbwroLEhMZ01ifYW4ZLqbfucedGbHdh/V1OXee5RFXixj77jUa6vu
f0vG/i/ov0MJ/WZq/VqRjPWlnSLri6swPxDbfdSDqadSX6ZarH7ssvcv6oVG
gH+7n6ifqex7defrwXpQ1fGb9Vy9cWw9ifroP4L1geq1csHZqfXg14LlT/Wz
W4L1e3qXLM7eGDznev+jWP4vWFzrPurR9N9BtXh+sDPV+/8bzLbqOQtzzv+2
obBD
                 "]], 
                Polygon[CompressedData["
1:eJw1mHf81lUVx788F/Obj/cBRVKcTIlRDkzTLJPEVY4IVEBA9o+9Ym9B9gaF
nzIEWWquHJm7vacz0xQUxVyVopZZfd58Tn+c13PPOfd7xxmfc+7Tov/orqMq
RVF0a1AUDfX79bIoLhbdlovidtETok6pKL4t3Tcl/0HIGHcVPaRxe+k7iE4R
bRXfSL/DNP/L0t8n/l7RNzS+RPSIxr2kv0bjfqKHs7+7VOPLQjZT3/ZOnvsd
0RkaT5VsZtVzOAtn4ts7RedoPFGyb0n3Q/FfED9F/JXie4p6iH4s+U9EvxSd
K/1s6QdI/l3xLcW3Sj7nLdl34OxfEW3T+CzpRmj+ueJ3it8hukDjC+NO46Vr
l3zXmaK9MuiVkh1X2oadpRsXtv1R9hk521Wi80SjpTtRc76Xfd5p4ruI/7n4
X4suTt7jktgPW/4qdJM0XiLdWs05tFYUv5DsQo0n49PSdx6YvCZr/5S7iZ8l
vr/4WeJf13kHiT9F/Grx/xQ/Unxn8b1F09lb3/xWusdEj4qmyBdTRZ2kP1W0
UbJNojtEx2vuqPi+i2iMxlmyDdLdKKoXfUnys0V3a9xGuklxXtY4RPyQwmtz
J+52vaim8TrpP6l4/a9Jf4P4htINjvOfKRqqcQO+kW6tqCDe9HOSdJvFH5Rs
8zPErxLfVPxY8ROq/v6LohWSr4yzshZrcmZkzYNn7lLx7+s8fcXX6fvl4pcR
g9KdXnr8XsX3QbZFfGN931/8WaXP+N+K92S9B8V3TLZZl7AfMUJsoLtO9Kbm
95N+iPabK/7tin3QKYi93q1Yd63oHY37SDa46hhvFfFIHF1ROldOkuwB6eZj
E/FbxDeVvX+THYvEzxx9v0D8UeIHiD9Hc8eK5mu8XrJGmt+u9Nk44xzNXSg6
Urrhkn1Vuj9mxxIx1ae0D/ElMXOPdN8XtY34vYi1xf9da/UQ37Z0DnF27nCX
dIPEXws2if9d9n26i36v8aWSLYozsDf5y5zLJB9Y+tsns8/EWfqKDtMdZkq/
UmvOFX+Q+KXil4kO1ri96HGN10t/A/4n/0QtJW8laqxxN+me05knZfuF2CRG
yZG2mvOwxpsl2yp7Hiv+NnJD/DLNPa5mGePlojmi2aLjJTsh9rif2C689/kR
72AYWMY3fLuBnBR9tuY92esW0Wmlc4GcWK/5WyS7GSI2wwYzwNJk28zkHOJX
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
                 "]], 
                Polygon[CompressedData["
1:eJwtlnlUV0UYhm8gefXnJcU13HAPl/zHpdJSS620xSw1W9wVt8ByQxFUVhEV
wQAFQUBAc8Mtl8qyU6e9zmk9WamltptatrhlPe+Z74/nnPe+883cuTPzfXPb
TUoYGR/meV4mRMCqwPP+wJgR8rzV6DWwyfe8MtoOhHvei/A8z8W0V6Mv0X4Z
rkB4pOfl4hXQlkxMCmxCH8TrSFsn6Awd8TvASnvXdGJ+Q88jbhX6HPo8LEUP
xRsIg+A9e0ceei2s0VyIeQZuRK+nfQMUa954iXgX0L/rPTAXryVeW2gDO/Fu
ZR49YCu6Gd4AdC26A7o9xMC8kBtvEToJFsM/xLRjLnvRZbQV0K9Q40Ala1WO
fxRqaJsNYehrfOu/UETf7bANdsA9tCUTUwWvomMZt5pxanz3jv14+2APlBLT
CL8hLKTvMcabiJcEt9PeD+6AKtqqiClnLkd4fgU2E/MsRKGraa+BLRBN3M2Q
gb7AeF3Qk4k7ib4CVyE5cN8RTt8IqAOFePmB+yZ92yWYRcybeI/TPhamQmbI
rY3WqNJ339iV76rQ+WB+L/P8ElSE3Hu/ZZzTcAqWMFaifWck8TFaE9iIF9Cn
AdSHePpl2vzj0F2J6QZr8XIhT/tle5lle/0cegU6O3Cx6lOOjtQaak2YYwuI
hh14JcS3RbeBGNt77cdi+nzNe6PsXOt8V9g4CbRXojdDLP4t0Mt357UErxRd
yhrs5rlWZ9ry4hzjnYeLlotlilUuQsi+VzlYg94KW6AZc4qCEvRSxsmBVXCV
Phl46bBMuRNya6i1TKftLO+YhteC5+awDO8XvPboXPwl9LmI9yf8BU3wG8Mi
++5JxHyEHk7ccvRTtD0NnaETJNF2nbie6OU29tSQWwutifo+SN8HYJjmaOf5
NvRrtB2F1+GI8hWvJ/SGRcRMpP8EmOO7eX5OzMPoh+BJGIn3Gd4H8D58aPPU
O95GT0BPhDthCd47lo8p6LH0fwL+1rrjbcBL5TkNTuNNwpsMM2AFbV/gjUA/
AmO03njNiG0KC2g7w3e3RreCltBdY+PND9w6J9PnBM/Hw9x37AlcnVK96gQL
iFkIsehuyiHVY2IGMc5AGOG7NVPu90H31rpYvr8QuNxvjG4KTcyrtbyYT9sw
4ofDOvRKOy86N/8Frj42RDeC5pY7Wqsh6MFwt9WwA3g90PczzigYDTND7jtz
AldrVXNT8R4lbhQ8ZnuUrVqunNH5hh8DV9vrouuBbzmTozqGnqt5wE+BqwfK
i76MPRiG6DvwWuG1hstWm84Gbmy9Y77dN8p5395xk+VsHfJonc4Y42QrJ+Eb
nXc4Dlm05RH3JXq07fUx9FfKNfQ4vFRIg5OqkdYnX/VCOeG7XC3F2wjFsJ62
dNUO9GF51IVii1WfDN/ducrzG8CDMLtzdQ/qHdk6i6q5Nr9reJWq/cpNy33d
yYdUI3TOtaeRbs9z0Ku1JnCdfuN53zjfrZnu5lm+W/s56J+Vx/Cr7dtsvDPo
7+GHwO2vcu9j9CfwaeBqgmrDNN/Fa38T0PHKXd2feCHmcgp/FnomTLfcmkr7
FO2DvV97rj0q0LdrXaFQ/wF4EVDX9k9eUciN7ePVg/rQn7H6wVDVZMsj5bXy
u8h3/yxaF51n1RvVne6QyFjf4cWhp8EUyMKbTp84WG3/Hfo/UK5q7L3ofbBf
9yIxY3xXK3Ru0kLuP+de5QzcB+/aGRpv9UV15oT9v0Sj74IBsAvvEByEw5Z3
ml+J7keOxzbluNZP9cbusI205/Gcb94uvJ2wPdzdb28wTl90H+gFi/EC4hpA
pN0tOqe7ieuC7gwdrTZpnYtUJxVje/lW4P7d9A/XP9zV2BSrhVNC7n7QPfE/
OO1WcQ==
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
TVPczsZexO8auBbf+R8lpBHw
                 "]], 
                Polygon[CompressedData["
1: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
P0v+uyTXcBbORM75DHrLO4M=
                 "]], 
                Polygon[CompressedData["
1:eJwtlndYV2UUx6/w8+mH127TXC0rRwMUULRMRMRsOtDcKy1zBVqZmuZIpdQ0
zVHmSNNEtoggCLIEFExjFJiCiTlSrEQMzbT8nN7zx+d5vvd7zvve95533VZj
w0PDPCzLioCG8KNtWW+7LGsiTIAEx7Ie8bKsh8EfvsMrxFsEC2ExPItXQLs9
bstKgi54xzwtKxN9GP814v2hH6wjVgRL0C3pry20g5V4IXhF5K9CfwEVUC59
wRZivxKLRy9H/2KbMcnYgqCWscfgR8MFYmXkfY0+jfYm7gP5eHlQoO8/SSwH
2qBn4M2EWfI95P5Bf5vxN8FTPK/BXw1rYTpeBe2a4j8ArWA13lFiP+tYzxD3
xfeD6XgP4j0Ej0MWsVO2abOLWCLslvdq3WKI5VG7fAihfR1jWUFuPFyyzTu+
RW+Fb7QuhyAIvYTYUlgGf9P+OnjQxzDJxdsOI9AjYRyU0i6XnBzwJ3aJ9x9G
N6CNBcXER5G3hVgVejH6E4iAA3hzoT3aR+oEubIO8FaiV0E4lOO56MsTytDj
dV0lay2P2aaOUs+f0JPwYojFQhzMB1+8PGJ/MbZ6mIfXB68vPK3vnY3XGv0E
PAbZug42ojfAeqi2zZp8FT0VpsGX5Jy1zdqulO+Ek1Ci375V6g3bHLM/ZPw7
0VEQDTWM5yJcc5s5+EzWHgxFD4FBsjZod4v4TWjsZb5xOTlXea6DFbr+C8n7
wTbztRFvE2zWsYzGewPG6HxI3nCdyxE6v//Q1w23meexeHfInlUtc70DHQkb
HLMfZV8O1vHlQyd0ZwiABVp7f7QfdJA5JyeV/vfCITjDevEmpyvv+ZMls52c
bZLLczr+PPRcmAPHaRtHm1hoT+wgbSPlvEHfRTwdfY7Yeeig8Wh0BuwXZJ2Q
N4nYZJgCA+WbybsB12EPOYPwXofBsgfUi4Ij6N/gAnQi9go0oj8bzuMlkjME
rx59DW5BMp4fXiE6njFkQTZMwGtCu/vhXsggLw280HdCY3jLMTXtqPtD9snH
eONkPuBNXddS01L6LIEUtCXzLGcBzxVw2m2++x3H1Ooe9N3gwD7bnBNyXhTD
VcY5QGqHLnCb77mJV44eqlq+aRh6OIyBf/H+g4b0l0osGK+S5yqohgTb1F/m
4Xlix/Fi8ZJkP2qt6vW9Uuej6BIoho5ytuFdRl+EGuir8yZzU0afp6AaJjqm
blK/+7SmAXilsg5sc0b9f1ah2xJ/EtrJ2idnl23WYk+ZK3KKFNHyjS7yTsi6
1fqOxBsFoyEMWuKdJV4LV3StNcVrDs209tK2AdoTPHSOqsithEtuc4/IWELg
lNatF/oFx9RK5qYfuj+EQgptkqGbnDfEDrjNGnLTzzPgDeMdczYEortDL70j
5bzvge4JwXrmSJ1r6acOrkAfvAxYKOsO5sv5Rk4m3n7IggXqdWa//k5pvpLz
UM5QntOIp8I++Ej3bzf8y+RFyRko+wbvZcfMq8zvOd1HJXjFMneOuYfl3E3X
fk6gm9NPC7iIjpU4sR48B+udKXdnoJeJnSb2IvSGl/SskHUvd8Vk9PdyZ3ma
8zRDv6kJbVtDG9hFXRPAV/fxTtvsYdnLwTpX8XKvwizazoYPIYVYhGP+bw7a
5i6VO1W8rnjPQReX+feR+2OHrBOY4jL/SHNk7tG9YYCMk5ypeOEwTddcpm3W
n/wbyD9CC/UCdU3E2WYfy37urutY9miQ1Msx/1LL8JbCpy7zT/Mo3/w5OhJq
mKsAnpPIe4/ndyHMZe5k+d6Z6klsr2P+S9ag18Fal/mnkXt6BvoDeN9l/n3k
X2AROptYDuSCzXsaQTMvE5P/g92MOxF8dB+nodfL+Ux8IITCEfq6DRqcino=

                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJw1l2eMVVUQx+/bfY/dy7vsoUrvva5AAAFpSlUEBKRIkQCyShcUCGCB0JEm
SAvRDyaG+AUhEBKEiCJEgkpEJQQTiRqKIL0sHX//zPjhZP5n7sw5c86ZdmuP
nTZwak4URTVSUZQLXRCiaH0mipomUVSHMRU8C14+uDK4LXguYya4LrxmjK7o
noqjaA78GfB3g+dCG8P/IjbdSszb8b0eeBb4XXBD8FLwcnAFxpV0FD3MRtF8
eB3R3QbdxHgGvBG6wW07zpql0K0OfwO4pfTh58lmcBr8Hvw60MrIVIOWZJQF
50MzjArgPOiDtMmkwFfB5cDXofcYAfwbtGzG+KWhp5jngX+FTmCPDPgONheB
T8NLs/8t5j/pLAXYjk5FZNpmzA7tpbvoxKidsjvNc3tKQR+jlwU/hOYwLwOO
oHfcnirgAkYpcAJtwZm7gX9n/1rMy4NrQLOMquAy0FaJ3eU2bPtI7wB/HfQg
OouhS+EHZFqBe4NbQmsi0w76GTIDoKPgN4fWg98aWugykj2GbTH4OHS4v/s+
8Gvo/gC9wz0MBT/hKF+mzXdaIvMOtCf8PfDOIzNH50mZf+yLTUZvXR/b5sH7
ABv2Mp+t9wU/lzEf6JqxdbX+buh05s1T5rt/+Hvp3V5k3hD8MrSPY/F2xbbv
Aegat20VdAt7bIWehj8Y3Bv8CbhRYj55VOeL7S7X8/1DxQf8ldCtrvs0so0T
W28NvBv4RoTMcPQ6uA+M1j0onsDdoV0Uf+Ae0Gb+jk0UM4zW4I+hL/kZ+0M3
su4Gj9kl0DYpe9c5sfnJsthsWA1vHbKX08a/CW0fLE6yfK/rNtTP2H5NZQvf
Y77VVByCE3BDcGdwI/fbBi4r3W2x6Qs3db7W6op8afexnv6OuqtDsdmueB8B
7c63FvJxnSW29ddDN8fmb9s99mVDp2A+qtjqBe7BGKb7SizPyE8W+r7y2T7B
7JNtT8Ern9gdD4RfVnEEHhCMr3cYBC4JrqZ4QW84874Z0x0DHqx4BjdhtEfm
R2ReDxYDsqEGY5zeCl5Hf1O9bTc/o85VKbH4GhkMyzdHB7szvftqZIa671Xg
+zC3oSK4XzAfKpNYHlQsyD938q63cbMd0OaJ5c5FweJIvq3YqgWeBH8m/J3M
p4Fngyd7XEzMWP4X/234UxkTFPPwjiHfBZmTsenK376BbsnYPWyWX/v6M4Ld
i/infV+t/ZZqBfOL2FgGXJiY3mbwWXgJ8pegfzsWr8h9+03FNbrPpyy+Lnj+
OQd9A/0FGYtl3b/iWvH9iueWodDDzDsrh0OXuHwDZI/EFrur4C3MWIwvgi4O
Fnv7+T7Pa5xq3wnmnVLGVy1bBn8l35cr7lNW2w66zC9eE5XHJijHJmb/GfjV
wCPhTw6GR4Engau7/0wBF7m/VUks/2ivFfA+j+29VHN154XgPbH5pOJ9bTA/
kD/0gF8vWP3L5fs1ctFBvp0rsPwvP1+LzH3453XvyL7K/Aj4OjIPsvZepYPF
nOraitj4equy8Mcwz4E/GfozvJKqTdDyiquM1WjVLeWfWci8EFs+HOF4L7L/
sFeHYPlIeSmdWN1uBG9abLaFYDlf55K/9/cYUywUZ61u5/gdjoXfF5xKrI4v
1J7gR8jUDCavep4LPgB95LEzJTa/Uk/ymHEDXqVgNUu1Zph8MFgtVL7qFZs9
smuHrzME3lFwvmIKvEBrqkbKtmB1/UnW+hfdZ8WM5Vjl1Gf5/oC7OIHMePRm
xtYbqLe5gs5d1u+rfOs9T+7/d6tcE2yvKqplseVJ5U/l0SJ/o9Gx3a3saRBM
T/pNHCv3Kgdnmf+lnog9cxLrlWp5n5NCZmRsfPUptYPdrfqXyP3nPnAA9F/O
8hX8q+id9XOpd5J/qHe6VGDvq55nvmKWcQ/dftDLfNvvut96rVdPIT/U2Zqx
16609R6Ks8vIFSPTJzY/l52jlKv4Vj9luT6TeH8UbM1DWp99SiTW67WAfz1r
/n8NfrH3iuoZ93tf8bX3OQ/YayD0sL+13vy294H30b2ZtV7odoHpSFf7jQ2W
mxTXKffJVLAYVD4rAM+OzfeK0T2Ttvv5M211Wb1eVWTGee3b7vemuL5SYH6r
On8X/J3fm85aMlhu1ZuOCNZPqKbI7u8Zt/yt5MMn02Z/LvuOje29FNfTYzuj
+r5HyOcFs+9u1u5NPqZ8oJ5Ha95AZqLnVuVb5f80MuOUq4Pdr2Lhfe9zlAcH
+d3K/yv7P8KjrNVl9STVvC6pto6BjtfaKYv5con1hm2C9bHy/02qdcFqiWrZ
kGC9oGrrp7H1t6rpJYL1jjqLYk156SL2F3oeU08lH1PveqHA3kj/AvonqBjs
X0J2jnHblN/zPY6UG/8DOfp7eA==
                 "]], 
                Polygon[CompressedData["
1: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
vgWLdSt6DvAYPoifzIgzn58c09zF/wCJZn0G
                 "]], 
                Polygon[CompressedData["
1:eJwtlnlQllUUh19QxNfvk09wBRcEDbUyUVsVcUlNQTBxSdxQQHFBUHDBRBu1
cMsFE1zGlplmqn9bzEmtbBmnzHDGMtMps819w1wRtec39/zxzHfu75577n3v
PefeLyG3OKso3PO8CoiA+ijPq2noeTcDnncf+wE8GQI6n4KBEBP0vCRYgT2T
vlkwG170PW8kXGPMQWJMwB4B6XAebQ/aFeLOxXc6Y/MhF9oTawo+k+Eififx
K8COQx9L/0swDgoY1xYtG3svPp/BELRnIR6tCX2VjNviOy0BrSN0AJ++SWhp
2OkwCtqgDUV7HLs79IZmaFWM3wpvwTDNj88Y7NGQD0eZ91/W2RrfEfRn0z8B
JsJoSEXrD0OgBT4tYbjNm2bx3iTOLmhlMcajzYFp2FNhErQLujkysEdCpvlp
X8bIT/6QC5O1//ZNU7Bz4B3ivw2x5q/9i8Lugd0TkmEwWhY+o+Am33SYb8vB
DuCXqDXofKCPjX1COYA9CJ638xiPloedr3OFYdDL9nK49hxWE7MC3vBdDM07
SjGwB8EAaI7/BcuTNPwmwiTYDJt8d1aKG8IvGvraPmu/M+m7Sm7tZ+yX8AVc
inJ+feifAjnaR/x2EGs7fOC7tSuHsuAF7KFam51bKloX7KZBlw9Vth6tq87q
5AZz3oFT2L/CCYhk3Dn6d2MP1RyQrVpAT4cMyLO8T8HuC/1sriDaFcYeYOy1
gKsJ1cYM+pfS/wj9e2nvg1t2Xv/hl0s7z3d7sA/tFzgOl/EZrjyGs7amywGX
k8rtMcQdC+PgNv3X6X+gb8K+G+X2oBt+XSHJ1rcIbSEshmK0xKBbj9Z1RGeM
toK+8JDbD+3Lz3CbuMn47qR/B32/43sKkrB9jcHeABuhBn6Ek77z34nPSliC
XQaLoDOxFtgaPsTvK/gaHtN5oU2ECbaWBmgR2JHQSPuIVgmbsTfBBuiGzzK0
cliu77M51mOv0R5gf0/8Q9AA7Q7fdBeO2bcVahx+r8Bkq99OUIq9EBbAUnxK
YS52IczWHYXPb8QcFMa+0N4OPdDuEvNv3TXwDwRs7Bz6E+jfzZhPfXefKp86
oH1E+2PojtYELQDREGF39krsV2EVVODTLORia46LcI85jzN+AGvZgk8lHKYd
j999+sMUg/YqCKKdRSvGLodlsATKYA20UB3h8z72e/AJlNge/ISdyhwVtF+D
A7T3KwZ2FaTQd9R35zuf9jwoslxLQKvTWrUetHC0Y/j2Z8zrtNfDQdprdW6w
zs6vC34n0Afit412te59tMigW2sP/JKhJ5zGbzB+5ei7oBc+bdAvqX5Uc1Yn
9+Eqdq3qFWLxyWRsBpyxOh6r+wt9o/JNv5ZrtwLuLbmH33TVuO/yRXtUplyH
l6E3NEeL0Z2q/MWno3Ja3x7hHm7tgc7oodYF9eChTSPmVCiEvyyHdG7nsc/B
GahjHQ/htu2p9ra97ntoCiE7Z/k9HXLvgd6FNtA46N6KTqop1Qs8h09X3We6
O6y2GwZdnSsflZeNTdO8t4gdR7utchifBay1FJZDQ6tV5bRy+3Pf/e9Q7sYz
vgB7FsxUflida0widifoHHL3ge6krdhVUB1ytaX9aKz1qVZC7h7/A+1POA2N
bI4Z9ibrbS5GewZSsPtBrO3BfLR5UGL1qZqutf9BtQF3BtPsHdB7cIO+7+i7
HnD3kHLi0aC782rsfTlE/w9wxP6PrbQ7aQ/938C3vrub1qGthdWW49FoF6yW
Y5Q74Ck3iBlmdazcKNLdAfX4XbHcVS20JE5raGX12xbioF3I/c/SfynlqnJW
NaE3Y7HvakFxWqK1gtYh9ybpbWpmayrB3gbVvvs/pv8s72L/D7P1QAI=
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJxFl3mwj1UYx98f/V7u6837iiRFyDKWweDad127i+vKvu9LrhZLYy2lmqZt
+tsSLVQk2kgxGKnRUJZUyhJRibJvqc93nmemP955vr/vec45zznn2X5VRxcV
TCsWBMG9mSAojhwWBcEL4OnImmkQ9AmDYGwcBEuyQdAZ/lhOEOQzNgi+AePL
nNf4ePT6w9eBn498Hj4P+SDfLHAh8gLz+4CXoj/O9eui/w6/832dt/kGgtcg
I8Yng0NkLb6HwSWQu11nJ7Ivv58G90MWx7ZdcJuTIDjHXj3hA7jG7DGU8Yns
2Skye/pGZofsWYGcENu56qV2Rq05XHPhVzK+nDULwA/BN4TvE5td5+C3MD4E
/susfbJhJfx9jFfmuwm+wJeC+zGvDPJR9Msib8CXRxbCV0IWZWzeEr+T85wj
xaamcEPRacq3lrGlzGsBPw9+OtxY5DjtB3e3r98isj2ExVUITV5jbjXGxsPX
jf4fuw7fl7US8CXwMHArcHnWnAx+Av0B6F/I2txLyMr8HgvuxfiP/B4uP0F+
wzcMvA/ZPrJzNUb+lrU3PZe1Mel8jzzINxi8H1kavUO6S2yoyN7tsGFEbLaV
Bv8N3xn8BzoHwF1is0G2XOX3XX6fr4NXo5MLPoEciU5JxpaDH8/YnZ0BDwX/
jvwpa+scQZaL7CzVtSa/x4AvZ+3MOvsNZFXmz9AdhuYburfzendsbus2j+Gb
j05v1hkF7gxfnfFq8seM+YfOJ50OyNHo9ELWQOcae0yF/xd50+/2etbW6YLO
/eiU5WvmvpF6vChuKoY2V++qd2yJLJfa3egt5GvlQjuL7jTX3ygP2QT9buDT
+N4hznOePSvC70vsHvNiix3FvnLAr+i9gXwtsbhVbL6PnMu6z4DnICcxZxSy
JTZMQi7K2Bn+ZE515QnGx3veWBxafCnWzzI+hr1ngPOYWwT/HDqT4dZ7/K7T
e4bmn7Pk7+i8Ap4d2fsrjnZkLZa7gk9i70z0Fmds3b9zLKbeZK9Jkdnbw/ea
De4KnhWbXYXgac53A49G/0XWeRhZL7T8UEe5Cp2XtT78Y+AndSb0cz0fKq4U
F3qXO+EbO6/xmei/Cp7LeGvNVy6K7Z3nKa6R3fnmZMyfFoV2J9rjIfQeQXZM
7Y7Ez0JOdb4TfEPPCfWRzeD7gW9yB0We/wch26I3hfEpjE9FPgs/TfP4Fuq8
2j8yO2fE5gN9wVeQS7jHrdxn69h8Sb6xAu6Ux+D2rMWF/Ly4fJh1jsK9576g
PN9VuZG1NsGvhT+eY3l4GTjLnCqM92eNAbHFX0m4epH5fBPkP+h1hB8ZWx7U
eYco/4cW+6uytqb85yKytt9nA+Sg2O6mFGv+kmN+Ln9P+N0IfnBsOtKNUqsH
evdWyMLI/Gok8hF0FqLTWn7iMT4ytFq5AFyAzmB/04GhzVWMNEW/RWxnX8M5
moM/Um1MrOYpvrZl7a31LuOZly+/AfcMrW7rLPKRYR4XI0LL4aoRzVl/gsfg
AmQx5j+Ysffa6Hn4M+QT/u46g/KX7B8cWZ9QpLyVWj3Q+lPly8zfzLwPsHO6
12XpdY0t3x+E/ws5Gv4sslpqviUfk46479CplVpdV+/R02uc1lfPoD6idmr5
RHeZC24Tm09tSgzrbj4FN/S6r1pfwfNhHfBJxoqFltu/dnv2ID9PrLdoG1sd
V02P0Wnj96W4uCc1v1KebJTa/aqvKMXvA8z5IrF8JL9SvyOsXPhWYrW7AP4a
/Mdwg9TbMG+DY3GXGfsAuVq1mPWfCi1+FafiV3m9U+3bCG4f2747ErNBZ6mA
3M7vvfDtYottxXhJnRf+MHxH1fbY3vnDxLDebj34DF+GffPh8r2fU4/R0u2/
qnyfWK+m2rrB4129VmWvazXBVTyHyGfKuo/J1/ajf9LriPKSckkHdCulFp+K
WfUA/VX72GtPYrW5U2znVY+wE66C11nlRvUDquGfwG9LrP/Q2bck9sZ601uJ
5Q3lB+Vw1YouqdVcxU0x8A+J9Tfd4LrHVvN/Tqzuqv7ewdwgtdqv/FPgb6Qc
WMb7NOWZ2HOFcsLFxHo+9X6Xvd9T33UbOjW89o31vNQlsryn3vUscmBs9aRE
av6hPPAua0xE7yV0HkWe5ncQeg/m9Vr250QWy3pr9cbygeusWdzfKIusBD8F
XDuynkb9gHpD8Vf4fcTzj3L7pRy7B+kd0x27L+ldksj6KPUJNTz/KKfKn3uA
zyC/dTvlVw/ElvP3wvWIrcf5zXtm9SG57kv6fTyxGt1dfVqO7S87jib2RrLz
MLhDbL3kV4nlz0L0b+WYLys/347c7bHfOzYfVL+knvRUYvfS221TD7susf8F
ys31uf+tHlOKo9Jes1ULtK/61V2M95SfgU+A/wNtL5jE
                 "]], 
                Polygon[CompressedData["
1:eJwtmHm8V2Mex89PnZPf09E5qZAirdKK0r1tupW03ZZ7b+kq3fZFWqSNZB9m
htes/pYYUxONKCXDaDDGEs0whilLKpIlFCXVLZ+37/eP7+s8n+f7PN/zLN/1
aTl1QeX806IoqihEUV19D2ZR1CCJopnCLUMU9cmjqLdoYRpFN4ieFf/FOIqq
GS/+VaKxois1ZnBucy4QfZuZrHPUnqqx32rOh8I/FqOoUvh54T8JD5DM8cLv
Cr8p3Fcy5uj/v1DfBM19T31fxybjbOHTRVVqv66+fyBP1EzjzxWdk9haV+j7
+4KtmfWwl+80fqfGHtL/RwqvFX5EuJ7Gd9D4eerrqrHH1HemcCNRU+Sq7xrx
vtL4/4t3XNRc/bPU11q8SFSu9rPibxTv76Jtsa3vuczOiLN6VPjPwm+JPlJ7
gvqCeM1F09X+UH3/Fq+f1rNA8u9W3zXiXSF8vfBvhacKXyiao/anGv9OZmvu
Ikpy20t7ta8T/6D474pfKnyDcHvJqC/+Ke1/rK/38czulHNaonFLRV+KP0z8
9eL/RfxBua2Bf09zor0QuaLNGrM1tvt8Su0S/199/e9r4UKw/+0U/z/Cg9EV
UYlkTteYl9T3tnhjNKZW/35SeK/wHtF6tc/S2MnifSL8X+F5wvcK3625Vbnp
DLrznmi72r2D3WUn8VPXyWVq31EwXR0ufLPwL4WnCI8Rvkf4PuH5wg9JxiOx
2cM+redl4e3cjegVtU8Wba2s+dXMdJC75s5fUDuXjInivyX8Ymb3wX3l+sd3
mekwuvym+FtdP8bxr9hsCx1D1w6IdmRmM9gO97lL7cNFWxtrXCXcXfPnFkz/
T/p5TRF+Rfy/ZaaDr6r9Wmy62dDX973wx+i6cI3w++xBuI904SrhF4QfEG4i
/qSC3Ql3g86iu9z5Zr/vhcJt9P8DwrHw1cIbxV8j/LnWO1R4tfBK4RGp6ftJ
4f3CB8QfLrxJ+K/CT7t97BI9o3Y7yZstfh3J/0z4SfU/IVrHeNGj6tus79Oi
x9RuG8w2sdETwhe5PWDT2PYn+t9g4Yc1/sHM7hydQpfQhTZ+HifE/9TPhzPj
rI6p7wc//y1qb1Bf4vtFR9CVZtiI8FHhvcKVuekqOnudeKmfH3tkr+9ndhfc
CbozWuNHiRbpnBaLvuEfiekQtn/C/c95ohai77We0eJt4EzE2y2qjW39x3wP
tOnbx/4zO3vuoLn7H9a813lH3T9zXw9nZiOTRcNys50hat8sflv9u65whegu
tf+ovuXi7dGc1sKtROeLyrWH4aLP1f+F+yvssyDeV8Kf6X9DXJ+xPfZ+h3h/
KNgZdNP4Bfh+9R11/cKfvoHPcXtC3/fHFiuG+vpGa3w7yarhHIVLiQ/CpaJJ
7g/miNcT/yZ8p3B1MP6MxHwTPor4QhzoKV6vYGv4QXRpsLVtYV+xxYgzghF3
zN3C20RMiC3GFYP5d+Lbb4QnBrPRl2LzcdguOr/L72dwajaGDOZie93Yk+bf
KP4Vwj2EJwjfIzzG4/Xtwr8SniHcVbjK48lI4f7EcuHbhauEB9Anaq/+i0SX
iMY5n7g+nLsXdVZ/F9GlPmasx376qjX+loKNvVx4nvBt3EEw/cHXTlNfr9zW
ND1YnGatk4KtnT10ym1N/Js1dBQeKRqRm41iq/igJ0SNg/kmYg6xB53tlVp8
uUntgdiI5q3EzkWjyAGKZvPYPjazp2g+Dl83ghxFeLdokNqP4f9El0nGZMm6
VX0jguUM61weuQT+Z4vHi9LUbAbbwed1F64X7O6fcf9EDvBybD4f308fvgs/
wlhyCGIzMZPYucrjETbSLbWYDZ+c47j+39T9DfHvn5npH7q4zf09Z7U7Np/G
mf1L+B3XR/73nMcvcqo6wWIWcSwL5o+QQexIXbeJycRmYkSjYD57k8fvnqnN
3eb2gIznPX7iI7FdYh6xaYrnc7UeT5GxNjP/d6fO+9fqmxVMHypFZbnpLjaK
rT6k8efn5vPwfRs9BrRQX5nmL9GYvhp7JvoqvKJgesx5cxdbPHacyix/xEf0
ET/KrY8284k/bd3v4s9a5qbL6DR6vNb3Tww7or2cJn65+EuF+wWjy0WF3HgX
4kc9vyW/a5WbTGRhG41yW/Mwtz18WKWvH9/WVLin21u58Lm59dFGP89W+yzR
wGD+4VjR7pZ8bjWxQ7y+7j/IwxjbW3hZweYQsznLDR5nW5NDiX9XwfJxbBrb
HqW+tuI1wY4T89FlwWyOfyAbW8R2l3v8w4Y7BIvJxGLy9Vp91+g/14vfA3+k
8fPdf81LzT/UBMtByUWJochC5tDcdARdWSw80McscX84yePWUuHfCc8OFsPo
o32tqA1rTSxmENuG5CYLmQtSkz8zWFxCN6s8nt8v/tLUcgb6aC9LLWde7/ZU
klqNg3/a6jkYMZ24diN+CpvS3M6uL/hhYupQ4eW+njrovfufaZrXILc5/d13
k9N3EX9RwXL9INzV94O+FIVPz00H0UV8/Bi/b+Z3yO0uudOZqdUQ1BLj1K5O
zWfi69a5PiCro9sXMlf7fqkZDhbNJrHNVbHF0DWes1W7/XcMVo81Fu9IZrXi
DOE0sZqRPnhNEouznV3/iWHEsoaiixOzaeyEuDUysT2wF2Qg6wzRoczOhLNp
SK6UWU1AbcCZc47UTp1Fse+bM+FsuiV21tggtlaSmG3iE9h7y8R8BWeMbbIe
zh4bxBa75xY7Sjxek3OQW/ycgyRmw9htM7cfbLK5z+eu+yVm2+gAujA7MV3F
prFdxmPrxGBymYmJxeZBwWwRmcjGxxD7KxLzPRczJ7H4ShwnBhB7yF2JDVe6
/BrPf8p9/+MT2xNEm3j9c+4RzJfh0/AV6Bi6zPmiewX3x+hwHc8biO+LEnsz
gGhjc9jeeN//VOELsOXUbA2bq3Q95vyRiWxyAmq3WxPLFeb6edxE7pkb0cZf
4IsmpKYP6BC6NNnzD3zEMD8v9kOORq5W5vkMPmmA7xdfOCuxtwpqLmovYghx
Y5n7I3LiCs8/yDeoOfbKPq4OlvvN8fmV7k/5R5nHAWILbxjkSPgUfMsK7iFY
DXCt+O0Sqw3wYfiyRaLFwWo4ajnq7dfUrnB95s65+0Nuzw96ftPf7wsbwpZW
ev5CPtUjtTiEfmOD2GKN6xNvEvhk7oi7muaxkbx4PrmPcOPcfDq+nZqA2uBj
r3cOi47HVq/wbRXsPYUcm1jMeZJ7v+32jI9oId6XXkdgs1083mEL6DuxiBqU
tw7eIKhNeVPZ7nUZtQ5vCPs9/yDf3uf1EjUjcf514R1ej1H34UPwJdQslant
gbrrsmB7w0fhq9gze8dn4jvxk+g/byD1EquRWQ81FrUWNRG1UZbbWTH/kmBE
G5mHNS53f8GZcDa8IVDLUtPytoBPq+/7LfUcgtg5N7HcAn1gT+yFWpYaep/X
yeQ2nA25IzkkZ/SGcN3Ean7ya97Mdrif5i2NNxDeQnjDqB/sjemb2OrT9n6H
nGWt3y1vFrxdsN7zPJayPmo8YiqyeevgfvkH+Sxvhrx7fJRZvsD7xo8a84H3
HfH1MhYd3+n5coNgOoIsZP4vszeyYmI2g+1Qh56KTWanYLpEXyePA9Sk6Bi6
Ra36E4JOfZ0=
                 "]], 
                Polygon[CompressedData["
1:eJwtlmlUVlUUhi8YJh9XLormkDiFmuSUDAqooQyKIijOOCCaaIpihppZ2eDq
V6tp9bfRLGtpow3aZKZm5YCkpuXQIIKIM2JmSs+7zv7xLN77nn3Od/a5Z+9L
tznlhUvCPc9bCxGwNOR5z4Xxt7nnlcNMnqfBfPQaeJaxcp7fDjzvfSak+J53
PdLz/oVl+M8zvoK45TCX51CM592LHgD9YBrxRTAQ7TPWEqIVQ+wASA+5sQCv
Av0C6z3K82p4gOe+0AeSoCteBHHFrDcM3R7dATpCFNyN1xv62+8Ox8uAEbAM
rwxvkUB3xesG3WEp3uN42ZAFqXgz8FLQrdCtIRZy4RG8VbASlhCTxr5SYbrF
xxCziOeFsBLW4hXirUC/SG5P8vwELCP+fhiPnqAY6ElcDyhA50MezCEmi7mZ
MB5m4CXaGdyHHg4Z0AXvLhiDHg05UELMed7TOdjE+9vK+7uBXu67fY1XPqy5
Gh6Dl9lfKf4zyo+YSMb7ovtAAky18ytT7rAYhhGTBnO1V5it90ZMb70PSIBJ
ePPw+mk96A/T8ObjtdV83Tv0Heh2kKg7AW1sLAO9wHe5D9DdgYHQB6bjFWlv
tl4T+d2C3eR7hHyjmTsbfwTjdxLfCeJgF+M74Qc4RFwGMReZdwE85mzDe4Wx
Op7PwKt2/y+ha6EG3sBbj5ekdwEH0L9AFXzP2A5bO4r12kOHkKsb1c86xnYz
1gzvY/QX6C3wNaSz1pd4p9E1WguG4l1lXgNsZOwzvMF476I3oweh/2PsJtTD
WdhgY43KC92TM+gFt8M44i/hXYTLEOg+4GXCceachBNwgLEhvjuPT9Bh7Dcc
rtqcQt/Vseq5AB2OV629Qw1M1HvFa0Rfg38C926q7KyOwnBi/tYY+jo0wRi8
qaw5Bcp0P60udddK0BP1XqEEkvGSIMXGdP9Uv4M0BwZbXaYoFrJD7j7ctP21
Q8dBJ7gRuH6ViE6GJOtNQ5kzBGZZ71G9xcMC/R6MtHpT/Y5VL0QXED/O7nGS
rZdud70z3jz0Qt/lqFy7QGcYi+cxVsVeRhKXA6PgYes5mdbPFqNL1avhHquz
UrxCnieEXH2ozvK1byi2OpqJVwyzrJfk2trlvutbi2y9KXiTddZWv+qTeg95
yhHyY1x+yrMo5Pqq+oH2V4F+CB60vruK8ZfoL0/z/BRU4P1oNar3/xP6Z6iE
3/B+hz8hi7FDeGfRI313PjqnYei9ePthH3wTuBqsRG9DfwfbVbPW91J91xfU
HzbjfWV19qlqSfUHn8MW+60c+91z6HqoM2+regZ6F2y3upwArcgpFlrDlcDV
R1t0G4i22jqPF4UOQXOrwQ/w/rA8P0R/BIfhEt5FOA+jfFfXqu8WIZej+otq
9Rh6L3of7A9cDTbTdxJugz2qK+Zdi3R9RnmnEZMPYYy31HfZ7lqItSNVG7au
aj8bXY0+A7WqWetrv6IPw0HrneoJ6g2Vlk8suq3uPsSHXF/QXib57jt+C90E
nr5bjHfXnQu5XqEanExcPHoU5CoX4qrJ4RS8xvg6fiORmDetB5+2HJVrsvoi
3g7YCesD945i7Oz1DhqUQ+ByUm4X7Jz1TR5n31B9S3vxu8fUuxiPY3+9IQFy
ibuCdxUadF+JCSc2DJpZD9C3W+d3ivEWPEfCQeJimB9AR7hsc/Ub6n3qgY0w
2ndn0MP+p9H/NucC9y3LRG8g5p0I18NOwHE4afvUXJ3Be+hNsBHeCtye9XtH
0EdVZ/C6neVf9m3RN6YW7xZeHvF1qofA3Rf1pFp7rg9cDe6xWlBNfIv3P95I
TZ8=
                 "]], 
                Polygon[{{4102, 4101, 3157, 1569, 1579, 3159}}]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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

                 "]], 
                Polygon[CompressedData["
1:eJxFmHlwltUVxt8X4X3hfl/1YtVWnXbGOm2nddppp2Onm522U6e1U9vRaV3r
giK1bthdq4JUWxEV2XdCSAgkBAiBBAIECIEIgbAHAoQdZJGiIAIVivT5eU6n
f5z57nPP/e57l3Oec8697qG+tz/VJUmS29Ik6arfHSFJWtQu5EnSEJNksXC9
8JksSSqFP5CckswrJsl8yWm1f6Wx7Rrzb43dIlmu9nmNnyFdVkiSbpIo6Vmw
OZjrrGS62rM0fqbG7xYeI/yO8FHJv9Q+Lsl7Jsnjmn+fxjToe8fU91PhVcL7
NO6s8N3CW4Q/FB4pvENzdUpGq71MfbOkOyQ8MdqaWfvlWssnC/aNn+n/61L7
9gDJaLVf1/g7pTsofEDyntq/0LiRapdJP0T6e9Q3VHMNkUxWu0wyRLJVug7J
ULWXaPw8jd8lPEy4q/bzsObpLemmdg+tYWNqfeguaPxW4QeFuwiXCVcJT9T/
H9D/Dwm3CV8rfbPwAsmX1b5Bsoh74RvMLZmv9jOSOv23XvKs2u/r/xv0//uk
/0j4iPBa4euE1wjvFH5L+FPCy6KNYez9kkTrmSx9pfQjNN990s30+1sk/Dfh
gZmdHWf4onSt6rsmt/WuVnuY+iZLN1hj7oq2J/Y2QTJOcnc0HWNe0tjx3j+K
OSX3Sl+p3yrJXMkejVmpsZ/R/G9Jt0JyVW7rb1F7tPTl0o/V2PvddvtItzc1
Oxgi/aTU5uc7D0Yby3+el3699EvU/qz+0yZd72hrZc2TJXXS10q/Se03pXtY
Uq52meQhxkpfIX2FcB/h30nWqt0m+a3avSST1B6vMcM1tntPs3lsfYGkQX1z
pdvPGI1tF24WPi08VXhQsP8yxyPCc4RrUvsG38InNwvflpuvlvh6Vkg/UHiE
3wfrfYzxkjs19i7JOfdHfONLwpuEV0k+p/YK9XVw9tHOhjNah+0Kv6a5BmXm
L23qWyzdMeEp0q2XfFH9X5CsVbsvc0rXKvl9NB+GS+AUfLtFeFFq/jxYeJpw
dWr3/xS2IzzBz/dx7l94ofB67FB4r+Rbmuvbkv1qvyBpkG6BpL9/D+74rvR7
hAvyxyAp6A6KkvHST5G+UeNflP5t4dXCt2v8TuEa55cW6V/y82b9N0rfKbw5
2l7Zc7vaXTT3NunvEN4hvE3yc7VvlWxXe67bU63m+4PwBj/v6yUb1f6HpEm6
ZZJ/4v8aX6fxK4VfEd4vvDS1b/LtHtrDk+wdny4Yj8Gft0hORLPfOdLN1///
Gs1mS922seVVzl8fCc+KJrQvSmpoB+MsuOoS54dpGr9B+j/ib8E4Bx65GG3M
I/p2R2r/pa9XbhzI2P8I3yO8W/hiMM6Guw9LSvx+F0gXNWaacNB8fTlL9XXX
/hrlM4skV6t9jeRCtDmZKymY0L5Uv5cVLIYQS7gfbJM7/RpcmNpdH3V+/HFu
MamKO87sTOB2hBhZ6bq3Jd/T2Jskh9Veg70whljg58FefyL9O9H2cCIzm2Vv
tdG4Gw7vIpnD+qW/ILlEeK5wBrdrfJPHSdZ2s+TdaLGK/XDH3PVEncUESVM0
Pv8THOHc+Wf4X/IDjf2h5KjaSyVX5Oaz+G6dfy+X9HB/Zk9LfOw650fsYabw
m86nr2KPmfkcvrdefdXkC9JvSo0j4Iot0fyCdRNr250f2AN9cDhcTkzaHYzv
+cWv90XjfMb8T0ff93OLCeATHu/Y3wHpOqLFS3Iccp3jwdbGGncxj98fMZZY
S3w8HOxeD3EXHp8574PROONGz3/gEnwaP04L5uucOWffGSy2Llf707nlSORK
S90uuCPuChvGlskP0p4Wc4m929VXVzT/wdfIqTK37wdyWxNrw+Zu8nzoWLAc
4Wq3Z/bDHn6Um02zt3XCn/fz2hssRl/r+2ff5AT0HfazIAbAQ/gFsYH29T4f
ffgQczIXvrXW+Q9O2hXsbG51/+eM4Miv5xaj4M55Hu/gt+fhC+dLckDi4nt+
X8QoYtUZ4V0eL077uTM3Mf6U83mn8KPCmf5/RcHOEk6EG887/8M58MRZj3dw
MtyMTbYKfyU3Wz3s+Rc2gk286/kHPoQvLdQdHUiNk+Cm3Z5PEYOwWe6Au/hO
brZWXrRYCsfD9aVFsw1yJnKnV4Snp8b5cH+98zU5Lrlui8e7c8LVws3BuAGf
xXc3eDxIhWfjLx5P4RS4hZyNvHBGsFwOO8U38BFyy20ev8mpyK22eP5xeW62
vFG4MTW+IvdcLtwgfFzzTxIeVrT4dES41P3nvPM8tntHtFyanPq5ouU3y9S+
VPNVRONgzusy4UaPj7PJNfSf1zxelXm++ELRfIPceU9qPtK1YDaE7ZBbEUOI
JZwRZ8V6m53nuucW0+AyOI3cb2WwM+Os4GPy/KOZ7bk1WMwlDpOnEYvJibhP
OBwuHxSt3qGGagyWk5zKLIbB91Mk5cHykn4uSzK7c3QvY2OZ5XTkdszBXNQX
b0Q7A3JPcgbOhrXgO/gQayLHIdfBZir5r/BQ4SbhzcHO9Bu55TScNTUMe2z1
uEWOeTKzO+Fuqj0eYUPYHjUeuWiz8xk1HbUdNjNa91Eebc7VHjeoUW7wequy
aDlhucfJNo9/xLmtfpY73SaxxYXRappunn9uD9b3TY8PjG3wMejgd2yeO+Uu
8QVsCttt9v0MiJYLkxNXB8vh/h6tLiW3o708sxqHPmIksYSYQl5DDKePNrH9
pNpfzS3GEevIceAjOO/9aDktXAVnnfP4BKfBZR+63OvzoyOm3+z8fjJYzvbL
3HJr4js1ZG/Pf8hb4Tj6Ps5hC2bzT3j86Or+QJuYcj5ajk+uD8fOKdr8t3g+
ViN8JhrXwrnESmIaHAu3fuDymP8f3YRodQo1MbXxuGh5w6Zg9oZge5/ITTcW
H9f5Lg2Wz8AZJfH/vtnkfIbPMpYaYLvnS9gfbwa8HezJbB7iBxwJN46KFnuv
9HiPHdG31/2DsR/XWJIrtfarCvZm0On2vTBYzU4dT45Hrke7w/15sfMDXHBA
fSOi+Sy+W+7583x8JLU3Ad4GqCmoLchRyVWxN2oHbBBbpKahtqHGfULtpyXt
mc0xPVjNTH08RviZor1RUG+XCvcPVjPMzIwj4QPme1IyNVjtRHua8wt9fKPS
+bd/0WowajE4+/Wi3ecRx/Db0GDfogamFqbmqnD/KXGfmeX3clD9r0ar76jZ
+P5Y519yevTYALZQzI1/yUl5q+DNglx1oP4zLrWanNr85WB7H+xvBVXB5uYb
1JLPRavVqNnGBTvvp3PLAfCHAdrTVHxdY34dLV8tER4u/Jtod0btU+7cPCrY
2VT620M/bEt4pOe3jON9hpoSDq8I9nbA+nl7oQaakdmbCbUR7zm056nvL8QO
ziS1GEgs5P2E3JkcmrcJ1shaJwq/4TEGXsfHuBtsgjPo67bCGwdnxZkNDnYG
nAXvA718PLZU7/k/bxC8RXAms4O9x4z39bJW3rhYG2t8tmi2S25DjoMNc2aj
fL2cJW8Oj0pqg8Ur3iQm+X30K9obyTaPR9SevCHVZFYzcj7B81++wbdYI7UK
e2TtzL0ms5qbb2AjnDVnXhosl6l3fyGnGe78AH+T33Dm3FWV76+P2y9vCGOC
1cC1Hk9Z338Byld6Tg==
                 "]], 
                Polygon[CompressedData["
1:eJw1lnlQV1UYhq+lmD9u9SMdNSvLlpn2fd+zfZvKxl1LzX2vZirLXQQVAcUF
hRSDFEQQoRQBTU1l0VwQ9xXJyg0XUlRQ7HnnfP3xzLz3/b5z7rnnfOec26rH
kDaDr/E8LxwaQGbQ8y6FeF6873mbAp63GZai+zb0vEfgYThLThV8iP4A3oPF
5AzHW0XbNLWBZTAd7zBeProQiuArvGy8JZABY2kbjbcDPRldQM4KiMXbhlcG
eyCaWBL+XJhAbIP6QA9EL0CPJj4IPRiGwhD40vqNIpaIrkD/CcdgCl4MHEAf
goMwjZwE+pwN8yEf7we8JeS14zs7QHuoxrs+lDb1PK8Tzx2hhvxw37X5jvgw
+B6m453Em4OeC0lwBN6kzRvQGjJ8l1dJ3mk4BeHkVNPnJ8T7wX7e5fPOw/jl
+hZ4BT+ddtPgOG3m4aXAzxBF20nQS8/EZqETybuBNo/DE7CC2CS8LTbPmu8o
vAl4RegSKIaJQfeOE+gLUA2T8GbjeVp/dJbmCWZo3aG/rcso363XOvR62Kj+
8GYqF+KtRmLxMmmXAbmw39ajDL0NKuBB3rUUr7d900itK/6PVmtaW61xufXX
x+pE7+uL7mdjrkc/DSEEfgm6elPdxdk86ts0l0fRU/GSbV5noWvwzsF51S9e
J4hFj7Pv1vePVp94K2EtRNBuLP4YaE8sWjWCl4oOMoYw7Su8GXg55GTDmoCr
G9XBQkiDdNufM612NUdT8KZCHIzDy8XLg+XwDV4M7EPvhd22j7S+hejxxCIg
UrWqGtTeV//QBS+VMSyASMtXHXymedC+0BoSiw+4/bsLbydst/3Wwb5zFPGp
mlt9P97v/8+Hxgv56MF8f6Mwz2tGfTcPdeuZaPOo/EXoneiPyMsi/xzP5+EA
3jN4adpjPFcG3Bl2lTZ1cNHm6mu8rehSyLQzZz9eG9p+Co/BAt/NwTTiiyEL
upKzlz73QAqxe8nbZXVQS/wKXNb48MbgpaMHBN0ZpbNqA5RAKQRou1I1Cq+h
X4WXbf+uwWuGbgpNYI7v8rS/F6FP0/5MwJ0br+OdQNfCZdvTN+I1hptgvvZd
0NWn6vSM1VUS3Eb8dmgJRdpD9k1b0aU6b827D+8BuN++V2fEZvqpgn91Tmu9
tSYwj9gd5BXjTdTZDN00B9q/Vh+qk854OTqj0N0tPtx3Z22C3TW6c3bDrTY+
jVl6HXo9FKoe4Ba8FtAc5pKzNui+XXNws3n78J5CPwmP2vrqHG+L3k1sj9YW
NsHdeMn6RvSWoDu7khlfCqTa3fKTfWeJzhTYCON15kNHOwOGkbOV5y3wh/V7
AP03+i/4x9Yvw/prhb4L7rT5S/BdnSxD58JyqISTcAret7u2se4B7oMBPPeH
XN/dPQV25qywe2sh3vM2B5qLQ3i12sPortAZslU/9HeI/rrx/Dl4PF8HDaFJ
qNufAfZnJrlvo9+Fd1SHQbcPtR8bkdfH/g+0D7UfLwTcfOu+rLLxn8W7AnVw
GMrhFLxl/ek/Yg3jXw2/6Yzy3XsVP0rsGByHkTACRgXdf4fy8tF5UGDnQqrv
/l80rvqMvwGEQFPGWsH3DsIfCHm+W6+Wtj/usXrQ+fIc+ll42vqbDw+h43Q3
hLj7aDXjXwXFAXcf6k5Rnu6rMvR22GHr8QLeS/AiHMQLYyzljKU3z710J4W6
c3yZ/SPpX+lb8uox7p7Ev4Duegc5Lcg9QtuPeR6q+9x369sFnYO+lnh9uIR3
EWospjWPZKwR0M7O8xj0VXQdeLyrh70jGn8yzAm4862tjUXxX31XI6qVODvn
e+ruJG8Esf8AmvSeJg==
                 "]], 
                
                Polygon[{{4286, 4285, 3226, 1803, 1813, 
                 3228}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0M0uA1EYgOFvpq2ZqdqwrI2kNgQ7liyVlrY7WxfQxl/8/1wCCTciXIUb
YVWJPZ4hmXfeNzlzvpwzc/ujwTCJiD18iHW+TyMesKmfuc+NPGISPV3nArs6
5ww7usZVdHWFU3R0kpcfRmzTTxaxxd/c5jfzN/iVX7Cmn/gRy/qIDzGv+9zD
rF4p1zGjp7iBuv5yh/I+B+an5X6u8DGfoKpP+Qw1fc4XmNCXfAVPXHvdZH/H
jlu+Q6ELQ6d5gRfR1B3uoqWHPMKSHjvIJ1b1e/L/f38B1Wsfog==
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0MkuA1AUgOGjNt00iKmlFl6DhHdoqZoS09KwYlkJC5a61OqkplfwIqw0
8RQSNr6bLv78f25uzj25iwdnpdORiNjEZybijmujEZe4111+5LdsxCt6+oWf
0dVP3EdH99IZ2rqTjJZu8UNCN7nJDW7wu/l17qd3cKuv+SrtoPd5Dxd6lVdw
ohe4iCP9Z+9fbOtvLnHO/DKP8RqP8wTW9SRPoaKneQYbepbzqOoCz2WH/zLP
RWzpH/MPOe/tAo71Ei/jXO/wLmr6y90BbvRHZvi//9jcK/I=
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0Mkug1EcxuG/VIxXYUfCVo0x1IqExK5ba+ONCNfQUtWKoS02rFoWJLVk
SSIx1dQb8CQWvzzv4ss5J1/P0triaktEpFVLRDxyuTViRW/2Jpuc6YxI6dee
5pR+7ElO6Nse55i+7FGO6NMe5pAadpIfHOQ7c85/4ja39GBvcF139gLndW0P
sF+Xdje7VLFfvftFRbvODPMdEVkWuMMiD7RrH/JIOfuYJ9qzSywrb1d4qn37
jOcq2M/OL7PN3e26sHvZpyt7lnOq2ze+vdW9XU38/98/eTE3Qw==
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0EsuA1AYQOFf0kpMmCE60SFDJkSLqgbxLhOaVGIBbEBYRTfCiKSbUIq0
HototfVIfI3ByTk3N/nvI316XjwbiIgj3CQiZiyOkxElLOgLXuWPoYh35PUb
v2JFN7mBnH7hZyzrJ65jST/yAxZ1jbN8zxmumD/LV3yJaX3CZaR1ljMY1yme
wIjuuWsXg/2zuI5fb6hyiwvmt3mNP3mdN9DRm7yFrt7mHfT0Lu/hS+9zEd/6
gA/xo2vmJ53Z4jaG9ag7jfXRczyPSX1r/w5T+jrx/79/g6cwpg==
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0Esuw1EUgPHTxF/ULpCwEaWtx8CAGBGDRid9oKJFJAy9HwtgRGIVklpI
1aP1XoJfY/Dl+25u7snJHVopz5VSEbGImyRi32G8PyKDQ13gK94djNjBpd7m
Bi50nbdwrje5hjO9wes41WtcxYmu8DGX+Yj3zD/gIq+ioXOcRVWP8SiKOs0D
WNZvdn3Fgn7kJmb1PWe4lY6Y4DZP8jO/INt7yx3kdJffkdcf/Ikp/cXfmNY/
/IsZ/WD+PD9xG0u6z05Jb389zCOo6Fv3d6jr6+T/f/8AU3sxzw==
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0DsvQ3Ecx+GfpU3QKuJSmzdAwhuRmqw2S72DBlG3MlRSd0YGiRrZGDWV
uIzul5mEN+A5MXzyfM8Z/vmfMzg5XSi2RMSEKqmIOw9D6YhhPdhj/ORAW0Re
H3Y/+/Ru97JHb3Y3u/RqdzKnF7uDWT3bGT6xnY+ccv49x1lQwx7liC6Tc5jT
uf3rfj86tW95oyO7zhMd2DXWWGqN2OAMNznLOW3Z8yxr217gonbsJS5r115h
RXv2Kte0bx87/5BNXqtuf/FbZ8l3uWtGF3bVu3VdJeel/v/vH3+LMrI=
               "]]}, {
              
              Line[{2, 487, 11, 500, 501, 20, 526, 527, 29, 560, 561, 38, 594,
                595, 47, 628, 629, 56, 662, 663, 65, 694, 74}], 
              
              Line[{1905, 485, 1922, 3268, 2845, 3269, 1940, 3291, 2853, 3290,
                1958, 3317, 2861, 3318, 1975, 3343, 2870, 3342, 1990, 3366, 
               2879, 3367, 2007, 3396, 2890, 3395, 2026, 3421, 2024, 2046}], 
              
              Line[{1907, 486, 1923, 504, 3271, 1941, 3294, 2854, 3295, 1959, 
               3321, 2864, 3320, 1976, 3345, 2873, 3346, 1991, 3371, 2882, 
               3370, 2008, 3398, 2893, 3399, 2027, 3423, 2028, 2047}], 
              
              Line[{1909, 2843, 3264, 1925, 2848, 3274, 3275, 1943, 3302, 
               2856, 3300, 1961, 3328, 2866, 3326, 1978, 608, 3351, 1993, 
               3376, 2885, 3379, 2010, 3406, 2896, 3404, 2030, 3429, 2034, 
               2049}], 
              
              Line[{1912, 2844, 3266, 1928, 2850, 3284, 3286, 1946, 3313, 
               2859, 3311, 1964, 3334, 2868, 3339, 1980, 2877, 3360, 3362, 
               1996, 3391, 2888, 3386, 2012, 3413, 2898, 3418, 2032, 3435, 
               2040, 2051}], 
              
              Line[{1914, 1921, 3270, 1930, 1939, 3292, 3293, 1949, 3288, 
               2862, 3319, 1967, 3315, 2871, 3344, 1982, 3341, 2881, 3369, 
               1998, 3364, 2891, 3397, 2015, 3422, 2900, 3394, 2036, 3420, 
               2907, 2053}], 
              
              Line[{1916, 1926, 3273, 1933, 3299, 2855, 3298, 1952, 3325, 
               2865, 3324, 1969, 3348, 2874, 3350, 1985, 3375, 2883, 3374, 
               2001, 3401, 2894, 3403, 2018, 3425, 2901, 3427, 2038, 3440, 
               2909, 2056}], 
              
              Line[{1918, 1931, 3278, 1935, 1950, 3305, 3307, 1954, 578, 3331,
                1971, 3356, 2876, 3355, 1987, 1999, 3381, 3383, 2003, 3411, 
               2897, 3410, 2021, 3431, 2903, 3433, 2042, 3442, 2910, 2058}], 
              
              Line[{1920, 3261, 2852, 1938, 1955, 3279, 3281, 1957, 3308, 
               2869, 3337, 1974, 620, 3332, 1989, 3357, 2889, 3389, 2006, 688,
                3390, 2023, 3417, 2905, 3438, 2045, 3444, 2912, 2060}], 
              
              Line[{2048, 2033, 3428, 2029, 2013, 3407, 3405, 2009, 3378, 
               3377, 2884, 1992, 609, 3352, 1977, 1965, 3329, 3327, 1960, 
               1947, 3303, 3301, 1942, 511, 3276, 1924, 1906, 3263, 1908}], 
              
              Line[{2050, 2039, 3434, 2031, 2019, 3414, 3412, 2011, 3385, 
               3384, 2887, 1995, 3361, 2878, 3358, 1979, 3338, 2867, 3333, 
               1963, 3310, 3309, 2858, 1945, 3285, 2851, 3282, 1927, 1910, 
               3265, 1911}], 
              
              Line[{2052, 2906, 3419, 2035, 3393, 3392, 2025, 2014, 2892, 
               3365, 3363, 1997, 3368, 2880, 3340, 1981, 2872, 3316, 3314, 
               1966, 2863, 3289, 3287, 1948, 529, 3267, 1929, 2846, 3262, 
               1913}], 
              
              Line[{2055, 2908, 3439, 2037, 2902, 3426, 3424, 2017, 2895, 
               3402, 3400, 2000, 3373, 3372, 1994, 1984, 2875, 3349, 3347, 
               1968, 3323, 3322, 1962, 1951, 3297, 3296, 1944, 1932, 2847, 
               3272, 1915}], 
              
              Line[{2057, 3441, 2054, 2041, 2904, 3432, 3430, 2020, 3409, 
               3408, 2016, 2002, 3382, 2886, 3380, 1986, 3354, 3353, 1983, 
               1970, 579, 3330, 1953, 3306, 2857, 3304, 1934, 2849, 3277, 
               1917}], 
              
              Line[{2059, 2911, 3443, 2044, 3437, 3436, 2043, 2022, 2899, 
               3416, 3415, 2005, 3388, 3387, 2004, 1988, 621, 3359, 1973, 
               3336, 3335, 1972, 1956, 3280, 2860, 3312, 1937, 3283, 1936, 
               1919}], 
              
              Line[{83, 725, 92, 738, 739, 101, 764, 765, 110, 798, 799, 119, 
               832, 833, 128, 866, 867, 137, 900, 901, 146, 932, 155}], 
              
              Line[{2061, 723, 2078, 3452, 2915, 3453, 2096, 3475, 2923, 3474,
                2114, 3501, 2931, 3502, 2131, 3527, 2940, 3526, 2146, 3550, 
               2949, 3551, 2163, 3580, 2960, 3579, 2182, 3605, 2180, 2202}], 
              
              Line[{2063, 724, 2079, 742, 3455, 2097, 3478, 2924, 3479, 2115, 
               3505, 2934, 3504, 2132, 3529, 2943, 3530, 2147, 3555, 2952, 
               3554, 2164, 3582, 2963, 3583, 2183, 3607, 2184, 2203}], 
              
              Line[{2065, 2913, 3448, 2081, 2918, 3458, 3459, 2099, 3486, 
               2926, 3484, 2117, 3512, 2936, 3510, 2134, 846, 3535, 2149, 
               3560, 2955, 3563, 2166, 3590, 2966, 3588, 2186, 3613, 2190, 
               2205}], 
              
              Line[{2068, 2914, 3450, 2084, 2920, 3468, 3470, 2102, 3497, 
               2929, 3495, 2120, 3518, 2938, 3523, 2136, 2947, 3544, 3546, 
               2152, 3575, 2958, 3570, 2168, 3597, 2968, 3602, 2188, 3619, 
               2196, 2207}], 
              
              Line[{2070, 2077, 3454, 2086, 2095, 3476, 3477, 2105, 3472, 
               2932, 3503, 2123, 3499, 2941, 3528, 2138, 3525, 2951, 3553, 
               2154, 3548, 2961, 3581, 2171, 3606, 2970, 3578, 2192, 3604, 
               2977, 2209}], 
              
              Line[{2072, 2082, 3457, 2089, 3483, 2925, 3482, 2108, 3509, 
               2935, 3508, 2125, 3532, 2944, 3534, 2141, 3559, 2953, 3558, 
               2157, 3585, 2964, 3587, 2174, 3609, 2971, 3611, 2194, 3624, 
               2979, 2212}], 
              
              Line[{2074, 2087, 3462, 2091, 2106, 3489, 3491, 2110, 816, 3515,
                2127, 3540, 2946, 3539, 2143, 2155, 3565, 3567, 2159, 3595, 
               2967, 3594, 2177, 3615, 2973, 3617, 2198, 3626, 2980, 2214}], 
              
              Line[{2076, 3445, 2922, 2094, 2111, 3463, 3465, 2113, 3492, 
               2939, 3521, 2130, 858, 3516, 2145, 3541, 2959, 3573, 2162, 926,
                3574, 2179, 3601, 2975, 3622, 2201, 3628, 2982, 2216}], 
              
              Line[{2204, 2189, 3612, 2185, 2169, 3591, 3589, 2165, 3562, 
               3561, 2954, 2148, 847, 3536, 2133, 2121, 3513, 3511, 2116, 
               2103, 3487, 3485, 2098, 749, 3460, 2080, 2062, 3447, 2064}], 
              
              Line[{2206, 2195, 3618, 2187, 2175, 3598, 3596, 2167, 3569, 
               3568, 2957, 2151, 3545, 2948, 3542, 2135, 3522, 2937, 3517, 
               2119, 3494, 3493, 2928, 2101, 3469, 2921, 3466, 2083, 2066, 
               3449, 2067}], 
              
              Line[{2208, 2976, 3603, 2191, 3577, 3576, 2181, 2170, 2962, 
               3549, 3547, 2153, 3552, 2950, 3524, 2137, 2942, 3500, 3498, 
               2122, 2933, 3473, 3471, 2104, 767, 3451, 2085, 2916, 3446, 
               2069}], 
              
              Line[{2211, 2978, 3623, 2193, 2972, 3610, 3608, 2173, 2965, 
               3586, 3584, 2156, 3557, 3556, 2150, 2140, 2945, 3533, 3531, 
               2124, 3507, 3506, 2118, 2107, 3481, 3480, 2100, 2088, 2917, 
               3456, 2071}], 
              Line[{2213, 3625, 2210, 2197, 2974, 3616, 3614, 2176, 3593, 
               3592, 2172, 2158, 3566, 2956, 3564, 2142, 3538, 3537, 2139, 
               2126, 817, 3514, 2109, 3490, 2927, 3488, 2090, 2919, 3461, 
               2073}], 
              
              Line[{2215, 2981, 3627, 2200, 3621, 3620, 2199, 2178, 2969, 
               3600, 3599, 2161, 3572, 3571, 2160, 2144, 859, 3543, 2129, 
               3520, 3519, 2128, 2112, 3464, 2930, 3496, 2093, 3467, 2092, 
               2075}], 
              
              Line[{164, 963, 173, 976, 977, 182, 1002, 1003, 191, 1036, 1037,
                200, 1070, 1071, 209, 1104, 1105, 218, 1138, 1139, 227, 1170, 
               236}], 
              
              Line[{2217, 961, 2234, 3636, 2985, 3637, 2252, 3659, 2993, 3658,
                2270, 3685, 3001, 3686, 2287, 3711, 3010, 3710, 2302, 3734, 
               3019, 3735, 2319, 3764, 3030, 3763, 2338, 3789, 2336, 2358}], 
              
              Line[{2219, 962, 2235, 980, 3639, 2253, 3662, 2994, 3663, 2271, 
               3689, 3004, 3688, 2288, 3713, 3013, 3714, 2303, 3739, 3022, 
               3738, 2320, 3766, 3033, 3767, 2339, 3791, 2340, 2359}], 
              
              Line[{2221, 2983, 3632, 2237, 2988, 3642, 3643, 2255, 3670, 
               2996, 3668, 2273, 3696, 3006, 3694, 2290, 1084, 3719, 2305, 
               3744, 3025, 3747, 2322, 3774, 3036, 3772, 2342, 3797, 2346, 
               2361}], 
              
              Line[{2224, 2984, 3634, 2240, 2990, 3652, 3654, 2258, 3681, 
               2999, 3679, 2276, 3702, 3008, 3707, 2292, 3017, 3728, 3730, 
               2308, 3759, 3028, 3754, 2324, 3781, 3038, 3786, 2344, 3803, 
               2352, 2363}], 
              
              Line[{2226, 2233, 3638, 2242, 2251, 3660, 3661, 2261, 3656, 
               3002, 3687, 2279, 3683, 3011, 3712, 2294, 3709, 3021, 3737, 
               2310, 3732, 3031, 3765, 2327, 3790, 3040, 3762, 2348, 3788, 
               3047, 2365}], 
              
              Line[{2228, 2238, 3641, 2245, 3667, 2995, 3666, 2264, 3693, 
               3005, 3692, 2281, 3716, 3014, 3718, 2297, 3743, 3023, 3742, 
               2313, 3769, 3034, 3771, 2330, 3793, 3041, 3795, 2350, 3808, 
               3049, 2368}], 
              
              Line[{2230, 2243, 3646, 2247, 2262, 3673, 3675, 2266, 1054, 
               3699, 2283, 3724, 3016, 3723, 2299, 2311, 3749, 3751, 2315, 
               3779, 3037, 3778, 2333, 3799, 3043, 3801, 2354, 3810, 3050, 
               2370}], 
              
              Line[{2232, 3629, 2992, 2250, 2267, 3647, 3649, 2269, 3676, 
               3009, 3705, 2286, 1096, 3700, 2301, 3725, 3029, 3757, 2318, 
               1164, 3758, 2335, 3785, 3045, 3806, 2357, 3812, 3052, 2372}], 
              
              Line[{2360, 2345, 3796, 2341, 2325, 3775, 3773, 2321, 3746, 
               3745, 3024, 2304, 1085, 3720, 2289, 2277, 3697, 3695, 2272, 
               2259, 3671, 3669, 2254, 987, 3644, 2236, 2218, 3631, 2220}], 
              
              Line[{2362, 2351, 3802, 2343, 2331, 3782, 3780, 2323, 3753, 
               3752, 3027, 2307, 3729, 3018, 3726, 2291, 3706, 3007, 3701, 
               2275, 3678, 3677, 2998, 2257, 3653, 2991, 3650, 2239, 2222, 
               3633, 2223}], 
              
              Line[{2364, 3046, 3787, 2347, 3761, 3760, 2337, 2326, 3032, 
               3733, 3731, 2309, 3736, 3020, 3708, 2293, 3012, 3684, 3682, 
               2278, 3003, 3657, 3655, 2260, 1005, 3635, 2241, 2986, 3630, 
               2225}], 
              
              Line[{2367, 3048, 3807, 2349, 3042, 3794, 3792, 2329, 3035, 
               3770, 3768, 2312, 3741, 3740, 2306, 2296, 3015, 3717, 3715, 
               2280, 3691, 3690, 2274, 2263, 3665, 3664, 2256, 2244, 2987, 
               3640, 2227}], 
              
              Line[{2369, 3809, 2366, 2353, 3044, 3800, 3798, 2332, 3777, 
               3776, 2328, 2314, 3750, 3026, 3748, 2298, 3722, 3721, 2295, 
               2282, 1055, 3698, 2265, 3674, 2997, 3672, 2246, 2989, 3645, 
               2229}], 
              
              Line[{2371, 3051, 3811, 2356, 3805, 3804, 2355, 2334, 3039, 
               3784, 3783, 2317, 3756, 3755, 2316, 2300, 1097, 3727, 2285, 
               3704, 3703, 2284, 2268, 3648, 3000, 3680, 2249, 3651, 2248, 
               2231}], 
              
              Line[{245, 1201, 254, 1214, 1215, 263, 1240, 1241, 272, 1274, 
               1275, 281, 1308, 1309, 290, 1342, 1343, 299, 1376, 1377, 308, 
               1408, 317}], 
              
              Line[{2373, 1199, 2390, 3820, 3055, 3821, 2408, 3843, 3063, 
               3842, 2426, 3869, 3071, 3870, 2443, 3895, 3080, 3894, 2458, 
               3918, 3089, 3919, 2475, 3948, 3100, 3947, 2494, 3973, 2492, 
               2514}], 
              
              Line[{2375, 1200, 2391, 1218, 3823, 2409, 3846, 3064, 3847, 
               2427, 3873, 3074, 3872, 2444, 3897, 3083, 3898, 2459, 3923, 
               3092, 3922, 2476, 3950, 3103, 3951, 2495, 3975, 2496, 2515}], 
              
              Line[{2377, 3053, 3816, 2393, 3058, 3826, 3827, 2411, 3854, 
               3066, 3852, 2429, 3880, 3076, 3878, 2446, 1322, 3903, 2461, 
               3928, 3095, 3931, 2478, 3958, 3106, 3956, 2498, 3981, 2502, 
               2517}], 
              
              Line[{2380, 3054, 3818, 2396, 3060, 3836, 3838, 2414, 3865, 
               3069, 3863, 2432, 3886, 3078, 3891, 2448, 3087, 3912, 3914, 
               2464, 3943, 3098, 3938, 2480, 3965, 3108, 3970, 2500, 3987, 
               2508, 2519}], 
              
              Line[{2382, 2389, 3822, 2398, 2407, 3844, 3845, 2417, 3840, 
               3072, 3871, 2435, 3867, 3081, 3896, 2450, 3893, 3091, 3921, 
               2466, 3916, 3101, 3949, 2483, 3974, 3110, 3946, 2504, 3972, 
               3117, 2521}], 
              
              Line[{2384, 2394, 3825, 2401, 3851, 3065, 3850, 2420, 3877, 
               3075, 3876, 2437, 3900, 3084, 3902, 2453, 3927, 3093, 3926, 
               2469, 3953, 3104, 3955, 2486, 3977, 3111, 3979, 2506, 3992, 
               3119, 2524}], 
              
              Line[{2386, 2399, 3830, 2403, 2418, 3857, 3859, 2422, 1292, 
               3883, 2439, 3908, 3086, 3907, 2455, 2467, 3933, 3935, 2471, 
               3963, 3107, 3962, 2489, 3983, 3113, 3985, 2510, 3994, 3120, 
               2526}], 
              
              Line[{2388, 3813, 3062, 2406, 2423, 3831, 3833, 2425, 3860, 
               3079, 3889, 2442, 1334, 3884, 2457, 3909, 3099, 3941, 2474, 
               1402, 3942, 2491, 3969, 3115, 3990, 2513, 3996, 3122, 2528}], 
              
              Line[{2516, 2501, 3980, 2497, 2481, 3959, 3957, 2477, 3930, 
               3929, 3094, 2460, 1323, 3904, 2445, 2433, 3881, 3879, 2428, 
               2415, 3855, 3853, 2410, 1225, 3828, 2392, 2374, 3815, 2376}], 
              
              Line[{2518, 2507, 3986, 2499, 2487, 3966, 3964, 2479, 3937, 
               3936, 3097, 2463, 3913, 3088, 3910, 2447, 3890, 3077, 3885, 
               2431, 3862, 3861, 3068, 2413, 3837, 3061, 3834, 2395, 2378, 
               3817, 2379}], 
              Line[{2520, 3116, 3971, 2503, 3945, 3944, 2493, 2482, 3102, 
               3917, 3915, 2465, 3920, 3090, 3892, 2449, 3082, 3868, 3866, 
               2434, 3073, 3841, 3839, 2416, 1243, 3819, 2397, 3056, 3814, 
               2381}], 
              
              Line[{2523, 3118, 3991, 2505, 3112, 3978, 3976, 2485, 3105, 
               3954, 3952, 2468, 3925, 3924, 2462, 2452, 3085, 3901, 3899, 
               2436, 3875, 3874, 2430, 2419, 3849, 3848, 2412, 2400, 3057, 
               3824, 2383}], 
              
              Line[{2525, 3993, 2522, 2509, 3114, 3984, 3982, 2488, 3961, 
               3960, 2484, 2470, 3934, 3096, 3932, 2454, 3906, 3905, 2451, 
               2438, 1293, 3882, 2421, 3858, 3067, 3856, 2402, 3059, 3829, 
               2385}], 
              
              Line[{2527, 3121, 3995, 2512, 3989, 3988, 2511, 2490, 3109, 
               3968, 3967, 2473, 3940, 3939, 2472, 2456, 1335, 3911, 2441, 
               3888, 3887, 2440, 2424, 3832, 3070, 3864, 2405, 3835, 2404, 
               2387}], 
              
              Line[{326, 1439, 335, 1452, 1453, 344, 1478, 1479, 353, 1512, 
               1513, 362, 1546, 1547, 370, 1576, 1577, 379, 1610, 1611, 388, 
               1642, 397}], 
              
              Line[{2529, 1437, 2546, 4004, 3125, 4005, 2564, 4027, 3133, 
               4026, 2582, 4051, 3141, 4052, 2599, 4079, 3152, 4078, 2615, 
               4077, 3158, 4100, 2632, 4132, 3169, 4131, 2651, 4157, 2649, 
               2671}], 
              
              Line[{2531, 1438, 2547, 1456, 4007, 2565, 4030, 3134, 4031, 
               2583, 4055, 3144, 4054, 2600, 4083, 3155, 4084, 2616, 4107, 
               3161, 4106, 2633, 4134, 3172, 4135, 2652, 4159, 2653, 2672}], 
              
              Line[{2533, 3123, 4000, 2549, 3128, 4010, 4011, 2567, 4038, 
               3136, 4036, 2585, 4062, 3146, 4060, 2602, 1560, 4089, 2618, 
               4112, 3164, 4115, 2635, 4142, 3175, 4140, 2655, 4165, 2659, 
               2674}], 
              
              Line[{2536, 3124, 4002, 2552, 3130, 4020, 4022, 2570, 4049, 
               3139, 4047, 2588, 4068, 3148, 4074, 2605, 4101, 3157, 4096, 
               2621, 4127, 3167, 4122, 2637, 4149, 3177, 4154, 2657, 4171, 
               2665, 2676}], 
              
              Line[{2538, 2545, 4006, 2554, 2563, 4028, 4029, 2573, 4024, 
               3142, 4053, 2591, 4050, 3150, 4076, 2607, 4103, 3160, 4105, 
               2623, 4098, 3170, 4133, 2640, 4158, 3179, 4130, 2661, 4156, 
               3186, 2678}], 
              
              Line[{2540, 2550, 4009, 2557, 4035, 3135, 4034, 2576, 4059, 
               3145, 4058, 2593, 4081, 3153, 4085, 2609, 4111, 3162, 4110, 
               2626, 4137, 3173, 4139, 2643, 4161, 3180, 4163, 2663, 4176, 
               3188, 2681}], 
              
              Line[{2542, 2555, 4014, 2559, 2574, 4041, 4043, 2578, 1530, 
               4065, 2595, 4091, 3156, 4088, 2611, 2624, 4117, 4119, 2628, 
               4147, 3176, 4146, 2646, 4167, 3182, 4169, 2667, 4178, 3189, 
               2683}], 
              
              Line[{2544, 3997, 3132, 2562, 2579, 4015, 4017, 2581, 4044, 
               3151, 4071, 2598, 1566, 4066, 2614, 4093, 3168, 4125, 2631, 
               1636, 4126, 2648, 4153, 3184, 4174, 2670, 4180, 3191, 2685}], 
              
              Line[{2673, 2658, 4164, 2654, 2638, 4143, 4141, 2634, 4114, 
               4113, 3163, 2617, 1561, 4090, 2601, 2589, 4063, 4061, 2584, 
               2571, 4039, 4037, 2566, 1463, 4012, 2548, 2530, 3999, 2532}], 
              
              Line[{2675, 2664, 4170, 2656, 2644, 4150, 4148, 2636, 4121, 
               4120, 3166, 2620, 4095, 4094, 2612, 2604, 4073, 3147, 4067, 
               2587, 4046, 4045, 3138, 2569, 4021, 3131, 4018, 2551, 2534, 
               4001, 2535}], 
              
              Line[{2677, 3185, 4155, 2660, 4129, 4128, 2650, 2639, 3171, 
               4099, 4097, 2622, 4104, 3159, 4102, 2606, 4075, 4072, 3149, 
               2590, 3143, 4025, 4023, 2572, 1481, 4003, 2553, 3126, 3998, 
               2537}], 
              
              Line[{2680, 3187, 4175, 2662, 3181, 4162, 4160, 2642, 3174, 
               4138, 4136, 2625, 4109, 4108, 2619, 2608, 3154, 4082, 4080, 
               2592, 4057, 4056, 2586, 2575, 4033, 4032, 2568, 2556, 3127, 
               4008, 2539}], 
              
              Line[{2682, 4177, 2679, 2666, 3183, 4168, 4166, 2645, 4145, 
               4144, 2641, 2627, 4118, 3165, 4116, 2610, 4087, 4086, 2603, 
               2594, 1531, 4064, 2577, 4042, 3137, 4040, 2558, 3129, 4013, 
               2541}], 
              
              Line[{2684, 3190, 4179, 2669, 4173, 4172, 2668, 2647, 3178, 
               4152, 4151, 2630, 4124, 4123, 2629, 2613, 1567, 4092, 2597, 
               4070, 4069, 2596, 2580, 4016, 3140, 4048, 2561, 4019, 2560, 
               2543}], 
              
              Line[{406, 1673, 415, 1686, 1687, 424, 1712, 1713, 433, 1746, 
               1747, 442, 1780, 1781, 450, 1810, 1811, 459, 1844, 1845, 468, 
               1876, 477}], 
              
              Line[{2686, 1671, 2703, 4188, 3194, 4189, 2721, 4211, 3202, 
               4210, 2739, 4235, 3210, 4236, 2756, 4263, 3221, 4262, 2772, 
               4261, 3227, 4284, 2789, 4316, 3238, 4315, 2808, 4341, 2806, 
               2828}], 
              
              Line[{2688, 1672, 2704, 1690, 4191, 2722, 4214, 3203, 4215, 
               2740, 4239, 3213, 4238, 2757, 4267, 3224, 4268, 2773, 4291, 
               3230, 4290, 2790, 4318, 3241, 4319, 2809, 4343, 2810, 2829}], 
              
              Line[{2690, 3192, 4184, 2706, 3197, 4194, 4195, 2724, 4222, 
               3205, 4220, 2742, 4246, 3215, 4244, 2759, 1794, 4273, 2775, 
               4296, 3233, 4299, 2792, 4326, 3244, 4324, 2812, 4349, 2816, 
               2831}], 
              
              Line[{2693, 3193, 4186, 2709, 3199, 4204, 4206, 2727, 4233, 
               3208, 4231, 2745, 4252, 3217, 4258, 2762, 4285, 3226, 4280, 
               2778, 4311, 3236, 4306, 2794, 4333, 3246, 4338, 2814, 4355, 
               2822, 2833}], 
              
              Line[{2695, 2702, 4190, 2711, 2720, 4212, 4213, 2730, 4208, 
               3211, 4237, 2748, 4234, 3219, 4260, 2764, 4287, 3229, 4289, 
               2780, 4282, 3239, 4317, 2797, 4342, 3248, 4314, 2818, 4340, 
               3255, 2835}], 
              
              Line[{2697, 2707, 4193, 2714, 4219, 3204, 4218, 2733, 4243, 
               3214, 4242, 2750, 4265, 3222, 4269, 2766, 4295, 3231, 4294, 
               2783, 4321, 3242, 4323, 2800, 4345, 3249, 4347, 2820, 4360, 
               3257, 2838}], 
              
              Line[{2699, 2712, 4198, 2716, 2731, 4225, 4227, 2735, 1764, 
               4249, 2752, 4275, 3225, 4272, 2768, 2781, 4301, 4303, 2785, 
               4331, 3245, 4330, 2803, 4351, 3251, 4353, 2824, 4362, 3258, 
               2840}], 
              
              Line[{2701, 4181, 3201, 2719, 2736, 4199, 4201, 2738, 4228, 
               3220, 4255, 2755, 1800, 4250, 2771, 4277, 3237, 4309, 2788, 
               1870, 4310, 2805, 4337, 3253, 4358, 2827, 4364, 3260, 2842}], 
              
              Line[{2830, 2815, 4348, 2811, 2795, 4327, 4325, 2791, 4298, 
               4297, 3232, 2774, 1795, 4274, 2758, 2746, 4247, 4245, 2741, 
               2728, 4223, 4221, 2723, 1697, 4196, 2705, 2687, 4183, 2689}], 
              
              Line[{2832, 2821, 4354, 2813, 2801, 4334, 4332, 2793, 4305, 
               4304, 3235, 2777, 4279, 4278, 2769, 2761, 4257, 3216, 4251, 
               2744, 4230, 4229, 3207, 2726, 4205, 3200, 4202, 2708, 2691, 
               4185, 2692}], 
              
              Line[{2834, 3254, 4339, 2817, 4313, 4312, 2807, 2796, 3240, 
               4283, 4281, 2779, 4288, 3228, 4286, 2763, 4259, 4256, 3218, 
               2747, 3212, 4209, 4207, 2729, 1715, 4187, 2710, 3195, 4182, 
               2694}], 
              
              Line[{2837, 3256, 4359, 2819, 3250, 4346, 4344, 2799, 3243, 
               4322, 4320, 2782, 4293, 4292, 2776, 2765, 3223, 4266, 4264, 
               2749, 4241, 4240, 2743, 2732, 4217, 4216, 2725, 2713, 3196, 
               4192, 2696}], 
              
              Line[{2839, 4361, 2836, 2823, 3252, 4352, 4350, 2802, 4329, 
               4328, 2798, 2784, 4302, 3234, 4300, 2767, 4271, 4270, 2760, 
               2751, 1765, 4248, 2734, 4226, 3206, 4224, 2715, 3198, 4197, 
               2698}], 
              
              Line[{2841, 3259, 4363, 2826, 4357, 4356, 2825, 2804, 3247, 
               4336, 4335, 2787, 4308, 4307, 2786, 2770, 1801, 4276, 2754, 
               4254, 4253, 2753, 2737, 4200, 3209, 4232, 2718, 4203, 2717, 
               2700}]}, {
              
              Line[{489, 3390, 689, 3416, 683, 681, 3410, 3409, 675, 3403, 
               673, 3402, 667, 3397, 665, 3365, 653, 651, 3386, 3385, 645, 
               643, 3379, 3378, 637, 3370, 635, 629, 625, 3367, 661}], 
              
              Line[{496, 655, 3389, 3388, 649, 3383, 3382, 647, 641, 639, 
               3374, 3373, 633, 3369, 3368, 631, 619, 3362, 3361, 617, 611, 
               3351, 609, 603, 601, 3346, 595, 3342, 591, 627}], 
              
              Line[{499, 485, 487, 486, 490, 3263, 491, 3264, 492, 3265, 493, 
               3266, 494, 3262, 502, 3270, 503, 3272, 508, 3273, 509, 3277, 
               514, 3278, 515, 3283, 520, 3261, 521}], 
              Line[{18, 1938, 1937, 17, 1935, 1934, 16, 1933, 1932, 15, 1930, 
               1929, 14, 1928, 1927, 13, 1925, 1924, 12, 1923, 11, 1922, 10}], 
              
              Line[{524, 497, 3268, 500, 504, 506, 3276, 510, 3274, 512, 3282,
                516, 3284, 518, 3267, 528, 3292, 530, 3296, 536, 3299, 538, 
               3304, 544, 3305, 546, 3312, 552, 3279, 554}], 
              
              Line[{555, 3281, 3280, 553, 547, 3307, 3306, 545, 539, 537, 
               3298, 3297, 531, 3293, 529, 519, 3286, 3285, 517, 513, 3275, 
               511, 507, 3271, 505, 501, 498, 3269, 525}], 
              
              Line[{558, 3291, 522, 526, 532, 3294, 534, 3301, 3302, 540, 542,
                3309, 548, 3313, 550, 3287, 3288, 562, 564, 3322, 570, 3325, 
               572, 3330, 578, 580, 3335, 586, 3308, 588}], 
              
              Line[{589, 587, 3337, 3336, 581, 3331, 579, 573, 571, 3324, 
               3323, 565, 3319, 563, 3289, 551, 549, 3311, 3310, 543, 3300, 
               541, 3303, 535, 533, 3295, 527, 3290, 523, 559}], 
              
              Line[{592, 556, 3317, 560, 3321, 566, 568, 3327, 3328, 574, 576,
                3333, 3334, 582, 584, 3314, 3315, 596, 598, 3347, 3348, 604, 
               606, 3353, 612, 3356, 614, 3359, 620, 622}], 
              
              Line[{623, 3332, 621, 615, 613, 3355, 3354, 607, 3350, 605, 
               3349, 599, 3344, 597, 3316, 585, 3339, 3338, 583, 577, 3326, 
               575, 3329, 569, 3320, 567, 561, 557, 3318, 593}], 
              
              Line[{626, 3343, 590, 594, 600, 3345, 602, 3352, 608, 610, 3358,
                616, 3360, 618, 3340, 3341, 630, 632, 3372, 638, 3375, 640, 
               3380, 646, 3381, 648, 3387, 654, 3357, 495}], 
              
              Line[{657, 714, 3438, 3437, 710, 3433, 708, 3432, 704, 3427, 
               702, 3426, 698, 696, 3394, 3393, 687, 3418, 685, 3414, 679, 
               3404, 677, 3407, 671, 669, 3399, 663, 3395, 659, 693}], 
              
              Line[{660, 624, 3366, 628, 3371, 634, 636, 3377, 642, 3376, 644,
                3384, 650, 3391, 652, 3363, 3364, 664, 666, 3400, 3401, 672, 
               674, 3408, 680, 3411, 682, 3415, 688, 488}], 
              
              Line[{690, 722, 3444, 3443, 721, 3442, 720, 3441, 719, 718, 
               3440, 3439, 717, 716, 3420, 3419, 712, 711, 3435, 3434, 706, 
               705, 3429, 3428, 700, 699, 3423, 694, 3421, 691, 715}], 
              
              Line[{692, 3396, 658, 662, 668, 3398, 670, 3405, 3406, 676, 678,
                3412, 3413, 684, 686, 3392, 695, 3422, 697, 3424, 3425, 701, 
               703, 3430, 3431, 707, 709, 3436, 713, 3417, 656}], 
              
              Line[{727, 3574, 927, 3600, 921, 919, 3594, 3593, 913, 3587, 
               911, 3586, 905, 3581, 903, 3549, 891, 889, 3570, 3569, 883, 
               881, 3563, 3562, 875, 3554, 873, 867, 863, 3551, 899}], 
              
              Line[{734, 893, 3573, 3572, 887, 3567, 3566, 885, 879, 877, 
               3558, 3557, 871, 3553, 3552, 869, 857, 3546, 3545, 855, 849, 
               3535, 847, 841, 839, 3530, 833, 3526, 829, 865}], 
              
              Line[{737, 723, 725, 724, 728, 3447, 729, 3448, 730, 3449, 731, 
               3450, 732, 3446, 740, 3454, 741, 3456, 746, 3457, 747, 3461, 
               752, 3462, 753, 3467, 758, 3445, 759}], 
              
              Line[{99, 2094, 2093, 98, 2091, 2090, 97, 2089, 2088, 96, 2086, 
               2085, 95, 2084, 2083, 94, 2081, 2080, 93, 2079, 92, 2078, 91}], 
              
              Line[{762, 735, 3452, 738, 742, 744, 3460, 748, 3458, 750, 3466,
                754, 3468, 756, 3451, 766, 3476, 768, 3480, 774, 3483, 776, 
               3488, 782, 3489, 784, 3496, 790, 3463, 792}], 
              
              Line[{793, 3465, 3464, 791, 785, 3491, 3490, 783, 777, 775, 
               3482, 3481, 769, 3477, 767, 757, 3470, 3469, 755, 751, 3459, 
               749, 745, 3455, 743, 739, 736, 3453, 763}], 
              
              Line[{796, 3475, 760, 764, 770, 3478, 772, 3485, 3486, 778, 780,
                3493, 786, 3497, 788, 3471, 3472, 800, 802, 3506, 808, 3509, 
               810, 3514, 816, 818, 3519, 824, 3492, 826}], 
              
              Line[{827, 825, 3521, 3520, 819, 3515, 817, 811, 809, 3508, 
               3507, 803, 3503, 801, 3473, 789, 787, 3495, 3494, 781, 3484, 
               779, 3487, 773, 771, 3479, 765, 3474, 761, 797}], 
              
              Line[{830, 794, 3501, 798, 3505, 804, 806, 3511, 3512, 812, 814,
                3517, 3518, 820, 822, 3498, 3499, 834, 836, 3531, 3532, 842, 
               844, 3537, 850, 3540, 852, 3543, 858, 860}], 
              
              Line[{861, 3516, 859, 853, 851, 3539, 3538, 845, 3534, 843, 
               3533, 837, 3528, 835, 3500, 823, 3523, 3522, 821, 815, 3510, 
               813, 3513, 807, 3504, 805, 799, 795, 3502, 831}], 
              
              Line[{864, 3527, 828, 832, 838, 3529, 840, 3536, 846, 848, 3542,
                854, 3544, 856, 3524, 3525, 868, 870, 3556, 876, 3559, 878, 
               3564, 884, 3565, 886, 3571, 892, 3541, 733}], 
              
              Line[{895, 952, 3622, 3621, 948, 3617, 946, 3616, 942, 3611, 
               940, 3610, 936, 934, 3578, 3577, 925, 3602, 923, 3598, 917, 
               3588, 915, 3591, 909, 907, 3583, 901, 3579, 897, 931}], 
              
              Line[{898, 862, 3550, 866, 3555, 872, 874, 3561, 880, 3560, 882,
                3568, 888, 3575, 890, 3547, 3548, 902, 904, 3584, 3585, 910, 
               912, 3592, 918, 3595, 920, 3599, 926, 726}], 
              
              Line[{928, 960, 3628, 3627, 959, 3626, 958, 3625, 957, 956, 
               3624, 3623, 955, 954, 3604, 3603, 950, 949, 3619, 3618, 944, 
               943, 3613, 3612, 938, 937, 3607, 932, 3605, 929, 953}], 
              
              Line[{930, 3580, 896, 900, 906, 3582, 908, 3589, 3590, 914, 916,
                3596, 3597, 922, 924, 3576, 933, 3606, 935, 3608, 3609, 939, 
               941, 3614, 3615, 945, 947, 3620, 951, 3601, 894}], 
              
              Line[{965, 3758, 1165, 3784, 1159, 1157, 3778, 3777, 1151, 3771,
                1149, 3770, 1143, 3765, 1141, 3733, 1129, 1127, 3754, 3753, 
               1121, 1119, 3747, 3746, 1113, 3738, 1111, 1105, 1101, 3735, 
               1137}], 
              
              Line[{972, 1131, 3757, 3756, 1125, 3751, 3750, 1123, 1117, 1115,
                3742, 3741, 1109, 3737, 3736, 1107, 1095, 3730, 3729, 1093, 
               1087, 3719, 1085, 1079, 1077, 3714, 1071, 3710, 1067, 1103}], 
              
              Line[{975, 961, 963, 962, 966, 3631, 967, 3632, 968, 3633, 969, 
               3634, 970, 3630, 978, 3638, 979, 3640, 984, 3641, 985, 3645, 
               990, 3646, 991, 3651, 996, 3629, 997}], 
              
              Line[{180, 2250, 2249, 179, 2247, 2246, 178, 2245, 2244, 177, 
               2242, 2241, 176, 2240, 2239, 175, 2237, 2236, 174, 2235, 173, 
               2234, 172}], 
              
              Line[{1000, 973, 3636, 976, 980, 982, 3644, 986, 3642, 988, 
               3650, 992, 3652, 994, 3635, 1004, 3660, 1006, 3664, 1012, 3667,
                1014, 3672, 1020, 3673, 1022, 3680, 1028, 3647, 1030}], 
              
              Line[{1031, 3649, 3648, 1029, 1023, 3675, 3674, 1021, 1015, 
               1013, 3666, 3665, 1007, 3661, 1005, 995, 3654, 3653, 993, 989, 
               3643, 987, 983, 3639, 981, 977, 974, 3637, 1001}], 
              
              Line[{1034, 3659, 998, 1002, 1008, 3662, 1010, 3669, 3670, 1016,
                1018, 3677, 1024, 3681, 1026, 3655, 3656, 1038, 1040, 3690, 
               1046, 3693, 1048, 3698, 1054, 1056, 3703, 1062, 3676, 1064}], 
              
              Line[{1065, 1063, 3705, 3704, 1057, 3699, 1055, 1049, 1047, 
               3692, 3691, 1041, 3687, 1039, 3657, 1027, 1025, 3679, 3678, 
               1019, 3668, 1017, 3671, 1011, 1009, 3663, 1003, 3658, 999, 
               1035}], 
              
              Line[{1068, 1032, 3685, 1036, 3689, 1042, 1044, 3695, 3696, 
               1050, 1052, 3701, 3702, 1058, 1060, 3682, 3683, 1072, 1074, 
               3715, 3716, 1080, 1082, 3721, 1088, 3724, 1090, 3727, 1096, 
               1098}], 
              
              Line[{1099, 3700, 1097, 1091, 1089, 3723, 3722, 1083, 3718, 
               1081, 3717, 1075, 3712, 1073, 3684, 1061, 3707, 3706, 1059, 
               1053, 3694, 1051, 3697, 1045, 3688, 1043, 1037, 1033, 3686, 
               1069}], 
              
              Line[{1102, 3711, 1066, 1070, 1076, 3713, 1078, 3720, 1084, 
               1086, 3726, 1092, 3728, 1094, 3708, 3709, 1106, 1108, 3740, 
               1114, 3743, 1116, 3748, 1122, 3749, 1124, 3755, 1130, 3725, 
               971}], 
              
              Line[{1133, 1190, 3806, 3805, 1186, 3801, 1184, 3800, 1180, 
               3795, 1178, 3794, 1174, 1172, 3762, 3761, 1163, 3786, 1161, 
               3782, 1155, 3772, 1153, 3775, 1147, 1145, 3767, 1139, 3763, 
               1135, 1169}], 
              
              Line[{1136, 1100, 3734, 1104, 3739, 1110, 1112, 3745, 1118, 
               3744, 1120, 3752, 1126, 3759, 1128, 3731, 3732, 1140, 1142, 
               3768, 3769, 1148, 1150, 3776, 1156, 3779, 1158, 3783, 1164, 
               964}], 
              
              Line[{1166, 1198, 3812, 3811, 1197, 3810, 1196, 3809, 1195, 
               1194, 3808, 3807, 1193, 1192, 3788, 3787, 1188, 1187, 3803, 
               3802, 1182, 1181, 3797, 3796, 1176, 1175, 3791, 1170, 3789, 
               1167, 1191}], 
              
              Line[{1168, 3764, 1134, 1138, 1144, 3766, 1146, 3773, 3774, 
               1152, 1154, 3780, 3781, 1160, 1162, 3760, 1171, 3790, 1173, 
               3792, 3793, 1177, 1179, 3798, 3799, 1183, 1185, 3804, 1189, 
               3785, 1132}], 
              
              Line[{1203, 3942, 1403, 3968, 1397, 1395, 3962, 3961, 1389, 
               3955, 1387, 3954, 1381, 3949, 1379, 3917, 1367, 1365, 3938, 
               3937, 1359, 1357, 3931, 3930, 1351, 3922, 1349, 1343, 1339, 
               3919, 1375}], 
              
              Line[{1210, 1369, 3941, 3940, 1363, 3935, 3934, 1361, 1355, 
               1353, 3926, 3925, 1347, 3921, 3920, 1345, 1333, 3914, 3913, 
               1331, 1325, 3903, 1323, 1317, 1315, 3898, 1309, 3894, 1305, 
               1341}], 
              
              Line[{1213, 1199, 1201, 1200, 1204, 3815, 1205, 3816, 1206, 
               3817, 1207, 3818, 1208, 3814, 1216, 3822, 1217, 3824, 1222, 
               3825, 1223, 3829, 1228, 3830, 1229, 3835, 1234, 3813, 1235}], 
              
              Line[{261, 2406, 2405, 260, 2403, 2402, 259, 2401, 2400, 258, 
               2398, 2397, 257, 2396, 2395, 256, 2393, 2392, 255, 2391, 254, 
               2390, 253}], 
              
              Line[{1238, 1211, 3820, 1214, 1218, 1220, 3828, 1224, 3826, 
               1226, 3834, 1230, 3836, 1232, 3819, 1242, 3844, 1244, 3848, 
               1250, 3851, 1252, 3856, 1258, 3857, 1260, 3864, 1266, 3831, 
               1268}], 
              
              Line[{1269, 3833, 3832, 1267, 1261, 3859, 3858, 1259, 1253, 
               1251, 3850, 3849, 1245, 3845, 1243, 1233, 3838, 3837, 1231, 
               1227, 3827, 1225, 1221, 3823, 1219, 1215, 1212, 3821, 1239}], 
              
              Line[{1272, 3843, 1236, 1240, 1246, 3846, 1248, 3853, 3854, 
               1254, 1256, 3861, 1262, 3865, 1264, 3839, 3840, 1276, 1278, 
               3874, 1284, 3877, 1286, 3882, 1292, 1294, 3887, 1300, 3860, 
               1302}], 
              
              Line[{1303, 1301, 3889, 3888, 1295, 3883, 1293, 1287, 1285, 
               3876, 3875, 1279, 3871, 1277, 3841, 1265, 1263, 3863, 3862, 
               1257, 3852, 1255, 3855, 1249, 1247, 3847, 1241, 3842, 1237, 
               1273}], 
              
              Line[{1306, 1270, 3869, 1274, 3873, 1280, 1282, 3879, 3880, 
               1288, 1290, 3885, 3886, 1296, 1298, 3866, 3867, 1310, 1312, 
               3899, 3900, 1318, 1320, 3905, 1326, 3908, 1328, 3911, 1334, 
               1336}], 
              
              Line[{1337, 3884, 1335, 1329, 1327, 3907, 3906, 1321, 3902, 
               1319, 3901, 1313, 3896, 1311, 3868, 1299, 3891, 3890, 1297, 
               1291, 3878, 1289, 3881, 1283, 3872, 1281, 1275, 1271, 3870, 
               1307}], 
              
              Line[{1340, 3895, 1304, 1308, 1314, 3897, 1316, 3904, 1322, 
               1324, 3910, 1330, 3912, 1332, 3892, 3893, 1344, 1346, 3924, 
               1352, 3927, 1354, 3932, 1360, 3933, 1362, 3939, 1368, 3909, 
               1209}], 
              
              Line[{1371, 1428, 3990, 3989, 1424, 3985, 1422, 3984, 1418, 
               3979, 1416, 3978, 1412, 1410, 3946, 3945, 1401, 3970, 1399, 
               3966, 1393, 3956, 1391, 3959, 1385, 1383, 3951, 1377, 3947, 
               1373, 1407}], 
              
              Line[{1374, 1338, 3918, 1342, 3923, 1348, 1350, 3929, 1356, 
               3928, 1358, 3936, 1364, 3943, 1366, 3915, 3916, 1378, 1380, 
               3952, 3953, 1386, 1388, 3960, 1394, 3963, 1396, 3967, 1402, 
               1202}], 
              
              Line[{1404, 1436, 3996, 3995, 1435, 3994, 1434, 3993, 1433, 
               1432, 3992, 3991, 1431, 1430, 3972, 3971, 1426, 1425, 3987, 
               3986, 1420, 1419, 3981, 3980, 1414, 1413, 3975, 1408, 3973, 
               1405, 1429}], 
              
              Line[{1406, 3948, 1372, 1376, 1382, 3950, 1384, 3957, 3958, 
               1390, 1392, 3964, 3965, 1398, 1400, 3944, 1409, 3974, 1411, 
               3976, 3977, 1415, 1417, 3982, 3983, 1421, 1423, 3988, 1427, 
               3969, 1370}], 
              
              Line[{1441, 4126, 1637, 4152, 1631, 1629, 4146, 4145, 1623, 
               4139, 1621, 4138, 1615, 4133, 1613, 4099, 1601, 1599, 4122, 
               4121, 1593, 1591, 4115, 4114, 1585, 4106, 1583, 1577, 1573, 
               4100, 1609}], 
              
              Line[{1448, 1603, 4125, 4124, 1597, 4119, 4118, 1595, 1589, 
               1587, 4110, 4109, 1581, 4105, 4104, 1579, 1569, 4096, 4095, 
               1563, 4089, 1561, 1555, 1553, 4084, 1547, 4078, 1543, 1575}], 
              
              Line[{1451, 1437, 1439, 1438, 1442, 3999, 1443, 4000, 1444, 
               4001, 1445, 4002, 1446, 3998, 1454, 4006, 1455, 4008, 1460, 
               4009, 1461, 4013, 1466, 4014, 1467, 4019, 1472, 3997, 1473}], 
              
              Line[{342, 2562, 2561, 341, 2559, 2558, 340, 2557, 2556, 339, 
               2554, 2553, 338, 2552, 2551, 337, 2549, 2548, 336, 2547, 335, 
               2546, 334}], 
              
              Line[{1476, 1449, 4004, 1452, 1456, 1458, 4012, 1462, 4010, 
               1464, 4018, 1468, 4020, 1470, 4003, 1480, 4028, 1482, 4032, 
               1488, 4035, 1490, 4040, 1496, 4041, 1498, 4048, 1504, 4015, 
               1506}], 
              
              Line[{1507, 4017, 4016, 1505, 1499, 4043, 4042, 1497, 1491, 
               1489, 4034, 4033, 1483, 4029, 1481, 1471, 4022, 4021, 1469, 
               1465, 4011, 1463, 1459, 4007, 1457, 1453, 1450, 4005, 1477}], 
              
              Line[{1510, 4027, 1474, 1478, 1484, 4030, 1486, 4037, 4038, 
               1492, 1494, 4045, 1500, 4049, 1502, 4023, 4024, 1514, 1516, 
               4056, 1522, 4059, 1524, 4064, 1530, 1532, 4069, 1538, 4044, 
               1540}], 
              
              Line[{1541, 1539, 4071, 4070, 1533, 4065, 1531, 1525, 1523, 
               4058, 4057, 1517, 4053, 1515, 4025, 1503, 1501, 4047, 4046, 
               1495, 4036, 1493, 4039, 1487, 1485, 4031, 1479, 4026, 1475, 
               1511}], 
              
              Line[{1544, 1508, 4051, 1512, 4055, 1518, 1520, 4061, 4062, 
               1526, 1528, 4067, 4068, 1534, 4072, 1536, 4050, 1548, 4080, 
               4081, 1550, 1556, 4086, 1558, 4091, 1564, 4092, 1566, 1570}], 
              
              Line[{1571, 4066, 1567, 1565, 1559, 4088, 4087, 1557, 4085, 
               1551, 4082, 1549, 1537, 4076, 4075, 4074, 4073, 1535, 1529, 
               4060, 1527, 4063, 1521, 4054, 1519, 1513, 1509, 4052, 1545}], 
              
              Line[{1574, 4079, 1542, 1546, 1552, 4083, 1554, 4090, 1560, 
               1562, 4094, 1568, 4101, 4102, 4103, 1578, 1580, 4108, 1586, 
               4111, 1588, 4116, 1594, 4117, 1596, 4123, 1602, 4093, 1447}], 
              Line[{1605, 1662, 4174, 4173, 1658, 4169, 1656, 4168, 1652, 
               4163, 1650, 4162, 1646, 1644, 4130, 4129, 1635, 4154, 1633, 
               4150, 1627, 4140, 1625, 4143, 1619, 1617, 4135, 1611, 4131, 
               1607, 1641}], 
              
              Line[{1608, 1572, 4077, 1576, 4107, 1582, 1584, 4113, 1590, 
               4112, 1592, 4120, 1598, 4127, 1600, 4097, 4098, 1612, 1614, 
               4136, 4137, 1620, 1622, 4144, 1628, 4147, 1630, 4151, 1636, 
               1440}], 
              
              Line[{1638, 1670, 4180, 4179, 1669, 4178, 1668, 4177, 1667, 
               1666, 4176, 4175, 1665, 1664, 4156, 4155, 1660, 1659, 4171, 
               4170, 1654, 1653, 4165, 4164, 1648, 1647, 4159, 1642, 4157, 
               1639, 1663}], 
              
              Line[{1640, 4132, 1606, 1610, 1616, 4134, 1618, 4141, 4142, 
               1624, 1626, 4148, 4149, 1632, 1634, 4128, 1643, 4158, 1645, 
               4160, 4161, 1649, 1651, 4166, 4167, 1655, 1657, 4172, 1661, 
               4153, 1604}], 
              
              Line[{1675, 4310, 1871, 4336, 1865, 1863, 4330, 4329, 1857, 
               4323, 1855, 4322, 1849, 4317, 1847, 4283, 1835, 1833, 4306, 
               4305, 1827, 1825, 4299, 4298, 1819, 4290, 1817, 1811, 1807, 
               4284, 1843}], 
              
              Line[{1682, 1837, 4309, 4308, 1831, 4303, 4302, 1829, 1823, 
               1821, 4294, 4293, 1815, 4289, 4288, 1813, 1803, 4280, 4279, 
               1797, 4273, 1795, 1789, 1787, 4268, 1781, 4262, 1777, 1809}], 
              
              Line[{1685, 1671, 1673, 1672, 1676, 4183, 1677, 4184, 1678, 
               4185, 1679, 4186, 1680, 4182, 1688, 4190, 1689, 4192, 1694, 
               4193, 1695, 4197, 1700, 4198, 1701, 4203, 1706, 4181, 1707}], 
              
              Line[{422, 2719, 2718, 421, 2716, 2715, 420, 2714, 2713, 419, 
               2711, 2710, 418, 2709, 2708, 417, 2706, 2705, 416, 2704, 415, 
               2703, 414}], 
              
              Line[{1710, 1683, 4188, 1686, 1690, 1692, 4196, 1696, 4194, 
               1698, 4202, 1702, 4204, 1704, 4187, 1714, 4212, 1716, 4216, 
               1722, 4219, 1724, 4224, 1730, 4225, 1732, 4232, 1738, 4199, 
               1740}], 
              
              Line[{1741, 4201, 4200, 1739, 1733, 4227, 4226, 1731, 1725, 
               1723, 4218, 4217, 1717, 4213, 1715, 1705, 4206, 4205, 1703, 
               1699, 4195, 1697, 1693, 4191, 1691, 1687, 1684, 4189, 1711}], 
              
              Line[{1744, 4211, 1708, 1712, 1718, 4214, 1720, 4221, 4222, 
               1726, 1728, 4229, 1734, 4233, 1736, 4207, 4208, 1748, 1750, 
               4240, 1756, 4243, 1758, 4248, 1764, 1766, 4253, 1772, 4228, 
               1774}], 
              
              Line[{1775, 1773, 4255, 4254, 1767, 4249, 1765, 1759, 1757, 
               4242, 4241, 1751, 4237, 1749, 4209, 1737, 1735, 4231, 4230, 
               1729, 4220, 1727, 4223, 1721, 1719, 4215, 1713, 4210, 1709, 
               1745}], 
              
              Line[{1778, 1742, 4235, 1746, 4239, 1752, 1754, 4245, 4246, 
               1760, 1762, 4251, 4252, 1768, 4256, 1770, 4234, 1782, 4264, 
               4265, 1784, 1790, 4270, 1792, 4275, 1798, 4276, 1800, 1804}], 
              
              Line[{1805, 4250, 1801, 1799, 1793, 4272, 4271, 1791, 4269, 
               1785, 4266, 1783, 1771, 4260, 4259, 4258, 4257, 1769, 1763, 
               4244, 1761, 4247, 1755, 4238, 1753, 1747, 1743, 4236, 1779}], 
              
              Line[{1808, 4263, 1776, 1780, 1786, 4267, 1788, 4274, 1794, 
               1796, 4278, 1802, 4285, 4286, 4287, 1812, 1814, 4292, 1820, 
               4295, 1822, 4300, 1828, 4301, 1830, 4307, 1836, 4277, 1681}], 
              
              Line[{1839, 1896, 4358, 4357, 1892, 4353, 1890, 4352, 1886, 
               4347, 1884, 4346, 1880, 1878, 4314, 4313, 1869, 4338, 1867, 
               4334, 1861, 4324, 1859, 4327, 1853, 1851, 4319, 1845, 4315, 
               1841, 1875}], 
              
              Line[{1842, 1806, 4261, 1810, 4291, 1816, 1818, 4297, 1824, 
               4296, 1826, 4304, 1832, 4311, 1834, 4281, 4282, 1846, 1848, 
               4320, 4321, 1854, 1856, 4328, 1862, 4331, 1864, 4335, 1870, 
               1674}], 
              
              Line[{1872, 1904, 4364, 4363, 1903, 4362, 1902, 4361, 1901, 
               1900, 4360, 4359, 1899, 1898, 4340, 4339, 1894, 1893, 4355, 
               4354, 1888, 1887, 4349, 4348, 1882, 1881, 4343, 1876, 4341, 
               1873, 1897}], 
              
              Line[{1874, 4316, 1840, 1844, 1850, 4318, 1852, 4325, 4326, 
               1858, 1860, 4332, 4333, 1866, 1868, 4312, 1877, 4342, 1879, 
               4344, 4345, 1883, 1885, 4350, 4351, 1889, 1891, 4356, 1895, 
               4337, 1838}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
           VertexNormals -> CompressedData["
1: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
v2RKlzZZr5zp+XXRnJdwv2HPYi2JZLzdYn1JjOBMQsSI++x18ei5dmH1wpne
uKtbOvsQmW8SFT9o4jYWP8DET1ncWLxBPBVvwMSbUfVYfKLF3bH4RCY+Dcff
K9Ori8EsG65fXx+5or5FiIcgmde7YvH9++TTUUMw+7jdlli07Cq71Ufw4c5t
t0tN5enoPCXnjMzbYLTdMuGDBJmXkgTX2/o5iVju08QhG+6EEuMsPkkROw91
fph6U8sDzzi+zcHNC4Bn2dTHAeS7IqZj+xfmU/sXmP3rT+130Kb2O7TR+92b
wgf4ROEDMPjgqTGGJ3iawhNk8EQoPoHjHfih6qqqHWvtk3B2V5qUEVl3S6sB
l+8itvhoRmbJgYkB6MSqmzmJ2GP90+jrd3K+4W6Y8+qliBUUxEZ+Gj0/fN7Y
b/7lQAaM/z3jk+/TUNj14UWqK+EFnXk3L3+cmwarFq3mdeoOhW9DInqvh//B
Wyih8BYYvN1O4TP0XR3DZ2Dw+ShrDM/BsngMz5HBcxr/cQeF/8jg/wmBMb5A
iZ4xvkCGL2opfoHpFL8Awy/PKD4CLoqPwInmI5q/IJniL2D4ayrFd3Cd4jtg
+G4yxY/AS/EjMvx4juJTKKD4FBk+pfkXaf5Fhn+XLIyc+0AlDKefX+hueyQV
/Ksmeu4ldhqvtTBd9j4cExJXCrF2pEKZfcFBYTI+7dhBY/4zCTgskTR++0Aq
pBcuaOYgetR6LJVi1NNwIM3m7FT5MPi51Ke4iPg/vDZRUePNJbyUUfNOZtEZ
mHBIcYolwYFOTbybr5mH94J98xUzfdH5jLhwNZlX9QneLYqFGTj+5IZL08h5
spjXXNKL6G9rj70WejMBXz180mdurIdnbNX3uZJ4ezVbt9zteyJGPc7Rqoi5
AAsVrxRMJuPLdgYqXnlpDz17Zi6WD4iHM7x4Oo2MhzaddubqlQfZ30K77Xcm
w8Inmvt6SBwujAVZn2o/nLDx2PXZqeGwrjV1KIKsr/SanlCDr9G4z8Lq9c7l
54H76tdN9mS8YvuBvA0bE5Ansqzs8zx9LJIWH59B9C84t7fiuGkYZjcK1x07
aI3Lpd5EGhH/z/tmpVCUFoLWC8IC/94wxmWTRuLqyPi5vZeuGxh5oQsH/0Nv
U1Nsme1gbkzih3dcj9f2DZG40995914uBzQVttj/inzXQ+TKdOOj6RB6LMv9
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
QSszTglNck8XoOWr2OS/bdv7sPNyPk40fyzqy5WMZzy4hzcQ+X10XVs4W10b
73vHhyYCZVijOc7/8YVM9ND71KBE7k0HaPlINvlV30zKz5L76aBdk9uZkXgM
r5bPeTDwvzq+UjZ7rlPnB+TaPXZ+QOb8oEPX981mq+9b3rRrg+L6IgzfqX7k
1KRwlMoujHhH1reErr+bwlZ/pxjK+/rVhBIsv7VVQvpPHG63zN2x5zULyml5
YTb5aOq8hAf8x85LyJyXOul77h+2e+5D6n4B1X5j9wtg7hdFdF3ba6pOGZk6
5YOv7k0LPJ+B5xqbj7vpJ6PiJM1vsWR95ek6vjS2Or67FH/BJYq/gOEvXbqe
8awHVc/InPeuFzlKPCG4E6TsbT9tMAcDNvg255DzSR1dD9hK1wNOp+sBV9y2
8PiZUIZ/W0709uam4e+24a5csr7VtH/msflH0B2lDs8qxFMS811u+sei+nLZ
7InkvHSQrnN8dYGqc3xL1zlKOfC6bxFLw+16Gqpz16egeeuCO1lkX3TTdYjR
dB3iVboO8dI+R91LO/Jx2ZbCXzKS+Xj6rqqi/CtyPqTlU9jkJwuzqlmz0pAj
7VryykemaNlexQtkP8rQ9kx0/Lc9nqvnXNs1bIdVxoK+LXbJUKhqfDWK8MtK
uh6zm67HZOqp368UeHfi6WWc/t0vz60nDxV3udjzkXPX+/+wZ1jtyMvv8lFo
Y6SzsNQwAfuPiqe6EHv46PrKbnWqvvInXV85oCWuuP+vN7q+fZWVKeEFFovF
nXtG442uA73PVge6lLqfwlHqfgrM/bSXln/CJv/H/8/NbSudsO/HcY7jwWfx
w/GrfwtInAjQ9vxls6evqaSm8HcoKEw56qucFQ9tbk4L9Ij+j3QdKBdbHagb
dR8H+j4OzH385X/YE0rleVCAyvMgk+fRoPIA2ELlAZDJAxRS9x1Mou47yNx3
ttL7JYltv3TEOzy1jQzFQ0Zcge9mFODa53ITvUnczuGbZbB6agAkaFrqrneN
gF9yUvwnyH5sputYP7PVsQb9+uN1k9yHo4dsNIyWpsBuufIV4sQ/N2j5r2zy
QieCK4uNvLDp1PO9CkczsKvwj+BxYn/IsoOzQ06mg4FlYL3pMXus4bvScYjc
4y4Kb7KwnVEErSfvTussKILLmb8vziX7sYPWz2n8b/13qLwT3KDyTsDknb7S
9bZJbPW2oRtzG0pvlkCVdklf74MImOS/yCyC7KMf6kndJrZVcNj1j0BeaQrU
WSytNCP3LBsqDwY2VB4MmDzYAK0/iE1/JZWXgw4qLwdMXk6crvPlZ6vzJfCe
OTL5Kiy6vCc3V6gI2s3/wIc8wke1Zb/S3teCX31DzKKiAmhIUTuJNYQfqfwh
cMmM5Q+ByR9O7aRwtZ8NV2dS+SIUofJFyOSLtOo/6Hp11ICgoOpeSfE8OGS6
oZ2vkQUua3aHLOMvA2/HD2FGnenQaTQUZdlDzvNUHhW4zMfyqKBK51EDqbwr
yPKM5V2RybtaUfleeLR9LN+LTL7X5/hYvhcKqHwvMvlezbqxvDEoUXljZPLG
b7u2B2zx9cDYdM1eSUEHONqYKH2C7NPgnMg7XdUxOP9Twynj9B1o3Lk7ePR9
u9b6GTYFFcH4wWuPurG1EmS2fCl/Q/xTUb7OeCTcDmyTb767FkzW/XDOtwmj
uEfXqb1lq1O75RSqbPsgDevlL67MMN8KnMLSxY9JfM5uSVH5OCMLb5Y0Tl60
xQeP7T+0kO87CyZt3Px3XcolXJKY9PN1czDm7Z4nmkL8bGAaMa2kLg/71n06
/7AlAh/x7l+9hZwn+VW6eDKP5+LloK2mua2hqBuouOkD2aeNA/WKJ/R1ULbz
Z6q9oC1eXDc3/iGZbx5dJxjKVid4fCgq34X3Irauc+usRXfsWJQ1pDFaj0bX
4fKy1eFWa3Wrf3p5Fh4+cD//STAKYiWXPn1Ixl8MB0f19/viIs+o7inbg3He
5co2OeKfY7QefjY9t4W8tGNCLuGb4u6LkVaRmNEtK3WL7IsNP48qdOumYXGr
dOZywwDcG7PKew/x23fdnGXjbCNxjcm54LlFIThxnO7ITeJn7f/QP+v57+66
NZHYLzot4wRnOAayONa7EfnDdB3xarY64sUTZXe+M49Gpx1c6poubnjRKzF6
9D2GuRCnkfQrMh/dKbMXF57DzkX9Re1kXrHS916LKcShTPwcw8KV0RinJ1F6
m+DzMVr/Wjb9FRERESu6fHH7cw6PEx2u2G4lvXWQ6LGk65f3sNUvy/8Zd+4v
SxmCz8+wsjb0hs9uX7hH67bme4Q6H8t2Bq55C09PIXjg+efI5pvEzv6tGUe9
dnvgJfElzcsv2eEW597Uk6Pvq2n9qmz6dz+J2ClWfA7P3eYvOt5mjVILf+W3
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
U9XO8+oigTArv9OwQisZZ8bqPBgdn0P3JzxO9yespfvvnQ1tzTzACoOFPX1T
jc+5Q1G98sTR98MqtD2SbPZ0dY44b2aFwttpiYH9MoYgHrG5OuT/lS89/E++
9MMXo/4HN4IgZpsHZ8++RLT+461uRvyTTvdFXMLWFzF5nVxVqJIr8MxPH/+0
LRmXq3233knkk/+jj+KlBYI7J13xwwIrnlaN2QnQHdN4/DORz6D7EMqz9SHk
ps5FuJY6FwFzLppA92N8yNaPUXycwjI/Xl/c/OHh9gHfJPj48KPk+V+jdRb/
7mfI+LOvyW/uEi1/+NzhnWotZo8ThSav4//L+Mee9supf/7/gir7CzpKxp6Q
OCuy54NsIHotMawYvX89Y+vTGET3abzjZxxrqhaM89a/89/TEgUGl7KDkNhp
9x99FNMWBAhmDjljltRtl7SqWLAyVyn/SOStafmFbPKmR3atPVHhDr0/Ez83
lYXjTP5ZtW9G+/nQ9hiy2fOgXP6GxWs3mKM4Qa/YNRaPjrvC85Ton033k+Rk
6yf57uKaCT8veSPXszrZU8FhIBiQO6uf6Lel7RFjs0ddfGHUzeQg3MV1fr7R
a284nx33zJh89wDdH1KZrT9kJ+Uf2En5Bxn/pP9HH8ud1PqCPbW+yKxvPC3v
yiavaNFQ+f/Q9d5xPf7f43+kkC0ZkWwhM1TWQdlSUiGVpKLSVCqkvffee2vv
ojqEpBQysislhAohGf0ez67H8+3zur4//16303mex3msc07Xde72d/1QY9ee
N8b85jB5nOCK2//Hnr0se2J9Tr6daemH55VyMoe0nkTsGL2ak6econ0so1h9
LGOY9QwZzHpG7nqOofbYs+wRvH9dreJsCIy4YTrSRioKs7v3vnjX/7c/Zwur
P6eK5usPYauJS9I7F/MkRUGsXtNAE9H/ifaxjKF9LBNpH8uJjH6cyegHrv7U
f+yvXad2fZ5j740PTizoDZ8UC9elygU0OfuF6o9l6f+2KTPcyiQQMxcK3ozV
cUXvmbjyN6cOQ/2TwvLPlH1rVDf+IPYEpsS2zQ/Ercrempy+E2dp/8/9rP6f
MXu9hmRODMBQU+vRHfKh8Gz/l8vhRP4rtSeCZY+qLkL1kjDcZ3vSWzXSDzoq
g29z+knepf08k1j9PE9OyxTfetEPl29+NO4c2ZcLVk5b2Eyea9G+o9dZfUdz
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
0s4pSPjFwVq/gaCDCoHQ+3TJlC1E/+XhpusTsuLB9UrkPjUlUxB20bsmQOR3
MXVOuMDUOZFb53zM1EXhFlMXRW5d9DxTj4V4ph6L3HqsIFOPxb1MPRa59Vhh
pq6LaUxdF7l1XZ97hoJVE8xhQmqgfFNtIGTqbhh9lMzLpFftMU6pTqhx7Hy2
fl8KHBGyjlUm6/xrecmRpUmWcKLR0XLHjgjQWvxOazGnH+++yUk4LhwX7/it
M8E4GY0kO++rkfN5O+UqCnT+l6s4yvekyektvlh/NOvagh2X4c/ETwO6nH7d
daMzj+3JxalWci94ZQvhw7dfcXEPu8FbT2LM/OYSfOwyat6WnxlgdfOS5VAi
b7p3aeVrXcQclUyPndtPQZGFltzkqm54aPNxeYUHouuk8ooO97PY5clnfvIq
udc2/H4+foIOGsvpv1zjWYoLx5wz2PCUnD+Ua+lNuZbZlGvZsppntcfzULCQ
VTb9vCMYZCvVbYdweIKUD5tA+bBIOZIbhd/NHr3SGsr7PhoM1bSHs97w3Ivz
/tuNNuOnV8KgMzFp95HrkTAs90sDJ792ZHFmuXqUlm9uzPxdgZpHSpTyJgWj
tDlYNt0g+8tITMQ67xLerBszVM41BCdOvP7r8D1yzneKdSsK2ENK9PvF1aWp
YH/s2Lr3RI8t1Z/J0q94pO7+oXlOcHlns1KCaiKsOrw8Bck5qU/5tv0svq2I
z+br6R+L8U2p+LH3pZE4zTv44zgSl65yv7Rpr3IJrj5xke9CURzG37af5vyk
GxpmTNeU3xqE9bm+6523e8Il80ZbznciOlT/G5Z+3Kv9aeVnTbyncnMVr5c/
yO1VD7vJ6XdKubqzWVzdtuV2x28czcN3D2Z0wcQ47P288dV4sh+TT/en39HN
xL3rr5t5fotB+epLtgkkbnT87XJ4hL0Ojjr5QkLWyAbCjmsnVg381S/C0v9o
jfKa11rn8fCIVncx7+MYbb/l4k0iP4/yfAspz1eN8nwVDVT6ditm4Ra5Wj7R
nASUeiczagp5Pu6PT8Xp4iTc3hxw3W9TOt5+n2alSOy5bR2TvMwsDu6nNyYo
dKTBG+WB6YIcfjTl9tJ1CNx1OCVcckQ4vx+4VH9bNTfHCz6PuWbI+T/UZsov
3sDiF6/JS1vp3JgEsj8sRm8i+e/42rk8U8nvLqD831wW/9ehNmnzt1wrOBb0
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
P8+m83KbNS/dH7/Ku97zBXcJUQWlR9GQenbsATeynvd4VuzbxecNIiLHmxTH
RgIP1K3dz+EdUy65CYtLHtLRm46TiB9fiQdI80Wg/qrk6gEOl1zyhGmiizOa
GcX9eLM4DDftGfguw+k/T7nzS1nc+Q8PBAKSevRhwZ09yidNXXF4wuOtBkT/
auqfvLb/+seB8uJNWLz4H0ai2iVLQ6H50E7tpOlG4Np6xOkx+d1llA9+hsUH
j6dc9WgWV134eVplsGsiDKxqff5YyhX2+3t0OJD5XUn54DtZfPAwyluvY/HW
BVvk94VYJUGutdjukOYgKJwe9LOSrB9DyhNPZfHEm2LkRSQ1o+G3lPOMs4t9
oD61cQfnOxdryvVeyeJ636Zc7wgW1/visPH8gi+8Ie3TtJuB2nZwhndc0wtO
X8RSm2nnV0qj4OqGEjEfN1w7eu80DgczeXYPmJP14fD8s9OBy7IYdNXoLWed
rKJ+s2f5LcLAS3nj9AR4KLM8dF9TKGgMa9JOJfsr9B/c+VrKW29k8dabhPaP
+iKXBksn8W3wOh4N15a+/aFFzoEb/+BTy1Cutz2L66268+eKU2XJ0KDdum7O
Dm9wXm4y2H/yCOV6F7G43gYLb7UmSkaD6IBB09VdB6Fao2xMGpn34ZRbbcji
VhcUep4ekeoEYhm38gw3+2K/sqR4PHl+i/r/NMv/HYcYnvVYFs86bO8Y+478
Uxgx7NDjj6HhOBJSB45z3ot+lFuxbMAPREQTpB6LhkG9YH9PGLGnfl0+tkfE
wFR3n+fTCmKAzzqEL63vL0/8Pcs/7+wNdMIjIqG2Y4nlI9dI0Cx/7j6OjNeK
8rJPsHjZZy7MKN431xFuRua+29FjB7teCReokXk37vDWFV9sVv5bovqKebvB
//LT8Q1P+J1Ou6EGT19kWZAjJq+Iucjpr8JD/abH8tteymW+wOIyv4xouDox
Ngrfp0w4uGVFNPI5+C6zIuufn3KZ17C4zPoPxDRjv0fhQLDPz6iRsdg++WZt
L/GD9j+4w2KMP3Eq40/k+nPBvkH/w3bG/8D1fzYzvxh4cXB+gTu/0yn3+efM
/3Kf5/smXzLkicOCw+G1Ub2aOMXHW+An5/yk4z3HGq805S9rs/jLAY9X14pa
pmBWYO0Z8ckBmOfaX/eA3DsmlC88lsUXNgu1q5FQTcOAS43Njy+S+D17u/iu
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
baK/yxHc+qdqytiPhXD2db6vA8nnBzm9RzzD6T2CQO9xUs726e8vOeLVW2Nz
efal8EXp6TWhxyR/ek98knEwGA3P/Wxcd6cEbqhtneVKxg2LpDavN4jBl/oL
v98ZmwJ157aHppL3Iq7EM9tKNxHlbETv7/vsjDZNreXbST3geS9nTev0JJz6
dOpO3ZiD6P5nWRPfb0iu8VSSv0QiVqXqmnW9D8ApA0RyU8m9ECFxT17lfTw2
2Dt3pJnH4/UnRyVVSV2tovGt2/1IJD4NuDlhct9ofPqk1Hs+mWf4ki+6Qp2B
OPrELRWjcWH4fu++hY7kvLnefjRcWT4QZ43V6dYfHIR+16XEVcm5GhKjYXPc
MADrNc50uEv44pkTa56+J+N71H+VHC8LwR19Jsjq7PJHr6JIhTFk/JLvAmUt
sUgccGW90L78AMyG+bUyZP49b2ryp6jG4fzhIpaXajwxe0Vnqw153+Opj8wf
6iPzgPrISC6xbRWvtYLRY8tFvpsUw82h/fYWkzrBuI9dk7aUC2aqHtm7XKoA
1u1o8TR49+/9Mpn7bvrRlbF4deex6nkDgsD91btRvcn3WlG/mL7UL+Yc9YuJ
ofsygdmXeRnRz967ROGry3kjDrxxw1Gv2i1OkOdqf7tx/Pb1gegx3n/g0yde
uLd03G9+fNqEzgQM/OyAzknT5MbMPY2rB44at6bH9+r/9oW507Vcbo67PsSk
HLhYancKq8aK5pSSz7c9eXIh79g+eKcvdsq0txeeaWyv5eNaw02qqgds3w8Z
wxbUdNUEotAKBacIvr7c7YLC6TNIPnEx+BkTFYyJ80wiJPn4Crovo5h98Vh4
4fmz5T7Q5CLcIGoeio//GL7g/248U3/xQOUcQ+iULtUd8S4e5yrEhdj++uvD
0kF9WMyoD8uI9K3L/d9FwrNap6KTUgkgYTemLobkn/LvCuOGTFmC9yZIrpKL
jCJ1revVfny9XOqzk8347DQkqly8JmaNsXD4qmGLL+zK3z/gPd83nMYniomP
JfXHCWb8cQqL79vZbTCBZTceXNn50R3crfLua3T/9XNh/VCCqI9MH+//+sjY
SS62TU0LhoroTxtbAwJgXR8dH5k//HqV80M5wvihRFF/mXrGX+b+L73J/l0J
MMtGpio+7xToVHdWZ3b+9XNxYvxTRnksXxNYEA4f3QfGSo9LQtRYtOYlea+/
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
coWaN2aXRpPn7aZ8ohSGTyTb88OJ89KYVg/yZ/C/30/0Kd9qIMO3Gtmcf352
tz8MH5+4qHV8ODQO6fwQTtaze92vuUfPpcDt/e2LJ671Adc5Jj0+L/WLC/FZ
ZCwM8vC9P6ooFvrZhPZLJ/vbSXlYlxke1g6bYXjbKgWsDe3HnA/3hBjDlZnS
5PN7/C7NGmKWCLUpZwzLjjrAhWjdVSYkniayde1JC2NgV/eRlmpVLbikc04y
nczzk/K5Whk+F8/xiEFEZBRcfyFn1ewWBXoV9z2kyLjWi1XL1yTGwpT0/Ku3
F4XDfZ+tm8X4Om+U/3WL4X9drBs6yKV/IrxN0tsBUkkA99o0lpLzv8X0bK2P
UhREjir/9UvKCWyszwyrI+u5UOxl1j/NBYZk1RUYrfDDzu0LZyaQ+E/j4okj
uHiiIJ4XNlR3HQ+Lh6KA+J9WU6NARjn8fROJw1HKLzvA8MtuTB6ze/w3d/Bp
t9n4cIozzgu28+1P9qtWSyU7BjZin+1dsi6bIvGc9Qtlfp5X2yjp+KLwKPr3
3dH6LiwCRSGtm+/350x5bUcYXpvPyTGlmyc5Q1NU/uu1H06B6hPpot1k/v33
rh9/VRSGZ0mHtbPbE39Hlt4ewcc5Uz6XOcPnWrG553tBhfteEHzvv3hwXxvb
hF3M3HFrrx9R54KdMWVubCYfX9cuxPHd0hm+WwYXZwzI7IkzCOLsnNv/yYwO
a7C7vDRlioUV5vomXufju7Kvc/y4qww/bjnlx1kz/LgbkdeqB8dF47PUQVor
58ZgPye/2dYk/jJ+KWVGveIxTDuiPvqLHo7w9RH7Rd7H1L6HVskOswfT8tDR
sl4h4Grb/KmTPO+SX5VNM90ssfP3jia39hC86//OpDdZZ7dJlvxGg3icZ3lK
t8EgCSNnCg/k19t7bk/Ti/sejd9DfH9Fi8bhs+GX67+QePr14fh6eQxfL5fy
0UYa/ZePlqzgc1NthxtuXOIadV7EGIZr3i3i62HOfrB/bIiwJ2rPu1tdWR+O
IWddH/P4OpOU97eV4f0toPy4PQw/zrd1fv14q1TMCKq3nDk8EAvcOhtuk7ru
2mW/+AV6Sbgu0C1ou2kA7nxavY6PbyynPLhuhgenQXlwzQwP7msuxysMZHiF
0rtazlbU+mCkuLz6nnQn/KwXZ9XQ9W++oUnYqSsKO9PRv+zmo9bMGIzIVZmp
St5rpRLJhsqAeAw5N+4G3gpAuUFxXlYkDzRSHuJMhoe4eZ13sEVsIjre1fow
9HsE+g6wm/CJ5L20YTnnw4UycMOBB1P2zIzH65csM2RInXlr+8dfO32TMPnY
tnm9FEIx1H+RxUjyvDzKZwxg+IwDKW9RkeEt6l40HVhLzkGOw8IcLVVXLB69
YmgDGX9ZOHnTeuVkVBuYrm2zOBIt7pZce0ri/yjirmuIfTL2VirMOhwQgtod
cmtiyTpHZ6uPEXWIxYe3VewPHI3AUyXjRVvIebbxTG5alBWJRq31qskZAdi1
6pJPL7KeCMqXdGL4kv+vrvOO5/L7/39LQ0lLe4iiqaWi0lNGi6SyskISSVbZ
W2bZe++RLVvpKSRRSCINlRIqs9D2O1evy/dz67r93rebv87tup3rvM451znP
53Ee98fcC8Hpjly+2G+e0zs9cSPeqB0W+U363ydvvqvh90TcdHhAUXmRJ84v
s9lD+WU0NjjfqCpMROvZaZf2dfuixR62z5tI+YRdSouNOuJQOiJO+vIjd+Sp
XCelQ/o/2eTbNq0VXji/9h7fETlz7GlV4qDWgUT2A5ISdwzxrLP+Vva9bvC4
t1ieipe88v/GUZDPiqNgPI7KZMXVUMeKq0GPjqtlaV0nMHSdZv7Tvzybbglv
PsUf/TNyBTgzH2SUUr4tO3sMB2WS4MfPhX2e7f5w8HNHvBPFBRppixjamQgz
dcKap73yh4qMhfLC5HclCK2+a3PbE+Fh3nfxNxF4S19rggR57wNaHyrL0Ie+
XcOTEn4uEJUEbwp2sBvi0c1Rr2Sp+UzrQFUYOlDr5qMj/Mkkjg9839vzJxi3
VCYGepN6NKwvc5qpRuOluSlqF5f7YmvlhGPU+Y8wrRvlZ+hG9WndaLDFv7rR
JSvdv0/7tgSHKqOf68R4gkSkXq0MKU/jPHyjQ9YGvm9c/HHUygTTl8d4FpNy
iUvDM/aSdT+7Xmow4Uwghu8rSRCjdM20/tSeoT9NvTLkOLrIAtsXJufJTPVC
+/6yxTNIPREW80bvFDvinc/zbbw6bEBcoEmeWse+66/yGxi+CpyNx3GaTTjw
V2YFNJN6Yll5EDiw8iAYz4M8aX3rR+1/9a0cSWFlp8Vc0KBOzNb/kDnJk7J4
DCg9FK17bWToXrV+nP86ujkQ+u8u63y/6Apkhwf3UedLjq3z31QdvwgSZ/Ly
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
6WDTRdrvSPMq9Ri8ylCaD2nH4ENesXn+ZWRnOHxTOWhun+AKV04cL6B4Jgdp
nmc0g+f5mV+yUf+XMUzN1j/2x14ZTG9VzaD2NTOOPVbJKYFQEDkk/czPDw5P
VvfiJuOoSPM/pRj8T7fY5RrHfgbDwtb0s5ucXUD5ZsAsG/J81PNLWjusyHfX
X9X0PdMOipa+KjYk/RZaLKTtJhsHVSfX52oGhkB814RFa8g8f/ZTY43vnzjg
seQuj812APW7P+6mUf4FNF/0CoMvGtc37ViDeQa8bij7ImGdBAFs0w8vJf1T
OW/mueMaBpBewv7h7Hwf+H5Qcv5E8rvu0jxSVwaP9KtGldqDp4EwYmCrtnHf
NVg7E9UDqXn7vOlIwWAAQFJr4+EbHvj1jKsbpduSYS9pef8zDCzOnU4ZOu2F
ebZvJVx+/Y9reoHBNV3qsV/SPzcU+t3nRC9dmYB4Skiyi7qvS3M7NzG4nWyW
LsLecSlg+eHkqqBLSfBii9NkLpLXrOxV2/xkTxHIuY8occ6+CTY/9WWLSdye
ajf2o9OkCMQcM7q/haRBsvR6vitNJM4pFkrWSPaEe0uvyOZPSMHDWu+yppP3
7qZ5qpYMnuolmi+6k8EX5aR5qj4MnurrSrc7bUUuaP82wGjG41BQ/Sy8iIf0
j4enf2rQjWJoW3r68ka9eGjEab3+zf2gMhQcWpYaB5P2d5l9Ec+HUskDv3RI
/P+D5qyaMDirZby/Vao35gK8KTyQ6xMDhYoCIcmkf/Y1vZuyJq0EJF8lzqwu
TwDrpHjdsEYSV1+Vvt5bnw3Lgz04PUy8cPY9hbpTZL+Lo3mthxi81hy9xybK
95JBzN82u2tTKXQvPnX7I4krdKY+OXxhXjJ0w+qRPS9zISj4V/D59//ju+5i
8F2tj1XzWzTlgKSsl/z3VeWgrz3k+i6D7MsiMpE8LdFQ/aBdP/ZrPNo6TbRP
I/uOppuhVbqCG0yzmJM/eV0Bmidpphq/64dZVX/7E3xY/Ynj/VklWb+AfUsm
bHva1qA4Pw/k2wbr28n+20zzYycz+LHsmTZX2peagVj+7uQD+wrQ4M7R1iRS
/6vJIusmTzqOf04oruhdUIKb2F0OB5F1o3FP5k4vF2tYw11b4a1WiGymk0tt
SX5qZbllX0JeCswqUxFtmRMALbvnPqgj8Rg3zbN1ZfBsOc3WlOiUucHdTFNh
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
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0.09259458092137765, 0.7486122776543305}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
          0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
          0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
          0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
          0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
          0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
          0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
          0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
          0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
          0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
          0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
          0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
          0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
          0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
          0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
          0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
          0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
          0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
          0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
          0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
          0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
          0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
          0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
          0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
          0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
          0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
          0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
          0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
          0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
          0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
          0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
          0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
          0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
          0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 
          0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
        1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$5912, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
         1.4}}, $CellContext`moSel$$ = 2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10, 15, 20}, "numberOfMasses" -> 3, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
           0.8200836820083681, 0.1673640167364017}, {0.6778242677824267, 
           0.6485355648535565}}, 
          "mPosFirstCell" -> {{0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, 
          "pointsDataTable" -> CompressedData["
1:eJw9kkFKA0EQRXsSo1EkeAWvYLKvOoNHEIzuvIpLM2ThNVzVbIPRjausFARh
IKBiCEokmun/fwqaT3d113/V3cdnV6fn7ZRSM3qb0dqMQb+JryhHTXSqYY43
u8i6jodpEzuO/GdIkV9yXhvqvMYIdfwm68T+crzHbZ7fsd7c5APd9ZTj2+6R
jz64DOsf1ORY33Odg18dSG85WffAwbUiZ1GV5BI/eJKLH/mfeCQH1p9M/PAr
XPzkDvQ7s5IqfuxrufiH9EV+xfMvJn6st138GWO6YH9dcbJuj/3WUWBDpf71
rjo3BleQOy6p4rxGfwa/Ln3ndsJ7oRrua0H/JfvdJ0fhv/m9n+mz1j1zX2fb
F7gO+U9moTr6B9Aj/westChU
           "], "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {10, 15, 
         20}, $CellContext`rawNumberOfMasses$$ = 3, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {0.4, 
         1.2}, {1.3, 1.4}}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
           LocatorPane[
            Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                  Dimensions[#]] < 3, 
                
                Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
                If[First[
                   Dimensions[#]] > 7, 
                 Take[#, 7], #]]; 
             Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
                First[
                  Dimensions[$CellContext`rawArrayOfMasses$$]]; 
               If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                   $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                 
                 While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                  Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                  Part[
                   Part[$CellContext`kArray$$, All, 1], All, 1]]; 
               If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                 Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                 
                 While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                  Part[$CellContext`u$$, 1], 
                  
                  Part[$CellContext`u$$, 
                   1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 1], 
                Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                  Part[$CellContext`u$$, 2], 
                  
                  Part[$CellContext`u$$, 
                   2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 2], 
                Part[$CellContext`u$$, 2]]; {
                Part[$CellContext`u$$, 1], 
                Part[$CellContext`u$$, 
                 2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
              If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
              If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
              If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
              If[$CellContext`omegaIndex$$ > 
                2 $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
              ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
               2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
            LocatorAutoCreate -> True, ContinuousAction -> False]]]]), 
      "Specifications" :> {
        Dynamic[
         Function[$CellContext`k5manip$, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
                Row[{
                  OverVector["q"], " = ", 
                  
                  Module[{$CellContext`qm$}, $CellContext`qm$ = 
                    ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                   Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                  Dynamic[
                   NumberForm[
                    MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
                Row[{
                  Text["time, normalized to one period, t/T = "], 
                  Dynamic[
                   
                   N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                   1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                   ContinuousAction -> True, Appearance -> "Open", 
                   AppearanceElements -> {
                    "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
                Row[{
                  Text["oscillation scale factor:"]}], 
                Row[{Manipulator[
                    
                    Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                    Tiny, ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}] " ", 
                  Dynamic[
                   NumberForm[$CellContext`scale$$, {3, 2}]]}], 
                Row[{
                  Text["Angular frequency \[Omega](q), selection:"], 
                  Dynamic[
                   SetterBar[
                    
                    Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
                Row[{
                  Text["number of mesh intervals "], 
                  Manipulator[
                   
                   Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[$CellContext`freqMeshSize$$]}], 
                LocatorPane[
                 Dynamic[$CellContext`qPlaneLoc$$], 
                 Dynamic[
                  (Graphics[{
                    Lighter[Gray], 
                    Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                    Line[$CellContext`qPlaneLoc$$]}, 
                   PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                   ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                 ContinuousAction -> False]}], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                 Row[{
                   Text["mass: "], 
                   Dynamic[
                    If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                 Text["coupling to neighbouring: "], 
                 Dynamic[
                  If[$CellContext`rawNumberOfMasses$$ > 1, 
                   SetterBar[
                    
                    Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                   $CellContext`massLabel[1]]]}, {
                 Row[{
                   Text["horizontal: "], 
                   $CellContext`kLable[1], " || ", 
                   OverVector["a"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                 Row[{
                   Text["vertical: "], 
                   $CellContext`kLable[2], " || ", 
                   OverVector["b"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[3], " || (", 
                   OverVector["b"], " + ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[4], " || (", 
                   OverVector["b"], " - ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
                Part[$CellContext`k5manip$, 1], 
                Part[$CellContext`k5manip$, 2]}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
          If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
             Row[{
               Text["coupling from "], 
               Dynamic[
                $CellContext`massLabel[$CellContext`m1Sel$$]], 
               Text[" to: "]}], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 2, 
               SetterBar[
                
                Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 DeleteCases[
                  
                  Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]]]]}, {
             Row[{
               $CellContext`kLable[5], ": "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                
                NumberForm[$CellContext`k5$$, {3, 
                 2}]]}]}}]]], {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 8}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$5912, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.6790602328891914, 9.230900003615161*^-19], {
             Complex[0.7248589832535917, 0.], 
             Complex[0.650064949116095, -0.020858686170711016`], 
             Complex[0.11988513411713456`, -0.0981715969681187], 
             Complex[0.15160623794564831`, -0.028647866526790612`], 
             Complex[-0.002472802788942547, -0.01713913715451654], 
             Complex[0.05556524411678816, 0.01890267003822048]}}, {
            Complex[0.5524636587025472, -7.594543271602355*^-18], {
             Complex[-0.38354558530686395`, 0.09744499810272776], 
             Complex[0.1619813466218059, -0.23832737428749207`], 
             Complex[0.6766558452199941, 0.], 
             Complex[0.5279467930943094, 0.011722985858567875`], 
             Complex[-0.0019794387381373065`, 0.0612963317654061], 
             Complex[0.14074635807044672`, 0.0077645969691057665`]}}, {
            Complex[0.5222542056555272, 7.39373223091693*^-18], {
             Complex[-0.5047764091042254, 0.08027140607893792], 
             Complex[0.6076266586520926, 0.], 
             Complex[-0.41722429897453955`, -0.26584428115246467`], 
             Complex[-0.11870218623554862`, 0.011771602360776734`], 
             Complex[0.10106066627579662`, 0.15510216234064736`], 
             Complex[0.24672133224192438`, 0.12420825231706026`]}}, {
            Complex[0.47798270089481093`, 1.705186367657685*^-17], {
             Complex[0.11776747404882068`, -0.17021352942962187`], 
             Complex[-0.19349636076477256`, 0.18545691772731276`], 
             Complex[-0.005098087736675982, 0.0481703582836023], 
             Complex[0.12443545522518613`, -0.04846883240430583], 
             Complex[0.7520021001235273, 0.], 
             Complex[0.5450959458974042, 0.050065292585647264`]}}, {
            Complex[0.4208599945029234, 1.7181192359807767`*^-17], {
             Complex[0.046412084869462106`, -0.0633132278362492], 
             Complex[-0.15001494768060744`, 0.1368626263531111], 
             Complex[-0.49457449633790096`, -0.020339968952328036`], 
             Complex[0.7465187765334863, 0.], 
             Complex[-0.3425167147633056, -0.05320301419822421], 
             Complex[0.17190685158210708`, -0.02435844462026826]}}, {
            Complex[0.3371723422003491, 1.2680207595331082`*^-17], {
             Complex[0.08250671501222374, 0.03036710231625256], 
             Complex[-0.10759757386702096`, -0.00917692568070801], 
             Complex[0.15992951319705684`, 0.020880420200147097`], 
             Complex[-0.32856173648033754`, 0.004931060374980048], 
             Complex[-0.5245849484304596, 0.028709761501831688`], 
             Complex[0.7553839007471159, 0.]}}}}, 0, ControlType -> 
         None}, {{$CellContext`dynPlot$$, {CompressedData["
1:eJwVl2k4lN8fxmeMGYw1FGmTKC3aSLKdk0r2RCWyFaGyRQlRKJRs2VIhZEsq
RJb8nKGyZclS1tAMYxvLmDHGNv7zf3HePdf1PPe5v9/7cz87r3mYXefFYDA4
7hHlHhHu4eGe5ffN1BXiPPLsa0y3FcaT/g50t+JLx0D4hprNC2gNPfnwW8Oi
nxeyRuObvN3paAZ/dKfCVwa6uHYt3+kSG9mdX1jsJ48CI/vdhedTqChL7uIY
GOCFhTkRdWm7/wOPyDvzAwKn0LDWKYsY/Cuwsey/yyrlc0DMt93pXswk+DH9
V4MvnA/K/Cj8UyywDN7kDSYq186i4qqHCVU0Oqgru2Kro08DIZoKL6bsOIB/
zcnDTY4A5YUn8xXu4uG7TT5/PewmkFrdjh/BvLzw94UO4wk4DwheSaMn3hFh
9KwNw0uYjqraPDL63/CSgqOajAj7JoEoV6dpwSo6wTxoei4aD9lfz+yMPjKH
esjzJsd6GGj/xUu+LtfZyDbv7Y/DrBEgMsER9bkyht7qRr6uvscL0+98qf/k
VwzwrlWpgVum0bDA/WnFyiQ08tBPeb/GHKDQT/mpvZoAHMO5y8t3+GDZTLez
3uAS2FxamaNKp6HfVsJPGcoMUBF93PB83Qxo+j3+vuPROqAnG2v+fkuAAtTU
ZpNpPGwJY9S2nqKha/Ifngnb42CHtYYiA80BW6G2P32rAvDj3ci/7otzyDNv
m2voa15STWCSkKrAFLid/6O512wVnX6uSmicxUPNuw0ScdKzyLZ2M0kPx0Bj
vm6GqqmLyKQIl5uwxvVP6gvBxYqKrBwV/jOJ4oVQ/gVqSygFR8Rn9lrSZxEM
OzrXf7ISqd+X7/KgT4N2Cy/bcsMxcNLjP8vlOQLUFnTY5jXBBqfIhxYpYpPo
k0B/YK8/E6z9XVH7jzIHRLxhPo87Bla1qT1IvcoH1dcMpn2SCfDIkf7EYf4Z
9DnK6uwChwcuKclPGR6bBfnHbLNnAgTgtfHhI8c66OhAZVvkIR486XMTU/0F
cwKYW1ec1+pdRZVf84LK/uDhgVvM3IAns0j9n+s/YhIdtcXQL+8wY6GzOXtu
bokYB9JOibUu+BHUJfM2oV8CD13+/Fh+nlALaL6pioVOdOTyl1mveLYedV4V
XDSkT4JDvlb7slNGACYoWjXtKAF6aeydN4xbBK9ts36aWYwjqw+Pbn07vgB2
N9B33+CdBznFpZX1Uxj4Yuhxaa8gPww5qRH/9CAf7D31pKJ7dhpd8Jj+uZWI
gzo1uheEX86AEI38kgt2AtB27hTp7UkGssqSL03Nw5PKvZcd8+zHwLZDcwNk
AgfFSxIc3hnjoZd3mOzfmjlUPvztmdG+ObTBqzc8TnQBPcjtmVl8MgUUZwtq
yBb/UCLQVf/agYfS/KkxYeYtYMRrm3u21jwKuvbseg2uBR1f7zFwqRgHlZ5/
Pl3+SAbBafgvYhF4aHmnaPbyDRZIrPXL830wjmQS673ltiyAvHD3t68M54FS
i4XWSQIWPjY/VttjxQ+bPopfNPfkg2i2cj/A0ZABaTyiPQAH03kNzRdps0Du
jL3l40IBmKIiHLuWz0TU4urlcj0C6euq4f6LDiNg0fJ3Y431OvrjJZx9KZoX
Oh1TfHJJZh6t5X5T8C+eQSVaEVJONkxkUb0jUbVsGnTZb9+5YXQQyWqbhz7z
I8Aeo7sEe9gJmLttP+J3zaMs5W2jWrSfyPSz+8FptXFw2Iblu2ZKBqEShQnG
2nj4qZFilDu1AARfNGF6704iQlbQBvwRJoif/2x86TUdkAp3MfWKMXDvVT/8
JSV+6Jl+O3qHDh88Y2Hy76n4BCquy8L92M0LdwD5DropHTS19QwamRChaWnb
yY0+C6hJln5c8g2BtAvfGjmlTQY8gbEengoYkvWnqbHzEzjo7HEoK1mTgZRt
cj+3Lsygot3lnMwwJspL9Wqo3jsD9DKP3gg6NYjWjK4dF6olwAuB3u3eO36D
Tb8nT/LJ0ZG0oVDNBZ/v6GWx+jFW9gRwdTA0HnlPAVt3iNVrenDza0FRYbcJ
C0SFJ2X43JhGRo5EXdzAPEi70xzVrTUHlgbxxRoSGKi6/gsfkMQH57Z7X3Ao
I8DEkpyUUu7eF5Oqyx1JvHBPgsAqpmkekF9+eqHBIkJ7y1+XHYwXUKR2ucn5
cAIJBvNute/7B/IGVSUCVDGk7ttG/zZn4aDdFrlXTh8ZKGW0mbYteA7VpMXb
TPktoISLmU0XCmkgC1hQosOHkeuf/O8lUQR42mdCQSuwExg+LApvNJ5FpK1H
7EsiP6MpJe/6BicaiNDeHrdwgAoWIlXe6/ATYEi3SaaV8yKoG0tUjBKeQ+zv
D/dVvKeDF//6D72OnAaksqbmvT0cIAezZTt+EyBnQLvmGZEAnYfeL//EjCID
386bHH483EN0hIO1DJB86H72i6uCsHpgbb+gDhM1b5Rg3xYkkKzksSlEewp4
Q/I+XVCyjtIGBCV/9+PglbzrMp2AgUy82wO91+gomKra0vSLhb5lttZOTEwA
dxGjU2eEKejb8SH52Hk8hFMZMWUSrWCbaeXX55k0hLn/BujtdEbV73lKnpvN
gjZLvcjjdeOgyqGsYbqBAAN8PejdJDYQq3tC3lcyh8x4xEyNZOkAOdf9rs6e
AnWJPPe9CBzwKfu1/31Nbt4eEMY6PMbDMzd7mX5Jo8jU/zdh/R8vVFm75fO1
gwFOt1RE7XMQhNL1ilpvv88j0y+fZ9Pt8CTtsdvY9v1U8PNajsErDw5yv70m
JejHC1P+3HT22MHNCUfnDVXnGKh0+2/hgeVFJNQrLF+AHQMPJi51MjNH0QWD
XHvmETy0/4MN1jf4BgLJG7fvvDaFSN769bdC0oBA1HOM8os5MDN1OSLIbhJM
pNy4J2PPBx+q+ZVtb1wChOiBZzeuzSH9dUnlO3foQDPvR7FcwhQomnHDvhXg
gOX2pGhBQQK0z/zW5WLD9avzaPiXgTE02LU82nGFFx7XdDSenOfO9e0/mQbL
REjbYCnx8y4dqWfwt59o5iV9Mmw8f0psAoh+1dmft3sNZVq/mg87gYdNnWLk
j3VzaG6mQyl4goEEbyVYJ/uz0T4B6zb+I6MgaODGEvPIGKI/9njHSeGF9rZx
41pmX0CiLtn9pgTXv1TC92n0EOgmF++nJ8+BkFVZa2+jSdAQVha+PZoPhuoJ
HaOILYMj3BR1vzuDWJ++M9HjeUApbDc5YjcN6o/uC3EY5oCvErdVLlwiwBTP
jQ58OXj41m9/hMngJHp72+jYykccPEKxiSsIpgM19+N+cuZESG1+dS2MPIfm
Mxf3msbwknSaGeVRvyfBBnSywMZxFRUHsshqzXhYQNrXEBI1iwqEjnZiIhjI
nJMSpCLDRqEJiXEFGqNA9bumsZb4GDKeGrlx04vbzzDYh5dOFIMMlG3z/dYM
CnpIUFyL/IjUql9MRV+ZBVYnrJgbE8fB0qHrq8mAD+rXdcnS/JZAS2m3mKr3
FIqM7YOPBhnA6nbYj59yc6CoLwbtlMbA8p9hQhkcAvQ1WIx8BwhQWFqxcY/F
NPJ/7qqkI4+DibY44xCZOZA/FmQqVSIAeaRW1Pr06KggThPzrJaXpNvoX9dU
NQmONB52jPJfRVOfrPIsGXgoRHc69HfTLApKEhTytpxHwTNkcz2eRXT0beeV
rdvGgPzP/rN7z4+iKzSczO7vvNCz8eyjF7gqUDD53FmpbA5ZH1KSFbxdi3K2
gprA2zSgWV9yy3N+FIy8rdB7nUiA4c8dpVpOscGJFw8bwnkmkOSvDp2dc0yQ
s/FiqEU4HbAsX0mOl2JgdqV04ob/+CDPPzViygQB7iwITanWnEHyW5ZiJFg8
kMCkelq9mwEqKg2lu+wFYPK9TW8+Bs4jd8WDahameNK7/eUEl1/jQKHExWnI
bg3JSLX2uafhYfOmiP3FSnMov3bHxOaeOTRq+ub6l7wFlDjhZ5hMnAT+6wsq
Pe/JqPAVmVjHzXuxM0F23xvqgU7mIZULU3R0gdX6KG2wCS25JbwZ/jABtMXX
36cHUUDlFt4TVd142D6k7CBLZ4G2jXZZPvvGkfMpN2U73QVgYzcRKXl2HlQ/
6OKI82GhGSHV0+skP0y7aVdvZM0Hi/pCp64dnEbzNnlnyMdx8LNSv+sKgTsf
vCcfZfoLQM3N758wOQxUWbg3am0VT6IYtP6oGRoFna+sEkmfOagwcZOHBp0X
qmtkXVW9QUdL5/eO3zedRReebSMR3jARb/icyoMGGjh6c0N/OBhGMs0fjHFK
BHjY6owz2tsOJqNgVqzpPMqLUrp62a4FiW0oySpTHwcPDpMKlc9yOdvoNEa/
iIcaj77lhYmxAAjMHcPoTiB3eRfDqSom2LLhsO+pDfOAGGpT7z2BgfN9xwZw
F/jhjHsdw92ZD94199o5lzqJVIQPJCy24KDwCZVizfg54Jt0Cd5iC8BmM8Hh
4Kplbr/3pHt7YklOow00veFm4PbSJopygIUMD96Ut13EwK1nU17tYZMRu+SE
cJLEMqrV3yga8W0a1WuJu8webwcNcuy20ssk1L+t8+W5K1gYJmRR+fvtKNBO
3eR+9fMiYj15p/bEqR+cj90W4SnXD9jBOy5e/8QAtTnyx2Lf8MAfjU90twMM
xNzw6t3kzEKo3W5iA2sZJJQNreuHDYHKovDa879xUCwOi1nciIOnTbsiVo4Q
oWfA+X5T6QU0byd33GyRD37N2X32+C8yMBPadPmtqwgkvd9bPFyxjJ507rtX
cAVLuj7xQmx3TAu4FYTbMsFYQE8sxk4aC2KhGPN7YakbGWXZ7ydajSwhzn3T
cbOiaeT0PdnHrLAd/DoyplObT0Iwbmc2wx4LiT6WhP9ujAJFU81db7FsFBG9
IMQO7QPG1XnRJ4l9QG/WOv9PGANkaevyvwzhgcXKz9i1yhioM80YJmxmoQ55
Q9de3RVg10gLh87DoFay8NrkMg5WvB+8/lkbBzGu2NeFZkSovs/noeDZBcRv
rwYqOvhgOl5CMvoiGWRyhj6WnxaBzPvZ5y0ml1FmvJ/+kj2WdFf2peyB+GZQ
HyDWpjC1gOS1hvgmebFQ9nnGWQ9VMtKzluV9m7iElk1yQwa1p9Gu+1ZLmT87
wGHqh8qWsmr0eFfngtcDLGSzHg4KvhoFrb/WLqicYyPtm1v7Bk72ghBldcmM
2h5weFVlVESDAfK39HfXWPLAP5Xa6q/FMdBAjudpJPe9vpJTT6xiVsAgCLo5
PDQMkgdc9uXK8ULZhZSRF9dwkBqrnV58nwg12ZsGDXQWkBmdHHGkhg+OXjj/
SFONDJwOmdBW94nAZJl3lIATK+iJ0jhmxwMsyfvpTJ3vpSaw55eyo8EmFpI9
XL11lIqB8v/dTX59g4ySe76dfqG3hMLsdc/Yp9CQ+3++RbHiXeCwX7fd+fkK
FK/3ye1qLhb6Y0MUb8pSwWGdJ/du3mejtAnV7BK5HpDPUfv05Hc3oHldn1mc
mgdbRv990FLlgVXFksIanetgVeFQWyt9AY3IJoUJFa0AbUM9CbVlrn/6Zpyf
GrzwnyfvaJgXDhrFUMKqXhOhy8yLC6JCC0g8T59vWxMfpGa1uL9+TAYP3C2u
63L1wftesauhK4hn74R6dw6W9LJo2yaNpnrwX2nxy/0OLOQfHU0m/4eB9hS5
7A90Mgr5zJB/t20JscKfZuqK0NCIToaZ20oXsN/Rcs6XrxTN5K2phDRhod5I
wIuT36nAqcViU643G7F8f9DdMrpBh4J/aXtON4h1WvEZrpwHJz0lYrF7eOCE
BS+QSVgHBhGfpvftZXE5O1xUnboClIuqQw+9HwYramGba7n6ug5bJDc542Cd
ZLuKaTYR+scHlh/6ykTip6eEKif4oNnDs7rBMhSg2nWO/U+Hq+/lzdW0TyvI
vzR+caURS5K9EuiyE1sHNJj1mBtFLOTcdPqR4msMhKd1Uy0SKchLCLBou5fQ
wUvefjd+TaFvn3bM7ZH/DUx/0245CxSj2VMtssReLDzY9NoyDo4BE0KywiEN
Nrozbibmz+wGOV8bAhQNesDtZ9c33a2aB0XmQYv3jvLA9SX6+I2QdaB3tC/M
1J+FtsYGHo+zWQG0ZzpXRSWHQUhwfk4Udz7/dLRfH9fFwV9aoUrXE4gwNn1Z
4OttJppsm7tSLs4PJUbWHrRUUkBEeOEHr5sicODaalh/1gqakVS5SurBkpr1
zo+9//oDZPg2hIsOs9DlTiuBS1EY6CkV01UgOoL2/ZUYvG+/hKh1btZ/VqdQ
04mwJy/vdwFYT4+rUi9G244vv+prxsLh2kuz2KtjYITc+bRpYhEdvrD37RC7
B5S9zL36zb8X/GvY4iQ4Nw/iqmlbW8x5oFJSpGRq9jqobuPISnxjoXu9+MIo
wRVw7++8zNL4IDig/R/nJzdf9svFP6jYhoPlVQPXtngSoa/hxsR0EybSdfzr
2aXMD8X3rF7k7BwBjgX3l0xiRWC+lfpr9Zsr6E8a0YXWjCWxW4KWZKTqgbmE
cp1fPwvly53L0HqFgU90fj5VVBpBIgExAdLFSyjTe09DdxANmV0uOlGt1wkO
HyYqF4WVItF0P/uN77HQirB0a0xqDFwg/ztDylhElbRDhxdgH5B30W+xKu8D
s2eef58ADJC6I9JpMYAHNtWK9gzPrAOZgUn31hEWoj5wvafRtAxuHvrjfXHH
IKjNrjfQ4PJB3nTz38Q1Hqhu/U/y61kiHJdT6s+zZyLpW/yVWwE/3Nz4qCZN
fgSolD3YHJolAkcuVnJcpVfQ6g8xjfvvsaTvVRuytgU3grLWXYJJ2SzkHewm
4FmFgQfy83bZ/6Ogjy0X1ByXllCSV+e+P/LTaDLtj+UvIW5+Joxs73taiVJw
VdqMYCw8PecmJ/SYChr4nuGdgxfRbj2r3zE6/SD18fVNhwL7Af1ga5hbBAOc
dX/4Mz2FB4pbvIMfdmCg0zeZduN2FiKb/+7bVroMhmwWX2+XHQRtj0/d+1CD
g11hd24TmDzQ/Uqi5pkDROjlstaokc5EJ6DGwK9D/LDuQll8fA0F8Bw1Eo5L
4+7fgQraaPsy8leePxkSgiVdzqta8Fj4CXapfzyy6SIL+dyu9AsbxUA908JW
LSMKcto8nXlZehlNLh42rHk7jT7iFq8MGLWD9P5Q+997ECoSsWyru4aF6fP5
kSWUUTDOrDC2TVpEtXxnlJSf94NlR3uMtU8/KNs5fPxYIQM0tmz4453NA7Nd
09fj1DHwl5Bfd30sCxG/W1hs/r0MZEsjB9YnB0HGDp0s2wYcjC3l0DbgcdBl
UdfaYC8Rlt/87BU/z0TEW0/nrwrxw0Jxnao4OQpIiQdai0EicBJribUsWUbW
V+gkHQcsidOnZeFzqwX8bBelDgtye4SqzhllLv9Wa3NQTAEZ6crQA2nYZZSU
e45/d8M0wmRlNJZbtoMnKdrP3MtISPri9vFCKyzM8apWdfYfBd/zP/5o715E
kcbrx2sE+0GiNTCuyekDQ5HztRYZDCCDU9hXEc8DRYVXf7doYqCtmflPF20W
2mI3NFK6dQU4knaZn944DKL70ywCqTiocYxdHLEXBwMK5yoEIRH+8pe+x3Ns
AQ0fTBStovDBvHSqR1wEGciLbrQ+cJnLv4KHG9WalxHvr4LEUSssaSVohOfD
mRZgePR1bdP4Akpe3GXxjNtf2JsntiWeIaMR4wTF52gJpVEWGwpDppGzc7/k
ilIHMF200S1RISEtzjbtzW5YSLh6rzHgzigYyOnZcWQfG2H4Ar66TvYC+xem
lObrvWA/T9M3KUcGyAjO3z/uzgMfukXYuClgIIvkuuff6gIKC2wS/Om2AiYS
tKYlCoYBK6/C3EqUF/oknaiUNMNBlTtp4kwnInxMFH0VbbiAvqvx+6/V8cF9
UimriSfIYGtU0Wm7YyJwePON+LuiK8g6ztl3zhVL2vVTqnot/id4w1a492p5
AeW4m9J82BgYNITfUaBDRmqaPYlqbkuoeMKiJ2OOhs5EbQ0Fnp2AJKZgFR9a
haxcEwxAHJd/FxsEvbtGQcLXl6SfN9moa2HxoUhuDxCao+DeqfcALYnpFCjO
AHK9o8QQXR54q62mJH51HQhVC5U3ji2gBJNAoJyzAq4DIukWl+9kKbSNdIQX
FtsG3Ut1w0GCb3BNehTXvw4TXMWBBRQyU6xwspYPvng+Gl5+ngx4j32gHN8j
AgfN+vRJV1cQe05Xq+k5lqSh+VBbSLgR+PFv/t52goVicj/j1jswMN1YJ1gk
m4xWa4PDYpWWUF/C/o7752jos/XOS63JXUB2+XVqtVMZWnf0FXxQiYX2V+sN
h29TASZBuMD1ARu9es7P6mrsBkKSJGnTt93Av1AxWr91HqiGv1eJ2M8DrYXx
5f99WgcFJx3seflZCGN3VFPp4woQrvd4acztZ1bm8gZHAS+E7/28Iz1x8PLV
rToNb4lQ5kL5QuAoEwXN6qeHdvPBgB3h4r8ayOCSA213gbIIjIA2Jp7pK8iJ
xMHOVGBJTS5dlYY1dcCCf9/e5mcs5PqwSHoqHwNd3TpuGp+ioKz3Mm3OW5aQ
D6Hx6FbKFLJtGwz5tu83EPu3+JSh8hlJz83lkbuwsG/XBiNf4hhwf5VX1mbN
RqZX7t6e/NQNFh0T5x8MdYO+T1kz7SXzILjXRMZ6Lw+kp3T4lTxeB9+/9QRy
zrGQeW+AiE3IClgGTsIKTsNA78yAOt9RXhj7VutmtiUOJpTFbtuUToR9yp69
A/FMJBfmKvJnjQ9eVe3SKXWlADmhl7aBF0Vg072Nb/QeTSD/Hnv0hbWOQtSS
jwTl0MFgWKG7xjEGelSibsoi8EMhr5qAyNZeVEsM0fnuRkXNik/U2z5QUUjq
hIPLAQaYKxQv4hsrA81xHhMCDfywMjlXLTmfBspJeyvLtSho+aidPCuOAhaE
VY/XNTFB0v1K3al4FnAJderVeSUAJ6wDMRMfsJCp6CAW3zaENHvCbW9rcQDr
BeORhycLOFpu9PovBA8HicnGMjeJ8KPUkj3/uCDsqkb6Uh29yMeyKc8rUwC6
K2EPLNAXgenZ1Iopghg8Gr7/dVXcBPIp1Bf40r+O1Loef9qbTgfNj6Vkzksx
UJGeNW8+Lz+UH0gWGj/P1Vfx7/P1K1SUHj1y2aSOiuYfRcTdP8YAvwbqPIer
voDxnNAvp5v5odm0lGGGPw0ElYXyfDSkoAqsww2lxxRgXaUrkVjLBGcuz079
4erjs+nybUwUgPk1udfDi7Dw8ezP1tT6IcTr8uVn2EUOwITPiPnfYYE3VsmL
2yPxkMewxkbAjQhVeAb71WcEYYDI8fjJ2l50/3nclr9xAnAr7t7IB8YiYNlU
Rg5wROHBk16hktkTqO9nY/Za2zrKaKzNFH1BB+SC1EF5PAM9cBT+54ThhwN1
f6fuMHoQtTPA6p0xFXUB4+YbX6gI40XKTdZiANlt9bZG9V/AnRXlzvJf/PB0
zrtdZ9xo4PuNjzsunKMgofPa/gbmFDBenxlcVM0EtjF+X94EsYCM1/qBKe53
zffr8Ihze0+Ds5i+c/cQcrorc6XsDgeMpJ9eS/JigT1v979Xeo2HBadKZw9w
9fmkue+aWBGERmLUJxaZvWhf5tPmbWECUGT+/mTS8iLotEh2sJ4ThZuW/GuS
iifQJZF5hcCedeSfMWrCF0MH5RkaDBsCA1V+MLnJXuGDvE++fFvq60FqyHDD
ZQMqCih9s9rxmIok6j3GL5xkAMyrCNoYthwEjURvCevkh3NBD2Tkn9DAPnD3
486zFBQW3tNKkaSA0i8LddUkJmD/UjSyucYC46b5R/9/7+IxVXInU7FQnj0V
qM8eQgFHDvoPR3HAu/d5Fc9vsYDpZoZy3Ds8fJHxht+HO58YuSh9U0Eh6Nm6
iN/0oBelTJ4ixAcLwIPJDO16HBsU/Tmn7zUuCg2030/HlU6g4eEj1un0dfSa
x7nI6xkd5Iy/fuArw0DRI1sdNJf44IABGvkh3osS1HeHdJtRkWPJVTlXXSpa
QW/StnF7ZPrvZzuPjVeAJ3c2BD7g6qPlNh2fRjTg71LpEqFKQdM3Q8iQQgYJ
8S8/DNUzgUwQYaHlDAvEOja5ZnPnU3Uz0qVGYWEtMyP1mMgw4iHuTryRxAF3
Zrr32nHvYXvSAFmzCA8veKibCHC5N4f7VcrYKASl3X+03Lzei/BjtHu7wwWg
rfEpTXtBNmieaQrynhSFusqn1eoLJtDydlqyCz+G5Lx/qrUzig7Gp5u2rakx
0Om9P15acvW53vX/YfmoF0knT4fGO1DRuEVac8BGKjJ5Qin6d5wBSB1/050/
fAUJpN1K2dz5vFS94bjcGg3oYOOXI+QpKIgeyaffSQZdp89+lGhngqLTjxBb
lQXK91EnpLj5MppS2+v7CAuP7oqIMZAZRtuFmV6VERzgd544MmjFAlc+ntrH
+IiHqpP2Dd+uEmEcZ9b/spQQdGyJc6+41osu+KuvPkgQgH55lxsOirCBZwp9
LHxBFL6q7KWOvZ5A1RaO930kMaTuk4Fy+xLpQBys52y4yEC2EbWkU6t8UGXD
5ytGa73oD+PS4sO7VFTIe7AgnUBFmdVM4oeDDHCYYiqYFVcFYr01zylx8+XL
tXyLVYVpMJDaXVUmTUFHDmjWl06RwdEUjxf+PUzgekC5dasmC5xflzx2MU0A
Dla9FLQJwUJfx00CxluGUVDQ3+pqDw54uvPFyxOXWUA2Zqnk/Vs8bPU4unrb
jghX79ywHBcRgkH5HSfk7/UiO4UD39beCsDhu5Z6vFz/dpx/8iCERwzKkX+s
ikZMINm1jaeoUhjSwVWebNs0Oph5YfeNfI2Bnk5uTSVx80XI3MdDx7gPmWjH
BogFU5En7+2WzbJU5BHstNN+DwNAoTNX7I9XAc1Twinsen7oadVudnbvNDjw
My5GkKsv8LAhWYvbe73msE6sPiY4dd19RNScBbZKusCEdAF476XbVeIzLHTa
wnP4lxh3PifFn3WacsD9H/6hkVdYIH3P8uPdCXiI19JYEbYnQrmOJvwRjBBk
B/zBiL/qRatqy3DrJwF4d8sLMVXu/l3yeXr3qIAYrN2Re/DbgwkUoxfvfmYD
hiSYqz0Tm00HImczetOsGQiUlFyhcflQ5dJqGXO+D1XLIhMnrr6EoP5JJQsq
KvK6hhdRYIDYH8xfgrWVQNJA4FHzD36oKntjdzp+GsitHF9olaMgZdfzpyft
KACJOFvc72aCIfav1j3cXJxz2zlMfiMAX4mq2/e+xMLYz6+uB3KG0BH+FBWO
OgeMRj01vu3AAs8b9vTSwvBQtv6exCUHIqxWJQhfpwtCyU07JVqqelFxpFHJ
/iIBaJhZki3Mzc+PjQ7/eITEoPuz2er/6wtc+5Foi8OQ/mFS5Sty6WDe96T9
xGkG0mInmeH5+OF3p1RfB/4+dDMrUN/Gh4oKfOKW8hOo6FOdxGShIgMU1mKM
h9rKgWK70bH4Ou7zK1FJxCYayLtv9dRPhYI0aG9GayIowLy6syCojZuf3j+u
GEWywBhFs/5ZigC8Fm32KCoPCzHTeI21/iEkdlc+2fM4BwjfDacluLKAuCb/
49hgPIw2X/IbdyZCz9y2D4jL9zvb/siU/upFVuoPV43fCcDWPycvO3H5p7h4
2OY71z9bRr/nBu58+lh/mpceX0dMAqVi5i0d+A69dq5WYKBVqqvdXm5/edwq
7RET24uCeqx2vXakIvZBieH31VSUQguuJx1mALH9Vjtzj5aBYydM8UuN/NDH
6INHWgwNLBPwn16doaAi+9rpilgKWHwznXmtjgle8nRI3k9igTNdUuKLLwRg
ekVm4kIhFg50RDrnNgyhGc9j9e/OcoCZPkZquzcLlDSZ3DXn+idv7qbfc4sI
I3ze8o9OCEJfreVl55ZeNB2ur9DJzamdLxl+wvOLQHqtrt8FJwa9PhEzJ7j5
8j3wyPvQznWk77HpStNrOuCc+LBHW4iBysuldpXy8MMDGmXsp1t7URXO1emV
ORVVEbAqQd+oSI7+wrvnBLefSXnluCR/ATI3QFZMKz/k6J3TZrnTAHuq5d2K
CQXV8xP6TTwo4Nfv8/vZiAkeJO49epPrX+jPmjRxbu5dHn54NvwTFqYY9d1N
bx5C2i5epV2OHKD9Xf+AEbe/UITMLqnE42FOodPGQC7ff821xVkyBWGDDkrR
L+lFlyxf6nQ9E4D6NQfPJrAWwbsQozCNRVGo4zb1sIHLB/HhwNgP7euIU7Da
VRFHB2qHkkcVcAxkPnl1fSuHD2ZJ5joc+tuDqtvE9j7m8j1ows5oRwY3R+9I
vd8FuXwg4ZakdcpAoFvddZcOfqhdtrGu4y4NFFbstXjH/e/37zzwKF6FAgSf
8i0xuf1l2Kxt8hJ3/0ay5sVCuHynrt4aGMjCQkmTaklN6hDqm9rfmhfCAS6a
hcw3HiwQHX2moi4TDw2xmbkKrkS4O+zZti84IXj67BuhmZhepFO0jzczRABm
ekj9J76+CIb0WqMvTYlC//PNx+O5fJ9ZN79jQVlHYYWKLtGRdOB6um6XgQgD
RYRYnjZd5oMFhlEUpeke5HVxk+QBbj+r8lQIwzlR0TtT6ZEVrr7hn0TKyfFy
cE5qKW6Ey3eD3Q0Gphk00NN9GpsGKEihzaH51BIZ7AmQVan7xgQl13Z7aHLz
UzopQnomXgBKzfcp30nEQtOsLVWX8cMI79WrnZTAAY0q3SobnFmgq0Tv130u
/+RY5zKuuRChybPF8JANQnCgL56Q7cHlQ+js3y2PBCDJQWv7Ah8bjGfsUFTg
9peP639nErn9zLqIE/wUgyE9uiOg8Y/bX9I4LSVLigxUzbmTPM7mg6e/d8g1
nulFM+yT7d5WVMQtpA4b9nP371uUKEGTq6+yWkmmtxLYSAyIOXL9K/D2ldo+
RAPXiAcXLZQoiKz0TdrqDxmEbnoc7NjMBF90n+NVuPzLarzi/B93/zzNF540
hWOh6gCOx3zjMNodq6gjFs8BCbn6Yeq2LGC0ddbtOre/aILguEZuft70Zx+d
5fJdMxinzne1F716vOuhSJQA/JkzkhwozAbhqwnR6zOi8H9FYuln
           "], {10, 15, 20}, 3, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyEvXd01MX7/h1QkBKk9yJdqdIhENjQQpVOqEqo0hNakCZFBKkB6VU6SJMq
iIEldAk1nZDN7oYkSO8lJODj8+G+Ztnr/np++Ydz5syZnX7N9eI9c5fqF9Bp
YEYPDw/P3B4eH/37b6fiG3//a0+mk+1W3nydPizN6nXip1nxx5ItSK9/YMux
t4ueW6OzNghquiLJ4p7/nvUrr7E7dj24ZdI7/C/9pvXO+klPy59zpXvI36Ij
iQc3P1X5LYM3rK48cY6r/Lbvy7fU8m/48uQeVR9L9wv5h1uGp1B90iwXW4eV
3ZQ7xfIu6nXLbk08TLuKTvhkzrunSSYd7UoLqlJ7+KIkyn/PeueddcqkcFc6
2hX2POfyBqHJJh3tCj/VaszwMrc5v+VN4YYhG5+70tGu+U831mn7w22uj2WZ
X+96g+qq+ltKfOwYWfQL9MMLK9p1zpr/5d93kkw62nVlUt/T9X7i/Pescw92
7vvVlRSTjnY9GO1fZuvV2yYd7fJt+Hr41i23Ob+lzy8ta1Qd7ioH7aq/PuHA
5CrJXB/LqF3VrvRbnsT1t+R7fWB9u1+SLB3+l55s2nXw+5iwpr8km3S0a3Ol
jMPutU+h/Pes9mEe1U9VcKWjXVd6D/QamctVDtrV8NTugTUqJnF+y5Kx61f8
duWWSUe7fp4z/vX487e4Ppb0XXe9TpRQ9bf41ew2ZV2eZAt+D+0689upCWGf
pJh0tGvj8lc199Xg/Pesi1uPP5+pfJJJR7vmZ2/fsfSBWyYdf4+qrHiZa+kt
zm/h/GhXMJWPdv3f9UmzoP7SXgvahfYiHe2i/rGYdrn3pwXtov43v0/jhfwW
Gl8L2mVznw+oj4XmD+pvwXzr8n5+mnbllfmJdLRrtMxn9/z3rJj/SEe7/GW9
IB3t+krWF+W3PJL1iHS0a6GsX6qPJUzWO9Xfclb2B9lPfNAu7CdIR7to//FB
u4Ld9ysftIv2N5//2A+R30L7pw/a9bf7fov6WGh/Rv0t2M9l/zftwv6PdLSL
9MK0q667vph2kR6ZdpF+mXaR3pl2dXTXR9Mu0lPTLtZftOtO/zbNLuxxKl1u
8Lzk5A55nUqXO5XY8v2XxxxKlwO+LVY+eJ9D6XL273zPZAxX+S1Ncm4/693I
qXR5VrMF3xy7pepjyVOz8N0fSiQqXX5kb7R55zOn0mWfCjMD9n/rVLpcfM7S
avMncP571vN1ju//fZ9T6fI8/zd9h+dOVLq84kDWlj/0T1S6fOHql0O8pyQq
Xe5RfcfTb/olKl2uP3nID4eyJypdrnxjUNcxc51Kl6OfeqZe7eZUupyzx6Iz
3ayc/541JMfZHTXqJipdfvyy8/XsoxOVLnsdTdyUf5zKb4lpPOj+8UaJSpcP
vkyMWBin6mOZWanWtD91/S2dR+Vvnn+YU+ly7qgpa2NOOJUup+3YXn7dp4lK
l2tnu7pg8gfpaFeFtC3PHUudSpfHhOadUvuVQ+nyuPbBXeb87lC6XKLb37uH
7XQoXc5XpH3ewlcdSpcfxnRMi/7GqXS5XKfOaQ/vOJUuJ79YE9VhKee/Z/1x
UqUS5+MdSpd71m/XJXWOQ+nysVcjTtYer/JbOD/axeWjXf93fdIsqD/rMtrL
ukz9Y/SrlHt/Gv2i/je/T+Nl9IvG1+iXl/t8MPpF88foF+Yb63J7mZ+syz/I
fGZdPiTzn3U5VtYL67K3rC/WZaxH1mWrrF/W5Vyy3lmXsT+wLmM/YV2m/cfo
V1f3/croF+1vRr9oPzT6Rfun0a9z7vut0S/an41+YT9nXcb+z7pMemHaNdVd
X0y7SI9Mu0i/TLtI70y7Orvro2kX6alpF+sv2jVu629j2v3uULp8c2qZKjPr
OZQu55ywI329j13pctjsngVTBicoXd4wedpV+3Ob0uVJOXte/ypTgtLlAdl/
ST56L0Hp8vz2/vdX9LQrXa4UFDh6QQW70uV+JXcGFP5M6/KpoJIRDVY4lC5X
yVLkQrrFoXQ5cMzd73/+zKF0+VL5VSVXV1T5LY3rx7waV8+hdDn2lxzVP/J2
KF2OcmSePM6L65NmKV7yYNt93g6ly87snkfmVnIoXe6/bPj0wOqc/561Y8US
pybXdihdrtKnR5NDdR1Kl3s1mFshqarKb/EalGNlSjGH0uVfFiTWTy6h6mPZ
2dYeFthT1d9ysJDnwy/+UrpmLeYd9vmBsASly7su5Hyd3tqudLnUxbVpq2rZ
lS6PHNd292z/BKXLW3ds8qgaYVO67P+23sx6nyQoXc6SHDT1+kZVH8vPnrUb
D1/H9UmzJP50vGBMX4fS5cRPv51Qa7ld6XLnDZPXB2S0K12um3fXoi+f2ZQu
H6nn531gvE3p8s47GfK/6aLyWzg/2lWTyke7/u/6/NsuqT/rMtrLukz9Y/TL
070/Xb7Svf/N79N4Gf2i8TX6VdZ9Phj9ovlj9AvzjXX5kMxP1uUdMp9ZlzH/
WZcbyHphXe4t64t1ubKsR9blzrJ+WZcHyHpnXU6U/YF1GfsJ6zLtP0a/brjv
V0a/aH8z+kX7odEv2j+NflV232+NftH+bPQL+znrMvZ/1mXSC9Ouge76YtpF
emTaRfrl4gDuemfalctdH027SE9Nu1h/0a6YbwuHNluhdNDa/OsBp777Il7p
crOILYMr94hVurwy8P7QrLVilC7f779pQY+uMUqXVyUUK/B9rZtKl6dVXRBU
t5RN6XL38tOnBK6wKV3OMmXI3TuPbEqXX3008nLemTaly1WC8u664x+vdLlZ
sz+uTPo2Xuny7WI7h766F690udeVuiG+/jaly/6D8lzOusumdPntX2uKd45X
9bHMLnt0TPVLqv6WEpfLdC/e2aZ0uckdS7235WxKl/9ZPzCX5xrO/+95I+O4
b1sn25Quh1qnvxwQZlO6fKv7xfCbs1V+i8dvO4tc+cKmdNmzWe7hH62IV7rc
vXRY6tMG8UqXk9/l9m+/Ml7p8u9tEgPX59e6nFjc81CDczaly6O2nbANGah0
1tqp7atLvmvjlS6neDW60+N6rNLl4xvrjt3yOFrp8vcTh6Rk6xCjdLlGVOuy
pbvcULq87ceIVi9m25QuD3pccPeda0oHrf1LPz33Nile6XITa7/JK8NjlS6/
SFkyr681WulypyYLLWMPRStd5vxoF5ePdv3f9UmzoP6sy2gv6zL1j9Gvae79
afSL+t/8Po2X0S8aX6Nfo93ng9Evmj9GvzDfWJf/lvnJuuwn85l1OYfMf9bl
j2W9sC5jfbEuW2U9si7XlPXLuvzRL+/XO+tyC9kfFMeW/YR1mfYfo1+v3fcr
o1+0vxn9ov3Q6Bftn0a/mrjvt0a/aH82+oX9nHUZ+7/i2O56Ydo13V1fTLtI
j0y7SL9Mu0jvTLtIH027SE9Nu1h/0a42I8qd+uZRnNLlnOPL1Q7teUPpcq5x
D2fkOxqldHlOnotxxbdFKl3O8+1nnjOTVH6L37N89pq3o5UuW8ZveunTNEbp
8pzo3MsTlscoXb6w7mTPwlExSpd7d3gSs8rvptLl1S2z7Og2NVbp8usW348v
tjxa6fLv284PP70tWulytZobFwdkj1G63OZVv5xjf4pRurwsNP+nCTlilS5f
yfjNliYbuD5plm+79XvQue8Npcsbxi4OiLp5Q+lygWwJS+Zk4/z3rL1vXvmi
zMBYpcshHTd3+DgmRuly0XHb555sF6N0eeaiAsVGhkcrXe63+N3eKROilS5v
PuxzeEJktNLleTVOVTj5WOmatfixjamlY5UOWms+bvXsxW8xSpcDotpWvTks
Runy5dCm/dcUilG63C/4p1fT90crXbZGX8taY0Ck0uW+/WvPXBUcqXR5kb9v
7oIzuT5plk0LM8968uKG0uX1w4r/vKB3jNLloz9cXLv8TrTS5Z6VrVHFTiid
tY7b/rxueolLSn853fy/CZWD+v/fv5tmQT1Zf9Eu1l/qB6NT1G9Gp6ifze/T
uBidonE0OjXSfdyNTtE8MTqFecX6O1fmIevvJpm3rL/9ZZ6z/k6XdcH6W0TW
Eevvn7LuWH+xTll/C8m6Zv3dKPsA6y/2DdZf2meMTtG+ZHSK9jGjU7TvGZ2i
fdLo1Cv3fdXoFO3DRqewb7P+Yp9n/SVdMO1q7K4jpl2kO6ZdpFOmXaRrpl25
3XXQtIt007SLdRbtKh945KsGS6OU/mYodfTPYYOilP4e6Vl1V4o1Qumvn6Pm
wu1xfyn9XXiq1p4abS8o/c10NueNJpcuKv0dn5rpp2vRl5X+7gm8VWpQ0jWl
v+XqPL847ni40t+AO4HefuOilP6W6N4qtV3dKKW/p7KUOLq3WqTS39EHik8+
vzdC6e/5WtvG9f8tQulvmEdcgV4hEUp/E17Wz3I5OULp7+wVl9u0qBOp9LfZ
1+8qVdkRqfT3n/HVe/1+O1Lp74JFlzt2Gc7571kTrvWe4PVPhNLfgccG5F3w
e4TS36e+zXN+skTlt/i0Hn7W54cIpb/f7xy+qfayCKW/3f5ISNiq62/J/vHP
Q/f0iVL6G9qv8qKFiyOU/vodrVX2Scp1pb9LEhbtqLThqtLfI68Wl9q8K0zp
79MFw2o1fHZB6W+GHW22ll1wTulvu/JTa+37+YrS37wR13vcfhSp9DdzLo8z
vt9HKf0tsn1W/7BskUp/T/zp+yzk52tKf4My/9Ure93zSn+PFY5t2eLQEaW/
nI76B1I5qP///btpFtST9RftYv2lfjA61dW934xOUT+b36dxMTpF42h0Kth9
3I1O0TwxOoV5xfqbWeYh628Xmbesv9NlnrP+NpF1wfqLdcT621vWHeuvXdYp
6+9iWdesvxm+e78PsP5i31D+132fMTqV6L4vGZ2ifczoFO17RqdonzQ6ddx9
XzU6Rfuw0Sns26y/2OdZf0kXTLuC3HXEtIt0x7SLdMq0i3TNtCvEXQdNu0g3
TbugsztSL03N9TrjyWblTvaY8u6V9bvGG/8peTbJpFezzCn6fZknVv+ZbyfY
D7nS0d7BPoeiYpYkWdL+12+PzXzw/uWl//Jm+O5Rf++HctA/RYsVWZLX35Xe
4H/lJ1nvXCler2NbVzr6Le6v5s32n+b0MGtVv9Qtj2640tGf1Rsuz5tlXrKl
5f/qE+WqZ8HLm2ZHJFu+onWK7y13DGhV1rtwmrW59M/YibW2rWlovmO0NqDv
md3blWbdWfTC7Ad+rnLQbwMmtJjcydNVDn8XTe2yrKv+tP2YaE6/aaluG/Y8
hyXFlI/x6nV8Ucmeru88rV5cvuRH/3vdmBMw4JorP9LxPbb7uCdZCjZs2KP6
dVc65qH/rwHLZ61MofYmWStG7p90poX5LhS65ipf8mN842se7R14wZWfvwOn
+WkZbet1/ewrrudzS1BOr/Dwjq7y28g8sRfpGvbTBPP9qqR/UL7kx/zx9Cj1
OMsAV36k4/tzWkeWBikTR1S5qOaDZez2qL8S1v6rN9H/Wy/WJjKvfKasbXFi
SbKlm5vuu74zdx+vNOuotQutYx4m0Xi5vrdH+cZfR1QvmOe+q3z+Xh3ld5X5
tmHX6qWbL3F7D3mb9rqPl2VPfJNX31a7zeNlvsNHfWrI/Ix+Vm3i21hXfTrJ
fMB38siPeXg4Z8W/PpmcYvK3o/yoj5fMzyLxC+rmXOyaP61lfuL7Z+THvO3f
8uTYAd3V/DT5UZ+6Mp8HBVTbeTDdVR8p3+qg+mPeJtzutzdroCs/0q/K9+Go
T3WZz4Mnrhs36oBaj6r+hktP9/0haZDaT8y9BtSnj8z/5atnnbmX7ur/9+N7
KqSRfMeO/Jjnp6Z2ujPsNuf38EB+2ictF7r9VMJiT+J90tSH5rOl8Pd/ZT58
S81nc/+i9/t92+or62Xn3Nv/pA7Gue1MiDffU3CbP2lW6JH7/HGtL5SPdVHa
OfnqV6Gu8tU9CPf+tFzd96ZNtTaqP725P829mznPkkYWT+b5YFkq9wtQny9l
vfhkmFzDa6+rPvWoPshv9vObDdJvfe7Kj/SfcZ9C6lNH1suEfP75Iwq76tNS
5tsSuQeB/FgXKXl3dZ04MYn2K9c9FNQH62Vf55Ee9dckmfq0kfrg/gjym++X
avVs3rKvK7+6V+K+n1hmFOnS/0HVJOpPV31oP7Qc2ZVj5qKeSbwfmvsyqE9j
WS/JKVN6VXx4y9SnNdUH+bEuCrwutbeU3ZUf6eb+i/v+b+n/6HS5aZHcnx/c
03Gfz5bD+TN9+jI2ieezyY9zTlNZL+kDtsduK+0653wl8x/53edPmrWBnIvc
54/rfhDKx7poX+pJnSM7kkz5fL8G5WO9NL5epIX/fu6fY97oH5oPllwng54P
PnmL54O5N4T6QF8KL6pbIN8UV306YL7JfHA/B96z5h76yn7i5S06B7ryoz6N
ZL0Et75V9nKIqz5+VB/kN9+NSPnIz/ebUJ96sl4WSvmoT9v/qD/WRU7pH/f2
uu4roT5VZb2gf2g/sfB+gnXRTsaX9kOTH/XxlfWC8XWvv6s+yM/rBfmRjntV
tP9b0mQ+0/6v6o91seDJ/Em1Fqj5bO6Lwb9AXwbIeoR/aUj3qshHWFE++Qiz
vlA+1gX2H5TP97ZQfk9ZL0my/7j3zz5v9A/NBwv2T5oP5j4a6gN9mS77J+pT
l+rj7u/uWZNl/3f3d//qjpxPaD5bDv35eeOnD1z1wXkM9+CQH+uijugXzX+T
H/WxyHr5TvQL9ekp8w3nT+THukgV/UX+DpQf9cF5zCL6S/uDqj/WBc4PtB+a
+32oD85jj7q3mbHzD1d93o/v2ZC2ct5GfqyLM3Iec8/v4YH8tP9bcF6i/d/4
3C3vz2PG/waKv0j/j3ttyN9Y1gvOe8jfRuY/7vERH7BCv4gPmPuMKB/rAufb
dOJIS+U+IPWnJcflqhFzeqZwf3pzf2Jd4HxO88HyUPwg6lNT1ss/7YbMiPFM
MfXpLPN/odxDdO/Pe9YB4i/SiXchP+oDfYG/oPls6oP8WBfwR8jP9zFRHznv
WV+1HFfr+CtXfVpJfYKp/lgXu8XfpROXS5X7lagP9CVS/B3tJ+YeKO2HliPi
T2k/NPlRnwayXjaLP0V9fKU+uO+J/FgXucS/pxM/xD1Q2v8tFvHjtP+b+mx7
7+vNugDnQXoLWRfgALS+rIXE79D6MusF5WCeg2NQP1hyFJ45/fGBFO4HyyW5
x0rjaEkQrkLjaPLjd2UcrWOFq7i399/5LJwH5cs+bKkinAflY96GUX0wP72F
OyE/0vG+AX4X87awcCekYx7WEA5G69TSUzgYyu8o5eM+L+0zlv7C5WifMfd8
8buYh+uFyyEd86qG8EbaJy1jhB/SPmn2VZpXVvAipA+UcQfnpH6w3BQuinSM
Czgq0tHPxYW7Ir2K9Fsf4b00Dy3gvTTPLROIG4Mnn1gY/mJaQ6fiydPzP1r+
UT+n4sm7T/T0G+nrVDz5ef+zFzvPcyqejHtqzJPn76xWaExtp+LJRa/ev7ep
mlPx5Lf9s59568/pYdY2w0suOTLKqXhyx/xfZD692ql48polf7fpH+lUPBn3
BJknf9442+qZS5yKJ+MeLvPkpedu3wiZ61Q8ucCon9+MWutUPJnLAU++7x+b
2XFN9YPlx4BhK0JsTsWT750v3+CTo07Fk035xJMbl2685/kzp+LJuEfMPPnz
uQn9J1VLVDz58bHVOzzLJCqeXOZInx/bl01UPNmUTzz5eKXthUMaJyqejPuS
zJPrHPAfOcqH6/ncsq1baJ1i+RMVTz4duXf++aGJiieb8oknD64dNK7t8ETF
k3FvmnnyZ5lP/jIpUs0Hy8L4Tumf/tv/zJNzFZy9r+C/6cyTeR5iXmVf2PLQ
yT48Xq574syTM2VYO+5NilPxZNyTZZ6coVnWzBUmcHsPeZv2Ek++liWs4tuv
1XiZ++PMkzft/7LC3Q/qA56M+93Mk1Ozt14TUzpR8WTkZ57cqP+c9cmVEhVP
xr115smZlza/FVRCzU+Tn3nykmmLv2zmk6h4Mtcf8zbHhPR+QR8lKp6Me83M
k8d7bdtVSq9HVX/Mc3vElQz1wtR+Yu7jM0+uEV9z+4ZDTsWTx8r9a+bJ0d5p
weV+5/weHsjPPLn7jMtDV8xV+6SpD/Nkn3KNvjozUc1n824A8+RJyZ5eS391
Mk9w3a8nnvxM9Ih5MtYX8+TAq6XeBV13Mj9R5cO/bM1w/FDqatWf3mOoP7Eu
tl2YuGHzRKfiyUFyL555co5ph/cP+qA+9ag+zJNtTd5GbRznJH7ywTsDxJMn
td1+aelYp+LJn8n9febJd7YN9JnShPcr1/sJzJO7NRicNbKeqz5tqD7Mk0+t
nlB2RE4n80PXewjEkzs2Xrh8SRHuT1d9mCdf2hTa6m5ltR+adx6YJ99+u2/w
ipMOU5/WVB/mySviT66vfcRBvPSDdxuIJ/+R4XTDv8aq/d/1vgTx5I1bapZ8
OUDNZ5OfefLdlKC/l0xwKp6M/MyTcS5ynz+udy2YJ7+dPe75oepOxZO5P7Fe
Vm7+fq59OffPMW/0D/Pkv8+M7NJ4g4Png3nvgnnyD+WbNP7mM6fiyXiPgnly
5ztzBq467VA8uRTNZ/j9kJZrptVY7aqPH9WHeXJHKR/5+V0O5snHpXzmyVx/
c/9O+od58jjaT+D3p0v/0H5i4f3E/D+LjC/thyY/8+QVMr7Mk1Ef5snLZb0w
T8b+yTz5jsxn2v9V/bEusi7rlNZvi5rP5p0T5slHZT0yT8Z7IMyTs0n5zJOx
vpgnh8n+wzyZywdPTpH9h3ky+od5cqjsn8yTcd5gntxJ9k/myagP8+S7sv8z
T8a7KMyTW2369En9tk7Fk/F+C/Nku+gX82TkZ548WfSLeTLOn8yTob/Mk5Gf
eXJO0V/myVx/rAucH5gn47zNPDn2oz8mXV3mVDy5gZy3mSfHyHmMeTLyM0/G
eYl5Ms4/zJPhL5gn4z0W5sk47zFPxvszzJPXi34xT8Y7PMyTE+R8yzwZ79gw
Tz5w43SbtI8TFU/2pv7EuvCU8znzZPhB5snDq470WvDSqXgy3s9hnvyx+Avm
ycjPPHmp+AvmyagP8+R08UfMk/GOEPPk5V6zAxZ2SFQ8meuPdQF/xzwZ7wIx
T94q/o55Mt4vYp6cWfwp82TkZ56cUfwp82TUh3nyUPHvzJPxfhHzZPhx5smo
D/NkcB7myeAAzJMbit9hnoz1wjwZHIN58oD5IzM2bqr6wby/xDz5hHAV5snI
zzy5lnAV5sl3hfMwTy4nnId5MtcH87OpcCfmyXgninlyWeFOzJPBwZgng4Mx
T0b5zJMLCpdjnoz3qZgnPxAuxzy5k/BG5slfCD9knox9lXnyAuFFzJPBOZkn
vxMuyjwZHJV58gLhrsyTwXuZJ4P3Mk9mbgyeXOLaoCtXdjkUT/74zPqJPt4O
xZPbpZXycHzrUDz58a9PLvZfbFc8Ge+rME8+1Gykb1uHXfHkPG3PRwSMtSue
7HdkxdxMXTg9zHpy/85BGYvYFU8uNrBHlmzl7IonTy23qsOzanbFk/G+DfPk
Wz3nvW62w6F4Mt6PYp58P3H3k4N3HYon553lW9FvgEPxZC4HPHluVd+sjauo
frC8azzTUayBXfHkC+1Ob/m9nkPxZFM+8WRL4WJnQ+o7FE/G+1fMk59Ztw3t
tNeuePLccrbN9v12xZMd7WZumF3RoXiyKZ94crs7G/03V3Ionox3t5gnrz/f
8PP2d+yKJ6/JUnd0aIpd8eT0JhOqf+56/8fwZFM+8eS8+3OXs1Z2KJ6M976Y
J99qcatJ+gf1wbyq0etepvHX7Yonj6rZaVmrFXbFk4vTPMS8Kl2gV95OW3m8
XO+bMU/+Y8LYtw+j7Yon430n5slXju3Ltacmt/eQt2kv8eSGHZ622FtRjZd5
94x58tg39aceD7Mrnox3yZgn9wu+b/3rql3xZORnnvz4Vu9Vez6YP/AveG+K
eXJIgde1x1ZR89PkZ57c6MznPhnC7Yonc/0xb5NXTS30+lu74skB8h4X8+T6
R8b2qlJZrUdVf8xza4FnZZ61UvuJeUeOefK0gzubtCllVzx5m7wbxjx5b/DN
CpMKcX4PD+Rnnty/Tqv5i9qofdLUh3ny4LV91t2foeazee+OeXLdh2Vu5bqd
oHiyeYeNePIj0SPmydjnmSdPreXb5vfyduYnqnz4l/nHvlk5JbPqT2/uT6yL
u0kV4maUVPPB0lfec2OeXP+w5+WZRe3Mf0x9mCfvfljmXNKSBOInH7yPRzz5
eOyFbldH2BVPzirvzjFPLuOx/s3lAN6vXPmZJ3c+M2n9zQqu+rSh+jBPztut
4/Ni923MD13v+BFP/tK6el6PXdyfuv5YFxPveActyedQPBnv7zFP3hs4uUTg
Vld9WlN9mCd/0So8W76lNuKlH7w3SDz53NArT8p841A82byLSDw57FpSxmnL
HIonIz/z5Ow30lI+vWVXPBn5mSfjXOQ+f1zvMTJPHh0d++hBe7viydyfWC8/
jlnXtvBe7p9j3ugf5smea1r4j7Oq+WDeaWSevO9U6sKS4QmKJ+MdRebJpdJz
/TStdYLiyZ40n+H3HQtTbKGervnsR/VhnlxCykd+fk+SebJTymeezPXHusgu
/cM82Z/2E/j9PdI/tJ9YeD/Buhgj40v7ocnPPBnjyzwZ9WGe/LmsF+bJeMeS
ebKnzGfa/1X9sS4q/lRv53cFHDyfzfuczJPPynpknox3LJknV5DymSdjfTFP
/k72H+bJXD54MvYf5snoH+bJeWT/ZJ6M9z+ZJ1eR/ZN5MurDPLmc7P/Mk3E+
YZ48Ynpq0fJ+CYon491R5sm7RL+YJyM/8+RQ0S/myXhHlHky9Jd5MvIzT24g
+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
8on3DqsT2mLngQjFexFXl3nvuZo5lxUeGK54b5GZsb/7LQhXvHf5+B+bvf6g
/DZcPvFe2/FxTWpvjFC8F3FIFe9Nebyt1blwxXsPtZow6fq/v8u8d3tqeuCT
dxGK9/I8xLw6Uu16m1lVoxTvRfxi5r2jy2b4c1OFCMV7u0lcV+a99s058+7f
zu095G3aS7x3VrkyDy//osbLxDVm3nv/n2x5a5cIV7x3ucSfZd6bf0P4tu23
ryvei/zMe7d23dz7wo4IxXsRT5l5795rnbtOP67mp8nPvDd2afSYjqevK97L
9ce8LX2zQKcvz11TvPdPicPLvPejUsXHn0iOULyX6495HvCF37KgALWfmDjR
zHv3+1yOzl/omuK9ryReMPPe17OOR3bKzPk9PJCfee9X80b+OGSH2idNfZj3
bq/Wss2Dj9R8NvGsmff6BP8RWi5PuOK9VsRfJt7rL3rEvBfri3lvtmPHs8d4
X1e89wSVD//SMPemPvb0q4r3vqT+xLpoXiJPoYi/rijem1niODPvnbnsfP8h
1a8p3ov6MO+d/bTyjDX/1sudn9yzfoe41cR7Dz+MCmg76LrivR0l3jTz3sgS
fgm+AdcV70V+5r2Fpu5p1G3UX4r3jpf6MO9tl/GffrdOnVa89xTicRPv9Skf
nP7u9XXFeztR/bEuavt2X+t7KVLxXsTdZt477PKw4fsGnVK896TUh3nvf+S3
nKT6g/fuHRDQMSgv8/MP4p4T782SrVXBNyOjFO9Ffua9zoGbb07PEqF4bybJ
z7z3gZyLiL+ZeOvMewe3mF++U2i44r15qD8xz0fH3Sy7pWao4r1W6k/46zWr
xt0fUues4r2nJT/z3jvtZuXIH39V8V7ET2feO6BA2Qu2pIuK93ah+Yx53lfy
oz5IH03zGf46SepD69fEi2feu1zay7y3E9Uf62KE9CfzXg/aTzDPh8p40f5m
sdJ+An99S+YP7bcmP/PegTL/mfc+lv2Qee+iXqfzzjkTqXgv5hvz3j2yXpj3
Ir48816Uz7wX64V5by3ZH5j3cvngvf/RXm+0l3lvC9nfmPcelvMA895Gsr8x
7+0k9WHei/2Zee9UOT+o73vHfb/t8+NnFe+dL+cZ5r3fi74w710o+Zn3Ql+Y
9+J8yLy3kegj816L5Gfe+4PoI/PeYKo/5jn0nXmvn5yHmfc+LHKv76obVxTv
fSTnYea9z+W8xLwX+Zn3WuQ8w7wX5xPmvUfl/M+8N+BOoLffuCjFe9vKeYx5
b7Ov31WqoubPv+tC9IV5b2Y5j6nve+X8ybx39orLbVrUiVS8d2CpTzoMP8T9
c9b7MfUn1kUROT8z7+0pfo15b9HY+WO8WkQq3pv4sn6Wy8ncn/es++X8z7wX
+Zn3XpfzP/PeXlIf5r15xL8w77WJ/2Xe+/OGiJRZhyIU7+X6Y13AfzHvDfOI
K9ArJELx3nviv5j3BgsfUN/3in9k3rtI8jPvTRD/yLwX9WHeGy/+mnnv+Vrb
xvX/LULx3l/FLzPvXSz1Yd4LDsO89434dOa9W8WPMO/FemHeW1Q4A/PeA5P3
N7+9QfWDZfSB4pPP71XjaPlWuAfzXuRn3vuXcA/mvdeEwzDv/VU4DPNerg/m
5xXhQsx7j2cpcXRvtUjFe88KF2Le+6twKua94FTMe1E+895uws2Y95bo3iq1
Xd0oxXu3Czdj3ptPeCDzXo+G7/ke817sq8x7DwvPYd5rFQ7JvLejcEvmveOF
czLvPS5clHmvXXgs895g4bHMe8F1O/1vvWQyvDdLUt93OSskW/55315wPCvi
FSI/uOLijd2CxzdxpSP/V15jd+x6cMuk4xxb9P74r+7cuGXKb4V9QOInIj/S
76yf9LT8OVc5zWQcG1b6svPAeFf6+1E85L3oSOLBzU9d6d2l/9N3NXr8aSNX
PTtL/w/esLryxDmu9IbS/+08hi9eV9RVH/jHWv4NX57c40qH3/RdWqG6R44U
k47zcPcL+YdbhrvSsV8tnhN44XGjlH/3rfc8EPVcJ/EW30n/YFyyf1ekz+HQ
JJOO/n96LOjGmP2udB4vpKP/41Jvz7nZKtn8LtpbUOJOvvuPcTH1kf6/enP3
x11Gu/Kj/xFvFOlo16CRpwt+Mv+2Zaf8LvpttMTfRH6MC+KcIh31bDorIPXl
n650jMt8ieuKdJS/qOzUuj1siBurxwX5kb5M4u0iHePVo8r6iJO//dtvwqnQ
rg0Sp7WTcCqM18V1f8bn8ko26Riv3St65mlaKcWkY7zmShxbpGO8vPP2bJLa
7rbl7X/0D/JjvB5I/FxTHxmvwt0rtyx37LbwNMNnrA6J74z8GEdfiSOMdLS3
08gNV4dk+XccpR/Qz4Mnrhs36oCrvagn4k0jHeN4af2S0VGXXPkxjvUlvjbS
UX7UltknHzmTzO9iXBCXGfkxjqMkrjfSkf/09VG/x65GXOZkM16VooavWfEq
2aRjvELbZLgS7Z1i0tFvduk3pGO8/JJq1C60LtnS8T/6AfkxXohXbuoj4/Vj
zjntO6z7t73/+zsGnmBd3Hr8+UzlXfXHeCFOOtIxXoPXbH0XmH7LpKM+iFOP
dIxLnn+yXcgb5krHuPw8Z/zr8edd6RiX80WqFy767Jal/X/0P/IjPX3XXa8T
JVzp5vz2aMPNPSuTzPkP41KjjC264TrX/WGMy6rAI2977nbl5/5BOsbl00r9
PfPdv2XS0f/zs7fvWPqAKx39f7zYs82FN7vS0c+Pqqx4mWupKx39fELyt/6P
fkN+9D//Lvqf64lygqld6P+V1A/o543LX9XcV8PVb+jnmtKf0v8W9DP6H+no
53Myvkg3/ew+Hwynwvz5/kyZyk1SD3hze5Ef/U/z0IL+p3lr+Y95bkH/z5L1
0sSd+5m49siP+tC6s6D/sX6Rjv63ua93U/5J2R/a9Iqr373tX97c/8iP9M2V
Mg67195VDsYF+4/8f4cZl1OyXyEd4xIt+yHSMS7YP5GOcbks+y3S0f/+si+Z
35X+7yb7/Fv3c76Jn478GJevRC+QjnEpIbrj9x/9ifwYl0eiX0jHuDRy10Ef
1B86iPwoH3HhkY7xgv4iHeOCuOdIN/oiOi7/b+uDcfGWuOd+/9EPcn4w+XvK
+QHpGMef5XyC8pE+1v1cpPof6Rjf5u7nItU/pj4yvjiPvdepTKb8unK+3S71
QfmF3c+HPv9x3vPBuF9xPx/6YHzpPOmD8b0h51LUB/UfIudz1Af1X+9+TvbB
uP/tfu71wbg/kXNyt/8Yd+RHOuKhIx3zAedwOc+b8cV5HukYxxbuvkD1M9LR
z+3dfYfpB/Ipph/I15hxIR9kxsVbfNP7/z/S/Yb8GC/yX2a8iouPQzrK6eju
+0z/L3X3iaafo7M2CGq6wpWOfoYPZX+ap3Id//n+TuVPz0t8IvanvnP6vbWm
OJQ/7VRiy/dfHnOlo/8dTfw79TnsUP4U8ZjYnwZ8W6x88D5XOeb8EFD9RctQ
VzrGJft3vmcyhrvSMS7bT78881kWV/3R/01ybj/r3ciVjv5PqlDk57RFrnT0
/6xmC745dsuVjv6/1KBz2c8yuOqP/s9Ts/DdH0q40tH/07Lu9i2YNVH5U8RV
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
f9ps5cxl4T5xyp82i9gyuHKPWOVPH268cGf1uRjlT1PkvWj2pysD7w/NWitG
+dMmQ1tM3t/MlY5xedB/04IeXV3pGJemG+3X7zW7ofzpqoRiBb6vdVP50wWZ
u56Lq+iqj4kvU3VBUN1SLp9r4tFU/ORN596udPMdafnpUwJXuNLR//s6vqi5
57RN+VPEfWN/mue4T8j3T+OVP/X6OiWkxoB45U+byXixP12+b//aP36NV/4U
8d3Yn+Idb/anG18E5v2svE35U7yvzv70myJbm+340ab8KeK4sT/Fu+7sT78s
1G3c3tM25U/fyjv27E+bvPq1ZZNIm/KnGBf2p7MlvgD70/DXDwZuD7Ypf4q4
aexPS57ptGWmvysd47W8w4MGlU660jkuHvvTV/5pe7vF2pQ/Rf+wP0U8O/an
nTy3Ddjwq035U8TXYH+KuAnsT5/8cOxll+425U8Rv4z9KeLBsT+dlfr16b/t
8SYd44h4Z+xPa9R8WGPSkHjlTxF3jP0p4o6xP/1l0cPKpYbGK396qdb4PA8+
8HEYrwr9ki+EL7Mpf4p+Y3/aN7Vn11gPm/Kn/+x93w/sTxGfhf1p0dNFel37
PU75U8TPYn+KuDDsT68/OFb1H0eM8qeIy8P+tMTCDnu6lYxR/nSqxCFif3rj
854/FugUq/wp+p/9KeJtsT8dUSXnkewjbyp/OiDrj38862lT/jQ8cGepsJtx
yp8ivhLSzb2SzmkfvTXxvFz+FPGbzO9K/2/Otzj57h/Ryp+aeF7yh37eIvnZ
n5p4ZPKH/uffRf8Xo3qinKbULvR/JPUD+tnErZM/9PNA6U/2p8Ol/9mfYnzZ
n05znw/GB2H+sD9F3DT2pzQPjT8Kd5+35vx/232eGx9UXNYL+1PE8WF/2sl9
3Rkf1E/WL/vT0e7r3ZRfUfYH9qfof/aniAfE/hT7D/tT7FfsT7Efsj/NIfsn
+9M5st+yP/1Y9mf2p89ln2d/ingx7E+hF+xPO4rusD9Ff7I/Rbwb9qep7jpo
zu3QQfaniIPD/nSN6C/7U8R5YX9aTnSc/SnivLA/RT+wP8X5gf2pj5xP2J9+
4X4uUv3P/rSy+7lI9Q/706/lPMb+dLqcb9mfjnI/HxofROc944PofGj8Dp0n
jd9ZKudS9qer5XzO/nSS+znZ+KMm7ude44/qyjmZ/SnGnf0p4r+wP8U5nP0p
zvPsT8kXqH5mf0q+w/TDSnefYvqhibuvMeNy390HmXGBb2J/2sTd35nxIv9l
xgs+jv1pc3ffZ/rf190nmn72/XrAqe++cP0u+jlYfCj70yqjt6blLBen/Cne
e2R/mvNl1vihc1x+EPlzjXs4I99R1/1W9P+lpvFVC38Zpfwp3s9kfzonz8W4
4tsilT+9EjL2WYfmrvIxLnm+/cxzZpIrHeNSq8rqFzcHuspH//s9y2eveduV
jv5vc/jm0Pr5Xe1C/1vGb3rp09SVjv5PKt/zXM4RrnT0/5zo3MsTlrvS0f8V
6g95nXY4RvlTvIfJ/nTSpXTr67s3lD9t1fJ0zmNzY5Q/xXixP+32qvTTgPXR
yp8iXgz7U4wL+9Nnw2tNLXwjWvlTvAfL/rRR/hnXnrSKUf4U76OyP8U7tOxP
A3uHfFohLEb5U7y7y/60RqJXj1zdYpU/nSvjwv70iryHzP60aBVHyzCPG8qf
Ig4L+9Ne1iPTvxxzw6RjvP4Y7fdN9JFYk85xdtifzi/wR0jeErHKn6J/2J8i
Pg7702H9t45I/DlG+VPEQ2F/ijgy7E+vZuzTeUWuGOVPEQ+F/Sniy7A/fbZo
bvKLra50Ew9C3j9nf/rD5s8OpP07D9mfIo4J+1PEMWF/Wmjs9Edr+8Uqf/pF
1LggzzMxyp9e7xe26O8FMcqfot/Yn65vc6FlgyYxyp+iH9ifIr4M+9MVXwza
82lytPKniMfB/hRxTNif5jq42yNubpTyp1aJO8D+NFfxj84nT4hU/hRxOtif
pjqPt47NGq38Kfqf/eliiTfB/nT1+G1tPj4eq/zprldjCuYpE6P8adbYZn/c
iIhW/rQH4qfIH8Yly8n47y4PClf+0cQfkT/z3SnigKA+Mi6cjv7ndPQ/p6P/
x1M6+t9T6ol0c3+B2oX+Rz8k5Zxa83Lpc96o/wQqH/1v4uPIH/of/cy+dZWM
C/vW1zLu7Fv7us8T448wr9i3oh/Yt550n5/GN+V2n8/GF9D8N/5opawj9q2I
R8C+ldaj8UdY1+xbR7rvA6Z87BvsW9H/7FsR14B9K/Yl9q0FZB9j3zpD9kn2
rf1lX2Xf+lT2Yfat02W/Yt96RfZ/9q3QX/atiBfAvhV6xL4V/cm+Fe/2s28l
fTTneegj+1boLPvWY6LL7FvxXj371q9F39m3Iq4c+1b0A/vWInKuYN9aXc4t
7FvpvKT6n30rnZdU/7BvbSjnNPatjeXcy77V1/3caPwRnQONP6Jzo/FBdM40
PshPzqvsW3FuZ99K52fjm+g8bHwTzs/sWwvLuLNvXSPv2LNvnSznc/atX8g5
n31rsrtfUP3MvpX8iOoH9q3kd8y4kD8y43JZ/BT7VvJ9ZrzIl5nxuiz+jn1r
Hnc/aPo/t7t/NP2cc3y52qE9Xf2JfoY/Zd+69MKRmZ2nRCnfGirvVrFvjW84
pmaFJa505P+9Z9VdKdYI5VsDypX1Wud3TX/3K+90sW/1c9RcuD3uL+VbR3c8
VHxEXlc6xmXhqVp7arS9oHzrxaalT9ef78qP/s90NueNJpcuKt/ayD5335yO
l5Rv/S4100/Xoi8r3zp0RMrAK1evKt+6N/BWqUFJ15RvHRox7OWDa9eVb90i
73qxbz1X0ra6k1+U8q2B+w7GvjsYqXzrKRkv9q2rbcWL/PkoQvnWU/K+GftW
vJ/GvnXdM+d3+X+LUL4V79qxb/2riI+v/XCE8q1n5Z039q14T499a9SkuTnz
XY9QvjVB3g9k31qzxccVs30aqXwrxkX9v6q868i+ddCb5Ab1AyKVb8V78uxb
fWdO9cu0M9Kkm/t01ZYln6vtSud4AexbN571970VF6F8K/qHfSve+Wffusuj
a+6LWyKUb10q74iyb8V7+OxbV13ofrfMvAjlW/GuO/tWvIPKvrXPxPs1G8x3
pWMc8Q48+9Z7+7eefFAiUvlWvMfOvhXvsbNv3f/N0S0VPo5SvnX+gmpxlpBw
5VuvLWk0+Yeb15Rv/Vn6jX1r2WG5B97eeln5VvQD+9bf5V1c9q2Rp95VDGx/
UflWvCvOvvWpvMfLvjV19c371U6eV741o7yfzL61wrfJw+8GX1S+Fe+fs2/9
7GCWY78UC1e+Ff3PvhXvkLNvXfDk708L1o1SvnX4/kGVzrQLV771daNKG5tU
vaR861i8Ay9/GJftc4pMW/FTqPKt7fGOuvxhXI7hPXPUR8aF09H/nI7+53T0
fwilo/9/lXoiHfUcQ+0y3ED6gX1rKJWP/jdxBOTP/L+29DP71vkyLuxbS8i4
s2/t4j5PjD/CvGLfekLqyb6V5qfxTW/c57PxBTT/jT+KknXEvhXvKrNvPeK+
Ho0/wrpm37rIfR8w5V+VfYN9K/qffSveZ2bfin2Jfese2cfYt96VfZJ963TZ
V9m39pV9mH1rE9mv2Leulv2ffSve72XfCh1h37pd9Ih9K/ZV9q29RdfYt653
10dznoc+sm+1i86ybz0qusy+Fe/usm9tJfqufKu8u8u+Ff3AvhXnCvatteTc
wr71gvt5SfU/+9Zo9/OS6h/2rTinsW8dL+de9q1n3M+Nxh/ROdD4o7Xu50bj
g+icaXzQSjmvsm/NIud29q3b3M/Pxjcddz8PG980Us7P7Fsx7uxb8R4v+9bz
cj5n3zpEzvnsWwe7+wXTz0Hu/sL0c0N3P2L64WN3/+IaR3e/Y8aF/JEZF/gp
9q3H3X2fGa9u7r7MjNc48XfsW0Pc/aDpf7u7fzT9nKHU0T+HDXL1J/oZ/hT+
Bf1z50rxeh3bJpl09ENVv9Qtj24kWbbJuRHjMnZirW1rGrreB0b/4B2wf+i8
jffHcP7E71aM3D/pTIsU9Jt6xxV+AfWxF+ka9tOE25audG7He6fyvrHxHQ3k
fbb3+9tjU3+fKWtbnFjiSjfv6T2rNvFtbLJlq/wuxqVw/IK6ORenSLsem/oP
Cqi282B6CvYr9X5pe6rnfalnGuoj7Vq6etaZe+nmHTn1fub7cqJM/XfOvf1P
6uBkUx/z/2L73rSp1ibZ+BSMSyN5L9FPyjHfpci7iG+kHLT3u3z++SMKJ1t6
SH60d1/nkR711yRZhrbp9cm8CudD+P1M5Ee7klOm9Kr48JYp39zTeXS63LTI
JEs7OVegXekDtsduK50s+0mUaVfj60Va+O+/ZWl//0y7+2dOhKBdeIezq5SD
dhVeVLdAvilJpj5oV3DrW2Uvh+BdzUMh/C5lU8mP9VVEyvFFPaVdqE8bOnfh
Hcv3+9tj064B0t62dO7CO5atpHy0N0n6LV3KQbumF+nS/0HVJEt3yY92Hf7z
88ZPHyRZOtN5Eu9zZngfJ8icWybI+Lam8wPeY/Sjdi2Vdkm8IdMPT7q3mbHz
j2RLL6kPxhfzU9av6Qe804t2ob05LleNmNPTvA+s3lFEOegHj/ZDZsR4pphy
0A9Yj53p/IP3JGUfM/3wquW4WsdfpZj+Md9byj6A/OZ7UXnnuSPpHd4PlP3N
tMuz8Mzpjw+kmHJQzyqy770lHce7iMiP+vQ8vqhkz3/3k3TSZbzXt1vyo//H
yP4M3Ud/4j1A6D7qiX0e+fndP+RH/aEXwqOMHvWZ+XaC/RDeZdXv+6Eccx+8
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
K9BPeP4O+sn69KUh6gi98BOev/M/1mB5lA==
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwtlgmwTmUYx889lqN7vmMbQpbuzXZxLdnDtW+5lpuQfc1gSJbIlGEQiqJo
DKUUarSZokWyL9mXkZr2lEJikOxFv/88z8z3zPM///O8z3m/9322zKGPdx8b
BkFQIS0I8qGnR0FQCP0iumEcBN14WTgJgj7oOvD90I3ge6KLwhdDeoMfiM2+
K7gIXFlkOLgZXGOkGms343MwXBZ4I7gMNo/yvBVcD5sO4HS4gej7sOmPHuLf
3YtNXWxa8Hw7FQT/IU3A98Ot4F1pbN5FfxCZTVpiuCr85+g62h/8Da0DDwDf
jU1TxyXBo9F1sX9SfnmeiW7L+zbo1kgIl41MA+/H5250c+x3ovOwW43uyvuu
4DfAD4I7IK+Bu8B1B78Dfkjnh2zW/4OriowHt4DLRZaCK8Hl+Llt4ltjxIE/
BX8Ibgj+Btwdm/d57ol9HrIGfAL+kdj2NQJuALIefAb+LnAuuAHvx4OPggty
4RMcD4QfC94P7qO7A88DdwDngBfqf4Fbgj8D/4nPm34XOv8x8PvAt8D1sWsv
/4mdoe50HXxF+AI8f8262uB64O9SxucHHwPfC/6XmNwLztY5wB8Fz4mM3wfO
hC+KzwVwd+BuIwdThkvCL4G/DoYKZnkMNMLPdYiJPCvuT/E+ApQCFwvN/gay
B5sK2BeGfw7bych5+O3wl9Hp8H+kmQjP5P2EyL71TGR+5f90mq3lCIK56Fu+
N+1Rd/oYkp+XzfnWKHCmx0JjbCYp7uCfQteAr+2x1yY2/mlwdbht+K0eWEwq
X5RjpRPTei6VWN4qj4b4N7PBuyKLa91NvsRyTDaK+fbIHPj6ieG5ijnf50hw
hcT86D/cC66CjPMY1h3rrpXX5TzHVQfKgxd4/NTx/GqnWIot57IS25P2dhzd
GX4ZfOXE7qYoslOxxvN8cEedA3gDuAe4DLoMa8uiZ7D+Kmf8JfZX0CUCu1fF
VRHw87yvoBoALodu6vGZg26p/wRurvxH7gnsnHLcRud10+NK8XLJYyAFXyK0
bxUOTYTTtc5j+ziLVvHtLPAR8OLI/tePygV0Oexj9HzFJ/owfLnYYm8HOCO2
ON/v8S+bQ+BWXldVQ9P8fynHOiIZgeVhL+zbga9EFreKz/HgsvB/8bwtZfEa
emzP8nhWLCu2ZbMV4jp4D0ajOfv+qvnYRNSQdfoe+Bh6r84uMLvBsXFPqFeA
d4FHgnco9rDZjn4dnxmqJ/ivH1o9r6s6jFQJLG/L+v1moldHdi8foxsrHgOr
7xX9vlQvsv088xRDfg5V0WO9lip2m3pMKt4WIcXhK7HHiXC1Aut/05UH4Bno
KaHl2mT0VM8p5eckz1nl5CykCXh2aGu0VvlzJLKcauC1XXmU4Xmjb72MHur3
qNxVreMXTI0sThS389QrE/uGcueI58tOdK3E9qr6cIJzLA1eqroFrqR9x1bT
lBdbPK4KsHZKZHGlGjU7stwpqP8VWX/U/1WN6e53oR7f27G44V5PRqBfQeoF
1sOW+JksQn+ivAIvDq0Hqm++hz6TZr1MPa0b32oG/pVvve1nqJ7aC8kE90Av
d5/yfVL9Xu/Z+MOs/Uj7Am9Ct8bmi9D6lfxf5DvDFE+B1dkRvmfVsAOR8epx
axUTgfXUU5HtU73sXGT+BuH/58hs1PvW+/86EFqeKF/OonelrC6Ux+eh0PLu
IPqnyPZ23uub/Mhfv9je98f/hZTFaw24TrGdX1ufI7R2RWgzjOajEomd25vg
TqrViZ2R5o1aseXQt/j7BSmpO4st14rhZyH6t5TVzaqqKzx3CmxOOALXHnwY
PSA2PQ7fJz2uZP8qduXBp+GyYsO/p4xXPq5B34jMj2aMzbwrFFp+pfOcF9i8
UdznS82QG/ysNoZ2pzp/3YPOQbHTRnftc47mKM1db4E7wx2LLNc0/+icxXdL
rPaqjz+r2SFltV5z41VwTXDN2GZL1XslwVe+T83AKz1/Nc8pRhVjzbVfn3M0
IykOVccueD9V/VkZ2Zmot5xKWb/SXb+A3s3z3x4bLXy+Ui/TXK0Yv5yy+Uu1
9KXQ5kndb25ifUHz+TSf/RT/fRPrZ6oPyvdc75vtEpu9Nav/o29GVmuHJ/Z9
9Sb1RtVk3ZHuSvOY6uRa8LLI+kh1n1e3sHYYa7eicwKbXzWbqZddxH+12Grz
WXCEXafQ6vNAnxXVo895jN3xGVW9YFRi96B6onqf6/W5C/qS/g9Yf/pKymq6
7quX72eo8jFlfVexXTm2/vk93KDYYixm7SWvgcopzRKa95Yrr1O2T83Dq7z+
qw+0iq3GJ/jvC+4Cn7+Q9cr8ms0iyyfFeanQvqs+/wP+rim34cNCloOab6/5
+ajHnQH/D8aYdX4=
                  "]], 
                 Polygon[CompressedData["
1:eJwtmHm4llUVxd97GM6F73tlhgQEQZB5CBBQBnEAHFBUCFGQydS0gUEezcon
S03NTMtMyzE1SiWRcgRRBhlFVHAKJUcEFdMEBEW09XvW/mPfe9aZvnP22Xvt
vd8OM2ae9qNUFMX4mqKoq/8vVoviBcm9uSj+Krld8i31N9OkLeofWxbFnWof
rb4tGjte+C7hAayN+bdJXtXc12KvbhpvXXhP+vol78ncV4RflvxJ7T9LXlK7
vsYP0HjHSlG8KdxI+CDhv2XPrSfcsvCaTcJ1hJsI/074v8LthdsLPyC8Q3iM
cJvC91ki3EC4gfBlwvslX0ku1D3mSv6n8UM13qrweWZLpJpip/5slbwv2SbR
0YrLNfac5u8XbizcoeI9Nmr9cYX3flrjH2pc/4o5ws+r0V3jTYXvEX5fuG3c
52bhbcKthNsJ3yr8H+GWwi2EbxL+pOo7crf5ko/YX/IXte+WvKP225I71b4r
u90s9E3ffdm6QUfvxdoOah9YeA/O8EfJ1qrP9oGkY+j3DvVP1v0mSc7UXSdJ
+qh9mcZ7aHxZto00SbYB3neqxheHvXwkPE74fuHDhDcJHyv8e+HBwq8K1xWe
KYxR/kBylH5jhKSr+rtJ6khGqv9Y9pTMEX5R/0dr/Zda/4bkdcl49X8nZL7G
hxQeO0v4UfYV/lD4U3QquUD935ecI/kudqC+zySl2tXSZ+As56m9QuuHa/3W
7LlPCp9YeA1970nOLT2XPegvamVHtf6N1Zy/8G8P0J79JQ3VX5GcLLlX40do
fLPGd0qf44U7CC8Qbqvxc4UPEf6XcF/hK4S/Lbw2e82/JSfFXtO091RJRb9d
lWzWfhXNb6v585gr3EX4YOE+Fb/tGuGTCr/xCcK3Cg8VHiv8huY3FW4kfKPW
d0Rvwhewh9qDJNeofTVvrPY7mjMMW0dHpe/wILqt+m6Pqv0INln6vQ/S/0/k
L720ZiX+LDkG39fYGI31kPxE7b7qW62x4cIfaP52yUPJPoAdp9L20Qg96P+h
mv9Yts1yr7rSRb1a6wBugWPQzWzNf17tseprUGtuwLawMTjip8L1hffo99Zo
/i+zuWBb8MMt2bpBR29p/O/ZvjxY+JuY3xBb0dxnquYT+KGO+i7U2FP4d435
r502vjibl3eob1nVNjuCt0+25Wuy58KZK2Ic275Z+BiN7xIeKfw4/lLaNg7H
l5Nt5P7g9wHCX1btg4OEH072TXwW370dHyvt13AjHAnHX5HNbV/qfOur5qjm
ws2TuesF4f5wKZxY+g7cRc3iIo1dHefnzsur9h3s5elkH6qvNxhV+E14m33Z
vrcSfhDeHfd7TnhmaV/GXpYn+/QlwvVif3TLnuy9VPK90hwNV6+Dc4SnSOen
xHvDLR/H/fFxfJ3f5LdXSX5YmivhZjgazrwy+27ccWnYdyfhE4k5Glgi3K2w
v8Ar3Svm/nbCH1dtj/hmT+HdwtM05wm1F0lmxHvwvnAY3Iov4bvHJfsUOkAX
J6tvsvZ+LZtbb1PfKHwlmwsfFB4h3KniWERMJDbu1fge/Ed6ryP5Qn0DIx4R
f/cLD414QXxZJ+mu9o/V17O0Te+K+IitH1uxr/4MjtL4r8M/8J9VVQttfOoX
GlspXGpuM+E/ZNsEb8cbtq1YpzsiV2kjvCHiv45aXKv5s0rrgLufJRlSmovg
pKFqr8NYk9/o4IrjHfqvUd+zGrsuO5YT09cKr5Z8UWObxraZ802N35216BBd
LiCmqL1Kfb01dxacU9rH8DVyJnKnt7O5lDflbYlT85L5bYLap0d8fEAyUe2X
s2MlfYy9lZ1r3S18ivB24RPCHuCDFZE/5eQ4jM/he3A4XL4zO/bA8XA9sZJY
wxk4yyvCA4WvFx5WOp7hb/cJnyb8UHYsmsAblT4DZ4HfT8X2NN5P478hRgmP
rjg2EaMGl74jd8VH39XcJyRdiDXkKBp7PJurJ3J+fJUYIzwFm4MPJKMiXpH/
cF50hG7g/690/31Vn3Nhdn6JLtAJuSUxkvOcLdyqdPzqIHlW/esli+JMnGVa
zJmu/2uy13YSviWZ0zZkC3fmroz1l/QLniUWkxORG03VmpalYyL22BNO01hn
4esiPxlT8dpLkzmaPXoL9yrNo+TXrUvvxZ7Ls89+fsR/7rA28lFSjl+FvWLb
2Dy2vyb8DR9sX7G99lF7nMYPKJ3T4rv48N4a2/++GvM7mBjaWeNzIrYS8+Ey
OG2YFrYpfUbOtiLiOvnKefBlvDFvPSlZr8QM9uY38CtsCts6XdKitA/NTT4j
Z0UXl4T+0clerR8U8R3bWRD2eZj69oQt0KYPmxio9Vcl+9DG7HzyGOF/ZudT
5J+c85ns/AOdjE326VXRR25Cjsrcz7X/qck6QTdNS+uyT+QnT2VzPlxPLtkk
7t8lzttF+KbkmEvshfP7Juck8+JM5HrkvJyVHLhr+Bm2152cJJnj4XrGLk72
QeagQ3QJRw+p2CfQA3puHjI52ccWhv13Vfso9X1ddb1ADkPuAmnCAfg5cRpu
IM8iHgxL1iNzhifXGKytET487vuPbB1cFOdBN+iI+HBGsu6oZw5JrjmoPS7N
tmVsmloLG/46bAXbpqajtuuRXLuS/1Frsgd7wTlwz5X4VOkYhm7RMbFtYfDL
kOCOR0Lf2Cy2+1jwUa/kt14f/EbOC3fg93AdPtw59idWtkiuXcmXGwcXb4lY
gh/hX7trXGOST8FRcBUxj9jXW/j1yKfIL/aFLzJOLPqsxrGSmpfaDH19WnUO
QS5BfUedOD/yg87JtePc7FyTnJPa9KrIV+CHjVXndOR21ATUBjdkx1ZiLLU2
OQa5xvGSXdWw4cJvjC8+GfkN49QzcDbcDWfBC+QM5A4HJteqW6I+JV9GV/At
3DwjmX/JKcgt8Hl8/13NaZ0co4nV6Khhsk7QzcPx/tSHuXSdjC2OEK5Xujbg
97FZbPfFiKc/T+ZacmByYTgD7mAP9sL/akv7Abk898W28Vl8b3ayL68OPoWz
qFWoOeH2a4WPKO2zcBf3wZcXh79x33alawZ0gU6o3TdHfL48ObaQQ5FLESOI
Fb+NfAWdbK+ad4kN1OQDSnMCsYT5cMVL2bGHGERutCLwOcncvSnyDfIlarmt
8f2BbxJ8m6BOHZ185sXBb/gyHNO4dA5ELkSOQa5BPrYhOYf/PNseeZN6EcvJ
wZfG+MSKa5Ybk2scapmjY0/2opYh5yXXIefZIfxmdj5FfjOydI57R8RP7k49
vyw536CWhCPgCr7B8C1musaXJNcc1KqckbNwprNL1+jchTudWTonW5ica5Bz
sCc1ArUBv8X3kfXJNQnnnVI61+OMnJUag7qBupLagza1xOjCfdQs1C5jCufh
fNNgjDnnx++TG5KTjZO+zhC+QfhI4W3Z3xfYg7V7Q2foblKcjZyY3DjLqWtr
fWdyUnLR6eEPxFXyRr7t4eP4Mj49WOuuD76BD8i9yamxFWyGPIwzcBZqcmrz
I4Mf4Uy4kxqS2pQahlqGHJM9WEsuR42En8HD1E7U3NRi1GR8x2AMX4SjmQOn
w+34CLksNdKi0P+Eit+TGpGaYFbYHLbHNxe+veCT7MFafJXYdk/YAzGO73mc
gd/mWwo+QQ5B7oCvwHENw4/hvv8DGDOebA==
                  "]], 
                 Polygon[CompressedData["
1:eJw1lnmYT2UUx+9MTXdyfxcVCmOZMWPfxzpmIzL7ljEo0ijSokz2JaMYZafN
UlGoKDyhp+zMDNkJ7U/WNtUYJiZR6nOec/rj8zzf+z3nvfddzvu+Nzz/6ZwR
wY7jFEEINPYcpybG3VALTgUcJyjUcdKIFfO8Gypcx/kFNqIPQjKxmzzPg7kS
o01D/LfQP6F/hJ+hHl5T3t8V+qFz4H6403ecPnifoBPR3aEH/ECbBnj1Icza
RuI3gihYjJeKVwN9F9SEgXgxeOnwBvo1eB16E7vXVy3eQkghZw59nA2L4B68
89JX6TfcgP14/Wn3LX41dFWoAlG0vWDjbIb+Ff0bNPH0PWfQZ+Gc5ND+Mbx4
YuHoCPiXd6cyb9vwt8Lvrs7Bp+gtsBkGkfcwDIZ82IGXS04IOhHdXcYF0Xi9
8Jail8Aim5cWEIVuAo3hMn2JJ+8jmXdPxyhjPQHH4Qy8LzFyesIm9Mfwss3V
IeIHoTd6Jl4COa3QLdFZkA2VfCMV/210JrGz5J+DNLxVeN+jy+Ai5Mq6Q19Y
K/VAfj24HOQ4AZ592GPvW4F+B5ZDBjnJMBfdjVgsxIEHyXhJcB90sHmROklD
n+Kbp2E4XileP7y/eL7uat3XsPWVdT7NdzPIS4dM63sWOQPQ69Hr4EPrcwI8
g34FXpX5Jqe/p7XzJPopGOHrd/fKmKAE8myNItFlfO8ilEMyeUmQYvMo4y3G
L2NextDXGfCiq98dSXw0jJI19rXu30Qvk/0n84A3mtxRsFNqlHfU9bR/B4gv
gPlW47ssXkDuNJhu6/Ye8Xdhpc1Btqd1kkUsG3KgGYzHGwdjpDbJCeXcyKTG
j/J8BAbineQbt6Ibob9Afwnt0N3w4iAW/sHbD3/Tlwae7k/Zp+NgLOy2uQgj
NsT2RV/0VWKVMAh9DG8ksdvpQxVYiL8ALtG2KbEVNj4Z5yG8m7yvIe1uohOI
r8XfDFvgO7zWeG3As70/E/8lKCFWXfYI+hq6K7oLdIK2nq6TrNdxG3cE3p/o
jlKf0B5ae1qXUp8XXD0HZe9PQk+EfTYXRehbGEs6c7qPnM/gmtWv1PFtoTru
Al/nZRd6J2z//9wgnkHbwzwfggc8PWPlXF4qex9WQ3Xa5so4iG/neQf8QV4F
XAlorLOnZ11tdF2oY2fnKnJXwiZIkXMtoHMeIWsuZyW09PSOqGNtw+0MDdC/
bPq3gefjMBjvqK2XtDmG/hwipbbwTgR0TRfa/Dp4QRBi9TUBf7z0n1gl8zcV
XY2xFRB/Vs4nWSc5A4i3RbeTcdm6FZI7Bea7+q3tsmaejsnlHaFSW76uZbTU
BrF15K6HFr7uR9mXE6GHnAWyjtAT/bx8g5xeptuh20M0VPX1TpS7McP6t412
W6G+3SNxnup89BAYHqx3yx5ySuGkq2djPV/XMk/2B/SxdXuO+GQ4TN+D8Wah
Y/EfRQ+DoRAm96XkytzLOQ+tfT135+FdYj7Lg/QbS2i/GJrbWSb3THP8yehJ
MMHmIID3OPoJGAuJnn73EXRtYnWgrq/znIqXLue21dBeW8P6nu472X8bYYOc
a66+Q/os/xb9pbZhANyB9zVtv4JvbK1kv9Wyf4Vu6F1ypkCS3Wtd5D0Q4+vZ
FIN3nbY3ZB9CCbnF0IF4EbGj1l7ec8DVOWvj610h99p5vHI5e1w9X+Telvs7
Xva/p3doK6s/qcOr5CwndxmscfX7ciYO431DpQbs/sqzcTwk5wU8GKz/PtKv
QvRUmCF3AF5H66voTujOcMTWP9zT/zb5f5P7t4J5vgpXoDSg8zKLvDkwO1jv
fandF9DTYZrVs9TLFPtuoc2BI/868g/p67na3u6P1egPYE2w/m/8B6ucSUE=

                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwtl3nQj1UUxx/vU3rydH8iSzGyJluUoZS2KaOhRmJskX3flyyvfffy2vfl
te8hVISkZaZ1WkfEVFSMpSjDJEn0+Trnjzvf7z333Pu7z7ln+5Xt2K9J36wo
iu7NF0UxWDETRXsgK9Mo6sa4wOKkEEWlkihqwXoxsCSjFbwaeH9iOpPRacq+
UcibCRlT4MdYm8A5zZkfCb6GvDX4EmM8vAV4EL2m8MB5h5xLlmF+FBzK3u/A
V5AfybK11ro368edX82ye54ER6PfOTU+BN6Y38hGpxHYFfk55OORd0jt/GHw
0omdr9+pAW8ve4AddX94Eec/sD4c/bacNQb5eHAc8hHwNujUZz4U/jS4ljEH
Pg7MYUyETwaro9cJ3pN9E5lPhY8F/+TsbvBL4ADmufBBYD/GJPhgsBd7XwXP
c4fDWWbnFcy7JWbPGZzZx/W174zb7RT4FDrF9Dbsvca8C/Ir4MPIBsBrgW0Y
g+EvgzXcbrVj+x591+Ngd37jIvumc0495gORPyPbxmaHzuA0/y59XyfnPcCe
she8O9jBbfgE2CU1m1fijif8bqfBX/x99ea70VsA3wWuYiyBvw++w1gI3wfm
MabDl4JrOHMlfG1ib90MXgg+hrGM9Qz+vgichXyJ/DExvghcor3I7kRnMN95
OcveawFjBjqj0Jmf2F3Ko/Omn7NTPo7+z+h3QrcvowCyFcgWMWJ4b2R5qd15
DmdsSO07qnHODnA+8u3ga4x58M3g8MS+axK42v1qr/wqsfXi7F3BOW/Ay8Br
ylfQeVDnuS/NBS9yh2xwZmpvrLduwhnDmFdjvifYHu19MrH4HQ5vCX+Ltcry
A2RzUvPlH5F9znhOb4msEL/9tueQ6an56jnWD3qOGI9sLKMh/AtkrzNKwgch
m5Ka73yE7DijnfwY2algPj0VfhW+Ab4Ufgk+Et4/sbhQbmkHvoe8DvLG8N+D
xxL68xkz4fm4YwF/+0V6h9Rskx/ZDfRzZffU4krxNZBzyjFawu8G16NTWL8r
e8MrwesjvyO2+NV73yZfh98OZsXmz4q5gonlN+WZhcHW5A8Zzz9lwL9Y6w6/
kWX7dU5BsDBrbeHlE+PKRdnB9K4zRsAfQ55BdzW8gcfai7HZ/HnwK9kstTj+
BD7a37cV+z4Llr/0jtJRXH4cbL/O6ZxYrtM5XyonM5r4m76gN4zsXZVntedr
36v5N/BGiem0TsxfdKbuWNpzy32x2UX2UR1QzlIOGMPe82BX5DXZO5jfK6sY
8DzfTnuRn3Ud6Sqf/AaODXaObKsc3wv5P8znBntT6YxzG8rmdRKL0X7wW8GK
zivEdq5qx0T0e6SWp2fAS7DWR/EClmP00DvGFiv63qrKn4nFlHxStbUDvAq8
kMda8dhyhvxE+a+H59hpnD8wtfUcvV2wmqfccpfn7aKKh2A+1wf5KMaz8E+R
HfIYmeXxrtq7H9nw1PL9gWCx/wB8d7B1xVF7t7POb5hYTnhIuTYY6rv0nv1S
87dVyLe5LRTLDRI7c6/ra/8++CPIU+WHYDrD1DOopvmbbg/mL6o7zZF/6z4m
n1kMzw+vlVgdVyyUhQ9JzXd2sP4B41H4CGTVFaOR5TXp6A13sr7LY1Z5rG5i
76X4rerfpfu293yi3KIcrjvnBatPqlO6w0TvbQ673WTf74PJ1dcchZ9m9Pbc
NVc5Dv5T8FjinGmp9Q2qm13Bycy7yBfQyUmtTp5wrvr5K/wMo7/nNNlT/lkP
POZ9iXJmK3BCZGet83wom+i9lEvWIFvm9pTPjHaf2ep5V/Vadbukx6ZitHZi
+U15Lzu1vuBDt7fqSN3YfFU9xibkmz1PDkgtL3VULHgMqu+YF6zfVB0fA15h
vj62GndBfhlbP7NU9Vq9BLhKeRm+SnkyWK8p3z7pdpYNE/L4QvhI+DzGcvVI
idUN1dxN4Fm3oeyf4+cvS6wub0VeImN9jnJLBeQVvK6pN1ieWp0vjSzXe4Nq
7sOK+9n6Dvhq9m5EXjRjNVv3X4t8P7wSshn6PXTyEqtNs5DHyJf5HUrCs/UN
qifwvon1dfqu1L9R9WsbOBP5FrCU5yLluJt74VPBmYn1FKXY9672RXaPDYnd
cx3nLE6tbwroLEhMZ01ifYW4ZLqbfucedGbHdh/V1OXee5RFXixj77jUa6vu
f0vG/i/ov0MJ/WZq/VqRjPWlnSLri6swPxDbfdSDqadSX6ZarH7ssvcv6oVG
gH+7n6ifqex7defrwXpQ1fGb9Vy9cWw9ifroP4L1geq1csHZqfXg14LlT/Wz
W4L1e3qXLM7eGDznev+jWP4vWFzrPurR9N9BtXh+sDPV+/8bzLbqOQtzzv+2
obBD
                  "]], 
                 Polygon[CompressedData["
1:eJw1mHf81lUVx788F/Obj/cBRVKcTIlRDkzTLJPEVY4IVEBA9o+9Ym9B9gaF
nzIEWWquHJm7vacz0xQUxVyVopZZfd58Tn+c13PPOfd7xxmfc+7Tov/orqMq
RVF0a1AUDfX79bIoLhbdlovidtETok6pKL4t3Tcl/0HIGHcVPaRxe+k7iE4R
bRXfSL/DNP/L0t8n/l7RNzS+RPSIxr2kv0bjfqKHs7+7VOPLQjZT3/ZOnvsd
0RkaT5VsZtVzOAtn4ts7RedoPFGyb0n3Q/FfED9F/JXie4p6iH4s+U9EvxSd
K/1s6QdI/l3xLcW3Sj7nLdl34OxfEW3T+CzpRmj+ueJ3it8hukDjC+NO46Vr
l3zXmaK9MuiVkh1X2oadpRsXtv1R9hk521Wi80SjpTtRc76Xfd5p4ruI/7n4
X4suTt7jktgPW/4qdJM0XiLdWs05tFYUv5DsQo0n49PSdx6YvCZr/5S7iZ8l
vr/4WeJf13kHiT9F/Grx/xQ/Unxn8b1F09lb3/xWusdEj4qmyBdTRZ2kP1W0
UbJNojtEx2vuqPi+i2iMxlmyDdLdKKoXfUnys0V3a9xGuklxXtY4RPyQwmtz
J+52vaim8TrpP6l4/a9Jf4P4htINjvOfKRqqcQO+kW6tqCDe9HOSdJvFH5Rs
8zPErxLfVPxY8ROq/v6LohWSr4yzshZrcmZkzYNn7lLx7+s8fcXX6fvl4pcR
g9KdXnr8XsX3QbZFfGN931/8WaXP+N+K92S9B8V3TLZZl7AfMUJsoLtO9Kbm
95N+iPabK/7tin3QKYi93q1Yd63oHY37SDa46hhvFfFIHF1ROldOkuwB6eZj
E/FbxDeVvX+THYvEzxx9v0D8UeIHiD9Hc8eK5mu8XrJGmt+u9Nk44xzNXSg6
Urrhkn1Vuj9mxxIx1ae0D/ElMXOPdN8XtY34vYi1xf9da/UQ37Z0DnF27nCX
dIPEXws2if9d9n26i36v8aWSLYozsDf5y5zLJB9Y+tsns8/EWfqKDtMdZkq/
UmvOFX+Q+KXil4kO1ri96HGN10t/A/4n/0QtJW8laqxxN+me05knZfuF2CRG
yZG2mvOwxpsl2yp7Hiv+NnJD/DLNPa5mGePlojmi2aLjJTsh9rif2C689/kR
72AYWMY3fLuBnBR9tuY92esW0Wmlc4GcWK/5WyS7GSI2wwYzwNJk28zkHOJX
iU9a5w9gebIPsRs5DNYfnJzbnP8ujddKthg8Ea3T+E7JjpFuh/baLtop+a7w
P7mYknObO96j8YrCdyenwaZKcq4viXggfz4n3VrRGnCD3A5cPC85ZoldMAgs
OzoZm9pp/Uc1vlmy7WGfR5LPuDry/ohkTFgV2PiaaI/olYrPgz/fqBg7O0f8
gklg54lar41oveT1pf1FbKyJs4JH/6k458l95t4X8bQ+4uhuYqXwN6yBvIPk
HUXNa7Yl591UdX6/VTEGkO/MYS423hE+P+B7allp/RP6vr7w2tR6sO/05Jrf
qjRWgBmLs22yqnQMYSswrU76/RVjXcfSuYlP8M3J4a+Xxc8QP6ZqPDpU628X
34y6F/gAlnWIfNpS+MzkKLW2WeQuNXqO+AuSazcxRWxRDxrWXMOo5dR0ahs9
ALXkmOTegBoO9hyWXNvJGXJno/jD9f0RooeILclWls4JcgPMr4/9FpXOSWKb
fJghOkrjZjX3ANivSXJvgOz25Jxh7tHid8X6G6q2Mbamp6G3oaZdH/kyS/Pb
B36WxGg2ZoAd1KzN0XdQGz6fXIepC/QOYCbYWWq9lcn5+umac4hcWif+EPGX
hz1OFf842CzZNo1vkmxh6b6HfKano7drLH195GN91T7El9Rz+iDWYC36MfpC
agC1gG/4Ftqs8aaoD+QsuUsN3JVt8xWiJuELeiJ6PexDr/Qv+pHsOcxlvDHw
D9mA8H9/yV6Jvop6drn4Z6it1EyNV0u2QLoG2mO5+OvEjyxNI0RFzTrih17y
Gs35Wbb+wFzxr4mvaM4i6gExKHt8Svzq5B5sYmmaEHUDHT0NtQz/0Ou8KhpM
fyPaq/HHojnJNZfaO55407ivZC9l+ww/zo5a8BmNd8b+08T/WXOmUp9FL2bP
XRXxxzf06fTL3SR7Vvo68XPF9xD/fPYarMWdPsmucdS6NZJN4VvRYo2HS7YH
7Mquh8jQDRPNK3yf3dkxkaN/IVapq9T6UZK9lW3nhcn7YcsTpL+6ML6Cs09r
zosVvwF4C1BjwUYwskXN9Ztaj3+p709l34078jYAfwZqfCx3yO4D6IcvSq77
+AdfjdX4TelmZ/fr1MRBVec19iVnyd2nKq7l1PRGpWPi7GSMIVZaBF4+rzmT
wbOIb/CQ3mVJ4BWYDrZjc2x/lei57DcUPsI3PcH1yNd7NW5ds0/x7VLqU9Ux
MVf8wsKxMjvq8x3JPcKRpd8e3Im7IUNHzaB24MOhyTGG/+aJ31dxPaOG/IP6
mv2umFy6hwOrweyW4v+SnWsHcg7/V90Lfqg5E6T7EzmY3JMNKV0jWXtf+Jda
AhbSA1FTXqaHS47JoRFPQyOuX8i2F2uyVl3YCX93T35HMmd+cgzybZvSvTg9
+TTp7s/GMjCNXmVKtq/w2eGlMQfsoQeiF2L8AHhVWIYNsAXvkFxzzaP2sT69
P7Ibwz/MrQb+0ROPLt1Dbwv8Ib+nB56A0WD1uNI9NNgIRr6L7YlT0dsafyB6
Vns9U7EejKtLrolg37+J4fAn8QCe3xr5C97tk35c+IN+Fxln4UzMfT07N8lR
3nqtw34vaL+p2VhGrpPzYNoC2WR+1X7bHfWVmkGtODkZk8FmbIgtj4/8flrr
PVnxfReInyH9/uwYJ9bJb3ohfIZt90ePxJugdXKPSK84MftsnHFg1b0R+EAP
QS/Bm5S3KW9s6gf1GRyiVj4WdFpyzUbH+5j/BrgTd+M/B/57uDo5H+lB6EV4
8yyIO3P3/8cq/0FQ+6iB3J/79tLaL+mM07NznFynps3V+u+Hf4kP/I6P8TU9
93Bio3QsbZDsI2p7aWwin/lv4cCbXXyf5FwEw/4afgLbuke9AfPAvvdiffZk
716l/0ugh6eXby6+d+H8BAtuze5/6wr3eoNLv/2oWa/GXsMD/9nzHfaOejoq
cpdcpiaRw03FXxHxhO+IUbBra3LsTo77TknGHu7M3anx1PqbsnsheiLelryT
ORtnXBH9A3iyI7lXGBH1iBpDrSEHsfWkyC3evLwfeSPwViAfyJUlyb0CeDxB
/JnJ/3XNj3yhh6BW94j+BJ8SN3+L/BqfjJvUe2rD+cn/xYwp7Vt8gC/oIfbG
OUdGfSV3FyfXVmrWR/F/DLWMNyT1Bx/VxGdRV413Rz41wedRf8A26hW5Rs5R
W8FksLknNVH8h9Ev4CPwdF7p3g88AKt4E/A2eDD5LcMbhV6Ynpi3y9TIP3za
v+qemt6afo7/Noj5PbE/ubCt6t6e/OTtvKxqLMJm2I43Nm9tMO6DsM2QwHNs
tCj8wxuZHnxx1dg3TPwb2cSYmCQ2Jwe+Y5N+vH1Kv5V48/H2w0f4ih4AXJ8R
/Q81n9rPm+XjinsI7A9GkTfkKthFDBHzxDqxxZuL/1p4L/EW+x9xprYn
                  "]], 
                 Polygon[CompressedData["
1:eJwtlnlUV0UYhm8gefXnJcU13HAPl/zHpdJSS620xSw1W9wVt8ByQxFUVhEV
wQAFQUBAc8Mtl8qyU6e9zmk9WamltptatrhlPe+Z74/nnPe+883cuTPzfXPb
TUoYGR/meV4mRMCqwPP+wJgR8rzV6DWwyfe8MtoOhHvei/A8z8W0V6Mv0X4Z
rkB4pOfl4hXQlkxMCmxCH8TrSFsn6Awd8TvASnvXdGJ+Q88jbhX6HPo8LEUP
xRsIg+A9e0ceei2s0VyIeQZuRK+nfQMUa954iXgX0L/rPTAXryVeW2gDO/Fu
ZR49YCu6Gd4AdC26A7o9xMC8kBtvEToJFsM/xLRjLnvRZbQV0K9Q40Ala1WO
fxRqaJsNYehrfOu/UETf7bANdsA9tCUTUwWvomMZt5pxanz3jv14+2APlBLT
CL8hLKTvMcabiJcEt9PeD+6AKtqqiClnLkd4fgU2E/MsRKGraa+BLRBN3M2Q
gb7AeF3Qk4k7ib4CVyE5cN8RTt8IqAOFePmB+yZ92yWYRcybeI/TPhamQmbI
rY3WqNJ339iV76rQ+WB+L/P8ElSE3Hu/ZZzTcAqWMFaifWck8TFaE9iIF9Cn
AdSHePpl2vzj0F2J6QZr8XIhT/tle5lle/0cegU6O3Cx6lOOjtQaak2YYwuI
hh14JcS3RbeBGNt77cdi+nzNe6PsXOt8V9g4CbRXojdDLP4t0Mt357UErxRd
yhrs5rlWZ9ry4hzjnYeLlotlilUuQsi+VzlYg94KW6AZc4qCEvRSxsmBVXCV
Phl46bBMuRNya6i1TKftLO+YhteC5+awDO8XvPboXPwl9LmI9yf8BU3wG8Mi
++5JxHyEHk7ccvRTtD0NnaETJNF2nbie6OU29tSQWwutifo+SN8HYJjmaOf5
NvRrtB2F1+GI8hWvJ/SGRcRMpP8EmOO7eX5OzMPoh+BJGIn3Gd4H8D58aPPU
O95GT0BPhDthCd47lo8p6LH0fwL+1rrjbcBL5TkNTuNNwpsMM2AFbV/gjUA/
AmO03njNiG0KC2g7w3e3RreCltBdY+PND9w6J9PnBM/Hw9x37AlcnVK96gQL
iFkIsehuyiHVY2IGMc5AGOG7NVPu90H31rpYvr8QuNxvjG4KTcyrtbyYT9sw
4ofDOvRKOy86N/8Frj42RDeC5pY7Wqsh6MFwt9WwA3g90PczzigYDTND7jtz
AldrVXNT8R4lbhQ8ZnuUrVqunNH5hh8DV9vrouuBbzmTozqGnqt5wE+BqwfK
i76MPRiG6DvwWuG1hstWm84Gbmy9Y77dN8p5395xk+VsHfJonc4Y42QrJ+Eb
nXc4Dlm05RH3JXq07fUx9FfKNfQ4vFRIg5OqkdYnX/VCOeG7XC3F2wjFsJ62
dNUO9GF51IVii1WfDN/ducrzG8CDMLtzdQ/qHdk6i6q5Nr9reJWq/cpNy33d
yYdUI3TOtaeRbs9z0Ku1JnCdfuN53zjfrZnu5lm+W/s56J+Vx/Cr7dtsvDPo
7+GHwO2vcu9j9CfwaeBqgmrDNN/Fa38T0PHKXd2feCHmcgp/FnomTLfcmkr7
FO2DvV97rj0q0LdrXaFQ/wF4EVDX9k9eUciN7ePVg/rQn7H6wVDVZMsj5bXy
u8h3/yxaF51n1RvVne6QyFjf4cWhp8EUyMKbTp84WG3/Hfo/UK5q7L3ofbBf
9yIxY3xXK3Ru0kLuP+de5QzcB+/aGRpv9UV15oT9v0Sj74IBsAvvEByEw5Z3
ml+J7keOxzbluNZP9cbusI205/Gcb94uvJ2wPdzdb28wTl90H+gFi/EC4hpA
pN0tOqe7ieuC7gwdrTZpnYtUJxVje/lW4P7d9A/XP9zV2BSrhVNC7n7QPfE/
OO1WcQ==
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
TVPczsZexO8auBbf+R8lpBHw
                  "]], 
                 Polygon[CompressedData["
1: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
P0v+uyTXcBbORM75DHrLO4M=
                  "]], 
                 Polygon[CompressedData["
1:eJwtlndYV2UUx6/w8+mH127TXC0rRwMUULRMRMRsOtDcKy1zBVqZmuZIpdQ0
zVHmSNNEtoggCLIEFExjFJiCiTlSrEQMzbT8nN7zx+d5vvd7zvve95533VZj
w0PDPCzLioCG8KNtWW+7LGsiTIAEx7Ie8bKsh8EfvsMrxFsEC2ExPItXQLs9
bstKgi54xzwtKxN9GP814v2hH6wjVgRL0C3pry20g5V4IXhF5K9CfwEVUC59
wRZivxKLRy9H/2KbMcnYgqCWscfgR8MFYmXkfY0+jfYm7gP5eHlQoO8/SSwH
2qBn4M2EWfI95P5Bf5vxN8FTPK/BXw1rYTpeBe2a4j8ArWA13lFiP+tYzxD3
xfeD6XgP4j0Ej0MWsVO2abOLWCLslvdq3WKI5VG7fAihfR1jWUFuPFyyzTu+
RW+Fb7QuhyAIvYTYUlgGf9P+OnjQxzDJxdsOI9AjYRyU0i6XnBzwJ3aJ9x9G
N6CNBcXER5G3hVgVejH6E4iAA3hzoT3aR+oEubIO8FaiV0E4lOO56MsTytDj
dV0lay2P2aaOUs+f0JPwYojFQhzMB1+8PGJ/MbZ6mIfXB68vPK3vnY3XGv0E
PAbZug42ojfAeqi2zZp8FT0VpsGX5Jy1zdqulO+Ek1Ci375V6g3bHLM/ZPw7
0VEQDTWM5yJcc5s5+EzWHgxFD4FBsjZod4v4TWjsZb5xOTlXea6DFbr+C8n7
wTbztRFvE2zWsYzGewPG6HxI3nCdyxE6v//Q1w23meexeHfInlUtc70DHQkb
HLMfZV8O1vHlQyd0ZwiABVp7f7QfdJA5JyeV/vfCITjDevEmpyvv+ZMls52c
bZLLczr+PPRcmAPHaRtHm1hoT+wgbSPlvEHfRTwdfY7Yeeig8Wh0BuwXZJ2Q
N4nYZJgCA+WbybsB12EPOYPwXofBsgfUi4Ij6N/gAnQi9go0oj8bzuMlkjME
rx59DW5BMp4fXiE6njFkQTZMwGtCu/vhXsggLw280HdCY3jLMTXtqPtD9snH
eONkPuBNXddS01L6LIEUtCXzLGcBzxVw2m2++x3H1Ooe9N3gwD7bnBNyXhTD
VcY5QGqHLnCb77mJV44eqlq+aRh6OIyBf/H+g4b0l0osGK+S5yqohgTb1F/m
4Xlix/Fi8ZJkP2qt6vW9Uuej6BIoho5ytuFdRl+EGuir8yZzU0afp6AaJjqm
blK/+7SmAXilsg5sc0b9f1ah2xJ/EtrJ2idnl23WYk+ZK3KKFNHyjS7yTsi6
1fqOxBsFoyEMWuKdJV4LV3StNcVrDs209tK2AdoTPHSOqsithEtuc4/IWELg
lNatF/oFx9RK5qYfuj+EQgptkqGbnDfEDrjNGnLTzzPgDeMdczYEortDL70j
5bzvge4JwXrmSJ1r6acOrkAfvAxYKOsO5sv5Rk4m3n7IggXqdWa//k5pvpLz
UM5QntOIp8I++Ej3bzf8y+RFyRko+wbvZcfMq8zvOd1HJXjFMneOuYfl3E3X
fk6gm9NPC7iIjpU4sR48B+udKXdnoJeJnSb2IvSGl/SskHUvd8Vk9PdyZ3ma
8zRDv6kJbVtDG9hFXRPAV/fxTtvsYdnLwTpX8XKvwizazoYPIYVYhGP+bw7a
5i6VO1W8rnjPQReX+feR+2OHrBOY4jL/SHNk7tG9YYCMk5ypeOEwTddcpm3W
n/wbyD9CC/UCdU3E2WYfy37urutY9miQ1Msx/1LL8JbCpy7zT/Mo3/w5OhJq
mKsAnpPIe4/ndyHMZe5k+d6Z6klsr2P+S9ag18Fal/mnkXt6BvoDeN9l/n3k
X2AROptYDuSCzXsaQTMvE5P/g92MOxF8dB+nodfL+Ux8IITCEfq6DRqcino=

                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJw1l2eMVVUQx+/bfY/dy7vsoUrvva5AAAFpSlUEBKRIkQCyShcUCGCB0JEm
SAvRDyaG+AUhEBKEiCJEgkpEJQQTiRqKIL0sHX//zPjhZP5n7sw5c86ZdmuP
nTZwak4URTVSUZQLXRCiaH0mipomUVSHMRU8C14+uDK4LXguYya4LrxmjK7o
noqjaA78GfB3g+dCG8P/IjbdSszb8b0eeBb4XXBD8FLwcnAFxpV0FD3MRtF8
eB3R3QbdxHgGvBG6wW07zpql0K0OfwO4pfTh58lmcBr8Hvw60MrIVIOWZJQF
50MzjArgPOiDtMmkwFfB5cDXofcYAfwbtGzG+KWhp5jngX+FTmCPDPgONheB
T8NLs/8t5j/pLAXYjk5FZNpmzA7tpbvoxKidsjvNc3tKQR+jlwU/hOYwLwOO
oHfcnirgAkYpcAJtwZm7gX9n/1rMy4NrQLOMquAy0FaJ3eU2bPtI7wB/HfQg
OouhS+EHZFqBe4NbQmsi0w76GTIDoKPgN4fWg98aWugykj2GbTH4OHS4v/s+
8Gvo/gC9wz0MBT/hKF+mzXdaIvMOtCf8PfDOIzNH50mZf+yLTUZvXR/b5sH7
ABv2Mp+t9wU/lzEf6JqxdbX+buh05s1T5rt/+Hvp3V5k3hD8MrSPY/F2xbbv
Aegat20VdAt7bIWehj8Y3Bv8CbhRYj55VOeL7S7X8/1DxQf8ldCtrvs0so0T
W28NvBv4RoTMcPQ6uA+M1j0onsDdoV0Uf+Ae0Gb+jk0UM4zW4I+hL/kZ+0M3
su4Gj9kl0DYpe9c5sfnJsthsWA1vHbKX08a/CW0fLE6yfK/rNtTP2H5NZQvf
Y77VVByCE3BDcGdwI/fbBi4r3W2x6Qs3db7W6op8afexnv6OuqtDsdmueB8B
7c63FvJxnSW29ddDN8fmb9s99mVDp2A+qtjqBe7BGKb7SizPyE8W+r7y2T7B
7JNtT8Ern9gdD4RfVnEEHhCMr3cYBC4JrqZ4QW84874Z0x0DHqx4BjdhtEfm
R2ReDxYDsqEGY5zeCl5Hf1O9bTc/o85VKbH4GhkMyzdHB7szvftqZIa671Xg
+zC3oSK4XzAfKpNYHlQsyD938q63cbMd0OaJ5c5FweJIvq3YqgWeBH8m/J3M
p4Fngyd7XEzMWP4X/234UxkTFPPwjiHfBZmTsenK376BbsnYPWyWX/v6M4Ld
i/infV+t/ZZqBfOL2FgGXJiY3mbwWXgJ8pegfzsWr8h9+03FNbrPpyy+Lnj+
OQd9A/0FGYtl3b/iWvH9iueWodDDzDsrh0OXuHwDZI/EFrur4C3MWIwvgi4O
Fnv7+T7Pa5xq3wnmnVLGVy1bBn8l35cr7lNW2w66zC9eE5XHJijHJmb/GfjV
wCPhTw6GR4Engau7/0wBF7m/VUks/2ivFfA+j+29VHN154XgPbH5pOJ9bTA/
kD/0gF8vWP3L5fs1ctFBvp0rsPwvP1+LzH3453XvyL7K/Aj4OjIPsvZepYPF
nOraitj4equy8Mcwz4E/GfozvJKqTdDyiquM1WjVLeWfWci8EFs+HOF4L7L/
sFeHYPlIeSmdWN1uBG9abLaFYDlf55K/9/cYUywUZ61u5/gdjoXfF5xKrI4v
1J7gR8jUDCavep4LPgB95LEzJTa/Uk/ymHEDXqVgNUu1Zph8MFgtVL7qFZs9
smuHrzME3lFwvmIKvEBrqkbKtmB1/UnW+hfdZ8WM5Vjl1Gf5/oC7OIHMePRm
xtYbqLe5gs5d1u+rfOs9T+7/d6tcE2yvKqplseVJ5U/l0SJ/o9Gx3a3saRBM
T/pNHCv3Kgdnmf+lnog9cxLrlWp5n5NCZmRsfPUptYPdrfqXyP3nPnAA9F/O
8hX8q+id9XOpd5J/qHe6VGDvq55nvmKWcQ/dftDLfNvvut96rVdPIT/U2Zqx
16609R6Ks8vIFSPTJzY/l52jlKv4Vj9luT6TeH8UbM1DWp99SiTW67WAfz1r
/n8NfrH3iuoZ93tf8bX3OQ/YayD0sL+13vy294H30b2ZtV7odoHpSFf7jQ2W
mxTXKffJVLAYVD4rAM+OzfeK0T2Ttvv5M211Wb1eVWTGee3b7vemuL5SYH6r
On8X/J3fm85aMlhu1ZuOCNZPqKbI7u8Zt/yt5MMn02Z/LvuOje29FNfTYzuj
+r5HyOcFs+9u1u5NPqZ8oJ5Ha95AZqLnVuVb5f80MuOUq4Pdr2Lhfe9zlAcH
+d3K/yv7P8KjrNVl9STVvC6pto6BjtfaKYv5con1hm2C9bHy/02qdcFqiWrZ
kGC9oGrrp7H1t6rpJYL1jjqLYk156SL2F3oeU08lH1PveqHA3kj/AvonqBjs
X0J2jnHblN/zPY6UG/8DOfp7eA==
                  "]], 
                 Polygon[CompressedData["
1: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
vgWLdSt6DvAYPoifzIgzn58c09zF/wCJZn0G
                  "]], 
                 Polygon[CompressedData["
1:eJwtlnlQllUUh19QxNfvk09wBRcEDbUyUVsVcUlNQTBxSdxQQHFBUHDBRBu1
cMsFE1zGlplmqn9bzEmtbBmnzHDGMtMps819w1wRtec39/zxzHfu75577n3v
PefeLyG3OKso3PO8CoiA+ijPq2noeTcDnncf+wE8GQI6n4KBEBP0vCRYgT2T
vlkwG170PW8kXGPMQWJMwB4B6XAebQ/aFeLOxXc6Y/MhF9oTawo+k+Eififx
K8COQx9L/0swDgoY1xYtG3svPp/BELRnIR6tCX2VjNviOy0BrSN0AJ++SWhp
2OkwCtqgDUV7HLs79IZmaFWM3wpvwTDNj88Y7NGQD0eZ91/W2RrfEfRn0z8B
JsJoSEXrD0OgBT4tYbjNm2bx3iTOLmhlMcajzYFp2FNhErQLujkysEdCpvlp
X8bIT/6QC5O1//ZNU7Bz4B3ivw2x5q/9i8Lugd0TkmEwWhY+o+Am33SYb8vB
DuCXqDXofKCPjX1COYA9CJ638xiPloedr3OFYdDL9nK49hxWE7MC3vBdDM07
SjGwB8EAaI7/BcuTNPwmwiTYDJt8d1aKG8IvGvraPmu/M+m7Sm7tZ+yX8AVc
inJ+feifAjnaR/x2EGs7fOC7tSuHsuAF7KFam51bKloX7KZBlw9Vth6tq87q
5AZz3oFT2L/CCYhk3Dn6d2MP1RyQrVpAT4cMyLO8T8HuC/1sriDaFcYeYOy1
gKsJ1cYM+pfS/wj9e2nvg1t2Xv/hl0s7z3d7sA/tFzgOl/EZrjyGs7amywGX
k8rtMcQdC+PgNv3X6X+gb8K+G+X2oBt+XSHJ1rcIbSEshmK0xKBbj9Z1RGeM
toK+8JDbD+3Lz3CbuMn47qR/B32/43sKkrB9jcHeABuhBn6Ek77z34nPSliC
XQaLoDOxFtgaPsTvK/gaHtN5oU2ECbaWBmgR2JHQSPuIVgmbsTfBBuiGzzK0
cliu77M51mOv0R5gf0/8Q9AA7Q7fdBeO2bcVahx+r8Bkq99OUIq9EBbAUnxK
YS52IczWHYXPb8QcFMa+0N4OPdDuEvNv3TXwDwRs7Bz6E+jfzZhPfXefKp86
oH1E+2PojtYELQDREGF39krsV2EVVODTLORia46LcI85jzN+AGvZgk8lHKYd
j999+sMUg/YqCKKdRSvGLodlsATKYA20UB3h8z72e/AJlNge/ISdyhwVtF+D
A7T3KwZ2FaTQd9R35zuf9jwoslxLQKvTWrUetHC0Y/j2Z8zrtNfDQdprdW6w
zs6vC34n0Afit412te59tMigW2sP/JKhJ5zGbzB+5ei7oBc+bdAvqX5Uc1Yn
9+Eqdq3qFWLxyWRsBpyxOh6r+wt9o/JNv5ZrtwLuLbmH33TVuO/yRXtUplyH
l6E3NEeL0Z2q/MWno3Ja3x7hHm7tgc7oodYF9eChTSPmVCiEvyyHdG7nsc/B
GahjHQ/htu2p9ra97ntoCiE7Z/k9HXLvgd6FNtA46N6KTqop1Qs8h09X3We6
O6y2GwZdnSsflZeNTdO8t4gdR7utchifBay1FJZDQ6tV5bRy+3Pf/e9Q7sYz
vgB7FsxUflida0widifoHHL3ge6krdhVUB1ytaX9aKz1qVZC7h7/A+1POA2N
bI4Z9ibrbS5GewZSsPtBrO3BfLR5UGL1qZqutf9BtQF3BtPsHdB7cIO+7+i7
HnD3kHLi0aC782rsfTlE/w9wxP6PrbQ7aQ/938C3vrub1qGthdWW49FoF6yW
Y5Q74Ck3iBlmdazcKNLdAfX4XbHcVS20JE5raGX12xbioF3I/c/SfynlqnJW
NaE3Y7HvakFxWqK1gtYh9ybpbWpmayrB3gbVvvs/pv8s72L/D7P1QAI=
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJxFl3mwj1UYx98f/V7u6837iiRFyDKWweDad127i+vKvu9LrhZLYy2lmqZt
+tsSLVQk2kgxGKnRUJZUyhJRibJvqc93nmemP955vr/vec45zznn2X5VRxcV
TCsWBMG9mSAojhwWBcEL4OnImmkQ9AmDYGwcBEuyQdAZ/lhOEOQzNgi+AePL
nNf4ePT6w9eBn498Hj4P+SDfLHAh8gLz+4CXoj/O9eui/w6/832dt/kGgtcg
I8Yng0NkLb6HwSWQu11nJ7Ivv58G90MWx7ZdcJuTIDjHXj3hA7jG7DGU8Yns
2Skye/pGZofsWYGcENu56qV2Rq05XHPhVzK+nDULwA/BN4TvE5td5+C3MD4E
/susfbJhJfx9jFfmuwm+wJeC+zGvDPJR9Msib8CXRxbCV0IWZWzeEr+T85wj
xaamcEPRacq3lrGlzGsBPw9+OtxY5DjtB3e3r98isj2ExVUITV5jbjXGxsPX
jf4fuw7fl7US8CXwMHArcHnWnAx+Av0B6F/I2txLyMr8HgvuxfiP/B4uP0F+
wzcMvA/ZPrJzNUb+lrU3PZe1Mel8jzzINxi8H1kavUO6S2yoyN7tsGFEbLaV
Bv8N3xn8BzoHwF1is0G2XOX3XX6fr4NXo5MLPoEciU5JxpaDH8/YnZ0BDwX/
jvwpa+scQZaL7CzVtSa/x4AvZ+3MOvsNZFXmz9AdhuYburfzendsbus2j+Gb
j05v1hkF7gxfnfFq8seM+YfOJ50OyNHo9ELWQOcae0yF/xd50+/2etbW6YLO
/eiU5WvmvpF6vChuKoY2V++qd2yJLJfa3egt5GvlQjuL7jTX3ygP2QT9buDT
+N4hznOePSvC70vsHvNiix3FvnLAr+i9gXwtsbhVbL6PnMu6z4DnICcxZxSy
JTZMQi7K2Bn+ZE515QnGx3veWBxafCnWzzI+hr1ngPOYWwT/HDqT4dZ7/K7T
e4bmn7Pk7+i8Ap4d2fsrjnZkLZa7gk9i70z0Fmds3b9zLKbeZK9Jkdnbw/ea
De4KnhWbXYXgac53A49G/0XWeRhZL7T8UEe5Cp2XtT78Y+AndSb0cz0fKq4U
F3qXO+EbO6/xmei/Cp7LeGvNVy6K7Z3nKa6R3fnmZMyfFoV2J9rjIfQeQXZM
7Y7Ez0JOdb4TfEPPCfWRzeD7gW9yB0We/wch26I3hfEpjE9FPgs/TfP4Fuq8
2j8yO2fE5gN9wVeQS7jHrdxn69h8Sb6xAu6Ux+D2rMWF/Ly4fJh1jsK9576g
PN9VuZG1NsGvhT+eY3l4GTjLnCqM92eNAbHFX0m4epH5fBPkP+h1hB8ZWx7U
eYco/4cW+6uytqb85yKytt9nA+Sg2O6mFGv+kmN+Ln9P+N0IfnBsOtKNUqsH
evdWyMLI/Gok8hF0FqLTWn7iMT4ytFq5AFyAzmB/04GhzVWMNEW/RWxnX8M5
moM/Um1MrOYpvrZl7a31LuOZly+/AfcMrW7rLPKRYR4XI0LL4aoRzVl/gsfg
AmQx5j+Ysffa6Hn4M+QT/u46g/KX7B8cWZ9QpLyVWj3Q+lPly8zfzLwPsHO6
12XpdY0t3x+E/ws5Gv4sslpqviUfk46479CplVpdV+/R02uc1lfPoD6idmr5
RHeZC24Tm09tSgzrbj4FN/S6r1pfwfNhHfBJxoqFltu/dnv2ID9PrLdoG1sd
V02P0Wnj96W4uCc1v1KebJTa/aqvKMXvA8z5IrF8JL9SvyOsXPhWYrW7AP4a
/Mdwg9TbMG+DY3GXGfsAuVq1mPWfCi1+FafiV3m9U+3bCG4f2747ErNBZ6mA
3M7vvfDtYottxXhJnRf+MHxH1fbY3vnDxLDebj34DF+GffPh8r2fU4/R0u2/
qnyfWK+m2rrB4129VmWvazXBVTyHyGfKuo/J1/ajf9LriPKSckkHdCulFp+K
WfUA/VX72GtPYrW5U2znVY+wE66C11nlRvUDquGfwG9LrP/Q2bck9sZ601uJ
5Q3lB+Vw1YouqdVcxU0x8A+J9Tfd4LrHVvN/Tqzuqv7ewdwgtdqv/FPgb6Qc
WMb7NOWZ2HOFcsLFxHo+9X6Xvd9T33UbOjW89o31vNQlsryn3vUscmBs9aRE
av6hPPAua0xE7yV0HkWe5ncQeg/m9Vr250QWy3pr9cbygeusWdzfKIusBD8F
XDuynkb9gHpD8Vf4fcTzj3L7pRy7B+kd0x27L+ldksj6KPUJNTz/KKfKn3uA
zyC/dTvlVw/ElvP3wvWIrcf5zXtm9SG57kv6fTyxGt1dfVqO7S87jib2RrLz
MLhDbL3kV4nlz0L0b+WYLys/347c7bHfOzYfVL+knvRUYvfS221TD7susf8F
ys31uf+tHlOKo9Jes1ULtK/61V2M95SfgU+A/wNtL5jE
                  "]], 
                 Polygon[CompressedData["
1:eJwtmHm8V2Mex89PnZPf09E5qZAirdKK0r1tupW03ZZ7b+kq3fZFWqSNZB9m
htes/pYYUxONKCXDaDDGEs0whilLKpIlFCXVLZ+37/eP7+s8n+f7PN/zLN/1
aTl1QeX806IoqihEUV19D2ZR1CCJopnCLUMU9cmjqLdoYRpFN4ieFf/FOIqq
GS/+VaKxois1ZnBucy4QfZuZrHPUnqqx32rOh8I/FqOoUvh54T8JD5DM8cLv
Cr8p3Fcy5uj/v1DfBM19T31fxybjbOHTRVVqv66+fyBP1EzjzxWdk9haV+j7
+4KtmfWwl+80fqfGHtL/RwqvFX5EuJ7Gd9D4eerrqrHH1HemcCNRU+Sq7xrx
vtL4/4t3XNRc/bPU11q8SFSu9rPibxTv76Jtsa3vuczOiLN6VPjPwm+JPlJ7
gvqCeM1F09X+UH3/Fq+f1rNA8u9W3zXiXSF8vfBvhacKXyiao/anGv9OZmvu
Ikpy20t7ta8T/6D474pfKnyDcHvJqC/+Ke1/rK/38czulHNaonFLRV+KP0z8
9eL/RfxBua2Bf09zor0QuaLNGrM1tvt8Su0S/199/e9r4UKw/+0U/z/Cg9EV
UYlkTteYl9T3tnhjNKZW/35SeK/wHtF6tc/S2MnifSL8X+F5wvcK3625Vbnp
DLrznmi72r2D3WUn8VPXyWVq31EwXR0ufLPwL4WnCI8Rvkf4PuH5wg9JxiOx
2cM+redl4e3cjegVtU8Wba2s+dXMdJC75s5fUDuXjInivyX8Ymb3wX3l+sd3
mekwuvym+FtdP8bxr9hsCx1D1w6IdmRmM9gO97lL7cNFWxtrXCXcXfPnFkz/
T/p5TRF+Rfy/ZaaDr6r9Wmy62dDX973wx+i6cI3w++xBuI904SrhF4QfEG4i
/qSC3Ql3g86iu9z5Zr/vhcJt9P8DwrHw1cIbxV8j/LnWO1R4tfBK4RGp6ftJ
4f3CB8QfLrxJ+K/CT7t97BI9o3Y7yZstfh3J/0z4SfU/IVrHeNGj6tus79Oi
x9RuG8w2sdETwhe5PWDT2PYn+t9g4Yc1/sHM7hydQpfQhTZ+HifE/9TPhzPj
rI6p7wc//y1qb1Bf4vtFR9CVZtiI8FHhvcKVuekqOnudeKmfH3tkr+9ndhfc
CbozWuNHiRbpnBaLvuEfiekQtn/C/c95ohai77We0eJt4EzE2y2qjW39x3wP
tOnbx/4zO3vuoLn7H9a813lH3T9zXw9nZiOTRcNys50hat8sflv9u65whegu
tf+ovuXi7dGc1sKtROeLyrWH4aLP1f+F+yvssyDeV8Kf6X9DXJ+xPfZ+h3h/
KNgZdNP4Bfh+9R11/cKfvoHPcXtC3/fHFiuG+vpGa3w7yarhHIVLiQ/CpaJJ
7g/miNcT/yZ8p3B1MP6MxHwTPor4QhzoKV6vYGv4QXRpsLVtYV+xxYgzghF3
zN3C20RMiC3GFYP5d+Lbb4QnBrPRl2LzcdguOr/L72dwajaGDOZie93Yk+bf
KP4Vwj2EJwjfIzzG4/Xtwr8SniHcVbjK48lI4f7EcuHbhauEB9Anaq/+i0SX
iMY5n7g+nLsXdVZ/F9GlPmasx376qjX+loKNvVx4nvBt3EEw/cHXTlNfr9zW
ND1YnGatk4KtnT10ym1N/Js1dBQeKRqRm41iq/igJ0SNg/kmYg6xB53tlVp8
uUntgdiI5q3EzkWjyAGKZvPYPjazp2g+Dl83ghxFeLdokNqP4f9El0nGZMm6
VX0jguUM61weuQT+Z4vHi9LUbAbbwed1F64X7O6fcf9EDvBybD4f308fvgs/
wlhyCGIzMZPYucrjETbSLbWYDZ+c47j+39T9DfHvn5npH7q4zf09Z7U7Np/G
mf1L+B3XR/73nMcvcqo6wWIWcSwL5o+QQexIXbeJycRmYkSjYD57k8fvnqnN
3eb2gIznPX7iI7FdYh6xaYrnc7UeT5GxNjP/d6fO+9fqmxVMHypFZbnpLjaK
rT6k8efn5vPwfRs9BrRQX5nmL9GYvhp7JvoqvKJgesx5cxdbPHacyix/xEf0
ET/KrY8284k/bd3v4s9a5qbL6DR6vNb3Tww7or2cJn65+EuF+wWjy0WF3HgX
4kc9vyW/a5WbTGRhG41yW/Mwtz18WKWvH9/WVLin21u58Lm59dFGP89W+yzR
wGD+4VjR7pZ8bjWxQ7y+7j/IwxjbW3hZweYQsznLDR5nW5NDiX9XwfJxbBrb
HqW+tuI1wY4T89FlwWyOfyAbW8R2l3v8w4Y7BIvJxGLy9Vp91+g/14vfA3+k
8fPdf81LzT/UBMtByUWJochC5tDcdARdWSw80McscX84yePWUuHfCc8OFsPo
o32tqA1rTSxmENuG5CYLmQtSkz8zWFxCN6s8nt8v/tLUcgb6aC9LLWde7/ZU
klqNg3/a6jkYMZ24diN+CpvS3M6uL/hhYupQ4eW+njrovfufaZrXILc5/d13
k9N3EX9RwXL9INzV94O+FIVPz00H0UV8/Bi/b+Z3yO0uudOZqdUQ1BLj1K5O
zWfi69a5PiCro9sXMlf7fqkZDhbNJrHNVbHF0DWes1W7/XcMVo81Fu9IZrXi
DOE0sZqRPnhNEouznV3/iWHEsoaiixOzaeyEuDUysT2wF2Qg6wzRoczOhLNp
SK6UWU1AbcCZc47UTp1Fse+bM+FsuiV21tggtlaSmG3iE9h7y8R8BWeMbbIe
zh4bxBa75xY7Sjxek3OQW/ycgyRmw9htM7cfbLK5z+eu+yVm2+gAujA7MV3F
prFdxmPrxGBymYmJxeZBwWwRmcjGxxD7KxLzPRczJ7H4ShwnBhB7yF2JDVe6
/BrPf8p9/+MT2xNEm3j9c+4RzJfh0/AV6Bi6zPmiewX3x+hwHc8biO+LEnsz
gGhjc9jeeN//VOELsOXUbA2bq3Q95vyRiWxyAmq3WxPLFeb6edxE7pkb0cZf
4IsmpKYP6BC6NNnzD3zEMD8v9kOORq5W5vkMPmmA7xdfOCuxtwpqLmovYghx
Y5n7I3LiCs8/yDeoOfbKPq4OlvvN8fmV7k/5R5nHAWILbxjkSPgUfMsK7iFY
DXCt+O0Sqw3wYfiyRaLFwWo4ajnq7dfUrnB95s65+0Nuzw96ftPf7wsbwpZW
ev5CPtUjtTiEfmOD2GKN6xNvEvhk7oi7muaxkbx4PrmPcOPcfDq+nZqA2uBj
r3cOi47HVq/wbRXsPYUcm1jMeZJ7v+32jI9oId6XXkdgs1083mEL6DuxiBqU
tw7eIKhNeVPZ7nUZtQ5vCPs9/yDf3uf1EjUjcf514R1ej1H34UPwJdQslant
gbrrsmB7w0fhq9gze8dn4jvxk+g/byD1EquRWQ81FrUWNRG1UZbbWTH/kmBE
G5mHNS53f8GZcDa8IVDLUtPytoBPq+/7LfUcgtg5N7HcAn1gT+yFWpYaep/X
yeQ2nA25IzkkZ/SGcN3Ean7ya97Mdrif5i2NNxDeQnjDqB/sjemb2OrT9n6H
nGWt3y1vFrxdsN7zPJayPmo8YiqyeevgfvkH+Sxvhrx7fJRZvsD7xo8a84H3
HfH1MhYd3+n5coNgOoIsZP4vszeyYmI2g+1Qh56KTWanYLpEXyePA9Sk6Bi6
Ra36E4JOfZ0=
                  "]], 
                 Polygon[CompressedData["
1:eJwtlmlUVlUUhi8YJh9XLormkDiFmuSUDAqooQyKIijOOCCaaIpihppZ2eDq
V6tp9bfRLGtpow3aZKZm5YCkpuXQIIKIM2JmSs+7zv7xLN77nn3Od/a5Z+9L
tznlhUvCPc9bCxGwNOR5z4Xxt7nnlcNMnqfBfPQaeJaxcp7fDjzvfSak+J53
PdLz/oVl+M8zvoK45TCX51CM592LHgD9YBrxRTAQ7TPWEqIVQ+wASA+5sQCv
Av0C6z3K82p4gOe+0AeSoCteBHHFrDcM3R7dATpCFNyN1xv62+8Ox8uAEbAM
rwxvkUB3xesG3WEp3uN42ZAFqXgz8FLQrdCtIRZy4RG8VbASlhCTxr5SYbrF
xxCziOeFsBLW4hXirUC/SG5P8vwELCP+fhiPnqAY6ElcDyhA50MezCEmi7mZ
MB5m4CXaGdyHHg4Z0AXvLhiDHg05UELMed7TOdjE+9vK+7uBXu67fY1XPqy5
Gh6Dl9lfKf4zyo+YSMb7ovtAAky18ytT7rAYhhGTBnO1V5it90ZMb70PSIBJ
ePPw+mk96A/T8ObjtdV83Tv0Heh2kKg7AW1sLAO9wHe5D9DdgYHQB6bjFWlv
tl4T+d2C3eR7hHyjmTsbfwTjdxLfCeJgF+M74Qc4RFwGMReZdwE85mzDe4Wx
Op7PwKt2/y+ha6EG3sBbj5ekdwEH0L9AFXzP2A5bO4r12kOHkKsb1c86xnYz
1gzvY/QX6C3wNaSz1pd4p9E1WguG4l1lXgNsZOwzvMF476I3oweh/2PsJtTD
WdhgY43KC92TM+gFt8M44i/hXYTLEOg+4GXCceachBNwgLEhvjuPT9Bh7Dcc
rtqcQt/Vseq5AB2OV629Qw1M1HvFa0Rfg38C926q7KyOwnBi/tYY+jo0wRi8
qaw5Bcp0P60udddK0BP1XqEEkvGSIMXGdP9Uv4M0BwZbXaYoFrJD7j7ctP21
Q8dBJ7gRuH6ViE6GJOtNQ5kzBGZZ71G9xcMC/R6MtHpT/Y5VL0QXED/O7nGS
rZdud70z3jz0Qt/lqFy7QGcYi+cxVsVeRhKXA6PgYes5mdbPFqNL1avhHquz
UrxCnieEXH2ozvK1byi2OpqJVwyzrJfk2trlvutbi2y9KXiTddZWv+qTeg95
yhHyY1x+yrMo5Pqq+oH2V4F+CB60vruK8ZfoL0/z/BRU4P1oNar3/xP6Z6iE
3/B+hz8hi7FDeGfRI313PjqnYei9ePthH3wTuBqsRG9DfwfbVbPW91J91xfU
HzbjfWV19qlqSfUHn8MW+60c+91z6HqoM2+regZ6F2y3upwArcgpFlrDlcDV
R1t0G4i22jqPF4UOQXOrwQ/w/rA8P0R/BIfhEt5FOA+jfFfXqu8WIZej+otq
9Rh6L3of7A9cDTbTdxJugz2qK+Zdi3R9RnmnEZMPYYy31HfZ7lqItSNVG7au
aj8bXY0+A7WqWetrv6IPw0HrneoJ6g2Vlk8suq3uPsSHXF/QXib57jt+C90E
nr5bjHfXnQu5XqEanExcPHoU5CoX4qrJ4RS8xvg6fiORmDetB5+2HJVrsvoi
3g7YCesD945i7Oz1DhqUQ+ByUm4X7Jz1TR5n31B9S3vxu8fUuxiPY3+9IQFy
ibuCdxUadF+JCSc2DJpZD9C3W+d3ivEWPEfCQeJimB9AR7hsc/Ub6n3qgY0w
2ndn0MP+p9H/NucC9y3LRG8g5p0I18NOwHE4afvUXJ3Be+hNsBHeCtye9XtH
0EdVZ/C6neVf9m3RN6YW7xZeHvF1qofA3Rf1pFp7rg9cDe6xWlBNfIv3P95I
TZ8=
                  "]], 
                 Polygon[{{4102, 4101, 3157, 1569, 1579, 3159}}]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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

                  "]], 
                 Polygon[CompressedData["
1:eJxFmHlwltUVxt8X4X3hfl/1YtVWnXbGOm2nddppp2Onm522U6e1U9vRaV3r
giK1bthdq4JUWxEV2XdCSAgkBAiBBAIECIEIgbAHAoQdZJGiIAIVivT5eU6n
f5z57nPP/e57l3Oec8697qG+tz/VJUmS29Ik6arfHSFJWtQu5EnSEJNksXC9
8JksSSqFP5CckswrJsl8yWm1f6Wx7Rrzb43dIlmu9nmNnyFdVkiSbpIo6Vmw
OZjrrGS62rM0fqbG7xYeI/yO8FHJv9Q+Lsl7Jsnjmn+fxjToe8fU91PhVcL7
NO6s8N3CW4Q/FB4pvENzdUpGq71MfbOkOyQ8MdqaWfvlWssnC/aNn+n/61L7
9gDJaLVf1/g7pTsofEDyntq/0LiRapdJP0T6e9Q3VHMNkUxWu0wyRLJVug7J
ULWXaPw8jd8lPEy4q/bzsObpLemmdg+tYWNqfeguaPxW4QeFuwiXCVcJT9T/
H9D/Dwm3CV8rfbPwAsmX1b5Bsoh74RvMLZmv9jOSOv23XvKs2u/r/xv0//uk
/0j4iPBa4euE1wjvFH5L+FPCy6KNYez9kkTrmSx9pfQjNN990s30+1sk/Dfh
gZmdHWf4onSt6rsmt/WuVnuY+iZLN1hj7oq2J/Y2QTJOcnc0HWNe0tjx3j+K
OSX3Sl+p3yrJXMkejVmpsZ/R/G9Jt0JyVW7rb1F7tPTl0o/V2PvddvtItzc1
Oxgi/aTU5uc7D0Yby3+el3699EvU/qz+0yZd72hrZc2TJXXS10q/Se03pXtY
Uq52meQhxkpfIX2FcB/h30nWqt0m+a3avSST1B6vMcM1tntPs3lsfYGkQX1z
pdvPGI1tF24WPi08VXhQsP8yxyPCc4RrUvsG38InNwvflpuvlvh6Vkg/UHiE
3wfrfYzxkjs19i7JOfdHfONLwpuEV0k+p/YK9XVw9tHOhjNah+0Kv6a5BmXm
L23qWyzdMeEp0q2XfFH9X5CsVbsvc0rXKvl9NB+GS+AUfLtFeFFq/jxYeJpw
dWr3/xS2IzzBz/dx7l94ofB67FB4r+Rbmuvbkv1qvyBpkG6BpL9/D+74rvR7
hAvyxyAp6A6KkvHST5G+UeNflP5t4dXCt2v8TuEa55cW6V/y82b9N0rfKbw5
2l7Zc7vaXTT3NunvEN4hvE3yc7VvlWxXe67bU63m+4PwBj/v6yUb1f6HpEm6
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
1cC1Hk9Z338Byld6Tg==
                  "]], 
                 Polygon[CompressedData["
1:eJw1lnlQV1UYhq+lmD9u9SMdNSvLlpn2fd+zfZvKxl1LzX2vZirLXQQVAcUF
hRSDFEQQoRQBTU1l0VwQ9xXJyg0XUlRQ7HnnfP3xzLz3/b5z7rnnfOec26rH
kDaDr/E8LxwaQGbQ8y6FeF6873mbAp63GZai+zb0vEfgYThLThV8iP4A3oPF
5AzHW0XbNLWBZTAd7zBeProQiuArvGy8JZABY2kbjbcDPRldQM4KiMXbhlcG
eyCaWBL+XJhAbIP6QA9EL0CPJj4IPRiGwhD40vqNIpaIrkD/CcdgCl4MHEAf
goMwjZwE+pwN8yEf7we8JeS14zs7QHuoxrs+lDb1PK8Tzx2hhvxw37X5jvgw
+B6m453Em4OeC0lwBN6kzRvQGjJ8l1dJ3mk4BeHkVNPnJ8T7wX7e5fPOw/jl
+hZ4BT+ddtPgOG3m4aXAzxBF20nQS8/EZqETybuBNo/DE7CC2CS8LTbPmu8o
vAl4RegSKIaJQfeOE+gLUA2T8GbjeVp/dJbmCWZo3aG/rcso363XOvR62Kj+
8GYqF+KtRmLxMmmXAbmw39ajDL0NKuBB3rUUr7d900itK/6PVmtaW61xufXX
x+pE7+uL7mdjrkc/DSEEfgm6elPdxdk86ts0l0fRU/GSbV5noWvwzsF51S9e
J4hFj7Pv1vePVp94K2EtRNBuLP4YaE8sWjWCl4oOMoYw7Su8GXg55GTDmoCr
G9XBQkiDdNufM612NUdT8KZCHIzDy8XLg+XwDV4M7EPvhd22j7S+hejxxCIg
UrWqGtTeV//QBS+VMSyASMtXHXymedC+0BoSiw+4/bsLbydst/3Wwb5zFPGp
mlt9P97v/8+Hxgv56MF8f6Mwz2tGfTcPdeuZaPOo/EXoneiPyMsi/xzP5+EA
3jN4adpjPFcG3Bl2lTZ1cNHm6mu8rehSyLQzZz9eG9p+Co/BAt/NwTTiiyEL
upKzlz73QAqxe8nbZXVQS/wKXNb48MbgpaMHBN0ZpbNqA5RAKQRou1I1Cq+h
X4WXbf+uwWuGbgpNYI7v8rS/F6FP0/5MwJ0br+OdQNfCZdvTN+I1hptgvvZd
0NWn6vSM1VUS3Eb8dmgJRdpD9k1b0aU6b827D+8BuN++V2fEZvqpgn91Tmu9
tSYwj9gd5BXjTdTZDN00B9q/Vh+qk854OTqj0N0tPtx3Z22C3TW6c3bDrTY+
jVl6HXo9FKoe4Ba8FtAc5pKzNui+XXNws3n78J5CPwmP2vrqHG+L3k1sj9YW
NsHdeMn6RvSWoDu7khlfCqTa3fKTfWeJzhTYCON15kNHOwOGkbOV5y3wh/V7
AP03+i/4x9Yvw/prhb4L7rT5S/BdnSxD58JyqISTcAret7u2se4B7oMBPPeH
XN/dPQV25qywe2sh3vM2B5qLQ3i12sPortAZslU/9HeI/rrx/Dl4PF8HDaFJ
qNufAfZnJrlvo9+Fd1SHQbcPtR8bkdfH/g+0D7UfLwTcfOu+rLLxn8W7AnVw
GMrhFLxl/ek/Yg3jXw2/6Yzy3XsVP0rsGByHkTACRgXdf4fy8tF5UGDnQqrv
/l80rvqMvwGEQFPGWsH3DsIfCHm+W6+Wtj/usXrQ+fIc+ll42vqbDw+h43Q3
hLj7aDXjXwXFAXcf6k5Rnu6rMvR22GHr8QLeS/AiHMQLYyzljKU3z710J4W6
c3yZ/SPpX+lb8uox7p7Ev4Duegc5Lcg9QtuPeR6q+9x369sFnYO+lnh9uIR3
EWospjWPZKwR0M7O8xj0VXQdeLyrh70jGn8yzAm4862tjUXxX31XI6qVODvn
e+ruJG8Esf8AmvSeJg==
                  "]], 
                 
                 Polygon[{{4286, 4285, 3226, 1803, 1813, 
                  3228}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0M0uA1EYgOFvpq2ZqdqwrI2kNgQ7liyVlrY7WxfQxl/8/1wCCTciXIUb
YVWJPZ4hmXfeNzlzvpwzc/ujwTCJiD18iHW+TyMesKmfuc+NPGISPV3nArs6
5ww7usZVdHWFU3R0kpcfRmzTTxaxxd/c5jfzN/iVX7Cmn/gRy/qIDzGv+9zD
rF4p1zGjp7iBuv5yh/I+B+an5X6u8DGfoKpP+Qw1fc4XmNCXfAVPXHvdZH/H
jlu+Q6ELQ6d5gRfR1B3uoqWHPMKSHjvIJ1b1e/L/f38B1Wsfog==
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0MkuA1AUgOGjNt00iKmlFl6DhHdoqZoS09KwYlkJC5a61OqkplfwIqw0
8RQSNr6bLv78f25uzj25iwdnpdORiNjEZybijmujEZe4111+5LdsxCt6+oWf
0dVP3EdH99IZ2rqTjJZu8UNCN7nJDW7wu/l17qd3cKuv+SrtoPd5Dxd6lVdw
ohe4iCP9Z+9fbOtvLnHO/DKP8RqP8wTW9SRPoaKneQYbepbzqOoCz2WH/zLP
RWzpH/MPOe/tAo71Ei/jXO/wLmr6y90BbvRHZvi//9jcK/I=
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0Mkug1EcxuG/VIxXYUfCVo0x1IqExK5ba+ONCNfQUtWKoS02rFoWJLVk
SSIx1dQb8CQWvzzv4ss5J1/P0triaktEpFVLRDxyuTViRW/2Jpuc6YxI6dee
5pR+7ElO6Nse55i+7FGO6NMe5pAadpIfHOQ7c85/4ja39GBvcF139gLndW0P
sF+Xdje7VLFfvftFRbvODPMdEVkWuMMiD7RrH/JIOfuYJ9qzSywrb1d4qn37
jOcq2M/OL7PN3e26sHvZpyt7lnOq2ze+vdW9XU38/98/eTE3Qw==
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0EsuA1AYQOFf0kpMmCE60SFDJkSLqgbxLhOaVGIBbEBYRTfCiKSbUIq0
HototfVIfI3ByTk3N/nvI316XjwbiIgj3CQiZiyOkxElLOgLXuWPoYh35PUb
v2JFN7mBnH7hZyzrJ65jST/yAxZ1jbN8zxmumD/LV3yJaX3CZaR1ljMY1yme
wIjuuWsXg/2zuI5fb6hyiwvmt3mNP3mdN9DRm7yFrt7mHfT0Lu/hS+9zEd/6
gA/xo2vmJ53Z4jaG9ag7jfXRczyPSX1r/w5T+jrx/79/g6cwpg==
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0Esuw1EUgPHTxF/ULpCwEaWtx8CAGBGDRid9oKJFJAy9HwtgRGIVklpI
1aP1XoJfY/Dl+25u7snJHVopz5VSEbGImyRi32G8PyKDQ13gK94djNjBpd7m
Bi50nbdwrje5hjO9wes41WtcxYmu8DGX+Yj3zD/gIq+ioXOcRVWP8SiKOs0D
WNZvdn3Fgn7kJmb1PWe4lY6Y4DZP8jO/INt7yx3kdJffkdcf/Ikp/cXfmNY/
/IsZ/WD+PD9xG0u6z05Jb389zCOo6Fv3d6jr6+T/f/8AU3sxzw==
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0DsvQ3Ecx+GfpU3QKuJSmzdAwhuRmqw2S72DBlG3MlRSd0YGiRrZGDWV
uIzul5mEN+A5MXzyfM8Z/vmfMzg5XSi2RMSEKqmIOw9D6YhhPdhj/ORAW0Re
H3Y/+/Ru97JHb3Y3u/RqdzKnF7uDWT3bGT6xnY+ccv49x1lQwx7liC6Tc5jT
uf3rfj86tW95oyO7zhMd2DXWWGqN2OAMNznLOW3Z8yxr217gonbsJS5r115h
RXv2Kte0bx87/5BNXqtuf/FbZ8l3uWtGF3bVu3VdJeel/v/vH3+LMrI=
                "]]}, {
               
               Line[{2, 487, 11, 500, 501, 20, 526, 527, 29, 560, 561, 38, 
                594, 595, 47, 628, 629, 56, 662, 663, 65, 694, 74}], 
               
               Line[{1905, 485, 1922, 3268, 2845, 3269, 1940, 3291, 2853, 
                3290, 1958, 3317, 2861, 3318, 1975, 3343, 2870, 3342, 1990, 
                3366, 2879, 3367, 2007, 3396, 2890, 3395, 2026, 3421, 2024, 
                2046}], 
               
               Line[{1907, 486, 1923, 504, 3271, 1941, 3294, 2854, 3295, 1959,
                 3321, 2864, 3320, 1976, 3345, 2873, 3346, 1991, 3371, 2882, 
                3370, 2008, 3398, 2893, 3399, 2027, 3423, 2028, 2047}], 
               
               Line[{1909, 2843, 3264, 1925, 2848, 3274, 3275, 1943, 3302, 
                2856, 3300, 1961, 3328, 2866, 3326, 1978, 608, 3351, 1993, 
                3376, 2885, 3379, 2010, 3406, 2896, 3404, 2030, 3429, 2034, 
                2049}], 
               
               Line[{1912, 2844, 3266, 1928, 2850, 3284, 3286, 1946, 3313, 
                2859, 3311, 1964, 3334, 2868, 3339, 1980, 2877, 3360, 3362, 
                1996, 3391, 2888, 3386, 2012, 3413, 2898, 3418, 2032, 3435, 
                2040, 2051}], 
               
               Line[{1914, 1921, 3270, 1930, 1939, 3292, 3293, 1949, 3288, 
                2862, 3319, 1967, 3315, 2871, 3344, 1982, 3341, 2881, 3369, 
                1998, 3364, 2891, 3397, 2015, 3422, 2900, 3394, 2036, 3420, 
                2907, 2053}], 
               
               Line[{1916, 1926, 3273, 1933, 3299, 2855, 3298, 1952, 3325, 
                2865, 3324, 1969, 3348, 2874, 3350, 1985, 3375, 2883, 3374, 
                2001, 3401, 2894, 3403, 2018, 3425, 2901, 3427, 2038, 3440, 
                2909, 2056}], 
               
               Line[{1918, 1931, 3278, 1935, 1950, 3305, 3307, 1954, 578, 
                3331, 1971, 3356, 2876, 3355, 1987, 1999, 3381, 3383, 2003, 
                3411, 2897, 3410, 2021, 3431, 2903, 3433, 2042, 3442, 2910, 
                2058}], 
               
               Line[{1920, 3261, 2852, 1938, 1955, 3279, 3281, 1957, 3308, 
                2869, 3337, 1974, 620, 3332, 1989, 3357, 2889, 3389, 2006, 
                688, 3390, 2023, 3417, 2905, 3438, 2045, 3444, 2912, 2060}], 
               Line[{2048, 2033, 3428, 2029, 2013, 3407, 3405, 2009, 3378, 
                3377, 2884, 1992, 609, 3352, 1977, 1965, 3329, 3327, 1960, 
                1947, 3303, 3301, 1942, 511, 3276, 1924, 1906, 3263, 1908}], 
               
               Line[{2050, 2039, 3434, 2031, 2019, 3414, 3412, 2011, 3385, 
                3384, 2887, 1995, 3361, 2878, 3358, 1979, 3338, 2867, 3333, 
                1963, 3310, 3309, 2858, 1945, 3285, 2851, 3282, 1927, 1910, 
                3265, 1911}], 
               
               Line[{2052, 2906, 3419, 2035, 3393, 3392, 2025, 2014, 2892, 
                3365, 3363, 1997, 3368, 2880, 3340, 1981, 2872, 3316, 3314, 
                1966, 2863, 3289, 3287, 1948, 529, 3267, 1929, 2846, 3262, 
                1913}], 
               
               Line[{2055, 2908, 3439, 2037, 2902, 3426, 3424, 2017, 2895, 
                3402, 3400, 2000, 3373, 3372, 1994, 1984, 2875, 3349, 3347, 
                1968, 3323, 3322, 1962, 1951, 3297, 3296, 1944, 1932, 2847, 
                3272, 1915}], 
               
               Line[{2057, 3441, 2054, 2041, 2904, 3432, 3430, 2020, 3409, 
                3408, 2016, 2002, 3382, 2886, 3380, 1986, 3354, 3353, 1983, 
                1970, 579, 3330, 1953, 3306, 2857, 3304, 1934, 2849, 3277, 
                1917}], 
               
               Line[{2059, 2911, 3443, 2044, 3437, 3436, 2043, 2022, 2899, 
                3416, 3415, 2005, 3388, 3387, 2004, 1988, 621, 3359, 1973, 
                3336, 3335, 1972, 1956, 3280, 2860, 3312, 1937, 3283, 1936, 
                1919}], 
               
               Line[{83, 725, 92, 738, 739, 101, 764, 765, 110, 798, 799, 119,
                 832, 833, 128, 866, 867, 137, 900, 901, 146, 932, 155}], 
               
               Line[{2061, 723, 2078, 3452, 2915, 3453, 2096, 3475, 2923, 
                3474, 2114, 3501, 2931, 3502, 2131, 3527, 2940, 3526, 2146, 
                3550, 2949, 3551, 2163, 3580, 2960, 3579, 2182, 3605, 2180, 
                2202}], 
               
               Line[{2063, 724, 2079, 742, 3455, 2097, 3478, 2924, 3479, 2115,
                 3505, 2934, 3504, 2132, 3529, 2943, 3530, 2147, 3555, 2952, 
                3554, 2164, 3582, 2963, 3583, 2183, 3607, 2184, 2203}], 
               
               Line[{2065, 2913, 3448, 2081, 2918, 3458, 3459, 2099, 3486, 
                2926, 3484, 2117, 3512, 2936, 3510, 2134, 846, 3535, 2149, 
                3560, 2955, 3563, 2166, 3590, 2966, 3588, 2186, 3613, 2190, 
                2205}], 
               
               Line[{2068, 2914, 3450, 2084, 2920, 3468, 3470, 2102, 3497, 
                2929, 3495, 2120, 3518, 2938, 3523, 2136, 2947, 3544, 3546, 
                2152, 3575, 2958, 3570, 2168, 3597, 2968, 3602, 2188, 3619, 
                2196, 2207}], 
               
               Line[{2070, 2077, 3454, 2086, 2095, 3476, 3477, 2105, 3472, 
                2932, 3503, 2123, 3499, 2941, 3528, 2138, 3525, 2951, 3553, 
                2154, 3548, 2961, 3581, 2171, 3606, 2970, 3578, 2192, 3604, 
                2977, 2209}], 
               
               Line[{2072, 2082, 3457, 2089, 3483, 2925, 3482, 2108, 3509, 
                2935, 3508, 2125, 3532, 2944, 3534, 2141, 3559, 2953, 3558, 
                2157, 3585, 2964, 3587, 2174, 3609, 2971, 3611, 2194, 3624, 
                2979, 2212}], 
               
               Line[{2074, 2087, 3462, 2091, 2106, 3489, 3491, 2110, 816, 
                3515, 2127, 3540, 2946, 3539, 2143, 2155, 3565, 3567, 2159, 
                3595, 2967, 3594, 2177, 3615, 2973, 3617, 2198, 3626, 2980, 
                2214}], 
               
               Line[{2076, 3445, 2922, 2094, 2111, 3463, 3465, 2113, 3492, 
                2939, 3521, 2130, 858, 3516, 2145, 3541, 2959, 3573, 2162, 
                926, 3574, 2179, 3601, 2975, 3622, 2201, 3628, 2982, 2216}], 
               
               Line[{2204, 2189, 3612, 2185, 2169, 3591, 3589, 2165, 3562, 
                3561, 2954, 2148, 847, 3536, 2133, 2121, 3513, 3511, 2116, 
                2103, 3487, 3485, 2098, 749, 3460, 2080, 2062, 3447, 2064}], 
               
               Line[{2206, 2195, 3618, 2187, 2175, 3598, 3596, 2167, 3569, 
                3568, 2957, 2151, 3545, 2948, 3542, 2135, 3522, 2937, 3517, 
                2119, 3494, 3493, 2928, 2101, 3469, 2921, 3466, 2083, 2066, 
                3449, 2067}], 
               
               Line[{2208, 2976, 3603, 2191, 3577, 3576, 2181, 2170, 2962, 
                3549, 3547, 2153, 3552, 2950, 3524, 2137, 2942, 3500, 3498, 
                2122, 2933, 3473, 3471, 2104, 767, 3451, 2085, 2916, 3446, 
                2069}], 
               
               Line[{2211, 2978, 3623, 2193, 2972, 3610, 3608, 2173, 2965, 
                3586, 3584, 2156, 3557, 3556, 2150, 2140, 2945, 3533, 3531, 
                2124, 3507, 3506, 2118, 2107, 3481, 3480, 2100, 2088, 2917, 
                3456, 2071}], 
               
               Line[{2213, 3625, 2210, 2197, 2974, 3616, 3614, 2176, 3593, 
                3592, 2172, 2158, 3566, 2956, 3564, 2142, 3538, 3537, 2139, 
                2126, 817, 3514, 2109, 3490, 2927, 3488, 2090, 2919, 3461, 
                2073}], 
               
               Line[{2215, 2981, 3627, 2200, 3621, 3620, 2199, 2178, 2969, 
                3600, 3599, 2161, 3572, 3571, 2160, 2144, 859, 3543, 2129, 
                3520, 3519, 2128, 2112, 3464, 2930, 3496, 2093, 3467, 2092, 
                2075}], 
               
               Line[{164, 963, 173, 976, 977, 182, 1002, 1003, 191, 1036, 
                1037, 200, 1070, 1071, 209, 1104, 1105, 218, 1138, 1139, 227, 
                1170, 236}], 
               
               Line[{2217, 961, 2234, 3636, 2985, 3637, 2252, 3659, 2993, 
                3658, 2270, 3685, 3001, 3686, 2287, 3711, 3010, 3710, 2302, 
                3734, 3019, 3735, 2319, 3764, 3030, 3763, 2338, 3789, 2336, 
                2358}], 
               
               Line[{2219, 962, 2235, 980, 3639, 2253, 3662, 2994, 3663, 2271,
                 3689, 3004, 3688, 2288, 3713, 3013, 3714, 2303, 3739, 3022, 
                3738, 2320, 3766, 3033, 3767, 2339, 3791, 2340, 2359}], 
               
               Line[{2221, 2983, 3632, 2237, 2988, 3642, 3643, 2255, 3670, 
                2996, 3668, 2273, 3696, 3006, 3694, 2290, 1084, 3719, 2305, 
                3744, 3025, 3747, 2322, 3774, 3036, 3772, 2342, 3797, 2346, 
                2361}], 
               
               Line[{2224, 2984, 3634, 2240, 2990, 3652, 3654, 2258, 3681, 
                2999, 3679, 2276, 3702, 3008, 3707, 2292, 3017, 3728, 3730, 
                2308, 3759, 3028, 3754, 2324, 3781, 3038, 3786, 2344, 3803, 
                2352, 2363}], 
               
               Line[{2226, 2233, 3638, 2242, 2251, 3660, 3661, 2261, 3656, 
                3002, 3687, 2279, 3683, 3011, 3712, 2294, 3709, 3021, 3737, 
                2310, 3732, 3031, 3765, 2327, 3790, 3040, 3762, 2348, 3788, 
                3047, 2365}], 
               
               Line[{2228, 2238, 3641, 2245, 3667, 2995, 3666, 2264, 3693, 
                3005, 3692, 2281, 3716, 3014, 3718, 2297, 3743, 3023, 3742, 
                2313, 3769, 3034, 3771, 2330, 3793, 3041, 3795, 2350, 3808, 
                3049, 2368}], 
               
               Line[{2230, 2243, 3646, 2247, 2262, 3673, 3675, 2266, 1054, 
                3699, 2283, 3724, 3016, 3723, 2299, 2311, 3749, 3751, 2315, 
                3779, 3037, 3778, 2333, 3799, 3043, 3801, 2354, 3810, 3050, 
                2370}], 
               
               Line[{2232, 3629, 2992, 2250, 2267, 3647, 3649, 2269, 3676, 
                3009, 3705, 2286, 1096, 3700, 2301, 3725, 3029, 3757, 2318, 
                1164, 3758, 2335, 3785, 3045, 3806, 2357, 3812, 3052, 2372}], 
               
               Line[{2360, 2345, 3796, 2341, 2325, 3775, 3773, 2321, 3746, 
                3745, 3024, 2304, 1085, 3720, 2289, 2277, 3697, 3695, 2272, 
                2259, 3671, 3669, 2254, 987, 3644, 2236, 2218, 3631, 2220}], 
               
               Line[{2362, 2351, 3802, 2343, 2331, 3782, 3780, 2323, 3753, 
                3752, 3027, 2307, 3729, 3018, 3726, 2291, 3706, 3007, 3701, 
                2275, 3678, 3677, 2998, 2257, 3653, 2991, 3650, 2239, 2222, 
                3633, 2223}], 
               
               Line[{2364, 3046, 3787, 2347, 3761, 3760, 2337, 2326, 3032, 
                3733, 3731, 2309, 3736, 3020, 3708, 2293, 3012, 3684, 3682, 
                2278, 3003, 3657, 3655, 2260, 1005, 3635, 2241, 2986, 3630, 
                2225}], 
               
               Line[{2367, 3048, 3807, 2349, 3042, 3794, 3792, 2329, 3035, 
                3770, 3768, 2312, 3741, 3740, 2306, 2296, 3015, 3717, 3715, 
                2280, 3691, 3690, 2274, 2263, 3665, 3664, 2256, 2244, 2987, 
                3640, 2227}], 
               
               Line[{2369, 3809, 2366, 2353, 3044, 3800, 3798, 2332, 3777, 
                3776, 2328, 2314, 3750, 3026, 3748, 2298, 3722, 3721, 2295, 
                2282, 1055, 3698, 2265, 3674, 2997, 3672, 2246, 2989, 3645, 
                2229}], 
               
               Line[{2371, 3051, 3811, 2356, 3805, 3804, 2355, 2334, 3039, 
                3784, 3783, 2317, 3756, 3755, 2316, 2300, 1097, 3727, 2285, 
                3704, 3703, 2284, 2268, 3648, 3000, 3680, 2249, 3651, 2248, 
                2231}], 
               
               Line[{245, 1201, 254, 1214, 1215, 263, 1240, 1241, 272, 1274, 
                1275, 281, 1308, 1309, 290, 1342, 1343, 299, 1376, 1377, 308, 
                1408, 317}], 
               
               Line[{2373, 1199, 2390, 3820, 3055, 3821, 2408, 3843, 3063, 
                3842, 2426, 3869, 3071, 3870, 2443, 3895, 3080, 3894, 2458, 
                3918, 3089, 3919, 2475, 3948, 3100, 3947, 2494, 3973, 2492, 
                2514}], 
               
               Line[{2375, 1200, 2391, 1218, 3823, 2409, 3846, 3064, 3847, 
                2427, 3873, 3074, 3872, 2444, 3897, 3083, 3898, 2459, 3923, 
                3092, 3922, 2476, 3950, 3103, 3951, 2495, 3975, 2496, 2515}], 
               
               Line[{2377, 3053, 3816, 2393, 3058, 3826, 3827, 2411, 3854, 
                3066, 3852, 2429, 3880, 3076, 3878, 2446, 1322, 3903, 2461, 
                3928, 3095, 3931, 2478, 3958, 3106, 3956, 2498, 3981, 2502, 
                2517}], 
               
               Line[{2380, 3054, 3818, 2396, 3060, 3836, 3838, 2414, 3865, 
                3069, 3863, 2432, 3886, 3078, 3891, 2448, 3087, 3912, 3914, 
                2464, 3943, 3098, 3938, 2480, 3965, 3108, 3970, 2500, 3987, 
                2508, 2519}], 
               
               Line[{2382, 2389, 3822, 2398, 2407, 3844, 3845, 2417, 3840, 
                3072, 3871, 2435, 3867, 3081, 3896, 2450, 3893, 3091, 3921, 
                2466, 3916, 3101, 3949, 2483, 3974, 3110, 3946, 2504, 3972, 
                3117, 2521}], 
               
               Line[{2384, 2394, 3825, 2401, 3851, 3065, 3850, 2420, 3877, 
                3075, 3876, 2437, 3900, 3084, 3902, 2453, 3927, 3093, 3926, 
                2469, 3953, 3104, 3955, 2486, 3977, 3111, 3979, 2506, 3992, 
                3119, 2524}], 
               
               Line[{2386, 2399, 3830, 2403, 2418, 3857, 3859, 2422, 1292, 
                3883, 2439, 3908, 3086, 3907, 2455, 2467, 3933, 3935, 2471, 
                3963, 3107, 3962, 2489, 3983, 3113, 3985, 2510, 3994, 3120, 
                2526}], 
               
               Line[{2388, 3813, 3062, 2406, 2423, 3831, 3833, 2425, 3860, 
                3079, 3889, 2442, 1334, 3884, 2457, 3909, 3099, 3941, 2474, 
                1402, 3942, 2491, 3969, 3115, 3990, 2513, 3996, 3122, 2528}], 
               
               Line[{2516, 2501, 3980, 2497, 2481, 3959, 3957, 2477, 3930, 
                3929, 3094, 2460, 1323, 3904, 2445, 2433, 3881, 3879, 2428, 
                2415, 3855, 3853, 2410, 1225, 3828, 2392, 2374, 3815, 2376}], 
               
               Line[{2518, 2507, 3986, 2499, 2487, 3966, 3964, 2479, 3937, 
                3936, 3097, 2463, 3913, 3088, 3910, 2447, 3890, 3077, 3885, 
                2431, 3862, 3861, 3068, 2413, 3837, 3061, 3834, 2395, 2378, 
                3817, 2379}], 
               
               Line[{2520, 3116, 3971, 2503, 3945, 3944, 2493, 2482, 3102, 
                3917, 3915, 2465, 3920, 3090, 3892, 2449, 3082, 3868, 3866, 
                2434, 3073, 3841, 3839, 2416, 1243, 3819, 2397, 3056, 3814, 
                2381}], 
               
               Line[{2523, 3118, 3991, 2505, 3112, 3978, 3976, 2485, 3105, 
                3954, 3952, 2468, 3925, 3924, 2462, 2452, 3085, 3901, 3899, 
                2436, 3875, 3874, 2430, 2419, 3849, 3848, 2412, 2400, 3057, 
                3824, 2383}], 
               
               Line[{2525, 3993, 2522, 2509, 3114, 3984, 3982, 2488, 3961, 
                3960, 2484, 2470, 3934, 3096, 3932, 2454, 3906, 3905, 2451, 
                2438, 1293, 3882, 2421, 3858, 3067, 3856, 2402, 3059, 3829, 
                2385}], 
               
               Line[{2527, 3121, 3995, 2512, 3989, 3988, 2511, 2490, 3109, 
                3968, 3967, 2473, 3940, 3939, 2472, 2456, 1335, 3911, 2441, 
                3888, 3887, 2440, 2424, 3832, 3070, 3864, 2405, 3835, 2404, 
                2387}], 
               
               Line[{326, 1439, 335, 1452, 1453, 344, 1478, 1479, 353, 1512, 
                1513, 362, 1546, 1547, 370, 1576, 1577, 379, 1610, 1611, 388, 
                1642, 397}], 
               
               Line[{2529, 1437, 2546, 4004, 3125, 4005, 2564, 4027, 3133, 
                4026, 2582, 4051, 3141, 4052, 2599, 4079, 3152, 4078, 2615, 
                4077, 3158, 4100, 2632, 4132, 3169, 4131, 2651, 4157, 2649, 
                2671}], 
               
               Line[{2531, 1438, 2547, 1456, 4007, 2565, 4030, 3134, 4031, 
                2583, 4055, 3144, 4054, 2600, 4083, 3155, 4084, 2616, 4107, 
                3161, 4106, 2633, 4134, 3172, 4135, 2652, 4159, 2653, 2672}], 
               
               Line[{2533, 3123, 4000, 2549, 3128, 4010, 4011, 2567, 4038, 
                3136, 4036, 2585, 4062, 3146, 4060, 2602, 1560, 4089, 2618, 
                4112, 3164, 4115, 2635, 4142, 3175, 4140, 2655, 4165, 2659, 
                2674}], 
               
               Line[{2536, 3124, 4002, 2552, 3130, 4020, 4022, 2570, 4049, 
                3139, 4047, 2588, 4068, 3148, 4074, 2605, 4101, 3157, 4096, 
                2621, 4127, 3167, 4122, 2637, 4149, 3177, 4154, 2657, 4171, 
                2665, 2676}], 
               
               Line[{2538, 2545, 4006, 2554, 2563, 4028, 4029, 2573, 4024, 
                3142, 4053, 2591, 4050, 3150, 4076, 2607, 4103, 3160, 4105, 
                2623, 4098, 3170, 4133, 2640, 4158, 3179, 4130, 2661, 4156, 
                3186, 2678}], 
               
               Line[{2540, 2550, 4009, 2557, 4035, 3135, 4034, 2576, 4059, 
                3145, 4058, 2593, 4081, 3153, 4085, 2609, 4111, 3162, 4110, 
                2626, 4137, 3173, 4139, 2643, 4161, 3180, 4163, 2663, 4176, 
                3188, 2681}], 
               
               Line[{2542, 2555, 4014, 2559, 2574, 4041, 4043, 2578, 1530, 
                4065, 2595, 4091, 3156, 4088, 2611, 2624, 4117, 4119, 2628, 
                4147, 3176, 4146, 2646, 4167, 3182, 4169, 2667, 4178, 3189, 
                2683}], 
               
               Line[{2544, 3997, 3132, 2562, 2579, 4015, 4017, 2581, 4044, 
                3151, 4071, 2598, 1566, 4066, 2614, 4093, 3168, 4125, 2631, 
                1636, 4126, 2648, 4153, 3184, 4174, 2670, 4180, 3191, 2685}], 
               
               Line[{2673, 2658, 4164, 2654, 2638, 4143, 4141, 2634, 4114, 
                4113, 3163, 2617, 1561, 4090, 2601, 2589, 4063, 4061, 2584, 
                2571, 4039, 4037, 2566, 1463, 4012, 2548, 2530, 3999, 2532}], 
               
               Line[{2675, 2664, 4170, 2656, 2644, 4150, 4148, 2636, 4121, 
                4120, 3166, 2620, 4095, 4094, 2612, 2604, 4073, 3147, 4067, 
                2587, 4046, 4045, 3138, 2569, 4021, 3131, 4018, 2551, 2534, 
                4001, 2535}], 
               
               Line[{2677, 3185, 4155, 2660, 4129, 4128, 2650, 2639, 3171, 
                4099, 4097, 2622, 4104, 3159, 4102, 2606, 4075, 4072, 3149, 
                2590, 3143, 4025, 4023, 2572, 1481, 4003, 2553, 3126, 3998, 
                2537}], 
               
               Line[{2680, 3187, 4175, 2662, 3181, 4162, 4160, 2642, 3174, 
                4138, 4136, 2625, 4109, 4108, 2619, 2608, 3154, 4082, 4080, 
                2592, 4057, 4056, 2586, 2575, 4033, 4032, 2568, 2556, 3127, 
                4008, 2539}], 
               
               Line[{2682, 4177, 2679, 2666, 3183, 4168, 4166, 2645, 4145, 
                4144, 2641, 2627, 4118, 3165, 4116, 2610, 4087, 4086, 2603, 
                2594, 1531, 4064, 2577, 4042, 3137, 4040, 2558, 3129, 4013, 
                2541}], 
               
               Line[{2684, 3190, 4179, 2669, 4173, 4172, 2668, 2647, 3178, 
                4152, 4151, 2630, 4124, 4123, 2629, 2613, 1567, 4092, 2597, 
                4070, 4069, 2596, 2580, 4016, 3140, 4048, 2561, 4019, 2560, 
                2543}], 
               
               Line[{406, 1673, 415, 1686, 1687, 424, 1712, 1713, 433, 1746, 
                1747, 442, 1780, 1781, 450, 1810, 1811, 459, 1844, 1845, 468, 
                1876, 477}], 
               
               Line[{2686, 1671, 2703, 4188, 3194, 4189, 2721, 4211, 3202, 
                4210, 2739, 4235, 3210, 4236, 2756, 4263, 3221, 4262, 2772, 
                4261, 3227, 4284, 2789, 4316, 3238, 4315, 2808, 4341, 2806, 
                2828}], 
               
               Line[{2688, 1672, 2704, 1690, 4191, 2722, 4214, 3203, 4215, 
                2740, 4239, 3213, 4238, 2757, 4267, 3224, 4268, 2773, 4291, 
                3230, 4290, 2790, 4318, 3241, 4319, 2809, 4343, 2810, 2829}], 
               
               Line[{2690, 3192, 4184, 2706, 3197, 4194, 4195, 2724, 4222, 
                3205, 4220, 2742, 4246, 3215, 4244, 2759, 1794, 4273, 2775, 
                4296, 3233, 4299, 2792, 4326, 3244, 4324, 2812, 4349, 2816, 
                2831}], 
               
               Line[{2693, 3193, 4186, 2709, 3199, 4204, 4206, 2727, 4233, 
                3208, 4231, 2745, 4252, 3217, 4258, 2762, 4285, 3226, 4280, 
                2778, 4311, 3236, 4306, 2794, 4333, 3246, 4338, 2814, 4355, 
                2822, 2833}], 
               
               Line[{2695, 2702, 4190, 2711, 2720, 4212, 4213, 2730, 4208, 
                3211, 4237, 2748, 4234, 3219, 4260, 2764, 4287, 3229, 4289, 
                2780, 4282, 3239, 4317, 2797, 4342, 3248, 4314, 2818, 4340, 
                3255, 2835}], 
               
               Line[{2697, 2707, 4193, 2714, 4219, 3204, 4218, 2733, 4243, 
                3214, 4242, 2750, 4265, 3222, 4269, 2766, 4295, 3231, 4294, 
                2783, 4321, 3242, 4323, 2800, 4345, 3249, 4347, 2820, 4360, 
                3257, 2838}], 
               
               Line[{2699, 2712, 4198, 2716, 2731, 4225, 4227, 2735, 1764, 
                4249, 2752, 4275, 3225, 4272, 2768, 2781, 4301, 4303, 2785, 
                4331, 3245, 4330, 2803, 4351, 3251, 4353, 2824, 4362, 3258, 
                2840}], 
               
               Line[{2701, 4181, 3201, 2719, 2736, 4199, 4201, 2738, 4228, 
                3220, 4255, 2755, 1800, 4250, 2771, 4277, 3237, 4309, 2788, 
                1870, 4310, 2805, 4337, 3253, 4358, 2827, 4364, 3260, 2842}], 
               
               Line[{2830, 2815, 4348, 2811, 2795, 4327, 4325, 2791, 4298, 
                4297, 3232, 2774, 1795, 4274, 2758, 2746, 4247, 4245, 2741, 
                2728, 4223, 4221, 2723, 1697, 4196, 2705, 2687, 4183, 2689}], 
               
               Line[{2832, 2821, 4354, 2813, 2801, 4334, 4332, 2793, 4305, 
                4304, 3235, 2777, 4279, 4278, 2769, 2761, 4257, 3216, 4251, 
                2744, 4230, 4229, 3207, 2726, 4205, 3200, 4202, 2708, 2691, 
                4185, 2692}], 
               
               Line[{2834, 3254, 4339, 2817, 4313, 4312, 2807, 2796, 3240, 
                4283, 4281, 2779, 4288, 3228, 4286, 2763, 4259, 4256, 3218, 
                2747, 3212, 4209, 4207, 2729, 1715, 4187, 2710, 3195, 4182, 
                2694}], 
               
               Line[{2837, 3256, 4359, 2819, 3250, 4346, 4344, 2799, 3243, 
                4322, 4320, 2782, 4293, 4292, 2776, 2765, 3223, 4266, 4264, 
                2749, 4241, 4240, 2743, 2732, 4217, 4216, 2725, 2713, 3196, 
                4192, 2696}], 
               
               Line[{2839, 4361, 2836, 2823, 3252, 4352, 4350, 2802, 4329, 
                4328, 2798, 2784, 4302, 3234, 4300, 2767, 4271, 4270, 2760, 
                2751, 1765, 4248, 2734, 4226, 3206, 4224, 2715, 3198, 4197, 
                2698}], 
               
               Line[{2841, 3259, 4363, 2826, 4357, 4356, 2825, 2804, 3247, 
                4336, 4335, 2787, 4308, 4307, 2786, 2770, 1801, 4276, 2754, 
                4254, 4253, 2753, 2737, 4200, 3209, 4232, 2718, 4203, 2717, 
                2700}]}, {
               
               Line[{489, 3390, 689, 3416, 683, 681, 3410, 3409, 675, 3403, 
                673, 3402, 667, 3397, 665, 3365, 653, 651, 3386, 3385, 645, 
                643, 3379, 3378, 637, 3370, 635, 629, 625, 3367, 661}], 
               
               Line[{496, 655, 3389, 3388, 649, 3383, 3382, 647, 641, 639, 
                3374, 3373, 633, 3369, 3368, 631, 619, 3362, 3361, 617, 611, 
                3351, 609, 603, 601, 3346, 595, 3342, 591, 627}], 
               
               Line[{499, 485, 487, 486, 490, 3263, 491, 3264, 492, 3265, 493,
                 3266, 494, 3262, 502, 3270, 503, 3272, 508, 3273, 509, 3277, 
                514, 3278, 515, 3283, 520, 3261, 521}], 
               
               Line[{18, 1938, 1937, 17, 1935, 1934, 16, 1933, 1932, 15, 1930,
                 1929, 14, 1928, 1927, 13, 1925, 1924, 12, 1923, 11, 1922, 
                10}], 
               
               Line[{524, 497, 3268, 500, 504, 506, 3276, 510, 3274, 512, 
                3282, 516, 3284, 518, 3267, 528, 3292, 530, 3296, 536, 3299, 
                538, 3304, 544, 3305, 546, 3312, 552, 3279, 554}], 
               
               Line[{555, 3281, 3280, 553, 547, 3307, 3306, 545, 539, 537, 
                3298, 3297, 531, 3293, 529, 519, 3286, 3285, 517, 513, 3275, 
                511, 507, 3271, 505, 501, 498, 3269, 525}], 
               
               Line[{558, 3291, 522, 526, 532, 3294, 534, 3301, 3302, 540, 
                542, 3309, 548, 3313, 550, 3287, 3288, 562, 564, 3322, 570, 
                3325, 572, 3330, 578, 580, 3335, 586, 3308, 588}], 
               
               Line[{589, 587, 3337, 3336, 581, 3331, 579, 573, 571, 3324, 
                3323, 565, 3319, 563, 3289, 551, 549, 3311, 3310, 543, 3300, 
                541, 3303, 535, 533, 3295, 527, 3290, 523, 559}], 
               
               Line[{592, 556, 3317, 560, 3321, 566, 568, 3327, 3328, 574, 
                576, 3333, 3334, 582, 584, 3314, 3315, 596, 598, 3347, 3348, 
                604, 606, 3353, 612, 3356, 614, 3359, 620, 622}], 
               
               Line[{623, 3332, 621, 615, 613, 3355, 3354, 607, 3350, 605, 
                3349, 599, 3344, 597, 3316, 585, 3339, 3338, 583, 577, 3326, 
                575, 3329, 569, 3320, 567, 561, 557, 3318, 593}], 
               
               Line[{626, 3343, 590, 594, 600, 3345, 602, 3352, 608, 610, 
                3358, 616, 3360, 618, 3340, 3341, 630, 632, 3372, 638, 3375, 
                640, 3380, 646, 3381, 648, 3387, 654, 3357, 495}], 
               
               Line[{657, 714, 3438, 3437, 710, 3433, 708, 3432, 704, 3427, 
                702, 3426, 698, 696, 3394, 3393, 687, 3418, 685, 3414, 679, 
                3404, 677, 3407, 671, 669, 3399, 663, 3395, 659, 693}], 
               
               Line[{660, 624, 3366, 628, 3371, 634, 636, 3377, 642, 3376, 
                644, 3384, 650, 3391, 652, 3363, 3364, 664, 666, 3400, 3401, 
                672, 674, 3408, 680, 3411, 682, 3415, 688, 488}], 
               Line[{690, 722, 3444, 3443, 721, 3442, 720, 3441, 719, 718, 
                3440, 3439, 717, 716, 3420, 3419, 712, 711, 3435, 3434, 706, 
                705, 3429, 3428, 700, 699, 3423, 694, 3421, 691, 715}], 
               
               Line[{692, 3396, 658, 662, 668, 3398, 670, 3405, 3406, 676, 
                678, 3412, 3413, 684, 686, 3392, 695, 3422, 697, 3424, 3425, 
                701, 703, 3430, 3431, 707, 709, 3436, 713, 3417, 656}], 
               
               Line[{727, 3574, 927, 3600, 921, 919, 3594, 3593, 913, 3587, 
                911, 3586, 905, 3581, 903, 3549, 891, 889, 3570, 3569, 883, 
                881, 3563, 3562, 875, 3554, 873, 867, 863, 3551, 899}], 
               
               Line[{734, 893, 3573, 3572, 887, 3567, 3566, 885, 879, 877, 
                3558, 3557, 871, 3553, 3552, 869, 857, 3546, 3545, 855, 849, 
                3535, 847, 841, 839, 3530, 833, 3526, 829, 865}], 
               
               Line[{737, 723, 725, 724, 728, 3447, 729, 3448, 730, 3449, 731,
                 3450, 732, 3446, 740, 3454, 741, 3456, 746, 3457, 747, 3461, 
                752, 3462, 753, 3467, 758, 3445, 759}], 
               
               Line[{99, 2094, 2093, 98, 2091, 2090, 97, 2089, 2088, 96, 2086,
                 2085, 95, 2084, 2083, 94, 2081, 2080, 93, 2079, 92, 2078, 
                91}], 
               
               Line[{762, 735, 3452, 738, 742, 744, 3460, 748, 3458, 750, 
                3466, 754, 3468, 756, 3451, 766, 3476, 768, 3480, 774, 3483, 
                776, 3488, 782, 3489, 784, 3496, 790, 3463, 792}], 
               
               Line[{793, 3465, 3464, 791, 785, 3491, 3490, 783, 777, 775, 
                3482, 3481, 769, 3477, 767, 757, 3470, 3469, 755, 751, 3459, 
                749, 745, 3455, 743, 739, 736, 3453, 763}], 
               
               Line[{796, 3475, 760, 764, 770, 3478, 772, 3485, 3486, 778, 
                780, 3493, 786, 3497, 788, 3471, 3472, 800, 802, 3506, 808, 
                3509, 810, 3514, 816, 818, 3519, 824, 3492, 826}], 
               
               Line[{827, 825, 3521, 3520, 819, 3515, 817, 811, 809, 3508, 
                3507, 803, 3503, 801, 3473, 789, 787, 3495, 3494, 781, 3484, 
                779, 3487, 773, 771, 3479, 765, 3474, 761, 797}], 
               
               Line[{830, 794, 3501, 798, 3505, 804, 806, 3511, 3512, 812, 
                814, 3517, 3518, 820, 822, 3498, 3499, 834, 836, 3531, 3532, 
                842, 844, 3537, 850, 3540, 852, 3543, 858, 860}], 
               
               Line[{861, 3516, 859, 853, 851, 3539, 3538, 845, 3534, 843, 
                3533, 837, 3528, 835, 3500, 823, 3523, 3522, 821, 815, 3510, 
                813, 3513, 807, 3504, 805, 799, 795, 3502, 831}], 
               
               Line[{864, 3527, 828, 832, 838, 3529, 840, 3536, 846, 848, 
                3542, 854, 3544, 856, 3524, 3525, 868, 870, 3556, 876, 3559, 
                878, 3564, 884, 3565, 886, 3571, 892, 3541, 733}], 
               
               Line[{895, 952, 3622, 3621, 948, 3617, 946, 3616, 942, 3611, 
                940, 3610, 936, 934, 3578, 3577, 925, 3602, 923, 3598, 917, 
                3588, 915, 3591, 909, 907, 3583, 901, 3579, 897, 931}], 
               
               Line[{898, 862, 3550, 866, 3555, 872, 874, 3561, 880, 3560, 
                882, 3568, 888, 3575, 890, 3547, 3548, 902, 904, 3584, 3585, 
                910, 912, 3592, 918, 3595, 920, 3599, 926, 726}], 
               
               Line[{928, 960, 3628, 3627, 959, 3626, 958, 3625, 957, 956, 
                3624, 3623, 955, 954, 3604, 3603, 950, 949, 3619, 3618, 944, 
                943, 3613, 3612, 938, 937, 3607, 932, 3605, 929, 953}], 
               
               Line[{930, 3580, 896, 900, 906, 3582, 908, 3589, 3590, 914, 
                916, 3596, 3597, 922, 924, 3576, 933, 3606, 935, 3608, 3609, 
                939, 941, 3614, 3615, 945, 947, 3620, 951, 3601, 894}], 
               
               Line[{965, 3758, 1165, 3784, 1159, 1157, 3778, 3777, 1151, 
                3771, 1149, 3770, 1143, 3765, 1141, 3733, 1129, 1127, 3754, 
                3753, 1121, 1119, 3747, 3746, 1113, 3738, 1111, 1105, 1101, 
                3735, 1137}], 
               
               Line[{972, 1131, 3757, 3756, 1125, 3751, 3750, 1123, 1117, 
                1115, 3742, 3741, 1109, 3737, 3736, 1107, 1095, 3730, 3729, 
                1093, 1087, 3719, 1085, 1079, 1077, 3714, 1071, 3710, 1067, 
                1103}], 
               
               Line[{975, 961, 963, 962, 966, 3631, 967, 3632, 968, 3633, 969,
                 3634, 970, 3630, 978, 3638, 979, 3640, 984, 3641, 985, 3645, 
                990, 3646, 991, 3651, 996, 3629, 997}], 
               Line[{180, 2250, 2249, 179, 2247, 2246, 178, 2245, 2244, 177, 
                2242, 2241, 176, 2240, 2239, 175, 2237, 2236, 174, 2235, 173, 
                2234, 172}], 
               
               Line[{1000, 973, 3636, 976, 980, 982, 3644, 986, 3642, 988, 
                3650, 992, 3652, 994, 3635, 1004, 3660, 1006, 3664, 1012, 
                3667, 1014, 3672, 1020, 3673, 1022, 3680, 1028, 3647, 1030}], 
               
               Line[{1031, 3649, 3648, 1029, 1023, 3675, 3674, 1021, 1015, 
                1013, 3666, 3665, 1007, 3661, 1005, 995, 3654, 3653, 993, 989,
                 3643, 987, 983, 3639, 981, 977, 974, 3637, 1001}], 
               
               Line[{1034, 3659, 998, 1002, 1008, 3662, 1010, 3669, 3670, 
                1016, 1018, 3677, 1024, 3681, 1026, 3655, 3656, 1038, 1040, 
                3690, 1046, 3693, 1048, 3698, 1054, 1056, 3703, 1062, 3676, 
                1064}], 
               
               Line[{1065, 1063, 3705, 3704, 1057, 3699, 1055, 1049, 1047, 
                3692, 3691, 1041, 3687, 1039, 3657, 1027, 1025, 3679, 3678, 
                1019, 3668, 1017, 3671, 1011, 1009, 3663, 1003, 3658, 999, 
                1035}], 
               
               Line[{1068, 1032, 3685, 1036, 3689, 1042, 1044, 3695, 3696, 
                1050, 1052, 3701, 3702, 1058, 1060, 3682, 3683, 1072, 1074, 
                3715, 3716, 1080, 1082, 3721, 1088, 3724, 1090, 3727, 1096, 
                1098}], 
               
               Line[{1099, 3700, 1097, 1091, 1089, 3723, 3722, 1083, 3718, 
                1081, 3717, 1075, 3712, 1073, 3684, 1061, 3707, 3706, 1059, 
                1053, 3694, 1051, 3697, 1045, 3688, 1043, 1037, 1033, 3686, 
                1069}], 
               
               Line[{1102, 3711, 1066, 1070, 1076, 3713, 1078, 3720, 1084, 
                1086, 3726, 1092, 3728, 1094, 3708, 3709, 1106, 1108, 3740, 
                1114, 3743, 1116, 3748, 1122, 3749, 1124, 3755, 1130, 3725, 
                971}], 
               
               Line[{1133, 1190, 3806, 3805, 1186, 3801, 1184, 3800, 1180, 
                3795, 1178, 3794, 1174, 1172, 3762, 3761, 1163, 3786, 1161, 
                3782, 1155, 3772, 1153, 3775, 1147, 1145, 3767, 1139, 3763, 
                1135, 1169}], 
               
               Line[{1136, 1100, 3734, 1104, 3739, 1110, 1112, 3745, 1118, 
                3744, 1120, 3752, 1126, 3759, 1128, 3731, 3732, 1140, 1142, 
                3768, 3769, 1148, 1150, 3776, 1156, 3779, 1158, 3783, 1164, 
                964}], 
               
               Line[{1166, 1198, 3812, 3811, 1197, 3810, 1196, 3809, 1195, 
                1194, 3808, 3807, 1193, 1192, 3788, 3787, 1188, 1187, 3803, 
                3802, 1182, 1181, 3797, 3796, 1176, 1175, 3791, 1170, 3789, 
                1167, 1191}], 
               
               Line[{1168, 3764, 1134, 1138, 1144, 3766, 1146, 3773, 3774, 
                1152, 1154, 3780, 3781, 1160, 1162, 3760, 1171, 3790, 1173, 
                3792, 3793, 1177, 1179, 3798, 3799, 1183, 1185, 3804, 1189, 
                3785, 1132}], 
               
               Line[{1203, 3942, 1403, 3968, 1397, 1395, 3962, 3961, 1389, 
                3955, 1387, 3954, 1381, 3949, 1379, 3917, 1367, 1365, 3938, 
                3937, 1359, 1357, 3931, 3930, 1351, 3922, 1349, 1343, 1339, 
                3919, 1375}], 
               
               Line[{1210, 1369, 3941, 3940, 1363, 3935, 3934, 1361, 1355, 
                1353, 3926, 3925, 1347, 3921, 3920, 1345, 1333, 3914, 3913, 
                1331, 1325, 3903, 1323, 1317, 1315, 3898, 1309, 3894, 1305, 
                1341}], 
               
               Line[{1213, 1199, 1201, 1200, 1204, 3815, 1205, 3816, 1206, 
                3817, 1207, 3818, 1208, 3814, 1216, 3822, 1217, 3824, 1222, 
                3825, 1223, 3829, 1228, 3830, 1229, 3835, 1234, 3813, 1235}], 
               
               Line[{261, 2406, 2405, 260, 2403, 2402, 259, 2401, 2400, 258, 
                2398, 2397, 257, 2396, 2395, 256, 2393, 2392, 255, 2391, 254, 
                2390, 253}], 
               
               Line[{1238, 1211, 3820, 1214, 1218, 1220, 3828, 1224, 3826, 
                1226, 3834, 1230, 3836, 1232, 3819, 1242, 3844, 1244, 3848, 
                1250, 3851, 1252, 3856, 1258, 3857, 1260, 3864, 1266, 3831, 
                1268}], 
               
               Line[{1269, 3833, 3832, 1267, 1261, 3859, 3858, 1259, 1253, 
                1251, 3850, 3849, 1245, 3845, 1243, 1233, 3838, 3837, 1231, 
                1227, 3827, 1225, 1221, 3823, 1219, 1215, 1212, 3821, 1239}], 
               
               Line[{1272, 3843, 1236, 1240, 1246, 3846, 1248, 3853, 3854, 
                1254, 1256, 3861, 1262, 3865, 1264, 3839, 3840, 1276, 1278, 
                3874, 1284, 3877, 1286, 3882, 1292, 1294, 3887, 1300, 3860, 
                1302}], 
               
               Line[{1303, 1301, 3889, 3888, 1295, 3883, 1293, 1287, 1285, 
                3876, 3875, 1279, 3871, 1277, 3841, 1265, 1263, 3863, 3862, 
                1257, 3852, 1255, 3855, 1249, 1247, 3847, 1241, 3842, 1237, 
                1273}], 
               
               Line[{1306, 1270, 3869, 1274, 3873, 1280, 1282, 3879, 3880, 
                1288, 1290, 3885, 3886, 1296, 1298, 3866, 3867, 1310, 1312, 
                3899, 3900, 1318, 1320, 3905, 1326, 3908, 1328, 3911, 1334, 
                1336}], 
               
               Line[{1337, 3884, 1335, 1329, 1327, 3907, 3906, 1321, 3902, 
                1319, 3901, 1313, 3896, 1311, 3868, 1299, 3891, 3890, 1297, 
                1291, 3878, 1289, 3881, 1283, 3872, 1281, 1275, 1271, 3870, 
                1307}], 
               
               Line[{1340, 3895, 1304, 1308, 1314, 3897, 1316, 3904, 1322, 
                1324, 3910, 1330, 3912, 1332, 3892, 3893, 1344, 1346, 3924, 
                1352, 3927, 1354, 3932, 1360, 3933, 1362, 3939, 1368, 3909, 
                1209}], 
               
               Line[{1371, 1428, 3990, 3989, 1424, 3985, 1422, 3984, 1418, 
                3979, 1416, 3978, 1412, 1410, 3946, 3945, 1401, 3970, 1399, 
                3966, 1393, 3956, 1391, 3959, 1385, 1383, 3951, 1377, 3947, 
                1373, 1407}], 
               
               Line[{1374, 1338, 3918, 1342, 3923, 1348, 1350, 3929, 1356, 
                3928, 1358, 3936, 1364, 3943, 1366, 3915, 3916, 1378, 1380, 
                3952, 3953, 1386, 1388, 3960, 1394, 3963, 1396, 3967, 1402, 
                1202}], 
               
               Line[{1404, 1436, 3996, 3995, 1435, 3994, 1434, 3993, 1433, 
                1432, 3992, 3991, 1431, 1430, 3972, 3971, 1426, 1425, 3987, 
                3986, 1420, 1419, 3981, 3980, 1414, 1413, 3975, 1408, 3973, 
                1405, 1429}], 
               
               Line[{1406, 3948, 1372, 1376, 1382, 3950, 1384, 3957, 3958, 
                1390, 1392, 3964, 3965, 1398, 1400, 3944, 1409, 3974, 1411, 
                3976, 3977, 1415, 1417, 3982, 3983, 1421, 1423, 3988, 1427, 
                3969, 1370}], 
               
               Line[{1441, 4126, 1637, 4152, 1631, 1629, 4146, 4145, 1623, 
                4139, 1621, 4138, 1615, 4133, 1613, 4099, 1601, 1599, 4122, 
                4121, 1593, 1591, 4115, 4114, 1585, 4106, 1583, 1577, 1573, 
                4100, 1609}], 
               
               Line[{1448, 1603, 4125, 4124, 1597, 4119, 4118, 1595, 1589, 
                1587, 4110, 4109, 1581, 4105, 4104, 1579, 1569, 4096, 4095, 
                1563, 4089, 1561, 1555, 1553, 4084, 1547, 4078, 1543, 1575}], 
               
               Line[{1451, 1437, 1439, 1438, 1442, 3999, 1443, 4000, 1444, 
                4001, 1445, 4002, 1446, 3998, 1454, 4006, 1455, 4008, 1460, 
                4009, 1461, 4013, 1466, 4014, 1467, 4019, 1472, 3997, 1473}], 
               
               Line[{342, 2562, 2561, 341, 2559, 2558, 340, 2557, 2556, 339, 
                2554, 2553, 338, 2552, 2551, 337, 2549, 2548, 336, 2547, 335, 
                2546, 334}], 
               
               Line[{1476, 1449, 4004, 1452, 1456, 1458, 4012, 1462, 4010, 
                1464, 4018, 1468, 4020, 1470, 4003, 1480, 4028, 1482, 4032, 
                1488, 4035, 1490, 4040, 1496, 4041, 1498, 4048, 1504, 4015, 
                1506}], 
               
               Line[{1507, 4017, 4016, 1505, 1499, 4043, 4042, 1497, 1491, 
                1489, 4034, 4033, 1483, 4029, 1481, 1471, 4022, 4021, 1469, 
                1465, 4011, 1463, 1459, 4007, 1457, 1453, 1450, 4005, 1477}], 
               
               Line[{1510, 4027, 1474, 1478, 1484, 4030, 1486, 4037, 4038, 
                1492, 1494, 4045, 1500, 4049, 1502, 4023, 4024, 1514, 1516, 
                4056, 1522, 4059, 1524, 4064, 1530, 1532, 4069, 1538, 4044, 
                1540}], 
               
               Line[{1541, 1539, 4071, 4070, 1533, 4065, 1531, 1525, 1523, 
                4058, 4057, 1517, 4053, 1515, 4025, 1503, 1501, 4047, 4046, 
                1495, 4036, 1493, 4039, 1487, 1485, 4031, 1479, 4026, 1475, 
                1511}], 
               
               Line[{1544, 1508, 4051, 1512, 4055, 1518, 1520, 4061, 4062, 
                1526, 1528, 4067, 4068, 1534, 4072, 1536, 4050, 1548, 4080, 
                4081, 1550, 1556, 4086, 1558, 4091, 1564, 4092, 1566, 1570}], 
               
               Line[{1571, 4066, 1567, 1565, 1559, 4088, 4087, 1557, 4085, 
                1551, 4082, 1549, 1537, 4076, 4075, 4074, 4073, 1535, 1529, 
                4060, 1527, 4063, 1521, 4054, 1519, 1513, 1509, 4052, 1545}], 
               
               Line[{1574, 4079, 1542, 1546, 1552, 4083, 1554, 4090, 1560, 
                1562, 4094, 1568, 4101, 4102, 4103, 1578, 1580, 4108, 1586, 
                4111, 1588, 4116, 1594, 4117, 1596, 4123, 1602, 4093, 1447}], 
               
               Line[{1605, 1662, 4174, 4173, 1658, 4169, 1656, 4168, 1652, 
                4163, 1650, 4162, 1646, 1644, 4130, 4129, 1635, 4154, 1633, 
                4150, 1627, 4140, 1625, 4143, 1619, 1617, 4135, 1611, 4131, 
                1607, 1641}], 
               
               Line[{1608, 1572, 4077, 1576, 4107, 1582, 1584, 4113, 1590, 
                4112, 1592, 4120, 1598, 4127, 1600, 4097, 4098, 1612, 1614, 
                4136, 4137, 1620, 1622, 4144, 1628, 4147, 1630, 4151, 1636, 
                1440}], 
               
               Line[{1638, 1670, 4180, 4179, 1669, 4178, 1668, 4177, 1667, 
                1666, 4176, 4175, 1665, 1664, 4156, 4155, 1660, 1659, 4171, 
                4170, 1654, 1653, 4165, 4164, 1648, 1647, 4159, 1642, 4157, 
                1639, 1663}], 
               
               Line[{1640, 4132, 1606, 1610, 1616, 4134, 1618, 4141, 4142, 
                1624, 1626, 4148, 4149, 1632, 1634, 4128, 1643, 4158, 1645, 
                4160, 4161, 1649, 1651, 4166, 4167, 1655, 1657, 4172, 1661, 
                4153, 1604}], 
               
               Line[{1675, 4310, 1871, 4336, 1865, 1863, 4330, 4329, 1857, 
                4323, 1855, 4322, 1849, 4317, 1847, 4283, 1835, 1833, 4306, 
                4305, 1827, 1825, 4299, 4298, 1819, 4290, 1817, 1811, 1807, 
                4284, 1843}], 
               
               Line[{1682, 1837, 4309, 4308, 1831, 4303, 4302, 1829, 1823, 
                1821, 4294, 4293, 1815, 4289, 4288, 1813, 1803, 4280, 4279, 
                1797, 4273, 1795, 1789, 1787, 4268, 1781, 4262, 1777, 1809}], 
               
               Line[{1685, 1671, 1673, 1672, 1676, 4183, 1677, 4184, 1678, 
                4185, 1679, 4186, 1680, 4182, 1688, 4190, 1689, 4192, 1694, 
                4193, 1695, 4197, 1700, 4198, 1701, 4203, 1706, 4181, 1707}], 
               
               Line[{422, 2719, 2718, 421, 2716, 2715, 420, 2714, 2713, 419, 
                2711, 2710, 418, 2709, 2708, 417, 2706, 2705, 416, 2704, 415, 
                2703, 414}], 
               
               Line[{1710, 1683, 4188, 1686, 1690, 1692, 4196, 1696, 4194, 
                1698, 4202, 1702, 4204, 1704, 4187, 1714, 4212, 1716, 4216, 
                1722, 4219, 1724, 4224, 1730, 4225, 1732, 4232, 1738, 4199, 
                1740}], 
               
               Line[{1741, 4201, 4200, 1739, 1733, 4227, 4226, 1731, 1725, 
                1723, 4218, 4217, 1717, 4213, 1715, 1705, 4206, 4205, 1703, 
                1699, 4195, 1697, 1693, 4191, 1691, 1687, 1684, 4189, 1711}], 
               
               Line[{1744, 4211, 1708, 1712, 1718, 4214, 1720, 4221, 4222, 
                1726, 1728, 4229, 1734, 4233, 1736, 4207, 4208, 1748, 1750, 
                4240, 1756, 4243, 1758, 4248, 1764, 1766, 4253, 1772, 4228, 
                1774}], 
               
               Line[{1775, 1773, 4255, 4254, 1767, 4249, 1765, 1759, 1757, 
                4242, 4241, 1751, 4237, 1749, 4209, 1737, 1735, 4231, 4230, 
                1729, 4220, 1727, 4223, 1721, 1719, 4215, 1713, 4210, 1709, 
                1745}], 
               
               Line[{1778, 1742, 4235, 1746, 4239, 1752, 1754, 4245, 4246, 
                1760, 1762, 4251, 4252, 1768, 4256, 1770, 4234, 1782, 4264, 
                4265, 1784, 1790, 4270, 1792, 4275, 1798, 4276, 1800, 1804}], 
               
               Line[{1805, 4250, 1801, 1799, 1793, 4272, 4271, 1791, 4269, 
                1785, 4266, 1783, 1771, 4260, 4259, 4258, 4257, 1769, 1763, 
                4244, 1761, 4247, 1755, 4238, 1753, 1747, 1743, 4236, 1779}], 
               
               Line[{1808, 4263, 1776, 1780, 1786, 4267, 1788, 4274, 1794, 
                1796, 4278, 1802, 4285, 4286, 4287, 1812, 1814, 4292, 1820, 
                4295, 1822, 4300, 1828, 4301, 1830, 4307, 1836, 4277, 1681}], 
               
               Line[{1839, 1896, 4358, 4357, 1892, 4353, 1890, 4352, 1886, 
                4347, 1884, 4346, 1880, 1878, 4314, 4313, 1869, 4338, 1867, 
                4334, 1861, 4324, 1859, 4327, 1853, 1851, 4319, 1845, 4315, 
                1841, 1875}], 
               
               Line[{1842, 1806, 4261, 1810, 4291, 1816, 1818, 4297, 1824, 
                4296, 1826, 4304, 1832, 4311, 1834, 4281, 4282, 1846, 1848, 
                4320, 4321, 1854, 1856, 4328, 1862, 4331, 1864, 4335, 1870, 
                1674}], 
               
               Line[{1872, 1904, 4364, 4363, 1903, 4362, 1902, 4361, 1901, 
                1900, 4360, 4359, 1899, 1898, 4340, 4339, 1894, 1893, 4355, 
                4354, 1888, 1887, 4349, 4348, 1882, 1881, 4343, 1876, 4341, 
                1873, 1897}], 
               
               Line[{1874, 4316, 1840, 1844, 1850, 4318, 1852, 4325, 4326, 
                1858, 1860, 4332, 4333, 1866, 1868, 4312, 1877, 4342, 1879, 
                4344, 4345, 1883, 1885, 4350, 4351, 1889, 1891, 4356, 1895, 
                4337, 1838}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
v2RKlzZZr5zp+XXRnJdwv2HPYi2JZLzdYn1JjOBMQsSI++x18ei5dmH1wpne
uKtbOvsQmW8SFT9o4jYWP8DET1ncWLxBPBVvwMSbUfVYfKLF3bH4RCY+Dcff
K9Ori8EsG65fXx+5or5FiIcgmde7YvH9++TTUUMw+7jdlli07Cq71Ufw4c5t
t0tN5enoPCXnjMzbYLTdMuGDBJmXkgTX2/o5iVju08QhG+6EEuMsPkkROw91
fph6U8sDzzi+zcHNC4Bn2dTHAeS7IqZj+xfmU/sXmP3rT+130Kb2O7TR+92b
wgf4ROEDMPjgqTGGJ3iawhNk8EQoPoHjHfih6qqqHWvtk3B2V5qUEVl3S6sB
l+8itvhoRmbJgYkB6MSqmzmJ2GP90+jrd3K+4W6Y8+qliBUUxEZ+Gj0/fN7Y
b/7lQAaM/z3jk+/TUNj14UWqK+EFnXk3L3+cmwarFq3mdeoOhW9DInqvh//B
Wyih8BYYvN1O4TP0XR3DZ2Dw+ShrDM/BsngMz5HBcxr/cQeF/8jg/wmBMb5A
iZ4xvkCGL2opfoHpFL8Awy/PKD4CLoqPwInmI5q/IJniL2D4ayrFd3Cd4jtg
+G4yxY/AS/EjMvx4juJTKKD4FBk+pfkXaf5Fhn+XLIyc+0AlDKefX+hueyQV
/Ksmeu4ldhqvtTBd9j4cExJXCrF2pEKZfcFBYTI+7dhBY/4zCTgskTR++0Aq
pBcuaOYgetR6LJVi1NNwIM3m7FT5MPi51Ke4iPg/vDZRUePNJbyUUfNOZtEZ
mHBIcYolwYFOTbybr5mH94J98xUzfdH5jLhwNZlX9QneLYqFGTj+5IZL08h5
spjXXNKL6G9rj70WejMBXz180mdurIdnbNX3uZJ4ezVbt9zteyJGPc7Rqoi5
AAsVrxRMJuPLdgYqXnlpDz17Zi6WD4iHM7x4Oo2MhzaddubqlQfZ30K77Xcm
w8Inmvt6SBwujAVZn2o/nLDx2PXZqeGwrjV1KIKsr/SanlCDr9G4z8Lq9c7l
54H76tdN9mS8YvuBvA0bE5Ansqzs8zx9LJIWH59B9C84t7fiuGkYZjcK1x07
aI3Lpd5EGhH/z/tmpVCUFoLWC8IC/94wxmWTRuLqyPi5vZeuGxh5oQsH/0Nv
U1Nsme1gbkzih3dcj9f2DZG40995914uBzQVttj/inzXQ+TKdOOj6RB6LMv9
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
QSszTglNck8XoOWr2OS/bdv7sPNyPk40fyzqy5WMZzy4hzcQ+X10XVs4W10b
73vHhyYCZVijOc7/8YVM9ND71KBE7k0HaPlINvlV30zKz5L76aBdk9uZkXgM
r5bPeTDwvzq+UjZ7rlPnB+TaPXZ+QOb8oEPX981mq+9b3rRrg+L6IgzfqX7k
1KRwlMoujHhH1reErr+bwlZ/pxjK+/rVhBIsv7VVQvpPHG63zN2x5zULyml5
YTb5aOq8hAf8x85LyJyXOul77h+2e+5D6n4B1X5j9wtg7hdFdF3ba6pOGZk6
5YOv7k0LPJ+B5xqbj7vpJ6PiJM1vsWR95ek6vjS2Or67FH/BJYq/gOEvXbqe
8awHVc/InPeuFzlKPCG4E6TsbT9tMAcDNvg255DzSR1dD9hK1wNOp+sBV9y2
8PiZUIZ/W0709uam4e+24a5csr7VtH/msflH0B2lDs8qxFMS811u+sei+nLZ
7InkvHSQrnN8dYGqc3xL1zlKOfC6bxFLw+16Gqpz16egeeuCO1lkX3TTdYjR
dB3iVboO8dI+R91LO/Jx2ZbCXzKS+Xj6rqqi/CtyPqTlU9jkJwuzqlmz0pAj
7VryykemaNlexQtkP8rQ9kx0/Lc9nqvnXNs1bIdVxoK+LXbJUKhqfDWK8MtK
uh6zm67HZOqp368UeHfi6WWc/t0vz60nDxV3udjzkXPX+/+wZ1jtyMvv8lFo
Y6SzsNQwAfuPiqe6EHv46PrKbnWqvvInXV85oCWuuP+vN7q+fZWVKeEFFovF
nXtG442uA73PVge6lLqfwlHqfgrM/bSXln/CJv/H/8/NbSudsO/HcY7jwWfx
w/GrfwtInAjQ9vxls6evqaSm8HcoKEw56qucFQ9tbk4L9Ij+j3QdKBdbHagb
dR8H+j4OzH385X/YE0rleVCAyvMgk+fRoPIA2ELlAZDJAxRS9x1Mou47yNx3
ttL7JYltv3TEOzy1jQzFQ0Zcge9mFODa53ITvUnczuGbZbB6agAkaFrqrneN
gF9yUvwnyH5sputYP7PVsQb9+uN1k9yHo4dsNIyWpsBuufIV4sQ/N2j5r2zy
QieCK4uNvLDp1PO9CkczsKvwj+BxYn/IsoOzQ06mg4FlYL3pMXus4bvScYjc
4y4Kb7KwnVEErSfvTussKILLmb8vziX7sYPWz2n8b/13qLwT3KDyTsDknb7S
9bZJbPW2oRtzG0pvlkCVdklf74MImOS/yCyC7KMf6kndJrZVcNj1j0BeaQrU
WSytNCP3LBsqDwY2VB4MmDzYAK0/iE1/JZWXgw4qLwdMXk6crvPlZ6vzJfCe
OTL5Kiy6vCc3V6gI2s3/wIc8wke1Zb/S3teCX31DzKKiAmhIUTuJNYQfqfwh
cMmM5Q+ByR9O7aRwtZ8NV2dS+SIUofJFyOSLtOo/6Hp11ICgoOpeSfE8OGS6
oZ2vkQUua3aHLOMvA2/HD2FGnenQaTQUZdlDzvNUHhW4zMfyqKBK51EDqbwr
yPKM5V2RybtaUfleeLR9LN+LTL7X5/hYvhcKqHwvMvlezbqxvDEoUXljZPLG
b7u2B2zx9cDYdM1eSUEHONqYKH2C7NPgnMg7XdUxOP9Twynj9B1o3Lk7ePR9
u9b6GTYFFcH4wWuPurG1EmS2fCl/Q/xTUb7OeCTcDmyTb767FkzW/XDOtwmj
uEfXqb1lq1O75RSqbPsgDevlL67MMN8KnMLSxY9JfM5uSVH5OCMLb5Y0Tl60
xQeP7T+0kO87CyZt3Px3XcolXJKY9PN1czDm7Z4nmkL8bGAaMa2kLg/71n06
/7AlAh/x7l+9hZwn+VW6eDKP5+LloK2mua2hqBuouOkD2aeNA/WKJ/R1ULbz
Z6q9oC1eXDc3/iGZbx5dJxjKVid4fCgq34X3Irauc+usRXfsWJQ1pDFaj0bX
4fKy1eFWa3Wrf3p5Fh4+cD//STAKYiWXPn1Ixl8MB0f19/viIs+o7inbg3He
5co2OeKfY7QefjY9t4W8tGNCLuGb4u6LkVaRmNEtK3WL7IsNP48qdOumYXGr
dOZywwDcG7PKew/x23fdnGXjbCNxjcm54LlFIThxnO7ITeJn7f/QP+v57+66
NZHYLzot4wRnOAayONa7EfnDdB3xarY64sUTZXe+M49Gpx1c6poubnjRKzF6
9D2GuRCnkfQrMh/dKbMXF57DzkX9Re1kXrHS916LKcShTPwcw8KV0RinJ1F6
m+DzMVr/Wjb9FRERESu6fHH7cw6PEx2u2G4lvXWQ6LGk65f3sNUvy/8Zd+4v
SxmCz8+wsjb0hs9uX7hH67bme4Q6H8t2Bq55C09PIXjg+efI5pvEzv6tGUe9
dnvgJfElzcsv2eEW597Uk6Pvq2n9qmz6dz+J2ClWfA7P3eYvOt5mjVILf+W3
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
U9XO8+oigTArv9OwQisZZ8bqPBgdn0P3JzxO9yespfvvnQ1tzTzACoOFPX1T
jc+5Q1G98sTR98MqtD2SbPZ0dY44b2aFwttpiYH9MoYgHrG5OuT/lS89/E++
9MMXo/4HN4IgZpsHZ8++RLT+461uRvyTTvdFXMLWFzF5nVxVqJIr8MxPH/+0
LRmXq3233knkk/+jj+KlBYI7J13xwwIrnlaN2QnQHdN4/DORz6D7EMqz9SHk
ps5FuJY6FwFzLppA92N8yNaPUXycwjI/Xl/c/OHh9gHfJPj48KPk+V+jdRb/
7mfI+LOvyW/uEi1/+NzhnWotZo8ThSav4//L+Mee9supf/7/gir7CzpKxp6Q
OCuy54NsIHotMawYvX89Y+vTGET3abzjZxxrqhaM89a/89/TEgUGl7KDkNhp
9x99FNMWBAhmDjljltRtl7SqWLAyVyn/SOStafmFbPKmR3atPVHhDr0/Ez83
lYXjTP5ZtW9G+/nQ9hiy2fOgXP6GxWs3mKM4Qa/YNRaPjrvC85Ton033k+Rk
6yf57uKaCT8veSPXszrZU8FhIBiQO6uf6Lel7RFjs0ddfGHUzeQg3MV1fr7R
a284nx33zJh89wDdH1KZrT9kJ+Uf2En5Bxn/pP9HH8ud1PqCPbW+yKxvPC3v
yiavaNFQ+f/Q9d5xPf7f43+kkC0ZkWwhM1TWQdlSUiGVpKLSVCqkvffee2vv
ojqEpBQysislhAohGf0ez67H8+3zur4//16303mex3msc07Xde72d/1QY9ee
N8b85jB5nOCK2//Hnr0se2J9Tr6daemH55VyMoe0nkTsGL2ak6econ0so1h9
LGOY9QwZzHpG7nqOofbYs+wRvH9dreJsCIy4YTrSRioKs7v3vnjX/7c/Zwur
P6eK5usPYauJS9I7F/MkRUGsXtNAE9H/ifaxjKF9LBNpH8uJjH6cyegHrv7U
f+yvXad2fZ5j740PTizoDZ8UC9elygU0OfuF6o9l6f+2KTPcyiQQMxcK3ozV
cUXvmbjyN6cOQ/2TwvLPlH1rVDf+IPYEpsS2zQ/Ercrempy+E2dp/8/9rP6f
MXu9hmRODMBQU+vRHfKh8Gz/l8vhRP4rtSeCZY+qLkL1kjDcZ3vSWzXSDzoq
g29z+knepf08k1j9PE9OyxTfetEPl29+NO4c2ZcLVk5b2Eyea9G+o9dZfUdz
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
0s4pSPjFwVq/gaCDCoHQ+3TJlC1E/+XhpusTsuLB9UrkPjUlUxB20bsmQOR3
MXVOuMDUOZFb53zM1EXhFlMXRW5d9DxTj4V4ph6L3HqsIFOPxb1MPRa59Vhh
pq6LaUxdF7l1XZ97hoJVE8xhQmqgfFNtIGTqbhh9lMzLpFftMU6pTqhx7Hy2
fl8KHBGyjlUm6/xrecmRpUmWcKLR0XLHjgjQWvxOazGnH+++yUk4LhwX7/it
M8E4GY0kO++rkfN5O+UqCnT+l6s4yvekyektvlh/NOvagh2X4c/ETwO6nH7d
daMzj+3JxalWci94ZQvhw7dfcXEPu8FbT2LM/OYSfOwyat6WnxlgdfOS5VAi
b7p3aeVrXcQclUyPndtPQZGFltzkqm54aPNxeYUHouuk8ooO97PY5clnfvIq
udc2/H4+foIOGsvpv1zjWYoLx5wz2PCUnD+Ua+lNuZbZlGvZsppntcfzULCQ
VTb9vCMYZCvVbYdweIKUD5tA+bBIOZIbhd/NHr3SGsr7PhoM1bSHs97w3Ivz
/tuNNuOnV8KgMzFp95HrkTAs90sDJ792ZHFmuXqUlm9uzPxdgZpHSpTyJgWj
tDlYNt0g+8tITMQ67xLerBszVM41BCdOvP7r8D1yzneKdSsK2ENK9PvF1aWp
YH/s2Lr3RI8t1Z/J0q94pO7+oXlOcHlns1KCaiKsOrw8Bck5qU/5tv0svq2I
z+br6R+L8U2p+LH3pZE4zTv44zgSl65yv7Rpr3IJrj5xke9CURzG37af5vyk
GxpmTNeU3xqE9bm+6523e8Il80ZbznciOlT/G5Z+3Kv9aeVnTbyncnMVr5c/
yO1VD7vJ6XdKubqzWVzdtuV2x28czcN3D2Z0wcQ47P288dV4sh+TT/en39HN
xL3rr5t5fotB+epLtgkkbnT87XJ4hL0Ojjr5QkLWyAbCjmsnVg381S/C0v9o
jfKa11rn8fCIVncx7+MYbb/l4k0iP4/yfAspz1eN8nwVDVT6ditm4Ra5Wj7R
nASUeiczagp5Pu6PT8Xp4iTc3hxw3W9TOt5+n2alSOy5bR2TvMwsDu6nNyYo
dKTBG+WB6YIcfjTl9tJ1CNx1OCVcckQ4vx+4VH9bNTfHCz6PuWbI+T/UZsov
3sDiF6/JS1vp3JgEsj8sRm8i+e/42rk8U8nvLqD831wW/9ehNmnzt1wrOBb0
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
P8+m83KbNS/dH7/Ku97zBXcJUQWlR9GQenbsATeynvd4VuzbxecNIiLHmxTH
RgIP1K3dz+EdUy65CYtLHtLRm46TiB9fiQdI80Wg/qrk6gEOl1zyhGmiizOa
GcX9eLM4DDftGfguw+k/T7nzS1nc+Q8PBAKSevRhwZ09yidNXXF4wuOtBkT/
auqfvLb/+seB8uJNWLz4H0ai2iVLQ6H50E7tpOlG4Np6xOkx+d1llA9+hsUH
j6dc9WgWV134eVplsGsiDKxqff5YyhX2+3t0OJD5XUn54DtZfPAwyluvY/HW
BVvk94VYJUGutdjukOYgKJwe9LOSrB9DyhNPZfHEm2LkRSQ1o+G3lPOMs4t9
oD61cQfnOxdryvVeyeJ636Zc7wgW1/visPH8gi+8Ie3TtJuB2nZwhndc0wtO
X8RSm2nnV0qj4OqGEjEfN1w7eu80DgczeXYPmJP14fD8s9OBy7IYdNXoLWed
rKJ+s2f5LcLAS3nj9AR4KLM8dF9TKGgMa9JOJfsr9B/c+VrKW29k8dabhPaP
+iKXBksn8W3wOh4N15a+/aFFzoEb/+BTy1Cutz2L66268+eKU2XJ0KDdum7O
Dm9wXm4y2H/yCOV6F7G43gYLb7UmSkaD6IBB09VdB6Fao2xMGpn34ZRbbcji
VhcUep4ekeoEYhm38gw3+2K/sqR4PHl+i/r/NMv/HYcYnvVYFs86bO8Y+478
Uxgx7NDjj6HhOBJSB45z3ot+lFuxbMAPREQTpB6LhkG9YH9PGLGnfl0+tkfE
wFR3n+fTCmKAzzqEL63vL0/8Pcs/7+wNdMIjIqG2Y4nlI9dI0Cx/7j6OjNeK
8rJPsHjZZy7MKN431xFuRua+29FjB7teCReokXk37vDWFV9sVv5bovqKebvB
//LT8Q1P+J1Ou6EGT19kWZAjJq+Iucjpr8JD/abH8tteymW+wOIyv4xouDox
Ngrfp0w4uGVFNPI5+C6zIuufn3KZ17C4zPoPxDRjv0fhQLDPz6iRsdg++WZt
L/GD9j+4w2KMP3Eq40/k+nPBvkH/w3bG/8D1fzYzvxh4cXB+gTu/0yn3+efM
/3Kf5/smXzLkicOCw+G1Ub2aOMXHW+An5/yk4z3HGq805S9rs/jLAY9X14pa
pmBWYO0Z8ckBmOfaX/eA3DsmlC88lsUXNgu1q5FQTcOAS43Njy+S+D17u/iu
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
baK/yxHc+qdqytiPhXD2db6vA8nnBzm9RzzD6T2CQO9xUs726e8vOeLVW2Nz
efal8EXp6TWhxyR/ek98knEwGA3P/Wxcd6cEbqhtneVKxg2LpDavN4jBl/oL
v98ZmwJ157aHppL3Iq7EM9tKNxHlbETv7/vsjDZNreXbST3geS9nTev0JJz6
dOpO3ZiD6P5nWRPfb0iu8VSSv0QiVqXqmnW9D8ApA0RyU8m9ECFxT17lfTw2
2Dt3pJnH4/UnRyVVSV2tovGt2/1IJD4NuDlhct9ofPqk1Hs+mWf4ki+6Qp2B
OPrELRWjcWH4fu++hY7kvLnefjRcWT4QZ43V6dYfHIR+16XEVcm5GhKjYXPc
MADrNc50uEv44pkTa56+J+N71H+VHC8LwR19Jsjq7PJHr6JIhTFk/JLvAmUt
sUgccGW90L78AMyG+bUyZP49b2ryp6jG4fzhIpaXajwxe0Vnqw153+Opj8wf
6iPzgPrISC6xbRWvtYLRY8tFvpsUw82h/fYWkzrBuI9dk7aUC2aqHtm7XKoA
1u1o8TR49+/9Mpn7bvrRlbF4deex6nkDgsD91btRvcn3WlG/mL7UL+Yc9YuJ
ofsygdmXeRnRz967ROGry3kjDrxxw1Gv2i1OkOdqf7tx/Pb1gegx3n/g0yde
uLd03G9+fNqEzgQM/OyAzknT5MbMPY2rB44at6bH9+r/9oW507Vcbo67PsSk
HLhYancKq8aK5pSSz7c9eXIh79g+eKcvdsq0txeeaWyv5eNaw02qqgds3w8Z
wxbUdNUEotAKBacIvr7c7YLC6TNIPnEx+BkTFYyJ80wiJPn4Crovo5h98Vh4
4fmz5T7Q5CLcIGoeio//GL7g/248U3/xQOUcQ+iULtUd8S4e5yrEhdj++uvD
0kF9WMyoD8uI9K3L/d9FwrNap6KTUgkgYTemLobkn/LvCuOGTFmC9yZIrpKL
jCJ1revVfny9XOqzk8347DQkqly8JmaNsXD4qmGLL+zK3z/gPd83nMYniomP
JfXHCWb8cQqL79vZbTCBZTceXNn50R3crfLua3T/9XNh/VCCqI9MH+//+sjY
SS62TU0LhoroTxtbAwJgXR8dH5k//HqV80M5wvihRFF/mXrGX+b+L73J/l0J
MMtGpio+7xToVHdWZ3b+9XNxYvxTRnksXxNYEA4f3QfGSo9LQtRYtOYlea+/
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
coWaN2aXRpPn7aZ8ohSGTyTb88OJ89KYVg/yZ/C/30/0Kd9qIMO3Gtmcf352
tz8MH5+4qHV8ODQO6fwQTtaze92vuUfPpcDt/e2LJ671Adc5Jj0+L/WLC/FZ
ZCwM8vC9P6ooFvrZhPZLJ/vbSXlYlxke1g6bYXjbKgWsDe3HnA/3hBjDlZnS
5PN7/C7NGmKWCLUpZwzLjjrAhWjdVSYkniayde1JC2NgV/eRlmpVLbikc04y
nczzk/K5Whk+F8/xiEFEZBRcfyFn1ewWBXoV9z2kyLjWi1XL1yTGwpT0/Ku3
F4XDfZ+tm8X4Om+U/3WL4X9drBs6yKV/IrxN0tsBUkkA99o0lpLzv8X0bK2P
UhREjir/9UvKCWyszwyrI+u5UOxl1j/NBYZk1RUYrfDDzu0LZyaQ+E/j4okj
uHiiIJ4XNlR3HQ+Lh6KA+J9WU6NARjn8fROJw1HKLzvA8MtuTB6ze/w3d/Bp
t9n4cIozzgu28+1P9qtWSyU7BjZin+1dsi6bIvGc9Qtlfp5X2yjp+KLwKPr3
3dH6LiwCRSGtm+/350x5bUcYXpvPyTGlmyc5Q1NU/uu1H06B6hPpot1k/v33
rh9/VRSGZ0mHtbPbE39Hlt4ewcc5Uz6XOcPnWrG553tBhfteEHzvv3hwXxvb
hF3M3HFrrx9R54KdMWVubCYfX9cuxPHd0hm+WwYXZwzI7IkzCOLsnNv/yYwO
a7C7vDRlioUV5vomXufju7Kvc/y4qww/bjnlx1kz/LgbkdeqB8dF47PUQVor
58ZgPye/2dYk/jJ+KWVGveIxTDuiPvqLHo7w9RH7Rd7H1L6HVskOswfT8tDR
sl4h4Grb/KmTPO+SX5VNM90ssfP3jia39hC86//OpDdZZ7dJlvxGg3icZ3lK
t8EgCSNnCg/k19t7bk/Ti/sejd9DfH9Fi8bhs+GX67+QePr14fh6eQxfL5fy
0UYa/ZePlqzgc1NthxtuXOIadV7EGIZr3i3i62HOfrB/bIiwJ2rPu1tdWR+O
IWddH/P4OpOU97eV4f0toPy4PQw/zrd1fv14q1TMCKq3nDk8EAvcOhtuk7ru
2mW/+AV6Sbgu0C1ou2kA7nxavY6PbyynPLhuhgenQXlwzQwP7msuxysMZHiF
0rtazlbU+mCkuLz6nnQn/KwXZ9XQ9W++oUnYqSsKO9PRv+zmo9bMGIzIVZmp
St5rpRLJhsqAeAw5N+4G3gpAuUFxXlYkDzRSHuJMhoe4eZ13sEVsIjre1fow
9HsE+g6wm/CJ5L20YTnnw4UycMOBB1P2zIzH65csM2RInXlr+8dfO32TMPnY
tnm9FEIx1H+RxUjyvDzKZwxg+IwDKW9RkeEt6l40HVhLzkGOw8IcLVVXLB69
YmgDGX9ZOHnTeuVkVBuYrm2zOBIt7pZce0ri/yjirmuIfTL2VirMOhwQgtod
cmtiyTpHZ6uPEXWIxYe3VewPHI3AUyXjRVvIebbxTG5alBWJRq31qskZAdi1
6pJPL7KeCMqXdGL4kv+vrvOO5/L7/39LQ0lLe4iiqaWi0lNGi6SyskISSVbZ
W2bZe++RLVvpKSRRSCINlRIqs9D2O1evy/dz67r93rebv87tup3rvM451znP
53Ee98fcC8Hpjly+2G+e0zs9cSPeqB0W+U363ydvvqvh90TcdHhAUXmRJ84v
s9lD+WU0NjjfqCpMROvZaZf2dfuixR62z5tI+YRdSouNOuJQOiJO+vIjd+Sp
XCelQ/o/2eTbNq0VXji/9h7fETlz7GlV4qDWgUT2A5ISdwzxrLP+Vva9bvC4
t1ieipe88v/GUZDPiqNgPI7KZMXVUMeKq0GPjqtlaV0nMHSdZv7Tvzybbglv
PsUf/TNyBTgzH2SUUr4tO3sMB2WS4MfPhX2e7f5w8HNHvBPFBRppixjamQgz
dcKap73yh4qMhfLC5HclCK2+a3PbE+Fh3nfxNxF4S19rggR57wNaHyrL0Ie+
XcOTEn4uEJUEbwp2sBvi0c1Rr2Sp+UzrQFUYOlDr5qMj/Mkkjg9839vzJxi3
VCYGepN6NKwvc5qpRuOluSlqF5f7YmvlhGPU+Y8wrRvlZ+hG9WndaLDFv7rR
JSvdv0/7tgSHKqOf68R4gkSkXq0MKU/jPHyjQ9YGvm9c/HHUygTTl8d4FpNy
iUvDM/aSdT+7Xmow4Uwghu8rSRCjdM20/tSeoT9NvTLkOLrIAtsXJufJTPVC
+/6yxTNIPREW80bvFDvinc/zbbw6bEBcoEmeWse+66/yGxi+CpyNx3GaTTjw
V2YFNJN6Yll5EDiw8iAYz4M8aX3rR+1/9a0cSWFlp8Vc0KBOzNb/kDnJk7J4
DCg9FK17bWToXrV+nP86ujkQ+u8u63y/6Apkhwf3UedLjq3z31QdvwgSZ/Ly
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
6WDTRdrvSPMq9Ri8ylCaD2nH4ENesXn+ZWRnOHxTOWhun+AKV04cL6B4Jgdp
nmc0g+f5mV+yUf+XMUzN1j/2x14ZTG9VzaD2NTOOPVbJKYFQEDkk/czPDw5P
VvfiJuOoSPM/pRj8T7fY5RrHfgbDwtb0s5ucXUD5ZsAsG/J81PNLWjusyHfX
X9X0PdMOipa+KjYk/RZaLKTtJhsHVSfX52oGhkB814RFa8g8f/ZTY43vnzjg
seQuj812APW7P+6mUf4FNF/0CoMvGtc37ViDeQa8bij7ImGdBAFs0w8vJf1T
OW/mueMaBpBewv7h7Hwf+H5Qcv5E8rvu0jxSVwaP9KtGldqDp4EwYmCrtnHf
NVg7E9UDqXn7vOlIwWAAQFJr4+EbHvj1jKsbpduSYS9pef8zDCzOnU4ZOu2F
ebZvJVx+/Y9reoHBNV3qsV/SPzcU+t3nRC9dmYB4Skiyi7qvS3M7NzG4nWyW
LsLecSlg+eHkqqBLSfBii9NkLpLXrOxV2/xkTxHIuY8occ6+CTY/9WWLSdye
ajf2o9OkCMQcM7q/haRBsvR6vitNJM4pFkrWSPaEe0uvyOZPSMHDWu+yppP3
7qZ5qpYMnuolmi+6k8EX5aR5qj4MnurrSrc7bUUuaP82wGjG41BQ/Sy8iIf0
j4enf2rQjWJoW3r68ka9eGjEab3+zf2gMhQcWpYaB5P2d5l9Ec+HUskDv3RI
/P+D5qyaMDirZby/Vao35gK8KTyQ6xMDhYoCIcmkf/Y1vZuyJq0EJF8lzqwu
TwDrpHjdsEYSV1+Vvt5bnw3Lgz04PUy8cPY9hbpTZL+Lo3mthxi81hy9xybK
95JBzN82u2tTKXQvPnX7I4krdKY+OXxhXjJ0w+qRPS9zISj4V/D59//ju+5i
8F2tj1XzWzTlgKSsl/z3VeWgrz3k+i6D7MsiMpE8LdFQ/aBdP/ZrPNo6TbRP
I/uOppuhVbqCG0yzmJM/eV0Bmidpphq/64dZVX/7E3xY/Ynj/VklWb+AfUsm
bHva1qA4Pw/k2wbr28n+20zzYycz+LHsmTZX2peagVj+7uQD+wrQ4M7R1iRS
/6vJIusmTzqOf04oruhdUIKb2F0OB5F1o3FP5k4vF2tYw11b4a1WiGymk0tt
SX5qZbllX0JeCswqUxFtmRMALbvnPqgj8Rg3zbN1ZfBsOc3WlOiUucHdTFNh
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
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0.09259458092137765, 0.7486122776543305}},
             PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
          1.4}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10, 15, 20}}, 0, 
         ControlType -> None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
           0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
           0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
           0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
           0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
           0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
           0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
           0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
           0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
           0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
           0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
           0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
           0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
           0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
           0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
           0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
           0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
           0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
           0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
           0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
           0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
           0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
           0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
           0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
           0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
           0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
           0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
           0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
           0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
           0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
           0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
           0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
           0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
           0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 0.25}}, 0, 
         ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {0.4,
           1.2}, {1.3, 1.4}}}, 0, ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10, 15, 20}, "numberOfMasses" -> 3, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 
            0.4602510460251046}, {0.8200836820083681, 0.1673640167364017}, {
            0.6778242677824267, 0.6485355648535565}}, 
           "mPosFirstCell" -> {{0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, 
           "pointsDataTable" -> CompressedData["
1:eJw9kkFKA0EQRXsSo1EkeAWvYLKvOoNHEIzuvIpLM2ThNVzVbIPRjausFARh
IKBiCEokmun/fwqaT3d113/V3cdnV6fn7ZRSM3qb0dqMQb+JryhHTXSqYY43
u8i6jodpEzuO/GdIkV9yXhvqvMYIdfwm68T+crzHbZ7fsd7c5APd9ZTj2+6R
jz64DOsf1ORY33Odg18dSG85WffAwbUiZ1GV5BI/eJKLH/mfeCQH1p9M/PAr
XPzkDvQ7s5IqfuxrufiH9EV+xfMvJn6st138GWO6YH9dcbJuj/3WUWBDpf71
rjo3BleQOy6p4rxGfwa/Ln3ndsJ7oRrua0H/JfvdJ0fhv/m9n+mz1j1zX2fb
F7gO+U9moTr6B9Aj/westChU
            "], "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{{
             1, 2, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
              0.5, -0.5}, {-0.5, 0.5}}}, {
             1, 3, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 
              1.4}, {{0.24615384615384625`, 0.4307692307692308}, {
              0.4307692307692308, 0.7538461538461539}}}}, {{
             2, 1, {0, 0}, 0.25, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{
              0.5, -0.5}, {-0.5, 0.5}}}, {
             2, 3, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 
              1.4}, {{0.9529411764705882, 0.21176470588235285`}, {
              0.21176470588235285`, 0.047058823529411736`}}}}, {{
             3, 1, {0, 0}, 0.25, 0.6499999999999999, {0.9, 0.7}, {1.3, 
              1.4}, {{0.24615384615384625`, 0.4307692307692308}, {
              0.4307692307692308, 0.7538461538461539}}}, {
             3, 2, {0, 0}, 0.25, 0.8500000000000001, {0.4, 1.2}, {1.3, 
              1.4}, {{0.9529411764705882, 0.21176470588235285`}, {
              0.21176470588235285`, 0.047058823529411736`}}}}}, {{{
             1, 3, {-1, 0}, 0.25, 0.45000000000000007`, {0.9, 0.7}, {1.2, 
              0.09999999999999987}, {{
              0.19999999999999987`, -0.3999999999999999}, \
{-0.3999999999999999, 0.8}}}, {
             1, 2, {-1, 0}, 0.25, 1., {0.9, 0.7}, {
              0.30000000000000004`, -0.10000000000000009`}, {{0.36, 0.48}, {
              0.48, 0.6400000000000001}}}, {
             1, 2, {-1, 1}, 0.25, 1.6899999999999995`, {0.9, 0.7}, {
              2.1999999999999997`, 0.7}, {{0.9999999999999999, 0.}, {0., 
              0.}}}, {1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              1., 2.}, {{0.005882352941176467, 0.0764705882352941}, {
              0.0764705882352941, 0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 3, {0, -1}, 0.25, 2.2600000000000002`, {0.9, 
              0.7}, {-0.5999999999999999, 0.5999999999999999}, {{
              0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
              0.004424778761061955}}}, {
             1, 3, {1, -1}, 0.25, 3.3999999999999995`, {0.9, 
              0.7}, {-0.4999999999999998, 1.9}, {{
              0.5764705882352942, -0.4941176470588236}, {-0.4941176470588236, 
              0.423529411764706}}}, {
             1, 2, {1, 0}, 0.25, 3.4000000000000004`, {0.9, 0.7}, {0.5, 
              2.5}, {{0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 2, {0, 1}, 0.25, 3.65, {0.9, 0.7}, {2.3, 2.}, {{
              0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
              0.463013698630137}}}, {
             1, 3, {1, 0}, 0.25, 4.25, {0.9, 0.7}, {1.4000000000000001`, 
              2.7}, {{0.05882352941176473, 0.23529411764705888`}, {
              0.23529411764705888`, 0.9411764705882353}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 3, {-1, -1}, 0.25, 4.520000000000001, {0.9, 
              0.7}, {-0.7, -0.7000000000000002}, {{0.5663716814159291, 
              0.49557522123893794`}, {0.49557522123893794`, 
              0.43362831858407075`}}}, {
             1, 3, {-1, 1}, 0.25, 4.879999999999999, {0.9, 0.7}, {
              3.0999999999999996`, 0.8999999999999999}, {{0.9918032786885246, 
              0.09016393442622948}, {0.09016393442622948, 
              0.008196721311475407}}}, {
             1, 2, {0, -1}, 0.25, 5.85, {0.9, 0.7}, {-1.5, 
              0.3999999999999999}, {{0.9846153846153846, 
              0.1230769230769231}, {0.1230769230769231, 
              0.015384615384615389`}}}, {
             1, 2, {1, -1}, 0.25, 6.289999999999999, {0.9, 0.7}, {-1.4, 
              1.7}, {{0.8410174880763116, -0.36565977742448336`}, \
{-0.36565977742448336`, 0.15898251192368842`}}}, {
             1, 3, {0, 1}, 0.25, 7.540000000000002, {0.9, 0.7}, {3.2, 2.2}, {{
              0.7015915119363394, 0.45755968169761274`}, {
              0.45755968169761274`, 0.2984084880636605}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             1, 2, {-1, -1}, 0.25, 8.81, {0.9, 
              0.7}, {-1.6, -0.9000000000000001}, {{0.7094211123723042, 
              0.4540295119182747}, {0.4540295119182747, 
              0.29057888762769585`}}}, {
             1, 2, {1, 1}, 0.25, 9.009999999999998, {0.9, 0.7}, {2.4, 3.3}, {{
              0.24972253052164267`, 0.4328523862375139}, {0.4328523862375139, 
              0.7502774694783573}}}, {
             1, 3, {1, 1}, 0.25, 13.599999999999998`, {0.9, 0.7}, {3.3, 
              3.5}, {{0.423529411764706, 0.4941176470588236}, {
              0.4941176470588236, 0.5764705882352942}}}}, {{
             2, 1, {1, 0}, 0.25, 1., {0.4, 1.2}, {1., 2.}, {{0.36, 0.48}, {
              0.48, 0.6400000000000001}}}, {
             2, 3, {1, -1}, 0.25, 1.2999999999999996`, {0.4, 
              1.2}, {-0.4999999999999998, 1.9}, {{
              0.623076923076923, -0.4846153846153846}, {-0.4846153846153846, 
              0.376923076923077}}}, {
             2, 3, {0, -1}, 0.25, 1.3599999999999999`, {0.4, 
              1.2}, {-0.5999999999999999, 0.5999999999999999}, {{
              0.7352941176470588, 0.44117647058823534`}, {
              0.44117647058823534`, 0.2647058823529413}}}, {
             2, 1, {1, -1}, 0.25, 1.6899999999999995`, {0.4, 
              1.2}, {-0.8999999999999998, 1.2}, {{0.9999999999999999, 0.}, {
              0., 0.}}}, {
             2, 2, {1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {0.5, 
              2.5}, {{0.005882352941176467, 0.0764705882352941}, {
              0.0764705882352941, 0.9941176470588234}}}, {
             2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.4, 1.2}, {
              0.30000000000000004`, -0.10000000000000009`}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             2, 3, {-1, 0}, 0.25, 1.85, {0.4, 1.2}, {1.2, 
              0.09999999999999987}, {{
              0.34594594594594585`, -0.4756756756756756}, \
{-0.4756756756756756, 0.654054054054054}}}, {
             2, 3, {1, 0}, 0.25, 3.250000000000001, {0.4, 1.2}, {
              1.4000000000000001`, 2.7}, {{0.3076923076923076, 
              0.46153846153846145`}, {0.46153846153846145`, 
              0.6923076923076924}}}, {
             2, 1, {-1, 0}, 0.25, 3.4000000000000004`, {0.4, 1.2}, {
              0.8, -0.6000000000000001}, {{
              0.047058823529411764`, -0.21176470588235294`}, \
{-0.21176470588235294`, 0.9529411764705882}}}, {
             2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {-1.4, 
              1.7}, {{0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.4, 1.2}, {
              2.1999999999999997`, 0.7}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             2, 1, {0, -1}, 0.25, 3.65, {0.4, 
              1.2}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
              0.463013698630137}}}, {
             2, 2, {0, 1}, 0.25, 4.25, {0.4, 1.2}, {2.3, 2.}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             2, 2, {0, -1}, 0.25, 4.25, {0.4, 1.2}, {-1.5, 
              0.3999999999999999}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             2, 3, {-1, -1}, 0.25, 4.82, {0.4, 
              1.2}, {-0.7, -0.7000000000000002}, {{0.25103734439834025`, 
              0.4336099585062241}, {0.4336099585062241, 
              0.7489626556016598}}}, {
             2, 1, {0, 1}, 0.25, 5.85, {0.4, 1.2}, {2.8, 1.5}, {{
              0.9846153846153846, 0.1230769230769231}, {0.1230769230769231, 
              0.015384615384615389`}}}, {
             2, 1, {-1, 1}, 0.25, 6.289999999999999, {0.4, 1.2}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.8410174880763116, -0.36565977742448336`}, \
{-0.36565977742448336`, 0.15898251192368842`}}}, {
             2, 3, {-1, 1}, 0.25, 7.379999999999998, {0.4, 1.2}, {
              3.0999999999999996`, 0.8999999999999999}, {{
              0.9878048780487806, -0.10975609756097565`}, \
{-0.10975609756097565`, 0.01219512195121952}}}, {
             2, 2, {1, 1}, 0.25, 8.409999999999998, {0.4, 1.2}, {2.4, 3.3}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             2, 2, {-1, -1}, 0.25, 8.41, {0.4, 
              1.2}, {-1.6, -0.9000000000000001}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             2, 1, {1, 1}, 0.25, 8.809999999999999, {0.4, 1.2}, {2.9, 2.8}, {{
              0.7094211123723043, 0.4540295119182747}, {0.4540295119182747, 
              0.2905788876276958}}}, {
             2, 3, {0, 1}, 0.25, 8.840000000000002, {0.4, 1.2}, {3.2, 2.2}, {{
              0.8868778280542986, 0.3167420814479638}, {0.3167420814479638, 
              0.11312217194570139`}}}, {
             2, 1, {-1, -1}, 0.25, 9.010000000000002, {0.4, 
              1.2}, {-1.1, -1.4000000000000001`}, {{0.24972253052164256`, 
              0.4328523862375138}, {0.4328523862375138, 
              0.7502774694783573}}}, {
             2, 3, {1, 1}, 0.25, 13.7, {0.4, 1.2}, {3.3, 3.5}, {{
              0.6138686131386862, 0.48686131386861314`}, {
              0.48686131386861314`, 0.3861313868613139}}}}, {{
             3, 1, {1, 0}, 0.25, 0.4500000000000001, {1.3, 1.4}, {1., 2.}, {{
              0.19999999999999998`, -0.39999999999999997`}, \
{-0.39999999999999997`, 0.7999999999999999}}}, {
             3, 2, {-1, 1}, 0.25, 1.2999999999999994`, {1.3, 1.4}, {
              2.1999999999999997`, 0.7}, {{
              0.6230769230769229, -0.48461538461538467`}, \
{-0.48461538461538467`, 0.3769230769230771}}}, {
             3, 2, {0, 1}, 0.25, 1.3599999999999997`, {1.3, 1.4}, {2.3, 
              2.}, {{0.7352941176470587, 0.4411764705882354}, {
              0.4411764705882354, 0.2647058823529413}}}, {
             3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3, 1.4}, {
              1.4000000000000001`, 2.7}, {{0.005882352941176479, 
              0.07647058823529418}, {0.07647058823529418, 
              0.9941176470588236}}}, {
             3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3, 1.4}, {1.2, 
              0.09999999999999987}, {{0.00588235294117648, 
              0.07647058823529418}, {0.07647058823529418, 
              0.9941176470588234}}}, {
             3, 2, {1, 0}, 0.25, 1.8500000000000003`, {1.3, 1.4}, {0.5, 
              2.5}, {{0.34594594594594597`, -0.47567567567567565`}, \
{-0.47567567567567565`, 0.654054054054054}}}, {
             3, 1, {0, 1}, 0.25, 2.26, {1.3, 1.4}, {2.8, 1.5}, {{
              0.9955752212389379, 0.06637168141592925}, {0.06637168141592925, 
              0.004424778761061955}}}, {
             3, 2, {-1, 0}, 0.25, 3.25, {1.3, 1.4}, {
              0.30000000000000004`, -0.10000000000000009`}, {{
              0.3076923076923077, 0.46153846153846156`}, {
              0.46153846153846156`, 0.6923076923076923}}}, {
             3, 1, {-1, 1}, 0.25, 3.399999999999999, {1.3, 1.4}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.576470588235294, -0.4941176470588235}, {-0.4941176470588235, 
              0.423529411764706}}}, {
             3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3, 
              1.4}, {-0.4999999999999998, 1.9}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             3, 3, {-1, 1}, 0.25, 3.4899999999999984`, {1.3, 1.4}, {
              3.0999999999999996`, 0.8999999999999999}, {{
              0.9283667621776505, -0.25787965616045855`}, \
{-0.25787965616045855`, 0.07163323782234961}}}, {
             3, 3, {0, 1}, 0.25, 4.250000000000001, {1.3, 1.4}, {3.2, 2.2}, {{
              0.8494117647058822, 0.3576470588235295}, {0.3576470588235295, 
              0.15058823529411772`}}}, {
             3, 3, {0, -1}, 0.25, 4.25, {1.3, 1.4}, {-0.5999999999999999, 
              0.5999999999999999}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             3, 1, {-1, 0}, 0.25, 4.25, {1.3, 1.4}, {
              0.8, -0.6000000000000001}, {{0.058823529411764705`, 
              0.23529411764705882`}, {0.23529411764705882`, 
              0.9411764705882353}}}, {
             3, 1, {1, 1}, 0.25, 4.52, {1.3, 1.4}, {2.9, 2.8}, {{
              0.5663716814159292, 0.49557522123893805`}, {
              0.49557522123893805`, 0.43362831858407075`}}}, {
             3, 2, {1, 1}, 0.25, 4.819999999999999, {1.3, 1.4}, {2.4, 3.3}, {{
              0.2510373443983402, 0.4336099585062241}, {0.4336099585062241, 
              0.7489626556016598}}}, {
             3, 1, {1, -1}, 0.25, 4.879999999999999, {1.3, 
              1.4}, {-0.8999999999999998, 1.2}, {{0.9918032786885246, 
              0.09016393442622948}, {0.09016393442622948, 
              0.008196721311475407}}}, {
             3, 2, {1, -1}, 0.25, 7.380000000000001, {1.3, 1.4}, {-1.4, 
              1.7}, {{0.9878048780487805, -0.10975609756097562`}, \
{-0.10975609756097562`, 0.012195121951219514`}}}, {
             3, 1, {0, -1}, 0.25, 7.539999999999999, {1.3, 
              1.4}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.7015915119363395, 0.45755968169761274`}, {
              0.45755968169761274`, 0.2984084880636605}}}, {
             3, 3, {1, 1}, 0.25, 8.41, {1.3, 1.4}, {3.3, 3.5}, {{
              0.4756242568370986, 0.49940546967895355`}, {
              0.49940546967895355`, 0.5243757431629014}}}, {
             3, 3, {-1, -1}, 0.25, 8.41, {1.3, 
              1.4}, {-0.7, -0.7000000000000002}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             3, 2, {0, -1}, 0.25, 8.84, {1.3, 1.4}, {-1.5, 
              0.3999999999999999}, {{0.8868778280542985, 
              0.3167420814479638}, {0.3167420814479638, 
              0.11312217194570136`}}}, {
             3, 1, {-1, -1}, 0.25, 13.600000000000001`, {1.3, 
              1.4}, {-1.1, -1.4000000000000001`}, {{0.42352941176470593`, 
              0.4941176470588235}, {0.4941176470588235, 
              0.576470588235294}}}, {
             3, 2, {-1, -1}, 0.25, 13.700000000000001`, {1.3, 
              1.4}, {-1.6, -0.9000000000000001}, {{0.6138686131386862, 
              0.4868613138686131}, {0.4868613138686131, 
              0.38613138686131376`}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$158]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$158]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$158 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], \
$CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->379559828]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    True, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.30650000000000027`, {0.9, 0.7}, {0.71, 
        1.2200000000000002`}, {{
        0.11778140293637843`, -0.3223491027732463}, {-0.3223491027732463, 
        0.8822185970636216}}}, {
       1, 3, {0, 0}, 0.25, 0.5976290000000003, {0.9, 0.7}, {
        1.5020000000000002`, 1.185}, {{0.6064029690660929, 
        0.488547242520025}, {0.488547242520025, 0.39359703093390713`}}}}, {{
       2, 1, {0, 0}, 0.25, 0.30650000000000027`, {0.9, 0.7}, {0.71, 
        1.2200000000000002`}, {{
        0.11778140293637843`, -0.3223491027732463}, {-0.3223491027732463, 
        0.8822185970636216}}}, {
       2, 3, {0, 0}, 0.25, 0.6284890000000004, {0.71, 1.2200000000000002`}, {
        1.5020000000000002`, 1.185}, {{
        0.9980508807632273, -0.04410578387211249}, {-0.04410578387211249, 
        0.0019491192367726551`}}}}, {{
       3, 1, {0, 0}, 0.25, 0.5976290000000003, {0.9, 0.7}, {
        1.5020000000000002`, 1.185}, {{0.6064029690660929, 
        0.488547242520025}, {0.488547242520025, 0.39359703093390713`}}}, {
       3, 2, {0, 0}, 0.25, 0.6284890000000004, {0.71, 1.2200000000000002`}, {
        1.5020000000000002`, 1.185}, {{
        0.9980508807632273, -0.04410578387211249}, {-0.04410578387211249, 
        0.0019491192367726551`}}}}}, {{{
       1, 2, {-1, 0}, 0.25, 0.6131249999999996, {0.9, 0.7}, {
        0.6299999999999999, -0.0349999999999997}, {{0.11889908256880753`, 
        0.3236697247706424}, {0.3236697247706424, 0.8811009174311925}}}, {
       1, 3, {-1, 0}, 0.25, 0.8653839999999997, {0.9, 0.7}, {
        1.4220000000000002`, -0.06999999999999984}, {{
        0.31487062390799947`, -0.4644643302857462}, {-0.4644643302857462, 
        0.6851293760920006}}}, {
       1, 1, {1, 0}, 0.25, 1.5814249999999996`, {0.9, 0.7}, {
        0.9800000000000001, 1.9549999999999998`}, {{0.004046982942599246, 
        0.06348704491202561}, {0.06348704491202561, 0.9959530170574007}}}, {
       1, 1, {-1, 0}, 0.25, 1.5814249999999996`, {0.9, 0.7}, {
        0.82, -0.5549999999999999}, {{0.004046982942599246, 
        0.06348704491202561}, {0.06348704491202561, 0.9959530170574007}}}, {
       1, 3, {0, -1}, 0.25, 1.7840289999999988`, {0.9, 
        0.7}, {-0.3979999999999997, 0.385}, {{0.9443815094933995, 
        0.2291834942144999}, {0.2291834942144999, 0.055618490506600525`}}}, {
       1, 3, {1, -1}, 0.25, 2.3671239999999987`, {0.9, 
        0.7}, {-0.3179999999999996, 1.64}, {{
        0.6267200197370311, -0.4836755488939321}, {-0.4836755488939321, 
        0.3732799802629691}}}, {
       1, 2, {-1, 1}, 0.25, 2.6611249999999997`, {0.9, 0.7}, {2.53, 
        0.7650000000000003}, {{0.9984123256141669, 0.03981398844473696}, {
        0.03981398844473696, 0.0015876743858330787`}}}, {
       1, 2, {1, 0}, 0.25, 3.1627250000000005`, {0.9, 0.7}, {0.79, 2.475}, {{
        0.0038258147641669752`, -0.061734738239967106`}, \
{-0.061734738239967106`, 0.9961741852358331}}}, {
       1, 3, {1, 0}, 0.25, 3.4927240000000004`, {0.9, 0.7}, {
        1.5820000000000003`, 2.44}, {{0.13316941161110937`, 
        0.33975773636851936`}, {0.33975773636851936`, 0.8668305883888907}}}, {
       1, 1, {1, -1}, 0.25, 3.519424999999999, {0.9, 
        0.7}, {-0.9199999999999998, 1.1549999999999998`}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       1, 1, {-1, 1}, 0.25, 3.519424999999999, {0.9, 0.7}, {
        2.7199999999999998`, 0.2450000000000001}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 3, {-1, -1}, 0.25, 4.363783999999998, {0.9, 
        0.7}, {-0.47799999999999976`, -0.8699999999999997}, {{
        0.4351461942204289, 0.49577614290716493`}, {0.49577614290716493`, 
        0.5648538057795711}}}, {
       1, 2, {0, -1}, 0.25, 4.4464999999999995`, {0.9, 0.7}, {-1.19, 
        0.42000000000000015`}, {{0.982368154728438, 0.13160913077701553`}, {
        0.13160913077701553`, 0.017631845271561877`}}}, {
       1, 2, {0, 1}, 0.25, 4.666500000000001, {0.9, 0.7}, {2.61, 
        2.0200000000000005`}, {{0.6266152362584376, 0.4837029893924784}, {
        0.4837029893924784, 0.3733847637415624}}}, {
       1, 2, {1, -1}, 0.25, 4.990724999999999, {0.9, 
        0.7}, {-1.1099999999999999`, 1.675}, {{
        0.8095216626842793, -0.39267841846625495`}, {-0.39267841846625495`, 
        0.19047833731572072`}}}, {
       1, 3, {-1, 1}, 0.25, 5.866984, {0.9, 0.7}, {3.322, 
        0.7300000000000002}, {{0.9998465992066794, 0.012384557380759963`}, {
        0.012384557380759963`, 0.00015340079332072746`}}}, {
       1, 2, {-1, -1}, 0.25, 7.065124999999998, {0.9, 
        0.7}, {-1.27, -0.8349999999999995}, {{0.666499177296934, 
        0.47146370375612595`}, {0.47146370375612595`, 
        0.33350082270306597`}}}, {
       1, 3, {0, 1}, 0.25, 7.911229000000001, {0.9, 0.7}, {3.402, 1.985}, {{
        0.7912808490311681, 0.4063932418085736}, {0.4063932418085736, 
        0.20871915096883176`}}}, {
       1, 1, {1, 1}, 0.25, 8.143424999999999, {0.9, 0.7}, {2.88, 2.755}, {{
        0.48141905893404807`, 0.4996546293482165}, {0.4996546293482165, 
        0.5185809410659519}}}, {
       1, 1, {-1, -1}, 0.25, 8.143424999999999, {0.9, 
        0.7}, {-1.08, -1.3549999999999998`}, {{0.48141905893404807`, 
        0.4996546293482165}, {0.4996546293482165, 0.5185809410659519}}}, {
       1, 2, {1, 1}, 0.25, 9.834725, {0.9, 0.7}, {2.69, 3.275}, {{
        0.325794569751569, 0.46867095927949176`}, {0.46867095927949176`, 
        0.6742054302484309}}}, {
       1, 3, {1, 1}, 0.25, 13.118324000000001`, {0.9, 0.7}, {3.482, 
        3.2399999999999998`}, {{0.5081993705903285, 0.499932765801485}, {
        0.499932765801485, 0.49180062940967145`}}}}, {{
       2, 1, {1, 0}, 0.25, 0.6131249999999996, {0.71, 1.2200000000000002`}, {
        0.9800000000000001, 1.9549999999999998`}, {{0.11889908256880753`, 
        0.3236697247706424}, {0.3236697247706424, 0.8811009174311925}}}, {
       2, 3, {1, -1}, 0.25, 1.2331839999999987`, {0.71, 
        1.2200000000000002`}, {-0.3179999999999996, 1.64}, {{
        0.8569556530087968, -0.3501180683498975}, {-0.3501180683498975, 
        0.1430443469912032}}}, {
       2, 2, {1, 0}, 0.25, 1.5814249999999996`, {0.71, 1.2200000000000002`}, {
        0.79, 2.475}, {{0.004046982942599246, 0.06348704491202561}, {
        0.06348704491202561, 0.9959530170574007}}}, {
       2, 2, {-1, 0}, 0.25, 1.5814249999999996`, {0.71, 
        1.2200000000000002`}, {0.6299999999999999, -0.0349999999999997}, {{
        0.004046982942599246, 0.06348704491202561}, {0.06348704491202561, 
        0.9959530170574007}}}, {
       2, 3, {0, -1}, 0.25, 1.9248889999999994`, {0.71, 
        1.2200000000000002`}, {-0.3979999999999997, 0.385}, {{
        0.6377843086016906, 0.48064070187943314`}, {0.48064070187943314`, 
        0.36221569139830945`}}}, {
       2, 3, {-1, 0}, 0.25, 2.171044, {0.71, 1.2200000000000002`}, {
        1.4220000000000002`, -0.06999999999999984}, {{
        0.23350240713684303`, -0.4230591365260217}, {-0.4230591365260217, 
        0.7664975928631571}}}, {
       2, 3, {1, 0}, 0.25, 2.248784, {0.71, 1.2200000000000002`}, {
        1.5820000000000003`, 2.44}, {{0.3381311855651768, 
        0.4730734476943984}, {0.4730734476943984, 0.6618688144348231}}}, {
       2, 1, {1, -1}, 0.25, 2.6611249999999997`, {0.71, 
        1.2200000000000002`}, {-0.9199999999999998, 1.1549999999999998`}, {{
        0.9984123256141669, 0.03981398844473696}, {0.03981398844473696, 
        0.0015876743858330787`}}}, {
       2, 1, {-1, 0}, 0.25, 3.1627250000000005`, {0.71, 
        1.2200000000000002`}, {0.82, -0.5549999999999999}, {{
        0.0038258147641669752`, -0.061734738239967106`}, \
{-0.061734738239967106`, 0.9961741852358331}}}, {
       2, 2, {1, -1}, 0.25, 3.519424999999999, {0.71, 
        1.2200000000000002`}, {-1.1099999999999999`, 1.675}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       2, 2, {-1, 1}, 0.25, 3.519424999999999, {0.71, 1.2200000000000002`}, {
        2.53, 0.7650000000000003}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.71, 1.2200000000000002`}, {2.61, 
        2.0200000000000005`}, {{0.8494117647058823, 0.35764705882352954`}, {
        0.35764705882352954`, 0.15058823529411774`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.71, 1.2200000000000002`}, {-1.19, 
        0.42000000000000015`}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       2, 1, {0, 1}, 0.25, 4.4464999999999995`, {0.71, 1.2200000000000002`}, {
        2.8, 1.5}, {{0.982368154728438, 0.13160913077701553`}, {
        0.13160913077701553`, 0.017631845271561877`}}}, {
       2, 1, {0, -1}, 0.25, 4.666500000000001, {0.71, 
        1.2200000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.6266152362584376, 0.4837029893924783}, {0.4837029893924783, 
        0.37338476374156226`}}}, {
       2, 1, {-1, 1}, 0.25, 4.990724999999999, {0.71, 1.2200000000000002`}, {
        2.7199999999999998`, 0.2450000000000001}, {{
        0.8095216626842793, -0.39267841846625495`}, {-0.39267841846625495`, 
        0.19047833731572072`}}}, {
       2, 3, {-1, -1}, 0.25, 5.779443999999998, {0.71, 
        1.2200000000000002`}, {-0.47799999999999976`, -0.8699999999999997}, {{
        0.24420065321162376`, 0.42961226027970856`}, {0.42961226027970856`, 
        0.7557993467883762}}}, {
       2, 3, {-1, 1}, 0.25, 7.062644000000001, {0.71, 1.2200000000000002`}, {
        3.322, 0.7300000000000002}, {{
        0.9660042329756392, -0.1812182519747562}, {-0.1812182519747562, 
        0.03399576702436084}}}, {
       2, 1, {1, 1}, 0.25, 7.065124999999998, {0.71, 1.2200000000000002`}, {
        2.88, 2.755}, {{0.666499177296934, 0.471463703756126}, {
        0.471463703756126, 0.333500822703066}}}, {
       2, 3, {0, 1}, 0.25, 7.832089000000002, {0.71, 1.2200000000000002`}, {
        3.402, 1.985}, {{0.9252785559510367, 0.26294134298014227`}, {
        0.26294134298014227`, 0.07472144404896314}}}, {
       2, 2, {1, 1}, 0.25, 8.143424999999999, {0.71, 1.2200000000000002`}, {
        2.69, 3.275}, {{0.48141905893404807`, 0.4996546293482165}, {
        0.4996546293482165, 0.5185809410659519}}}, {
       2, 2, {-1, -1}, 0.25, 8.143424999999999, {0.71, 
        1.2200000000000002`}, {-1.27, -0.8349999999999995}, {{
        0.48141905893404807`, 0.4996546293482165}, {0.4996546293482165, 
        0.5185809410659519}}}, {
       2, 1, {-1, -1}, 0.25, 9.834725, {0.71, 
        1.2200000000000002`}, {-1.08, -1.3549999999999998`}, {{
        0.325794569751569, 0.46867095927949176`}, {0.46867095927949176`, 
        0.6742054302484309}}}, {
       2, 3, {1, 1}, 0.25, 11.764384, {0.71, 1.2200000000000002`}, {3.482, 
        3.2399999999999998`}, {{0.6531565103621236, 0.4759654224139572}, {
        0.4759654224139572, 0.3468434896378763}}}}, {{
       3, 1, {1, 0}, 0.25, 0.8653839999999997, {1.5020000000000002`, 1.185}, {
        0.9800000000000001, 1.9549999999999998`}, {{
        0.31487062390799947`, -0.4644643302857462}, {-0.4644643302857462, 
        0.6851293760920006}}}, {
       3, 2, {-1, 1}, 0.25, 1.2331839999999987`, {1.5020000000000002`, 
        1.185}, {2.53, 0.7650000000000003}, {{
        0.8569556530087968, -0.3501180683498975}, {-0.3501180683498975, 
        0.1430443469912032}}}, {
       3, 3, {1, 0}, 0.25, 1.5814249999999996`, {1.5020000000000002`, 
        1.185}, {1.5820000000000003`, 2.44}, {{0.004046982942599246, 
        0.06348704491202561}, {0.06348704491202561, 0.9959530170574007}}}, {
       3, 3, {-1, 0}, 0.25, 1.5814249999999996`, {1.5020000000000002`, 
        1.185}, {1.4220000000000002`, -0.06999999999999984}, {{
        0.004046982942599246, 0.06348704491202561}, {0.06348704491202561, 
        0.9959530170574007}}}, {
       3, 1, {0, 1}, 0.25, 1.7840289999999988`, {1.5020000000000002`, 
        1.185}, {2.8, 1.5}, {{0.9443815094933995, 0.2291834942144999}, {
        0.2291834942144999, 0.055618490506600525`}}}, {
       3, 2, {0, 1}, 0.25, 1.9248889999999999`, {1.5020000000000002`, 
        1.185}, {2.61, 2.0200000000000005`}, {{0.6377843086016904, 
        0.48064070187943314`}, {0.48064070187943314`, 
        0.36221569139830956`}}}, {
       3, 2, {1, 0}, 0.25, 2.171044, {1.5020000000000002`, 1.185}, {0.79, 
        2.475}, {{
        0.23350240713684303`, -0.4230591365260217}, {-0.4230591365260217, 
        0.7664975928631571}}}, {
       3, 2, {-1, 0}, 0.25, 2.248784, {1.5020000000000002`, 1.185}, {
        0.6299999999999999, -0.0349999999999997}, {{0.3381311855651768, 
        0.4730734476943984}, {0.4730734476943984, 0.6618688144348231}}}, {
       3, 1, {-1, 1}, 0.25, 2.3671239999999987`, {1.5020000000000002`, 
        1.185}, {2.7199999999999998`, 0.2450000000000001}, {{
        0.6267200197370311, -0.4836755488939321}, {-0.4836755488939321, 
        0.3732799802629691}}}, {
       3, 1, {-1, 0}, 0.25, 3.4927240000000004`, {1.5020000000000002`, 
        1.185}, {0.82, -0.5549999999999999}, {{0.13316941161110937`, 
        0.33975773636851936`}, {0.33975773636851936`, 0.8668305883888907}}}, {
       3, 3, {1, -1}, 0.25, 3.519424999999999, {1.5020000000000002`, 
        1.185}, {-0.3179999999999996, 1.64}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       3, 3, {-1, 1}, 0.25, 3.519424999999999, {1.5020000000000002`, 1.185}, {
        3.322, 0.7300000000000002}, {{
        0.9411764705882353, -0.23529411764705876`}, {-0.23529411764705876`, 
        0.058823529411764684`}}}, {
       3, 3, {0, 1}, 0.25, 4.25, {1.5020000000000002`, 1.185}, {3.402, 
        1.985}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       3, 3, {0, -1}, 0.25, 4.25, {1.5020000000000002`, 
        1.185}, {-0.3979999999999997, 0.385}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       3, 1, {1, 1}, 0.25, 4.363783999999999, {1.5020000000000002`, 1.185}, {
        2.88, 2.755}, {{0.4351461942204288, 0.49577614290716493`}, {
        0.49577614290716493`, 0.5648538057795711}}}, {
       3, 2, {1, 1}, 0.25, 5.779443999999998, {1.5020000000000002`, 1.185}, {
        2.69, 3.275}, {{0.24420065321162376`, 0.42961226027970856`}, {
        0.42961226027970856`, 0.7557993467883762}}}, {
       3, 1, {1, -1}, 0.25, 5.866984, {1.5020000000000002`, 
        1.185}, {-0.9199999999999998, 1.1549999999999998`}, {{
        0.9998465992066794, 0.012384557380759963`}, {0.012384557380759963`, 
        0.00015340079332072746`}}}, {
       3, 2, {1, -1}, 0.25, 7.062644000000001, {1.5020000000000002`, 
        1.185}, {-1.1099999999999999`, 1.675}, {{
        0.9660042329756392, -0.1812182519747562}, {-0.1812182519747562, 
        0.03399576702436084}}}, {
       3, 2, {0, -1}, 0.25, 7.832089000000002, {1.5020000000000002`, 
        1.185}, {-1.19, 0.42000000000000015`}, {{0.9252785559510367, 
        0.26294134298014227`}, {0.26294134298014227`, 
        0.07472144404896314}}}, {
       3, 1, {0, -1}, 0.25, 7.911229000000001, {1.5020000000000002`, 
        1.185}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7912808490311681, 0.4063932418085736}, {0.4063932418085736, 
        0.20871915096883176`}}}, {
       3, 3, {1, 1}, 0.25, 8.143424999999999, {1.5020000000000002`, 1.185}, {
        3.482, 3.2399999999999998`}, {{0.48141905893404807`, 
        0.4996546293482165}, {0.4996546293482165, 0.5185809410659519}}}, {
       3, 3, {-1, -1}, 0.25, 8.143424999999999, {1.5020000000000002`, 
        1.185}, {-0.47799999999999976`, -0.8699999999999997}, {{
        0.48141905893404807`, 0.4996546293482165}, {0.4996546293482165, 
        0.5185809410659519}}}, {
       3, 2, {-1, -1}, 0.25, 11.764384, {1.5020000000000002`, 
        1.185}, {-1.27, -0.8349999999999995}, {{0.6531565103621236, 
        0.4759654224139572}, {0.4759654224139572, 0.3468434896378763}}}, {
       3, 1, {-1, -1}, 0.25, 13.118324000000001`, {1.5020000000000002`, 
        1.185}, {-1.08, -1.3549999999999998`}, {{0.5081993705903285, 
        0.499932765801485}, {0.499932765801485, 
        0.49180062940967145`}}}}}}, $CellContext`dynamics$$ = {{
     0.6292334391934213, {
       Complex[0.7678050710303334, -0.16482342214608464`], 
       Complex[0.5252481066514979, -0.1341268694508614], 
       Complex[-0.08950066333252273, 0.0872363242874078], 
       Complex[-0.08577737578601162, 0.05141967079752777], 
       Complex[-0.20769312295309061`, 
        0.053405065650874946`], -0.13349981891187898`}}, {
     0.48100857834270816`, {
       Complex[0.042681903950309366`, 0.28908925161127774`], 
       Complex[-0.19586395136213583`, -0.36313860959379435`], 
       Complex[0.5129546286943978, -0.20756758061688121`], 
       Complex[0.2289341560473278, -0.012506615006291749`], 
       Complex[-0.5588468269669005, 
        0.02391105671643851], -0.26966236846594677`}}, {0.46894088655949784`, {
       Complex[0.19357674075721548`, 0.4371866592107605], 
       Complex[-0.272275270966381, -0.6241892226461169], 
       Complex[-0.2896364980469887, 0.04407477545872982], 
       Complex[-0.22835293948831642`, 0.2536358616332562], 
       Complex[0.29446349324625287`, -0.005833839399596183], 
       0.1363780662334747}}, {0.3593685457521336, {
       Complex[-0.09194914851318357, -0.17851603797361024`], 
       Complex[-0.07088562649034809, -0.13132270197822365`], 
       Complex[-0.5449099785199351, -0.38483353076707366`], 
       Complex[-0.0037550678337957243`, -0.1708490944780477], 
       Complex[-0.24631987984286408`, -0.5812612281538145], \
-0.25424714532080167`}}, {0.33233752681950274`, {
       Complex[0.15588213591060682`, -0.038088274368037994`], 
       Complex[-0.0959269570480535, -0.14476454101346087`], 
       Complex[0.1718596410799906, 0.10521187422646161`], 
       Complex[-0.16509264203860427`, -0.6802383227875324], 
       Complex[-0.1108883281008169, -0.21235126103309016`], 
       0.5967553764403529}}, {0.2994533133636689, {
       Complex[-0.04198906793593206, -0.038398984928030115`], 
       Complex[0.13659967541069043`, 0.032517909505553354`], 
       Complex[-0.10971304147297957`, -0.30769280014351763`], 
       Complex[0.2610570530614294, 0.4833432796050002], 
       Complex[-0.31363132704749336`, -0.00975608640944018], 
       0.6856401667201283}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
w9Q=
     "], {10, 20, 20}, 3, {{
       Line[{{-10.640000000000002`, -50.89}, {-4.559999999999997, 
        44.489999999999995`}}], 
       Line[{{-8.740000000000002, -50.089999999999996`}, \
{-2.6599999999999966`, 45.29}}], 
       Line[{{-6.8400000000000025`, -49.29}, {-0.7599999999999971, 
        46.089999999999996`}}], 
       Line[{{-4.940000000000003, -48.489999999999995`}, {1.1400000000000028`,
         46.89}}], 
       Line[{{-3.0400000000000027`, -47.69}, {3.0400000000000027`, 47.69}}], 
       Line[{{-1.1400000000000028`, -46.89}, {4.940000000000003, 
        48.489999999999995`}}], 
       Line[{{0.7599999999999971, -46.089999999999996`}, {6.8400000000000025`,
         49.29}}], 
       Line[{{2.6599999999999966`, -45.29}, {8.740000000000002, 
        50.089999999999996`}}], 
       Line[{{4.559999999999997, -44.489999999999995`}, {10.640000000000002`, 
        50.89}}]}, {
       Line[{{-10.640000000000002`, -50.89}, {
        4.559999999999997, -44.489999999999995`}}], 
       Line[{{-10.560000000000002`, -49.635}, {
        4.639999999999997, -43.23499999999999}}], 
       Line[{{-10.480000000000002`, -48.379999999999995`}, {
        4.719999999999997, -41.97999999999999}}], 
       Line[{{-10.400000000000002`, -47.125}, {
        4.799999999999997, -40.724999999999994`}}], 
       Line[{{-10.320000000000002`, -45.87}, {
        4.879999999999997, -39.46999999999999}}], 
       Line[{{-10.240000000000002`, -44.615}, {
        4.959999999999997, -38.214999999999996`}}], 
       Line[{{-10.160000000000002`, -43.36}, {
        5.039999999999997, -36.959999999999994`}}], 
       Line[{{-10.080000000000002`, -42.105}, {
        5.119999999999997, -35.70499999999999}}], 
       Line[{{-10.000000000000002`, -40.85}, {
        5.1999999999999975`, -34.449999999999996`}}], 
       Line[{{-9.920000000000002, -39.595}, {
        5.279999999999998, -33.19499999999999}}], 
       Line[{{-9.840000000000002, -38.34}, {5.359999999999998, -31.94}}], 
       Line[{{-9.760000000000002, -37.085}, {5.439999999999998, -30.685}}], 
       Line[{{-9.680000000000001, -35.83}, {
        5.519999999999998, -29.429999999999996`}}], 
       Line[{{-9.600000000000001, -34.574999999999996`}, {
        5.599999999999998, -28.174999999999997`}}], 
       Line[{{-9.520000000000001, -33.32}, {
        5.679999999999998, -26.919999999999998`}}], 
       Line[{{-9.440000000000001, -32.065}, {5.759999999999998, -25.665}}], 
       Line[{{-9.360000000000001, -30.81}, {5.839999999999998, -24.41}}], 
       Line[{{-9.280000000000001, -29.554999999999996`}, {
        5.919999999999998, -23.154999999999998`}}], 
       Line[{{-9.200000000000001, -28.299999999999997`}, {
        5.999999999999998, -21.9}}], 
       Line[{{-9.120000000000001, -27.044999999999998`}, {
        6.079999999999998, -20.645}}], 
       Line[{{-9.040000000000001, -25.789999999999996`}, {
        6.159999999999998, -19.389999999999997`}}], 
       Line[{{-8.96, -24.534999999999997`}, {
        6.239999999999998, -18.134999999999998`}}], 
       Line[{{-8.88, -23.279999999999998`}, {6.3199999999999985`, -16.88}}], 
       Line[{{-8.8, -22.025}, {6.399999999999999, -15.625}}], 
       Line[{{-8.72, -20.77}, {6.479999999999999, -14.370000000000001`}}], 
       Line[{{-8.64, -19.514999999999997`}, {
        6.559999999999999, -13.114999999999998`}}], 
       Line[{{-8.56, -18.259999999999998`}, {6.639999999999999, -11.86}}], 
       Line[{{-8.48, -17.005}, {6.719999999999999, -10.605}}], 
       Line[{{-8.4, -15.75}, {6.799999999999999, -9.349999999999998}}], 
       Line[{{-8.32, -14.494999999999997`}, {
        6.879999999999999, -8.094999999999999}}], 
       Line[{{-8.24, -13.239999999999998`}, {
        6.959999999999999, -6.839999999999999}}], 
       Line[{{-8.16, -11.985}, {7.039999999999999, -5.585}}], 
       Line[{{-8.08, -10.73}, {7.119999999999999, -4.329999999999999}}], 
       Line[{{-8., -9.475}, {7.199999999999999, -3.0749999999999993`}}], 
       Line[{{-7.92, -8.219999999999999}, {
        7.279999999999999, -1.8199999999999994`}}], 
       Line[{{-7.84, -6.965}, {7.359999999999999, -0.5649999999999995}}], 
       Line[{{-7.76, -5.71}, {7.4399999999999995`, 0.6900000000000004}}], 
       Line[{{-7.68, -4.455}, {7.52, 1.9450000000000003`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.52, -1.9450000000000003`}, {7.68, 4.455}}], 
       Line[{{-7.4399999999999995`, -0.6900000000000004}, {7.76, 5.71}}], 
       Line[{{-7.359999999999999, 0.5649999999999995}, {7.84, 6.965}}], 
       Line[{{-7.279999999999999, 1.8199999999999994`}, {7.92, 
        8.219999999999999}}], 
       Line[{{-7.199999999999999, 3.0749999999999993`}, {8., 9.475}}], 
       Line[{{-7.119999999999999, 4.329999999999999}, {8.08, 10.73}}], 
       Line[{{-7.039999999999999, 5.585}, {8.16, 11.985}}], 
       Line[{{-6.959999999999999, 6.839999999999999}, {8.24, 
        13.239999999999998`}}], 
       Line[{{-6.879999999999999, 8.094999999999999}, {8.32, 
        14.494999999999997`}}], 
       Line[{{-6.799999999999999, 9.349999999999998}, {8.4, 15.75}}], 
       Line[{{-6.719999999999999, 10.605}, {8.48, 17.005}}], 
       Line[{{-6.639999999999999, 11.86}, {8.56, 18.259999999999998`}}], 
       Line[{{-6.559999999999999, 13.114999999999998`}, {8.64, 
        19.514999999999997`}}], 
       Line[{{-6.479999999999999, 14.370000000000001`}, {8.72, 20.77}}], 
       Line[{{-6.399999999999999, 15.625}, {8.8, 22.025}}], 
       Line[{{-6.3199999999999985`, 16.88}, {8.88, 23.279999999999998`}}], 
       Line[{{-6.239999999999998, 18.134999999999998`}, {8.96, 
        24.534999999999997`}}], 
       Line[{{-6.159999999999998, 19.389999999999997`}, {9.040000000000001, 
        25.789999999999996`}}], 
       Line[{{-6.079999999999998, 20.645}, {9.120000000000001, 
        27.044999999999998`}}], 
       Line[{{-5.999999999999998, 21.9}, {9.200000000000001, 
        28.299999999999997`}}], 
       Line[{{-5.919999999999998, 23.154999999999998`}, {9.280000000000001, 
        29.554999999999996`}}], 
       Line[{{-5.839999999999998, 24.41}, {9.360000000000001, 30.81}}], 
       Line[{{-5.759999999999998, 25.665}, {9.440000000000001, 32.065}}], 
       Line[{{-5.679999999999998, 26.919999999999998`}, {9.520000000000001, 
        33.32}}], 
       Line[{{-5.599999999999998, 28.174999999999997`}, {9.600000000000001, 
        34.574999999999996`}}], 
       Line[{{-5.519999999999998, 29.429999999999996`}, {9.680000000000001, 
        35.83}}], 
       Line[{{-5.439999999999998, 30.685}, {9.760000000000002, 37.085}}], 
       Line[{{-5.359999999999998, 31.94}, {9.840000000000002, 38.34}}], 
       Line[{{-5.279999999999998, 33.19499999999999}, {9.920000000000002, 
        39.595}}], 
       Line[{{-5.1999999999999975`, 34.449999999999996`}, {
        10.000000000000002`, 40.85}}], 
       Line[{{-5.119999999999997, 35.70499999999999}, {10.080000000000002`, 
        42.105}}], 
       Line[{{-5.039999999999997, 36.959999999999994`}, {10.160000000000002`, 
        43.36}}], 
       Line[{{-4.959999999999997, 38.214999999999996`}, {10.240000000000002`, 
        44.615}}], 
       Line[{{-4.879999999999997, 39.46999999999999}, {10.320000000000002`, 
        45.87}}], 
       Line[{{-4.799999999999997, 40.724999999999994`}, {10.400000000000002`, 
        47.125}}], 
       Line[{{-4.719999999999997, 41.97999999999999}, {10.480000000000002`, 
        48.379999999999995`}}], 
       Line[{{-4.639999999999997, 43.23499999999999}, {10.560000000000002`, 
        49.635}}], 
       Line[{{-4.559999999999997, 44.489999999999995`}, {10.640000000000002`, 
        50.89}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 14, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJx1XXVYVU33BcEEBbvADkQQC0VFBzHA9rU7ELuxFcUExW7FQlREMZAuvXRe
4NLNNcFAUVHE/r0/7t5zPvZ8n//4PPuZZzNnnX3m7Flr3TPtbdZOWlxDTU1t
eD01NY1//w/0q3BdP6NWWA/nVWEl+3/Kaq/37+sfkMcwHlxn7u6d577J+v2w
ylidn8PjI53GWTT2KJeZJbsmOv7J5HE3LXu1SRvKZNuSbELC1qaRPCUyyx5K
k26bUnj8ZtV4pUz2+durizuTeNy1Kp4iO1LLoN/MP3IeV4N/Ob1a79sWnkzH
s727Sl4P80wlcSVTdy4NrgjK4PFA1XzYhaLrJV3uZpPxZezS3YcW7b/m0utl
XY78Sj4/P5/iwwyNZpx5opTigCfr3WXVhaJT+Szikl66eVcNjrP9wb96+TVz
eRxxtq9furdzaBaPI85rjGaPvT4kk8cR58eHLEO0ojJInhLZYmf/yIVhUhxx
fvlLM/aAtZQHcY57klHyaJf0dxHnrLItlbajcuh45iN/P2/a8DwSV7Jjtsv/
2VUpXS/ibLdIz2R/g0Iyvoxd0HWt2WROIb1eVnjVtP/1ZwUUHzbgwbJRWTEC
nkzh+Gb53+l5zEXjQD3d0r8yxPnOwZ3Fy2XZPI44v+7u3e9MLymOOA+5duq+
z2Ypjjgnn3r/vGGfHJKnRHbXOrC7gW0ujyPOsRrn1uz+Ks0HcdbV17EzuV3A
44izb/cb58Z0KKLj2fi9p+PntVSSuJIlsYtr0mZLccTZ5LNNrc4FNE8ZS3zv
ceH5w0J6vczoVP7jPdoFFB9253OHPestBDyZXfejD3t45LAHKYo17oe+c5yb
nVkyZMa/uGEccb66MGRR/A8pjjiPSp92q5Z5Lo8jzkMfZsyyKs4jeUpkfzv2
1hzpVcDjiLNlnvXft1ZFPI44TyiPPzBykZLHEec7BSv15imUdDw7ZlgY9sWe
xpXM51zy+GbbpPyIc9OpP/QKvxaQ8WXM31g9+M/gfHq97NiLxi4tbuRSfNif
4CyP9jYCnuzCnYHHf57PZpFVdV7Ocb54Z9zeMyY5PI446+Q3NPw1J5fHEeeM
oTZHUr/n8Tji3ODG6oLfRwtInhJZEx2/ga2DC3kccXZ1rHGwbHARjyPOFjVT
xn78KY1HnHXuLLPQ+lVAx7MPgfN+31+dT+JKtnz5o5zmt6T5I84vNjdotaZO
DhlfxiIeGJ+b8iqLXi/7MjIiIHR8FsWHHX56eklBjyyKJ3uSc7DPuaNZzKsK
/zcc5/ups1/qF+XyOOIclr5iTFGdfB5HnK3+eT1E65sUR5wbFw4deXFiAclT
IutdX3erZ5E0HnGetmhfsNuJPB5HnLc3Orpm1J4cHkecv2S2PdVbPYuOZzNH
NVkxzTWdxJXMJPiUz2fNNB7n60aA+deQNalkfBlznNQ3be/1VHq9TH3AP0Ne
2qZRfFj+77p939hmUDyZ537LTTNtsiGey3EOPB6zz294Po8jzkr3wae+nZfi
iPMl98murnpSHHF2tY8ZPd0jl+QpkW12XBh1tKf0dxHnLcmhT+4lpfM44uzX
Sn4k62QKjyPOE52b2ZgExNLxLGCbS9HVKZEkrmTup5u9+X5YiiPOqx+dz3Xx
jCHjy9jns5azWi5IodfLFjv3rp3/JZ3iwy66X9MyXy3gyfz1v9kteZrLVLMO
C0WcrYYNbTpyXj6PI841j2mo207K43HEWb/Gvb9fjHN4HHGW955w/cHHDJKn
RLay/xL/M94KHkec1zy4uC7XIpbHEefzvbuFHS4M4HG1//qPj2d7yXjEeSHJ
jzgvIfNBnOPI/BHnVuR6EWcNgg/ijHh6qPBniDPij3HE2QXuF8YR56VwfzGO
OFdAPVTPUyJbD/WDccT5OtQbxhHnR1CfGEdkraCeyXjmCfVfPa5kG+B5wTji
vBGer+rjy9gVeB7J9TIXeH4JPgyfd4Inw/Xhnmo94Tjfg/UE44gzrj8YR5xx
vcI44uwE61v1PCUyI1gPMY44G8H6iXHEeTqstxhHnD/D+kzGs62wnlePK9kU
WP8xjjjj+6L6+DKG7xdyvQzfRwQfFgHvL4InewDvuzDV+5HjHArvR4wjzkfg
fYpxxPkzvH8xjjiHw/u6ep4SmRLe7xhHnJdCP4BxxLkU+geMI84NoN8g49lg
6E+qx5UM+xmMI87Y/1QfX8YaQr9ErpelQ39F8GENoR8jeLLz0L+p8P/OccZ+
D+OI82/oDzGOOGM/iXHE2Rf6z+p5SmSNoV/FOOL8EPpbjCPO2A9jHHG+Df0z
Gc+w364eV7Lh0J9jHHGu2UnVz1cfX8ZGQP9PrpeNhv0CwYddg/0FwZPhfuSC
av/CcV4P+xeMI87usN/BOOJsCPsjjCPOSbCfqp7n374O9l8YR5yTYb+GccQZ
93cYR5z9YD9IxrNGsH+sHleyRNhvYhxx9oT9afXxZSwF9rPketlQ2P8SfFgJ
7JcJngz317Aft0CccT+OccSZ7N8tEGey37dAnC9W5wcsEOcN1fkEC8T5RHX+
wQJxJnyFBeJM+A0czwgfYoE4E/7EAnEmfIsF4kz4GbxeRvgcxIcR/gfxZMgX
+av4JY5zH+CXMI44GwAfhXHEuSvwVxhHnK8C31U9T4nsKvBjGEecawGfhnHE
2Qn4N4wjziXA15Hx7Czwe9XjShYHfCDGEefhwB9WH1/GtgLfSK6X9QN+kuDD
egOfSfBktQj/iThPnjav8OTEdIEXvaJ8M3GSTZrAi45eOmbPzUmpAi9qOjs/
/nYLhcCLOv0NDt1llSjwonKX8H6++ZECL7rF3Xle/KvHAi/a5vNiuZ3GY4EX
rasxe6tWjTCBF42xsrcLOBQu8KLdV93so29I/24Z+xMY3tmzRrTAi+4tydt/
5leMwIseavqgpvb7OIEX7WZVWfONR4LAi06+ek9/W4dMgRdN2eJxtt3SDIEX
7dh4/NeMGWkCLxqyP/1toH+ywIt+Mho6NfZ0vMCL/p3nGbntYYzAi6r/mnrl
Z9MYgRf1mbE1L9xfGM8cNTu0/iKLFXjRiN93bzWpjBN4UX/2rW3ArASBF511
fmaqvTJR4EXzrsy6obE+SeBFV2xzk4V8TBZ40anzGl9op6cQeNFt892s3rfO
FHjRVSExFw9tThd4UTbrT5zrtFSBF9Xp5K412jxF4EW7Wi7pvL9lksCLnmp7
ts0RHbnAizaX7wu64pco8KLLVo2WtU5IFHhR2e1VV0b0o3mU7NZ5k70DyuUC
L3pWTbOe/vckgRcdt/5NULv/mD/inHFSobd/hkLgRX3yntp+MkgVeNHNS3+9
sqqXJvCimvenFc98mC7woh9GGwWnuqQJvOi2xgsHDdqSKvCik3YU3QxzUgi8
qGbJxch2Z1MEXrRscuPkMSuTBV7U5eqmuQePJAm86Mu67TfV/ncdprxoWumL
NrViaFzJXniFPq5RIhd40b63pplmLkoSeFHvgTH7K8YlC7yoR6dBdQIyUwRe
tPfThVeN26QKvKh1odoh3fA0gRfdtT7uXC23VIEX9dtuXbC2R6rAi96evd/j
4j6FwIuOCB6UPNQpReBFnR09dsWpJQu86AH/M3/WHZULvOjJihWpMy0TBV50
0bfIbsnGCQIvOumKstHR6fECL9oouk0oS4sTeNHW7fvHXCqNE3jRZo6PZved
miDworrjxs30uJkk8KKt0r7nlFilCrzowgaGJ8wK0wVedMqQs0uNmiULvOiU
5bP29+qQJPCiDn+0ngdGJQq86J1V7XdpdE4QeNGQ4jantq6ME3jRZ7/q3Q0M
jRF4UY2ToRlfTKIFXvRiufpp97BIgRe1ztMYajY/QuBFa11eFNPjSrjAi4Y5
fwtvuYTmKWMatSYldr0SJ/Cijit+J4zckyLwojrpSWr7WZrAizoVemSemJgu
8KI384edq3MmQeBFxy05+LimY5zAi1480FDDuE2MwIv+nLXyt9u2SIEX9Rn5
bOq4mDCBF223Zuj4+86hAi9aq+R2p5jtgQIv2vXK+PXd+/kJvGgn//hD2n29
BV70ouGsX0FHgwRetFX3h50ano4SeNH0x2bygb2F62XuM40O7LRIFHjR0BMh
b4YbJwu8aPnnUT4n1igEXlS3bJzTxMBEgRcdtNpvq3ZInMCLepk9TVkxJVrg
RbVMN27WOhYu8KJmA4P2mJYGC7zorsf1X8809xZ4UccXW5NaLnejcXbuv8aV
bCfJg3gOIX8X8axP5ol43ifXhXgOJjggno0AN8p/fgacKf8ZDPeF8p94Hyn/
qYD7TvnP1lAnlP+8AnVF+U99qEPKf7aHuqX8599iVZ1T/rMFPBeU/3wEzxHl
PyvhuaP8Jz6nlP/E55rynzdgHaD8pyOsG5T/bADrDOU/nWBdovxnTVjHKP8Z
Duse5T81YJ2k/OdIWFcp/3ke1mHKf/49oVq3Kf9ZBOs85T/xvUD5T3d4j1D+
cye8dyj/OQneU5T/xPca5T/xPUj5T3xvUv6zIbxnKf/ZFN7LlP9sBe9xyn/q
wnuf8p8ToE+g/Cf2FZT/PAF9COU/90LfQvnPQ9DnUP7TEvoiyn+6Qx9F+U9f
6Lso/7kT+jTKf2JfR/lP7AMp/3kb+kbKf2KfSflP7Esp/4l9LOU/U6Hvpfzn
M+iTKf95Cfpqyn9iH075T+zbKf+JfT7lP3FfQPlP3EdQ/hP3HZT/xH0K5T9x
X0P5T9wHUf4T902U/8R9FuU/3WFfRvnPMNjHUf5zBez7KP+J+0TKf56BfSXl
Pw1gH0r5T9y3Uv4T97mU/1wJ+2LKf+I+mvKfuO+m/CfZp3NejuzrOS9HeADO
ywVW5w04LxdZnWfgvBzhJSz+B4/BeTnCe3BejvAknJf7WJ1X4bxcUHUehvNy
hLfhvBzheTgvh7wQ5T8NgUei/OcR4J0o/+kEPBXlPzWCVLwW5T97Aw9G+c8E
4M0o/6kDPBvlPw2Al6P8pwPweJT/TADej/Kfe4EnpPxnf+AVKf85BnhIyn9e
A96S8p/Ic6ors1ctOqoR9vfiiq2tav+U+Zx7veGoWi6Pb9oy4eDTzl9kXWNm
FA70zuRxxL/x4eZHG6ghb1zMn5eee/rJI/vn8fF8PX867NeVaVKe5ufHVI4w
LJcdb2c+MPplBo/j/ep7auTsvduk+PDuW9cFbPkgW949J6ugQwaZT4nsl+fg
Nh5tpfgcg5kfn7sUy4abXetmoibF8f5uKNh3b/wWKf569ManevaFMq9Cx+uz
1kpxrv/eNh8Svkuaf7eq602UaedpDSt3keJYD5U3XT5NMMqG9c5V8BX4VeGW
xXEzLP56tsQqn42uE2Q2NUItLPXOsp7jDv2QFXW7mHRhVzbPj8/FscUVDs3M
c/l4vn+8GXbIrIk0PrBq/teY57MDWa6bsul1sdIaxrp9e0l55lbhViGrt0rP
Pts3i8fxPjpHDG/68HUWz3MkZkS7Iq9UNufm6hX1TueS/EpmHn9x3n1d6bre
uI/y2nrvs6zo4h+vuglSfrzvzooaMydOl+Y5S3Uf2bBl53Z/1iiQrguel6xG
xo6VCwuk/FX38b3MV9E2f/G0bIJPiaxlbsDJfoNyeJ5mbxbotjj1mk2Xj0+d
7llA5l/GcjRq3Dctk/KrW09dYH3tlSxo0+FTbG4Oj2Nd6UQ8ihrqnEvrnE15
amvWcH8BfS6Yo32PegseSfl7Vt3ffNlB71dyebZ0X7AOdx3YraOrn0+fU+b0
Mfe5bXgBfU7Ztysxk8rjJfxDquKxsoh/7qSHHpfiWLeP57Qoa3hPyvOmcl7c
6CaVzEx/1OTpYfm0DlloXtCE2Q55rMuivnWPffgpuxG05LWD1g9Zzfd7Q47N
kfDHur1ap03fWg1z+His2+3vs+2mPpTGn6m63ofsS7qfdbJhIcWBvW7y9oHe
y0Kex8RsukdT/QpZcItVbGh8No9j3Uaz1Qdrn5Lul2VVPJ0V/Tjo2eWfIpJf
yf5Yj1v6e2+RNE9/q2WePT7LWs9eW3A3R5o/1u05zaJxjV9I9+tQ1XPxjPnX
CS7aFSflx7rdPf6kInSZlP/IinUT9+4ulcXXMbyzY2oewadEJluvmR68Qbpf
6+NtXb2PvmHxA3rHtLOn8y9ju/yLyz+4SPjcXPqP4v6Nl7K355uXDqpXIMWh
bjPia9bVqCvhbFw89MQwv49Mt9VYi0n2hXQdYDOa9r4cP1TKs7lqPrmyCX0m
373pKf1drNvK54uKHs+R5nmjaj5fmEnuk6fNfubTdYwdXdjXp56bhINV1d+N
lG1a1nrV67cSbli341wsDJubKOn6yTppa57LWZtL65CNsuxU1KEJ+v8rZBur
5v9ddrq/ed+7y6X7i3WbZLK28MnJbD4e63b61eKY557SeO+qeACLDZ4198lh
JcWBbT7cfv/l6UqeR61qPfkqM5ruu3TPWGk+WLfHnQtalLaScFDNM5fVX5tj
38uviORXMv1zwXl6yUU8j2p9/iQ7vPXSBu2PeTyOdWvQ7fqlDsH5PE9x1fr8
nKkPcE8fdFXKj3X79/ieJmb3Cnke4yp83sm6K6NG95pYQPApkTlf3HCtp6lU
D86qOmeLsm81G3exgMy/jD1putvY10DKo7rvL2SeX/7oaahL14V1u97r1rD3
ltI852QNy9Ht84nZNN6Qv/ZwPl0HWN3oXbVdnSUcQqvmmS37Zl5c65JCyo91
a2U/dvmlh1L+1OmTW+xo/5WZHQr62LIol65jrGhC+UWHptJ9dKnKI5OZjG/5
wsNEyo91W2C54kHfJVL+Ebk2M17pfGfdOs8+vMReqEM22mVmSIM/uE5+lI1U
jZc5n3+fsuyo9HexbnPazFpQkSaNx7qdZHa6Yt1vYZ4s+Y2b2m5zAQf25JP+
/H82FfI8aSocZEe31pyy+W+eNB+o22tOU0xiZ+TzPP4qnJnidrMuNuUFJL+S
NVALa9xcp0CaJ6y32nrN7OZsz+dxzh+a6Xeq3CzlGaGqE5bguKZvhIX0d7Fu
fy3ef6mzgzTPtKr14a1sckFdB+fehQSfEtn8HgH/pNaW6ry7qs7Z2LTaK/rd
yCXzL2Pma5p73GmYK80T1tt7a9zqHXOWrgvr1jb3c/DnAmn+h1XPKTOIb3eh
3/Acug6woU3febytlO5jjap1I1N20OOzqY+PlB/r1nT05qBP7/PpOsO0n0/e
/eO1sI6xqHF+tR2spfzhqnVMdm6i/8ka4yX8sW5fzqz/9/vcPLp+soYjSn6s
fJFF65B1D1/4LK4R/t1iWYuqvqtS9iRiT8uM5lJ+rNvrlY1q10nN4eOxbg8e
bHvlplE+nSfrVrPuutvbcikOrGlKhy73d0t55kB/u6XOrafJ9fN5HOv2cpdh
59eFSfnXwXprs7PfhAmLskl+JfMuiX5bNz6L5zFRvTdlmybE6F3SKOBx7vvV
XBR70F3K76qqE9ZW1zW9bWwmj/P1NpmNTTyWyfNsUr33ZfXvPF7V7J98gk+J
bO/KTlqdfKQ6V6jqnLE7esrM65lk/mWsu5FX6at3GTzPUVXfItMv/WF/JTCX
x7Fu9Z+cHPRKmcPzBKmeUzZa67567NEMug6wwGf9nbWypfzWqr5LtlX9oqXN
FKkesG57/bPvZa/JWVI9qPo6FvBs+/S2kRl0HWOHurv2ab9PwscH+ttO14z+
FkyX4li3skd5uYlb0un6yZrPazq2u1sWrUPWf1uPVfMLs1iQar8mg35YtqrV
VZvwExL+WLe4/8XxWLdRi5q1G7E2n86Tja2TFtLlYSrFgZk52nhmdEjleXA/
fvDGcu2ZGvk8jnWr5T3EKPFJHs9jqNpHMG+/GtGnC1JIfiXrEXrdacXbFJ4H
9+PtW2xY0GG6NH+s28Wnz5vaNJTq4TD0twr1Zwu7zVTwONZtu78W7mqpUn7V
8/5apm7+V3nydRbBp0R2Rs/NLXmB9By9Uu3jWMO+eVvPNlCQ+ZcxtxNl1p07
S/j0rHrunsrO/nz0eNSKdB7Huj2W8uGxZlyadL+gv931dINyRr80ug6wWUcP
fXz273jMA/tcmVHSiDf+Tsk8zvk3Q9MtG/WT6DrDfrfL8HhlnUHXMaa1rOzN
7y6ZPI8h8AlzzvcOuXQtkcexbjWD0jeNCovieRTQ33ZNym3VaHE2rUP24e5D
3wL1HM4/hJDfgyD/oOai4n/CPAM7uX/I5X+X82/AS2AerGdNkgfjTh3H1nv2
7/6LXBdzMIytofU2jOLGPB7HP3mxNILntyK/T8H8R1rMNvNq8U1Wr3d7w8kH
JF4F61+PjMf43KChI//syOB/9zDwFeMW5PXskhZJ5vPvvq+iVt7ZGlE8/wjI
05rk//uVWW/u/1FWdN0uIF6m4OPxeUmE36HgeIx/qX37XbsZCglnVd0y7QlH
c9taRfM4181H/fGU14jj+UPhecHf4/DrBX6sUerpOSGuKeR+lchWkPEY14P8
+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
8L5M/Vo+fG15BrNfPN7Va6Ymx6d0vXPHlA/S+eB4v+a+N0vRPSfNB+/X205v
RtUJzGJPPOoOzJZpcjxr1i4OSNuTT86v8TXPJud6Iz4tGrbtXakpneuN13Vh
V8KUjYfz2Y93Uem/O9fk98W0uP3g1PpSfpx/4bDvP4e6S+d38/kMnNdqrGkh
s+hwupZzuQa/jz0tdx0zuC6Nx/yfO5tVGvQoZNrRv6/2mKPGr3dZ/4IOm1tL
4zGPr03Ejg8uBawG+PewHtDnj+MxPiZ+6+qfF/LZgRkLBzQLr8FxOLX1Zc2m
YdL511gnu897lo4f9h/ng0OdLN+bl7JysRTHOtm65d2xNaXZbGRT92tls2pw
PH+927DWP0w6dxvrJPT9pNpXEqVzxrFOMtckDr/zI5fVSXtbM/6LOse5cb93
jnveSed6Y520Gr3RpHRhPo8jbq+uXq84lVXA4o+ZrHI7ps7vi80edUc9vSJy
/o6vOT2XHPHZscV0kf0PKY7XtVox/YDpGCVzHrMxbYeBOr+Pvb30mzjbSPPE
+Y+esKV+LW0lu1fwONOiw08+/68rfrQOVUrjcZ6/yg6kaIwsYmPQj0q+E4jj
8e+ufXdp5NVGhcx4mpVb+dQfHIfZrV517TpIOj8d84xZcf/Bzov5bC/UA9aJ
crDxNPVFUn6MRwz42GV5/Tyo53JeJz3tLt/r2i6Xtd3ZIDuirYTbxaMffIb0
lM4Zx/HvY3XZoLfSOelYV8qKsikB76TzwbGuouyjm60dKZ2TjvXjunzfw5GJ
0vnjWD8zPWY97ziqkHVe136dgdNvjv/TCYf3/PWXzjdH/B3bvXkafoz/ro3n
x+/44XjEc3vPq1vfrFOy62/umucH/+L365NO76cN6xeS84Z8zek57IhPqtqE
0oVOSjakal39yuc/cseqTqPKpDxYb3cGTXpXP7iIdQP/2DzyfT8cj9fr9f7O
8UZOhSysap38wq9XvnCj1QgnCQec/+Lwne/et5SuF/MX96qz5vUNCX+snxUX
owrzJknnvGOdpJrdeFVgncP6jJo1aObjSn69812ST2QbKfn5O1gPT6e0NJ3Q
XzoPHeuho0Fyn8unpPPcsR4uzls+ZHVFPvOPeFFb+9M3js+wa3YDzf2l89n5
+2jmycPanQrZlYrzNzZN/sDzFNQ4tqCB4j/OZwf837T2znZ+J+VB3KzdTYPW
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
oZOVdF14vXOq6y8WWD9TQMcxU+lBfP4+1fUgC6wfogdZYP2Ega60RaVb8evy
qa5bWWD9eFfXpyywTgpBz/pbpNIl8Xobwndj8Nw3rJPloJfxc/GgHlBfwzje
x16gx2Ec78sV0O/4+XSA50vQ+zDO9xegD2IcrzcD9MTq5+j5mheD/ohxvK4/
oFdiHO9XCOibGMf7VQF6KMY5Dwn6KcbxvoSD3srPAQT8+4E+i3HEvz7ouVT/
3dh/r+H04DRB/924Zqtlq91pgv47r2afr8fPpQr67+P5t44tOaYQ9N9veWYG
S0OTBP33ybadCY0c4gT9t/jg8ym7r0cI+m+pzsgju+IfC/pvWzjHkOq/ZzWM
VtW4KRP03/MV5RvkXcMF/ddxnqnWt6MRgv57tpGPkW2zKEH/XWe48o5NWLSg
/2r66Cz23hor6L9PZgfccuoUL+i/ofevDnfLCRP032u/PNwP78oQ9N/x92wL
lxakCfrv7QXzby3frhD033L/W5dHNo8U9N/MGfXaWXSWC/qv31+PIYa74gT9
N6zDmyHTtWMF/ZfVajaw1aEYQf89b/XDtolhjKD/Trcv6PDoQayg/5JzPzk+
2ina6UlXYwX9d6Oszj7tu3GC/pvRIH+KtlGcoP/+dG/VOzgzXtB/D630qGyp
nyjov9E7ykJqTpQL+m/i95YLdDbLBf33zly3wRFNEwX998mZVXc/KZIE/bc9
+Kyo/pum7rP6XssUQf/d0/C2zoChcYL++95kr04/z3RB/3W26/nbpShV0H/1
xmmsnTxMIei/FssuvXCNjRf031Z9HFuUGCYL+q9JZnaHWD+5oP8+XCDXfD05
UdB/fRImHtD9nijov+1dzbcbByYK+m9F4oP3Y0vlgv67DM7hpfrvlAUeC8MM
5IL+ey//z8FfkXJB/1V/viH16/FkQf81n9kkoORckqD/Vq4vs376OEnQfz8H
Vjy76pIs6L/ow6T6b88pyYe+xaYI+u9kM6/4gVOSBP1X+2bGmmtHFIL+qzfc
eGi/symC/jt2rKap3ohUQf/9Y+Gsf3RXqqD/avRdlDN4glzQf3udfySzeZwm
6L/TnjXObxeWKui/CzZOuHLsmULQf1cETN1n0E0h6L8Fa51K1nVOEfRfH8vl
xpNPJQn678Xid59c+iQL+i/6lqn+q6G90iJwe5Kg/97UXxx7qGOyoP++hHO0
qf678YTnqFpJckH/PXF6XWiQQbKg/yodap2LLJIL+q8O+L2p/nvujb11LdMk
Qf91/jg2q1+SXNB/y9c2KHyVkyTov2sbNfIvepos6L/yWw/qefVXCPpvpszv
56FJqYL+2/kDa/fXTi7ov8e2XfB5bp4q6L8rFm0ynfBAIei/Z8beNLmqpRD0
X7VVNSd31pAL+u/SdnZdakYlC/rvLQOz1ZlBckH/Pdji+gOnTUmC/ntw5Og+
ngPlgv7r8t32z6tGckH/9Wy2eU5c20RB/30Dv/ug+i+ea0/13zMGoaZT7eIF
/fc1fIeE6r8dfiY3PF0eJ+i/F/6stgx6HifovxN+Pi9vVxQr6L8XJ3/Rfe0a
L+i/I92mXGxjqRD0X7+PiXl/TyUK+q9i59y/D1OiBf037/lmEztlsqD/3sxV
lp10SRX034WAD9V/v0SGP/WySBL0374Xr9VrricX9F/HJ4s69lDGCvrvzEUX
95WEJQj6r029GYU7TWMF/de7W7s6Q6zjBf1Xc/NPnQ1ucYL+W3dt80sf42MF
/bc//L6M6r9vFgb4Os2MEfTfgnbRsUc/Rwv679TBB7S1akQL+u/FcvXT7mGR
gv5rd2WY1pLDEYL+W/vdurN+NSIF/fecp1bnR0nhgv47qKHrjfDgCEH/bTtb
Z/GvvzJB/7WNuxnjqh4j6L8BY3qv9OmdKOi/AfaTjsxeoBD034M+xyt//YeO
jPF5fZdfurUwTdB/M60ry3yWhAv6b2XGtRYxsXGC/hs9+GGvjoExgv6722H7
U9voGEH/rbh7SDZtS5Sg/16E37dS/Tdronu3yrYRgv7L+photRgeKei/d9t7
ezzzlAn67wzt/H0+jiGC/qt8bLjEyDBc0H/jH5sn924UKOi/Xa6MX9+9n5+g
/2pMDl4y8Yy3oP96jVu1xs0pRNB/Her7XxsfECDov59shpzb6R4u6L/Prfp+
+5LoI+i/W79sqLxlEyPov8NanEk9PT2e6Sn+P36HX9fiNfrr9iy/Jei/q7pO
nPfwZyK7kKIaj9dlS8Zj/dhcmrbNYl+yoP9u2nnwh2+reEH/TTvQdGDjHjGC
/rvM/1f/tZURgv7bOW1i/y6aMkH/XfuuhcGwuwGC/tsi025C0peHgv7rBL/T
xzjex2MkzvetJI73qxvJj/drO5kP3peeZP54X1aS60X8KT6I8zbAk+q/8wF/
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
RspzugA/+X/Vrrqv
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
/wCwPq1v
            "]], 
           Polygon[CompressedData["
1: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
6P+lUL0X
            "]], 
           Polygon[CompressedData["
1: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
n82IO68=
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtmXfgjlUbx5/bc//u8YhCUUZp0TIiFZLR7m3STrtI9swK2TsjJbKSlYiW
NEVL+23vrWhSSoO8n+/7PX+c53vd132d64z7nGs9B17bvW23coVC4UZ+iuDo
pFD4BewNtswKhTpxofBsXij8xfNh0OuhDwdbR36uSzs+stzvyBwCrstNnwM/
SQuFdvDOgz4XbEE7G7o52Ix2MnRTsDbtROha4EG0Y6EPAHejpyH4AjpbM5/6
0M9DN1D/yM8jmfgl0COhT0KmEfgiMseBZ8E/BrySdil0E/CIMGfNvR6tDfRR
ek87H/pC8FpaW+irwXbovAb8Cp1bE8/ta/AMeOdCnwb+h3Ya9KmikT8LfBf5
n5GrCf1k7rVpjXpuXSoU9i8rFEYgWxd6C7x+0G8i/wfrWYr85fDORP4S7ROt
PfTpYAPk/wIHs7d70S6GfzZ9L4B3FfRF4FjajdDttVbaZdAnaH200yPPr3X4
Fv//JmEtWlMFdF6gdaGzTRhX47/F3I6E3gI+Q9sX+iGwL++uhx4AXkffj/Q9
meOH+jbwPwB7Z8YD4PeCngr/WmTfhzcR+j3wY9qkyP0/p82Afhacyn78w5mc
Bt5An+mR194HPZ/w/kB0TuFdEf508AV4Y6A3gD2QeRncF5lT6DNE5xBcHGSW
gRfwPEzrBQ9Cfgdj3ZL4LsxB3yC+xRW8ewvZmuh5G5wQ+bk1/AfAEvyV4Dj4
q8FVtFu1P2BXdD4DVkbm6dhzeApcSBsVeQ1raCOgH9OZTf2+EvJrw/48rjNE
6wv9BNglM+6FzIHQdzLP/sxzAu1p6HuY+13gLtYyC2yFzkH0vQnZ+2OvV/Oe
FvZ2Bnhy6vnuUfI+zIY3MHd/6dFetECmJ30bgiuQHQB9H3g77+LI8xiaWN/N
9N1e9Jn5HZxBn/uhJ4BN0P8nvGXI/Ej/u+D/AH6Y+xyfw/t+yM2LfC9uzkz3
hzeAtkB05nM1Dfp6eF1p39G3DvPvA70U/midMXSeo31F9urUZ21/ZLplPgPn
wesL/SX8KiWfK50xnTV9C+3/ZUH/YujhqfXMgu4O7kD/eN29zDp1ZvdGTyfe
3YlMW/B5eJOhXwKfYH++YO1z6PcVz3Pgb4p9pxdCr9P8Ut+po8HGtMHQbcDr
0N8V+nDow2iddY/g1YS+FvoIsCPPS2SP0T8pfKMp4A2Zz8/xyBxA6ya7l/r8
a17VmHO9MG4tcB+en4PfnX4Daf/KNsP7FL2XyaZnvu+zke8JVi357mm9Q2mL
4HcAv45NDwu09kR7ozOsM3922P+7oXtB70T/7bHX9WKQ1x2+OPWdOgPcwv4d
Bv0j+DPtIJ0fcEjq/ewNvpD4/UL07Qbrw98JNkZX88h+4gNk6ko/2IzxKsF7
FPnKsc+tnnfw7iTtP++fg/5e9wuZb8Ha8gU646x9W+wz+SIyh8J/G9xRNC2b
rr4NoT+U7UT2BOi/4R9M389i79VvPB8C/1dwc9E2dhN4DHoPh34jsU2TnWmH
/A88V9eZYj5VYs9zb/AN2njo18HDkd+AjluQGYt8An8GOJ62lXvdB3wz2KvX
5LeCLXontt3T3eyW2m6LV4v5fo+uHtCXwDtWPg+ZauBn6ErB1Trb0OWhH4Iu
F9tvloHH0D/G942S/+K5Mfw9ZXdojSL3iWPvVRFsmtlff4e+TxLrWKX9T8w/
PvO4LaG3JT4nryKzH+Nck9rX9ETm0tT7UR1+HdlB9mS41gF/ieKH1LTs0GHB
J98G/1twM21mFOxLZl9zG2N9E86nzvWfsc/wDt1p3pVkY8F/tAfQd6C7Wplp
8R7m3R7Q88Aq8O+Brgz+zbsHoQ+B/iLcHemvwPMy6D3AianxeOZZCbwP/l7g
LcztAeipvH8Qvf+V3WWNnVOv5crUtvQnnQv6/hx7f/R8rwJA2UxwIq2c1ggO
QM8ksHduG74v45xI3x7wf6DLYJ0l3v9VsFxfnseBPZHfn7F+g3+zYkPoxfC7
wx8KXRU9LdCzD7hc5xasAX8L8l2QH5h6L+sHe/4L9BHQW2PbXj1vj21/fgM/
DfZTegeg53ee6yH/R2x7rudtYb1at8Yazny6MZ9pqcc/Afkhmb9Dc+jy4Hzk
S+ADRX/TB8EXaRn0c+AdiXmj0LMarAL/YXA6/JXgCPgrwMrwV4Hv0faBfhec
i8zj4Dhk1hR9HvT8Ca0i9Mfg2qLv7GOyeZl1j1ZMDtaK7Ec/DHbmI/lzWj3o
T8FZiX33GPADnivAfx88KvN8lsJvkHmcWehcDuaR510vs+xM+DWhf0VPP+QX
JbYnk+GvBw9A/nlwcOZ9Oo59e4vnvSOfP911+c0IHMs+Pwp9FziCNhe6b+p3
kimU2YbL1xxdsnwG71joW1O/bwR9ROYxb2MOaZljg6TM69oIfyr8l4L9fAVc
nhinwV8H7gn/M8V2mfs1Qed8ZJ6ENx6Zp8A08vO6xP5lBXgV8+qkeENxY2b8
JrePvhu6gJ5aim0ghyFfO3NM2g+ZusFH11D8AH+ibAb8pqn9dULfCfT5t+D4
7TLFQPB/QqaJ9go6QmZi4ns0FH5PxYKR5WbT+kSWk52fp2+S2+/fA69I31lB
RrIzYseEM8FrMscSdVLbdemU7jmx4wStbX7R65Leo0L8cD39RvOuX+QYd27R
818A7qd1wj9YsrFzii7gRfS5CfwudxwyHPo36GGxc5khmpfiFeih8kvyjdCj
wPW00dD3gp8Hn/4VeGPmWD4t2c7LVncBNwYb/mpYo+KgvxmrP306Rt6XMbFz
pUXgFPbtb+Y/HOwU+3t1DXNWHrS3zm3sdWnei9Czl+4R2D5z/lUtNT2Y91sZ
69lw3hbqjmaWHaa1Q29nrP6JadnaPvDHKY6IfD5Gwn9a81Tso5hf/gL6FmR/
p++Qou+mbHYPfWt0fQ2/g84s53oV8geCozP7k5N1j4rOcWT7FAPoW3UIfftq
L3PnFH8gMwheL9pP0CPAsbyP0DkhxPni9wznXPMZCD206L7DlFNkzrlfDnmJ
bNozRfsF6egFv3pm2a7QM8GyyLnHgOBfuoPDFeMy/1bMf0HqPVHufHs4wzrL
1RSn0u+m3PGU8sedYMfUsf0h9J0O9pIvjh1L6+z/mzvuFW+XfEGQkWy/ov3X
ANlaxl8ZeR770vdb+J2YW8ew51Xh7Zf5m3RBzxhwW8F7Kpsgn9gx9zw3qeaS
eO2boTsn7vsd9E2Jx9O4Ws+gos/J4KLHFXZGT7PU5+Sg1P5dOcShrLFGyfGc
Yh7Z/0eRH4P83Ylt8v1gBWQeiZ0Pzg02Z1xiX7YTepTi4sw53dTEfeV/xqLn
IbB8ZL0VS85dT0/tm/TtpulcJK51vAd+FOhfEsfbEfIr0fMv/ZtEft4z5Lqd
M48rPzkyd56oOFy1h7zknLNl6lhC9vlO+AdnPpOTAq17NiR3/CO7vR58A151
6DfBDblrQK2QfS345ZeLfieZt4v2BfLRKxP7wRrQa7WXGgN6g+pAme3PO6qH
5K5bnaj7mrue9WvwrTXl0xPffcVUkxWXIdMqdo1FNuc+xrxVPot2dOxcY0mI
MfRuGa1S5JhVcYVy9pGJ60WKnz8HW2TOBe7LfeaVb7ZXLJw4n1icm1aM/Wni
fEn7o3zmlcT5VGN0NMzs05+Et63otW9VXBHuhnJMySi+uBvel4m/43GZ8xTJ
Lsqdf2k/14DD4D8OPYe+Nbg/K6Crl9mmCVuWHIOtla9JnSNXg14NfhzmvDHE
HtqTmeAVmf3Dr7m/i+KpO7V/mWMh5WFfwqsD/Y1sUm5br/uSKb6InKvI//aA
bpA6v9A+aD/ikP+qXlRR64ZfIfZ3V962PPfZVo7yQO7zob16HdyUuEa6PXH+
on4PI/N+yAGfBXfn9sfK8VVP0xznwWuUOa98KvH50zmsn1mn8qRHQm7VSnGv
3sfOZ6vGtvPr5B9T5xc6y3fk/pb6pvfqrieuAer8/wN9auRz+yByeex8qix1
/VZn+ITMud3jvN+ZuFb6XO4zp7PXPDNfNd4sda1YtcQ0dQ1Z+ndpnql9qHLG
XiEeUFywIuTnshUXZ/a3W+CdkVmmYuo5tID+Ufco9tpVaz4zc/31nVBrVb03
Tl2n3R/+U/BrxK4z61n14TOgyyFzauY69Gu5adVHX81dc1YdOEfm/Mw11I25
x1L99e3cfk115Veg90CuHfKnKKfkeVfRd0HzVz34rXDXT0GmJbg23PEo9Z1V
zq4aw2O5v6Xqq6p16xsVkFkTcnvtc/nUdWn1fSN3Dfd0+Odmjp0qwb8x9nw6
xN5PxVybkb03d61E90jrUk24snLi3LV4zb9BuAuqZX2euyauOo9q4Ip5FNO9
mbsurHHbZq6Nf507Hr4cmSrIXJk5XvtEvjjUxxQHqsbSFJnNsj/we8O/NPOd
VU1sYu56RVVkVsl38Nw2dn1btWbF80eGcVWb/zJ3LiDbuIT3LxR9dzaGmF/5
2uzE+6M6+sfIv5e73q164OWZ69a/wLs5dm1NcZtsi+LQbbnj8Ct1v5j/j7nP
ruZ8Uskx1ijoG+RLI8e1WpNqaKqL35U7N6sfxuoP72d4F0J3hP5Wta7c/km1
Av13cCF991StTzFrZDntgc6D6vcf5P5PRTXSgYpNI+uVTn3zTaHeqTmfF/t/
BsUtil90v2Xfkth2RrHz3JCPr4Z/e+rcWfXVQdBTcue62vM2oQ4pH30sdO/I
fl81h4robhpiCtXGHwV3x673litzbqg5TEmd16teMS51LqO6wa2ybWUeV7rk
L1RnaFhyXVpjHZO6bqJ6iOqLqr0rTmsE7gp8vVee+LBig9R1S9UWxodamfyU
/JXqJ2ugZ6Wuo6mepriiQ+aYqlk4w/pPabvORurayxhwfqj9yYYvyF2nk99c
krveLfs/PXdsoZxxdrAJqgcqT1E9tjl6lqJ7KPTy2DVb/S+g/yj0f4H+NzlH
Y8XmL4hde5dsxp70zf2/iGoveZlr3cqT2we/r5rtzJBrjwrrUs5UVnLOK/87
WTUh2mO6IyEf17dqXHJ+qvN8KLxJIWeW7+iUOd4+MXVuUhv5NsgPyP1/g3KE
CbFtyGSwU+4YWrGxcljlcbVT58J6/1fu2P5J+PNT146+5zx0S1yHUf4yPfW4
+l+lPGOVK3lflHtq/qp7NYO3MLXv033U91JN6KiS8x/p0Vz/B+bamt0=
            "]], 
           Polygon[CompressedData["
1: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
04i16/nPbYk1eFWuP9fmaY2opX0/1rpDfEd8X9SYx9y+nOvPfDQd2235vC9k
fWSMbFg/1SN2Xpr+dCM8rCXmeEo95ti5f47P8nz/jN+uwjahEbHWa3rtKbm+
bqnHs9Sz/7Fevd/7g6/x/TA/m7RGzDZ2P8Jvo7nf1zl+Wb7/wvFXpD+dl+9r
qSrq60sz/3etwuf0va/g/o3w0TH18El9V38fDTfVonezf7kw/aFLFf2F8cwa
olMV8XMA/Al8RMbPa+Dv9fFG1B/D4S/gjlXUBOPgei1qBdfv0Ow/7H3Oh5+o
x5xe34icqS/r0+ZifVTft2fTd/UJa3NrTH3FGt5a3hzyayNqFGsVY9z7jViD
T6W/rFTFGqkXEWNdO+ZYc61r7JVG5FRz63LwM43w8VoROVffN0f/jn3jWuRu
axBrEWP6OlWs4QEZP1zbrq8h8Ofw4lWsr8HwZ/BiVfjQjfk+zmuEP03N/nHZ
jD/X1iOGupYfgDvl/XzdiPUxLefPWGfMM/bZA+xTRs1l7WXPeXAVNby1/OHw
KmX0DNba1tw94d/MuUXU3KuXUYNrt8c4pIr1Za5zTZzViHpyEvwd9z861+ct
+b6XqyL/3JX95CWNyDczst9boYp+2lxrzh3WiH5wYvazy1SRL26vx5oxN5l/
7q5HDr6qEfni3ryf8Zl/bsv+fFwjcpa5y55pwypihLHCmHRt5q8HMv9PasQa
d61bE05uRA9kL6SmcFgVMW2BIvzFWGeNa61rTf5hI3qsu4voKe29jOEvFdGT
G9t9Py8UoWGYqwp4JjwG/lcZPftreby9aTN8AzwQ7l1Fj3NNET2wvc82fIYZ
C/mtYX/eGvdrD7dWGT3opCJ6FHs9ezR7TXtOezc1kanwmbXQSuw53s37sRdZ
Cn4dvlz/gReGH8/xx1XR8+hP9oj2Qs7XpfDgWvSSHRj/HjwR7l9Fz/d2ET2L
vaA9/cPwKbXo9dWUHoKH1kJrWrI1crM5+sQqNJTnitCU1FYWg5+FT4f3LKOH
faCIHtznnQ++M+/n6Cp67Ltyfdh7t0v7OTnfxnxjvzWFvbI5/rn0v5U5flb2
B//ht4ktkYPNxeawOxtRg7yQ9dZNjeg530h/she1Jvu+Hj2ItZo9lr2WPePH
jajJzEXmJGs1e4S59egJ7B3UEF6vR43n8eaMxYrQ1Mwl9jBv5nh7CWtea0nj
3RON6HlvzfVuL1zBN8MnwJuUoRnclvOplqDmYG9qja8WYU9lb2WNsybzcSX8
X3gxc3wjeiB7IXu01aqoaefk/T7ViBzbroia0txrzrdWtyeyFnBOP4BXqcVc
m0M/zXhsbrWGtpbuB69ahkaiVjIk/UX/n1iEhqJ2aHz+leOXrEXvaEz3XN6z
9+71fJddjHdV5IOf65FjnT9rxmeynjW+2vPa+1pDbVLF+/H+rXleyPs199sz
PJz5wt5On1m3ivfvfPh+166iB7AXdT6stSfn+7LGnJn+92zOt6xGulERmpDa
qTXzWxnPrLX0x1ezfp6W/jIr6/Pp8Hnwu/l8a1SRH5/M57d2taawtrDHt9cf
l/7dIeOv/v18Pp+1tzX9Y1n/mJ/uaIQvmNPN7frDe3yfP+Ot/vNxzof53Z7q
y1xvM9Jfv8r1ZO9mD2ovqga9WxWa0ppF1IjmfzWQ7rl+1EbUlNcuoqZyPdiD
2ouqYahlqPmunu/PekKNZoUiemC1G3vcHpkv1G7sie2N1Xj/bITmtmrWH2px
ajLLFaFpqNWoOXYuQgNQi7QmsTYxZ5u7Xa/Wevb8G1ex/ucrwn/UXlwv39Sj
fnkx6w9rbWvKtzPflEVoNO9kvdNcRE3u89mDd818pFZpz90l7d9nPlywiHrl
1YxPr+X6u7sR+a1tzsdnjaiXmvJ53s3125rPu0EV+UXtTQ1unTI05r2L6LHs
tezh94V3qEVvb75Ri1cTOqqKeK32qCZ4bBXx370FNbAdy8hpU7Ie2SDj/TNF
aMz/zvh1UxE5cNuM93cU0UOZb90DcC9ATXl/zv8tPLAIjX+BMvLB9MxfW2X8
UztVY9wc/obxJ8N7wfOXkX+ez/MfX4XG/WRe31z8HeNPzfpqqTL2LIbkfBxQ
hX8skf75bSM0TbXNQ+COZeyRuFdyVuZj9zSGwUfUYq+jnvNtfjuiivz5YObT
vlXUC9fBo+FdM18/WoRmq3b7Y96P8bFLGZr8xrm+1Ord41kH3q8Wez+uvwOK
2HNQG/ocPjLvt1MZmtwuuT7U6tzTcG9DzX/PKjR5tV013r3hz+DeRWjmbcvQ
fPtkfblCGXPguQ/jt09aYk9h13x/7jW4J6D2qgbrXsHHLbG3ocayRxWab1/4
0FpowV+3hBasJrxkGRpur3yfvarQcLfL+1PbVePvmfev9q+mtk0RGrBamxqV
Wr+altqV8UitW81qyyrii3tL7tn8k+tvqSJiwO8Zr7pmPv0p449asRrnb43Y
0xiV68n6zvizchH9z7yMP8YnNbnNq4g/xjc1t03h/8IHF7HHMV/mh1lZb6yC
faUy5uaCIvRzfVq98MQifN36TG3ePb2TqpgzffmkIubSNePcuSZcS76zY10L
RbxLc661sjWoudh6Ui1bTfewMjRYtVh7XHtdNWu1azXak6tYM/r64CLWUqes
/6xXd8j62L0tNfsDy9CI1YrVBAeVoeGr5auRnVzGnpV7V2pkA6rYo3SvUk3p
VHhl+Me8v35l1BTWFlfz208tUX/OyvjUK+vhNzM+Wd93hz/OeHRkGRq2/bqa
q9q2NYm17OQiapWefJbAfjO/XYxtU7hjc2icY+Deqfd+VMT+ipqv2u90fhte
Ro9mLTu+iN5tDez/8P1KfhuKbS24TZ7f86nh2Mvbc9p7uidgb2WPbq+uBlPP
6w+uQgOyN7dntXfdEHv75pjfM8vYk3VvVs3n+DI0ObU5NfyhVfSMJ6R/2Uuq
0arV3sdvF2G7pIxn8Zn+KELj6JDzNayKmGVvYc9jLFPzVft9kN/OwL5Lzqc9
U5H6SHfsd9ZC61YjVSu9Db4QXiP91x7FXmULfTLvdyy2DeD5m9Mf4GXhz3I+
+8PLwbOL2MM9JsfPl+cfUoX90yL2BPrai/G5zljVHM93bhnvwnfku1o+/VGN
0v5PzbaVsZNroeWqoVXN4b8jc76/Tn93b3x1eBHs98OnV/H+Gs3h32przvfC
8E210Mp9Pws1x3obnP6m/z2gP3H8MvCvRYwfVIX/6A9qdCPKmP/O8K210OL1
x6bmeF73JvSPdvC9vvMy3uei8LW5vt0jURvUX9w7mVTGtb0H10KfKnpVe2Z7
Z3tge097RntH38fnRfTLfbBtV0auNmfby7oG7ZXtUV2brufv+T7V9Z7x4Lsi
+lf3+lzDxhJjimu7R8YD4517c1uk/6i5j+TeTiyjd3WOnCtrDu/FntNaxJhk
L/lKEbFqt/Tfp4rI5cuU0bufXcR+vfHnp4x3/u2ENYq9pz2otcsxVaxv2d7U
OXau9bFP+BztGsr4IG9aRi1iT2dvd1IZvmtMMja1lvE3BP7twEctUQN4vD28
tYE1k72ePaC1lPFyThH99iEZX38pYg7cm1u0Cu1vQOrV7kG0bY75dm9CfemS
rJ/cO3ZPc9vMb+51+jcGajNjU4+1PjuliBzi3244R86Ve1DWGwOrWJu+I9+V
+XvHzH/uzY7J9aU/6dvmk/exj6rF3qh7YFtnfnRv9/ZGaL/2QPZC1menFZGz
zF1q8mpvaqpqq6/l8ebI7au4nrHSNeJaua4RvZM9kL2Qf/Oh9qWGqpbqHtk+
WR80ZT0suwe2SxU5R9/UZ/VdY45rT5/X942hF2Q9s3wZf2OyV9YX/u2JMdm5
dw26FtX7zivC59x7tcayFji0iNprFHx3Ldaka7NT1gNHF1HbuWZdu78VkavV
/y4sol5XL7CHs5ebmXr7KVXEHmOasc0YOSH99f+xkzHHFKE/+rca7rnNTf9R
SzbmGvuMqcbWP/J5zSHu9Z9TRmwy5hn7/JubP3N/Tu3Qv8k5Nt+Pf6vTMetz
4/V+ZfSs9q7uOakl+jct7l1dVo/9PXOAsdw179p3z+DX3C9X+3ZP8J+m0LjV
ukdVocV3y/1q/0ZoaL7P9hm/nVvn+KwyajDXoGvP2sx4X2Y8Pa2Kevnw9Hf/
Nsic79p2jbpWe1TRa6tBqEWoedrLuwenFqrmqZaqpqoWas1i7WKOPLKKPf7/
a5v10GqfzP2Dd+qhFV2Ux7tnMDDXs3uL97gGytijHcn59q3F3q3XU2tVo1Wr
tZ84I+tv+z1zrs+2VO5X/g+ao8nJ
            "]], 
           Polygon[CompressedData["
1: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
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0UkuBGEYBuDf1ObWcQBiY55ZshWhVxamNjYiLFhJ2EksOAEnYCOsOAEO
oLXWZk4gIvaeSiT11vMllar3z1cN6c2xjYIQwpbcGA6ZKwzhmD+8YKIohCt2
MMMRfnI5FsIHl/jONN+4yFcu8IXzfOYcZ+XJPMNHppjnNB84xRwnec8JZjnO
O67qvmaSl+ziCWt5xF9nPmCeOzznmayb95jiCpMc5iDb2Mk46/ltDwlmGe2m
sSQEj0IT1YRmFrOFrtDqFou+w1K2syzaFzulPDonK9jNSvawir2sZh/j7GcN
vxTXsUpxR9TFAQ5xNNo5p7nLNZ5ym7fey8j+///8A8pFM5k=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0UcuBVAUBuAr2owZJiTmjCQmrICZEREGBt7Te1kAjwXovW5A720dSqL3
MlQSvheDP9+5OTe55+Tm1rSUNSeEELqkNzGEbodYUgj9XOQQj7jIM67wi8dc
StWL3+MhF3jAee5zjnuc5S5nOC076iluc5JbnOAmx7nBMa5zlGsc4Sozk73L
HzMM84IxnrCHy4xykBWsZpWUqgtZzCzm89u+OTxnOo8Z4nvxQznAS9amhHDF
CK8Z5Q3reMt63rGB92zkA5vYLI/qFj6xlc9s4wvb+coOvrGT71zw9i8PmWam
U2bzk3nMsEMRC1jCSpazT79fIgn///kHi6BILw==
          "]]}, {
         Line[{1318, 1317, 2185, 1334, 1963, 2193, 1357, 1970, 2207, 1382, 
          2222, 1380, 1404, 1983, 2237, 1428, 1989, 2252, 1452, 1995, 2267, 
          1475, 2283, 2002, 2282, 1490, 2016, 2305, 1508, 2327, 1506, 1530, 
          2037, 2342, 1552, 2045, 2357, 1576, 2372, 1574, 1599, 843, 1622}], 
         Line[{1319, 1957, 2186, 1335, 1965, 2195, 1358, 1972, 2209, 1383, 
          1977, 2224, 1405, 1985, 2239, 1429, 2254, 1430, 1453, 2269, 1454, 
          1476, 2286, 2004, 2285, 1491, 2019, 2309, 1509, 2031, 2329, 1531, 
          2039, 2344, 1553, 2359, 1554, 1577, 819, 1600, 2387, 1601, 1623}], 
         Line[{1320, 1958, 2187, 1336, 1966, 2197, 1359, 1973, 2211, 1384, 
          1979, 2226, 1406, 2241, 1409, 1431, 2256, 1434, 1455, 2271, 1458, 
          1477, 2288, 2006, 2289, 1492, 2021, 2312, 1510, 2032, 2331, 1532, 
          2346, 1535, 1555, 2047, 2361, 1578, 2375, 1581, 1602, 2389, 1605, 
          1624}], 
         Line[{1321, 1959, 2188, 1338, 1967, 2199, 1361, 1974, 2213, 1385, 
          2228, 1389, 1408, 2243, 1412, 1433, 2258, 1438, 1457, 2273, 1461, 
          1478, 2292, 2008, 2291, 1493, 2023, 2315, 1512, 2033, 2333, 1534, 
          2040, 2348, 1557, 2363, 1561, 1580, 2377, 1584, 1604, 2391, 1608, 
          1625}], 
         Line[{1322, 1960, 2189, 1339, 1968, 2201, 1362, 1975, 2215, 1386, 
          2230, 1394, 1410, 2245, 1417, 1435, 2260, 1442, 1459, 2275, 1465, 
          1479, 2294, 2010, 2295, 1494, 2025, 2318, 1513, 2034, 2335, 1536, 
          2041, 2350, 1558, 2365, 1565, 1582, 2379, 1588, 1606, 2393, 1612, 
          1626}], 
         Line[{1323, 1961, 2190, 1341, 1969, 2203, 1364, 2217, 1372, 1388, 
          2232, 1398, 1411, 2247, 1420, 1437, 2262, 1445, 1460, 2277, 1468, 
          1480, 2297, 2012, 2298, 1495, 2027, 2321, 1515, 2337, 1523, 1538, 
          2042, 2352, 1560, 2367, 1568, 1583, 2381, 1591, 1607, 2395, 1615, 
          1627}], 
         Line[{1324, 1962, 2191, 1342, 2205, 1352, 1365, 2219, 1376, 1390, 
          1981, 2234, 1413, 2249, 1424, 1439, 1994, 2264, 1462, 2280, 1471, 
          1481, 2301, 2014, 2303, 1496, 2324, 1503, 1516, 2035, 2339, 1539, 
          2354, 1548, 1562, 2369, 1571, 1585, 2383, 1594, 1609, 2397, 1618, 
          1628}], 
         Line[{1326, 1333, 2194, 1345, 1356, 2208, 1368, 1381, 2223, 1393, 
          1403, 2238, 1416, 2253, 1990, 1441, 1451, 2268, 1464, 1474, 2284, 
          1483, 2307, 2308, 2018, 1498, 2328, 2030, 1519, 1529, 2343, 1542, 
          2358, 2046, 1564, 1575, 2373, 1587, 1598, 2386, 1611, 1621, 2399, 
          1630}], 
         Line[{1327, 1337, 2196, 1346, 1360, 2210, 1369, 2225, 1978, 1395, 
          1407, 2240, 1418, 1432, 2255, 1443, 1456, 2270, 1466, 2287, 2005, 
          1484, 2310, 2020, 2311, 1499, 1511, 2330, 1520, 1533, 2345, 1543, 
          1556, 2360, 1566, 1579, 2374, 1589, 1603, 2388, 1613, 2400, 2064, 
          1631}], 
         Line[{1328, 1340, 2198, 1348, 1363, 2212, 1371, 1387, 2227, 1397, 
          2242, 1986, 1419, 1436, 2257, 1444, 2272, 1997, 1467, 2290, 2007, 
          1485, 2313, 2022, 2314, 1500, 1514, 2332, 1522, 1537, 2347, 1545, 
          1559, 2362, 1567, 2376, 2053, 1590, 2390, 2058, 1614, 2401, 2065, 
          1632}], 
         Line[{1329, 1343, 2200, 1349, 1366, 2214, 1373, 1391, 2229, 1399, 
          1414, 2244, 1421, 2259, 1991, 1446, 2274, 1998, 1469, 2293, 2009, 
          1486, 2317, 2024, 2316, 1501, 1517, 2334, 1524, 1540, 2349, 1546, 
          2364, 2048, 1569, 2378, 2054, 1592, 2392, 2059, 1616, 2402, 2066, 
          1633}], 
         Line[{1330, 1347, 2202, 1351, 1370, 2216, 1375, 1396, 2231, 1400, 
          2246, 1987, 1423, 2261, 1992, 1447, 2276, 1999, 1470, 2296, 2011, 
          1487, 2319, 2026, 2320, 1502, 1521, 2336, 1526, 1544, 2351, 1547, 
          2366, 2049, 1570, 2380, 2055, 1593, 2394, 2060, 1617, 2403, 2067, 
          1634}], 
         Line[{1331, 1350, 2204, 1353, 1374, 2218, 1377, 2233, 1980, 1401, 
          1422, 2248, 1425, 2263, 1993, 1448, 2278, 2000, 1472, 2299, 2013, 
          1488, 2322, 2028, 2323, 1504, 1525, 2338, 1527, 2353, 2043, 1549, 
          2368, 2050, 1572, 2382, 2056, 1595, 2396, 2061, 1619, 2404, 2068, 
          1635}], 
         Line[{1332, 1354, 2183, 1355, 1378, 2220, 1379, 2235, 1982, 1402, 
          2250, 1988, 1426, 1449, 2265, 1450, 2279, 2001, 1473, 2302, 2015, 
          1489, 2325, 2029, 2300, 1505, 2340, 2036, 1528, 2355, 2044, 1550, 
          2370, 2051, 1573, 1596, 2384, 1597, 2398, 2062, 1620, 2405, 2069, 
          1636}], 
         Line[{1629, 2063, 2385, 1610, 2057, 2371, 1586, 2052, 2356, 1563, 
          2341, 1551, 1541, 2038, 2326, 1518, 2304, 1507, 1497, 2281, 2017, 
          2306, 1482, 2003, 2266, 1463, 1996, 2251, 1440, 2236, 1427, 1415, 
          1984, 2221, 1392, 1976, 2206, 1367, 1971, 2192, 1344, 1964, 2184, 
          1325}], 
         Line[{1638, 1637, 2408, 1654, 2076, 2416, 1677, 2083, 2430, 1702, 
          2445, 1700, 1724, 2096, 2460, 1748, 2102, 2475, 1772, 2108, 2490, 
          1795, 2507, 2116, 2506, 1810, 2129, 2505, 1828, 2550, 1826, 1850, 
          2150, 2565, 1872, 2158, 2580, 1896, 2595, 1894, 1919, 1275, 1942}], 
         Line[{1639, 2070, 2409, 1655, 2078, 2418, 1678, 2085, 2432, 1703, 
          2090, 2447, 1725, 2098, 2462, 1749, 2477, 1750, 1773, 2492, 1774, 
          1796, 2509, 2118, 2508, 1811, 2132, 2532, 1829, 2144, 2552, 1851, 
          2152, 2567, 1873, 2582, 1874, 1897, 1251, 1920, 2610, 1921, 1943}], 
         Line[{1640, 2071, 2410, 1656, 2079, 2420, 1679, 2086, 2434, 1704, 
          2092, 2449, 1726, 2464, 1729, 1751, 2479, 1754, 1775, 2494, 1778, 
          1797, 2511, 2120, 2512, 1812, 2134, 2535, 1830, 2145, 2554, 1852, 
          2569, 1855, 1875, 2160, 2584, 1898, 2598, 1901, 1922, 2612, 1925, 
          1944}], 
         Line[{1641, 2072, 2411, 1658, 2080, 2422, 1681, 2087, 2436, 1705, 
          2451, 1709, 1728, 2466, 1732, 1753, 2481, 1758, 1777, 2496, 1781, 
          1798, 2516, 2122, 2515, 1813, 2136, 2538, 1832, 2146, 2556, 1854, 
          2153, 2571, 1877, 2586, 1881, 1900, 2600, 1904, 1924, 2614, 1928, 
          1945}], 
         Line[{1642, 2073, 2412, 1659, 2081, 2424, 1682, 2088, 2438, 1706, 
          2453, 1714, 1730, 2468, 1737, 1755, 2483, 1762, 1779, 2498, 1785, 
          1799, 2518, 2124, 2519, 1814, 2138, 2541, 1833, 2147, 2558, 1856, 
          2154, 2573, 1878, 2588, 1885, 1902, 2602, 1908, 1926, 2616, 1932, 
          1946}], 
         Line[{1643, 2074, 2413, 1661, 2082, 2426, 1684, 2440, 1692, 1708, 
          2455, 1718, 1731, 2470, 1740, 1757, 2485, 1765, 1780, 2500, 1788, 
          1800, 2520, 2126, 2521, 1815, 2140, 2544, 1835, 2560, 1843, 1858, 
          2155, 2575, 1880, 2590, 1888, 1903, 2604, 1911, 1927, 2618, 1935, 
          1947}], 
         Line[{1644, 2075, 2414, 1662, 2428, 1672, 1685, 2442, 1696, 1710, 
          2094, 2457, 1733, 2472, 1744, 1759, 2107, 2487, 1782, 2502, 1791, 
          1801, 2527, 2128, 2525, 1816, 2547, 1823, 1836, 2148, 2562, 1859, 
          2577, 1868, 1882, 2592, 1891, 1905, 2606, 1914, 1929, 2620, 1938, 
          1948}], 
         Line[{1646, 1653, 2417, 1665, 1676, 2431, 1688, 1701, 2446, 1713, 
          1723, 2461, 1736, 2476, 2103, 1761, 1771, 2491, 1784, 2489, 1793, 
          1803, 2529, 2130, 2531, 1818, 2551, 2143, 1839, 1849, 2566, 1862, 
          2581, 2159, 1884, 1895, 2596, 1907, 1918, 2609, 1931, 1941, 2622, 
          1950}], 
         Line[{1647, 1657, 2419, 1666, 1680, 2433, 1689, 2448, 2091, 1715, 
          1727, 2463, 1738, 1752, 2478, 1763, 1776, 2493, 1786, 2510, 2117, 
          1804, 2533, 2133, 2534, 1819, 1831, 2553, 1840, 1853, 2568, 1863, 
          1876, 2583, 1886, 1899, 2597, 1909, 1923, 2611, 1933, 2623, 2177, 
          1951}], 
         Line[{1648, 1660, 2421, 1668, 1683, 2435, 1691, 1707, 2450, 1717, 
          2465, 2099, 1739, 1756, 2480, 1764, 2495, 2110, 1787, 2513, 2119, 
          1805, 2536, 2135, 2537, 1820, 1834, 2555, 1842, 1857, 2570, 1865, 
          1879, 2585, 1887, 2599, 2166, 1910, 2613, 2171, 1934, 2624, 2178, 
          1952}], 
         Line[{1649, 1663, 2423, 1669, 1686, 2437, 1693, 1711, 2452, 1719, 
          1734, 2467, 1741, 2482, 2104, 1766, 2497, 2111, 1789, 2514, 2121, 
          1806, 2540, 2137, 2539, 1821, 1837, 2557, 1844, 1860, 2572, 1866, 
          2587, 2161, 1889, 2601, 2167, 1912, 2615, 2172, 1936, 2625, 2179, 
          1953}], 
         Line[{1650, 1667, 2425, 1671, 1690, 2439, 1695, 1716, 2454, 1720, 
          2469, 2100, 1743, 2484, 2105, 1767, 2499, 2112, 1790, 2517, 2123, 
          1807, 2542, 2139, 2543, 1822, 1841, 2559, 1846, 1864, 2574, 1867, 
          2589, 2162, 1890, 2603, 2168, 1913, 2617, 2173, 1937, 2626, 2180, 
          1954}], 
         Line[{1651, 1670, 2427, 1673, 1694, 2441, 1697, 2456, 2093, 1721, 
          1742, 2471, 1745, 2486, 2106, 1768, 2501, 2113, 1792, 2522, 2125, 
          1808, 2545, 2141, 2546, 1824, 1845, 2561, 1847, 2576, 2156, 1869, 
          2591, 2163, 1892, 2605, 2169, 1915, 2619, 2174, 1939, 2627, 2181, 
          1955}], 
         Line[{1652, 1674, 2406, 1675, 1698, 2443, 1699, 2458, 2095, 1722, 
          2473, 2101, 1746, 1769, 2488, 1770, 2503, 2115, 1794, 2523, 2127, 
          1809, 2548, 2142, 2524, 1825, 2563, 2149, 1848, 2578, 2157, 1870, 
          2593, 2164, 1893, 1916, 2607, 1917, 2621, 2175, 1940, 2628, 2182, 
          1956}], 
         Line[{1949, 2176, 2608, 1930, 2170, 2594, 1906, 2165, 2579, 1883, 
          2564, 1871, 1861, 2151, 2549, 1838, 2526, 1827, 1817, 2131, 2530, 
          2528, 1802, 2504, 2114, 1783, 2109, 2474, 1760, 2459, 1747, 1735, 
          2097, 2444, 1712, 2089, 2429, 1687, 2084, 2415, 1664, 2077, 2407, 
          1645}]}, {
         Line[{453, 754, 2340, 751, 2338, 750, 747, 746, 2336, 743, 2334, 742,
           739, 738, 2332, 735, 2330, 734, 731, 2328, 730, 2304, 723, 722, 
          2324, 717, 2321, 716, 711, 2318, 710, 705, 704, 2315, 699, 2312, 
          698, 693, 2309, 692, 687, 2305, 684, 728}], 
         Line[{466, 2300, 725, 721, 2323, 719, 715, 2320, 713, 709, 707, 2316,
           703, 2314, 701, 697, 2311, 695, 691, 2308, 689, 2281, 681, 2303, 
          679, 675, 673, 2298, 669, 667, 2295, 663, 2291, 661, 657, 655, 2289,
           651, 2285, 649, 645, 2282, 642, 686}], 
         Line[{468, 450, 2185, 452, 2186, 451, 454, 455, 2187, 456, 457, 2188,
           458, 459, 2189, 460, 461, 2190, 462, 463, 2191, 464, 2184, 470, 
          2194, 471, 474, 2196, 475, 2198, 478, 479, 482, 2200, 483, 2202, 
          486, 487, 490, 2204, 491, 494, 2183, 495}], 
         Line[{497, 467, 2193, 469, 472, 2195, 473, 476, 2197, 477, 480, 2199,
           481, 484, 2201, 485, 488, 2203, 489, 2205, 492, 493, 2192, 499, 
          2208, 500, 503, 2210, 504, 507, 2212, 508, 511, 2214, 512, 515, 
          2216, 516, 519, 2218, 520, 2220, 523, 524}], 
         Line[{526, 496, 2207, 498, 501, 2209, 502, 505, 2211, 506, 509, 2213,
           510, 513, 2215, 514, 2217, 517, 518, 2219, 521, 522, 2206, 528, 
          2223, 529, 532, 2225, 533, 536, 2227, 537, 2229, 540, 541, 544, 
          2231, 545, 2233, 548, 549, 2235, 552, 553}], 
         Line[{555, 525, 2222, 527, 530, 2224, 531, 534, 2226, 535, 538, 2228,
           539, 2230, 542, 543, 2232, 546, 547, 2234, 550, 551, 2221, 557, 
          2238, 558, 561, 2240, 562, 565, 2242, 566, 569, 2244, 570, 2246, 
          573, 574, 2248, 577, 578, 2250, 581, 582}], 
         Line[{584, 554, 2237, 556, 559, 2239, 560, 563, 2241, 564, 2243, 567,
           568, 571, 2245, 572, 2247, 575, 576, 2249, 579, 580, 2236, 586, 
          2253, 587, 590, 2255, 591, 594, 2257, 595, 598, 2259, 599, 2261, 
          602, 603, 2263, 606, 607, 2265, 610, 611}], 
         Line[{613, 583, 2252, 585, 588, 2254, 589, 2256, 592, 593, 2258, 596,
           597, 2260, 600, 601, 2262, 604, 605, 2264, 608, 609, 2251, 615, 
          2268, 616, 619, 2270, 620, 623, 2272, 624, 2274, 627, 628, 631, 
          2276, 632, 2278, 635, 636, 2279, 639, 640}], 
         Line[{643, 612, 2267, 614, 2269, 617, 618, 621, 2271, 622, 2273, 625,
           626, 2275, 629, 630, 2277, 633, 634, 637, 2280, 638, 2266, 646, 
          2284, 647, 652, 2287, 653, 658, 2290, 659, 2293, 664, 665, 2296, 
          670, 671, 676, 2299, 677, 2302, 682, 683}], 
         Line[{685, 2283, 641, 644, 2286, 648, 650, 654, 2288, 656, 2292, 660,
           662, 666, 2294, 668, 672, 2297, 674, 2301, 678, 680, 688, 2306, 
          2307, 690, 2310, 694, 696, 2313, 700, 702, 706, 2317, 708, 2319, 
          712, 714, 2322, 718, 720, 2325, 724, 465}], 
         Line[{726, 783, 2355, 780, 779, 2353, 776, 775, 2351, 772, 2349, 771,
           768, 2347, 767, 764, 2345, 763, 760, 2343, 759, 2326, 753, 752, 
          2339, 749, 748, 2337, 745, 2335, 744, 741, 740, 2333, 737, 2331, 
          736, 733, 2329, 732, 729, 2327, 727, 757}], 
         Line[{755, 812, 2370, 809, 808, 2368, 805, 804, 2366, 801, 2364, 800,
           797, 2362, 796, 793, 2360, 792, 789, 2358, 788, 2341, 782, 781, 
          2354, 778, 777, 2352, 774, 773, 2350, 770, 2348, 769, 766, 2346, 
          765, 762, 2344, 761, 758, 2342, 756, 786}], 
         Line[{784, 841, 2384, 838, 837, 2382, 834, 2380, 833, 830, 829, 2378,
           826, 2376, 825, 822, 2374, 821, 818, 2373, 817, 2356, 811, 810, 
          2369, 807, 806, 2367, 803, 802, 2365, 799, 798, 2363, 795, 2361, 
          794, 791, 2359, 790, 787, 2357, 785, 815}], 
         Line[{813, 870, 2398, 867, 866, 2396, 863, 862, 2394, 859, 858, 2392,
           855, 854, 2390, 851, 2388, 850, 847, 2386, 846, 2371, 840, 839, 
          2383, 836, 835, 2381, 832, 831, 2379, 828, 827, 2377, 824, 823, 
          2375, 820, 819, 816, 2372, 814, 844}], 
         Line[{842, 884, 2405, 883, 2404, 882, 881, 880, 2403, 879, 2402, 878,
           877, 876, 2401, 875, 874, 2400, 873, 2399, 872, 2385, 869, 868, 
          2397, 865, 864, 2395, 861, 860, 2393, 857, 856, 2391, 853, 2389, 
          852, 849, 848, 2387, 845, 843, 871}], 
         Line[{888, 1186, 2563, 1183, 2561, 1182, 1179, 1178, 2559, 1175, 
          2557, 1174, 1171, 1170, 2555, 1167, 2553, 1166, 1163, 2551, 1162, 
          2526, 1155, 1154, 2547, 1149, 2544, 1148, 1143, 2541, 1142, 1137, 
          1136, 2538, 1131, 2535, 1130, 1125, 2532, 1124, 1119, 2505, 1116, 
          1160}], 
         Line[{901, 2524, 1157, 1153, 2546, 1151, 1147, 2543, 1145, 1141, 
          1139, 2539, 1135, 2537, 1133, 1129, 2534, 1127, 1123, 2531, 1121, 
          2530, 1114, 2525, 1110, 1108, 2521, 1104, 1102, 2519, 1098, 2515, 
          1096, 1092, 1090, 2512, 1086, 2508, 1084, 1080, 2506, 1077, 1118}], 
         Line[{903, 885, 2408, 887, 2409, 886, 889, 890, 2410, 891, 892, 2411,
           893, 894, 2412, 895, 896, 2413, 897, 898, 2414, 899, 2407, 905, 
          2417, 906, 909, 2419, 910, 2421, 913, 914, 917, 2423, 918, 2425, 
          921, 922, 925, 2427, 926, 929, 2406, 930}], 
         Line[{932, 902, 2416, 904, 907, 2418, 908, 911, 2420, 912, 915, 2422,
           916, 919, 2424, 920, 923, 2426, 924, 2428, 927, 928, 2415, 934, 
          2431, 935, 938, 2433, 939, 942, 2435, 943, 946, 2437, 947, 950, 
          2439, 951, 954, 2441, 955, 2443, 958, 959}], 
         Line[{961, 931, 2430, 933, 936, 2432, 937, 940, 2434, 941, 944, 2436,
           945, 948, 2438, 949, 2440, 952, 953, 2442, 956, 957, 2429, 963, 
          2446, 964, 967, 2448, 968, 971, 2450, 972, 2452, 975, 976, 979, 
          2454, 980, 2456, 983, 984, 2458, 987, 988}], 
         Line[{990, 960, 2445, 962, 965, 2447, 966, 969, 2449, 970, 973, 2451,
           974, 2453, 977, 978, 2455, 981, 982, 2457, 985, 986, 2444, 992, 
          2461, 993, 996, 2463, 997, 1000, 2465, 1001, 1004, 2467, 1005, 2469,
           1008, 1009, 2471, 1012, 1013, 2473, 1016, 1017}], 
         Line[{1019, 989, 2460, 991, 994, 2462, 995, 998, 2464, 999, 2466, 
          1002, 1003, 1006, 2468, 1007, 2470, 1010, 1011, 2472, 1014, 1015, 
          2459, 1021, 2476, 1022, 1025, 2478, 1026, 1029, 2480, 1030, 1033, 
          2482, 1034, 2484, 1037, 1038, 2486, 1041, 1042, 2488, 1045, 1046}], 
         Line[{1048, 1018, 2475, 1020, 1023, 2477, 1024, 2479, 1027, 1028, 
          2481, 1031, 1032, 2483, 1035, 1036, 2485, 1039, 1040, 2487, 1043, 
          1044, 2474, 1050, 2491, 1051, 1054, 2493, 1055, 1058, 2495, 1059, 
          2497, 1062, 1063, 1066, 2499, 1067, 2501, 1070, 1071, 2503, 1074, 
          1075}], 
         Line[{1078, 1047, 2490, 1049, 2492, 1052, 1053, 1056, 2494, 1057, 
          2496, 1060, 1061, 2498, 1064, 1065, 2500, 1068, 1069, 2502, 1072, 
          2504, 1073, 2489, 1081, 1082, 2510, 1087, 1088, 2513, 1093, 2514, 
          1094, 1099, 2517, 1100, 1105, 1106, 2522, 1111, 2523, 1112, 1115}], 
         Line[{1117, 2507, 1076, 1079, 2509, 1083, 1085, 1089, 2511, 1091, 
          2516, 1095, 1097, 1101, 2518, 1103, 1107, 2520, 1109, 1113, 2527, 
          2528, 2529, 1120, 1122, 2533, 1126, 1128, 2536, 1132, 1134, 1138, 
          2540, 1140, 2542, 1144, 1146, 2545, 1150, 1152, 2548, 1156, 900}], 
         Line[{1158, 1215, 2578, 1212, 1211, 2576, 1208, 1207, 2574, 1204, 
          2572, 1203, 1200, 2570, 1199, 1196, 2568, 1195, 1192, 2566, 1191, 
          2549, 1185, 1184, 2562, 1181, 1180, 2560, 1177, 2558, 1176, 1173, 
          1172, 2556, 1169, 2554, 1168, 1165, 2552, 1164, 1161, 2550, 1159, 
          1189}], 
         Line[{1187, 1244, 2593, 1241, 1240, 2591, 1237, 1236, 2589, 1233, 
          2587, 1232, 1229, 2585, 1228, 1225, 2583, 1224, 1221, 2581, 1220, 
          2564, 1214, 1213, 2577, 1210, 1209, 2575, 1206, 1205, 2573, 1202, 
          2571, 1201, 1198, 2569, 1197, 1194, 2567, 1193, 1190, 2565, 1188, 
          1218}], 
         Line[{1216, 1273, 2607, 1270, 1269, 2605, 1266, 2603, 1265, 1262, 
          1261, 2601, 1258, 2599, 1257, 1254, 2597, 1253, 1250, 2596, 1249, 
          2579, 1243, 1242, 2592, 1239, 1238, 2590, 1235, 1234, 2588, 1231, 
          1230, 2586, 1227, 2584, 1226, 1223, 2582, 1222, 1219, 2580, 1217, 
          1247}], 
         Line[{1245, 1302, 2621, 1299, 1298, 2619, 1295, 1294, 2617, 1291, 
          1290, 2615, 1287, 1286, 2613, 1283, 2611, 1282, 1279, 2609, 1278, 
          2594, 1272, 1271, 2606, 1268, 1267, 2604, 1264, 1263, 2602, 1260, 
          1259, 2600, 1256, 1255, 2598, 1252, 1251, 1248, 2595, 1246, 1276}], 
         Line[{1274, 1316, 2628, 1315, 2627, 1314, 1313, 1312, 2626, 1311, 
          2625, 1310, 1309, 1308, 2624, 1307, 1306, 2623, 1305, 2622, 1304, 
          2608, 1301, 1300, 2620, 1297, 1296, 2618, 1293, 1292, 2616, 1289, 
          1288, 2614, 1285, 2612, 1284, 1281, 1280, 2610, 1277, 1275, 
          1303}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
PX9o0g/n9BlNyLngnXzl/haMl1wc4eswAjLjb2tzpepRv3jQ4fhAC27ZODU+
8mAExvk3SiZGVmH56SMGB05W4wzPCvt9OkQnXDh7u/1bAdapP3aaCWWovvPK
bNlECmTpeuIaup7Iqmc9XX8oo+tP6kvXP3Z2xMMpnXIgDfOE06kOpripkj1E
F202O2JZt7cU7v8ZeJZ/qxmE76jwty8geCiUormYNx1OaYt7t+xthN6pYO20
/RRMen9Rfx17F8/c0PLScKmHn2Iy/ZJ2pM+/VSueGslDZxGhPccoJjieODtu
RPotju5PDKP7EwKn+1OX7me0o/sZHab7+Rbd//iW7n9k9f/cVud7c+va8GhB
4PMlRxrR6TjjiKbaCNzg3M2VNtCEIe8PMTa+rsMXGy0ytatGwNh60LBcvgor
hvbMmOlSjncvj4bJ21Jw7U2GjkpQDqr5F1z9bcXAS3fton50EV26Tusi38J7
uLzkb9Pd27YY7PObX/gv0W80PkAwjQ/AwodGGk9gE40nwMKT9TT+wDT+AAt/
NJ/HpQ6opyMfU2o9f38RJGu0199qJD6lzEXsmmMNPjmyVtZuwByGtKfe+QeR
/h/1WjrQ+AhNRNWsi8JTQSA5bV7lUgrU9nYnO63qxPvf60v+GGaihfYma/3L
I7Ccxls0pPEWWXibTeMzTuMz3p/G50oaz7GZxnNcNY3n0Yff3U7JbcSmrODE
SJF8vNa0c/dvNQpE7U6/PHS8CjM3zJpNzWVizJ7ur6VEHyo8vLd84bpEVBWt
kZlXFQ4NLc/FdUgf/hTNTQvcdhspc5Okvg1X4GeQloUmqefGKq0UuZZEGBZP
khDyzwbGA5Oh1CGio2i+gwya74DFd1Um//Ijntn2Lz8Cix9jPYzmj6nn4Oo9
hW2Z9xPA0YSLewmZh+OOfWhiaBV+0Wx1iVCIwVl+YRzD8RQsPS1toxVbj7+r
xTfo+aShx9J3CeKnKEil+R1daX7H3dP87iJa13EqpgWDwi7rXmQU4jWNvt2b
J0fAe9ucpQapj5A6GpsnblyMjIBHQrqzKJhN6w2c1hvI0hsfaX2ChrQ+QZY+
sT1T73KwMgd92Gf2vRqzgkNvT3dv+ESB9nbH2U0vjHFs8ZaukW0ZIG1RIBI8
RnjK4V+9BEG0XgKWXgqh9RWE0PoKWPrqkfKHhVYZWSBYWjvralAeGLa/5OMn
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
Z2l4qY/3ZBOkYUNtsLod4bPHXkrPjbmfjfkeCVIf9ySgkkXBl1xih1cpHo2y
FI9GBo8Oofg+FlB8Hxl8P5dZ8F1cZDb2bt1C1+OJQ+Zf6TcmiR/5bgkRryvP
xCk/zV6aVDLyu25ZcJfY7e/6+xpf6/wh6nXzfKXEUjh57YPJkjw6nKd4FupS
PAsuzPKsp21r3bsX2cPnOcN7miaKYFwrfICb7EMmVZdAFaougf9Xl6DqHihL
1T2QUfdwfbW293qgI/Z/L4ias6IQWPiO9iQSvGoWtdtLYNAfJ0oiFQ+k0SBs
34KcUMKbTJ+1X/YfKkD/nTs/DwrGYmpK/Ze35Lyar0aXH57Iw+hz5nYPv8ei
mKe2XAaxkz2XIn/6Z4Wjx3S1godALiRm2CycIvvgs9Pie9GjRPThduywGE6D
CiUH37mE95XbTIjLJ+Vhyp2fiYt3JiDnI7dDnwiumDMnXJnem4uyh8TjjXwS
cVJ/uSdnG8EJPa9VdNIzcKQi7Vry6XjQohWfX/eRDoc2f9N5sjADWfepcz0Q
jISC5t7o3C+EX7iuuPdHNAc1009LLauKxy3+eYmnye86LhR4qz4mBwMSkvzd
RRNwe7vRtoJXdHh9ufLGUtYMnO/r6nr5egj4GOXt1x+gg+NhmQVXZbJwf5C/
vF2kHrSqNW1rJeun0k+eC47LxcQqmeYatgTsKTzoONNOh7e87Ec+rcxFt1wT
e9uLiVgwdKP6YQfJC4o9Y3Z7MlHhWn1Eu6QVWqhuU+ccJPlovr2FJ8GrbNvq
n5/KfoC79jAv2DVE7Hn66YsDcdnIG3QqzkI7DjM2eIkUkv08fn5t7+Nv2dgS
hdAgHIN7kgdWuBC7Kt6t58sllI68Xhnxpz96YNOFTz7+w+Q7qfoq2lP1VWTU
V33p0uODZdkoOTnQpJobidw9lydd35G/q1LX9LAsCY/KO7J9yMxEHqlXXEu6
6XBqxZgmjesRZDzZbytyLhtqbmvmKpNzXEvVtSCLqmsBo65lMZO90SXMESyc
OZY+0cmCuh0ygpxk33ypOjCyU3VgZNSBOak6MypSdWZk1JnvmYdLedy+CRaN
Sn4+B7NghK1WJZask68ppy1S54wK8mq6USypwOawgkOLvF8THS/9xTwWy8pN
+Jq6wlF1ZUZ98hgdkL71Gn9CONata2LO/BKJrkEtEyu+0+Fco1B6k6w/sq74
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
f30wYKf1wWCuD8Y8/9CYn7ArjO+VfDZfOwE9d98bHp78f3pHLAx6R/R+HZyk
9etgrl9naqTSPbG6HjwPU621wrXgUo5izeD12XrkvcqJxHJYJ+Mt1XzKD9WN
o+K706kQZ5dUKW2UCXn8+g90FyeimmvCpX5Sj19z/K/fCL9Y/us34ly/MZnW
n8SftP4kzvUnr9P1Sb4z6JMk0ub14C3avB6cm9fzcm+6fGhqMO6qjfi80ycH
PO994+km/oYPsXNxjSOWGbEYCN4ohaUBalTz2XlGop/jVyg+hc4Pfa5fCyvA
JsXTxDKeCt1L855KfDaE9+emfsf7VsLqO8IJ1uQ7PjHeZde3LwbvzqzXVf5c
Chv57nPHllBhvN/6nKFxPlKDxWc+kjiwaDAld3Y+6Qs6j7+Ygcf/QpuThUG0
OVk4NycrYrpWZrwwEMKzWou+ORVCnyJzsEkLyXdnnTM2jiPWpZvvHrkdiSO5
UsbiRVQwfToQ+HGvF7hJGi3Q0kNYefWe/ACJwzsL9YxFZEpwXkRCvIp8NHqO
Zl4IJHXWoZ2yYwvG1+FNxxMul1QRfrBvVFUn9dTWjs7fUnwluCIgOafDKw7P
Z2uL95Lf5/ntDUn5E4kB88aUNhnng5fSN4MH7bNzWleWcGkXodktiGTRScDK
6SXmQbVUiPeY6qJwZKLbhLtPzqUU4NrZU/iH4KIDAzukpgsLMLqsfdXPR4l4
fxk0nSL2OfI/9g+cDT2mtyyqAJ+X8DIPPknCHzUh8xpInNTXlfvwYFMuGuz7
1tjhIQ1LY94+VewneYo2Lw/LUv+blwc/6PPyJMfP+Fd9j4auj4JN23zyoNen
9d1YBxXSX4sVPdCiYGG12NngPB90Wf3YP2mE+NvQM78LvL7A3JPSwNWXB8kz
oRP53VQwk2XdFmaZhhOWfaoOfqFYrrKHiYXki8Dl5/00bY3w67XVLRyHs4D7
0LHz6SQOe6Ww1m85k4wyK+tygh5E4Y+8QeYZcn2YiuqrdLMgZH1tf/2KVDKU
CbuI95P8O8P/T+oGVxzG/lifNXAnBrmOXJ/XTX63o+9nGGTYz/D9juxmzXMJ
eLh1eg1lPslj9+TdC8nzL5MciMxiDsd36+eNqbMFgsrkFvj9i/gnXQemiEEH
Zqr/VcmeeG+sMZOCe5zu4NYpvrDiLxWU/W4NJrPF4pTSzNqbXwmOkt0l/Ifk
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
7oeNNx6AjE/a60PGJ/fDxicBOOUEGQ==
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.7931854796686046`, 
       2.7931854796686038`}, {-1.7199475781022886`, 1.7199475781022886`}, {0.,
        0.49709275031586714`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
     0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
     0.25, {3, 3, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
    1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$28542, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    5, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10, 20, 20}, "numberOfMasses" -> 3, 
     "latticeBasis" -> {{0.08000000000000007, 1.255}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.2575472158133865`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.06361590164887428, 0.9979744571167143}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {38, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.3447532859297566, 0.8187890540831718}, {
      0.5408317173023056, -0.034475328592975696`}}, 
     "reciprocalNorms" -> {0.8884088829169706, 0.5419294185793522}, 
     "qMaxVec" -> {5.582037639911739, 3.4050429603461616`}, 
     "mObliqueComponents" -> {{0.2628743805214393, 0.4626158155569921}, {
      0.7541478129713426, 0.3419306184012066}, {0.45244559362206405`, 
      0.7714759750053869}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.71, 1.2200000000000002`}, {
      1.5020000000000002`, 1.185}}, "pointsDataTable" -> CompressedData["
1:eJwtUEFIVFEU/fRnHGdEF+IyBnURErgwFyEh9+LCEVyIIhFiMYS5aJGziBAX
bmTalYELm0BRC9qkYEhNENzPBCFR1mJoLMGZD6Y5U8w44xcbknHeef/C5b77
3n3nnHtabk8M3TENw1DZUM0L1XyScNpGZ4uSmWpaC9keazVkV08HpG4Tzn8J
RnOD8aCX0bYVpE89h45EzznSHUg9j3RnCTAJW3T1cliNj36lCiIvSzEV7+TL
ZxV/aByx79YaNhCnNAHAvwI5U0W6CZw8gS5UIdAFfKxrDacxmBX9bvIJhBZo
DRd+fgZeR95iEcN6it6mlYgiOha0MZOHwZOWobgaPJYNzGdF771H1qB6WHb3
9fA09P129ZRkDzp+Er7H9+mhsi1aIlv7ypeBY7D258j1oUzaz0PSvcmwO+rl
TkSAtQ8FgdyIj7cVXSpHoE3VM4d/fWvdsUX7bFi9b0pnyUmHruC/I9cb2l8v
5P38CfgZCV9LDzya35WkxpHH8/caZ6wTymC/dSlP331/fy7At+DHATHwfsgL
CNim75OHlzpqT0n7XKTF/MuP/Vfr+AP2qlBzR+2riyNJ16cyBUfGqoz/SO9l
cg/01jHanJ+NG10bmw+2XJ99PA59ZQL9bD2fA/obYQw=
      "], "lineTable" -> {{
        Line[{{-10.640000000000002`, -50.89}, {-4.559999999999997, 
         44.489999999999995`}}], 
        Line[{{-8.740000000000002, -50.089999999999996`}, \
{-2.6599999999999966`, 45.29}}], 
        Line[{{-6.8400000000000025`, -49.29}, {-0.7599999999999971, 
         46.089999999999996`}}], 
        Line[{{-4.940000000000003, -48.489999999999995`}, {
         1.1400000000000028`, 46.89}}], 
        Line[{{-3.0400000000000027`, -47.69}, {3.0400000000000027`, 47.69}}], 
        Line[{{-1.1400000000000028`, -46.89}, {4.940000000000003, 
         48.489999999999995`}}], 
        Line[{{0.7599999999999971, -46.089999999999996`}, {
         6.8400000000000025`, 49.29}}], 
        Line[{{2.6599999999999966`, -45.29}, {8.740000000000002, 
         50.089999999999996`}}], 
        Line[{{4.559999999999997, -44.489999999999995`}, {10.640000000000002`,
          50.89}}]}, {
        Line[{{-10.640000000000002`, -50.89}, {
         4.559999999999997, -44.489999999999995`}}], 
        Line[{{-10.560000000000002`, -49.635}, {
         4.639999999999997, -43.23499999999999}}], 
        Line[{{-10.480000000000002`, -48.379999999999995`}, {
         4.719999999999997, -41.97999999999999}}], 
        Line[{{-10.400000000000002`, -47.125}, {
         4.799999999999997, -40.724999999999994`}}], 
        Line[{{-10.320000000000002`, -45.87}, {
         4.879999999999997, -39.46999999999999}}], 
        Line[{{-10.240000000000002`, -44.615}, {
         4.959999999999997, -38.214999999999996`}}], 
        Line[{{-10.160000000000002`, -43.36}, {
         5.039999999999997, -36.959999999999994`}}], 
        Line[{{-10.080000000000002`, -42.105}, {
         5.119999999999997, -35.70499999999999}}], 
        Line[{{-10.000000000000002`, -40.85}, {
         5.1999999999999975`, -34.449999999999996`}}], 
        Line[{{-9.920000000000002, -39.595}, {
         5.279999999999998, -33.19499999999999}}], 
        Line[{{-9.840000000000002, -38.34}, {5.359999999999998, -31.94}}], 
        Line[{{-9.760000000000002, -37.085}, {5.439999999999998, -30.685}}], 
        Line[{{-9.680000000000001, -35.83}, {
         5.519999999999998, -29.429999999999996`}}], 
        Line[{{-9.600000000000001, -34.574999999999996`}, {
         5.599999999999998, -28.174999999999997`}}], 
        Line[{{-9.520000000000001, -33.32}, {
         5.679999999999998, -26.919999999999998`}}], 
        Line[{{-9.440000000000001, -32.065}, {5.759999999999998, -25.665}}], 
        Line[{{-9.360000000000001, -30.81}, {5.839999999999998, -24.41}}], 
        Line[{{-9.280000000000001, -29.554999999999996`}, {
         5.919999999999998, -23.154999999999998`}}], 
        Line[{{-9.200000000000001, -28.299999999999997`}, {
         5.999999999999998, -21.9}}], 
        Line[{{-9.120000000000001, -27.044999999999998`}, {
         6.079999999999998, -20.645}}], 
        Line[{{-9.040000000000001, -25.789999999999996`}, {
         6.159999999999998, -19.389999999999997`}}], 
        Line[{{-8.96, -24.534999999999997`}, {
         6.239999999999998, -18.134999999999998`}}], 
        Line[{{-8.88, -23.279999999999998`}, {6.3199999999999985`, -16.88}}], 
        Line[{{-8.8, -22.025}, {6.399999999999999, -15.625}}], 
        Line[{{-8.72, -20.77}, {6.479999999999999, -14.370000000000001`}}], 
        Line[{{-8.64, -19.514999999999997`}, {
         6.559999999999999, -13.114999999999998`}}], 
        Line[{{-8.56, -18.259999999999998`}, {6.639999999999999, -11.86}}], 
        Line[{{-8.48, -17.005}, {6.719999999999999, -10.605}}], 
        Line[{{-8.4, -15.75}, {6.799999999999999, -9.349999999999998}}], 
        Line[{{-8.32, -14.494999999999997`}, {
         6.879999999999999, -8.094999999999999}}], 
        Line[{{-8.24, -13.239999999999998`}, {
         6.959999999999999, -6.839999999999999}}], 
        Line[{{-8.16, -11.985}, {7.039999999999999, -5.585}}], 
        Line[{{-8.08, -10.73}, {7.119999999999999, -4.329999999999999}}], 
        Line[{{-8., -9.475}, {7.199999999999999, -3.0749999999999993`}}], 
        Line[{{-7.92, -8.219999999999999}, {
         7.279999999999999, -1.8199999999999994`}}], 
        Line[{{-7.84, -6.965}, {7.359999999999999, -0.5649999999999995}}], 
        Line[{{-7.76, -5.71}, {7.4399999999999995`, 0.6900000000000004}}], 
        Line[{{-7.68, -4.455}, {7.52, 1.9450000000000003`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.52, -1.9450000000000003`}, {7.68, 4.455}}], 
        Line[{{-7.4399999999999995`, -0.6900000000000004}, {7.76, 5.71}}], 
        Line[{{-7.359999999999999, 0.5649999999999995}, {7.84, 6.965}}], 
        Line[{{-7.279999999999999, 1.8199999999999994`}, {7.92, 
         8.219999999999999}}], 
        Line[{{-7.199999999999999, 3.0749999999999993`}, {8., 9.475}}], 
        Line[{{-7.119999999999999, 4.329999999999999}, {8.08, 10.73}}], 
        Line[{{-7.039999999999999, 5.585}, {8.16, 11.985}}], 
        Line[{{-6.959999999999999, 6.839999999999999}, {8.24, 
         13.239999999999998`}}], 
        Line[{{-6.879999999999999, 8.094999999999999}, {8.32, 
         14.494999999999997`}}], 
        Line[{{-6.799999999999999, 9.349999999999998}, {8.4, 15.75}}], 
        Line[{{-6.719999999999999, 10.605}, {8.48, 17.005}}], 
        Line[{{-6.639999999999999, 11.86}, {8.56, 18.259999999999998`}}], 
        Line[{{-6.559999999999999, 13.114999999999998`}, {8.64, 
         19.514999999999997`}}], 
        Line[{{-6.479999999999999, 14.370000000000001`}, {8.72, 20.77}}], 
        Line[{{-6.399999999999999, 15.625}, {8.8, 22.025}}], 
        Line[{{-6.3199999999999985`, 16.88}, {8.88, 23.279999999999998`}}], 
        Line[{{-6.239999999999998, 18.134999999999998`}, {8.96, 
         24.534999999999997`}}], 
        Line[{{-6.159999999999998, 19.389999999999997`}, {9.040000000000001, 
         25.789999999999996`}}], 
        Line[{{-6.079999999999998, 20.645}, {9.120000000000001, 
         27.044999999999998`}}], 
        Line[{{-5.999999999999998, 21.9}, {9.200000000000001, 
         28.299999999999997`}}], 
        Line[{{-5.919999999999998, 23.154999999999998`}, {9.280000000000001, 
         29.554999999999996`}}], 
        Line[{{-5.839999999999998, 24.41}, {9.360000000000001, 30.81}}], 
        Line[{{-5.759999999999998, 25.665}, {9.440000000000001, 32.065}}], 
        Line[{{-5.679999999999998, 26.919999999999998`}, {9.520000000000001, 
         33.32}}], 
        Line[{{-5.599999999999998, 28.174999999999997`}, {9.600000000000001, 
         34.574999999999996`}}], 
        Line[{{-5.519999999999998, 29.429999999999996`}, {9.680000000000001, 
         35.83}}], 
        Line[{{-5.439999999999998, 30.685}, {9.760000000000002, 37.085}}], 
        Line[{{-5.359999999999998, 31.94}, {9.840000000000002, 38.34}}], 
        Line[{{-5.279999999999998, 33.19499999999999}, {9.920000000000002, 
         39.595}}], 
        Line[{{-5.1999999999999975`, 34.449999999999996`}, {
         10.000000000000002`, 40.85}}], 
        Line[{{-5.119999999999997, 35.70499999999999}, {10.080000000000002`, 
         42.105}}], 
        Line[{{-5.039999999999997, 36.959999999999994`}, {10.160000000000002`,
          43.36}}], 
        Line[{{-4.959999999999997, 38.214999999999996`}, {10.240000000000002`,
          44.615}}], 
        Line[{{-4.879999999999997, 39.46999999999999}, {10.320000000000002`, 
         45.87}}], 
        Line[{{-4.799999999999997, 40.724999999999994`}, {10.400000000000002`,
          47.125}}], 
        Line[{{-4.719999999999997, 41.97999999999999}, {10.480000000000002`, 
         48.379999999999995`}}], 
        Line[{{-4.639999999999997, 43.23499999999999}, {10.560000000000002`, 
         49.635}}], 
        Line[{{-4.559999999999997, 44.489999999999995`}, {10.640000000000002`,
          50.89}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {
    0.6499999999999999, -1.22}, $CellContext`qPlaneLoc$$ = \
{{-2.7910188199558696`, -1.7025214801730808`}, {2.7910188199558696`, 
    1.7025214801730808`}}, $CellContext`rawArrayOfMasses$$ = {10, 20, 
    20}, $CellContext`rawNumberOfMasses$$ = 3, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = False, $CellContext`u$$ = {{0.08000000000000007, 
    1.255}, {1.9, 0.8}, {0.9, 0.7}, {0.71, 1.2200000000000002`}, {
    1.5020000000000002`, 1.185}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Function[$CellContext`k5manip$, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
               Row[{
                 OverVector["q"], " = ", 
                 
                 Module[{$CellContext`qm$}, $CellContext`qm$ = 
                   ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                  Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                 Dynamic[
                  NumberForm[
                   MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
               Row[{
                 Text["time, normalized to one period, t/T = "], 
                 Dynamic[
                  
                  N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
               Row[{
                 Manipulator[
                  
                  Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                  1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                  ContinuousAction -> True, Appearance -> "Open", 
                  AppearanceElements -> {
                   "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
               Row[{
                 Text["oscillation scale factor:"]}], 
               Row[{Manipulator[
                   
                   Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}] " ", 
                 Dynamic[
                  NumberForm[$CellContext`scale$$, {3, 2}]]}], 
               Row[{
                 Text["Angular frequency \[Omega](q), selection:"], 
                 Dynamic[
                  SetterBar[
                   
                   Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
               Row[{
                 Text["number of mesh intervals "], 
                 Manipulator[
                  
                  Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                  Tiny, ContinuousAction -> False, 
                  AppearanceElements -> {"InputField"}], " ", 
                 Dynamic[$CellContext`freqMeshSize$$]}], 
               LocatorPane[
                Dynamic[$CellContext`qPlaneLoc$$], 
                Dynamic[
                 (Graphics[{
                   Lighter[Gray], 
                   Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                   Line[$CellContext`qPlaneLoc$$]}, 
                  PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                  ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                ContinuousAction -> False]}], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                Row[{
                  Text["mass: "], 
                  Dynamic[
                   If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                Text["coupling to neighbouring: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}, {
                Row[{
                  Text["horizontal: "], 
                  $CellContext`kLable[1], " || ", 
                  OverVector["a"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                Row[{
                  Text["vertical: "], 
                  $CellContext`kLable[2], " || ", 
                  OverVector["b"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[3], " || (", 
                  OverVector["b"], " + ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[4], " || (", 
                  OverVector["b"], " - ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
               Part[$CellContext`k5manip$, 1], 
               Part[$CellContext`k5manip$, 2]}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
         If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
            Row[{
              Text["coupling from "], 
              Dynamic[
               $CellContext`massLabel[$CellContext`m1Sel$$]], 
              Text[" to: "]}], 
            Dynamic[
             If[$CellContext`rawNumberOfMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 
                 Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]]}, {
            Row[{
              $CellContext`kLable[5], ": "}], 
            Row[{
              Manipulator[
               
               Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                Dynamic[$CellContext`glConstKMin], 
                Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
               ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[
               NumberForm[$CellContext`k5$$, {3, 2}]]}]}}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.7931854796686046`, \
-1.7199475781022886`}, {2.7931854796686046`, 1.7199475781022886`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.7931854796686046`, 1.7199475781022886`}},
       0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$15605, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJx1XXVYVU33BcEEBbvADkQQC0VFBzHA9rU7ELuxFcUExW7FQlREMZAuvXRe
4NLNNcFAUVHE/r0/7t5zPvZ8n//4PPuZZzNnnX3m7Flr3TPtbdZOWlxDTU1t
eD01NY1//w/0q3BdP6NWWA/nVWEl+3/Kaq/37+sfkMcwHlxn7u6d577J+v2w
ylidn8PjI53GWTT2KJeZJbsmOv7J5HE3LXu1SRvKZNuSbELC1qaRPCUyyx5K
k26bUnj8ZtV4pUz2+durizuTeNy1Kp4iO1LLoN/MP3IeV4N/Ob1a79sWnkzH
s727Sl4P80wlcSVTdy4NrgjK4PFA1XzYhaLrJV3uZpPxZezS3YcW7b/m0utl
XY78Sj4/P5/iwwyNZpx5opTigCfr3WXVhaJT+Szikl66eVcNjrP9wb96+TVz
eRxxtq9furdzaBaPI85rjGaPvT4kk8cR58eHLEO0ojJInhLZYmf/yIVhUhxx
fvlLM/aAtZQHcY57klHyaJf0dxHnrLItlbajcuh45iN/P2/a8DwSV7Jjtsv/
2VUpXS/ibLdIz2R/g0Iyvoxd0HWt2WROIb1eVnjVtP/1ZwUUHzbgwbJRWTEC
nkzh+Gb53+l5zEXjQD3d0r8yxPnOwZ3Fy2XZPI44v+7u3e9MLymOOA+5duq+
z2Ypjjgnn3r/vGGfHJKnRHbXOrC7gW0ujyPOsRrn1uz+Ks0HcdbV17EzuV3A
44izb/cb58Z0KKLj2fi9p+PntVSSuJIlsYtr0mZLccTZ5LNNrc4FNE8ZS3zv
ceH5w0J6vczoVP7jPdoFFB9253OHPestBDyZXfejD3t45LAHKYo17oe+c5yb
nVkyZMa/uGEccb66MGRR/A8pjjiPSp92q5Z5Lo8jzkMfZsyyKs4jeUpkfzv2
1hzpVcDjiLNlnvXft1ZFPI44TyiPPzBykZLHEec7BSv15imUdDw7ZlgY9sWe
xpXM51zy+GbbpPyIc9OpP/QKvxaQ8WXM31g9+M/gfHq97NiLxi4tbuRSfNif
4CyP9jYCnuzCnYHHf57PZpFVdV7Ocb54Z9zeMyY5PI446+Q3NPw1J5fHEeeM
oTZHUr/n8Tji3ODG6oLfRwtInhJZEx2/ga2DC3kccXZ1rHGwbHARjyPOFjVT
xn78KY1HnHXuLLPQ+lVAx7MPgfN+31+dT+JKtnz5o5zmt6T5I84vNjdotaZO
DhlfxiIeGJ+b8iqLXi/7MjIiIHR8FsWHHX56eklBjyyKJ3uSc7DPuaNZzKsK
/zcc5/ups1/qF+XyOOIclr5iTFGdfB5HnK3+eT1E65sUR5wbFw4deXFiAclT
IutdX3erZ5E0HnGetmhfsNuJPB5HnLc3Orpm1J4cHkecv2S2PdVbPYuOZzNH
NVkxzTWdxJXMJPiUz2fNNB7n60aA+deQNalkfBlznNQ3be/1VHq9TH3AP0Ne
2qZRfFj+77p939hmUDyZ537LTTNtsiGey3EOPB6zz294Po8jzkr3wae+nZfi
iPMl98murnpSHHF2tY8ZPd0jl+QpkW12XBh1tKf0dxHnLcmhT+4lpfM44uzX
Sn4k62QKjyPOE52b2ZgExNLxLGCbS9HVKZEkrmTup5u9+X5YiiPOqx+dz3Xx
jCHjy9jns5azWi5IodfLFjv3rp3/JZ3iwy66X9MyXy3gyfz1v9kteZrLVLMO
C0WcrYYNbTpyXj6PI841j2mo207K43HEWb/Gvb9fjHN4HHGW955w/cHHDJKn
RLay/xL/M94KHkec1zy4uC7XIpbHEefzvbuFHS4M4HG1//qPj2d7yXjEeSHJ
jzgvIfNBnOPI/BHnVuR6EWcNgg/ijHh6qPBniDPij3HE2QXuF8YR56VwfzGO
OFdAPVTPUyJbD/WDccT5OtQbxhHnR1CfGEdkraCeyXjmCfVfPa5kG+B5wTji
vBGer+rjy9gVeB7J9TIXeH4JPgyfd4Inw/Xhnmo94Tjfg/UE44gzrj8YR5xx
vcI44uwE61v1PCUyI1gPMY44G8H6iXHEeTqstxhHnD/D+kzGs62wnlePK9kU
WP8xjjjj+6L6+DKG7xdyvQzfRwQfFgHvL4InewDvuzDV+5HjHArvR4wjzkfg
fYpxxPkzvH8xjjiHw/u6ep4SmRLe7xhHnJdCP4BxxLkU+geMI84NoN8g49lg
6E+qx5UM+xmMI87Y/1QfX8YaQr9ErpelQ39F8GENoR8jeLLz0L+p8P/OccZ+
D+OI82/oDzGOOGM/iXHE2Rf6z+p5SmSNoV/FOOL8EPpbjCPO2A9jHHG+Df0z
Gc+w364eV7Lh0J9jHHGu2UnVz1cfX8ZGQP9PrpeNhv0CwYddg/0FwZPhfuSC
av/CcV4P+xeMI87usN/BOOJsCPsjjCPOSbCfqp7n374O9l8YR5yTYb+GccQZ
93cYR5z9YD9IxrNGsH+sHleyRNhvYhxx9oT9afXxZSwF9rPketlQ2P8SfFgJ
7JcJngz317Aft0CccT+OccSZ7N8tEGey37dAnC9W5wcsEOcN1fkEC8T5RHX+
wQJxJnyFBeJM+A0czwgfYoE4E/7EAnEmfIsF4kz4GbxeRvgcxIcR/gfxZMgX
+av4JY5zH+CXMI44GwAfhXHEuSvwVxhHnK8C31U9T4nsKvBjGEecawGfhnHE
2Qn4N4wjziXA15Hx7Czwe9XjShYHfCDGEefhwB9WH1/GtgLfSK6X9QN+kuDD
egOfSfBktQj/iThPnjav8OTEdIEXvaJ8M3GSTZrAi45eOmbPzUmpAi9qOjs/
/nYLhcCLOv0NDt1llSjwonKX8H6++ZECL7rF3Xle/KvHAi/a5vNiuZ3GY4EX
rasxe6tWjTCBF42xsrcLOBQu8KLdV93so29I/24Z+xMY3tmzRrTAi+4tydt/
5leMwIseavqgpvb7OIEX7WZVWfONR4LAi06+ek9/W4dMgRdN2eJxtt3SDIEX
7dh4/NeMGWkCLxqyP/1toH+ywIt+Mho6NfZ0vMCL/p3nGbntYYzAi6r/mnrl
Z9MYgRf1mbE1L9xfGM8cNTu0/iKLFXjRiN93bzWpjBN4UX/2rW3ArASBF511
fmaqvTJR4EXzrsy6obE+SeBFV2xzk4V8TBZ40anzGl9op6cQeNFt892s3rfO
FHjRVSExFw9tThd4UTbrT5zrtFSBF9Xp5K412jxF4EW7Wi7pvL9lksCLnmp7
ts0RHbnAizaX7wu64pco8KLLVo2WtU5IFHhR2e1VV0b0o3mU7NZ5k70DyuUC
L3pWTbOe/vckgRcdt/5NULv/mD/inHFSobd/hkLgRX3yntp+MkgVeNHNS3+9
sqqXJvCimvenFc98mC7woh9GGwWnuqQJvOi2xgsHDdqSKvCik3YU3QxzUgi8
qGbJxch2Z1MEXrRscuPkMSuTBV7U5eqmuQePJAm86Mu67TfV/ncdprxoWumL
NrViaFzJXniFPq5RIhd40b63pplmLkoSeFHvgTH7K8YlC7yoR6dBdQIyUwRe
tPfThVeN26QKvKh1odoh3fA0gRfdtT7uXC23VIEX9dtuXbC2R6rAi96evd/j
4j6FwIuOCB6UPNQpReBFnR09dsWpJQu86AH/M3/WHZULvOjJihWpMy0TBV50
0bfIbsnGCQIvOumKstHR6fECL9oouk0oS4sTeNHW7fvHXCqNE3jRZo6PZved
miDworrjxs30uJkk8KKt0r7nlFilCrzowgaGJ8wK0wVedMqQs0uNmiULvOiU
5bP29+qQJPCiDn+0ngdGJQq86J1V7XdpdE4QeNGQ4jantq6ME3jRZ7/q3Q0M
jRF4UY2ToRlfTKIFXvRiufpp97BIgRe1ztMYajY/QuBFa11eFNPjSrjAi4Y5
fwtvuYTmKWMatSYldr0SJ/Cijit+J4zckyLwojrpSWr7WZrAizoVemSemJgu
8KI384edq3MmQeBFxy05+LimY5zAi1480FDDuE2MwIv+nLXyt9u2SIEX9Rn5
bOq4mDCBF223Zuj4+86hAi9aq+R2p5jtgQIv2vXK+PXd+/kJvGgn//hD2n29
BV70ouGsX0FHgwRetFX3h50ano4SeNH0x2bygb2F62XuM40O7LRIFHjR0BMh
b4YbJwu8aPnnUT4n1igEXlS3bJzTxMBEgRcdtNpvq3ZInMCLepk9TVkxJVrg
RbVMN27WOhYu8KJmA4P2mJYGC7zorsf1X8809xZ4UccXW5NaLnejcXbuv8aV
bCfJg3gOIX8X8axP5ol43ifXhXgOJjggno0AN8p/fgacKf8ZDPeF8p94Hyn/
qYD7TvnP1lAnlP+8AnVF+U99qEPKf7aHuqX8599iVZ1T/rMFPBeU/3wEzxHl
PyvhuaP8Jz6nlP/E55rynzdgHaD8pyOsG5T/bADrDOU/nWBdovxnTVjHKP8Z
Duse5T81YJ2k/OdIWFcp/3ke1mHKf/49oVq3Kf9ZBOs85T/xvUD5T3d4j1D+
cye8dyj/OQneU5T/xPca5T/xPUj5T3xvUv6zIbxnKf/ZFN7LlP9sBe9xyn/q
wnuf8p8ToE+g/Cf2FZT/PAF9COU/90LfQvnPQ9DnUP7TEvoiyn+6Qx9F+U9f
6Lso/7kT+jTKf2JfR/lP7AMp/3kb+kbKf2KfSflP7Esp/4l9LOU/U6Hvpfzn
M+iTKf95Cfpqyn9iH075T+zbKf+JfT7lP3FfQPlP3EdQ/hP3HZT/xH0K5T9x
X0P5T9wHUf4T902U/8R9FuU/3WFfRvnPMNjHUf5zBez7KP+J+0TKf56BfSXl
Pw1gH0r5T9y3Uv4T97mU/1wJ+2LKf+I+mvKfuO+m/CfZp3NejuzrOS9HeADO
ywVW5w04LxdZnWfgvBzhJSz+B4/BeTnCe3BejvAknJf7WJ1X4bxcUHUehvNy
hLfhvBzheTgvh7wQ5T8NgUei/OcR4J0o/+kEPBXlPzWCVLwW5T97Aw9G+c8E
4M0o/6kDPBvlPw2Al6P8pwPweJT/TADej/Kfe4EnpPxnf+AVKf85BnhIyn9e
A96S8p/Ic6ors1ctOqoR9vfiiq2tav+U+Zx7veGoWi6Pb9oy4eDTzl9kXWNm
FA70zuRxxL/x4eZHG6ghb1zMn5eee/rJI/vn8fF8PX867NeVaVKe5ufHVI4w
LJcdb2c+MPplBo/j/ep7auTsvduk+PDuW9cFbPkgW949J6ugQwaZT4nsl+fg
Nh5tpfgcg5kfn7sUy4abXetmoibF8f5uKNh3b/wWKf569ManevaFMq9Cx+uz
1kpxrv/eNh8Svkuaf7eq602UaedpDSt3keJYD5U3XT5NMMqG9c5V8BX4VeGW
xXEzLP56tsQqn42uE2Q2NUItLPXOsp7jDv2QFXW7mHRhVzbPj8/FscUVDs3M
c/l4vn+8GXbIrIk0PrBq/teY57MDWa6bsul1sdIaxrp9e0l55lbhViGrt0rP
Pts3i8fxPjpHDG/68HUWz3MkZkS7Iq9UNufm6hX1TueS/EpmHn9x3n1d6bre
uI/y2nrvs6zo4h+vuglSfrzvzooaMydOl+Y5S3Uf2bBl53Z/1iiQrguel6xG
xo6VCwuk/FX38b3MV9E2f/G0bIJPiaxlbsDJfoNyeJ5mbxbotjj1mk2Xj0+d
7llA5l/GcjRq3Dctk/KrW09dYH3tlSxo0+FTbG4Oj2Nd6UQ8ihrqnEvrnE15
amvWcH8BfS6Yo32PegseSfl7Vt3ffNlB71dyebZ0X7AOdx3YraOrn0+fU+b0
Mfe5bXgBfU7Ztysxk8rjJfxDquKxsoh/7qSHHpfiWLeP57Qoa3hPyvOmcl7c
6CaVzEx/1OTpYfm0DlloXtCE2Q55rMuivnWPffgpuxG05LWD1g9Zzfd7Q47N
kfDHur1ap03fWg1z+His2+3vs+2mPpTGn6m63ofsS7qfdbJhIcWBvW7y9oHe
y0Kex8RsukdT/QpZcItVbGh8No9j3Uaz1Qdrn5Lul2VVPJ0V/Tjo2eWfIpJf
yf5Yj1v6e2+RNE9/q2WePT7LWs9eW3A3R5o/1u05zaJxjV9I9+tQ1XPxjPnX
CS7aFSflx7rdPf6kInSZlP/IinUT9+4ulcXXMbyzY2oewadEJluvmR68Qbpf
6+NtXb2PvmHxA3rHtLOn8y9ju/yLyz+4SPjcXPqP4v6Nl7K355uXDqpXIMWh
bjPia9bVqCvhbFw89MQwv49Mt9VYi0n2hXQdYDOa9r4cP1TKs7lqPrmyCX0m
373pKf1drNvK54uKHs+R5nmjaj5fmEnuk6fNfubTdYwdXdjXp56bhINV1d+N
lG1a1nrV67cSbli341wsDJubKOn6yTppa57LWZtL65CNsuxU1KEJ+v8rZBur
5v9ddrq/ed+7y6X7i3WbZLK28MnJbD4e63b61eKY557SeO+qeACLDZ4198lh
JcWBbT7cfv/l6UqeR61qPfkqM5ruu3TPWGk+WLfHnQtalLaScFDNM5fVX5tj
38uviORXMv1zwXl6yUU8j2p9/iQ7vPXSBu2PeTyOdWvQ7fqlDsH5PE9x1fr8
nKkPcE8fdFXKj3X79/ieJmb3Cnke4yp83sm6K6NG95pYQPApkTlf3HCtp6lU
D86qOmeLsm81G3exgMy/jD1putvY10DKo7rvL2SeX/7oaahL14V1u97r1rD3
ltI852QNy9Ht84nZNN6Qv/ZwPl0HWN3oXbVdnSUcQqvmmS37Zl5c65JCyo91
a2U/dvmlh1L+1OmTW+xo/5WZHQr62LIol65jrGhC+UWHptJ9dKnKI5OZjG/5
wsNEyo91W2C54kHfJVL+Ebk2M17pfGfdOs8+vMReqEM22mVmSIM/uE5+lI1U
jZc5n3+fsuyo9HexbnPazFpQkSaNx7qdZHa6Yt1vYZ4s+Y2b2m5zAQf25JP+
/H82FfI8aSocZEe31pyy+W+eNB+o22tOU0xiZ+TzPP4qnJnidrMuNuUFJL+S
NVALa9xcp0CaJ6y32nrN7OZsz+dxzh+a6Xeq3CzlGaGqE5bguKZvhIX0d7Fu
fy3ef6mzgzTPtKr14a1sckFdB+fehQSfEtn8HgH/pNaW6ry7qs7Z2LTaK/rd
yCXzL2Pma5p73GmYK80T1tt7a9zqHXOWrgvr1jb3c/DnAmn+h1XPKTOIb3eh
3/Acug6woU3febytlO5jjap1I1N20OOzqY+PlB/r1nT05qBP7/PpOsO0n0/e
/eO1sI6xqHF+tR2spfzhqnVMdm6i/8ka4yX8sW5fzqz/9/vcPLp+soYjSn6s
fJFF65B1D1/4LK4R/t1iWYuqvqtS9iRiT8uM5lJ+rNvrlY1q10nN4eOxbg8e
bHvlplE+nSfrVrPuutvbcikOrGlKhy73d0t55kB/u6XOrafJ9fN5HOv2cpdh
59eFSfnXwXprs7PfhAmLskl+JfMuiX5bNz6L5zFRvTdlmybE6F3SKOBx7vvV
XBR70F3K76qqE9ZW1zW9bWwmj/P1NpmNTTyWyfNsUr33ZfXvPF7V7J98gk+J
bO/KTlqdfKQ6V6jqnLE7esrM65lk/mWsu5FX6at3GTzPUVXfItMv/WF/JTCX
x7Fu9Z+cHPRKmcPzBKmeUzZa67567NEMug6wwGf9nbWypfzWqr5LtlX9oqXN
FKkesG57/bPvZa/JWVI9qPo6FvBs+/S2kRl0HWOHurv2ab9PwscH+ttO14z+
FkyX4li3skd5uYlb0un6yZrPazq2u1sWrUPWf1uPVfMLs1iQar8mg35YtqrV
VZvwExL+WLe4/8XxWLdRi5q1G7E2n86Tja2TFtLlYSrFgZk52nhmdEjleXA/
fvDGcu2ZGvk8jnWr5T3EKPFJHs9jqNpHMG+/GtGnC1JIfiXrEXrdacXbFJ4H
9+PtW2xY0GG6NH+s28Wnz5vaNJTq4TD0twr1Zwu7zVTwONZtu78W7mqpUn7V
8/5apm7+V3nydRbBp0R2Rs/NLXmB9By9Uu3jWMO+eVvPNlCQ+ZcxtxNl1p07
S/j0rHrunsrO/nz0eNSKdB7Huj2W8uGxZlyadL+gv931dINyRr80ug6wWUcP
fXz273jMA/tcmVHSiDf+Tsk8zvk3Q9MtG/WT6DrDfrfL8HhlnUHXMaa1rOzN
7y6ZPI8h8AlzzvcOuXQtkcexbjWD0jeNCovieRTQ33ZNym3VaHE2rUP24e5D
3wL1HM4/hJDfgyD/oOai4n/CPAM7uX/I5X+X82/AS2AerGdNkgfjTh3H1nv2
7/6LXBdzMIytofU2jOLGPB7HP3mxNILntyK/T8H8R1rMNvNq8U1Wr3d7w8kH
JF4F61+PjMf43KChI//syOB/9zDwFeMW5PXskhZJ5vPvvq+iVt7ZGlE8/wjI
05rk//uVWW/u/1FWdN0uIF6m4OPxeUmE36HgeIx/qX37XbsZCglnVd0y7QlH
c9taRfM4181H/fGU14jj+UPhecHf4/DrBX6sUerpOSGuKeR+lchWkPEY14P8
+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
8L5M/Vo+fG15BrNfPN7Va6Ymx6d0vXPHlA/S+eB4v+a+N0vRPSfNB+/X205v
RtUJzGJPPOoOzJZpcjxr1i4OSNuTT86v8TXPJud6Iz4tGrbtXakpneuN13Vh
V8KUjYfz2Y93Uem/O9fk98W0uP3g1PpSfpx/4bDvP4e6S+d38/kMnNdqrGkh
s+hwupZzuQa/jz0tdx0zuC6Nx/yfO5tVGvQoZNrRv6/2mKPGr3dZ/4IOm1tL
4zGPr03Ejg8uBawG+PewHtDnj+MxPiZ+6+qfF/LZgRkLBzQLr8FxOLX1Zc2m
YdL511gnu897lo4f9h/ng0OdLN+bl7JysRTHOtm65d2xNaXZbGRT92tls2pw
PH+927DWP0w6dxvrJPT9pNpXEqVzxrFOMtckDr/zI5fVSXtbM/6LOse5cb93
jnveSed6Y520Gr3RpHRhPo8jbq+uXq84lVXA4o+ZrHI7ps7vi80edUc9vSJy
/o6vOT2XHPHZscV0kf0PKY7XtVox/YDpGCVzHrMxbYeBOr+Pvb30mzjbSPPE
+Y+esKV+LW0lu1fwONOiw08+/68rfrQOVUrjcZ6/yg6kaIwsYmPQj0q+E4jj
8e+ufXdp5NVGhcx4mpVb+dQfHIfZrV517TpIOj8d84xZcf/Bzov5bC/UA9aJ
crDxNPVFUn6MRwz42GV5/Tyo53JeJz3tLt/r2i6Xtd3ZIDuirYTbxaMffIb0
lM4Zx/HvY3XZoLfSOelYV8qKsikB76TzwbGuouyjm60dKZ2TjvXjunzfw5GJ
0vnjWD8zPWY97ziqkHVe136dgdNvjv/TCYf3/PWXzjdH/B3bvXkafoz/ro3n
x+/44XjEc3vPq1vfrFOy62/umucH/+L365NO76cN6xeS84Z8zek57IhPqtqE
0oVOSjakal39yuc/cseqTqPKpDxYb3cGTXpXP7iIdQP/2DzyfT8cj9fr9f7O
8UZOhSysap38wq9XvnCj1QgnCQec/+Lwne/et5SuF/MX96qz5vUNCX+snxUX
owrzJknnvGOdpJrdeFVgncP6jJo1aObjSn69812ST2QbKfn5O1gPT6e0NJ3Q
XzoPHeuho0Fyn8unpPPcsR4uzls+ZHVFPvOPeFFb+9M3js+wa3YDzf2l89n5
+2jmycPanQrZlYrzNzZN/sDzFNQ4tqCB4j/OZwf837T2znZ+J+VB3KzdTYPW
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
oZOVdF14vXOq6y8WWD9TQMcxU+lBfP4+1fUgC6wfogdZYP2Ega60RaVb8evy
qa5bWWD9eFfXpyywTgpBz/pbpNIl8Xobwndj8Nw3rJPloJfxc/GgHlBfwzje
x16gx2Ec78sV0O/4+XSA50vQ+zDO9xegD2IcrzcD9MTq5+j5mheD/ohxvK4/
oFdiHO9XCOibGMf7VQF6KMY5Dwn6KcbxvoSD3srPAQT8+4E+i3HEvz7ouVT/
3dh/r+H04DRB/924Zqtlq91pgv47r2afr8fPpQr67+P5t44tOaYQ9N9veWYG
S0OTBP33ybadCY0c4gT9t/jg8ym7r0cI+m+pzsgju+IfC/pvWzjHkOq/ZzWM
VtW4KRP03/MV5RvkXcMF/ddxnqnWt6MRgv57tpGPkW2zKEH/XWe48o5NWLSg
/2r66Cz23hor6L9PZgfccuoUL+i/ofevDnfLCRP032u/PNwP78oQ9N/x92wL
lxakCfrv7QXzby3frhD033L/W5dHNo8U9N/MGfXaWXSWC/qv31+PIYa74gT9
N6zDmyHTtWMF/ZfVajaw1aEYQf89b/XDtolhjKD/Trcv6PDoQayg/5JzPzk+
2ina6UlXYwX9d6Oszj7tu3GC/pvRIH+KtlGcoP/+dG/VOzgzXtB/D630qGyp
nyjov9E7ykJqTpQL+m/i95YLdDbLBf33zly3wRFNEwX998mZVXc/KZIE/bc9
+Kyo/pum7rP6XssUQf/d0/C2zoChcYL++95kr04/z3RB/3W26/nbpShV0H/1
xmmsnTxMIei/FssuvXCNjRf031Z9HFuUGCYL+q9JZnaHWD+5oP8+XCDXfD05
UdB/fRImHtD9nijov+1dzbcbByYK+m9F4oP3Y0vlgv67DM7hpfrvlAUeC8MM
5IL+ey//z8FfkXJB/1V/viH16/FkQf81n9kkoORckqD/Vq4vs376OEnQfz8H
Vjy76pIs6L/ow6T6b88pyYe+xaYI+u9kM6/4gVOSBP1X+2bGmmtHFIL+qzfc
eGi/symC/jt2rKap3ohUQf/9Y+Gsf3RXqqD/avRdlDN4glzQf3udfySzeZwm
6L/TnjXObxeWKui/CzZOuHLsmULQf1cETN1n0E0h6L8Fa51K1nVOEfRfH8vl
xpNPJQn678Xid59c+iQL+i/6lqn+q6G90iJwe5Kg/97UXxx7qGOyoP++hHO0
qf678YTnqFpJckH/PXF6XWiQQbKg/yodap2LLJIL+q8O+L2p/nvujb11LdMk
Qf91/jg2q1+SXNB/y9c2KHyVkyTov2sbNfIvepos6L/yWw/qefVXCPpvpszv
56FJqYL+2/kDa/fXTi7ov8e2XfB5bp4q6L8rFm0ynfBAIei/Z8beNLmqpRD0
X7VVNSd31pAL+u/SdnZdakYlC/rvLQOz1ZlBckH/Pdji+gOnTUmC/ntw5Og+
ngPlgv7r8t32z6tGckH/9Wy2eU5c20RB/30Dv/ug+i+ea0/13zMGoaZT7eIF
/fc1fIeE6r8dfiY3PF0eJ+i/F/6stgx6HifovxN+Pi9vVxQr6L8XJ3/Rfe0a
L+i/I92mXGxjqRD0X7+PiXl/TyUK+q9i59y/D1OiBf037/lmEztlsqD/3sxV
lp10SRX034WAD9V/v0SGP/WySBL0374Xr9VrricX9F/HJ4s69lDGCvrvzEUX
95WEJQj6r029GYU7TWMF/de7W7s6Q6zjBf1Xc/NPnQ1ucYL+W3dt80sf42MF
/bc//L6M6r9vFgb4Os2MEfTfgnbRsUc/Rwv679TBB7S1akQL+u/FcvXT7mGR
gv5rd2WY1pLDEYL+W/vdurN+NSIF/fecp1bnR0nhgv47qKHrjfDgCEH/bTtb
Z/GvvzJB/7WNuxnjqh4j6L8BY3qv9OmdKOi/AfaTjsxeoBD034M+xyt//YeO
jPF5fZdfurUwTdB/M60ry3yWhAv6b2XGtRYxsXGC/hs9+GGvjoExgv6722H7
U9voGEH/rbh7SDZtS5Sg/16E37dS/Tdronu3yrYRgv7L+photRgeKei/d9t7
ezzzlAn67wzt/H0+jiGC/qt8bLjEyDBc0H/jH5sn924UKOi/Xa6MX9+9n5+g
/2pMDl4y8Yy3oP96jVu1xs0pRNB/Her7XxsfECDov59shpzb6R4u6L/Prfp+
+5LoI+i/W79sqLxlEyPov8NanEk9PT2e6Sn+P36HX9fiNfrr9iy/Jei/q7pO
nPfwZyK7kKIaj9dlS8Zj/dhcmrbNYl+yoP9u2nnwh2+reEH/TTvQdGDjHjGC
/rvM/1f/tZURgv7bOW1i/y6aMkH/XfuuhcGwuwGC/tsi025C0peHgv7rBL/T
xzjex2MkzvetJI73qxvJj/drO5kP3peeZP54X1aS60X8KT6I8zbAk+q/8wF/
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
RspzugA/+X/Vrrqv
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
/wCwPq1v
               "]], 
              Polygon[CompressedData["
1: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
6P+lUL0X
               "]], 
              Polygon[CompressedData["
1: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
n82IO68=
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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
04i16/nPbYk1eFWuP9fmaY2opX0/1rpDfEd8X9SYx9y+nOvPfDQd2235vC9k
fWSMbFg/1SN2Xpr+dCM8rCXmeEo95ti5f47P8nz/jN+uwjahEbHWa3rtKbm+
bqnHs9Sz/7Fevd/7g6/x/TA/m7RGzDZ2P8Jvo7nf1zl+Wb7/wvFXpD+dl+9r
qSrq60sz/3etwuf0va/g/o3w0TH18El9V38fDTfVonezf7kw/aFLFf2F8cwa
olMV8XMA/Al8RMbPa+Dv9fFG1B/D4S/gjlXUBOPgei1qBdfv0Ow/7H3Oh5+o
x5xe34icqS/r0+ZifVTft2fTd/UJa3NrTH3FGt5a3hzyayNqFGsVY9z7jViD
T6W/rFTFGqkXEWNdO+ZYc61r7JVG5FRz63LwM43w8VoROVffN0f/jn3jWuRu
axBrEWP6OlWs4QEZP1zbrq8h8Ofw4lWsr8HwZ/BiVfjQjfk+zmuEP03N/nHZ
jD/X1iOGupYfgDvl/XzdiPUxLefPWGfMM/bZA+xTRs1l7WXPeXAVNby1/OHw
KmX0DNba1tw94d/MuUXU3KuXUYNrt8c4pIr1Za5zTZzViHpyEvwd9z861+ct
+b6XqyL/3JX95CWNyDczst9boYp+2lxrzh3WiH5wYvazy1SRL26vx5oxN5l/
7q5HDr6qEfni3ryf8Zl/bsv+fFwjcpa5y55pwypihLHCmHRt5q8HMv9PasQa
d61bE05uRA9kL6SmcFgVMW2BIvzFWGeNa61rTf5hI3qsu4voKe29jOEvFdGT
G9t9Py8UoWGYqwp4JjwG/lcZPftreby9aTN8AzwQ7l1Fj3NNET2wvc82fIYZ
C/mtYX/eGvdrD7dWGT3opCJ6FHs9ezR7TXtOezc1kanwmbXQSuw53s37sRdZ
Cn4dvlz/gReGH8/xx1XR8+hP9oj2Qs7XpfDgWvSSHRj/HjwR7l9Fz/d2ET2L
vaA9/cPwKbXo9dWUHoKH1kJrWrI1crM5+sQqNJTnitCU1FYWg5+FT4f3LKOH
faCIHtznnQ++M+/n6Cp67Ltyfdh7t0v7OTnfxnxjvzWFvbI5/rn0v5U5flb2
B//ht4ktkYPNxeawOxtRg7yQ9dZNjeg530h/she1Jvu+Hj2ItZo9lr2WPePH
jajJzEXmJGs1e4S59egJ7B3UEF6vR43n8eaMxYrQ1Mwl9jBv5nh7CWtea0nj
3RON6HlvzfVuL1zBN8MnwJuUoRnclvOplqDmYG9qja8WYU9lb2WNsybzcSX8
X3gxc3wjeiB7IXu01aqoaefk/T7ViBzbroia0txrzrdWtyeyFnBOP4BXqcVc
m0M/zXhsbrWGtpbuB69ahkaiVjIk/UX/n1iEhqJ2aHz+leOXrEXvaEz3XN6z
9+71fJddjHdV5IOf65FjnT9rxmeynjW+2vPa+1pDbVLF+/H+rXleyPs199sz
PJz5wt5On1m3ivfvfPh+166iB7AXdT6stSfn+7LGnJn+92zOt6xGulERmpDa
qTXzWxnPrLX0x1ezfp6W/jIr6/Pp8Hnwu/l8a1SRH5/M57d2taawtrDHt9cf
l/7dIeOv/v18Pp+1tzX9Y1n/mJ/uaIQvmNPN7frDe3yfP+Ot/vNxzof53Z7q
y1xvM9Jfv8r1ZO9mD2ovqga9WxWa0ppF1IjmfzWQ7rl+1EbUlNcuoqZyPdiD
2ouqYahlqPmunu/PekKNZoUiemC1G3vcHpkv1G7sie2N1Xj/bITmtmrWH2px
ajLLFaFpqNWoOXYuQgNQi7QmsTYxZ5u7Xa/Wevb8G1ex/ucrwn/UXlwv39Sj
fnkx6w9rbWvKtzPflEVoNO9kvdNcRE3u89mDd818pFZpz90l7d9nPlywiHrl
1YxPr+X6u7sR+a1tzsdnjaiXmvJ53s3125rPu0EV+UXtTQ1unTI05r2L6LHs
tezh94V3qEVvb75Ri1cTOqqKeK32qCZ4bBXx370FNbAdy8hpU7Ie2SDj/TNF
aMz/zvh1UxE5cNuM93cU0UOZb90DcC9ATXl/zv8tPLAIjX+BMvLB9MxfW2X8
UztVY9wc/obxJ8N7wfOXkX+ez/MfX4XG/WRe31z8HeNPzfpqqTL2LIbkfBxQ
hX8skf75bSM0TbXNQ+COZeyRuFdyVuZj9zSGwUfUYq+jnvNtfjuiivz5YObT
vlXUC9fBo+FdM18/WoRmq3b7Y96P8bFLGZr8xrm+1Ord41kH3q8Wez+uvwOK
2HNQG/ocPjLvt1MZmtwuuT7U6tzTcG9DzX/PKjR5tV013r3hz+DeRWjmbcvQ
fPtkfblCGXPguQ/jt09aYk9h13x/7jW4J6D2qgbrXsHHLbG3ocayRxWab1/4
0FpowV+3hBasJrxkGRpur3yfvarQcLfL+1PbVePvmfev9q+mtk0RGrBamxqV
Wr+altqV8UitW81qyyrii3tL7tn8k+tvqSJiwO8Zr7pmPv0p449asRrnb43Y
0xiV68n6zvizchH9z7yMP8YnNbnNq4g/xjc1t03h/8IHF7HHMV/mh1lZb6yC
faUy5uaCIvRzfVq98MQifN36TG3ePb2TqpgzffmkIubSNePcuSZcS76zY10L
RbxLc661sjWoudh6Ui1bTfewMjRYtVh7XHtdNWu1azXak6tYM/r64CLWUqes
/6xXd8j62L0tNfsDy9CI1YrVBAeVoeGr5auRnVzGnpV7V2pkA6rYo3SvUk3p
VHhl+Me8v35l1BTWFlfz208tUX/OyvjUK+vhNzM+Wd93hz/OeHRkGRq2/bqa
q9q2NYm17OQiapWefJbAfjO/XYxtU7hjc2icY+Deqfd+VMT+ipqv2u90fhte
Ro9mLTu+iN5tDez/8P1KfhuKbS24TZ7f86nh2Mvbc9p7uidgb2WPbq+uBlPP
6w+uQgOyN7dntXfdEHv75pjfM8vYk3VvVs3n+DI0ObU5NfyhVfSMJ6R/2Uuq
0arV3sdvF2G7pIxn8Zn+KELj6JDzNayKmGVvYc9jLFPzVft9kN/OwL5Lzqc9
U5H6SHfsd9ZC61YjVSu9Db4QXiP91x7FXmULfTLvdyy2DeD5m9Mf4GXhz3I+
+8PLwbOL2MM9JsfPl+cfUoX90yL2BPrai/G5zljVHM93bhnvwnfku1o+/VGN
0v5PzbaVsZNroeWqoVXN4b8jc76/Tn93b3x1eBHs98OnV/H+Gs3h32przvfC
8E210Mp9Pws1x3obnP6m/z2gP3H8MvCvRYwfVIX/6A9qdCPKmP/O8K210OL1
x6bmeF73JvSPdvC9vvMy3uei8LW5vt0jURvUX9w7mVTGtb0H10KfKnpVe2Z7
Z3tge097RntH38fnRfTLfbBtV0auNmfby7oG7ZXtUV2brufv+T7V9Z7x4Lsi
+lf3+lzDxhJjimu7R8YD4517c1uk/6i5j+TeTiyjd3WOnCtrDu/FntNaxJhk
L/lKEbFqt/Tfp4rI5cuU0bufXcR+vfHnp4x3/u2ENYq9pz2otcsxVaxv2d7U
OXau9bFP+BztGsr4IG9aRi1iT2dvd1IZvmtMMja1lvE3BP7twEctUQN4vD28
tYE1k72ePaC1lPFyThH99iEZX38pYg7cm1u0Cu1vQOrV7kG0bY75dm9CfemS
rJ/cO3ZPc9vMb+51+jcGajNjU4+1PjuliBzi3244R86Ve1DWGwOrWJu+I9+V
+XvHzH/uzY7J9aU/6dvmk/exj6rF3qh7YFtnfnRv9/ZGaL/2QPZC1menFZGz
zF1q8mpvaqpqq6/l8ebI7au4nrHSNeJaua4RvZM9kL2Qf/Oh9qWGqpbqHtk+
WR80ZT0suwe2SxU5R9/UZ/VdY45rT5/X942hF2Q9s3wZf2OyV9YX/u2JMdm5
dw26FtX7zivC59x7tcayFji0iNprFHx3Ldaka7NT1gNHF1HbuWZdu78VkavV
/y4sol5XL7CHs5ebmXr7KVXEHmOasc0YOSH99f+xkzHHFKE/+rca7rnNTf9R
SzbmGvuMqcbWP/J5zSHu9Z9TRmwy5hn7/JubP3N/Tu3Qv8k5Nt+Pf6vTMetz
4/V+ZfSs9q7uOakl+jct7l1dVo/9PXOAsdw179p3z+DX3C9X+3ZP8J+m0LjV
ukdVocV3y/1q/0ZoaL7P9hm/nVvn+KwyajDXoGvP2sx4X2Y8Pa2Kevnw9Hf/
Nsic79p2jbpWe1TRa6tBqEWoedrLuwenFqrmqZaqpqoWas1i7WKOPLKKPf7/
a5v10GqfzP2Dd+qhFV2Ux7tnMDDXs3uL97gGytijHcn59q3F3q3XU2tVo1Wr
tZ84I+tv+z1zrs+2VO5X/g+ao8nJ
               "]], 
              Polygon[CompressedData["
1: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
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0UkuBGEYBuDf1ObWcQBiY55ZshWhVxamNjYiLFhJ2EksOAEnYCOsOAEO
oLXWZk4gIvaeSiT11vMllar3z1cN6c2xjYIQwpbcGA6ZKwzhmD+8YKIohCt2
MMMRfnI5FsIHl/jONN+4yFcu8IXzfOYcZ+XJPMNHppjnNB84xRwnec8JZjnO
O67qvmaSl+ziCWt5xF9nPmCeOzznmayb95jiCpMc5iDb2Mk46/ltDwlmGe2m
sSQEj0IT1YRmFrOFrtDqFou+w1K2syzaFzulPDonK9jNSvawir2sZh/j7GcN
vxTXsUpxR9TFAQ5xNNo5p7nLNZ5ym7fey8j+///8A8pFM5k=
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0UcuBVAUBuAr2owZJiTmjCQmrICZEREGBt7Te1kAjwXovW5A720dSqL3
MlQSvheDP9+5OTe55+Tm1rSUNSeEELqkNzGEbodYUgj9XOQQj7jIM67wi8dc
StWL3+MhF3jAee5zjnuc5S5nOC076iluc5JbnOAmx7nBMa5zlGsc4Sozk73L
HzMM84IxnrCHy4xykBWsZpWUqgtZzCzm89u+OTxnOo8Z4nvxQznAS9amhHDF
CK8Z5Q3reMt63rGB92zkA5vYLI/qFj6xlc9s4wvb+coOvrGT71zw9i8PmWam
U2bzk3nMsEMRC1jCSpazT79fIgn///kHi6BILw==
             "]]}, {
            
            Line[{1318, 1317, 2185, 1334, 1963, 2193, 1357, 1970, 2207, 1382, 
             2222, 1380, 1404, 1983, 2237, 1428, 1989, 2252, 1452, 1995, 2267,
              1475, 2283, 2002, 2282, 1490, 2016, 2305, 1508, 2327, 1506, 
             1530, 2037, 2342, 1552, 2045, 2357, 1576, 2372, 1574, 1599, 843, 
             1622}], 
            
            Line[{1319, 1957, 2186, 1335, 1965, 2195, 1358, 1972, 2209, 1383, 
             1977, 2224, 1405, 1985, 2239, 1429, 2254, 1430, 1453, 2269, 1454,
              1476, 2286, 2004, 2285, 1491, 2019, 2309, 1509, 2031, 2329, 
             1531, 2039, 2344, 1553, 2359, 1554, 1577, 819, 1600, 2387, 1601, 
             1623}], 
            
            Line[{1320, 1958, 2187, 1336, 1966, 2197, 1359, 1973, 2211, 1384, 
             1979, 2226, 1406, 2241, 1409, 1431, 2256, 1434, 1455, 2271, 1458,
              1477, 2288, 2006, 2289, 1492, 2021, 2312, 1510, 2032, 2331, 
             1532, 2346, 1535, 1555, 2047, 2361, 1578, 2375, 1581, 1602, 2389,
              1605, 1624}], 
            
            Line[{1321, 1959, 2188, 1338, 1967, 2199, 1361, 1974, 2213, 1385, 
             2228, 1389, 1408, 2243, 1412, 1433, 2258, 1438, 1457, 2273, 1461,
              1478, 2292, 2008, 2291, 1493, 2023, 2315, 1512, 2033, 2333, 
             1534, 2040, 2348, 1557, 2363, 1561, 1580, 2377, 1584, 1604, 2391,
              1608, 1625}], 
            
            Line[{1322, 1960, 2189, 1339, 1968, 2201, 1362, 1975, 2215, 1386, 
             2230, 1394, 1410, 2245, 1417, 1435, 2260, 1442, 1459, 2275, 1465,
              1479, 2294, 2010, 2295, 1494, 2025, 2318, 1513, 2034, 2335, 
             1536, 2041, 2350, 1558, 2365, 1565, 1582, 2379, 1588, 1606, 2393,
              1612, 1626}], 
            
            Line[{1323, 1961, 2190, 1341, 1969, 2203, 1364, 2217, 1372, 1388, 
             2232, 1398, 1411, 2247, 1420, 1437, 2262, 1445, 1460, 2277, 1468,
              1480, 2297, 2012, 2298, 1495, 2027, 2321, 1515, 2337, 1523, 
             1538, 2042, 2352, 1560, 2367, 1568, 1583, 2381, 1591, 1607, 2395,
              1615, 1627}], 
            
            Line[{1324, 1962, 2191, 1342, 2205, 1352, 1365, 2219, 1376, 1390, 
             1981, 2234, 1413, 2249, 1424, 1439, 1994, 2264, 1462, 2280, 1471,
              1481, 2301, 2014, 2303, 1496, 2324, 1503, 1516, 2035, 2339, 
             1539, 2354, 1548, 1562, 2369, 1571, 1585, 2383, 1594, 1609, 2397,
              1618, 1628}], 
            
            Line[{1326, 1333, 2194, 1345, 1356, 2208, 1368, 1381, 2223, 1393, 
             1403, 2238, 1416, 2253, 1990, 1441, 1451, 2268, 1464, 1474, 2284,
              1483, 2307, 2308, 2018, 1498, 2328, 2030, 1519, 1529, 2343, 
             1542, 2358, 2046, 1564, 1575, 2373, 1587, 1598, 2386, 1611, 1621,
              2399, 1630}], 
            
            Line[{1327, 1337, 2196, 1346, 1360, 2210, 1369, 2225, 1978, 1395, 
             1407, 2240, 1418, 1432, 2255, 1443, 1456, 2270, 1466, 2287, 2005,
              1484, 2310, 2020, 2311, 1499, 1511, 2330, 1520, 1533, 2345, 
             1543, 1556, 2360, 1566, 1579, 2374, 1589, 1603, 2388, 1613, 2400,
              2064, 1631}], 
            
            Line[{1328, 1340, 2198, 1348, 1363, 2212, 1371, 1387, 2227, 1397, 
             2242, 1986, 1419, 1436, 2257, 1444, 2272, 1997, 1467, 2290, 2007,
              1485, 2313, 2022, 2314, 1500, 1514, 2332, 1522, 1537, 2347, 
             1545, 1559, 2362, 1567, 2376, 2053, 1590, 2390, 2058, 1614, 2401,
              2065, 1632}], 
            
            Line[{1329, 1343, 2200, 1349, 1366, 2214, 1373, 1391, 2229, 1399, 
             1414, 2244, 1421, 2259, 1991, 1446, 2274, 1998, 1469, 2293, 2009,
              1486, 2317, 2024, 2316, 1501, 1517, 2334, 1524, 1540, 2349, 
             1546, 2364, 2048, 1569, 2378, 2054, 1592, 2392, 2059, 1616, 2402,
              2066, 1633}], 
            
            Line[{1330, 1347, 2202, 1351, 1370, 2216, 1375, 1396, 2231, 1400, 
             2246, 1987, 1423, 2261, 1992, 1447, 2276, 1999, 1470, 2296, 2011,
              1487, 2319, 2026, 2320, 1502, 1521, 2336, 1526, 1544, 2351, 
             1547, 2366, 2049, 1570, 2380, 2055, 1593, 2394, 2060, 1617, 2403,
              2067, 1634}], 
            
            Line[{1331, 1350, 2204, 1353, 1374, 2218, 1377, 2233, 1980, 1401, 
             1422, 2248, 1425, 2263, 1993, 1448, 2278, 2000, 1472, 2299, 2013,
              1488, 2322, 2028, 2323, 1504, 1525, 2338, 1527, 2353, 2043, 
             1549, 2368, 2050, 1572, 2382, 2056, 1595, 2396, 2061, 1619, 2404,
              2068, 1635}], 
            
            Line[{1332, 1354, 2183, 1355, 1378, 2220, 1379, 2235, 1982, 1402, 
             2250, 1988, 1426, 1449, 2265, 1450, 2279, 2001, 1473, 2302, 2015,
              1489, 2325, 2029, 2300, 1505, 2340, 2036, 1528, 2355, 2044, 
             1550, 2370, 2051, 1573, 1596, 2384, 1597, 2398, 2062, 1620, 2405,
              2069, 1636}], 
            
            Line[{1629, 2063, 2385, 1610, 2057, 2371, 1586, 2052, 2356, 1563, 
             2341, 1551, 1541, 2038, 2326, 1518, 2304, 1507, 1497, 2281, 2017,
              2306, 1482, 2003, 2266, 1463, 1996, 2251, 1440, 2236, 1427, 
             1415, 1984, 2221, 1392, 1976, 2206, 1367, 1971, 2192, 1344, 1964,
              2184, 1325}], 
            
            Line[{1638, 1637, 2408, 1654, 2076, 2416, 1677, 2083, 2430, 1702, 
             2445, 1700, 1724, 2096, 2460, 1748, 2102, 2475, 1772, 2108, 2490,
              1795, 2507, 2116, 2506, 1810, 2129, 2505, 1828, 2550, 1826, 
             1850, 2150, 2565, 1872, 2158, 2580, 1896, 2595, 1894, 1919, 1275,
              1942}], 
            
            Line[{1639, 2070, 2409, 1655, 2078, 2418, 1678, 2085, 2432, 1703, 
             2090, 2447, 1725, 2098, 2462, 1749, 2477, 1750, 1773, 2492, 1774,
              1796, 2509, 2118, 2508, 1811, 2132, 2532, 1829, 2144, 2552, 
             1851, 2152, 2567, 1873, 2582, 1874, 1897, 1251, 1920, 2610, 1921,
              1943}], 
            
            Line[{1640, 2071, 2410, 1656, 2079, 2420, 1679, 2086, 2434, 1704, 
             2092, 2449, 1726, 2464, 1729, 1751, 2479, 1754, 1775, 2494, 1778,
              1797, 2511, 2120, 2512, 1812, 2134, 2535, 1830, 2145, 2554, 
             1852, 2569, 1855, 1875, 2160, 2584, 1898, 2598, 1901, 1922, 2612,
              1925, 1944}], 
            
            Line[{1641, 2072, 2411, 1658, 2080, 2422, 1681, 2087, 2436, 1705, 
             2451, 1709, 1728, 2466, 1732, 1753, 2481, 1758, 1777, 2496, 1781,
              1798, 2516, 2122, 2515, 1813, 2136, 2538, 1832, 2146, 2556, 
             1854, 2153, 2571, 1877, 2586, 1881, 1900, 2600, 1904, 1924, 2614,
              1928, 1945}], 
            
            Line[{1642, 2073, 2412, 1659, 2081, 2424, 1682, 2088, 2438, 1706, 
             2453, 1714, 1730, 2468, 1737, 1755, 2483, 1762, 1779, 2498, 1785,
              1799, 2518, 2124, 2519, 1814, 2138, 2541, 1833, 2147, 2558, 
             1856, 2154, 2573, 1878, 2588, 1885, 1902, 2602, 1908, 1926, 2616,
              1932, 1946}], 
            
            Line[{1643, 2074, 2413, 1661, 2082, 2426, 1684, 2440, 1692, 1708, 
             2455, 1718, 1731, 2470, 1740, 1757, 2485, 1765, 1780, 2500, 1788,
              1800, 2520, 2126, 2521, 1815, 2140, 2544, 1835, 2560, 1843, 
             1858, 2155, 2575, 1880, 2590, 1888, 1903, 2604, 1911, 1927, 2618,
              1935, 1947}], 
            
            Line[{1644, 2075, 2414, 1662, 2428, 1672, 1685, 2442, 1696, 1710, 
             2094, 2457, 1733, 2472, 1744, 1759, 2107, 2487, 1782, 2502, 1791,
              1801, 2527, 2128, 2525, 1816, 2547, 1823, 1836, 2148, 2562, 
             1859, 2577, 1868, 1882, 2592, 1891, 1905, 2606, 1914, 1929, 2620,
              1938, 1948}], 
            
            Line[{1646, 1653, 2417, 1665, 1676, 2431, 1688, 1701, 2446, 1713, 
             1723, 2461, 1736, 2476, 2103, 1761, 1771, 2491, 1784, 2489, 1793,
              1803, 2529, 2130, 2531, 1818, 2551, 2143, 1839, 1849, 2566, 
             1862, 2581, 2159, 1884, 1895, 2596, 1907, 1918, 2609, 1931, 1941,
              2622, 1950}], 
            
            Line[{1647, 1657, 2419, 1666, 1680, 2433, 1689, 2448, 2091, 1715, 
             1727, 2463, 1738, 1752, 2478, 1763, 1776, 2493, 1786, 2510, 2117,
              1804, 2533, 2133, 2534, 1819, 1831, 2553, 1840, 1853, 2568, 
             1863, 1876, 2583, 1886, 1899, 2597, 1909, 1923, 2611, 1933, 2623,
              2177, 1951}], 
            
            Line[{1648, 1660, 2421, 1668, 1683, 2435, 1691, 1707, 2450, 1717, 
             2465, 2099, 1739, 1756, 2480, 1764, 2495, 2110, 1787, 2513, 2119,
              1805, 2536, 2135, 2537, 1820, 1834, 2555, 1842, 1857, 2570, 
             1865, 1879, 2585, 1887, 2599, 2166, 1910, 2613, 2171, 1934, 2624,
              2178, 1952}], 
            
            Line[{1649, 1663, 2423, 1669, 1686, 2437, 1693, 1711, 2452, 1719, 
             1734, 2467, 1741, 2482, 2104, 1766, 2497, 2111, 1789, 2514, 2121,
              1806, 2540, 2137, 2539, 1821, 1837, 2557, 1844, 1860, 2572, 
             1866, 2587, 2161, 1889, 2601, 2167, 1912, 2615, 2172, 1936, 2625,
              2179, 1953}], 
            
            Line[{1650, 1667, 2425, 1671, 1690, 2439, 1695, 1716, 2454, 1720, 
             2469, 2100, 1743, 2484, 2105, 1767, 2499, 2112, 1790, 2517, 2123,
              1807, 2542, 2139, 2543, 1822, 1841, 2559, 1846, 1864, 2574, 
             1867, 2589, 2162, 1890, 2603, 2168, 1913, 2617, 2173, 1937, 2626,
              2180, 1954}], 
            
            Line[{1651, 1670, 2427, 1673, 1694, 2441, 1697, 2456, 2093, 1721, 
             1742, 2471, 1745, 2486, 2106, 1768, 2501, 2113, 1792, 2522, 2125,
              1808, 2545, 2141, 2546, 1824, 1845, 2561, 1847, 2576, 2156, 
             1869, 2591, 2163, 1892, 2605, 2169, 1915, 2619, 2174, 1939, 2627,
              2181, 1955}], 
            
            Line[{1652, 1674, 2406, 1675, 1698, 2443, 1699, 2458, 2095, 1722, 
             2473, 2101, 1746, 1769, 2488, 1770, 2503, 2115, 1794, 2523, 2127,
              1809, 2548, 2142, 2524, 1825, 2563, 2149, 1848, 2578, 2157, 
             1870, 2593, 2164, 1893, 1916, 2607, 1917, 2621, 2175, 1940, 2628,
              2182, 1956}], 
            
            Line[{1949, 2176, 2608, 1930, 2170, 2594, 1906, 2165, 2579, 1883, 
             2564, 1871, 1861, 2151, 2549, 1838, 2526, 1827, 1817, 2131, 2530,
              2528, 1802, 2504, 2114, 1783, 2109, 2474, 1760, 2459, 1747, 
             1735, 2097, 2444, 1712, 2089, 2429, 1687, 2084, 2415, 1664, 2077,
              2407, 1645}]}, {
            Line[{453, 754, 2340, 751, 2338, 750, 747, 746, 2336, 743, 2334, 
             742, 739, 738, 2332, 735, 2330, 734, 731, 2328, 730, 2304, 723, 
             722, 2324, 717, 2321, 716, 711, 2318, 710, 705, 704, 2315, 699, 
             2312, 698, 693, 2309, 692, 687, 2305, 684, 728}], 
            
            Line[{466, 2300, 725, 721, 2323, 719, 715, 2320, 713, 709, 707, 
             2316, 703, 2314, 701, 697, 2311, 695, 691, 2308, 689, 2281, 681, 
             2303, 679, 675, 673, 2298, 669, 667, 2295, 663, 2291, 661, 657, 
             655, 2289, 651, 2285, 649, 645, 2282, 642, 686}], 
            
            Line[{468, 450, 2185, 452, 2186, 451, 454, 455, 2187, 456, 457, 
             2188, 458, 459, 2189, 460, 461, 2190, 462, 463, 2191, 464, 2184, 
             470, 2194, 471, 474, 2196, 475, 2198, 478, 479, 482, 2200, 483, 
             2202, 486, 487, 490, 2204, 491, 494, 2183, 495}], 
            
            Line[{497, 467, 2193, 469, 472, 2195, 473, 476, 2197, 477, 480, 
             2199, 481, 484, 2201, 485, 488, 2203, 489, 2205, 492, 493, 2192, 
             499, 2208, 500, 503, 2210, 504, 507, 2212, 508, 511, 2214, 512, 
             515, 2216, 516, 519, 2218, 520, 2220, 523, 524}], 
            
            Line[{526, 496, 2207, 498, 501, 2209, 502, 505, 2211, 506, 509, 
             2213, 510, 513, 2215, 514, 2217, 517, 518, 2219, 521, 522, 2206, 
             528, 2223, 529, 532, 2225, 533, 536, 2227, 537, 2229, 540, 541, 
             544, 2231, 545, 2233, 548, 549, 2235, 552, 553}], 
            
            Line[{555, 525, 2222, 527, 530, 2224, 531, 534, 2226, 535, 538, 
             2228, 539, 2230, 542, 543, 2232, 546, 547, 2234, 550, 551, 2221, 
             557, 2238, 558, 561, 2240, 562, 565, 2242, 566, 569, 2244, 570, 
             2246, 573, 574, 2248, 577, 578, 2250, 581, 582}], 
            
            Line[{584, 554, 2237, 556, 559, 2239, 560, 563, 2241, 564, 2243, 
             567, 568, 571, 2245, 572, 2247, 575, 576, 2249, 579, 580, 2236, 
             586, 2253, 587, 590, 2255, 591, 594, 2257, 595, 598, 2259, 599, 
             2261, 602, 603, 2263, 606, 607, 2265, 610, 611}], 
            
            Line[{613, 583, 2252, 585, 588, 2254, 589, 2256, 592, 593, 2258, 
             596, 597, 2260, 600, 601, 2262, 604, 605, 2264, 608, 609, 2251, 
             615, 2268, 616, 619, 2270, 620, 623, 2272, 624, 2274, 627, 628, 
             631, 2276, 632, 2278, 635, 636, 2279, 639, 640}], 
            
            Line[{643, 612, 2267, 614, 2269, 617, 618, 621, 2271, 622, 2273, 
             625, 626, 2275, 629, 630, 2277, 633, 634, 637, 2280, 638, 2266, 
             646, 2284, 647, 652, 2287, 653, 658, 2290, 659, 2293, 664, 665, 
             2296, 670, 671, 676, 2299, 677, 2302, 682, 683}], 
            
            Line[{685, 2283, 641, 644, 2286, 648, 650, 654, 2288, 656, 2292, 
             660, 662, 666, 2294, 668, 672, 2297, 674, 2301, 678, 680, 688, 
             2306, 2307, 690, 2310, 694, 696, 2313, 700, 702, 706, 2317, 708, 
             2319, 712, 714, 2322, 718, 720, 2325, 724, 465}], 
            
            Line[{726, 783, 2355, 780, 779, 2353, 776, 775, 2351, 772, 2349, 
             771, 768, 2347, 767, 764, 2345, 763, 760, 2343, 759, 2326, 753, 
             752, 2339, 749, 748, 2337, 745, 2335, 744, 741, 740, 2333, 737, 
             2331, 736, 733, 2329, 732, 729, 2327, 727, 757}], 
            
            Line[{755, 812, 2370, 809, 808, 2368, 805, 804, 2366, 801, 2364, 
             800, 797, 2362, 796, 793, 2360, 792, 789, 2358, 788, 2341, 782, 
             781, 2354, 778, 777, 2352, 774, 773, 2350, 770, 2348, 769, 766, 
             2346, 765, 762, 2344, 761, 758, 2342, 756, 786}], 
            
            Line[{784, 841, 2384, 838, 837, 2382, 834, 2380, 833, 830, 829, 
             2378, 826, 2376, 825, 822, 2374, 821, 818, 2373, 817, 2356, 811, 
             810, 2369, 807, 806, 2367, 803, 802, 2365, 799, 798, 2363, 795, 
             2361, 794, 791, 2359, 790, 787, 2357, 785, 815}], 
            
            Line[{813, 870, 2398, 867, 866, 2396, 863, 862, 2394, 859, 858, 
             2392, 855, 854, 2390, 851, 2388, 850, 847, 2386, 846, 2371, 840, 
             839, 2383, 836, 835, 2381, 832, 831, 2379, 828, 827, 2377, 824, 
             823, 2375, 820, 819, 816, 2372, 814, 844}], 
            
            Line[{842, 884, 2405, 883, 2404, 882, 881, 880, 2403, 879, 2402, 
             878, 877, 876, 2401, 875, 874, 2400, 873, 2399, 872, 2385, 869, 
             868, 2397, 865, 864, 2395, 861, 860, 2393, 857, 856, 2391, 853, 
             2389, 852, 849, 848, 2387, 845, 843, 871}], 
            
            Line[{888, 1186, 2563, 1183, 2561, 1182, 1179, 1178, 2559, 1175, 
             2557, 1174, 1171, 1170, 2555, 1167, 2553, 1166, 1163, 2551, 1162,
              2526, 1155, 1154, 2547, 1149, 2544, 1148, 1143, 2541, 1142, 
             1137, 1136, 2538, 1131, 2535, 1130, 1125, 2532, 1124, 1119, 2505,
              1116, 1160}], 
            
            Line[{901, 2524, 1157, 1153, 2546, 1151, 1147, 2543, 1145, 1141, 
             1139, 2539, 1135, 2537, 1133, 1129, 2534, 1127, 1123, 2531, 1121,
              2530, 1114, 2525, 1110, 1108, 2521, 1104, 1102, 2519, 1098, 
             2515, 1096, 1092, 1090, 2512, 1086, 2508, 1084, 1080, 2506, 1077,
              1118}], 
            
            Line[{903, 885, 2408, 887, 2409, 886, 889, 890, 2410, 891, 892, 
             2411, 893, 894, 2412, 895, 896, 2413, 897, 898, 2414, 899, 2407, 
             905, 2417, 906, 909, 2419, 910, 2421, 913, 914, 917, 2423, 918, 
             2425, 921, 922, 925, 2427, 926, 929, 2406, 930}], 
            
            Line[{932, 902, 2416, 904, 907, 2418, 908, 911, 2420, 912, 915, 
             2422, 916, 919, 2424, 920, 923, 2426, 924, 2428, 927, 928, 2415, 
             934, 2431, 935, 938, 2433, 939, 942, 2435, 943, 946, 2437, 947, 
             950, 2439, 951, 954, 2441, 955, 2443, 958, 959}], 
            
            Line[{961, 931, 2430, 933, 936, 2432, 937, 940, 2434, 941, 944, 
             2436, 945, 948, 2438, 949, 2440, 952, 953, 2442, 956, 957, 2429, 
             963, 2446, 964, 967, 2448, 968, 971, 2450, 972, 2452, 975, 976, 
             979, 2454, 980, 2456, 983, 984, 2458, 987, 988}], 
            
            Line[{990, 960, 2445, 962, 965, 2447, 966, 969, 2449, 970, 973, 
             2451, 974, 2453, 977, 978, 2455, 981, 982, 2457, 985, 986, 2444, 
             992, 2461, 993, 996, 2463, 997, 1000, 2465, 1001, 1004, 2467, 
             1005, 2469, 1008, 1009, 2471, 1012, 1013, 2473, 1016, 1017}], 
            
            Line[{1019, 989, 2460, 991, 994, 2462, 995, 998, 2464, 999, 2466, 
             1002, 1003, 1006, 2468, 1007, 2470, 1010, 1011, 2472, 1014, 1015,
              2459, 1021, 2476, 1022, 1025, 2478, 1026, 1029, 2480, 1030, 
             1033, 2482, 1034, 2484, 1037, 1038, 2486, 1041, 1042, 2488, 1045,
              1046}], 
            
            Line[{1048, 1018, 2475, 1020, 1023, 2477, 1024, 2479, 1027, 1028, 
             2481, 1031, 1032, 2483, 1035, 1036, 2485, 1039, 1040, 2487, 1043,
              1044, 2474, 1050, 2491, 1051, 1054, 2493, 1055, 1058, 2495, 
             1059, 2497, 1062, 1063, 1066, 2499, 1067, 2501, 1070, 1071, 2503,
              1074, 1075}], 
            
            Line[{1078, 1047, 2490, 1049, 2492, 1052, 1053, 1056, 2494, 1057, 
             2496, 1060, 1061, 2498, 1064, 1065, 2500, 1068, 1069, 2502, 1072,
              2504, 1073, 2489, 1081, 1082, 2510, 1087, 1088, 2513, 1093, 
             2514, 1094, 1099, 2517, 1100, 1105, 1106, 2522, 1111, 2523, 1112,
              1115}], 
            
            Line[{1117, 2507, 1076, 1079, 2509, 1083, 1085, 1089, 2511, 1091, 
             2516, 1095, 1097, 1101, 2518, 1103, 1107, 2520, 1109, 1113, 2527,
              2528, 2529, 1120, 1122, 2533, 1126, 1128, 2536, 1132, 1134, 
             1138, 2540, 1140, 2542, 1144, 1146, 2545, 1150, 1152, 2548, 1156,
              900}], 
            
            Line[{1158, 1215, 2578, 1212, 1211, 2576, 1208, 1207, 2574, 1204, 
             2572, 1203, 1200, 2570, 1199, 1196, 2568, 1195, 1192, 2566, 1191,
              2549, 1185, 1184, 2562, 1181, 1180, 2560, 1177, 2558, 1176, 
             1173, 1172, 2556, 1169, 2554, 1168, 1165, 2552, 1164, 1161, 2550,
              1159, 1189}], 
            
            Line[{1187, 1244, 2593, 1241, 1240, 2591, 1237, 1236, 2589, 1233, 
             2587, 1232, 1229, 2585, 1228, 1225, 2583, 1224, 1221, 2581, 1220,
              2564, 1214, 1213, 2577, 1210, 1209, 2575, 1206, 1205, 2573, 
             1202, 2571, 1201, 1198, 2569, 1197, 1194, 2567, 1193, 1190, 2565,
              1188, 1218}], 
            
            Line[{1216, 1273, 2607, 1270, 1269, 2605, 1266, 2603, 1265, 1262, 
             1261, 2601, 1258, 2599, 1257, 1254, 2597, 1253, 1250, 2596, 1249,
              2579, 1243, 1242, 2592, 1239, 1238, 2590, 1235, 1234, 2588, 
             1231, 1230, 2586, 1227, 2584, 1226, 1223, 2582, 1222, 1219, 2580,
              1217, 1247}], 
            Line[{1245, 1302, 2621, 1299, 1298, 2619, 1295, 1294, 2617, 1291, 
             1290, 2615, 1287, 1286, 2613, 1283, 2611, 1282, 1279, 2609, 1278,
              2594, 1272, 1271, 2606, 1268, 1267, 2604, 1264, 1263, 2602, 
             1260, 1259, 2600, 1256, 1255, 2598, 1252, 1251, 1248, 2595, 1246,
              1276}], 
            
            Line[{1274, 1316, 2628, 1315, 2627, 1314, 1313, 1312, 2626, 1311, 
             2625, 1310, 1309, 1308, 2624, 1307, 1306, 2623, 1305, 2622, 1304,
              2608, 1301, 1300, 2620, 1297, 1296, 2618, 1293, 1292, 2616, 
             1289, 1288, 2614, 1285, 2612, 1284, 1281, 1280, 2610, 1277, 1275,
              1303}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
PX9o0g/n9BlNyLngnXzl/haMl1wc4eswAjLjb2tzpepRv3jQ4fhAC27ZODU+
8mAExvk3SiZGVmH56SMGB05W4wzPCvt9OkQnXDh7u/1bAdapP3aaCWWovvPK
bNlECmTpeuIaup7Iqmc9XX8oo+tP6kvXP3Z2xMMpnXIgDfOE06kOpripkj1E
F202O2JZt7cU7v8ZeJZ/qxmE76jwty8geCiUormYNx1OaYt7t+xthN6pYO20
/RRMen9Rfx17F8/c0PLScKmHn2Iy/ZJ2pM+/VSueGslDZxGhPccoJjieODtu
RPotju5PDKP7EwKn+1OX7me0o/sZHab7+Rbd//iW7n9k9f/cVud7c+va8GhB
4PMlRxrR6TjjiKbaCNzg3M2VNtCEIe8PMTa+rsMXGy0ytatGwNh60LBcvgor
hvbMmOlSjncvj4bJ21Jw7U2GjkpQDqr5F1z9bcXAS3fton50EV26Tusi38J7
uLzkb9Pd27YY7PObX/gv0W80PkAwjQ/AwodGGk9gE40nwMKT9TT+wDT+AAt/
NJ/HpQ6opyMfU2o9f38RJGu0199qJD6lzEXsmmMNPjmyVtZuwByGtKfe+QeR
/h/1WjrQ+AhNRNWsi8JTQSA5bV7lUgrU9nYnO63qxPvf60v+GGaihfYma/3L
I7Ccxls0pPEWWXibTeMzTuMz3p/G50oaz7GZxnNcNY3n0Yff3U7JbcSmrODE
SJF8vNa0c/dvNQpE7U6/PHS8CjM3zJpNzWVizJ7ur6VEHyo8vLd84bpEVBWt
kZlXFQ4NLc/FdUgf/hTNTQvcdhspc5Okvg1X4GeQloUmqefGKq0UuZZEGBZP
khDyzwbGA5Oh1CGio2i+gwya74DFd1Um//Ijntn2Lz8Cix9jPYzmj6nn4Oo9
hW2Z9xPA0YSLewmZh+OOfWhiaBV+0Wx1iVCIwVl+YRzD8RQsPS1toxVbj7+r
xTfo+aShx9J3CeKnKEil+R1daX7H3dP87iJa13EqpgWDwi7rXmQU4jWNvt2b
J0fAe9ucpQapj5A6GpsnblyMjIBHQrqzKJhN6w2c1hvI0hsfaX2ChrQ+QZY+
sT1T73KwMgd92Gf2vRqzgkNvT3dv+ESB9nbH2U0vjHFs8ZaukW0ZIG1RIBI8
RnjK4V+9BEG0XgKWXgqh9RWE0PoKWPrqkfKHhVYZWSBYWjvralAeGLa/5OMn
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
Z2l4qY/3ZBOkYUNtsLod4bPHXkrPjbmfjfkeCVIf9ySgkkXBl1xih1cpHo2y
FI9GBo8Oofg+FlB8Hxl8P5dZ8F1cZDb2bt1C1+OJQ+Zf6TcmiR/5bgkRryvP
xCk/zV6aVDLyu25ZcJfY7e/6+xpf6/wh6nXzfKXEUjh57YPJkjw6nKd4FupS
PAsuzPKsp21r3bsX2cPnOcN7miaKYFwrfICb7EMmVZdAFaougf9Xl6DqHihL
1T2QUfdwfbW293qgI/Z/L4ias6IQWPiO9iQSvGoWtdtLYNAfJ0oiFQ+k0SBs
34KcUMKbTJ+1X/YfKkD/nTs/DwrGYmpK/Ze35Lyar0aXH57Iw+hz5nYPv8ei
mKe2XAaxkz2XIn/6Z4Wjx3S1godALiRm2CycIvvgs9Pie9GjRPThduywGE6D
CiUH37mE95XbTIjLJ+Vhyp2fiYt3JiDnI7dDnwiumDMnXJnem4uyh8TjjXwS
cVJ/uSdnG8EJPa9VdNIzcKQi7Vry6XjQohWfX/eRDoc2f9N5sjADWfepcz0Q
jISC5t7o3C+EX7iuuPdHNAc1009LLauKxy3+eYmnye86LhR4qz4mBwMSkvzd
RRNwe7vRtoJXdHh9ufLGUtYMnO/r6nr5egj4GOXt1x+gg+NhmQVXZbJwf5C/
vF2kHrSqNW1rJeun0k+eC47LxcQqmeYatgTsKTzoONNOh7e87Ec+rcxFt1wT
e9uLiVgwdKP6YQfJC4o9Y3Z7MlHhWn1Eu6QVWqhuU+ccJPlovr2FJ8GrbNvq
n5/KfoC79jAv2DVE7Hn66YsDcdnIG3QqzkI7DjM2eIkUkv08fn5t7+Nv2dgS
hdAgHIN7kgdWuBC7Kt6t58sllI68Xhnxpz96YNOFTz7+w+Q7qfoq2lP1VWTU
V33p0uODZdkoOTnQpJobidw9lydd35G/q1LX9LAsCY/KO7J9yMxEHqlXXEu6
6XBqxZgmjesRZDzZbytyLhtqbmvmKpNzXEvVtSCLqmsBo65lMZO90SXMESyc
OZY+0cmCuh0ygpxk33ypOjCyU3VgZNSBOak6MypSdWZk1JnvmYdLedy+CRaN
Sn4+B7NghK1WJZask68ppy1S54wK8mq6USypwOawgkOLvF8THS/9xTwWy8pN
+Jq6wlF1ZUZ98hgdkL71Gn9CONata2LO/BKJrkEtEyu+0+Fco1B6k6w/sq74
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
f30wYKf1wWCuD8Y8/9CYn7ArjO+VfDZfOwE9d98bHp78f3pHLAx6R/R+HZyk
9etgrl9naqTSPbG6HjwPU621wrXgUo5izeD12XrkvcqJxHJYJ+Mt1XzKD9WN
o+K706kQZ5dUKW2UCXn8+g90FyeimmvCpX5Sj19z/K/fCL9Y/us34ly/MZnW
n8SftP4kzvUnr9P1Sb4z6JMk0ub14C3avB6cm9fzcm+6fGhqMO6qjfi80ycH
PO994+km/oYPsXNxjSOWGbEYCN4ohaUBalTz2XlGop/jVyg+hc4Pfa5fCyvA
JsXTxDKeCt1L855KfDaE9+emfsf7VsLqO8IJ1uQ7PjHeZde3LwbvzqzXVf5c
Chv57nPHllBhvN/6nKFxPlKDxWc+kjiwaDAld3Y+6Qs6j7+Ygcf/QpuThUG0
OVk4NycrYrpWZrwwEMKzWou+ORVCnyJzsEkLyXdnnTM2jiPWpZvvHrkdiSO5
UsbiRVQwfToQ+HGvF7hJGi3Q0kNYefWe/ACJwzsL9YxFZEpwXkRCvIp8NHqO
Zl4IJHXWoZ2yYwvG1+FNxxMul1QRfrBvVFUn9dTWjs7fUnwluCIgOafDKw7P
Z2uL95Lf5/ntDUn5E4kB88aUNhnng5fSN4MH7bNzWleWcGkXodktiGTRScDK
6SXmQbVUiPeY6qJwZKLbhLtPzqUU4NrZU/iH4KIDAzukpgsLMLqsfdXPR4l4
fxk0nSL2OfI/9g+cDT2mtyyqAJ+X8DIPPknCHzUh8xpInNTXlfvwYFMuGuz7
1tjhIQ1LY94+VewneYo2Lw/LUv+blwc/6PPyJMfP+Fd9j4auj4JN23zyoNen
9d1YBxXSX4sVPdCiYGG12NngPB90Wf3YP2mE+NvQM78LvL7A3JPSwNWXB8kz
oRP53VQwk2XdFmaZhhOWfaoOfqFYrrKHiYXki8Dl5/00bY3w67XVLRyHs4D7
0LHz6SQOe6Ww1m85k4wyK+tygh5E4Y+8QeYZcn2YiuqrdLMgZH1tf/2KVDKU
CbuI95P8O8P/T+oGVxzG/lifNXAnBrmOXJ/XTX63o+9nGGTYz/D9juxmzXMJ
eLh1eg1lPslj9+TdC8nzL5MciMxiDsd36+eNqbMFgsrkFvj9i/gnXQemiEEH
Zqr/VcmeeG+sMZOCe5zu4NYpvrDiLxWU/W4NJrPF4pTSzNqbXwmOkt0l/Ifk
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
7oeNNx6AjE/a60PGJ/fDxicBOOUEGQ==
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.7931854796686046`, 
          2.7931854796686038`}, {-1.7199475781022886`, 1.7199475781022886`}, {
          0., 0.49709275031586714`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], True}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 2}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1060000000000001, 1.2650000000000001`}, {
       1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1060000000000001, 1.2650000000000001`}, {1.9, 
         0.8}}, "latticeNorms" -> {1.26943333814738, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.08350182464460659, 0.9965076242964835}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {29, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.3450209168930866, 0.8194246776210806}, {
         0.5455643248371933, -0.045715271488334014`}}, 
        "reciprocalNorms" -> {0.8890985521235303, 0.5474763178278259}, 
        "qMaxVec" -> {5.586370959337209, 3.439895156204577}, 
        "mObliqueComponents" -> {{0.26307844913097844`, 
         0.45900720231164016`}}, "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2120000000000002`, -2.63}, {
         0.6879999999999998, -1.8300000000000003`}, {
         2.5879999999999996`, -1.0300000000000002`}, {-1.1060000000000003`, \
-1.3650000000000004`}, {0.7939999999999999, -0.5650000000000002}, {2.694, 
         0.23499999999999988`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8939999999999998, 1.165}, {1.0060000000000002`, 
         1.965}, {2.906, 2.7650000000000006`}, {-0.7879999999999997, 2.43}, {
         1.112, 3.2300000000000004`}}}, "lineTable" -> {{
           
           Line[{{-10.674000000000003`, -39.885000000000005`}, \
{-4.525999999999997, 33.485}}], 
           
           Line[{{-8.774000000000001, -39.085}, {-2.625999999999997, 
            34.285000000000004`}}], 
           
           Line[{{-6.874000000000002, -38.285000000000004`}, \
{-0.7259999999999973, 35.085}}], 
           
           Line[{{-4.974000000000002, -37.485}, {1.1740000000000026`, 
            35.885000000000005`}}], 
           
           Line[{{-3.0740000000000025`, -36.685}, {3.0740000000000025`, 
            36.685}}], 
           
           Line[{{-1.1740000000000026`, -35.885000000000005`}, {
            4.974000000000002, 37.485}}], 
           
           Line[{{0.7259999999999973, -35.085}, {6.874000000000002, 
            38.285000000000004`}}], 
           
           Line[{{2.625999999999997, -34.285000000000004`}, {
            8.774000000000001, 39.085}}], 
           
           Line[{{4.525999999999997, -33.485}, {10.674000000000003`, 
            39.885000000000005`}}]}, {
           
           Line[{{-10.674000000000003`, -39.885000000000005`}, {
            4.525999999999997, -33.485}}], 
           
           Line[{{-10.568000000000001`, -38.620000000000005`}, {
            4.631999999999997, -32.22}}], 
           
           Line[{{-10.462000000000003`, -37.355000000000004`}, {
            4.737999999999997, -30.955000000000002`}}], 
           
           Line[{{-10.356000000000002`, -36.09}, {
            4.843999999999998, -29.69}}], 
           
           Line[{{-10.250000000000002`, -34.825}, {
            4.9499999999999975`, -28.425000000000004`}}], 
           
           Line[{{-10.144000000000002`, -33.56}, {
            5.055999999999997, -27.160000000000004`}}], 
           
           Line[{{-10.038000000000002`, -32.295}, {
            5.161999999999997, -25.895000000000003`}}], 
           
           Line[{{-9.932000000000002, -31.03}, {
            5.267999999999997, -24.630000000000003`}}], 
           
           Line[{{-9.826, -29.765}, {
            5.373999999999998, -23.365000000000002`}}], 
           
           Line[{{-9.720000000000002, -28.500000000000004`}, {
            5.479999999999998, -22.100000000000005`}}], 
           
           Line[{{-9.614, -27.235000000000003`}, {
            5.585999999999998, -20.835000000000004`}}], 
           
           Line[{{-9.508000000000001, -25.970000000000002`}, {
            5.691999999999998, -19.570000000000004`}}], 
           
           Line[{{-9.402000000000001, -24.705000000000002`}, {
            5.797999999999998, -18.305000000000003`}}], 
           
           Line[{{-9.296000000000001, -23.44}, {
            5.903999999999998, -17.040000000000003`}}], 
           
           Line[{{-9.190000000000001, -22.175}, {
            6.009999999999998, -15.775000000000002`}}], 
           
           Line[{{-9.084000000000001, -20.91}, {
            6.115999999999998, -14.510000000000002`}}], 
           
           Line[{{-8.978000000000002, -19.645}, {
            6.221999999999999, -13.245000000000001`}}], 
           
           Line[{{-8.872, -18.380000000000003`}, {
            6.3279999999999985`, -11.98}}], 
           
           Line[{{-8.766, -17.115000000000002`}, {
            6.433999999999998, -10.715}}], 
           
           Line[{{-8.66, -15.850000000000001`}, {
            6.539999999999999, -9.450000000000003}}], 
           Line[{{-8.554, -14.585}, {6.645999999999999, -8.185000000000002}}], 
           Line[{{-8.448, -13.32}, {6.751999999999999, -6.920000000000001}}], 
           Line[{{-8.342, -12.055}, {6.857999999999999, -5.655}}], 
           
           Line[{{-8.236, -10.790000000000001`}, {
            6.963999999999999, -4.390000000000001}}], 
           
           Line[{{-8.13, -9.525000000000002}, {
            7.069999999999999, -3.125000000000001}}], 
           
           Line[{{-8.024000000000001, -8.260000000000002}, {
            7.175999999999999, -1.8600000000000003`}}], 
           
           Line[{{-7.918, -6.995000000000001}, {
            7.281999999999999, -0.5950000000000002}}], 
           Line[{{-7.811999999999999, -5.73}, {7.388, 0.6699999999999999}}], 
           Line[{{-7.7059999999999995`, -4.465}, {7.494, 1.935}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.494, -1.935}, {7.7059999999999995`, 4.465}}], 
           Line[{{-7.388, -0.6699999999999999}, {7.811999999999999, 5.73}}], 
           
           Line[{{-7.281999999999999, 0.5950000000000002}, {7.918, 
            6.995000000000001}}], 
           
           Line[{{-7.175999999999999, 1.8600000000000003`}, {
            8.024000000000001, 8.260000000000002}}], 
           
           Line[{{-7.069999999999999, 3.125000000000001}, {8.13, 
            9.525000000000002}}], 
           
           Line[{{-6.963999999999999, 4.390000000000001}, {8.236, 
            10.790000000000001`}}], 
           Line[{{-6.857999999999999, 5.655}, {8.342, 12.055}}], 
           Line[{{-6.751999999999999, 6.920000000000001}, {8.448, 13.32}}], 
           Line[{{-6.645999999999999, 8.185000000000002}, {8.554, 14.585}}], 
           
           Line[{{-6.539999999999999, 9.450000000000003}, {8.66, 
            15.850000000000001`}}], 
           Line[{{-6.433999999999998, 10.715}, {8.766, 17.115000000000002`}}], 
           
           Line[{{-6.3279999999999985`, 11.98}, {8.872, 
            18.380000000000003`}}], 
           
           Line[{{-6.221999999999999, 13.245000000000001`}, {
            8.978000000000002, 19.645}}], 
           
           Line[{{-6.115999999999998, 14.510000000000002`}, {
            9.084000000000001, 20.91}}], 
           
           Line[{{-6.009999999999998, 15.775000000000002`}, {
            9.190000000000001, 22.175}}], 
           
           Line[{{-5.903999999999998, 17.040000000000003`}, {
            9.296000000000001, 23.44}}], 
           
           Line[{{-5.797999999999998, 18.305000000000003`}, {
            9.402000000000001, 24.705000000000002`}}], 
           
           Line[{{-5.691999999999998, 19.570000000000004`}, {
            9.508000000000001, 25.970000000000002`}}], 
           
           Line[{{-5.585999999999998, 20.835000000000004`}, {9.614, 
            27.235000000000003`}}], 
           
           Line[{{-5.479999999999998, 22.100000000000005`}, {
            9.720000000000002, 28.500000000000004`}}], 
           Line[{{-5.373999999999998, 23.365000000000002`}, {9.826, 29.765}}], 
           
           Line[{{-5.267999999999997, 24.630000000000003`}, {
            9.932000000000002, 31.03}}], 
           
           Line[{{-5.161999999999997, 25.895000000000003`}, {
            10.038000000000002`, 32.295}}], 
           
           Line[{{-5.055999999999997, 27.160000000000004`}, {
            10.144000000000002`, 33.56}}], 
           
           Line[{{-4.9499999999999975`, 28.425000000000004`}, {
            10.250000000000002`, 34.825}}], 
           Line[{{-4.843999999999998, 29.69}, {10.356000000000002`, 36.09}}], 
           
           Line[{{-4.737999999999997, 30.955000000000002`}, {
            10.462000000000003`, 37.355000000000004`}}], 
           
           Line[{{-4.631999999999997, 32.22}, {10.568000000000001`, 
            38.620000000000005`}}], 
           
           Line[{{-4.525999999999997, 33.485}, {10.674000000000003`, 
            39.885000000000005`}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
           1.0060000000000002`, 1.965}, {{0.006972554718978642, 
           0.08321020490101855}, {0.08321020490101855, 
           0.9930274452810214}}}, {
          1, 1, {-1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
           0.7939999999999999, -0.5650000000000002}, {{0.006972554718978628, 
           0.08321020490101846}, {0.08321020490101846, 
           0.9930274452810214}}}, {
          1, 1, {1, -1}, 0.25, 3.4346609999999993`, {0.9, 
           0.7}, {-0.8939999999999998, 1.165}, {{
           0.9370461888378504, -0.24287986499977732`}, {-0.24287986499977732`,
            0.06295381116214967}}}, {
          1, 1, {-1, 1}, 0.25, 3.434661, {0.9, 0.7}, {2.694, 
           0.23499999999999988`}, {{
           0.9370461888378503, -0.24287986499977726`}, {-0.24287986499977726`,
            0.06295381116214964}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.288261000000002, {0.9, 0.7}, {2.906, 
           2.7650000000000006`}, {{0.4855102897942041, 
           0.49979000419991604`}, {0.49979000419991604`, 
           0.5144897102057959}}}, {
          1, 1, {-1, -1}, 0.25, 8.288261000000002, {0.9, 
           0.7}, {-1.1060000000000003`, -1.3650000000000004`}, {{
           0.4855102897942041, 0.49979000419991604`}, {0.49979000419991604`, 
           0.5144897102057959}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], {1, 2, {0, 0}}}, 0}}, Typeset`size$$ = {
    515., {254., 261.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        True, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
             1.0060000000000002`, 1.965}, {{0.006972554718978642, 
             0.08321020490101855}, {0.08321020490101855, 
             0.9930274452810214}}}, {
            1, 1, {-1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
             0.7939999999999999, -0.5650000000000002}, {{0.006972554718978628,
              0.08321020490101846}, {0.08321020490101846, 
             0.9930274452810214}}}, {
            1, 1, {1, -1}, 0.25, 3.4346609999999993`, {0.9, 
             0.7}, {-0.8939999999999998, 1.165}, {{
             0.9370461888378504, -0.24287986499977732`}, \
{-0.24287986499977732`, 0.06295381116214967}}}, {
            1, 1, {-1, 1}, 0.25, 3.434661, {0.9, 0.7}, {2.694, 
             0.23499999999999988`}, {{
             0.9370461888378503, -0.24287986499977726`}, \
{-0.24287986499977726`, 0.06295381116214964}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.288261000000002, {0.9, 0.7}, {2.906, 
             2.7650000000000006`}, {{0.4855102897942041, 
             0.49979000419991604`}, {0.49979000419991604`, 
             0.5144897102057959}}}, {
            1, 1, {-1, -1}, 0.25, 8.288261000000002, {0.9, 
             0.7}, {-1.1060000000000003`, -1.3650000000000004`}, {{
             0.4855102897942041, 0.49979000419991604`}, {0.49979000419991604`,
              0.5144897102057959}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 14, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJx1XXVYVU33BcEEBbvADkQQC0VFBzHA9rU7ELuxFcUExW7FQlREMZAuvXRe
4NLNNcFAUVHE/r0/7t5zPvZ8n//4PPuZZzNnnX3m7Flr3TPtbdZOWlxDTU1t
eD01NY1//w/0q3BdP6NWWA/nVWEl+3/Kaq/37+sfkMcwHlxn7u6d577J+v2w
ylidn8PjI53GWTT2KJeZJbsmOv7J5HE3LXu1SRvKZNuSbELC1qaRPCUyyx5K
k26bUnj8ZtV4pUz2+durizuTeNy1Kp4iO1LLoN/MP3IeV4N/Ob1a79sWnkzH
s727Sl4P80wlcSVTdy4NrgjK4PFA1XzYhaLrJV3uZpPxZezS3YcW7b/m0utl
XY78Sj4/P5/iwwyNZpx5opTigCfr3WXVhaJT+Szikl66eVcNjrP9wb96+TVz
eRxxtq9furdzaBaPI85rjGaPvT4kk8cR58eHLEO0ojJInhLZYmf/yIVhUhxx
fvlLM/aAtZQHcY57klHyaJf0dxHnrLItlbajcuh45iN/P2/a8DwSV7Jjtsv/
2VUpXS/ibLdIz2R/g0Iyvoxd0HWt2WROIb1eVnjVtP/1ZwUUHzbgwbJRWTEC
nkzh+Gb53+l5zEXjQD3d0r8yxPnOwZ3Fy2XZPI44v+7u3e9MLymOOA+5duq+
z2Ypjjgnn3r/vGGfHJKnRHbXOrC7gW0ujyPOsRrn1uz+Ks0HcdbV17EzuV3A
44izb/cb58Z0KKLj2fi9p+PntVSSuJIlsYtr0mZLccTZ5LNNrc4FNE8ZS3zv
ceH5w0J6vczoVP7jPdoFFB9253OHPestBDyZXfejD3t45LAHKYo17oe+c5yb
nVkyZMa/uGEccb66MGRR/A8pjjiPSp92q5Z5Lo8jzkMfZsyyKs4jeUpkfzv2
1hzpVcDjiLNlnvXft1ZFPI44TyiPPzBykZLHEec7BSv15imUdDw7ZlgY9sWe
xpXM51zy+GbbpPyIc9OpP/QKvxaQ8WXM31g9+M/gfHq97NiLxi4tbuRSfNif
4CyP9jYCnuzCnYHHf57PZpFVdV7Ocb54Z9zeMyY5PI446+Q3NPw1J5fHEeeM
oTZHUr/n8Tji3ODG6oLfRwtInhJZEx2/ga2DC3kccXZ1rHGwbHARjyPOFjVT
xn78KY1HnHXuLLPQ+lVAx7MPgfN+31+dT+JKtnz5o5zmt6T5I84vNjdotaZO
DhlfxiIeGJ+b8iqLXi/7MjIiIHR8FsWHHX56eklBjyyKJ3uSc7DPuaNZzKsK
/zcc5/ups1/qF+XyOOIclr5iTFGdfB5HnK3+eT1E65sUR5wbFw4deXFiAclT
IutdX3erZ5E0HnGetmhfsNuJPB5HnLc3Orpm1J4cHkecv2S2PdVbPYuOZzNH
NVkxzTWdxJXMJPiUz2fNNB7n60aA+deQNalkfBlznNQ3be/1VHq9TH3AP0Ne
2qZRfFj+77p939hmUDyZ537LTTNtsiGey3EOPB6zz294Po8jzkr3wae+nZfi
iPMl98murnpSHHF2tY8ZPd0jl+QpkW12XBh1tKf0dxHnLcmhT+4lpfM44uzX
Sn4k62QKjyPOE52b2ZgExNLxLGCbS9HVKZEkrmTup5u9+X5YiiPOqx+dz3Xx
jCHjy9jns5azWi5IodfLFjv3rp3/JZ3iwy66X9MyXy3gyfz1v9kteZrLVLMO
C0WcrYYNbTpyXj6PI841j2mo207K43HEWb/Gvb9fjHN4HHGW955w/cHHDJKn
RLay/xL/M94KHkec1zy4uC7XIpbHEefzvbuFHS4M4HG1//qPj2d7yXjEeSHJ
jzgvIfNBnOPI/BHnVuR6EWcNgg/ijHh6qPBniDPij3HE2QXuF8YR56VwfzGO
OFdAPVTPUyJbD/WDccT5OtQbxhHnR1CfGEdkraCeyXjmCfVfPa5kG+B5wTji
vBGer+rjy9gVeB7J9TIXeH4JPgyfd4Inw/Xhnmo94Tjfg/UE44gzrj8YR5xx
vcI44uwE61v1PCUyI1gPMY44G8H6iXHEeTqstxhHnD/D+kzGs62wnlePK9kU
WP8xjjjj+6L6+DKG7xdyvQzfRwQfFgHvL4InewDvuzDV+5HjHArvR4wjzkfg
fYpxxPkzvH8xjjiHw/u6ep4SmRLe7xhHnJdCP4BxxLkU+geMI84NoN8g49lg
6E+qx5UM+xmMI87Y/1QfX8YaQr9ErpelQ39F8GENoR8jeLLz0L+p8P/OccZ+
D+OI82/oDzGOOGM/iXHE2Rf6z+p5SmSNoV/FOOL8EPpbjCPO2A9jHHG+Df0z
Gc+w364eV7Lh0J9jHHGu2UnVz1cfX8ZGQP9PrpeNhv0CwYddg/0FwZPhfuSC
av/CcV4P+xeMI87usN/BOOJsCPsjjCPOSbCfqp7n374O9l8YR5yTYb+GccQZ
93cYR5z9YD9IxrNGsH+sHleyRNhvYhxx9oT9afXxZSwF9rPketlQ2P8SfFgJ
7JcJngz317Aft0CccT+OccSZ7N8tEGey37dAnC9W5wcsEOcN1fkEC8T5RHX+
wQJxJnyFBeJM+A0czwgfYoE4E/7EAnEmfIsF4kz4GbxeRvgcxIcR/gfxZMgX
+av4JY5zH+CXMI44GwAfhXHEuSvwVxhHnK8C31U9T4nsKvBjGEecawGfhnHE
2Qn4N4wjziXA15Hx7Czwe9XjShYHfCDGEefhwB9WH1/GtgLfSK6X9QN+kuDD
egOfSfBktQj/iThPnjav8OTEdIEXvaJ8M3GSTZrAi45eOmbPzUmpAi9qOjs/
/nYLhcCLOv0NDt1llSjwonKX8H6++ZECL7rF3Xle/KvHAi/a5vNiuZ3GY4EX
rasxe6tWjTCBF42xsrcLOBQu8KLdV93so29I/24Z+xMY3tmzRrTAi+4tydt/
5leMwIseavqgpvb7OIEX7WZVWfONR4LAi06+ek9/W4dMgRdN2eJxtt3SDIEX
7dh4/NeMGWkCLxqyP/1toH+ywIt+Mho6NfZ0vMCL/p3nGbntYYzAi6r/mnrl
Z9MYgRf1mbE1L9xfGM8cNTu0/iKLFXjRiN93bzWpjBN4UX/2rW3ArASBF511
fmaqvTJR4EXzrsy6obE+SeBFV2xzk4V8TBZ40anzGl9op6cQeNFt892s3rfO
FHjRVSExFw9tThd4UTbrT5zrtFSBF9Xp5K412jxF4EW7Wi7pvL9lksCLnmp7
ts0RHbnAizaX7wu64pco8KLLVo2WtU5IFHhR2e1VV0b0o3mU7NZ5k70DyuUC
L3pWTbOe/vckgRcdt/5NULv/mD/inHFSobd/hkLgRX3yntp+MkgVeNHNS3+9
sqqXJvCimvenFc98mC7woh9GGwWnuqQJvOi2xgsHDdqSKvCik3YU3QxzUgi8
qGbJxch2Z1MEXrRscuPkMSuTBV7U5eqmuQePJAm86Mu67TfV/ncdprxoWumL
NrViaFzJXniFPq5RIhd40b63pplmLkoSeFHvgTH7K8YlC7yoR6dBdQIyUwRe
tPfThVeN26QKvKh1odoh3fA0gRfdtT7uXC23VIEX9dtuXbC2R6rAi96evd/j
4j6FwIuOCB6UPNQpReBFnR09dsWpJQu86AH/M3/WHZULvOjJihWpMy0TBV50
0bfIbsnGCQIvOumKstHR6fECL9oouk0oS4sTeNHW7fvHXCqNE3jRZo6PZved
miDworrjxs30uJkk8KKt0r7nlFilCrzowgaGJ8wK0wVedMqQs0uNmiULvOiU
5bP29+qQJPCiDn+0ngdGJQq86J1V7XdpdE4QeNGQ4jantq6ME3jRZ7/q3Q0M
jRF4UY2ToRlfTKIFXvRiufpp97BIgRe1ztMYajY/QuBFa11eFNPjSrjAi4Y5
fwtvuYTmKWMatSYldr0SJ/Cijit+J4zckyLwojrpSWr7WZrAizoVemSemJgu
8KI384edq3MmQeBFxy05+LimY5zAi1480FDDuE2MwIv+nLXyt9u2SIEX9Rn5
bOq4mDCBF223Zuj4+86hAi9aq+R2p5jtgQIv2vXK+PXd+/kJvGgn//hD2n29
BV70ouGsX0FHgwRetFX3h50ano4SeNH0x2bygb2F62XuM40O7LRIFHjR0BMh
b4YbJwu8aPnnUT4n1igEXlS3bJzTxMBEgRcdtNpvq3ZInMCLepk9TVkxJVrg
RbVMN27WOhYu8KJmA4P2mJYGC7zorsf1X8809xZ4UccXW5NaLnejcXbuv8aV
bCfJg3gOIX8X8axP5ol43ifXhXgOJjggno0AN8p/fgacKf8ZDPeF8p94Hyn/
qYD7TvnP1lAnlP+8AnVF+U99qEPKf7aHuqX8599iVZ1T/rMFPBeU/3wEzxHl
PyvhuaP8Jz6nlP/E55rynzdgHaD8pyOsG5T/bADrDOU/nWBdovxnTVjHKP8Z
Duse5T81YJ2k/OdIWFcp/3ke1mHKf/49oVq3Kf9ZBOs85T/xvUD5T3d4j1D+
cye8dyj/OQneU5T/xPca5T/xPUj5T3xvUv6zIbxnKf/ZFN7LlP9sBe9xyn/q
wnuf8p8ToE+g/Cf2FZT/PAF9COU/90LfQvnPQ9DnUP7TEvoiyn+6Qx9F+U9f
6Lso/7kT+jTKf2JfR/lP7AMp/3kb+kbKf2KfSflP7Esp/4l9LOU/U6Hvpfzn
M+iTKf95Cfpqyn9iH075T+zbKf+JfT7lP3FfQPlP3EdQ/hP3HZT/xH0K5T9x
X0P5T9wHUf4T902U/8R9FuU/3WFfRvnPMNjHUf5zBez7KP+J+0TKf56BfSXl
Pw1gH0r5T9y3Uv4T97mU/1wJ+2LKf+I+mvKfuO+m/CfZp3NejuzrOS9HeADO
ywVW5w04LxdZnWfgvBzhJSz+B4/BeTnCe3BejvAknJf7WJ1X4bxcUHUehvNy
hLfhvBzheTgvh7wQ5T8NgUei/OcR4J0o/+kEPBXlPzWCVLwW5T97Aw9G+c8E
4M0o/6kDPBvlPw2Al6P8pwPweJT/TADej/Kfe4EnpPxnf+AVKf85BnhIyn9e
A96S8p/Ic6ors1ctOqoR9vfiiq2tav+U+Zx7veGoWi6Pb9oy4eDTzl9kXWNm
FA70zuRxxL/x4eZHG6ghb1zMn5eee/rJI/vn8fF8PX867NeVaVKe5ufHVI4w
LJcdb2c+MPplBo/j/ep7auTsvduk+PDuW9cFbPkgW949J6ugQwaZT4nsl+fg
Nh5tpfgcg5kfn7sUy4abXetmoibF8f5uKNh3b/wWKf569ManevaFMq9Cx+uz
1kpxrv/eNh8Svkuaf7eq602UaedpDSt3keJYD5U3XT5NMMqG9c5V8BX4VeGW
xXEzLP56tsQqn42uE2Q2NUItLPXOsp7jDv2QFXW7mHRhVzbPj8/FscUVDs3M
c/l4vn+8GXbIrIk0PrBq/teY57MDWa6bsul1sdIaxrp9e0l55lbhViGrt0rP
Pts3i8fxPjpHDG/68HUWz3MkZkS7Iq9UNufm6hX1TueS/EpmHn9x3n1d6bre
uI/y2nrvs6zo4h+vuglSfrzvzooaMydOl+Y5S3Uf2bBl53Z/1iiQrguel6xG
xo6VCwuk/FX38b3MV9E2f/G0bIJPiaxlbsDJfoNyeJ5mbxbotjj1mk2Xj0+d
7llA5l/GcjRq3Dctk/KrW09dYH3tlSxo0+FTbG4Oj2Nd6UQ8ihrqnEvrnE15
amvWcH8BfS6Yo32PegseSfl7Vt3ffNlB71dyebZ0X7AOdx3YraOrn0+fU+b0
Mfe5bXgBfU7Ztysxk8rjJfxDquKxsoh/7qSHHpfiWLeP57Qoa3hPyvOmcl7c
6CaVzEx/1OTpYfm0DlloXtCE2Q55rMuivnWPffgpuxG05LWD1g9Zzfd7Q47N
kfDHur1ap03fWg1z+His2+3vs+2mPpTGn6m63ofsS7qfdbJhIcWBvW7y9oHe
y0Kex8RsukdT/QpZcItVbGh8No9j3Uaz1Qdrn5Lul2VVPJ0V/Tjo2eWfIpJf
yf5Yj1v6e2+RNE9/q2WePT7LWs9eW3A3R5o/1u05zaJxjV9I9+tQ1XPxjPnX
CS7aFSflx7rdPf6kInSZlP/IinUT9+4ulcXXMbyzY2oewadEJluvmR68Qbpf
6+NtXb2PvmHxA3rHtLOn8y9ju/yLyz+4SPjcXPqP4v6Nl7K355uXDqpXIMWh
bjPia9bVqCvhbFw89MQwv49Mt9VYi0n2hXQdYDOa9r4cP1TKs7lqPrmyCX0m
373pKf1drNvK54uKHs+R5nmjaj5fmEnuk6fNfubTdYwdXdjXp56bhINV1d+N
lG1a1nrV67cSbli341wsDJubKOn6yTppa57LWZtL65CNsuxU1KEJ+v8rZBur
5v9ddrq/ed+7y6X7i3WbZLK28MnJbD4e63b61eKY557SeO+qeACLDZ4198lh
JcWBbT7cfv/l6UqeR61qPfkqM5ruu3TPWGk+WLfHnQtalLaScFDNM5fVX5tj
38uviORXMv1zwXl6yUU8j2p9/iQ7vPXSBu2PeTyOdWvQ7fqlDsH5PE9x1fr8
nKkPcE8fdFXKj3X79/ieJmb3Cnke4yp83sm6K6NG95pYQPApkTlf3HCtp6lU
D86qOmeLsm81G3exgMy/jD1putvY10DKo7rvL2SeX/7oaahL14V1u97r1rD3
ltI852QNy9Ht84nZNN6Qv/ZwPl0HWN3oXbVdnSUcQqvmmS37Zl5c65JCyo91
a2U/dvmlh1L+1OmTW+xo/5WZHQr62LIol65jrGhC+UWHptJ9dKnKI5OZjG/5
wsNEyo91W2C54kHfJVL+Ebk2M17pfGfdOs8+vMReqEM22mVmSIM/uE5+lI1U
jZc5n3+fsuyo9HexbnPazFpQkSaNx7qdZHa6Yt1vYZ4s+Y2b2m5zAQf25JP+
/H82FfI8aSocZEe31pyy+W+eNB+o22tOU0xiZ+TzPP4qnJnidrMuNuUFJL+S
NVALa9xcp0CaJ6y32nrN7OZsz+dxzh+a6Xeq3CzlGaGqE5bguKZvhIX0d7Fu
fy3ef6mzgzTPtKr14a1sckFdB+fehQSfEtn8HgH/pNaW6ry7qs7Z2LTaK/rd
yCXzL2Pma5p73GmYK80T1tt7a9zqHXOWrgvr1jb3c/DnAmn+h1XPKTOIb3eh
3/Acug6woU3febytlO5jjap1I1N20OOzqY+PlB/r1nT05qBP7/PpOsO0n0/e
/eO1sI6xqHF+tR2spfzhqnVMdm6i/8ka4yX8sW5fzqz/9/vcPLp+soYjSn6s
fJFF65B1D1/4LK4R/t1iWYuqvqtS9iRiT8uM5lJ+rNvrlY1q10nN4eOxbg8e
bHvlplE+nSfrVrPuutvbcikOrGlKhy73d0t55kB/u6XOrafJ9fN5HOv2cpdh
59eFSfnXwXprs7PfhAmLskl+JfMuiX5bNz6L5zFRvTdlmybE6F3SKOBx7vvV
XBR70F3K76qqE9ZW1zW9bWwmj/P1NpmNTTyWyfNsUr33ZfXvPF7V7J98gk+J
bO/KTlqdfKQ6V6jqnLE7esrM65lk/mWsu5FX6at3GTzPUVXfItMv/WF/JTCX
x7Fu9Z+cHPRKmcPzBKmeUzZa67567NEMug6wwGf9nbWypfzWqr5LtlX9oqXN
FKkesG57/bPvZa/JWVI9qPo6FvBs+/S2kRl0HWOHurv2ab9PwscH+ttO14z+
FkyX4li3skd5uYlb0un6yZrPazq2u1sWrUPWf1uPVfMLs1iQar8mg35YtqrV
VZvwExL+WLe4/8XxWLdRi5q1G7E2n86Tja2TFtLlYSrFgZk52nhmdEjleXA/
fvDGcu2ZGvk8jnWr5T3EKPFJHs9jqNpHMG+/GtGnC1JIfiXrEXrdacXbFJ4H
9+PtW2xY0GG6NH+s28Wnz5vaNJTq4TD0twr1Zwu7zVTwONZtu78W7mqpUn7V
8/5apm7+V3nydRbBp0R2Rs/NLXmB9By9Uu3jWMO+eVvPNlCQ+ZcxtxNl1p07
S/j0rHrunsrO/nz0eNSKdB7Huj2W8uGxZlyadL+gv931dINyRr80ug6wWUcP
fXz273jMA/tcmVHSiDf+Tsk8zvk3Q9MtG/WT6DrDfrfL8HhlnUHXMaa1rOzN
7y6ZPI8h8AlzzvcOuXQtkcexbjWD0jeNCovieRTQ33ZNym3VaHE2rUP24e5D
3wL1HM4/hJDfgyD/oOai4n/CPAM7uX/I5X+X82/AS2AerGdNkgfjTh3H1nv2
7/6LXBdzMIytofU2jOLGPB7HP3mxNILntyK/T8H8R1rMNvNq8U1Wr3d7w8kH
JF4F61+PjMf43KChI//syOB/9zDwFeMW5PXskhZJ5vPvvq+iVt7ZGlE8/wjI
05rk//uVWW/u/1FWdN0uIF6m4OPxeUmE36HgeIx/qX37XbsZCglnVd0y7QlH
c9taRfM4181H/fGU14jj+UPhecHf4/DrBX6sUerpOSGuKeR+lchWkPEY14P8
+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
8L5M/Vo+fG15BrNfPN7Va6Ymx6d0vXPHlA/S+eB4v+a+N0vRPSfNB+/X205v
RtUJzGJPPOoOzJZpcjxr1i4OSNuTT86v8TXPJud6Iz4tGrbtXakpneuN13Vh
V8KUjYfz2Y93Uem/O9fk98W0uP3g1PpSfpx/4bDvP4e6S+d38/kMnNdqrGkh
s+hwupZzuQa/jz0tdx0zuC6Nx/yfO5tVGvQoZNrRv6/2mKPGr3dZ/4IOm1tL
4zGPr03Ejg8uBawG+PewHtDnj+MxPiZ+6+qfF/LZgRkLBzQLr8FxOLX1Zc2m
YdL511gnu897lo4f9h/ng0OdLN+bl7JysRTHOtm65d2xNaXZbGRT92tls2pw
PH+927DWP0w6dxvrJPT9pNpXEqVzxrFOMtckDr/zI5fVSXtbM/6LOse5cb93
jnveSed6Y520Gr3RpHRhPo8jbq+uXq84lVXA4o+ZrHI7ps7vi80edUc9vSJy
/o6vOT2XHPHZscV0kf0PKY7XtVox/YDpGCVzHrMxbYeBOr+Pvb30mzjbSPPE
+Y+esKV+LW0lu1fwONOiw08+/68rfrQOVUrjcZ6/yg6kaIwsYmPQj0q+E4jj
8e+ufXdp5NVGhcx4mpVb+dQfHIfZrV517TpIOj8d84xZcf/Bzov5bC/UA9aJ
crDxNPVFUn6MRwz42GV5/Tyo53JeJz3tLt/r2i6Xtd3ZIDuirYTbxaMffIb0
lM4Zx/HvY3XZoLfSOelYV8qKsikB76TzwbGuouyjm60dKZ2TjvXjunzfw5GJ
0vnjWD8zPWY97ziqkHVe136dgdNvjv/TCYf3/PWXzjdH/B3bvXkafoz/ro3n
x+/44XjEc3vPq1vfrFOy62/umucH/+L365NO76cN6xeS84Z8zek57IhPqtqE
0oVOSjakal39yuc/cseqTqPKpDxYb3cGTXpXP7iIdQP/2DzyfT8cj9fr9f7O
8UZOhSysap38wq9XvnCj1QgnCQec/+Lwne/et5SuF/MX96qz5vUNCX+snxUX
owrzJknnvGOdpJrdeFVgncP6jJo1aObjSn69812ST2QbKfn5O1gPT6e0NJ3Q
XzoPHeuho0Fyn8unpPPcsR4uzls+ZHVFPvOPeFFb+9M3js+wa3YDzf2l89n5
+2jmycPanQrZlYrzNzZN/sDzFNQ4tqCB4j/OZwf837T2znZ+J+VB3KzdTYPW
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
oZOVdF14vXOq6y8WWD9TQMcxU+lBfP4+1fUgC6wfogdZYP2Ega60RaVb8evy
qa5bWWD9eFfXpyywTgpBz/pbpNIl8Xobwndj8Nw3rJPloJfxc/GgHlBfwzje
x16gx2Ec78sV0O/4+XSA50vQ+zDO9xegD2IcrzcD9MTq5+j5mheD/ohxvK4/
oFdiHO9XCOibGMf7VQF6KMY5Dwn6KcbxvoSD3srPAQT8+4E+i3HEvz7ouVT/
3dh/r+H04DRB/924Zqtlq91pgv47r2afr8fPpQr67+P5t44tOaYQ9N9veWYG
S0OTBP33ybadCY0c4gT9t/jg8ym7r0cI+m+pzsgju+IfC/pvWzjHkOq/ZzWM
VtW4KRP03/MV5RvkXcMF/ddxnqnWt6MRgv57tpGPkW2zKEH/XWe48o5NWLSg
/2r66Cz23hor6L9PZgfccuoUL+i/ofevDnfLCRP032u/PNwP78oQ9N/x92wL
lxakCfrv7QXzby3frhD033L/W5dHNo8U9N/MGfXaWXSWC/qv31+PIYa74gT9
N6zDmyHTtWMF/ZfVajaw1aEYQf89b/XDtolhjKD/Trcv6PDoQayg/5JzPzk+
2ina6UlXYwX9d6Oszj7tu3GC/pvRIH+KtlGcoP/+dG/VOzgzXtB/D630qGyp
nyjov9E7ykJqTpQL+m/i95YLdDbLBf33zly3wRFNEwX998mZVXc/KZIE/bc9
+Kyo/pum7rP6XssUQf/d0/C2zoChcYL++95kr04/z3RB/3W26/nbpShV0H/1
xmmsnTxMIei/FssuvXCNjRf031Z9HFuUGCYL+q9JZnaHWD+5oP8+XCDXfD05
UdB/fRImHtD9nijov+1dzbcbByYK+m9F4oP3Y0vlgv67DM7hpfrvlAUeC8MM
5IL+ey//z8FfkXJB/1V/viH16/FkQf81n9kkoORckqD/Vq4vs376OEnQfz8H
Vjy76pIs6L/ow6T6b88pyYe+xaYI+u9kM6/4gVOSBP1X+2bGmmtHFIL+qzfc
eGi/symC/jt2rKap3ohUQf/9Y+Gsf3RXqqD/avRdlDN4glzQf3udfySzeZwm
6L/TnjXObxeWKui/CzZOuHLsmULQf1cETN1n0E0h6L8Fa51K1nVOEfRfH8vl
xpNPJQn678Xid59c+iQL+i/6lqn+q6G90iJwe5Kg/97UXxx7qGOyoP++hHO0
qf678YTnqFpJckH/PXF6XWiQQbKg/yodap2LLJIL+q8O+L2p/nvujb11LdMk
Qf91/jg2q1+SXNB/y9c2KHyVkyTov2sbNfIvepos6L/yWw/qefVXCPpvpszv
56FJqYL+2/kDa/fXTi7ov8e2XfB5bp4q6L8rFm0ynfBAIei/Z8beNLmqpRD0
X7VVNSd31pAL+u/SdnZdakYlC/rvLQOz1ZlBckH/Pdji+gOnTUmC/ntw5Og+
ngPlgv7r8t32z6tGckH/9Wy2eU5c20RB/30Dv/ug+i+ea0/13zMGoaZT7eIF
/fc1fIeE6r8dfiY3PF0eJ+i/F/6stgx6HifovxN+Pi9vVxQr6L8XJ3/Rfe0a
L+i/I92mXGxjqRD0X7+PiXl/TyUK+q9i59y/D1OiBf037/lmEztlsqD/3sxV
lp10SRX034WAD9V/v0SGP/WySBL0374Xr9VrricX9F/HJ4s69lDGCvrvzEUX
95WEJQj6r029GYU7TWMF/de7W7s6Q6zjBf1Xc/NPnQ1ucYL+W3dt80sf42MF
/bc//L6M6r9vFgb4Os2MEfTfgnbRsUc/Rwv679TBB7S1akQL+u/FcvXT7mGR
gv5rd2WY1pLDEYL+W/vdurN+NSIF/fecp1bnR0nhgv47qKHrjfDgCEH/bTtb
Z/GvvzJB/7WNuxnjqh4j6L8BY3qv9OmdKOi/AfaTjsxeoBD034M+xyt//YeO
jPF5fZdfurUwTdB/M60ry3yWhAv6b2XGtRYxsXGC/hs9+GGvjoExgv6722H7
U9voGEH/rbh7SDZtS5Sg/16E37dS/Tdronu3yrYRgv7L+photRgeKei/d9t7
ezzzlAn67wzt/H0+jiGC/qt8bLjEyDBc0H/jH5sn924UKOi/Xa6MX9+9n5+g
/2pMDl4y8Yy3oP96jVu1xs0pRNB/Her7XxsfECDov59shpzb6R4u6L/Prfp+
+5LoI+i/W79sqLxlEyPov8NanEk9PT2e6Sn+P36HX9fiNfrr9iy/Jei/q7pO
nPfwZyK7kKIaj9dlS8Zj/dhcmrbNYl+yoP9u2nnwh2+reEH/TTvQdGDjHjGC
/rvM/1f/tZURgv7bOW1i/y6aMkH/XfuuhcGwuwGC/tsi025C0peHgv7rBL/T
xzjex2MkzvetJI73qxvJj/drO5kP3peeZP54X1aS60X8KT6I8zbAk+q/8wF/
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
RspzugA/+X/Vrrqv
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
/wCwPq1v
                 "]], 
                Polygon[CompressedData["
1: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
6P+lUL0X
                 "]], 
                Polygon[CompressedData["
1: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
n82IO68=
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1: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
04i16/nPbYk1eFWuP9fmaY2opX0/1rpDfEd8X9SYx9y+nOvPfDQd2235vC9k
fWSMbFg/1SN2Xpr+dCM8rCXmeEo95ti5f47P8nz/jN+uwjahEbHWa3rtKbm+
bqnHs9Sz/7Fevd/7g6/x/TA/m7RGzDZ2P8Jvo7nf1zl+Wb7/wvFXpD+dl+9r
qSrq60sz/3etwuf0va/g/o3w0TH18El9V38fDTfVonezf7kw/aFLFf2F8cwa
olMV8XMA/Al8RMbPa+Dv9fFG1B/D4S/gjlXUBOPgei1qBdfv0Ow/7H3Oh5+o
x5xe34icqS/r0+ZifVTft2fTd/UJa3NrTH3FGt5a3hzyayNqFGsVY9z7jViD
T6W/rFTFGqkXEWNdO+ZYc61r7JVG5FRz63LwM43w8VoROVffN0f/jn3jWuRu
axBrEWP6OlWs4QEZP1zbrq8h8Ofw4lWsr8HwZ/BiVfjQjfk+zmuEP03N/nHZ
jD/X1iOGupYfgDvl/XzdiPUxLefPWGfMM/bZA+xTRs1l7WXPeXAVNby1/OHw
KmX0DNba1tw94d/MuUXU3KuXUYNrt8c4pIr1Za5zTZzViHpyEvwd9z861+ct
+b6XqyL/3JX95CWNyDczst9boYp+2lxrzh3WiH5wYvazy1SRL26vx5oxN5l/
7q5HDr6qEfni3ryf8Zl/bsv+fFwjcpa5y55pwypihLHCmHRt5q8HMv9PasQa
d61bE05uRA9kL6SmcFgVMW2BIvzFWGeNa61rTf5hI3qsu4voKe29jOEvFdGT
G9t9Py8UoWGYqwp4JjwG/lcZPftreby9aTN8AzwQ7l1Fj3NNET2wvc82fIYZ
C/mtYX/eGvdrD7dWGT3opCJ6FHs9ezR7TXtOezc1kanwmbXQSuw53s37sRdZ
Cn4dvlz/gReGH8/xx1XR8+hP9oj2Qs7XpfDgWvSSHRj/HjwR7l9Fz/d2ET2L
vaA9/cPwKbXo9dWUHoKH1kJrWrI1crM5+sQqNJTnitCU1FYWg5+FT4f3LKOH
faCIHtznnQ++M+/n6Cp67Ltyfdh7t0v7OTnfxnxjvzWFvbI5/rn0v5U5flb2
B//ht4ktkYPNxeawOxtRg7yQ9dZNjeg530h/she1Jvu+Hj2ItZo9lr2WPePH
jajJzEXmJGs1e4S59egJ7B3UEF6vR43n8eaMxYrQ1Mwl9jBv5nh7CWtea0nj
3RON6HlvzfVuL1zBN8MnwJuUoRnclvOplqDmYG9qja8WYU9lb2WNsybzcSX8
X3gxc3wjeiB7IXu01aqoaefk/T7ViBzbroia0txrzrdWtyeyFnBOP4BXqcVc
m0M/zXhsbrWGtpbuB69ahkaiVjIk/UX/n1iEhqJ2aHz+leOXrEXvaEz3XN6z
9+71fJddjHdV5IOf65FjnT9rxmeynjW+2vPa+1pDbVLF+/H+rXleyPs199sz
PJz5wt5On1m3ivfvfPh+166iB7AXdT6stSfn+7LGnJn+92zOt6xGulERmpDa
qTXzWxnPrLX0x1ezfp6W/jIr6/Pp8Hnwu/l8a1SRH5/M57d2taawtrDHt9cf
l/7dIeOv/v18Pp+1tzX9Y1n/mJ/uaIQvmNPN7frDe3yfP+Ot/vNxzof53Z7q
y1xvM9Jfv8r1ZO9mD2ovqga9WxWa0ppF1IjmfzWQ7rl+1EbUlNcuoqZyPdiD
2ouqYahlqPmunu/PekKNZoUiemC1G3vcHpkv1G7sie2N1Xj/bITmtmrWH2px
ajLLFaFpqNWoOXYuQgNQi7QmsTYxZ5u7Xa/Wevb8G1ex/ucrwn/UXlwv39Sj
fnkx6w9rbWvKtzPflEVoNO9kvdNcRE3u89mDd818pFZpz90l7d9nPlywiHrl
1YxPr+X6u7sR+a1tzsdnjaiXmvJ53s3125rPu0EV+UXtTQ1unTI05r2L6LHs
tezh94V3qEVvb75Ri1cTOqqKeK32qCZ4bBXx370FNbAdy8hpU7Ie2SDj/TNF
aMz/zvh1UxE5cNuM93cU0UOZb90DcC9ATXl/zv8tPLAIjX+BMvLB9MxfW2X8
UztVY9wc/obxJ8N7wfOXkX+ez/MfX4XG/WRe31z8HeNPzfpqqTL2LIbkfBxQ
hX8skf75bSM0TbXNQ+COZeyRuFdyVuZj9zSGwUfUYq+jnvNtfjuiivz5YObT
vlXUC9fBo+FdM18/WoRmq3b7Y96P8bFLGZr8xrm+1Ord41kH3q8Wez+uvwOK
2HNQG/ocPjLvt1MZmtwuuT7U6tzTcG9DzX/PKjR5tV013r3hz+DeRWjmbcvQ
fPtkfblCGXPguQ/jt09aYk9h13x/7jW4J6D2qgbrXsHHLbG3ocayRxWab1/4
0FpowV+3hBasJrxkGRpur3yfvarQcLfL+1PbVePvmfev9q+mtk0RGrBamxqV
Wr+altqV8UitW81qyyrii3tL7tn8k+tvqSJiwO8Zr7pmPv0p449asRrnb43Y
0xiV68n6zvizchH9z7yMP8YnNbnNq4g/xjc1t03h/8IHF7HHMV/mh1lZb6yC
faUy5uaCIvRzfVq98MQifN36TG3ePb2TqpgzffmkIubSNePcuSZcS76zY10L
RbxLc661sjWoudh6Ui1bTfewMjRYtVh7XHtdNWu1azXak6tYM/r64CLWUqes
/6xXd8j62L0tNfsDy9CI1YrVBAeVoeGr5auRnVzGnpV7V2pkA6rYo3SvUk3p
VHhl+Me8v35l1BTWFlfz208tUX/OyvjUK+vhNzM+Wd93hz/OeHRkGRq2/bqa
q9q2NYm17OQiapWefJbAfjO/XYxtU7hjc2icY+Deqfd+VMT+ipqv2u90fhte
Ro9mLTu+iN5tDez/8P1KfhuKbS24TZ7f86nh2Mvbc9p7uidgb2WPbq+uBlPP
6w+uQgOyN7dntXfdEHv75pjfM8vYk3VvVs3n+DI0ObU5NfyhVfSMJ6R/2Uuq
0arV3sdvF2G7pIxn8Zn+KELj6JDzNayKmGVvYc9jLFPzVft9kN/OwL5Lzqc9
U5H6SHfsd9ZC61YjVSu9Db4QXiP91x7FXmULfTLvdyy2DeD5m9Mf4GXhz3I+
+8PLwbOL2MM9JsfPl+cfUoX90yL2BPrai/G5zljVHM93bhnvwnfku1o+/VGN
0v5PzbaVsZNroeWqoVXN4b8jc76/Tn93b3x1eBHs98OnV/H+Gs3h32przvfC
8E210Mp9Pws1x3obnP6m/z2gP3H8MvCvRYwfVIX/6A9qdCPKmP/O8K210OL1
x6bmeF73JvSPdvC9vvMy3uei8LW5vt0jURvUX9w7mVTGtb0H10KfKnpVe2Z7
Z3tge097RntH38fnRfTLfbBtV0auNmfby7oG7ZXtUV2brufv+T7V9Z7x4Lsi
+lf3+lzDxhJjimu7R8YD4517c1uk/6i5j+TeTiyjd3WOnCtrDu/FntNaxJhk
L/lKEbFqt/Tfp4rI5cuU0bufXcR+vfHnp4x3/u2ENYq9pz2otcsxVaxv2d7U
OXau9bFP+BztGsr4IG9aRi1iT2dvd1IZvmtMMja1lvE3BP7twEctUQN4vD28
tYE1k72ePaC1lPFyThH99iEZX38pYg7cm1u0Cu1vQOrV7kG0bY75dm9CfemS
rJ/cO3ZPc9vMb+51+jcGajNjU4+1PjuliBzi3244R86Ve1DWGwOrWJu+I9+V
+XvHzH/uzY7J9aU/6dvmk/exj6rF3qh7YFtnfnRv9/ZGaL/2QPZC1menFZGz
zF1q8mpvaqpqq6/l8ebI7au4nrHSNeJaua4RvZM9kL2Qf/Oh9qWGqpbqHtk+
WR80ZT0suwe2SxU5R9/UZ/VdY45rT5/X942hF2Q9s3wZf2OyV9YX/u2JMdm5
dw26FtX7zivC59x7tcayFji0iNprFHx3Ldaka7NT1gNHF1HbuWZdu78VkavV
/y4sol5XL7CHs5ebmXr7KVXEHmOasc0YOSH99f+xkzHHFKE/+rca7rnNTf9R
SzbmGvuMqcbWP/J5zSHu9Z9TRmwy5hn7/JubP3N/Tu3Qv8k5Nt+Pf6vTMetz
4/V+ZfSs9q7uOakl+jct7l1dVo/9PXOAsdw179p3z+DX3C9X+3ZP8J+m0LjV
ukdVocV3y/1q/0ZoaL7P9hm/nVvn+KwyajDXoGvP2sx4X2Y8Pa2Kevnw9Hf/
Nsic79p2jbpWe1TRa6tBqEWoedrLuwenFqrmqZaqpqoWas1i7WKOPLKKPf7/
a5v10GqfzP2Dd+qhFV2Ux7tnMDDXs3uL97gGytijHcn59q3F3q3XU2tVo1Wr
tZ84I+tv+z1zrs+2VO5X/g+ao8nJ
                 "]], 
                Polygon[CompressedData["
1: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
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0UkuBGEYBuDf1ObWcQBiY55ZshWhVxamNjYiLFhJ2EksOAEnYCOsOAEO
oLXWZk4gIvaeSiT11vMllar3z1cN6c2xjYIQwpbcGA6ZKwzhmD+8YKIohCt2
MMMRfnI5FsIHl/jONN+4yFcu8IXzfOYcZ+XJPMNHppjnNB84xRwnec8JZjnO
O67qvmaSl+ziCWt5xF9nPmCeOzznmayb95jiCpMc5iDb2Mk46/ltDwlmGe2m
sSQEj0IT1YRmFrOFrtDqFou+w1K2syzaFzulPDonK9jNSvawir2sZh/j7GcN
vxTXsUpxR9TFAQ5xNNo5p7nLNZ5ym7fey8j+///8A8pFM5k=
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0UcuBVAUBuAr2owZJiTmjCQmrICZEREGBt7Te1kAjwXovW5A720dSqL3
MlQSvheDP9+5OTe55+Tm1rSUNSeEELqkNzGEbodYUgj9XOQQj7jIM67wi8dc
StWL3+MhF3jAee5zjnuc5S5nOC076iluc5JbnOAmx7nBMa5zlGsc4Sozk73L
HzMM84IxnrCHy4xykBWsZpWUqgtZzCzm89u+OTxnOo8Z4nvxQznAS9amhHDF
CK8Z5Q3reMt63rGB92zkA5vYLI/qFj6xlc9s4wvb+coOvrGT71zw9i8PmWam
U2bzk3nMsEMRC1jCSpazT79fIgn///kHi6BILw==
               "]]}, {
              
              Line[{1318, 1317, 2185, 1334, 1963, 2193, 1357, 1970, 2207, 
               1382, 2222, 1380, 1404, 1983, 2237, 1428, 1989, 2252, 1452, 
               1995, 2267, 1475, 2283, 2002, 2282, 1490, 2016, 2305, 1508, 
               2327, 1506, 1530, 2037, 2342, 1552, 2045, 2357, 1576, 2372, 
               1574, 1599, 843, 1622}], 
              
              Line[{1319, 1957, 2186, 1335, 1965, 2195, 1358, 1972, 2209, 
               1383, 1977, 2224, 1405, 1985, 2239, 1429, 2254, 1430, 1453, 
               2269, 1454, 1476, 2286, 2004, 2285, 1491, 2019, 2309, 1509, 
               2031, 2329, 1531, 2039, 2344, 1553, 2359, 1554, 1577, 819, 
               1600, 2387, 1601, 1623}], 
              
              Line[{1320, 1958, 2187, 1336, 1966, 2197, 1359, 1973, 2211, 
               1384, 1979, 2226, 1406, 2241, 1409, 1431, 2256, 1434, 1455, 
               2271, 1458, 1477, 2288, 2006, 2289, 1492, 2021, 2312, 1510, 
               2032, 2331, 1532, 2346, 1535, 1555, 2047, 2361, 1578, 2375, 
               1581, 1602, 2389, 1605, 1624}], 
              
              Line[{1321, 1959, 2188, 1338, 1967, 2199, 1361, 1974, 2213, 
               1385, 2228, 1389, 1408, 2243, 1412, 1433, 2258, 1438, 1457, 
               2273, 1461, 1478, 2292, 2008, 2291, 1493, 2023, 2315, 1512, 
               2033, 2333, 1534, 2040, 2348, 1557, 2363, 1561, 1580, 2377, 
               1584, 1604, 2391, 1608, 1625}], 
              
              Line[{1322, 1960, 2189, 1339, 1968, 2201, 1362, 1975, 2215, 
               1386, 2230, 1394, 1410, 2245, 1417, 1435, 2260, 1442, 1459, 
               2275, 1465, 1479, 2294, 2010, 2295, 1494, 2025, 2318, 1513, 
               2034, 2335, 1536, 2041, 2350, 1558, 2365, 1565, 1582, 2379, 
               1588, 1606, 2393, 1612, 1626}], 
              
              Line[{1323, 1961, 2190, 1341, 1969, 2203, 1364, 2217, 1372, 
               1388, 2232, 1398, 1411, 2247, 1420, 1437, 2262, 1445, 1460, 
               2277, 1468, 1480, 2297, 2012, 2298, 1495, 2027, 2321, 1515, 
               2337, 1523, 1538, 2042, 2352, 1560, 2367, 1568, 1583, 2381, 
               1591, 1607, 2395, 1615, 1627}], 
              
              Line[{1324, 1962, 2191, 1342, 2205, 1352, 1365, 2219, 1376, 
               1390, 1981, 2234, 1413, 2249, 1424, 1439, 1994, 2264, 1462, 
               2280, 1471, 1481, 2301, 2014, 2303, 1496, 2324, 1503, 1516, 
               2035, 2339, 1539, 2354, 1548, 1562, 2369, 1571, 1585, 2383, 
               1594, 1609, 2397, 1618, 1628}], 
              
              Line[{1326, 1333, 2194, 1345, 1356, 2208, 1368, 1381, 2223, 
               1393, 1403, 2238, 1416, 2253, 1990, 1441, 1451, 2268, 1464, 
               1474, 2284, 1483, 2307, 2308, 2018, 1498, 2328, 2030, 1519, 
               1529, 2343, 1542, 2358, 2046, 1564, 1575, 2373, 1587, 1598, 
               2386, 1611, 1621, 2399, 1630}], 
              
              Line[{1327, 1337, 2196, 1346, 1360, 2210, 1369, 2225, 1978, 
               1395, 1407, 2240, 1418, 1432, 2255, 1443, 1456, 2270, 1466, 
               2287, 2005, 1484, 2310, 2020, 2311, 1499, 1511, 2330, 1520, 
               1533, 2345, 1543, 1556, 2360, 1566, 1579, 2374, 1589, 1603, 
               2388, 1613, 2400, 2064, 1631}], 
              
              Line[{1328, 1340, 2198, 1348, 1363, 2212, 1371, 1387, 2227, 
               1397, 2242, 1986, 1419, 1436, 2257, 1444, 2272, 1997, 1467, 
               2290, 2007, 1485, 2313, 2022, 2314, 1500, 1514, 2332, 1522, 
               1537, 2347, 1545, 1559, 2362, 1567, 2376, 2053, 1590, 2390, 
               2058, 1614, 2401, 2065, 1632}], 
              
              Line[{1329, 1343, 2200, 1349, 1366, 2214, 1373, 1391, 2229, 
               1399, 1414, 2244, 1421, 2259, 1991, 1446, 2274, 1998, 1469, 
               2293, 2009, 1486, 2317, 2024, 2316, 1501, 1517, 2334, 1524, 
               1540, 2349, 1546, 2364, 2048, 1569, 2378, 2054, 1592, 2392, 
               2059, 1616, 2402, 2066, 1633}], 
              
              Line[{1330, 1347, 2202, 1351, 1370, 2216, 1375, 1396, 2231, 
               1400, 2246, 1987, 1423, 2261, 1992, 1447, 2276, 1999, 1470, 
               2296, 2011, 1487, 2319, 2026, 2320, 1502, 1521, 2336, 1526, 
               1544, 2351, 1547, 2366, 2049, 1570, 2380, 2055, 1593, 2394, 
               2060, 1617, 2403, 2067, 1634}], 
              
              Line[{1331, 1350, 2204, 1353, 1374, 2218, 1377, 2233, 1980, 
               1401, 1422, 2248, 1425, 2263, 1993, 1448, 2278, 2000, 1472, 
               2299, 2013, 1488, 2322, 2028, 2323, 1504, 1525, 2338, 1527, 
               2353, 2043, 1549, 2368, 2050, 1572, 2382, 2056, 1595, 2396, 
               2061, 1619, 2404, 2068, 1635}], 
              
              Line[{1332, 1354, 2183, 1355, 1378, 2220, 1379, 2235, 1982, 
               1402, 2250, 1988, 1426, 1449, 2265, 1450, 2279, 2001, 1473, 
               2302, 2015, 1489, 2325, 2029, 2300, 1505, 2340, 2036, 1528, 
               2355, 2044, 1550, 2370, 2051, 1573, 1596, 2384, 1597, 2398, 
               2062, 1620, 2405, 2069, 1636}], 
              
              Line[{1629, 2063, 2385, 1610, 2057, 2371, 1586, 2052, 2356, 
               1563, 2341, 1551, 1541, 2038, 2326, 1518, 2304, 1507, 1497, 
               2281, 2017, 2306, 1482, 2003, 2266, 1463, 1996, 2251, 1440, 
               2236, 1427, 1415, 1984, 2221, 1392, 1976, 2206, 1367, 1971, 
               2192, 1344, 1964, 2184, 1325}], 
              
              Line[{1638, 1637, 2408, 1654, 2076, 2416, 1677, 2083, 2430, 
               1702, 2445, 1700, 1724, 2096, 2460, 1748, 2102, 2475, 1772, 
               2108, 2490, 1795, 2507, 2116, 2506, 1810, 2129, 2505, 1828, 
               2550, 1826, 1850, 2150, 2565, 1872, 2158, 2580, 1896, 2595, 
               1894, 1919, 1275, 1942}], 
              
              Line[{1639, 2070, 2409, 1655, 2078, 2418, 1678, 2085, 2432, 
               1703, 2090, 2447, 1725, 2098, 2462, 1749, 2477, 1750, 1773, 
               2492, 1774, 1796, 2509, 2118, 2508, 1811, 2132, 2532, 1829, 
               2144, 2552, 1851, 2152, 2567, 1873, 2582, 1874, 1897, 1251, 
               1920, 2610, 1921, 1943}], 
              Line[{1640, 2071, 2410, 1656, 2079, 2420, 1679, 2086, 2434, 
               1704, 2092, 2449, 1726, 2464, 1729, 1751, 2479, 1754, 1775, 
               2494, 1778, 1797, 2511, 2120, 2512, 1812, 2134, 2535, 1830, 
               2145, 2554, 1852, 2569, 1855, 1875, 2160, 2584, 1898, 2598, 
               1901, 1922, 2612, 1925, 1944}], 
              
              Line[{1641, 2072, 2411, 1658, 2080, 2422, 1681, 2087, 2436, 
               1705, 2451, 1709, 1728, 2466, 1732, 1753, 2481, 1758, 1777, 
               2496, 1781, 1798, 2516, 2122, 2515, 1813, 2136, 2538, 1832, 
               2146, 2556, 1854, 2153, 2571, 1877, 2586, 1881, 1900, 2600, 
               1904, 1924, 2614, 1928, 1945}], 
              
              Line[{1642, 2073, 2412, 1659, 2081, 2424, 1682, 2088, 2438, 
               1706, 2453, 1714, 1730, 2468, 1737, 1755, 2483, 1762, 1779, 
               2498, 1785, 1799, 2518, 2124, 2519, 1814, 2138, 2541, 1833, 
               2147, 2558, 1856, 2154, 2573, 1878, 2588, 1885, 1902, 2602, 
               1908, 1926, 2616, 1932, 1946}], 
              
              Line[{1643, 2074, 2413, 1661, 2082, 2426, 1684, 2440, 1692, 
               1708, 2455, 1718, 1731, 2470, 1740, 1757, 2485, 1765, 1780, 
               2500, 1788, 1800, 2520, 2126, 2521, 1815, 2140, 2544, 1835, 
               2560, 1843, 1858, 2155, 2575, 1880, 2590, 1888, 1903, 2604, 
               1911, 1927, 2618, 1935, 1947}], 
              
              Line[{1644, 2075, 2414, 1662, 2428, 1672, 1685, 2442, 1696, 
               1710, 2094, 2457, 1733, 2472, 1744, 1759, 2107, 2487, 1782, 
               2502, 1791, 1801, 2527, 2128, 2525, 1816, 2547, 1823, 1836, 
               2148, 2562, 1859, 2577, 1868, 1882, 2592, 1891, 1905, 2606, 
               1914, 1929, 2620, 1938, 1948}], 
              
              Line[{1646, 1653, 2417, 1665, 1676, 2431, 1688, 1701, 2446, 
               1713, 1723, 2461, 1736, 2476, 2103, 1761, 1771, 2491, 1784, 
               2489, 1793, 1803, 2529, 2130, 2531, 1818, 2551, 2143, 1839, 
               1849, 2566, 1862, 2581, 2159, 1884, 1895, 2596, 1907, 1918, 
               2609, 1931, 1941, 2622, 1950}], 
              
              Line[{1647, 1657, 2419, 1666, 1680, 2433, 1689, 2448, 2091, 
               1715, 1727, 2463, 1738, 1752, 2478, 1763, 1776, 2493, 1786, 
               2510, 2117, 1804, 2533, 2133, 2534, 1819, 1831, 2553, 1840, 
               1853, 2568, 1863, 1876, 2583, 1886, 1899, 2597, 1909, 1923, 
               2611, 1933, 2623, 2177, 1951}], 
              
              Line[{1648, 1660, 2421, 1668, 1683, 2435, 1691, 1707, 2450, 
               1717, 2465, 2099, 1739, 1756, 2480, 1764, 2495, 2110, 1787, 
               2513, 2119, 1805, 2536, 2135, 2537, 1820, 1834, 2555, 1842, 
               1857, 2570, 1865, 1879, 2585, 1887, 2599, 2166, 1910, 2613, 
               2171, 1934, 2624, 2178, 1952}], 
              
              Line[{1649, 1663, 2423, 1669, 1686, 2437, 1693, 1711, 2452, 
               1719, 1734, 2467, 1741, 2482, 2104, 1766, 2497, 2111, 1789, 
               2514, 2121, 1806, 2540, 2137, 2539, 1821, 1837, 2557, 1844, 
               1860, 2572, 1866, 2587, 2161, 1889, 2601, 2167, 1912, 2615, 
               2172, 1936, 2625, 2179, 1953}], 
              
              Line[{1650, 1667, 2425, 1671, 1690, 2439, 1695, 1716, 2454, 
               1720, 2469, 2100, 1743, 2484, 2105, 1767, 2499, 2112, 1790, 
               2517, 2123, 1807, 2542, 2139, 2543, 1822, 1841, 2559, 1846, 
               1864, 2574, 1867, 2589, 2162, 1890, 2603, 2168, 1913, 2617, 
               2173, 1937, 2626, 2180, 1954}], 
              
              Line[{1651, 1670, 2427, 1673, 1694, 2441, 1697, 2456, 2093, 
               1721, 1742, 2471, 1745, 2486, 2106, 1768, 2501, 2113, 1792, 
               2522, 2125, 1808, 2545, 2141, 2546, 1824, 1845, 2561, 1847, 
               2576, 2156, 1869, 2591, 2163, 1892, 2605, 2169, 1915, 2619, 
               2174, 1939, 2627, 2181, 1955}], 
              
              Line[{1652, 1674, 2406, 1675, 1698, 2443, 1699, 2458, 2095, 
               1722, 2473, 2101, 1746, 1769, 2488, 1770, 2503, 2115, 1794, 
               2523, 2127, 1809, 2548, 2142, 2524, 1825, 2563, 2149, 1848, 
               2578, 2157, 1870, 2593, 2164, 1893, 1916, 2607, 1917, 2621, 
               2175, 1940, 2628, 2182, 1956}], 
              
              Line[{1949, 2176, 2608, 1930, 2170, 2594, 1906, 2165, 2579, 
               1883, 2564, 1871, 1861, 2151, 2549, 1838, 2526, 1827, 1817, 
               2131, 2530, 2528, 1802, 2504, 2114, 1783, 2109, 2474, 1760, 
               2459, 1747, 1735, 2097, 2444, 1712, 2089, 2429, 1687, 2084, 
               2415, 1664, 2077, 2407, 1645}]}, {
              
              Line[{453, 754, 2340, 751, 2338, 750, 747, 746, 2336, 743, 2334,
                742, 739, 738, 2332, 735, 2330, 734, 731, 2328, 730, 2304, 
               723, 722, 2324, 717, 2321, 716, 711, 2318, 710, 705, 704, 2315,
                699, 2312, 698, 693, 2309, 692, 687, 2305, 684, 728}], 
              
              Line[{466, 2300, 725, 721, 2323, 719, 715, 2320, 713, 709, 707, 
               2316, 703, 2314, 701, 697, 2311, 695, 691, 2308, 689, 2281, 
               681, 2303, 679, 675, 673, 2298, 669, 667, 2295, 663, 2291, 661,
                657, 655, 2289, 651, 2285, 649, 645, 2282, 642, 686}], 
              
              Line[{468, 450, 2185, 452, 2186, 451, 454, 455, 2187, 456, 457, 
               2188, 458, 459, 2189, 460, 461, 2190, 462, 463, 2191, 464, 
               2184, 470, 2194, 471, 474, 2196, 475, 2198, 478, 479, 482, 
               2200, 483, 2202, 486, 487, 490, 2204, 491, 494, 2183, 495}], 
              
              Line[{497, 467, 2193, 469, 472, 2195, 473, 476, 2197, 477, 480, 
               2199, 481, 484, 2201, 485, 488, 2203, 489, 2205, 492, 493, 
               2192, 499, 2208, 500, 503, 2210, 504, 507, 2212, 508, 511, 
               2214, 512, 515, 2216, 516, 519, 2218, 520, 2220, 523, 524}], 
              
              Line[{526, 496, 2207, 498, 501, 2209, 502, 505, 2211, 506, 509, 
               2213, 510, 513, 2215, 514, 2217, 517, 518, 2219, 521, 522, 
               2206, 528, 2223, 529, 532, 2225, 533, 536, 2227, 537, 2229, 
               540, 541, 544, 2231, 545, 2233, 548, 549, 2235, 552, 553}], 
              
              Line[{555, 525, 2222, 527, 530, 2224, 531, 534, 2226, 535, 538, 
               2228, 539, 2230, 542, 543, 2232, 546, 547, 2234, 550, 551, 
               2221, 557, 2238, 558, 561, 2240, 562, 565, 2242, 566, 569, 
               2244, 570, 2246, 573, 574, 2248, 577, 578, 2250, 581, 582}], 
              
              Line[{584, 554, 2237, 556, 559, 2239, 560, 563, 2241, 564, 2243,
                567, 568, 571, 2245, 572, 2247, 575, 576, 2249, 579, 580, 
               2236, 586, 2253, 587, 590, 2255, 591, 594, 2257, 595, 598, 
               2259, 599, 2261, 602, 603, 2263, 606, 607, 2265, 610, 611}], 
              Line[{613, 583, 2252, 585, 588, 2254, 589, 2256, 592, 593, 2258,
                596, 597, 2260, 600, 601, 2262, 604, 605, 2264, 608, 609, 
               2251, 615, 2268, 616, 619, 2270, 620, 623, 2272, 624, 2274, 
               627, 628, 631, 2276, 632, 2278, 635, 636, 2279, 639, 640}], 
              
              Line[{643, 612, 2267, 614, 2269, 617, 618, 621, 2271, 622, 2273,
                625, 626, 2275, 629, 630, 2277, 633, 634, 637, 2280, 638, 
               2266, 646, 2284, 647, 652, 2287, 653, 658, 2290, 659, 2293, 
               664, 665, 2296, 670, 671, 676, 2299, 677, 2302, 682, 683}], 
              
              Line[{685, 2283, 641, 644, 2286, 648, 650, 654, 2288, 656, 2292,
                660, 662, 666, 2294, 668, 672, 2297, 674, 2301, 678, 680, 688,
                2306, 2307, 690, 2310, 694, 696, 2313, 700, 702, 706, 2317, 
               708, 2319, 712, 714, 2322, 718, 720, 2325, 724, 465}], 
              
              Line[{726, 783, 2355, 780, 779, 2353, 776, 775, 2351, 772, 2349,
                771, 768, 2347, 767, 764, 2345, 763, 760, 2343, 759, 2326, 
               753, 752, 2339, 749, 748, 2337, 745, 2335, 744, 741, 740, 2333,
                737, 2331, 736, 733, 2329, 732, 729, 2327, 727, 757}], 
              
              Line[{755, 812, 2370, 809, 808, 2368, 805, 804, 2366, 801, 2364,
                800, 797, 2362, 796, 793, 2360, 792, 789, 2358, 788, 2341, 
               782, 781, 2354, 778, 777, 2352, 774, 773, 2350, 770, 2348, 769,
                766, 2346, 765, 762, 2344, 761, 758, 2342, 756, 786}], 
              
              Line[{784, 841, 2384, 838, 837, 2382, 834, 2380, 833, 830, 829, 
               2378, 826, 2376, 825, 822, 2374, 821, 818, 2373, 817, 2356, 
               811, 810, 2369, 807, 806, 2367, 803, 802, 2365, 799, 798, 2363,
                795, 2361, 794, 791, 2359, 790, 787, 2357, 785, 815}], 
              
              Line[{813, 870, 2398, 867, 866, 2396, 863, 862, 2394, 859, 858, 
               2392, 855, 854, 2390, 851, 2388, 850, 847, 2386, 846, 2371, 
               840, 839, 2383, 836, 835, 2381, 832, 831, 2379, 828, 827, 2377,
                824, 823, 2375, 820, 819, 816, 2372, 814, 844}], 
              
              Line[{842, 884, 2405, 883, 2404, 882, 881, 880, 2403, 879, 2402,
                878, 877, 876, 2401, 875, 874, 2400, 873, 2399, 872, 2385, 
               869, 868, 2397, 865, 864, 2395, 861, 860, 2393, 857, 856, 2391,
                853, 2389, 852, 849, 848, 2387, 845, 843, 871}], 
              
              Line[{888, 1186, 2563, 1183, 2561, 1182, 1179, 1178, 2559, 1175,
                2557, 1174, 1171, 1170, 2555, 1167, 2553, 1166, 1163, 2551, 
               1162, 2526, 1155, 1154, 2547, 1149, 2544, 1148, 1143, 2541, 
               1142, 1137, 1136, 2538, 1131, 2535, 1130, 1125, 2532, 1124, 
               1119, 2505, 1116, 1160}], 
              
              Line[{901, 2524, 1157, 1153, 2546, 1151, 1147, 2543, 1145, 1141,
                1139, 2539, 1135, 2537, 1133, 1129, 2534, 1127, 1123, 2531, 
               1121, 2530, 1114, 2525, 1110, 1108, 2521, 1104, 1102, 2519, 
               1098, 2515, 1096, 1092, 1090, 2512, 1086, 2508, 1084, 1080, 
               2506, 1077, 1118}], 
              
              Line[{903, 885, 2408, 887, 2409, 886, 889, 890, 2410, 891, 892, 
               2411, 893, 894, 2412, 895, 896, 2413, 897, 898, 2414, 899, 
               2407, 905, 2417, 906, 909, 2419, 910, 2421, 913, 914, 917, 
               2423, 918, 2425, 921, 922, 925, 2427, 926, 929, 2406, 930}], 
              
              Line[{932, 902, 2416, 904, 907, 2418, 908, 911, 2420, 912, 915, 
               2422, 916, 919, 2424, 920, 923, 2426, 924, 2428, 927, 928, 
               2415, 934, 2431, 935, 938, 2433, 939, 942, 2435, 943, 946, 
               2437, 947, 950, 2439, 951, 954, 2441, 955, 2443, 958, 959}], 
              
              Line[{961, 931, 2430, 933, 936, 2432, 937, 940, 2434, 941, 944, 
               2436, 945, 948, 2438, 949, 2440, 952, 953, 2442, 956, 957, 
               2429, 963, 2446, 964, 967, 2448, 968, 971, 2450, 972, 2452, 
               975, 976, 979, 2454, 980, 2456, 983, 984, 2458, 987, 988}], 
              
              Line[{990, 960, 2445, 962, 965, 2447, 966, 969, 2449, 970, 973, 
               2451, 974, 2453, 977, 978, 2455, 981, 982, 2457, 985, 986, 
               2444, 992, 2461, 993, 996, 2463, 997, 1000, 2465, 1001, 1004, 
               2467, 1005, 2469, 1008, 1009, 2471, 1012, 1013, 2473, 1016, 
               1017}], 
              
              Line[{1019, 989, 2460, 991, 994, 2462, 995, 998, 2464, 999, 
               2466, 1002, 1003, 1006, 2468, 1007, 2470, 1010, 1011, 2472, 
               1014, 1015, 2459, 1021, 2476, 1022, 1025, 2478, 1026, 1029, 
               2480, 1030, 1033, 2482, 1034, 2484, 1037, 1038, 2486, 1041, 
               1042, 2488, 1045, 1046}], 
              
              Line[{1048, 1018, 2475, 1020, 1023, 2477, 1024, 2479, 1027, 
               1028, 2481, 1031, 1032, 2483, 1035, 1036, 2485, 1039, 1040, 
               2487, 1043, 1044, 2474, 1050, 2491, 1051, 1054, 2493, 1055, 
               1058, 2495, 1059, 2497, 1062, 1063, 1066, 2499, 1067, 2501, 
               1070, 1071, 2503, 1074, 1075}], 
              
              Line[{1078, 1047, 2490, 1049, 2492, 1052, 1053, 1056, 2494, 
               1057, 2496, 1060, 1061, 2498, 1064, 1065, 2500, 1068, 1069, 
               2502, 1072, 2504, 1073, 2489, 1081, 1082, 2510, 1087, 1088, 
               2513, 1093, 2514, 1094, 1099, 2517, 1100, 1105, 1106, 2522, 
               1111, 2523, 1112, 1115}], 
              
              Line[{1117, 2507, 1076, 1079, 2509, 1083, 1085, 1089, 2511, 
               1091, 2516, 1095, 1097, 1101, 2518, 1103, 1107, 2520, 1109, 
               1113, 2527, 2528, 2529, 1120, 1122, 2533, 1126, 1128, 2536, 
               1132, 1134, 1138, 2540, 1140, 2542, 1144, 1146, 2545, 1150, 
               1152, 2548, 1156, 900}], 
              
              Line[{1158, 1215, 2578, 1212, 1211, 2576, 1208, 1207, 2574, 
               1204, 2572, 1203, 1200, 2570, 1199, 1196, 2568, 1195, 1192, 
               2566, 1191, 2549, 1185, 1184, 2562, 1181, 1180, 2560, 1177, 
               2558, 1176, 1173, 1172, 2556, 1169, 2554, 1168, 1165, 2552, 
               1164, 1161, 2550, 1159, 1189}], 
              
              Line[{1187, 1244, 2593, 1241, 1240, 2591, 1237, 1236, 2589, 
               1233, 2587, 1232, 1229, 2585, 1228, 1225, 2583, 1224, 1221, 
               2581, 1220, 2564, 1214, 1213, 2577, 1210, 1209, 2575, 1206, 
               1205, 2573, 1202, 2571, 1201, 1198, 2569, 1197, 1194, 2567, 
               1193, 1190, 2565, 1188, 1218}], 
              
              Line[{1216, 1273, 2607, 1270, 1269, 2605, 1266, 2603, 1265, 
               1262, 1261, 2601, 1258, 2599, 1257, 1254, 2597, 1253, 1250, 
               2596, 1249, 2579, 1243, 1242, 2592, 1239, 1238, 2590, 1235, 
               1234, 2588, 1231, 1230, 2586, 1227, 2584, 1226, 1223, 2582, 
               1222, 1219, 2580, 1217, 1247}], 
              
              Line[{1245, 1302, 2621, 1299, 1298, 2619, 1295, 1294, 2617, 
               1291, 1290, 2615, 1287, 1286, 2613, 1283, 2611, 1282, 1279, 
               2609, 1278, 2594, 1272, 1271, 2606, 1268, 1267, 2604, 1264, 
               1263, 2602, 1260, 1259, 2600, 1256, 1255, 2598, 1252, 1251, 
               1248, 2595, 1246, 1276}], 
              
              Line[{1274, 1316, 2628, 1315, 2627, 1314, 1313, 1312, 2626, 
               1311, 2625, 1310, 1309, 1308, 2624, 1307, 1306, 2623, 1305, 
               2622, 1304, 2608, 1301, 1300, 2620, 1297, 1296, 2618, 1293, 
               1292, 2616, 1289, 1288, 2614, 1285, 2612, 1284, 1281, 1280, 
               2610, 1277, 1275, 1303}]}, {}, {}, {}, {}, {}}}, 
           VertexNormals -> CompressedData["
1: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
PX9o0g/n9BlNyLngnXzl/haMl1wc4eswAjLjb2tzpepRv3jQ4fhAC27ZODU+
8mAExvk3SiZGVmH56SMGB05W4wzPCvt9OkQnXDh7u/1bAdapP3aaCWWovvPK
bNlECmTpeuIaup7Iqmc9XX8oo+tP6kvXP3Z2xMMpnXIgDfOE06kOpripkj1E
F202O2JZt7cU7v8ZeJZ/qxmE76jwty8geCiUormYNx1OaYt7t+xthN6pYO20
/RRMen9Rfx17F8/c0PLScKmHn2Iy/ZJ2pM+/VSueGslDZxGhPccoJjieODtu
RPotju5PDKP7EwKn+1OX7me0o/sZHab7+Rbd//iW7n9k9f/cVud7c+va8GhB
4PMlRxrR6TjjiKbaCNzg3M2VNtCEIe8PMTa+rsMXGy0ytatGwNh60LBcvgor
hvbMmOlSjncvj4bJ21Jw7U2GjkpQDqr5F1z9bcXAS3fton50EV26Tusi38J7
uLzkb9Pd27YY7PObX/gv0W80PkAwjQ/AwodGGk9gE40nwMKT9TT+wDT+AAt/
NJ/HpQ6opyMfU2o9f38RJGu0199qJD6lzEXsmmMNPjmyVtZuwByGtKfe+QeR
/h/1WjrQ+AhNRNWsi8JTQSA5bV7lUgrU9nYnO63qxPvf60v+GGaihfYma/3L
I7Ccxls0pPEWWXibTeMzTuMz3p/G50oaz7GZxnNcNY3n0Yff3U7JbcSmrODE
SJF8vNa0c/dvNQpE7U6/PHS8CjM3zJpNzWVizJ7ur6VEHyo8vLd84bpEVBWt
kZlXFQ4NLc/FdUgf/hTNTQvcdhspc5Okvg1X4GeQloUmqefGKq0UuZZEGBZP
khDyzwbGA5Oh1CGio2i+gwya74DFd1Um//Ijntn2Lz8Cix9jPYzmj6nn4Oo9
hW2Z9xPA0YSLewmZh+OOfWhiaBV+0Wx1iVCIwVl+YRzD8RQsPS1toxVbj7+r
xTfo+aShx9J3CeKnKEil+R1daX7H3dP87iJa13EqpgWDwi7rXmQU4jWNvt2b
J0fAe9ucpQapj5A6GpsnblyMjIBHQrqzKJhN6w2c1hvI0hsfaX2ChrQ+QZY+
sT1T73KwMgd92Gf2vRqzgkNvT3dv+ESB9nbH2U0vjHFs8ZaukW0ZIG1RIBI8
RnjK4V+9BEG0XgKWXgqh9RWE0PoKWPrqkfKHhVYZWSBYWjvralAeGLa/5OMn
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
Z2l4qY/3ZBOkYUNtsLod4bPHXkrPjbmfjfkeCVIf9ySgkkXBl1xih1cpHo2y
FI9GBo8Oofg+FlB8Hxl8P5dZ8F1cZDb2bt1C1+OJQ+Zf6TcmiR/5bgkRryvP
xCk/zV6aVDLyu25ZcJfY7e/6+xpf6/wh6nXzfKXEUjh57YPJkjw6nKd4FupS
PAsuzPKsp21r3bsX2cPnOcN7miaKYFwrfICb7EMmVZdAFaougf9Xl6DqHihL
1T2QUfdwfbW293qgI/Z/L4ias6IQWPiO9iQSvGoWtdtLYNAfJ0oiFQ+k0SBs
34KcUMKbTJ+1X/YfKkD/nTs/DwrGYmpK/Ze35Lyar0aXH57Iw+hz5nYPv8ei
mKe2XAaxkz2XIn/6Z4Wjx3S1godALiRm2CycIvvgs9Pie9GjRPThduywGE6D
CiUH37mE95XbTIjLJ+Vhyp2fiYt3JiDnI7dDnwiumDMnXJnem4uyh8TjjXwS
cVJ/uSdnG8EJPa9VdNIzcKQi7Vry6XjQohWfX/eRDoc2f9N5sjADWfepcz0Q
jISC5t7o3C+EX7iuuPdHNAc1009LLauKxy3+eYmnye86LhR4qz4mBwMSkvzd
RRNwe7vRtoJXdHh9ufLGUtYMnO/r6nr5egj4GOXt1x+gg+NhmQVXZbJwf5C/
vF2kHrSqNW1rJeun0k+eC47LxcQqmeYatgTsKTzoONNOh7e87Ec+rcxFt1wT
e9uLiVgwdKP6YQfJC4o9Y3Z7MlHhWn1Eu6QVWqhuU+ccJPlovr2FJ8GrbNvq
n5/KfoC79jAv2DVE7Hn66YsDcdnIG3QqzkI7DjM2eIkUkv08fn5t7+Nv2dgS
hdAgHIN7kgdWuBC7Kt6t58sllI68Xhnxpz96YNOFTz7+w+Q7qfoq2lP1VWTU
V33p0uODZdkoOTnQpJobidw9lydd35G/q1LX9LAsCY/KO7J9yMxEHqlXXEu6
6XBqxZgmjesRZDzZbytyLhtqbmvmKpNzXEvVtSCLqmsBo65lMZO90SXMESyc
OZY+0cmCuh0ygpxk33ypOjCyU3VgZNSBOak6MypSdWZk1JnvmYdLedy+CRaN
Sn4+B7NghK1WJZask68ppy1S54wK8mq6USypwOawgkOLvF8THS/9xTwWy8pN
+Jq6wlF1ZUZ98hgdkL71Gn9CONata2LO/BKJrkEtEyu+0+Fco1B6k6w/sq74
4twrnAgiQ1G7Jcn7ta8P1+vZ+GLQ5jPzc7nj4XGj2tk1E3QQMVujoh8WhCUT
Hnu45kRjhRV7YAVZJ07WZWT8ejBeOp1RF50bi+bHs0qqyD7H+NbnWm3ywrWR
PLE6GuHQd6Jp+OEUHb4MqnoEpT/BAydOetn3h8BVV+2PTtN0sFWVP3/BNxwF
NftjJmyTMLrelbWbTvCn7UhLqFYEnucB11WtSSiReGD31r99Ipmp2nVMHiic
ssiMdsEXVMzze3f9JjxXZ/RkpuYDfJ9mOiIq50X2V8qa/c/f++baDC5NR2KH
Q8gNCUzCjn0DR/7Oi7NjOm96aF4CGtfWV413JmHMDyFBDmL/ogs3f9e7boO7
XZQXRabdB1njA2ddZsg+nBnes32hMR7PE+1xyb8BXZPxku/I880T5irBdxIw
ev/kfRv2RDy7p+neTmLnM6/CPgSGpuJrg+XnuW+looLSoam6DwT/iLmu/V3t
CjTZGFSQvQi6o5XPL5J1BKh+Fsik/dfPQkY/67lE9cjrW2kY+Mv+T3RlKrI0
OX9L7iF8qpn1XbKMC27JsuQsrMjEZXceqF3vJ/GQ6n/BN6r/BYz+VwzVR4Ar
VB8BGH2ErwGJxhfc42CBgN6Wve2J4JK0eBsL8UcOqu8G06b/9d2Q0Xfrp/p6
IEj19ZDR19smWiZe8zYSou5bGeTpJUKV5q+LbuS8ip3W5u48HQ3zjA7CmzeJ
UCH7NVmW7H/Wh0kFbdUI2HRUKf5Yqi+u+rpG8+4kHUqPyDv6CkbB4jJ2u9Cj
wSjyzX2fyA86SM4rKqrhioVL/QasfGWxcLZJXV9hhA482tv9DurHQHj8nsDn
ArFAP3qrZyvxi6Yc2x0CZSFw8oSlPLN2NKom73m+nNhtgIf1l/bCYDitOpiz
sTwOa0bFYZTY/8XLxpyqeXFQCeJ3i/SiYI2jkYIGWSeJefLlt20JMK0wvuLV
7ijQvuwSfpj83R1W2e6sz/3gcOBmUa/SFKztlbddQ5437p73q2GFKxS7X2sa
8MtCueH2git95Bx7xyXanJJh8Z+7bDc5w2Hmz444abI/Mf3OW0fPpsDkwl5O
o5RQ2L1f/sJLsj+yd8VPJHgYYcR1WBdQko1MS27snU/OUSvo9W5NIy9M3tZi
s7A1G1d85frtRvJCmrH/TcfEdJiKfF/bk+EPkz3pJtfIOa6+4D5n7eYMKA9U
8dy6zQ+ErE4NhxP7lDry8Jq5Qhj2XNgU7O5Bw4r2tat1Cd7ecC/up95UNJpw
bUl23JCHMakPZR6SfCRA9eXhPNWXB0Zf/gOlH4BgSj8ADP3Avmcb1vpsjcb1
NX2rnJWyUUT73oI3JN7GUToW8KB0LMjQsczqDWCc0hsAQ2/ARvVtoYPq2wKj
bzurc4A1lM4BGDqHA5TOAXwonQMwdA5clI4CnlA6CmToKJQoHQXM6iiAoaMY
pXQakEfpNICh0yhqEJQN/0iD8xtNBKXMPHE6er0MK8FRFopsTWmGOaB+++vi
rfRwbLu0bU8TySPNlA4ElCgdCDB0IEqUzgR0KZ0JMHQmU7fmxYaJZoBZVrcD
nE/BR0uVpFa8p0P2Bz19Hq4E2DTpdNKQNwuHOU2zlch+ZohJyJbXFkLgzWel
9vQ40Mow+ulLcJEZ++rTz5YVgW+Ktq4wLQ7ODlRnthFcpPEmyXKNdzDYmN1z
d3IqQmWhgI+15HsUgq/s4i72gUbV+R2q7CVoe+Xw57//z+5+Z6zPy7YY2Mt/
pxaujoE7MSULrxDeMbJCUWt+YjGI2PCdSq6OBof36hcXkOccQ+VyAmMOKPnu
mYmZeCkOv4w830V4R6TJ+FDS5pt4y/OKMo9hCaabht7/SNa3c5j/NNYIofdz
stoLkUiw/LpGqpfwuwOUTgn8KJ0SMHRKf4R0KlMGAnHRSgPrPn/Ek8Jics6E
R6ssuqVlsNcfz+xUTuDnKcbdXMWmtYT//qZ0UJBG6aCAoYOKp/RaYEPptYCh
1wrP43YpYPXB/e+NvK+cz8EmrsGkLmInFyjdC7yjdC/A0L00UnowuEzpwZCh
B9tO6cdAitKPIUM/lkDpzeAapTdDht7sNKVPgw5Kn4YMfZrOw3sd83Z5wvMR
5iapnjKcrLXjd0wluKVl1LvJ3AHuCrV5/zEqRwG5iTwdgkMCfYYitoa4AjuH
7arMhDLcZ9ftyUxw9a/EjCNiKu6oUaOV6XC2EkWSxKre+NHhrpE1b5Dgbngl
ABF7vpYi90iADAvB57WUfg/kKf0eMvR7b7/9pw8EAUofiAx9YDOlD4QTlD4Q
GfpAPkpnCImUzhAZOkNFDhXuO6HpkEar9HbmL4PRxOtZM9F0SEzWYFkYlg7L
1I5/1WkvBdGjrolX4ujg+e6W4JEzUdAx5MTUeasatDZt2CZ0nQ5MYWoVpna+
6BHR5WDSXQn8pZ7P3T3ocGKvydzvnwtQxKkwr2K8EE6MKBVfiKBDuuE67+eV
1TiPRdNDzDcJKovceIwuk/yy63HFc65mvMKhrZxgdA4er/K/mbqE8BEVJbHE
489RtjrvV8ifWOxvV96pHv7/7t32/efebc1VTx1pV9owvuDia8PuMlT7oLfO
YuYrnFMUzPnwthXPv4jPazIuw0u+a/e2Gg0D5N2IdeFsRClDxakm2QqU3Ow0
yls3DM6OF8WSn1ThRuVjvwMTC3FkInfLwbN/+5XPNdzaCrAiW/iFtloKtodk
C1wkfnS3vDeppzEejz8bM1j8JhqvdlmreZH8oh6X75vF5oqC7GvrDSWfQsa2
ckMRkq8H7bfoe7G34YeoACsafzn+TlOIq1o6DLrHPuV3bomGu0PC7/SgEGrZ
JezZiB2+rBWZ/sZ2Bwv9ivjdf9JgsE3V+CWJe3V5Th2RV3Iwp/jDzrfnkqDz
wyG9Ry8Jj/CqvTqNLag5cnFlnFUpaogW834JGoZf16K0K2srMPmjwuefd+3h
zwGtK1tC6KA3x91SRKEOD8kelK7bG4TBoRtPxKnRobB6pfXl/bV4plb/Y9p1
GqYYXxF6u5cOw+ZwxmJVMyruOSnRJ5SKvUpzRr5ND0P737uOdrUi983Kaw07
aFi0WGj+5jRyLqvF0N64HJcnjztu4k1DP703q7SD6LD8f9zrzdv5x1h9Swv6
9l+tE3ApxolJ/4U3i4dBaqJu+Z+V9Shx1t3eTjEHDdOqXF030sHf1zG86x0N
fx45P2EnF4AJv3j5/9avGgO4Sg/MVKG9YmeDkkcGNnd+L3Axo4P9tKhH0M5i
3NBbg/f5n2LL4Y6GXSReJdXZVfHnBqCgk+arI0sDoDjIQ/0Hwc+1775vyzJO
xnNJYd/ZrPzgo1DTAT2CT8xC3J9CfDVuDdTxXrk1HxMPLhy9oUIHCU30PYLO
aGOxpTBJOhoMzeXm8xB8tXV2PqHBP/MJaUlzsybZYuCinuyJkrhsMGD//vkE
yV9zF/9MtFBpwuSB3RJV6kWolPo6+/HHYQguvvKsfd5T/K6Vvsy63B/EbluZ
uf3F8/cq2xxXZKBk+KmN5VcJThGf1LtBcMj1B292dg8Sf2RKOHlROB5VhPWH
rpC8IzoiIQFZVdgzEqj/cF4aLlvaI7bhDh2cfpwvi0stw5vMr29wdGdgtZjw
dWViJxGa71pkuiqRZ76R+ZhuLsYqrOkpJftJKwtq/LSwBM0vBayJLIjFj5vO
a2iQeHsTKvIkjz5DhUeFo94leXjZNmtx/DmCkxvMmO8T/3oRNiapMULDRgHr
9a76BM9f6o617A1CsyVVTFmOUWC1XeDDHII/X83eS573z73kQvtu78kuzUW+
hbz1dmvCUfPdvPe2xC/2iWXHdKam4vjouZc8Lq6ot8RAJJ3gQ8n8K40fBB7D
3dcCS95XpYA43ahLjZxjvaJv4DYme9xWfiw/vyAcrJb4CRwl+5k154TOZBcN
N3DGfd/8MAe9ym3mbSa/a0d786l62RD4XDvt5b8hA75ppCyUJfwla3ZO4KZ/
5gRqbApZaRyYACpDjy5vZM6FC+sUfdSJnx7L2nC27V0AMmkXxOzbG4l/DK0W
SPwk+JM7frWXZwYU6dvf+N2eD6wdfn/KSX53VRHerHMgBj6ljX0Rs8mGb/ND
TMOInaTbTrsLDWXA7Qssa+5Y5EMGzxsXyQo6RNXqvZfdnYROslvZKrgz8XjQ
Zbs+glvEVx0bPRGdgV4VZ++sMniKBzWPKG77W39YfM1v+9w4fPfOryfwTBx6
DHx+uY3Escd6K0ezetKxaBvXCZ+YLEw5Z+4/3k6HruNRZ40WZWOv541Y3gEa
6q7RrRkn39nv9vh+k04untVlb80ZIX6Ru1nlWC7Bn6I/7+gfysHOeZ5lrHfy
MNT91+o5BD+0Ln/93HVOIuwQ75KNU00DTXYpy786n/sHiw9G0hKRuTnlrbdK
BgrbxYysJv5ybnaO37HZOX4ss3P8Ws0P3bFwtsQX4ubSL72DseeV4/bMX3TI
HI24JGqYCa19aa0yVlmwqSEubz7Bq2Wz97CPnvj/38POzcbDJbkuEzabmT5n
XxwHUXeKt/ESnF8RTtt0rtUN6Q3MzvkCyXj9O0vu11Fiz1bzXf+cyYcZgQtG
95zTYdXZ24u9CQ48NTvfb/3sfL/I2fl+Sw8VH12+BYH7S7K6WEUuXBNxf34y
kuAN6V3BGdoJcGj8kCrN0h+ZfMWqawg/8rrt3hZvWQr6nmy1lwXzwXLeQDCX
D/GvjZUxtNwSeHFi36e9x3JBcEn9vmsxdDioGn3RuDQfqoTaFke2ZMKd277D
WwhO4Eo2vvv9VQa8nr/+ntJAOoQ23+MQ6CL8Pcg4JNCeBixrbv451p0MBW21
codbSHxmflUW5ZOMrPO4rW9GZuHxxKpJFuJfOze4zOfxSsCW1THmb3hzUP1h
wd1XJN6eZHdM2TkWgS13l7pUL8zFiKqr/R5v6PDm/kqju6vK4IOI6srHklmA
hctFNcLI++ZeNt6iN5CnxTZHUy4daaes4q4Se6tIXZ7+kdsOOpIyLj+/GYWn
dxSN1JH46ZWv8UyS4JB8luSmiynh+D3tz5zGCTokD/+yfNmaA06O4ed30zVw
7ftOAXFiJ9Ydn3nqFMNgUKvRRNctAFnjb/j8nZd4vH7FjeifZVDKe4bljm0q
fHeJ2LYxnA42s3PzpGfn5v2cnZs3d/Ye+f7Ze+R9Z+91bble7J0uXA9TYmZD
53NoIK99xDFBkNj57Dw9xVP//3l6T8U6lh5/0gR6ef6hzK/yoTSR3flP3zAM
RYs9WzC3ESxOu4p+lciB/o38j/4sJ3F1UVttm2MVZF7aoE47mg03C9cG7rhB
h9T0hvU7umpgx+tBVzXBDPAZGwnVUyd5+Yy0uPRMPvw2F15yZSYe7nD33Wgj
8adBPGmJ/O4qsOcOVL7UHAOPMul1Ii4kf3EsU48abgHNCbH3Eq7l8Oo40+gT
e4Kv+iur+FaWAW/s09CC8n3o/3nFw1Liv8XwZfjuj3TIfe+gOSkShN0Wg7tW
Ez678J/9Ydx7e956Hac9PRIXfkzvepmQhIoQ0XOV8GuJJ+tHVHY4IVvkkjcN
G2Px5szdvB4S52v7nPM7X8fDVduTQvtMImDDPAj0JfE50tkuXbYpAMwTA/zs
ef3w4rPJufdIfK6XMj2u9qkF5srazMvcWAiNMaUO11KGYeamWjLLWDZ0Kqtu
9nkSDkFChbx7CI/z6K/MfjOVBNsv/fluZe0JKTeKl3gQ/3Vd1vVS92Q5qL1R
MFNSzobU1kZ+O5Jf1szOu8ufnXc3b3beXR1bbNxlzjqQ6Jy/2MyzANJ+ye8a
XE+H23WtN46cLAPupXrcB2tzoXibuWK+N/HrYha58R+tsGrmIt+qiApgf2lf
fk99GJKoe5lhPnUvM3jO3svseN5oiSe0QX20M7edbQn4ChdfiecfhmqRXc4p
nrXg8Ok3DImVg5WJb7boQjqUryzd2Dj/BcxkvZ5TKZ4CJRmHiybvDwOXS87T
7rAWeHVZbCU7hx/wpWxf39Y7DMtLRyIiwlthePvTKfmqWqjLijlwf+UwJLTl
v//uXQNHrSQjdvwIxoTAoW6pS3SYnjgvoehXCExHo7nmumVge+KS1XTCB5dp
G6jwvQ4FK9UYtqNjNBQ403b+5CuSj5je0kPfpgJ/lkmS7nA0LjD+euFvfvTt
UIqfiA1HVsmVErzLq7DRxH2G5RHBb9UPND4VtMGt4bTNh0UQXkeXWs4l+9Db
M8kxV8sKIrKdopcT3sNZkFNhMkPiQNmLak6zVPjsLmWrJ54Iu7cNxleQfJFb
7XbJ5EUWRC3kf9+xJxOsDEYyHz6nwyKL4GeKEghLH7CcFnTNhaP7WTeNknhr
Mjt3bvifuXPHTCODdASroaHaYGPZCxK32vnnjG6gQ9HeU0XT18tB322hn/C1
cjjPzDKifYIO8zh+T9zb2AR3aqsk3K7VwKdj1kJnbYYhT+zmg96nzyE5+9fb
2H2NcHVdj1d84Vey357Fy87Uwu2GKGy0qQaNNc9DK5qHYVfUSFBiWztM+nUa
9rO0wFGFnlOqv4dAlbonHUyoe9LBavaedK1sPWf76BbYGVmwx+N6AKbu8212
J/jw8Nzg2175jTB4hFOlP7ARPt4Yd7bZOwzWYg9rcnYWAJcuT3XQUxoedngy
3Uv46QGNPR5ndTIgNILVMmc9wcVMeiGZNBL34FtR69o6WD9gn7DItgVSf7Ot
NpQaBsP972TOvbHG3kypTm7vGvw8GGJ6xYAOk09D7nM20nDztyu82fWN+KvD
R/L21DC8np0X92J2Xtyy2XlKQeOxfPmcBci3JCb5kHE1qhgfeLGP4OfIZLUa
g6uFeOagyyfx4Gdo6eA1rnqUPJ+dzzYzO5+tY3YO1YJEpUOmnllgGT/x/fly
Ggiuvy0TS/Jvh0IEy0OVUrjnlmizWrcKxt/skTyiTOzNOD1OyKMKyhb3f+Gz
qQFB3gm7Y9+G4bz4Z4PMObXgMS9yeXZMPWQKvXnwNXgYxl/yeV8SqQEZl8uv
1ho3Q9cq6SYz42H4Fv7I5FFiObzfP3DO51kr9HvGrbDWJfvPess5vooGF8Lx
Vp75C9g9sHClyulh0OLb+zXSNkfmntzm+I7c4CLGvClR6n3Uo95HxvtvqfWx
i1ofB2bXN/eSCt34uRondFkfjXg14feKyfs3iL3d55igBXnWoMYc3uUcgY3I
utn5iYLTMCzi4QiesajCtccs6tgna9FM8+MT0XfEHtxn3jd8L8Wf+vklEzvK
McPm3VS6Hh3eh8wz+smVi3apQcNpDQUobvom5GA2HSZMHTKZzhSDzYPtnevi
qyAuVHpq9XE6rFjwucO6uQjOJvMmrlKogx1Lbu+5zkfixh71FVOXsmBX4ro8
2w11YEgzofMR/viY1r5hbJMv3H660fWUUQ0U3j000ETsR+ijAFtPYzQeEGV/
PBhVDtce7Ihvi6DDn2tK3t7MpVh6g79zYkUW7K3OXPYgng5nKPvHzxH/2T8w
7H/WX/AW5S94c9ZfdlD+hdOUfyHDv+YIr6X9mGpFDkXmyKKb9biP6+lXNvpX
CGfqmu92qRFrRZ6raD6vxuUl2Vk/PYch52c/3eLRM4xcw7c/nrMCC+1qNTrX
0WE/z0rNfSeKca5ndm/7+QJ0cLKJ2h1Kh2AqvqE1Fd+waza+JaRM6vFLJaO4
rY2fU3EK5jbPGcsgOGGHIt/5L772eIMP2gVyDoN+v01vPIl7Hzdze7SeTcLC
9WL9XYVJ0Nv2W38/wb2HZ3+vxT+/N4iKt7CCirfAiLdzG5tbguUicEPL2Y8Z
O0qg+uLQyb96pA/1b2c+jZXgDeb3r7MkoiHdc76QdTEdrjj8GmOb04r+9KhL
D39UY9yfgWvqB4ehdP6y9Wtja/DEZ7uvY81BcEA9pdqf2E9kkAmP9Z4W1D7e
yWfB4gRmkT2io2PDUCXYam8jUoPhWzw7U2MQvzWztAyKEX5UEtn1w/IFpv25
fMi4MhMvXrY2G7s0DA+oPIiNVB5ERh5kMdzwxPVQOY5eFVpeIZ+PBkIJWbEO
JO9Q+RQXUvkUGfn0IpV/cTWVf3HFbP6dMfa9X7euAZdXHSuvuVuAKfF+4p5L
6JDPeavv7iANlZgabM/cysTznO2dNBJPDI7uGjMQrMLm/bZ3f7ZmY+BMjD+X
BcGNIjqtExIt+KtVWGDlcD6eWe/HOl47DDICFX2yv2m4VDKxv0o+EI9p6VbI
EZxcMDunKP6fOUXP2O+a2a8Px/Ha+MXmfd4w8jvn14UpgltSI8bq9XXhic+P
ok0ZvrDgKhefMOEpVcNneF374qApNZot4106aPxic9pL7OcWhetQh8J1+HIW
152UcynpMk5Fr3WXKvZdjIZtG0uZ5xP8Zp7R3rRLoBQVX7glxP1yw/5luipL
CS8r4HK6UIVVmOzw5Nq6w3H4fvHOPQq2xJ41bl9z9q1GV60onUS5bNT/EuAX
rUlwXYtygqdHLQppGj5U607D69e584tIPPdv+3lHILUM/3RZ3mnUz8Dm1bZH
zhC/EHh95UnU4QZ8ahrA7+2ZjTkcR1i3rKaD3+u77m8Si/H02ycLjS/HY56h
adJ1wrtPW2+3GddtRP0WWmwSXz7e7BhQ8/s1DFufLQ5LY2rAsLVb9CRs8vG6
PfvVSlY6/GoxbPef8kPLjLxsE98YcBXx3RL3neRrCq9iL4VXkYFXZ3kBNlK8
ABm8IGBORofDcA7e5dl/8Ge3CxY73u7U6KHDZrcYk29j9tjTanhw3qd4WHxu
b8IE4SMyn/x/vAgPwqqzxpMJvyPBLmuoT4fg27HfKQJuSW5gfILGe/0W4aMr
nNjG++mwneJN0EnxJmDwpuDKd8a3HfPxi7oZ7F2VjMN32+Ub6sj6r+7KPNma
CKsytAPHvHPgqIPZdW6Cu3Rp+WVG71LBcKM6tLRlw/jNkLT3hKf/Mad+b/fs
72Xwl4rLXcrDl7Mxr/1i4BPxdNRpny61J+8fOueVMZZUgGeM9HtnEnLwzBvR
qu4cwgdbwyrbzTPR6dT3SybraUgfnFq6pJac+9O6k7aLS/HWG2Xr5zO5mG26
0pmFnO+rdumCz4EJaDfxe59yhiNEdYxlnCD7k+JzkSZmW4pMoWvfbyyn4f7P
J/j++NPh5dtj3+PXIF40eLvojVsuiluy14tH0eGoDXuLFUsw9CR4jV9anQEn
f4YahxA8yfUlfpGGSBEufVa06FFBBoboza18VECHa8b3XGkpOcjry6TJ3pGL
rm+FlRvKSP6KX1azSiQbD9be5FoqH4tdFhIJz7vpUELVAZDn5H91AGDUAeZS
9QTwp+oJwKgn0DQ2fLy7Jh4L2heeU+hOwUdPCtRHSBx+yCTQa8qaCnW0DU2s
jRnw44K0CRNZv/+mjXReajZc+2B+5tavPLirGp00ReKqN7/E4MIcN9Crvxlp
n+uBK4euHN1F/u7Ak4MbDi3OgWF3rXmKJ/NBg8147lghif87Q59HC2fBIhka
95YEGhi6/XH5XEWHdfsFDNeO5EBxybfBm72RcFuwbeQgsZ/p6FNH4xpTYHnP
RbvouGz4mCopf+7vvUVfRfgiB8JBd7tT3wO+aDjYaRgiSc7lEVVfwm6qvoSM
+lJS5n91KmjQ+q9OBYw6VdQqlsLLKem4LVg+hDm7AJWnVa62kH0GjdE7UWcz
sFenNGg4MB95Ls5fOV1BBwUm/joD7yT0ajV8Ke+Zi5L7nkRvbiP7+X77XmWn
fEhU3vKHf1kuLLR1XheYRwfLtWFGxd4BGLTp9p90WjoGKSr1j5F4lfVrmYWO
jBeenrg4MP9GGsrcG6qXodNh5csXK1dmPAZJfh47QflwbJR/+mYO4Yn9gxqQ
WZQKN848Ef2mYw0Trxf4LCG8sji3qtMXIoB9a4Qhh2oEahvpvEoi8YH/9I0t
4ksKIWxQekqhMRb0Qi+cmUP8rpWqQ0IyVYeEM7N1yKdUPRMKqHomMOqZOxNv
72Y5UgBzp64HNycFwwnTjRLXWgmPsBK6+VqqGqyfdISeCMuDjqnWKBPC35s/
zMgNz1TCcITAXtGSXLB9ejproykdMhwjJA0uPoPGr6suTb7NginxMstcQ4Lb
vxuy3lpVDqdm7N5L/E6HUeZQZesgsv9s13RqvhbBrbr0/FyJOFBLt6hhI/s/
yfxfPRmiqHoyKM/Wk4Vr/OeuUMmELLMXlra7noKsVc2xKmLPsqtl5eeKh4Ng
5enJj5KhIDRTKHuanHvAno7WNLVwmMyp3nlYOgStqlSF7chzPaoeDiuoejgk
zdbDS6n6Np6n6tvIqG/fo+rk4EvVyZFRJy+k6vBwk6rDI6MO/5qqw0MUVYdH
Rh2eZ3YuzYN/5tK8PgzrYjILoOWtgdK+ikeQYahi5Uj4YDLVL4B2ql8AjH7B
Jp/9L6fvVgIzx5GeR7LpwGxetiDBicSxi71TVevrgS3WlqksNQ9UDWsnHdfQ
YfyVrXLR1jLYu1tnUmJfIjT4VchPJ9KBj+pfgA/VvwBG/2IZ1e+ATVS/A5pm
+x2zfRNgpvomUDzbN9EqjH24tKAepH7OU52QK4Z5a68LPSZ8n071X0Cc6r/A
p9n+i0X4wS9Lt9bC64MoIe3uBE+sLjtaXSDxM1HPZjSpFXpdS3Mb7pUDt5GW
N7vhMKj91I82myqDQ03W2s3XbHHVooJnzqnEr5/18uHqLOBc0MIrdScS9R0K
pJo+krhE9a3gOdW3gpnZvtVvqj8FWVR/Chn9KR2qn4VeVD8La2b7WXqzc2OW
/TM3xp3ql8E8ql+GjH6ZO9VfA6D6a8Dor8VS/TjwofpxwOjHXW7n+eO1oBq2
PT9SGeZNg8Hmfd/mnSZ7LCa1Pb+tGVIznj/8kFUGKZwDLGdTCL9bFle0sOY5
tPieOStsVgHXHxQ+apD8v34i+FH9RDg620+8SPUfwZPqP0LLbP9xtl8JP5/9
168ERr9yG9XfhD0r/+tvIqO/2Vyvtt1evw6k5754+jY1C+drffXk2E3i8M6r
nqvbyqBW+bLBesEizDg7f/FyGzoYL59yE90RC0XfaDtrV5Tjbi4vly2xdHCl
+rPYQPVnUXu2PxtE9XNxtp+LG2f7uV+u2fPtfpqOmjJaQUKumcAjFeK/l9j/
uV13W9YoZiC72c6tLA2ZwDXjrShK8kVf4OhU0FAcFmhE3VIqzYRGxYk3C/7O
wQjflCBq5IKR9SnfFDSLIVJTtMeM4AEPQUlJ1gkvYJX+5lDpWwn3r2mGjHrT
4dQGzY2N8o4wV/v9HObNz8BFmlugkeB28Y2b2nTXxuNwqmbQ6IEyuLlMcGg6
ifj1+/iZpLRinNanFfK9SYSUhHZbHZI3l1L3GOJh6h5DZNxjuHyKm1fapQIV
hdvCX22Lxt8qJraxAXRY3XN6Ui+/HB/q3tgf0haLevf9v0SR92/L7qmey1KO
GzN2F8SKJuL9lC1KKgRvND1SLMm8VIbdBp0iVz8mYfe9fINism8bXwzsXxVS
iim1CgvdpFOws3teh3QKsSvR9teHUxFdmJlXrgtPxXPHBJkhk+BPrXd33HVL
8KunRHeXbhLG2YdzKRF8Ih4hvKx9YwWWil/vW0mLxp9VpYMfgv/ON761S36P
Lx7Zu2iO2MpcUMgZTM95R4eGuid55wqs8LuIZenDDyXANEfadWElHXq8l1Z4
WTnBcrvfC/cur4AlFrXOh6NJfOB+43QpoQwlXbkW7iyMQX6pWi4JEpfooYVs
dZl6WL51b/rrlnIwVfRvnCb2M1Vfv79XMh6/SzL5szIVwYoRy4kw4kd7sgIv
fX+IZH8njvi4x2GY8pWp1ry/fRYTprrveXjrz8PulIhEOHpd2bylkcS9lx8q
b8mUYni4nGHN7Q1gEOO7o42c13rpkNMZ6xCXZLT0X2pKwOc3E6Yz8v7v3k98
TN37iYx7Pw+NjIWd6ylB2UU9ps/ehGOW5x73bIL/uW7vEXJiKsKE9gampqpI
PMdB369C7G3Oy6eS6nkl2H6+IpyulYQ3mOx+MuXTQavqBl/Qh0LCD8fslDhi
0al9V7J/NR3e5S3tdhcpQHNpNb+gr3F4Z22KzsYGOjzeVxc9EF+Akta4weJT
IsoU1bpz1hC+4CLBqWidh8NFtoEn5ydgEG3rnPAWOmjv2vez1Sgb+Zm21Me0
7QXtdOOTfYR/RT6s3M8VlIefu2SZ9q1JRF6jgQPnmgk+n53rMquzQuVZnZXl
XYWORQ9y8Ynsq3rnXfGoee6EzN/7WB1OpB5lzitC0TWOyb7Xw5BTkY3XgHyP
h2NIaPjdKPhNY9mD7wpBtOvlpAbZh0tdtpsxyRf4HoSFLl6A8Gq3tU4dwWM3
s1e1/PB3wbMNDgt+7ymEF8Mmz36T73fhM1m2hJOGBtd8Fy2+Ho6pGbGLL3fR
4f69nb/SlsShtKnwml/3smCSd+6aT8QO3bQd0jLPZOCmld8c9+bFQpDinYec
5Pc6dsSFLF+Qi9eS9xxq7YpGPU+N5hayjkXyQbnU81l4fq+iZ5KtN5iyHste
2kcHlcaswPdymbjLWVhe7eVlcFJyUBMiuG65mswKl/mpqHHhxTf20mgM705I
3kSez3n73z28+JC6hxcZ9/CW6542E+yLxUP3q3z1mN1xc8FtlkGC3/TSChzX
xMRiKGdHnd9wENZp9GQPj9NBbG+vtpZoCm5YtHHIZHc8LmXNSnAi/EszuN9S
QDQcD5tKaES9DseHSSu/3SZ8zeej+NWxIl/szvezURt7CgryV2LyCJ7MYZ4U
/vj/0fXm4VS93/t4aRAJDYZSaKAopSgRrQYaSZOiNBAqSYSISJnneco8zxzz
bJmnSMgQSTSJOBKlUn6P1zk+3+t3ruv9Z+fabXuvvZ617rXu57nXiRB0k39b
cpM7BrXlLfk8yd/9TddXKaTrq3DQ9VVObvx8/dnpUFxnL+P02DcepyLkT8zu
e4w+4ZKxq+YWeGxb6v1szAd2bC2vvkXw/yKPtFd2LwLwMps460bhJPz1Jt2D
h1xfvkHl6Z5v2XikhOmPUH4idlUveSBK7Ozd8uM95XYQuijrGEyLpyFHwfI8
KfJ3s5fcGl3anQnJfMms6mcSQNRoxetH76hw0Plyp+zpKOyqN+LN2emMu6NL
tLgJvvr5wEaelSca5FarLvlSmQ2U9dF6J8h3ZxfLZU2J9wFh2Q9HX/pmwqLF
sTz9BB8ei5gOvhZgBq4SW4+PP0yDtDuuwecIHutau8xLYdIKNzwT7FNblgBl
6+YV5RP7SHL6HPKfdMDVF/CaUGsUmM/jmv+Z4L17mvqOY+e4YJ7SY9/BjCCU
13BJuEPy/uYh4cxAk5H9cUqdMpw9oaDloHjfltRf5v9D/2RPVOtwp6cjSBSe
iGXp8QO9yiNXXch9Tq35yLS+xBaU/4pKXxCLxvQ3hzpekb+bR5ujDYF1/83R
hrk52hcfrpDgOBFO8r1GFbXZHI432zbOkO++78vybqeqWGjtK4DnO2JBLWbe
oBd53y3qoTau96Nh/VH2k1u6zZBzrSHTGLm/B10XpZ5BF+UG+xrzskvxEHLm
3t5kMW/sO8ytvJ38/u3oOSn+f8lgu17i6WazKAgRLbp4a5QKLx3XPpFojwe2
Ke9YftEIXLRwyc4lxB/0vyo1UxWiybpS1zz4IAUNVFfZ2I6Q56wzfnyK1wdk
nBccyKBko4jdOd9qgt9kZppirIdtcEOl/P1REm+usR2IaZz9vnbxfWF1MRDD
bGLWyW0DL3ZLyH8geL6urTx16fcsGBZ5vFGkPRZ2i3AohpLr/y6XsuxcSOof
phN7nZgSYFpbZugs8auksh1vLLszQLmPd2DBowQI2cYSlzBA1mkehXfcJxm2
SmyWeqt/FwUCqpezk/XImm9afSo6A5Yqf1oxpJ8AiYZCLmLkOasNha5brC6A
Q3spB5h/J0FNTGgFL8kvctxXhpX7MmAmVrV/ZCwOcg91xVaS69dFSt92aMuE
zoytwiw+MVAxk/ptO/l9sYHEAryXBxrRAoUDd5PgkPVy60iC/3M9+hVK3HJh
53RZ87kiYr+Iv3os3bNzXWl6I+8Y9EbCaHPt4SVtrj3U0ufaK136VjoQmA9i
gkNrI255Q3v++pyqLpJn6TokeQw6JGfvpNwMhGLQ6R4WyWlxADtlwxBd8l66
jlpu2ncKIE+i16x4NJDUSdZCK9vJd/c4c3xsKZL6eHVi0elESDXdZ2BA8to9
R/PotaReG3dZvYRVMRXZJ7aIhvRSoTZark84ywvEN15bUp+eh9K+I/yRBIcH
uFb/u1EZBVsun/22YncBloWfXp1I7JBYnfd587YKMB5w3CRxKx5uCrqOXSH4
oVloImbowD0YdXvN/Fe6AldpbbN7kELylGjVfYGPTnjY1z+CKlCONT8UozNy
SL6j26edwT65e+Tax9fnw4a1WsPfZ+IgZirLc08bef6K0yYF9wqhcwE1VmIz
iUtNprZLSF1QKMsm/EooE9YxS/87qJMJGQcznIRJHjxGWSFdL1kM1ZnPvlAH
kmBS56leWQUVxnsvtn9pQZBa7Xc+qdMDHtUIHX9IcMJl0Dom9boU/HztKu39
U2H9rt1ok0uFO4reGsHL82GmfvRPazAFNqdrBF0ndb1zwUd75ogyWCTiLpV+
OBWUPreVr06d5StpOiH2DDoh5eHNv4wty+Fzhn2ViHoS3O4O0NyVQIWdWuJ5
4eXFwLX9dzlPRgbIveMXMyR45pTfzwx9wUp4tktqhdGlBFDc2rY4blYfQ/qU
44VDlTCa+XkXW1QcLDnGPBFNfjeeVC3Uf1wJbQuevYrYGglsqczbSkhd//ar
G8dX7RKQd/747298JnxqXuj3jtSOk8LWN4R7S2Dowu07FUrRaKApskOS2Idb
50i/eR0FmP0rN6y0ysOtX89JFBM7//xRq/9gpgwGqwQ6xgUzQVrt2qbMKBJ/
gvms9wREQnjS16YlvxEVCi4n/SR4VeXohYL74n4wTzdUbqSmEoXCJ1+/Js+z
//VVienDfmC89E+CCKUK/aUuW1t7k7gReORw+LH7OH2j52kRZxkG5BTKbiTf
ZcPhlsIT/Elw1A+PHD9ThIeHtuQ9rqGCRPLfznfWlZBtVhb0bzwCgi6FmDaR
+8vfuW1jKB8Bgz03Ms6FZ8LD6INXZ3WkWVDuQcdUMognrO/7vScb7mfzUYSI
v62uO5s4QYmEddYvlk/p58DnR22cs30Gb+XyFXsMc+DD8wsX7KWzYbPrhQxb
gpcu0/U69Bj0OqyY3ohIJBVA+ftHT+o/Z0N+7BpvmSIqOB1Jy3ryzBlUKhYs
+2hSAOz6Fn4U4p/MP5Prj30qhrqNISKBgjngL8E8/2k6yeMV/FVl38ug8lb5
pe+NWZDm2iqyKnyWl3ROKtGKgxzeZKujggVw+OpEpxfBY8LsV85H/a6A1/yh
q+9/zYBtVYll/F4knuefL+Q8VQl1h/JW8vfGwFvZaaHbxD7H+vTOC38rhak1
yee9rCJwXupFlwRi55hfFrH3Xz6DcIucLZtySoDl72mzNoLnh07V7Li0rwD8
ryoLGiWVo2FD2t3zTlSw/Hfk/nJfEvcODGixuFbh9Tcp68SeEnte4Dy/3CUJ
ms/lPP+mVwxWT65yHCJ+tX66So/NPAOqP7/dYfGjDHkW9X95QOLGvgiOK4p7
c6F8X8/Q+oMlmKTr820PqeNid8as1c+IAvdb0otfbk+AwE/MmbN9G5UNnylr
jQrAxGZJrkdRMe7VPDpPh9Rf3/ebHri4UAWsnmWbCf+KwiSB6s4rBJ9cO9Yo
eL21GEpVn8v+jcnBO5zlXNppZP0+Uh7P1EpEBdXbYiZNeVCL3pI3SHzbFTT6
2md1BtpYLbnY7FwISePaDsYED3d27H47cTIa/2ZuHOFdWAxTCrwdYwRXH0gq
mx9n+gzd3lqmRb5FOPDCJcSG1C9Bx6ZG1M674Q/jjaMuE2WwYn1L6w8STzTu
Mos3y/vCNrU7uybyC4HCvnhDFInzYyOcNeUs3jC+K1Jru0cs5PouPPKA4Mn9
SrU3dgnX7zc4+1Jvmv3t/ivdf2ZmCN5I/7D/ed8Sb9w+/FpR0D0W89lY1pqS
69fQ7o/StPvj3P3v1TPFf8h9AlKX99Rv0C9Dg3/9El+Jf55bfW+opToWvNWE
eE7OIB5duk3hBIk/9iBRXi6RCFtabhp8O1SCvN+fHT5dRoUvUQJd2UtjYIVd
cOGB8EK0ivTKlCf5iH3XMWc361TQlG33ZCrJQ47cH5+WkLhnM18/401PMSok
yKgaWOWC1aF1zh/I9z3/3tBcYG0RKq2dCojlKgSR/uWt7KRentbqVaaG5uBo
vOazPlGEjWP98/1iCf4/57jdM4KCYqtK/JmxEoLF9pncdaVCW1O9xzZRCqq4
Bcc9eVANe41P++tbzNZTP0f/xuXgRScBwYM1CDJL+FesiP4//8fvNP+HOf+X
oq0XHKCtF5xbL3y09YWdtPWFc+vrcFdPgYxsORY4yP/7ujoL7cftatXCqPCV
x357nUUJWofdiHt5MhvnlzvcdSDreo/xxQOhZ/NRnqLtvtMjBxV8P45mEz9Z
YsMZPCyciZfqvDlgSS6uFd3hO0jqSklafMMKWnzDufim+ihsqa1BAi5uWvNS
6n027lI9I3qG5OsmgeWbPA/G4dHLmkIvdTNw92H3goOkzmp7tJuF6agDXD7z
ZnXecBlQ3lwJ9M77f+/7luF9t9PiLe6jxVuYi7en20rvufD64VeTIwEfr1WC
qDaPfTeJS4rSYW+zbHwx/sfuM/+Yq6Dv4ps0nSBin+vMQT1HyzH49qd1XXcz
sEnMW6IlkqzHv9uDLESi0HClpleLaAUoHuFa+IZ89+OnR0Q71LLwiRb/mNyB
fBj8XfsjlMRVzi1vt64rLcOV3hKVCT0UPCrzryWNXH9WMIRzOYkjPYkuL5yb
3OELyw6zNrK+TGl5EN/S8iDO5UELKf/NVY5FyJWzvCrsZSYeqeCi7CR56jMt
n+JbWj7FuXx6jpZ/0Z+Wf3Eu/85oywj1xpcjT8xgNv+nBLy7r9JzkDxP/Ob3
Tgfz8pD/AndJk3YWvrG/asxP4qev8ko9+dEytLnp0fmiOAWvnW0X/JdE8mxJ
anfUyVKM6uXOi5JxxZlHfa5x5PqM0umj4gqIVnyS0Zt8UzDq8MKceoKXQujn
xHUYzon/FmL7kqdVjOd7T0Q5WiZjw/tb0l4kXpW3njG2sCzEi+Ibt1SnJqNE
k2nn71oqHG18EHHQJw8D5qn4qr6OwbU5jY5XSD7KpuE6fEjDdTiH6zzE++pt
F/hCG3Px55u/y6F/sC91D8E5+q5Tk7/yrDDpWmu44NYyWLB04T3hUir84f/q
LzAvFq/+Gmeqy88De05ut1cEl7r2tu3tv45o3SffWtgdjw/rb/09THBp1Db/
nz3BmficQ363WkQa/Eiybw4j/myXvUq7JTsKH/s1HdjYlAUO8nmFU/1U+Mj2
e8YsPh+HJvRry9uDwP+70y2lTrIuRtzG+GSL0Xfbl0Z1u2QM3fdHno/knYSr
w02cM4XYfUUz073VHl3TuZ81k3gYMzlYKuVRgNX3PgYN/fVHS+aewb+viD+0
JjewF+TiAqquv/6yRLztw3/nJXn+SBpexR4aXsU5vFpGqwtQkFYX4FxdsCjD
Lera6mwUXJxibaYdi/cEvPJnzy9fk/D9d3x7AZrKNHtUP01E9duLImf16y5q
mgwVOWag0D/pEV3eeNz+uPnGzQ9U+IXmPNHE77ue+Bfsl0nAy1qO6YvIus6l
1U14klY34Vzd9MJRTt4qKRa57qzbm8X0COd35emakbrsc9YURe13Jl5cYVLe
ah2Pebf3BzaS+usY+4qHTfpZGDPqI3BrMAaP2h+vfkrsHEx/3w6G9/XPrs/p
fbwPYrVTbpxsz4PfaUtz7ryhQlGBWeGb1AAUjzlqnh6fAcYtV0sVh6jgaRyd
uWK+G7wI5HCY9k4HR987VX5UKuzdKMbcvyUWeX7VXFw8LwU8p92g6CsV7p6Y
akpxTsNapU+315J8yz0gfMVvmNT1caK7sjTi0Svoss77e9EQsOF4kTPBA+f9
Vmvzro7DAydZrF6c8wPdtlxT/9m+wcuemoOBUdhGXZin+ycG+fjE/HNI/RvH
bJ2gIBqLLnBYU/LCEwgs1hfLJvYJaeb3r1lig8XL7PpELkXC1MzbiDGCH5aO
XpMbtY/Aj1IneK7FGmBmdkVzIqnrM2h9ADxQ/18fAOf6ACdp/QQ8ROsn4Fw/
QcTfPnPj4ZvwVv3vq6XcwRCSd7989exc5po6YSVzI2CzmjojvjwMRbO72K5P
U0EhzzBE7YQNUMWrnI/ej8bGgoPZBb9InOHLvuy2zA9k5o2er3PxgVE7Q88a
cn2khb5/025DWMbyjr9VIQnHPn0I3TBJcOku1607fz7FTzrvbfWE07F5eP6M
2RgVBK2/FIe6xEJJ4/Ij1dFuEDoT7jBA8IN7wvOzn3JDUXBDsMBCpCDzb6rU
DPmOiQHfVu7hSkDrEw9m5hdm4QG1rVdcCU6up/WX4DCtvwRz/SUXxf/6VBhN
61PhXJ9KM8qiz547EixC7U6HbU+BtB+KXkzEH0rTIvieuwYAZQnnkAJXMqT7
/bBRHyf17CnXu7IXAsDC8vsPY5t4GJUuZ5Eh7zUyNmLEEv4MBFoGitu3BGHB
rlX95eR7vbnGG7N0ewjcP9JjmxMdDeJqo2W9xB9WP5isO/AmCfoiimzHteMh
tfzCQmHibyMz7VKSSpGQtyDWLfJABFzgS+kQJ3aQ/3Y8sE4nFsIFViWNTQYC
W7/73ZvkPiPaeP1hYzq0unPbjE3EgP/FR16nvpC/+/H+yi0bkkAhtuzIghJP
EOYp6pCeIPXRm//6kGBK60PCXB/yJK2fCUy0fibO9TMr+uY5agVkg9n7/q8v
iqOBsyHwjyqJG9Z+6tufGmQD69VvHL02XngxZVo0lsSHY5xby/fYZEC56tEr
Yudise1b8Mb0Wd2D5mQ3q+B8oPxZ6zrkGgknn5ydlCFxzNnb/+TGwHiYv/hI
8wmObPxpGPhrVhfd0OQ7p6iRF6yPiNP+aVWE+nEzW3UJfntE6yeDEK2fDHP9
5M32TMLC9u4oZrH2kVNzCZYbvOS5RPKL4YU/zwmexINPZFb5C2TjqYikBiny
/G7GVr9jl0Xh/itdK2OyS3DbdXUtR5LfVWj9cNCi9cNxrh9uSutvgxetvw1z
/e0wWp8cvtD65DDXJ7el9eFhJ60PD3N9+F/2//XhgUrrw8NcHz6ffi5Yk/Fc
8Dpqz5d7BVB7hf0aV2E8NDVt2x9K4vN8Gl8Ab2h8AczxBTWnIt40OxQBS73S
VsNDcRCk8lYni/zd0iLpvenLS6CUtYk/LCYatowsGv1WReqUjJid9++WwpUd
fNS9wYmQYOjS+ozg8BM0/gIO0/gLyKTzF3S+A8JpfAfM8R18NN4ExOP+401w
jjdJu7LpweqwMnhRrSqTMBYP1L7S81EZJC/Q+BdwofEvOMe/WAit3+XcFQvT
r0+07TEvJnnpnsEsDhHuCUu1aimHiNOihi7jsdBa73w7KoEK6gqdQWWuonBb
84jTsxWVePrQQUlXghPWtiSF3U5+glF8T85yb6rEEiYvTV+Ct7fReCsooPFW
MMdbVdP4KRil8VM4x0/50PgsOEHjs/D/+Cz6ud0shnO7dL4M+ml8GczxZdI0
fg3saPwazPFrm2l8HKTT+DiY4+NMXI/UbrEqB++3nHby40kg07X6eSrBddbU
UIXmgxWwRVJrTTU3qYeKmc0Vo6gg9sfV0KC/Amzehg8MLI0HkFGs/xdKBTYa
nwiyND4R5vjEJTT+EURo/CPM8Y9raHwl/KXxlTjHV+6m8ZswTuM3cY7fvH/m
YsFeZnvEn54b7v+rwfdtThwHzakw2FNlyS0UgLxC668p+Fdj1EGWu06OVOAY
3+bectMS4pk6qF27S9HVV7PUheD5CRo/C8U0fhbn+NlLND4XmGl8Ls7xuTtt
1Hc93n8K2pf1jOz8UwA2dr3ls/PgnBcXb3cQi8GfqVtU6vci/Ny/8uC9Yiqs
2mBuLfi9HNNf1f14X5gMcbKOpoPEboc6XvhsYG3AzcXMwrtEtLH94zazpPMk
/47i5ZeOzfj+vP/dE4XxGOfv+vvO71HQofH+yEvj/XGO99fkS7ZhGYiAhsxv
stJ7C2AH5WlGSht5X/r50D0M50NZp5Jvxy4JwJRn+pd8H2RC9IWpGP9BgqNE
c2s42IrwYLQB74bFT0B18oNLL8GHTxeseBdYUomr24f3hq2Nwp2TqlubAmf5
aO4Xyvm1+PV7k5J1ZwYe27GRp/MKyZs9qSLnb9fja6VDvDGS+bh49bwaSykq
NAsWsirwhmLk7wG7RQ/soX6P0SYJkq/76OcTkeF84g+2oSvBCpk4P3BaOMsi
EnUsvu8/84ngop1G7awyhah+ImbAzz4D41t3yvoQnF/9bcBvRK8Ul28U9Vgw
k4tNLzv6fMl6VMoScHLJQDwo8Wz6EF8hhjNJVFL9qKBGP78mpPL/P792qO7P
sxLzDLR6vv6wiHkOaqXxcFFJXN0R135z7EIaqD6pebOCIx627NjLf5Tku6h3
7hSR9AwMHY/c1FiUh7VGm4M568n1kzJpaSUFEDZoWWKakw2tKal3H5P4FlwX
e1VLzhP0W+cHi3/xxL8Pn0t1E/xTEKb6WehnBojGsE5ub8+E01Hf/7gSv4oo
Tt2y1TEVv5x/NaERloWde/Q/yBBc8Ze2LxE+MpyrOnm5+qirSxx6mk/+WmSS
hbwqSaMqBN+qC7+sTTxeAyXMT1YNv8uANLOvdi765DlXLdhM3VYJIfe3jO7b
mwF+1TaR9Z5UuOEUFOIfkQl1Omctfd74YqLYxWe+xE/ubt/0ODUzAh1T29Qu
aiRiAnvhK8/Z87waf4RZ97YB68pd10OVi2Fnydere86Mwt2CEEmLwRr4zdW9
WuX1WYhRvSFWZEGFM88b/lhlV8CDcelzk6djcFJE6KQTqYvLHz2Rt/+dAmLz
RYaHSlIxSHWj/AKSB5X0z50RMG6FOx/1Cl9OVMJ96fPvtfeNwtiCaiYxPRfQ
WGnVGSbnCy6txTJJs7wV/dyHCf3cx9y+bjmOFQdWildBwgupIu4V6fi8h9d9
uzMV9i+O9HDvK4JzpzzZ3i/Kx932Pm6jpD7tV1M7W0FJAsf1Oi/Ks4vR+FLU
KkHibzUVpnXZS3PQsIrf8OxoDQ7fa4k+do0KlbFyk80zBWhwVVJC8VUNOl96
xvPsDBVkXQwtSo7nQOcdn0CTVwUgcKmtL4Xkzc/cUe6aE3WyGsNNNRmxlP+b
o71gXYDQLb1yeNN3Z+3hnlrI/Ch0oWMDwbEzcZ5MO9OwY1pzhfKzBsyT2Tbg
sp8854P0qgi9XHB16zScmKyDmpNMluGHqPB2WTgI3i1C/w+rBSr8a3GP4NR4
7mHyu/6Ht+XlZcCtsFhgAXcjsI0IqnKNjcKQznp+9uIKvOS7Q5XJrhnvzzwx
oiSMgnKrNkcLUwGksTNbp2vWwmDrjc0HT1HB8fQ+70K5SuxgDm85//A5xt41
4SvpH4X9tOeEStpzQgH9OYsHxstdOQtQpyk+NV2iGoO++9V81aGCGX1OOi/D
nPRrdT3va5vyUEVyQ5+RVwmKKSibG8YS/PlD7FXL1yJQSam45fCuGoL7Nr/p
VKHC9fWOdlbz7WRVm36YrX6g+X/nRD7R55IP0OeSs9LP0Qg/er8tWjoPjrsu
j9Rd1gBnNC6OLNhFcOz+/87vIP38DlLo53fustv1uja4gOJCFcqvvCqIXPZq
624f4j+2qyLdXzci+9HHTBdfP8e3FtlL4m+MwttdPWtCRXJRzSS2Kn5zGcTb
9LQ8IvnuxrK8rtz1Ndin5P1c71wNXmU99ZlnERXeTZ3pdBepQQsNxZW8khQQ
0HqnGGhEhQ2xN5frX6jApx9eJkg3laH3v1uL+278vznXcvQ51xfpc65j2Xqv
nN2RhYNvVmb6DORg4jmpjPcNpN6nz4++yzA/+gRtfSF9feHc+rrDJs3v35SK
y81+8qzgy4XG7CuPTNpmdWbqvFZXVyKlnlf472k7pBS+iYHQ2f17O4Q059dh
0LuXMR62kfhX4Ll05W0qPKPPO25imHdsQIsbOI8WN3AXPW6szeF7tzU5Ftb7
q+R4maaDS4Hc4ln9jYdtYZnB7yg4kCPYnScbCdvD3Xnsye8s9H3pXxn2pQst
Phz8MLQMXX/opl78GoO7nV/wNczq39Ln5KYyzMlN/vfzk29HDfJU/rHpcchE
FaWc4znEP/vHTlMSV9ajl1hz8Dliz8KvjgLJZH19e36LM+BHPJQ67s/ffi4b
rFMibm/oJXWxt/Sa1OR0qJDPyn92KAcGqNuSJond1H9k3Oe3zcbceV+/eq3J
xEjzB6tWtsz6+X95Ae/S8gLM5YVrDHNXw+lzV6vo80+9GOaftv72t9fSJ7jl
xWDbobxcuHOe+29gIxUCJO4Nh9tSYJ+EPnwzy4MMm2lLNfL74IKlwm520dBy
PKIl5n0srFtUt8+V1JsN9P26cQz7dXPf1W0Zd0K4+Zfz+7BxDpxzNutzIXmW
2XCVv15BCfzQ8xu9ZpMLiorllFmcrEKfR8lMn0d5hT6PMqErx/vi4Uwwiolb
Yh0QAyHXfhpZkDqOlb7PcyvDPk8JC/3I47drYc++Afknh8j/e7jR3/86wbcX
20LbbCshsMZRzVfCG/TLDQ8OhFHB95Gc1HGuAmh//8Czr8oZttr/WNFP8Jvj
xu6JvauCoNd4Ku8yTxbaXx4xKiC4QlJaOEZKNAL9SjhntG7kY/CC58bRpM6a
26/ox7BfkY7ToIuG02AOp52y+8l2f6wOnIN2xLtEuuD9/YWm+zVJXlNYd7GT
Ugatd2zsPymloe9mm3Ev8h2f3EtSkgtIhyH3NGt23wI8JHao9wypHzWe/ocz
sYmGM3EOZ0rR9GeQQtOfwTn9mQfaO8rDO72RA4uvnH1fAvdPTD/3JfhW+lT1
Q2VTHbhqkS940rAc9hy7Ju9G/H/JGt7WrhNBYBSXoBbeWw2885tXL7OjwlHn
xSs6PALxsdtMRvrFCiiVVJ9Ynkjy6Yymcta3PLw67nOskj0DvjldcWgiOKeZ
PleOj2GunFzm733MzXZolEzhyNiWB7e9S8Y/knURQd+35sGwb42566vzZIw1
fJHmiz29rgwiA6Tuz85ra4qLk3lzywso+fcslpVVwJMji5ffiyPP3yx0N6ot
CN81e112v1kCB4bZLLcQu7034LsxopuJJaEh6eFb08GhPd7MidSzivQ5ZbUM
c8q+GZjv51gdCzev8+utOFMEUu+q+PeROMlG3zcVwLBvqm1IzEfMwRfsF2lY
dAmXwMjAl/3sxA5LfWP9nE0ccf+N+xIDYzkwaHRnlwKpI6JGllPOaITjr0CP
j5/kUyBGq84hjkqFQPp8q08M863s6ftqLBj21eSscsZHp8IgYc31o0mCFPh7
07xs/VcqtD+IeH/5sQ9EOtp37S93QPt94Tk/SNwY3GT+agdnKJwsSaukXksC
5gqB1BaC04yuBu8Mc3GHbLNWJh2+LLzUVZMkS3Cdw/XTdy57+oOJ4iDla1Yg
7LV3vBjxhwq2zvozV5Y7olF5m35HbDayMIfIl5J1KtFi0fZ4PAusbknq3f0U
C2Z7KC3epD4NpO9naGLYz/DC1pxnp1Q2vO9buHnfuQRQkpsy2Ejs/5ntTRnb
jkzwOdnoevZKBFrWTRes/UzsXDE8MbozDjwOCH56SuovVr/S/SIkvtXfPrwv
L9MNVT6M3M5/XIa79Cx/NRB/O2ulK5aakQvrg0yneh0SQPK1oKUSWb9Ug1F7
IZcKOKS9ceVy6QgYTb7SdYfgh/kvbnBmv0uFi1wbzo0m5CGaDP4bekEFvd4L
O59H+EL8pbYpb8kKlNMNbGMh69Qu8Xq9F5cxFKkkWi24Wo2/dOR2T7hS4fF6
wbTB9ZVweVoromt9Atjq3BGqfEaFTvrcjT6GuRuydD66nYGPvi0QsOJTVSYI
3vxzzDWjFEPPsxZlplFhkX/Lar3SGHi3b5WK7ZsKXMYZ+L2a4IeL4mzaL7OS
wGi52cWMBeVoNvxUj312n8nRhrb62zlQrLH3l8GxUhwKdRjyIut39//gwYXM
bkaUiBfBVdXGDI1POfhBekuKCYkPPw+tFP5tlor7p+5kun/Ogyub40w9Z/V4
DdbK6Pm7QS2zp9Iy3ULc5fAlWZfktd2sB2oCNubgCWPqtRebCuF3UXfMUoJv
vwksCng8mQhLeZ8Xn0+uQHHYxYoEJzC9EHAIjcjEhR//WvDtRDg4w7OIO5UK
PHEa1O9+yVAUz5RsPFiK65Qf6nCT+ODHXd3uEJyM6+bVJ4TvLocHH9WZA8l7
sbPwSGkHZoLssfD7FyNLkVnmiP6ldCp8YC2eUTyaiPsXxjf+OlkBt5qZ39SS
+uKumL7HCBPxk9RtEavUS7Byol7hFvm+dbT3wlLae8Hce01xmIpKNlDg38o/
XPkdeShWnxRJIfFB8sB/PDteovHsMMezO7Br7JSSKcLCu/bzuzEXZA66GY1R
SPyh8fjoR+PxcY7H3/U/+MfLa5umDy3PQ9vzq77GaBfB03wj5XvkvUpV/ttX
gG20fQU4t6/gGvWkT9n9ROxNf9Vif7cCLDfXXb0bQYVRGZYKtf4IvJ0ZXPxd
sRjbRNRzTs3Gq5Kr2man0jDrWQLLmXdlkOv4rfkfsecXrsudWz+GYiBzqErF
WBHyx7z2cX1O8C0a+xjEp2Da49PHHfrL4WZajUBOFBViT/xZGpMRgxUbU9Ls
t+Xj4VXJccmvqPCHrn/uyKB/Xln5sPa2oz/qDMmnlern4uIWDfHZ+V/FdF3x
Drqu+Ce6rrgNbX2hOm194dz6qnLcUvo+TQftRdkP+ClWgbTK/GuKgVRIlUjV
76H6487Jz9+9f5YTHBbq2kLWxcVdm5vH4lIxzTyvv1mwAFZ3nc4IJ98xma6D
Lcqggz1Cixt4khY3cC5uCE5Kcv7ekItNp8cVJDTisONI5Cfj12TdQZHt+SE/
2C1zt0/hUjm4J+x0Ns+kQhydP3rLwB/xT0apboh2weXHzzBby5RA/Mxf1jTy
XTTo+slUBv1k6gnF++GumVj0N5Gn+XkEXPA992Ipsc/pDuOHrI25uCthacY+
DQsc8Elbr0Di8JYsJ1sd9mzMP3nMsz8nHjcofN80e56uj3JcJrMpCxWZJizP
C8bgqy1yE6tJnprnq5zrwKIFgXvaTjz6lgNfdFdfaSO/X6XlBbxPyws4lxf0
6Xq8nHQ9XmG6Hq8JXRdXiK6LG0vXxWUT7/n40C8El3799O+Mbwo2SVh3M5N8
qtC2UkhlIAqduP/J7EtPQWPeUFa3EYI/hdSm458n4IfRJ1Pi/Zn4QJc5f9k7
kt/pPMIdBh4hycrC+71sLFQ873Gok43HqyfGhKxnf9/QWuTqFQafcnn6Pyin
4pPF+pKDo1RQouuUxjLolJ45W94UpeWFewZUct6tLMLIX5u8e15SIfR/9J85
111c+nBpJsTcihhoUEjD4Z/ungdJXita2lHnrRYIT2eOmmlkl6JyaX2yA1mn
u5cXrRc3ccJ/TO2yG3Uq8N4Xs4rjSQQvGZl3+XyxRJUh1owerTK8Z3mcokzW
y9+sJ5drYuzA8eBNWbmleaj0/VbdMfIdWeh9VFmGPuppGk4DVRpOwzmc9k/+
4LbrXT6wqTD4iJ9PBfpeznmTG08FQ8qRRs18VdAt2h1lwV6Bp/6qbF9B8s4b
NbbBnXGPsHuyim1eXzkqJXxz9CDxx5eGM2EBDWfiHM78SDsXA2dp52Jw7lzM
Lrpumy6DbpsJbY42xtHmaOPcHO2sNXquI0vj4MPk5kFtKIZTJvwT58n9Ex1M
ddxO6uBC1g8WY7/y4efRtkPvu6iwPVCqcXpLFlbvlPtUsCsDahU/9T4gef/L
4heX5FUqccK0VTCkyRey2YUXKpN4yBRYMTW2swFH/PV9G1l8UOY8KG07QwXT
vDcTL083o8aTRTEy1CQU8HniqfZnFLTpfdfVDH1XPtr8emSz+m9+PXrT59d7
/Wt2vcZhhb7qumZ+Q3HwpEG71usnFfi2tG5gKXmJXLimKsSqFKU4Ba1040Zh
l8xuSkNkEsa+/ULZnu4ImYpUi9MTVOiIevBEWqQRc85MvKiQycNLN+e1Rq6i
wiWW2pO2fwpx4655S4V8g/Djvu9ujaSe+rDCR6ebqxbd9APfZ9llYamd9MXb
GgRXS7j8ZMqrQKtrbygTI0n4uS02xzqE5BehHY1Vgoirw3u5Zdsi8Ete9mA5
wdtZ5x4lbayqwad/rSTfXM7Ctd/Ev7poU8H/olfRFyEKHkjwzrjyzglEVbaO
MJN17UTv93Yz9HsNXGKjl7t444d928rPXo+AmByObw9Ifjx0w9b+h2Q9mm5Y
f6d4MB9f8h1WHyXX14ncEjwjFI9t5YNZ7Dej8VLqgZXFJD+W/vM259eKxkWN
VJEP7/ywq3ndhQNTpL52atfraStDr81ay4Sqk9FGU06hmMR5XukdprW+GTgm
dcd6i3YKtnSknF1E4oaRzt/a9YX5GNATvFl1IAQ3rqjouEP85Fd0fiCQulo7
wKs+hCsb2Vfe9jhVSfDhnu8nS8uT8EtSgrDk/GvwNGmpTwP5LlMP9Q9G6hZj
Al+7NH9xHi4+7hbxluTNpFMxcr+oCvD3g7W1/GgS9LbrPkgg1wO9/wwM/efl
11SZouqfwakn586OKmTA1ZwOXbshghs1M3Kvny/CT7tfrjTjzsXBP/kRJiSP
5NH18bYy6OP1rv0oZjtNwRKu+lux1cSPjDYw55H19Usl4INxWjpwCDw9pcia
D9PalIVLSL3/8nrk3pTrBRB8Yt/yGu9wuHj3t0DxLH6zeLJ4u24ifjUNHjBL
T8PWujfntxAcrhF6W4zjiT2kvPPo4H7rASKuGWY2s+cs1jRD/Kt0tPbs2DB2
KQfndZ8PdyH3qZzwomzdGQPtLTFNO6SioNfgWdM9YoeQ4K9yUu/TMcNQovG3
Vh6mc/x4WEbybFdV0E/f49mgZlGu7vQ0E+yfjlILSLy9QdepO8ugU3ert7NB
YWkuSO5f/uPV+2yoiFpxV5jEh+la/b/aVcF4usGzOGgzBd3tVdziSX2kTteR
28CgI/fbf6fF+8WeULyNoq+qEY1dAmWLBH8Rv1pfyR2kkQ9m7uw21Z45IL/P
KfFpCRU2vOL+MlGTAf8mNPzCnT2heYfIps3DVFho6b7+3EQGsIymhw0XZMNb
b53jb8nz42rzbU3FTfDwAynoZAvBXy00xOr7KAxvaB2qfpKEinlMCu4/M3DJ
wlMn6ol/rp2W0FW/UQEDAoPHb93PBNU/y089JX7yZHmhnnlKNOrYrP59nTMT
b7ngRxuSp+4Zn3lsHloNxxa3TK67nwMdSmWPN9wl+POtY8BNi6e463NHit6Z
VGTiumAoPU4F7tO11QsnqmCVveDNi28yYUnkLbURc5JHvgaKr9fyh8eeKest
syOx4oIx8yZih6d0PbfdDHpukXR9ti4Vmj7bFF2fbf+gzvbh2xWwNX+blodc
JnxLqB5H8vw1nR9Uo+XKwGhBxYdXrDFQ+ezEzgd55PuKRN3SLSwGnlVuBbv8
I+DogbMmI6R+Z3Nasnpfdx3JY3avhJPz4dWyx/fk5AhOO164ykA5ExafyLpv
zusFPWciXvZ9IThkJSuHIXM7JLBNfhtTqITxoOjWnR0joEgdGHNqDMZrJ8W/
LWCKxQxn0curfpD8flSdnZ/pJXgP/0nbk1MAg8016S0vR8H5b2Pw3b9P4Sxv
KIb/8sIZk+tZmsTPl3F0tg4eaAG2d3UHJ1cUQPYH3UUN8aPw6aDtmuWTcbAh
9cTJ7+sNgWvthrsUEucF6bpncQy6Z4M9uw80thVBXqBR+mLudAiyvXftYBmx
zy3BDao3a0Fl+a6Sn4u9oVus0zXEmOTxUMOAoP3VsG6xQOFMUSG4rHs38/06
wS2GP24IFFaCqtfN7cczLXBKRPEFldRTaqe5PzwUbwLe68+zF5uXQ9LgZY0L
r0fh1TORs0GX8qHhRqiHB0sYPuPNWHWqkwrWf5MTHn5vhUelDiqiudXw4XBC
JawaBZ/usTWG5yNh3nW+XCf3LLxyg1X7EsGf6klcp75xt8PH3cduMGVVQHPO
sK7S6xHgXkjjXx4w8C9r1K/PVIq9gqfBkrIt7QXA+bTny8pdo2Ad3PHT3j4D
DI65qcieTQdN4S8jOgQvadP1xI7S9cQ06XpirYKcvsqiZfAucOl1Ze0C+HQk
YUEK8as74gr3dqxuhKqbwg0XuBzw/fiwZhzJI3YLktlOUWqBddhnTwpUwo3Y
yqiUlaRe25O88O3xStiWYaaVejIdn42ZWk56UyHguPHQllUvYFKbxa/iQT0Y
HXd6yHZ/FI6E2+1fxJcJ0PAwUO5fPiqcWIIHqgj+WaO9nJnSAgEGF7mYPzbB
i0CziOFXI3D2XIjOm2mC38wdCs6cQdwl7vIICN4Lb61N0alMQsNfql1/vKpx
Wsx0h8VjgsPpul6ddF2vpXQ+QoNmZxyn2Rlf0O3MYndXdL5kMdgb9AWd0a2C
mI3jXaFaVFhC1+96xKDf5UHX+zpM41Owk86naJ42jXNqKYGDXj+EXd/Ww54d
Hg/n85M4TNf7smbQ+yq7vcau8nEWKMs3CJxwKcYgtUdXprKp4P0/dMDsqlm+
PL6ZDZ9usN98WV4PsdwPBVvlZue2K4eM/IuA2CbOV+y6ZfjsiExmM4kD/Lva
ao5nJECu2kXHevV6OLMo6+Xrc1RQpeuJedH1xLLoemIjVNkFl6/HYo2UWZ3S
5QZsnt6ZI0yec5SuMyZF1xnroeuMneNNSankdMHG2s0zY8GVMH3Y+qpPGBWa
7JN6EksLkVWypo7zYhN2B5hvbfs5Cp/pumS9dF2yOd2wcjaDmmu6+Th1qVt/
uCYfrvYJPV5E7LBnr1Wmvk8BPrlREYmna3BxWfO2YVUq2NJ5Fn4GnkWKrm+m
Ttc320vXK7Pt4hn4OFiIh5Kbl6o9rsYNf1lLA69QwZnOi/2k6bbB3Hc0oMU9
pMc9nIt7l7lcHbt7k6FDe15vh2I17PPmZDd9QvzQdPv6LwZhsl1cf44bLnv6
f7wY/XlQk0E/bYDOl31k4MsOV/z5p/L6MSxeZ+4r3VgBJ87mDczOWftA11t7
zaC3VrmcdxP7thZkYX2+alCnEWcy3DbozoxAY/ltfrajGTjRckLaLjMX+ks7
dacJPnlA12f7zqDPplL+LF/zeBNS2vP/roisw4ctH1QuO42C2fTD0k0j5Whe
YDqsGJMFsXpr+vv8qWAxpszdb1iD350F49Z+rETbOA6eUT4qWNJ13pQZdN6i
NKIl5ofXI29GRHbJ5XhAm1GXJ6QuWEzXf1vLoP+WN7J4v0EdYoQhpy0PqV+k
Xt/beMSVChQ6H3eVgY97SNeL+8GgF9clfqhrcxwFOc4GMW/VyESV3QqtZqRu
Wk+LnxhPi5/IQY+f3XR9uYcM+nJlNLyBZjS8gXN4Q8Sw7nN6WChOOZ71PPgn
B8o/Ov1QIvXjY1r8x6e0+I/v6fHftKh0f1FYHh5o25nCXxkFXOvz2xxIvlAy
3nfhoMALXLdjwW3ejjJUWBK1I53kTcHHMYXlnlWYt4T/SOqSIIx9Z/mdx4fE
h45rKwqEalGknf24/NJiDA65p9d0hNj/o5FKgXYdKnicx6d8sRiZ1xCYr0mF
m9SIqZyTpagX7axm05uO9X5Drga5VPCj84YtDLxhXm62y3R3CmpX6xkK+Hlh
vkuBcDWpF3J+B+SbkzpL7aiB5eeSfAx5zCLMWTQKIXTdsL3t/3/dsMiyzpPP
DrzEQuZ2TbWCQsz9MfVrW/UonEw4cMV0KBL4YvZsk1iaDCun27Rm58LU0PAz
3qXhZ5zDz5rRb42jbmWif8WBrzYC1pgkGZHrRPD8EhqeQSUansH/wzNs06Fh
yxB1163LeKSTguorr2xqmp3PeOK9zrRSOdqIr9GTPhyPcgfC5x0keHVn77/w
ZY8rsD7y3aKKAxS0zDF4eCaICtWK+WUeAdk41CMzMSDiik+Um+1TP1DBlc5v
Uhj4zTz5y7utmlzwaJRy8Lu7iVCqvff87P5Y1a8Cx+7fqMbnRnahjReyUHf+
tYhVJlTguJrp9kf9CVzsa7106zgFRgTdWNcSO1z+PDoodpesC42Vxiq22cgF
kjfSDKkwfEvkyJRoDNSGyK5ne50BMgkUy1ldvh95+DeO1ONnfivJHviXiXs4
98wTdaEC+6Xu7iXGqVC6VPshG1M22BZMOKkQ/39OqwehlVYPwlw92LVHa5BF
LwsTMsW8lTyzcf4n5ludpI5YR8PnuGLyP3yOc/icO/r3sxTPXJzX2v5l0e1c
lP/uF+xMcJeQ6X7BIilX3Fgp9oIzKwykLH9undWBV/sffOtBjTHHZ9bRMLDt
xe/49EwQDF9dv4PY2Un9XGimTT6yH02MEVuRh969aw/35lOh8H/ws392BuzP
ycpCJbE7fZf/ZaDE8KmPGsR/No6mcNlapMPBS0GcFr65ILrnn+lTUkfctriU
1dmfgC+zBvgNf8ZimkxSadUoFXjclN66laXB9xvN7Pc6c+G52uvN5uR6lb60
le9mrHEw4/TU26inKGlaPXyd+Pmd5Z2Uh1oJEJf/pnThtTT4WarjP6t/uJLW
x4C/lv/1MWCuj5HPDBILPqcihXWFmftoPor83jc+f3aeAq3ehHBavQlx9HrT
ubXc7vmiEijQ5ImoeZQLv9aMTCsTuw2kxfqau4XhyA0tFiamTOxbx8y+jPzd
sYv53i0SRbCgPvBMb18u/Dz+HpIoBPduri9ueGEIiQv+Fd7RTERnvsvcr4l/
1nnGcYu7F4EVmxxXxN48KJVqjbuXRvA575/EvbaJMLVSUd9b1BoX2sQFepLr
z9N5Z1YG3vnEAYeh3t0F0LlI5M4kTzi4Xdqrp/mK3OftWpZt/hRIyF6RzT+Z
BsFXeIyqZs93n/ysMahWAZv6Txp0y1MgOHu78+y5mIAMXy4/6Qjg29qw/4ix
M6SwPadIEP+5T+trQQitrwX89L7WflrfA9RpfQ9oofc9XGh9Elgk+1+fBOf6
JHx0XSY7Bl2mZ7Q+DEzR+jAoQu/D7JW23zcSXAOGUdM7LcuzwIDdPeyaDhWi
c2pM+sOKoW7xqZX5QwGgxG7SodVAhUG3q/K7X1aAZ8kBJifXWIhtuG6QMbsv
JdhAhn+8Gg5eXVjg/ToTdBS0fwsYELy0jyouqF0E+6t63g4ERABLj1p4JMnX
IuzMWokOjWC/54NSfmkhbBUSlxpZQIUU993nsoJToGHG0cot4ilKyT7vfDP+
f30wYKf1wWCuD8Y8/9CYn7ArjO+VfDZfOwE9d98bHp78f3pHLAx6R/R+HZyk
9etgrl9naqTSPbG6HjwPU621wrXgUo5izeD12XrkvcqJxHJYJ+Mt1XzKD9WN
o+K706kQZ5dUKW2UCXn8+g90FyeimmvCpX5Sj19z/K/fCL9Y/us34ly/MZnW
n8SftP4kzvUnr9P1Sb4z6JMk0ub14C3avB6cm9fzcm+6fGhqMO6qjfi80ycH
PO994+km/oYPsXNxjSOWGbEYCN4ohaUBalTz2XlGop/jVyg+hc4Pfa5fCyvA
JsXTxDKeCt1L855KfDaE9+emfsf7VsLqO8IJ1uQ7PjHeZde3LwbvzqzXVf5c
Chv57nPHllBhvN/6nKFxPlKDxWc+kjiwaDAld3Y+6Qs6j7+Ygcf/QpuThUG0
OVk4NycrYrpWZrwwEMKzWou+ORVCnyJzsEkLyXdnnTM2jiPWpZvvHrkdiSO5
UsbiRVQwfToQ+HGvF7hJGi3Q0kNYefWe/ACJwzsL9YxFZEpwXkRCvIp8NHqO
Zl4IJHXWoZ2yYwvG1+FNxxMul1QRfrBvVFUn9dTWjs7fUnwluCIgOafDKw7P
Z2uL95Lf5/ntDUn5E4kB88aUNhnng5fSN4MH7bNzWleWcGkXodktiGTRScDK
6SXmQbVUiPeY6qJwZKLbhLtPzqUU4NrZU/iH4KIDAzukpgsLMLqsfdXPR4l4
fxk0nSL2OfI/9g+cDT2mtyyqAJ+X8DIPPknCHzUh8xpInNTXlfvwYFMuGuz7
1tjhIQ1LY94+VewneYo2Lw/LUv+blwc/6PPyJMfP+Fd9j4auj4JN23zyoNen
9d1YBxXSX4sVPdCiYGG12NngPB90Wf3YP2mE+NvQM78LvL7A3JPSwNWXB8kz
oRP53VQwk2XdFmaZhhOWfaoOfqFYrrKHiYXki8Dl5/00bY3w67XVLRyHs4D7
0LHz6SQOe6Ww1m85k4wyK+tygh5E4Y+8QeYZcn2YiuqrdLMgZH1tf/2KVDKU
CbuI95P8O8P/T+oGVxzG/lifNXAnBrmOXJ/XTX63o+9nGGTYz/D9juxmzXMJ
eLh1eg1lPslj9+TdC8nzL5MciMxiDsd36+eNqbMFgsrkFvj9i/gnXQemiEEH
Zqr/VcmeeG+sMZOCe5zu4NYpvrDiLxWU/W4NJrPF4pTSzNqbXwmOkt0l/Ifk
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
7oeNNx6AjE/a60PGJ/fDxicBOOUEGQ==
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.7931854796686046`, 
            2.7931854796686038`}, {-1.7199475781022886`, 
            1.7199475781022886`}, {0., 0.49709275031586714`}}, 
           PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = {
         1, 2, {0, 0}}, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$15605, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1060000000000001, 1.2650000000000001`}, {1.9, 
           0.8}}, "latticeNorms" -> {1.26943333814738, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.08350182464460659, 
           0.9965076242964835}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {29, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.3450209168930866, 0.8194246776210806}, {
           0.5455643248371933, -0.045715271488334014`}}, 
          "reciprocalNorms" -> {0.8890985521235303, 0.5474763178278259}, 
          "qMaxVec" -> {5.586370959337209, 3.439895156204577}, 
          "mObliqueComponents" -> {{0.26307844913097844`, 
           0.45900720231164016`}}, "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2120000000000002`, -2.63}, {
           0.6879999999999998, -1.8300000000000003`}, {
           2.5879999999999996`, -1.0300000000000002`}, {-1.1060000000000003`, \
-1.3650000000000004`}, {0.7939999999999999, -0.5650000000000002}, {2.694, 
           0.23499999999999988`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8939999999999998, 
           1.165}, {1.0060000000000002`, 1.965}, {2.906, 
           2.7650000000000006`}, {-0.7879999999999997, 2.43}, {1.112, 
           3.2300000000000004`}}}, "lineTable" -> {{
             
             Line[{{-10.674000000000003`, -39.885000000000005`}, \
{-4.525999999999997, 33.485}}], 
             
             Line[{{-8.774000000000001, -39.085}, {-2.625999999999997, 
              34.285000000000004`}}], 
             
             Line[{{-6.874000000000002, -38.285000000000004`}, \
{-0.7259999999999973, 35.085}}], 
             
             Line[{{-4.974000000000002, -37.485}, {1.1740000000000026`, 
              35.885000000000005`}}], 
             
             Line[{{-3.0740000000000025`, -36.685}, {3.0740000000000025`, 
              36.685}}], 
             
             Line[{{-1.1740000000000026`, -35.885000000000005`}, {
              4.974000000000002, 37.485}}], 
             
             Line[{{0.7259999999999973, -35.085}, {6.874000000000002, 
              38.285000000000004`}}], 
             
             Line[{{2.625999999999997, -34.285000000000004`}, {
              8.774000000000001, 39.085}}], 
             
             Line[{{4.525999999999997, -33.485}, {10.674000000000003`, 
              39.885000000000005`}}]}, {
             
             Line[{{-10.674000000000003`, -39.885000000000005`}, {
              4.525999999999997, -33.485}}], 
             
             Line[{{-10.568000000000001`, -38.620000000000005`}, {
              4.631999999999997, -32.22}}], 
             
             Line[{{-10.462000000000003`, -37.355000000000004`}, {
              4.737999999999997, -30.955000000000002`}}], 
             
             Line[{{-10.356000000000002`, -36.09}, {
              4.843999999999998, -29.69}}], 
             
             Line[{{-10.250000000000002`, -34.825}, {
              4.9499999999999975`, -28.425000000000004`}}], 
             
             Line[{{-10.144000000000002`, -33.56}, {
              5.055999999999997, -27.160000000000004`}}], 
             
             Line[{{-10.038000000000002`, -32.295}, {
              5.161999999999997, -25.895000000000003`}}], 
             
             Line[{{-9.932000000000002, -31.03}, {
              5.267999999999997, -24.630000000000003`}}], 
             
             Line[{{-9.826, -29.765}, {
              5.373999999999998, -23.365000000000002`}}], 
             
             Line[{{-9.720000000000002, -28.500000000000004`}, {
              5.479999999999998, -22.100000000000005`}}], 
             
             Line[{{-9.614, -27.235000000000003`}, {
              5.585999999999998, -20.835000000000004`}}], 
             
             Line[{{-9.508000000000001, -25.970000000000002`}, {
              5.691999999999998, -19.570000000000004`}}], 
             
             Line[{{-9.402000000000001, -24.705000000000002`}, {
              5.797999999999998, -18.305000000000003`}}], 
             
             Line[{{-9.296000000000001, -23.44}, {
              5.903999999999998, -17.040000000000003`}}], 
             
             Line[{{-9.190000000000001, -22.175}, {
              6.009999999999998, -15.775000000000002`}}], 
             
             Line[{{-9.084000000000001, -20.91}, {
              6.115999999999998, -14.510000000000002`}}], 
             
             Line[{{-8.978000000000002, -19.645}, {
              6.221999999999999, -13.245000000000001`}}], 
             
             Line[{{-8.872, -18.380000000000003`}, {
              6.3279999999999985`, -11.98}}], 
             
             Line[{{-8.766, -17.115000000000002`}, {
              6.433999999999998, -10.715}}], 
             
             Line[{{-8.66, -15.850000000000001`}, {
              6.539999999999999, -9.450000000000003}}], 
             
             Line[{{-8.554, -14.585}, {
              6.645999999999999, -8.185000000000002}}], 
             
             Line[{{-8.448, -13.32}, {
              6.751999999999999, -6.920000000000001}}], 
             Line[{{-8.342, -12.055}, {6.857999999999999, -5.655}}], 
             
             Line[{{-8.236, -10.790000000000001`}, {
              6.963999999999999, -4.390000000000001}}], 
             Line[{{-8.13, -9.525000000000002}, {
              7.069999999999999, -3.125000000000001}}], 
             
             Line[{{-8.024000000000001, -8.260000000000002}, {
              7.175999999999999, -1.8600000000000003`}}], 
             
             Line[{{-7.918, -6.995000000000001}, {
              7.281999999999999, -0.5950000000000002}}], 
             Line[{{-7.811999999999999, -5.73}, {7.388, 0.6699999999999999}}], 
             Line[{{-7.7059999999999995`, -4.465}, {7.494, 1.935}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.494, -1.935}, {7.7059999999999995`, 4.465}}], 
             Line[{{-7.388, -0.6699999999999999}, {7.811999999999999, 5.73}}], 
             
             Line[{{-7.281999999999999, 0.5950000000000002}, {7.918, 
              6.995000000000001}}], 
             
             Line[{{-7.175999999999999, 1.8600000000000003`}, {
              8.024000000000001, 8.260000000000002}}], 
             
             Line[{{-7.069999999999999, 3.125000000000001}, {8.13, 
              9.525000000000002}}], 
             
             Line[{{-6.963999999999999, 4.390000000000001}, {8.236, 
              10.790000000000001`}}], 
             Line[{{-6.857999999999999, 5.655}, {8.342, 12.055}}], 
             Line[{{-6.751999999999999, 6.920000000000001}, {8.448, 13.32}}], 
             Line[{{-6.645999999999999, 8.185000000000002}, {8.554, 14.585}}], 
             
             Line[{{-6.539999999999999, 9.450000000000003}, {8.66, 
              15.850000000000001`}}], 
             
             Line[{{-6.433999999999998, 10.715}, {8.766, 
              17.115000000000002`}}], 
             
             Line[{{-6.3279999999999985`, 11.98}, {8.872, 
              18.380000000000003`}}], 
             
             Line[{{-6.221999999999999, 13.245000000000001`}, {
              8.978000000000002, 19.645}}], 
             
             Line[{{-6.115999999999998, 14.510000000000002`}, {
              9.084000000000001, 20.91}}], 
             
             Line[{{-6.009999999999998, 15.775000000000002`}, {
              9.190000000000001, 22.175}}], 
             
             Line[{{-5.903999999999998, 17.040000000000003`}, {
              9.296000000000001, 23.44}}], 
             
             Line[{{-5.797999999999998, 18.305000000000003`}, {
              9.402000000000001, 24.705000000000002`}}], 
             
             Line[{{-5.691999999999998, 19.570000000000004`}, {
              9.508000000000001, 25.970000000000002`}}], 
             
             Line[{{-5.585999999999998, 20.835000000000004`}, {9.614, 
              27.235000000000003`}}], 
             
             Line[{{-5.479999999999998, 22.100000000000005`}, {
              9.720000000000002, 28.500000000000004`}}], 
             
             Line[{{-5.373999999999998, 23.365000000000002`}, {9.826, 
              29.765}}], 
             
             Line[{{-5.267999999999997, 24.630000000000003`}, {
              9.932000000000002, 31.03}}], 
             
             Line[{{-5.161999999999997, 25.895000000000003`}, {
              10.038000000000002`, 32.295}}], 
             
             Line[{{-5.055999999999997, 27.160000000000004`}, {
              10.144000000000002`, 33.56}}], 
             
             Line[{{-4.9499999999999975`, 28.425000000000004`}, {
              10.250000000000002`, 34.825}}], 
             
             Line[{{-4.843999999999998, 29.69}, {10.356000000000002`, 
              36.09}}], 
             
             Line[{{-4.737999999999997, 30.955000000000002`}, {
              10.462000000000003`, 37.355000000000004`}}], 
             
             Line[{{-4.631999999999997, 32.22}, {10.568000000000001`, 
              38.620000000000005`}}], 
             
             Line[{{-4.525999999999997, 33.485}, {10.674000000000003`, 
              39.885000000000005`}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.7931854796686046`, 
         1.7199475781022886`}, $CellContext`qPlaneLoc$$ = \
{{-2.7931854796686046`, -1.7199475781022886`}, {2.7931854796686046`, 
         1.7199475781022886`}}, $CellContext`rawArrayOfMasses$$ = {
         10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 2, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1060000000000001, 
         1.2650000000000001`}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
           LocatorPane[
            Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                  Dimensions[#]] < 3, 
                
                Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
                If[First[
                   Dimensions[#]] > 7, 
                 Take[#, 7], #]]; 
             Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
                First[
                  Dimensions[$CellContext`rawArrayOfMasses$$]]; 
               If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                   $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                 
                 While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                  Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                  Part[
                   Part[$CellContext`kArray$$, All, 1], All, 1]]; 
               If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                 Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                 
                 While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                  Part[$CellContext`u$$, 1], 
                  
                  Part[$CellContext`u$$, 
                   1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 1], 
                Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                  Part[$CellContext`u$$, 2], 
                  
                  Part[$CellContext`u$$, 
                   2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 2], 
                Part[$CellContext`u$$, 2]]; {
                Part[$CellContext`u$$, 1], 
                
                Part[$CellContext`u$$, 
                 2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
              If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
              If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
              If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
              If[$CellContext`omegaIndex$$ > 
                2 $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
              ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
               2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
            LocatorAutoCreate -> True, ContinuousAction -> False]]]]), 
      "Specifications" :> {
        Dynamic[
         Function[$CellContext`k5manip$, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
                Row[{
                  OverVector["q"], " = ", 
                  
                  Module[{$CellContext`qm$}, $CellContext`qm$ = 
                    ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                   Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                  Dynamic[
                   NumberForm[
                    MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
                Row[{
                  Text["time, normalized to one period, t/T = "], 
                  Dynamic[
                   
                   N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                   1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                   ContinuousAction -> True, Appearance -> "Open", 
                   AppearanceElements -> {
                    "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
                Row[{
                  Text["oscillation scale factor:"]}], 
                Row[{Manipulator[
                    
                    Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                    Tiny, ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}] " ", 
                  Dynamic[
                   NumberForm[$CellContext`scale$$, {3, 2}]]}], 
                Row[{
                  Text["Angular frequency \[Omega](q), selection:"], 
                  Dynamic[
                   SetterBar[
                    
                    Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
                Row[{
                  Text["number of mesh intervals "], 
                  Manipulator[
                   
                   Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[$CellContext`freqMeshSize$$]}], 
                LocatorPane[
                 Dynamic[$CellContext`qPlaneLoc$$], 
                 Dynamic[
                  (Graphics[{
                    Lighter[Gray], 
                    Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                    Line[$CellContext`qPlaneLoc$$]}, 
                   PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                   ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                 ContinuousAction -> False]}], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                 Row[{
                   Text["mass: "], 
                   Dynamic[
                    If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                 Text["coupling to neighbouring: "], 
                 Dynamic[
                  If[$CellContext`rawNumberOfMasses$$ > 1, 
                   SetterBar[
                    
                    Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                   $CellContext`massLabel[1]]]}, {
                 Row[{
                   Text["horizontal: "], 
                   $CellContext`kLable[1], " || ", 
                   OverVector["a"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                 Row[{
                   Text["vertical: "], 
                   $CellContext`kLable[2], " || ", 
                   OverVector["b"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[3], " || (", 
                   OverVector["b"], " + ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[4], " || (", 
                   OverVector["b"], " - ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
                Part[$CellContext`k5manip$, 1], 
                Part[$CellContext`k5manip$, 2]}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
          If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
             Row[{
               Text["coupling from "], 
               Dynamic[
                $CellContext`massLabel[$CellContext`m1Sel$$]], 
               Text[" to: "]}], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 2, 
               SetterBar[
                
                Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 DeleteCases[
                  
                  Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]]]]}, {
             Row[{
               $CellContext`kLable[5], ": "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                
                NumberForm[$CellContext`k5$$, {3, 
                 2}]]}]}}]]], {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.7931854796686046`, \
-1.7199475781022886`}, {2.7931854796686046`, 1.7199475781022886`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.7931854796686046`, 
          1.7199475781022886`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$15605, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1:eJwNlvkj1HkcxgfzncmRO6F2Q0puSSXX+1PKMZscSdIpdCEqySodSG0iqXTY
EJJKKjkmyWekJLlWKhS74xiMYQ4zDA12fnj9Be/ned4v/f0RPiFkEokkI0VF
irIUWSkUn+/+T50FWNbwbMl8IZlBH8z+LokaBOc2w6ygpzN4nzu1P7WDjAQM
B2PtP/mYcnu1DfYZxyOqOcXm9WKcca7UqvEOCy535PKZOwbxuZyPqmdIBLKa
TmCmVdPBtObG9dAADiZpVziITjyDKl0n23QXHlysJlS+3xqBRdEy8Z89qSjA
55zzuovTsPqlJm/DSi7OA23l4WQ+zAzo3rae44CfeX1OIWcG4mwGQnL8KGjZ
dfd38asJ5PHoucP1I8PYN8yCjlTJaEPAmrZ+PQHEWF1qGKxVQGEJfRv3beVj
K3SsZ9qDzChwbD7arcEGlZejROWPX7j8SeSt8wUEuvk2LT3x3BjWdF0D9crj
+OLa0E77I2K8yk2ssnsNC3TNg7L4zEFM3tdlWFhMRiSXWnvXNQ+hxmXxi3xN
LrbSbHKj9BRj65cnrXqSxyC80bBvV+sQvHBtSO4mU1GJ84sozfIp+FClwnHe
OYIFtMnrd6yFsGxN3oeKP3hgIvvhma8NCTXXuaWH6VFRVZP9weObKaim9Vtk
VjsHi08ds13TK4uaeJOXvyIeXNZp8F8SI4/Y6o/CJEECfNRi0ckgBYJBS6yj
7X0/BPP1XgXdqZXgK3WfvaqSCaRalyKK1+BiiVN2xJA9Hy/pdK3q7xfhZ06y
+sLjw2AgOnIx61Aflo+fMhBvJ1BajnGC7lgtpOvOi1wXwseaUQlsGftGXPni
547SIjaUM7r43tF9UJE4WZGsSkHWcZysR+qTAOLe+66qw7idsZXmWi+Czft2
LmfV8cF/KLYh2E4GjUc8rabNUlH7aPkCvXNUdOn9DDe3gYOVbhR6Ph6QRfsf
tctl5XJB8pO1QdFUHpmw3MO1fYS42XfqJXMvhaGo4XZHf7QffgiuGhmGzuE/
ir8zevLJqGC36R0JVYDH19Ce7bnHxW2MArZkeBwTy+0ruzo4UCTvkrc/rBur
aTL7I1wpqP9fjQodz3Y4xBu+6PKOj02GekMlS1qxtp/oxjKNYXi0RL3aBjEh
1Mz589wpAo0mmpF5YSKQ+/sYq6aWjWNLPpZsyRTCbgmI/9nJh2qq2YkgHglF
aX1SUpObh9LmT2S/vkhFq77HHqJtH8astmUEW4uMai43zL/szgeK3CeRiqUC
sl7A77w0X4RjRQ6Hw5gUxvQ32jzTx70wnXBvlSSOxIgkh4w/H5JDk5bxSbaq
QqwdqeecRePhDVrxMXtuC/ENpaqbK+s4sDG0UG8quxu/MHzvvyCOgqr2BRNb
c75BK3PSRdaJh0kTz8dmhdV485dVXyVRIxDftfCVcXI/1BHNQvceAgW77Zen
X5oAd9V5Hdb5YzhL8Nro4CgfLK4GHOudGoOT4XbWHbQ5oMdvY+cbU9G1v8Jk
Vu6gIE+D7Tu+mLAwL+WER5ElgVJ9BDXbF47DmqrEt/ZHFdHi/SmbuE3j+Kbo
XO4VMoXBWXqtKTy4H/56rYazPs1hA5WBwe16ZPQ5K6lzZ/Q4fvLE/YqehQAv
DE9nvlo1iV2V6sxGtgzDi8BHH8PvSfOZZIPSMIE6rJqDbZiNYC9vidljHMy7
GmvzKTsH7H7eGNnuwgW7LN2y39uGYeXKCzXq3yjIoBtG6DZTkLj5pdpeFx52
yeSk12TywHx3faKXLwcEpbWnUqNngMh5XB4RQEHFF7wG6uwItFBVrr3iMQsf
ac380iZHoHD6Fjltj3HYwk7vCLyhiAxlT1dzh/iYF8yM8C8jM5QDXutpbxqC
MtkHydcWzWAnjckD/qoE0irvqejp4WGLew9Te46P45ZTt2JuCsW4QMHH7k8j
FugtGExJmhjEg5YtZ6M7yQh1lHKSSSXw45Y2n3jMwYyplEtpjwvg10PCy3Ed
D5zSV1ElkSMwl9bgccaPino6Nb3ot6fho66ru8mJMXy8bmkGTUUAP6947lmT
OQpM/aPLz/jPwnur2UzucQrq3fdhY/4uAi1zftOzdTMba9E8RA7v5FBYPpez
9SUfDJfbX2mMVkAO+aVHxMF8rHTqSOvSADIjk+y4S3U5G4K0+LrLW37hrdd3
2yyjE2iF04yi+LcxbPjs9Wz5WwHmskoSzacn8Qur0zriYhb4WD3f52A/iMN4
C9qrGWS0z8jPLjb6KfRl1JxWEnGxV5qt0Xm91/hJ1RLb6/RRmLNUPEsrGgTZ
va/ebJDez3h3aorj6im4cK6PrpvBxm2GFxR+VgrhWLbKgXQ6DxbotOqknSOh
AyLsLfSnouOB6ZoZ9yhoR1O1d5/lKFbs1DMqeieLykPL40LEXHBwnl/03E0e
PVE3KdRpEeDyCXnlUF+C8bvfh+rVxBA4evyTVO46gwtlJYrSKqHFmmo8g1Eu
Nruhkr6llYfDPyltNPYSYU/DMxnXfdkgFjn9fGfVi7kGfyz/eo1AhcnWAbdq
6qH+Ud5QUAEf+6vM5d5XbMGzkX7BubJs2DtPmeaY3At/pWzIiZb276pid9Kq
yxMQ8jSkollrGFu7xvq/rxWBWsx57NjDB/HBOyVJNBlk3B93+77WPDQd4WqF
c6T7IooL6XLkYCv3W7meWnJIM27ghJjEg3bPQKrkD3lUcmtSwz5fiK0cUlsf
3qEwErL8WIIV/fD2dfLZSsEcbvfqSrp5lIwSvesi1bMEmHn68PmlUVzs3baN
ntYyjnkWi3w8rUdB+1lF1oKTP/GKI8Ueuw5T0B1Dl8N2dV+Bnp05V53Kx26f
/VavoDTjvmyL33XdhkHPlLX74F9M8G4xOjQl3U+t2oGdPdL9zF7rMjubOoIj
uqoHvysLgVYl96uEzAfJu5i15qUk5LRB2G3BlPrA2pCiPmmuQ2zd8vkxQ3hP
Sn8TDiKjYrug35Ir+WCWT1U0jVNAsfMzivvGhDg35YcmNFIYWcP6zkUve8Fp
07J2xdMkxiHcani+Ww5Z7ky+tsxSiOsGlYZC83k4+5ip+nkNEX65+xu3ey0H
OE50SYTxv7imapF8czAFXS4xqOm88RWMbGPC3tzl4kPqbPcKizLsueBV1S4v
DuTsUdYPqRyAdtDX3SH9f7vcG18skv6/dT96OAMBXKzNmPMxiOBD2zX7cPGK
MeB80IGTlbNADvTr+8CnoP/2WCZPKFKQeeTSTbeHBrADUV9xzYVASZ5jnSyv
cThy7+ktuQxFFNMfZb9p7zhu/LmNq0wnGC812TmXrAbAvEHtwDWHOcyJm6pZ
u5mMhLoUB7UZAS74p7yr66YAPzhFYpfUTOJpCa1dEDkEuaVBedDUj3NNtpPl
LxGI96t/lDz3ESwV1/rSEqT7OX/ogRrnMRRF5t7O6+aC4+zf3yCPDTvWBzaX
Sv3Fd2NEe17ZFCxuMutqWs3DBVGVlMISHqSWsVMVEQfob7Ltrh6agU69baOb
3SgoylK8p0yfQKuieX+G0AaxsIx+YXMjGUUXhq4qUhuHFYErLnkdUUTtLM2J
Kzl8/K6yjOWZQGYktOrcyZoegvtmB2N1syS4r2v9m8CNBJqwiyuX8+Th+tMb
VpfHjOOZhf4djyRiPHYliWIwOABO099nTnoO4fT9GnaL35LRfx8/qgzYPIG9
xL/6ukajmJSYvjrwym3IMFuySKLGg/z167uiySOgPRm5skPqn/9s09y2S+qf
v9ZzUu7fH8XliXfLmLkCWETbZrR+xxgYt/2u0/5jFnqb9UZH7lJQi0Az91I6
gTaRbrYZG47gtuLtJo9OyaFOza+VxxAfxh43mNavUECtdWu32afx8dXpLTIK
MWQGt/eVx5S0/xrhkSkHBn/hq8cveNCrCLQxfVD2GXkMR75LsA3fJcB3C0O3
vToxiXmp2XXzvAfhnnzuTtudLNxU99rivx4yyqn9JZzklsD7deumqaE8fPnL
Q++dYTW4JuNypZnUd/Y4rohYEs0C2Sy/j8ceUNBZjmOxXZ4Y7lqGex3mDeNh
nMTZay6C8na00XwRH5qt1E3La0nIN5K1N+gaFWVsJQ9/GZB6dkdgkIn/KPad
lSHXlMqieE6sg/x9LhScep/0m7E8snpztOMDjGOXACUdWi7BIK98lyhnOQiZ
LQuojB8zePprkOZdGwL9fKJhVBDLw6zueOPeCB7uZ7WqMhuEWMbAd22T6Qj8
Peoks57KxNPmJ2Ud66X5VNcdV37QBPvSQ/g6rXwcr/pgKjysFYvq9a/bnh+G
A8kHzk59Y4LJ15Oc0VcEqhcVptxXn4CDkwHeWj7DuNSqbn7jPRFYt2RNUn7w
oX+CqbTFTQbJz3DyPA3mofOnWt8Mv6CiP5fde5yYPIKjeg5xuVvlUHSwP93H
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJx1XXVYVU33BcEEBbvADkQQC0VFBzHA9rU7ELuxFcUExW7FQlREMZAuvXRe
4NLNNcFAUVHE/r0/7t5zPvZ8n//4PPuZZzNnnX3m7Flr3TPtbdZOWlxDTU1t
eD01NY1//w/0q3BdP6NWWA/nVWEl+3/Kaq/37+sfkMcwHlxn7u6d577J+v2w
ylidn8PjI53GWTT2KJeZJbsmOv7J5HE3LXu1SRvKZNuSbELC1qaRPCUyyx5K
k26bUnj8ZtV4pUz2+durizuTeNy1Kp4iO1LLoN/MP3IeV4N/Ob1a79sWnkzH
s727Sl4P80wlcSVTdy4NrgjK4PFA1XzYhaLrJV3uZpPxZezS3YcW7b/m0utl
XY78Sj4/P5/iwwyNZpx5opTigCfr3WXVhaJT+Szikl66eVcNjrP9wb96+TVz
eRxxtq9furdzaBaPI85rjGaPvT4kk8cR58eHLEO0ojJInhLZYmf/yIVhUhxx
fvlLM/aAtZQHcY57klHyaJf0dxHnrLItlbajcuh45iN/P2/a8DwSV7Jjtsv/
2VUpXS/ibLdIz2R/g0Iyvoxd0HWt2WROIb1eVnjVtP/1ZwUUHzbgwbJRWTEC
nkzh+Gb53+l5zEXjQD3d0r8yxPnOwZ3Fy2XZPI44v+7u3e9MLymOOA+5duq+
z2Ypjjgnn3r/vGGfHJKnRHbXOrC7gW0ujyPOsRrn1uz+Ks0HcdbV17EzuV3A
44izb/cb58Z0KKLj2fi9p+PntVSSuJIlsYtr0mZLccTZ5LNNrc4FNE8ZS3zv
ceH5w0J6vczoVP7jPdoFFB9253OHPestBDyZXfejD3t45LAHKYo17oe+c5yb
nVkyZMa/uGEccb66MGRR/A8pjjiPSp92q5Z5Lo8jzkMfZsyyKs4jeUpkfzv2
1hzpVcDjiLNlnvXft1ZFPI44TyiPPzBykZLHEec7BSv15imUdDw7ZlgY9sWe
xpXM51zy+GbbpPyIc9OpP/QKvxaQ8WXM31g9+M/gfHq97NiLxi4tbuRSfNif
4CyP9jYCnuzCnYHHf57PZpFVdV7Ocb54Z9zeMyY5PI446+Q3NPw1J5fHEeeM
oTZHUr/n8Tji3ODG6oLfRwtInhJZEx2/ga2DC3kccXZ1rHGwbHARjyPOFjVT
xn78KY1HnHXuLLPQ+lVAx7MPgfN+31+dT+JKtnz5o5zmt6T5I84vNjdotaZO
DhlfxiIeGJ+b8iqLXi/7MjIiIHR8FsWHHX56eklBjyyKJ3uSc7DPuaNZzKsK
/zcc5/ups1/qF+XyOOIclr5iTFGdfB5HnK3+eT1E65sUR5wbFw4deXFiAclT
IutdX3erZ5E0HnGetmhfsNuJPB5HnLc3Orpm1J4cHkecv2S2PdVbPYuOZzNH
NVkxzTWdxJXMJPiUz2fNNB7n60aA+deQNalkfBlznNQ3be/1VHq9TH3AP0Ne
2qZRfFj+77p939hmUDyZ537LTTNtsiGey3EOPB6zz294Po8jzkr3wae+nZfi
iPMl98murnpSHHF2tY8ZPd0jl+QpkW12XBh1tKf0dxHnLcmhT+4lpfM44uzX
Sn4k62QKjyPOE52b2ZgExNLxLGCbS9HVKZEkrmTup5u9+X5YiiPOqx+dz3Xx
jCHjy9jns5azWi5IodfLFjv3rp3/JZ3iwy66X9MyXy3gyfz1v9kteZrLVLMO
C0WcrYYNbTpyXj6PI841j2mo207K43HEWb/Gvb9fjHN4HHGW955w/cHHDJKn
RLay/xL/M94KHkec1zy4uC7XIpbHEefzvbuFHS4M4HG1//qPj2d7yXjEeSHJ
jzgvIfNBnOPI/BHnVuR6EWcNgg/ijHh6qPBniDPij3HE2QXuF8YR56VwfzGO
OFdAPVTPUyJbD/WDccT5OtQbxhHnR1CfGEdkraCeyXjmCfVfPa5kG+B5wTji
vBGer+rjy9gVeB7J9TIXeH4JPgyfd4Inw/Xhnmo94Tjfg/UE44gzrj8YR5xx
vcI44uwE61v1PCUyI1gPMY44G8H6iXHEeTqstxhHnD/D+kzGs62wnlePK9kU
WP8xjjjj+6L6+DKG7xdyvQzfRwQfFgHvL4InewDvuzDV+5HjHArvR4wjzkfg
fYpxxPkzvH8xjjiHw/u6ep4SmRLe7xhHnJdCP4BxxLkU+geMI84NoN8g49lg
6E+qx5UM+xmMI87Y/1QfX8YaQr9ErpelQ39F8GENoR8jeLLz0L+p8P/OccZ+
D+OI82/oDzGOOGM/iXHE2Rf6z+p5SmSNoV/FOOL8EPpbjCPO2A9jHHG+Df0z
Gc+w364eV7Lh0J9jHHGu2UnVz1cfX8ZGQP9PrpeNhv0CwYddg/0FwZPhfuSC
av/CcV4P+xeMI87usN/BOOJsCPsjjCPOSbCfqp7n374O9l8YR5yTYb+GccQZ
93cYR5z9YD9IxrNGsH+sHleyRNhvYhxx9oT9afXxZSwF9rPketlQ2P8SfFgJ
7JcJngz317Aft0CccT+OccSZ7N8tEGey37dAnC9W5wcsEOcN1fkEC8T5RHX+
wQJxJnyFBeJM+A0czwgfYoE4E/7EAnEmfIsF4kz4GbxeRvgcxIcR/gfxZMgX
+av4JY5zH+CXMI44GwAfhXHEuSvwVxhHnK8C31U9T4nsKvBjGEecawGfhnHE
2Qn4N4wjziXA15Hx7Czwe9XjShYHfCDGEefhwB9WH1/GtgLfSK6X9QN+kuDD
egOfSfBktQj/iThPnjav8OTEdIEXvaJ8M3GSTZrAi45eOmbPzUmpAi9qOjs/
/nYLhcCLOv0NDt1llSjwonKX8H6++ZECL7rF3Xle/KvHAi/a5vNiuZ3GY4EX
rasxe6tWjTCBF42xsrcLOBQu8KLdV93so29I/24Z+xMY3tmzRrTAi+4tydt/
5leMwIseavqgpvb7OIEX7WZVWfONR4LAi06+ek9/W4dMgRdN2eJxtt3SDIEX
7dh4/NeMGWkCLxqyP/1toH+ywIt+Mho6NfZ0vMCL/p3nGbntYYzAi6r/mnrl
Z9MYgRf1mbE1L9xfGM8cNTu0/iKLFXjRiN93bzWpjBN4UX/2rW3ArASBF511
fmaqvTJR4EXzrsy6obE+SeBFV2xzk4V8TBZ40anzGl9op6cQeNFt892s3rfO
FHjRVSExFw9tThd4UTbrT5zrtFSBF9Xp5K412jxF4EW7Wi7pvL9lksCLnmp7
ts0RHbnAizaX7wu64pco8KLLVo2WtU5IFHhR2e1VV0b0o3mU7NZ5k70DyuUC
L3pWTbOe/vckgRcdt/5NULv/mD/inHFSobd/hkLgRX3yntp+MkgVeNHNS3+9
sqqXJvCimvenFc98mC7woh9GGwWnuqQJvOi2xgsHDdqSKvCik3YU3QxzUgi8
qGbJxch2Z1MEXrRscuPkMSuTBV7U5eqmuQePJAm86Mu67TfV/ncdprxoWumL
NrViaFzJXniFPq5RIhd40b63pplmLkoSeFHvgTH7K8YlC7yoR6dBdQIyUwRe
tPfThVeN26QKvKh1odoh3fA0gRfdtT7uXC23VIEX9dtuXbC2R6rAi96evd/j
4j6FwIuOCB6UPNQpReBFnR09dsWpJQu86AH/M3/WHZULvOjJihWpMy0TBV50
0bfIbsnGCQIvOumKstHR6fECL9oouk0oS4sTeNHW7fvHXCqNE3jRZo6PZved
miDworrjxs30uJkk8KKt0r7nlFilCrzowgaGJ8wK0wVedMqQs0uNmiULvOiU
5bP29+qQJPCiDn+0ngdGJQq86J1V7XdpdE4QeNGQ4jantq6ME3jRZ7/q3Q0M
jRF4UY2ToRlfTKIFXvRiufpp97BIgRe1ztMYajY/QuBFa11eFNPjSrjAi4Y5
fwtvuYTmKWMatSYldr0SJ/Cijit+J4zckyLwojrpSWr7WZrAizoVemSemJgu
8KI384edq3MmQeBFxy05+LimY5zAi1480FDDuE2MwIv+nLXyt9u2SIEX9Rn5
bOq4mDCBF223Zuj4+86hAi9aq+R2p5jtgQIv2vXK+PXd+/kJvGgn//hD2n29
BV70ouGsX0FHgwRetFX3h50ano4SeNH0x2bygb2F62XuM40O7LRIFHjR0BMh
b4YbJwu8aPnnUT4n1igEXlS3bJzTxMBEgRcdtNpvq3ZInMCLepk9TVkxJVrg
RbVMN27WOhYu8KJmA4P2mJYGC7zorsf1X8809xZ4UccXW5NaLnejcXbuv8aV
bCfJg3gOIX8X8axP5ol43ifXhXgOJjggno0AN8p/fgacKf8ZDPeF8p94Hyn/
qYD7TvnP1lAnlP+8AnVF+U99qEPKf7aHuqX8599iVZ1T/rMFPBeU/3wEzxHl
PyvhuaP8Jz6nlP/E55rynzdgHaD8pyOsG5T/bADrDOU/nWBdovxnTVjHKP8Z
Duse5T81YJ2k/OdIWFcp/3ke1mHKf/49oVq3Kf9ZBOs85T/xvUD5T3d4j1D+
cye8dyj/OQneU5T/xPca5T/xPUj5T3xvUv6zIbxnKf/ZFN7LlP9sBe9xyn/q
wnuf8p8ToE+g/Cf2FZT/PAF9COU/90LfQvnPQ9DnUP7TEvoiyn+6Qx9F+U9f
6Lso/7kT+jTKf2JfR/lP7AMp/3kb+kbKf2KfSflP7Esp/4l9LOU/U6Hvpfzn
M+iTKf95Cfpqyn9iH075T+zbKf+JfT7lP3FfQPlP3EdQ/hP3HZT/xH0K5T9x
X0P5T9wHUf4T902U/8R9FuU/3WFfRvnPMNjHUf5zBez7KP+J+0TKf56BfSXl
Pw1gH0r5T9y3Uv4T97mU/1wJ+2LKf+I+mvKfuO+m/CfZp3NejuzrOS9HeADO
ywVW5w04LxdZnWfgvBzhJSz+B4/BeTnCe3BejvAknJf7WJ1X4bxcUHUehvNy
hLfhvBzheTgvh7wQ5T8NgUei/OcR4J0o/+kEPBXlPzWCVLwW5T97Aw9G+c8E
4M0o/6kDPBvlPw2Al6P8pwPweJT/TADej/Kfe4EnpPxnf+AVKf85BnhIyn9e
A96S8p/Ic6ors1ctOqoR9vfiiq2tav+U+Zx7veGoWi6Pb9oy4eDTzl9kXWNm
FA70zuRxxL/x4eZHG6ghb1zMn5eee/rJI/vn8fF8PX867NeVaVKe5ufHVI4w
LJcdb2c+MPplBo/j/ep7auTsvduk+PDuW9cFbPkgW949J6ugQwaZT4nsl+fg
Nh5tpfgcg5kfn7sUy4abXetmoibF8f5uKNh3b/wWKf569ManevaFMq9Cx+uz
1kpxrv/eNh8Svkuaf7eq602UaedpDSt3keJYD5U3XT5NMMqG9c5V8BX4VeGW
xXEzLP56tsQqn42uE2Q2NUItLPXOsp7jDv2QFXW7mHRhVzbPj8/FscUVDs3M
c/l4vn+8GXbIrIk0PrBq/teY57MDWa6bsul1sdIaxrp9e0l55lbhViGrt0rP
Pts3i8fxPjpHDG/68HUWz3MkZkS7Iq9UNufm6hX1TueS/EpmHn9x3n1d6bre
uI/y2nrvs6zo4h+vuglSfrzvzooaMydOl+Y5S3Uf2bBl53Z/1iiQrguel6xG
xo6VCwuk/FX38b3MV9E2f/G0bIJPiaxlbsDJfoNyeJ5mbxbotjj1mk2Xj0+d
7llA5l/GcjRq3Dctk/KrW09dYH3tlSxo0+FTbG4Oj2Nd6UQ8ihrqnEvrnE15
amvWcH8BfS6Yo32PegseSfl7Vt3ffNlB71dyebZ0X7AOdx3YraOrn0+fU+b0
Mfe5bXgBfU7Ztysxk8rjJfxDquKxsoh/7qSHHpfiWLeP57Qoa3hPyvOmcl7c
6CaVzEx/1OTpYfm0DlloXtCE2Q55rMuivnWPffgpuxG05LWD1g9Zzfd7Q47N
kfDHur1ap03fWg1z+His2+3vs+2mPpTGn6m63ofsS7qfdbJhIcWBvW7y9oHe
y0Kex8RsukdT/QpZcItVbGh8No9j3Uaz1Qdrn5Lul2VVPJ0V/Tjo2eWfIpJf
yf5Yj1v6e2+RNE9/q2WePT7LWs9eW3A3R5o/1u05zaJxjV9I9+tQ1XPxjPnX
CS7aFSflx7rdPf6kInSZlP/IinUT9+4ulcXXMbyzY2oewadEJluvmR68Qbpf
6+NtXb2PvmHxA3rHtLOn8y9ju/yLyz+4SPjcXPqP4v6Nl7K355uXDqpXIMWh
bjPia9bVqCvhbFw89MQwv49Mt9VYi0n2hXQdYDOa9r4cP1TKs7lqPrmyCX0m
373pKf1drNvK54uKHs+R5nmjaj5fmEnuk6fNfubTdYwdXdjXp56bhINV1d+N
lG1a1nrV67cSbli341wsDJubKOn6yTppa57LWZtL65CNsuxU1KEJ+v8rZBur
5v9ddrq/ed+7y6X7i3WbZLK28MnJbD4e63b61eKY557SeO+qeACLDZ4198lh
JcWBbT7cfv/l6UqeR61qPfkqM5ruu3TPWGk+WLfHnQtalLaScFDNM5fVX5tj
38uviORXMv1zwXl6yUU8j2p9/iQ7vPXSBu2PeTyOdWvQ7fqlDsH5PE9x1fr8
nKkPcE8fdFXKj3X79/ieJmb3Cnke4yp83sm6K6NG95pYQPApkTlf3HCtp6lU
D86qOmeLsm81G3exgMy/jD1putvY10DKo7rvL2SeX/7oaahL14V1u97r1rD3
ltI852QNy9Ht84nZNN6Qv/ZwPl0HWN3oXbVdnSUcQqvmmS37Zl5c65JCyo91
a2U/dvmlh1L+1OmTW+xo/5WZHQr62LIol65jrGhC+UWHptJ9dKnKI5OZjG/5
wsNEyo91W2C54kHfJVL+Ebk2M17pfGfdOs8+vMReqEM22mVmSIM/uE5+lI1U
jZc5n3+fsuyo9HexbnPazFpQkSaNx7qdZHa6Yt1vYZ4s+Y2b2m5zAQf25JP+
/H82FfI8aSocZEe31pyy+W+eNB+o22tOU0xiZ+TzPP4qnJnidrMuNuUFJL+S
NVALa9xcp0CaJ6y32nrN7OZsz+dxzh+a6Xeq3CzlGaGqE5bguKZvhIX0d7Fu
fy3ef6mzgzTPtKr14a1sckFdB+fehQSfEtn8HgH/pNaW6ry7qs7Z2LTaK/rd
yCXzL2Pma5p73GmYK80T1tt7a9zqHXOWrgvr1jb3c/DnAmn+h1XPKTOIb3eh
3/Acug6woU3febytlO5jjap1I1N20OOzqY+PlB/r1nT05qBP7/PpOsO0n0/e
/eO1sI6xqHF+tR2spfzhqnVMdm6i/8ka4yX8sW5fzqz/9/vcPLp+soYjSn6s
fJFF65B1D1/4LK4R/t1iWYuqvqtS9iRiT8uM5lJ+rNvrlY1q10nN4eOxbg8e
bHvlplE+nSfrVrPuutvbcikOrGlKhy73d0t55kB/u6XOrafJ9fN5HOv2cpdh
59eFSfnXwXprs7PfhAmLskl+JfMuiX5bNz6L5zFRvTdlmybE6F3SKOBx7vvV
XBR70F3K76qqE9ZW1zW9bWwmj/P1NpmNTTyWyfNsUr33ZfXvPF7V7J98gk+J
bO/KTlqdfKQ6V6jqnLE7esrM65lk/mWsu5FX6at3GTzPUVXfItMv/WF/JTCX
x7Fu9Z+cHPRKmcPzBKmeUzZa67567NEMug6wwGf9nbWypfzWqr5LtlX9oqXN
FKkesG57/bPvZa/JWVI9qPo6FvBs+/S2kRl0HWOHurv2ab9PwscH+ttO14z+
FkyX4li3skd5uYlb0un6yZrPazq2u1sWrUPWf1uPVfMLs1iQar8mg35YtqrV
VZvwExL+WLe4/8XxWLdRi5q1G7E2n86Tja2TFtLlYSrFgZk52nhmdEjleXA/
fvDGcu2ZGvk8jnWr5T3EKPFJHs9jqNpHMG+/GtGnC1JIfiXrEXrdacXbFJ4H
9+PtW2xY0GG6NH+s28Wnz5vaNJTq4TD0twr1Zwu7zVTwONZtu78W7mqpUn7V
8/5apm7+V3nydRbBp0R2Rs/NLXmB9By9Uu3jWMO+eVvPNlCQ+ZcxtxNl1p07
S/j0rHrunsrO/nz0eNSKdB7Huj2W8uGxZlyadL+gv931dINyRr80ug6wWUcP
fXz273jMA/tcmVHSiDf+Tsk8zvk3Q9MtG/WT6DrDfrfL8HhlnUHXMaa1rOzN
7y6ZPI8h8AlzzvcOuXQtkcexbjWD0jeNCovieRTQ33ZNym3VaHE2rUP24e5D
3wL1HM4/hJDfgyD/oOai4n/CPAM7uX/I5X+X82/AS2AerGdNkgfjTh3H1nv2
7/6LXBdzMIytofU2jOLGPB7HP3mxNILntyK/T8H8R1rMNvNq8U1Wr3d7w8kH
JF4F61+PjMf43KChI//syOB/9zDwFeMW5PXskhZJ5vPvvq+iVt7ZGlE8/wjI
05rk//uVWW/u/1FWdN0uIF6m4OPxeUmE36HgeIx/qX37XbsZCglnVd0y7QlH
c9taRfM4181H/fGU14jj+UPhecHf4/DrBX6sUerpOSGuKeR+lchWkPEY14P8
+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
8L5M/Vo+fG15BrNfPN7Va6Ymx6d0vXPHlA/S+eB4v+a+N0vRPSfNB+/X205v
RtUJzGJPPOoOzJZpcjxr1i4OSNuTT86v8TXPJud6Iz4tGrbtXakpneuN13Vh
V8KUjYfz2Y93Uem/O9fk98W0uP3g1PpSfpx/4bDvP4e6S+d38/kMnNdqrGkh
s+hwupZzuQa/jz0tdx0zuC6Nx/yfO5tVGvQoZNrRv6/2mKPGr3dZ/4IOm1tL
4zGPr03Ejg8uBawG+PewHtDnj+MxPiZ+6+qfF/LZgRkLBzQLr8FxOLX1Zc2m
YdL511gnu897lo4f9h/ng0OdLN+bl7JysRTHOtm65d2xNaXZbGRT92tls2pw
PH+927DWP0w6dxvrJPT9pNpXEqVzxrFOMtckDr/zI5fVSXtbM/6LOse5cb93
jnveSed6Y520Gr3RpHRhPo8jbq+uXq84lVXA4o+ZrHI7ps7vi80edUc9vSJy
/o6vOT2XHPHZscV0kf0PKY7XtVox/YDpGCVzHrMxbYeBOr+Pvb30mzjbSPPE
+Y+esKV+LW0lu1fwONOiw08+/68rfrQOVUrjcZ6/yg6kaIwsYmPQj0q+E4jj
8e+ufXdp5NVGhcx4mpVb+dQfHIfZrV517TpIOj8d84xZcf/Bzov5bC/UA9aJ
crDxNPVFUn6MRwz42GV5/Tyo53JeJz3tLt/r2i6Xtd3ZIDuirYTbxaMffIb0
lM4Zx/HvY3XZoLfSOelYV8qKsikB76TzwbGuouyjm60dKZ2TjvXjunzfw5GJ
0vnjWD8zPWY97ziqkHVe136dgdNvjv/TCYf3/PWXzjdH/B3bvXkafoz/ro3n
x+/44XjEc3vPq1vfrFOy62/umucH/+L365NO76cN6xeS84Z8zek57IhPqtqE
0oVOSjakal39yuc/cseqTqPKpDxYb3cGTXpXP7iIdQP/2DzyfT8cj9fr9f7O
8UZOhSysap38wq9XvnCj1QgnCQec/+Lwne/et5SuF/MX96qz5vUNCX+snxUX
owrzJknnvGOdpJrdeFVgncP6jJo1aObjSn69812ST2QbKfn5O1gPT6e0NJ3Q
XzoPHeuho0Fyn8unpPPcsR4uzls+ZHVFPvOPeFFb+9M3js+wa3YDzf2l89n5
+2jmycPanQrZlYrzNzZN/sDzFNQ4tqCB4j/OZwf837T2znZ+J+VB3KzdTYPW
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
oZOVdF14vXOq6y8WWD9TQMcxU+lBfP4+1fUgC6wfogdZYP2Ega60RaVb8evy
qa5bWWD9eFfXpyywTgpBz/pbpNIl8Xobwndj8Nw3rJPloJfxc/GgHlBfwzje
x16gx2Ec78sV0O/4+XSA50vQ+zDO9xegD2IcrzcD9MTq5+j5mheD/ohxvK4/
oFdiHO9XCOibGMf7VQF6KMY5Dwn6KcbxvoSD3srPAQT8+4E+i3HEvz7ouVT/
3dh/r+H04DRB/924Zqtlq91pgv47r2afr8fPpQr67+P5t44tOaYQ9N9veWYG
S0OTBP33ybadCY0c4gT9t/jg8ym7r0cI+m+pzsgju+IfC/pvWzjHkOq/ZzWM
VtW4KRP03/MV5RvkXcMF/ddxnqnWt6MRgv57tpGPkW2zKEH/XWe48o5NWLSg
/2r66Cz23hor6L9PZgfccuoUL+i/ofevDnfLCRP032u/PNwP78oQ9N/x92wL
lxakCfrv7QXzby3frhD033L/W5dHNo8U9N/MGfXaWXSWC/qv31+PIYa74gT9
N6zDmyHTtWMF/ZfVajaw1aEYQf89b/XDtolhjKD/Trcv6PDoQayg/5JzPzk+
2ina6UlXYwX9d6Oszj7tu3GC/pvRIH+KtlGcoP/+dG/VOzgzXtB/D630qGyp
nyjov9E7ykJqTpQL+m/i95YLdDbLBf33zly3wRFNEwX998mZVXc/KZIE/bc9
+Kyo/pum7rP6XssUQf/d0/C2zoChcYL++95kr04/z3RB/3W26/nbpShV0H/1
xmmsnTxMIei/FssuvXCNjRf031Z9HFuUGCYL+q9JZnaHWD+5oP8+XCDXfD05
UdB/fRImHtD9nijov+1dzbcbByYK+m9F4oP3Y0vlgv67DM7hpfrvlAUeC8MM
5IL+ey//z8FfkXJB/1V/viH16/FkQf81n9kkoORckqD/Vq4vs376OEnQfz8H
Vjy76pIs6L/ow6T6b88pyYe+xaYI+u9kM6/4gVOSBP1X+2bGmmtHFIL+qzfc
eGi/symC/jt2rKap3ohUQf/9Y+Gsf3RXqqD/avRdlDN4glzQf3udfySzeZwm
6L/TnjXObxeWKui/CzZOuHLsmULQf1cETN1n0E0h6L8Fa51K1nVOEfRfH8vl
xpNPJQn678Xid59c+iQL+i/6lqn+q6G90iJwe5Kg/97UXxx7qGOyoP++hHO0
qf678YTnqFpJckH/PXF6XWiQQbKg/yodap2LLJIL+q8O+L2p/nvujb11LdMk
Qf91/jg2q1+SXNB/y9c2KHyVkyTov2sbNfIvepos6L/yWw/qefVXCPpvpszv
56FJqYL+2/kDa/fXTi7ov8e2XfB5bp4q6L8rFm0ynfBAIei/Z8beNLmqpRD0
X7VVNSd31pAL+u/SdnZdakYlC/rvLQOz1ZlBckH/Pdji+gOnTUmC/ntw5Og+
ngPlgv7r8t32z6tGckH/9Wy2eU5c20RB/30Dv/ug+i+ea0/13zMGoaZT7eIF
/fc1fIeE6r8dfiY3PF0eJ+i/F/6stgx6HifovxN+Pi9vVxQr6L8XJ3/Rfe0a
L+i/I92mXGxjqRD0X7+PiXl/TyUK+q9i59y/D1OiBf037/lmEztlsqD/3sxV
lp10SRX034WAD9V/v0SGP/WySBL0374Xr9VrricX9F/HJ4s69lDGCvrvzEUX
95WEJQj6r029GYU7TWMF/de7W7s6Q6zjBf1Xc/NPnQ1ucYL+W3dt80sf42MF
/bc//L6M6r9vFgb4Os2MEfTfgnbRsUc/Rwv679TBB7S1akQL+u/FcvXT7mGR
gv5rd2WY1pLDEYL+W/vdurN+NSIF/fecp1bnR0nhgv47qKHrjfDgCEH/bTtb
Z/GvvzJB/7WNuxnjqh4j6L8BY3qv9OmdKOi/AfaTjsxeoBD034M+xyt//YeO
jPF5fZdfurUwTdB/M60ry3yWhAv6b2XGtRYxsXGC/hs9+GGvjoExgv6722H7
U9voGEH/rbh7SDZtS5Sg/16E37dS/Tdronu3yrYRgv7L+photRgeKei/d9t7
ezzzlAn67wzt/H0+jiGC/qt8bLjEyDBc0H/jH5sn924UKOi/Xa6MX9+9n5+g
/2pMDl4y8Yy3oP96jVu1xs0pRNB/Her7XxsfECDov59shpzb6R4u6L/Prfp+
+5LoI+i/W79sqLxlEyPov8NanEk9PT2e6Sn+P36HX9fiNfrr9iy/Jei/q7pO
nPfwZyK7kKIaj9dlS8Zj/dhcmrbNYl+yoP9u2nnwh2+reEH/TTvQdGDjHjGC
/rvM/1f/tZURgv7bOW1i/y6aMkH/XfuuhcGwuwGC/tsi025C0peHgv7rBL/T
xzjex2MkzvetJI73qxvJj/drO5kP3peeZP54X1aS60X8KT6I8zbAk+q/8wF/
qv+ugPtI9V8LqAeq/26C+qH67zuoQ6r/boe6pfrvn0mq+qf6bwd4Xqj+GwXP
F9V/p8BzSvXfO/BcU/0X1weq/+I6Q/XfJFjfqP4bC+sY1X+/w7pH9V+nauuq
dL0GcL1U/50L6y3Vf/1h3ab6ry+s81T/1YL3BdV/beB9QfXfAfDeofpv0Zm/
ud2vRAn67xl4f1H9dx28B6n+mw3vWar/nof3KdV/J8H7l+q/JfAep/rv+Atd
+ySejRH0X+wTqP47G/oQqv8+gj6E6r/r4HfiVP+dDn0O1X/7QL9E9d9y6K+o
/psAfR3Vf92gf6P6bw70e1T/9YG+keq/1tCXUv33PPSlVP8992xr320NkgX9
9xz0vVT/vdkkMdi0Ml7Qf9tB/0z131PQh1P99yz0/1T/xX6e6r+4L6D6ryPs
L6j+exv2KVT/dYJ9CtV/l8B+h+q/p2HfRPXfDrAvo/ov7r+o/nsU9mtU/7WF
66X6L+4Hqf6bCPtHqv+ufNV354dDCkH/XQP7UKr/HoT9LNV/cT9L9d+zsC+m
+u9x2HdT/bcI9t1U/7XQcv32Y0KyoP9ugH091X+fAQ9A9V9N4BOo/usNfAXV
f12Ar6D6byHwHlT//XRvzp3SErmg/yJ/QvXfhcC3UP1XE/gcqv9OB96G6r/I
81D9txXwS1T/nQo8FdV/xwDvRPVf5K+o/msCPBjVf38Az0b130/As1H9VwN4
PKr/DgIej+q/yAdS/bcS+Eaq/04FXpHqvyuAh6T6L/KZVP/1Bl6U6r9+wItS
/bcX8KtU/x0GPC3Vf/WBp6X6rz7wvVT/3Q98MtV/DwNvLOi/9fO7f32bJui/
yD9T/fd+dT6c1xXy21T/RZ6c6r9x1Xl4ft8TgIen+q83/C6Y6r/I81P9N626
XsDv16/qegHHfwPoDlT/nV9d1+A4a1XXLyz+h97BcUPdhOq/ic+X/Jk5PVrQ
fy2q6y9cTwwAHYfqvz+r60FcZ8yurgdxndEDdCWq/0ZX1624/kj0Ka4/uoKe
RfXf2/C7Xar/hoFeRvXfOqCvUf13I+hxVP91Af2O6r/OoPdR/fcS6INU/70K
eiLVfw1Af6T67xfQK6n++xb0Tar/hoMeSvXfH6CfUv1XBnor1X8XgD5L9d/N
oOfC88X1ROX8aWsyOmexX6CjIZ5NPsk+TdmZzvU7xHON7sVuE1kacwB9EPFU
P7Pua7xDGhsK+fl+7Ukde5Nz6Vz/4s8F6P7w3uG653PzeTrHCvD3JpI+mAF+
iRGgW+H8x5Z+rDUvJJPVBh0K5590sp1/vdhMFge6Es7/QoNJ6UHbsrgehPMf
ov11RGJuNtdx+O/OwE+iD7oJzvNDoEeA0cBsdpnoUz7gC7quer9zPiorRa91
0Pls1gH0Dpznr3qZnqvP5TB30Clwnl93jIzs3zmP6wj8d0/nm5cOqoe/rxF/
v+YHPDD+3YFnD9QaPjyXuYOexfmuVIfVBteLmJmqP5d+1xCz3PjS+zzmCeOx
rqbezk5fk5DLTEAvwPtYK0Fff34zJesBehbWm/ah+6NerMgBnfEzx+1Fy9kL
263OZdGEN9YFX2IC8Lo4/wlLOoWe+Z0H69hXzlMl780yvm+Xx3UZfC5O1LjZ
fFdpNhsG+hfO536Qxxi1OVksAPhGnA8bs7n3TN18wOcd553GZhZpJiVmsDOg
I/B9nG37zZUZGcwddAr8u72OjTq41Sad3QHeHnF79Xyhtc30dOYNf5fzADkF
/U6XZgEPmcXng+fhBhLebyr4uiOAB0YcdufdS6548O8+D/hnnKdldzU28Zuc
BQHvjfPccbtxceS/68AN4IFxnpZLl50q0s1gXlXzL+C4za6REahcmc0mqng5
3u/9/Dt0QqfheezunaYH/dsoOK+1dWxKcf5ZD/ONKv6Q94Hm7zwiYn7/+7wA
r4h1aPaspTxhRAw7WzWfFN4fuk9oKh+mTGN+wGfy/aD5sksBfeTstIpH5f1h
n/DIRxN7KVgG8KuIgwnEVfx8JO8PL0Oel5Af8XHbsN+KncpgfjB/XAcGwzzD
gGfm77tE9xGDj2QyT/iuIN7fzfD7FDPgPzmfA7ip9tEFHM85gLPrvf8HdJ45
4jmn/TuDZY19zUMgP9bnQvgdzTHgZxDn4XAfbWD+iPM6+P0O1A/HefDw0/sK
fRTMBfBBnOvB74YigW/hv6NUN/nH9riCBQH+iHOtWefUNhtnMn/gebgPc86X
O6/bJDE7uL+Is+exy2vsWuWyR8CHIM4e8Dss1X1P533pRvg9lwfggHji8+IP
PBvikwbP11XgKxCfF/A8XoD9O+LQA57fi8Ab4PX6wfM+Er/nBtfVCn4PeBf4
FrzvE2HduAfzwXkOhXXGXLUu8fuO69ITsk+vD+thEOyjcf5fFtX+cjY9C75j
WcHnOQp+rzoI9ss4TwWsk08gD/djzAxtpNM6n0UBf4U443prAXwjzv8VrNvd
YF+A88d1vhfwFYh/HXgvdITvEXGfAPwOOgjmj/WDv+PuCXwR1slAeB89VL3X
+DzN4b1mBH8X53n17tFYG/Uc0BNFv25H2L9jnVs6NBh0ckA+1MkvPp/v8P7t
CvPH+VjCeZSXYP+O88mF93s46fPxuxa4b8W/Owz6jWjYh+LfvQz9Ce4f8e8q
oJ8ZDvtB/LvjoP/B/R3igH2UH+lXS8GviPssXB/2QJ8Gvi8+zzrQ10EfyOf5
wfMIa3ghne9TcJ7NoG8EPxWf51PoMzfDPgLn+RO+P0P70qG1TMf2nZ0m9KU9
FnQJDvyoEPrSdpax6a3/yoW+tP201G5ha2KFvlSr4OSuKWFRQl96HfYjtC+N
8i3pHrwzQ+hLH8E+jvalpoNXtbF0TRP60kk7wpuca6kQ+tJdHhu86iyTC31p
hVGYRdijBKEv9YR9Lu1LrwXNuHHjX/xpX7oU+Aral67IGlXz/u1UoS89Nen1
zKMTFEJfuvjyyYC9TVKEvtQMzreifSn6amhfav3eZVGdxalCX3rpgcem9GC5
0JfaPTSv1dtRIfSlq2zH/1owUCH0pd7L/zZ71C5J6Etb95pa4jUoVehLh8vM
bmu+VQh9KfKltC99ffLDmu+1FEJfqtm/7qK9KxKEvvRY+8VzFi+WC33pbp8f
H7S3pAp96bXz55esUsiFvvR1Yes/9WZGCn3p8dNRcc+i4oS+9K7FCbVKhwSh
L91mP3fvxg4KoS/1eT3g04zCSKEvxe8k077UCPQm2pduzJw0tGBzpNCXnrig
tlXvQozQly58pfFpqUu80JfGGFl3anciCXUx/nc7og5O+tV60z7sCRuUIvSr
E8zXN5sgixf6z9sh9idGDvRmtF/1ajB92nXnWKH/XHjGzyR2WbDQr748fD5J
u22s0H863HeOMcyIEPrVDRCn/Wei5fdBFT2jhX51Lvxd2n8evtrAsv21BKFf
dYfrov3nVMDBHfDB+446O+1LNQBPAxiPdbgIxrsS/VEf7gvtS8PhPtK+NA98
BbQvPb0rYoyyLEHoSx+Cn4H2pdadWlgZyqOFvlTnV0dl0ZYwoS/1uXq40ubf
/pz2pfo9ppfe7x4l9KWO4A+hfele8JnQvnQpPC+0L/WH54v2pfg80r7UA55f
2pfi80770h7gU6J9aSmsG7QvvQTrDO1LHWBdon0p+rtoX/ryjWGjswnJQl/6
Cnx0tC+tDesk7Utr6Cim9EqJF/rSYlhvaV9qCes27Utxnad9qR+8F2hfWh/8
mbQvvQD+UtqXrof3Ee1L8b1G+9KwFNnUwB1pQl+6Et7LtC9NM7itaXIhSehL
l8H7l/al+J1S2peuhPc77Uv9oG+hfekv6DdoX7oX+hPal2I/Q/tS7H9oXxoN
fRTtS42BR6V9aSPo02hf2hn6OtqXen/asfHwc7nQl/aCvpH2pZbQZ9K+dAv8
Lkb9f3y3rfq5w77m3+EcbX6uMdThhh8zLUaMkuK8/3luaPvuWaZ0bjLUYb+U
h+u335bOHcbnyMNTo9XO9lKc/44pw87QrIMUx+fofaZr53bnpDiuA9rAu1Y/
f9bXHM+vxzjO/5VOMCvvLM0fn6N/rOa9yPyUI50jDNfld+tI/6XZWXw83seR
L34svHEjj4/H6+3rp1bzvq6UH+/vYY9uddc/yefj+fe+dk1a7ekmjcf7PsI4
LHx1nDR/xEffuMRlxfEcPp7XQ0uXa6PDpfGI2yHge/m51VAndpPaHdC6Ko3n
+4V3Z9YvmZZPzkX1NR/nYmHY3ETJ44hn/GTj8bFXs3kexLNpvSPWA6MLpfNt
Ac/Zi2qZBQ6VcEY8r+Zq7VpgV0TP35S1TEuuO2hYLh+PeF7yvJV95YI0HvFc
GDB1V8gx6b4gng8DIw11e0njuS8L+Gccj3heWvO5U7GVNH/Es6vuy/g1mwql
85oBT/w+Ho7nvKhthU37I0V8PD537h7qM2usxe9tVnCcCyxXPOi7pIjHEWd3
TXO3KZdyeH7EOWjh6Yd1bZTSeayAc9E66zB/n1w+HnF+3GXbJ4fHUn7uh3l5
+ffJDtL8EeeLBr2cVg+WxtPv1OF4/vu+X5ovrBUF0rmW+FzrX97ZIFnCk/fJ
wJ/geMTZt2JE56hD0v1CnA2uTKy81FzCDXEO95LFXj0ujUecK86FsS3Pc1j1
cyd9zV/MrP/3+9w8HuffIZnx6E2LnFyeH3EON3GorX+7kI9HnIcYbPo8SF+a
P+L8YfK7y+Z7Cvh4xHn2lxaOS5XSeP67iT99GszWzefjEef0DxbpteoX8vGI
8xjgx8j5j7J78H02HI84r7JrM+f0FgkHxFn7e+dSO7k0HnF233HtzOeP2Xw8
4vxw15vmX5Ok+SPO5xP3DB9okk3OSfx3HX6Ul5u4RTqvE3G+cWvibPMO0vXy
76PW35+81TuHj+e6T+yiWa/2S+MRZ/sxS3Ke/8ff5TqUfv7s5ZXSeMS5LfCc
OB5xrqk/+unJ1dJ4xHnQCdcHdjul8YhziqdO1FNTqX4Q58GvrL6v8sng4xHn
V93OvG4wR8IfcW5jXbqpcYo0HnE2rMxe75SZyccjzrbmsYNSnmfyc74QZ42g
9E2j/u0rgsg+l+svkB9xHmrl4vN7mXRuIOJ84oX728hG0njuQwAeG8cjzh33
3fP7fTmXj+ffgQzbnZfRTsHHI84TWyz+F07pfnGcx10Of6EujUecT0/fbxHc
WsKf+xh3ftOOHp/GxyPOI9vmzs+Ikc5JRJxPPvlm/MJaqkPEs3hrs8+ejhKe
/PuloEfw8w0JzuTcJdmKRv2nj2yB35tyFb7fhfkR//2gp/Bz/QD/5WpznZrN
ypTOAYQ4fu8L8+B92ftxaXPZF+k8LLwvh+C7WJgf40GfKsb9Vkj3nfvkC5P+
+ZgVI51HBvdrbsjkUq25cp4f4/g9Ln5uJtzHhWQ8/x0BfNeLnxcG8ffwdzEP
3t/HDqvHffgknSuH97cjfDcM8/DvjQAO/LxO9A+M/zHygkkmH091FsyP930o
fK8M8/DvXcP9xTw43gHuY/Vzu3zNZbDu8XOasP+EesO/i+M/TJo7NVbhZY5x
rJPhMB/8u/y7JVCf/Lw5fH6hzjEP/30WwY33sfC8YB6sk0ZLt6cuXyPhj3Vy
n9xHjJ+B5xTz8N/LR2zIC9dK5eOxTu6cz1jsczmb58c4fqeOn5MFdbLCzL+l
ew/pPESsE1rnGE/aEjNNPyuX58E6eQjrGObBOsHni58jCXFcDzEP3ndLWD8x
D/2+XPVzr3zNX0G/gXGsB1zPMT/e3+6w/vPzy+D+4vsCx+N9LIb3C47H+zgE
3kc4Hu+XlUdd77teuXw83i983+F4rofC+5GfAwX3pQ28T3E8vy/rru8v3y+N
R/x3wvuanwMIOON3w3A84twK+gEcz3+vB/1D9XOafM3zoX/GOOJ8AfoTzI84
P4B+hp+3BTjrJV4qvechjee/F4B+CccjzuO7PvTtmSvhjzj3HeT7wWJAIR+P
OGP/huMRZ+z3+LlFgPNZ6A9xPOI8C/pJHI84a94a5tXg3/68+rlyX9hg6Fdx
POIcAf0tjkecsR+ufq6Qr/lY2A/y83EA52/Qb2N+3j9Df87PhwKcX203GWMz
MI+PR5yx/+/8P/RWHI84v4D9BY7n/q47v+bd0JTwRJyNYP/Cz9kBnF1gv4Pj
EWfcH+F4xLnxoCFbmugopfPOAOdC2H/heMQZ92s4HnE2aPEh1dQxh5yDI/EY
GEecb8L+EfMjznLYb2Ic8cR9K+ZBPK/APhfHI56tKoweXdCW/i7i6QP7aBzP
v28P+25+/gvgeRX26Z0JvzcMdGccj3heAx6An8MFeCJvgOMRT+QZ+HlegGfj
makGuuHZ5HwWX/MfwGthHsQNeQ9+ng7U5wbgSXA84nkYeBV+rgryP8DD4HjE
E3kbHI94WgHPg+N5fQIvxM9bATyHlded7P89Xzq/BvA0Bd4Jx/PvhwNPxc+H
Ajz9gdfC8fy7DcCD4XjulwDeDMcjbjrAv2Gc73+Br8M44lAM/B7G+XdLTu2e
f3+LFMfrMgP+kJ8ThLw08I0Yx3lSfhLjHeD7JJTnfALn9VCe82K3hkWfBmcI
PKdVrrxJ8qU0geeMOP1ep/EphcBzGpz+rh0wWy7wnCaxWkcfdYwTeM4unybP
CbgZLfCcbqDjU55zB5yTRXnOWte2J88uSRd4zoIPPk90b8cIPGfkguF1DNqm
CTyn72u3AovQWIHn7P399ejrvRUCzzlI4Xv4Q0mcwHMmvbd/uWVUksBzhq41
jXQYmiDwnFqL9Y9EzE0UeM6/v90NN7kkCjznA/APUJ7Tsk4Pnx26SQLP6XFD
70fSwgSB58yC8/Ioz7lgz2GfWJ10ged0DGiqbqSVKPCcT/N7fCz2SRV4zr5+
hf/0iU4UeM5XRp5DvxxSCDxnzW4nzcc/lAs8p3rDGWMqFqUIPOemiLSSTZFJ
As85APwMlOcM9Ta3rfiWLPCcqz3/TlpmlyTwnPgdGMpz+kT6tNtdJBd4ziTb
sMnfchQCz3kDztOkPGeThzJFr9ppAs95NKtNyzbn5QLPOVn24k9bg1SB59yg
1X/8rFC5wHN6Xtrf4MFqhcBz5r0bbKa+OkngOfF7LJTnNLNLkT/VTRZ4zquy
BtHDZycLPCd+L4XynC/PGznfH54k8Jxzomx1mlkrBJ7z4YodbsrhcoHnDCn7
krNwSKrAc1bAebuU5wx7/+jpA0uFwHNOmfgk5GS3RIHn9Dvy+/iNxSkCz1nv
05VTX34nCDxn/dAh6osbJQs856Gu708s/54g8Jxjhy2LM5bJBZ4Tz6ulPOdb
+A4J5TnbBTpd3/lSLvCcb1zPNV6inSDynMnvHb9/SxF4zrNevjuf58QJPGd8
oHrLpUtTBZ4Tz+mmPKf59Mfvi83lAs+5VlZ3qWlmjMBz/vjxtNFG7wSB5zS/
5fokf3yMwHO2ic47PHx6vMBz9gHdnPKcI259Lll8JVbgOU/tU8x68TNO4Dlr
1a4jv/U0WuA5H7Tz6PTzfYLAc25Q/OrzcFCUwHMWv2/hYnwqReA5NTNLA2vJ
IgSeM9pnf42XMakCb7bl7gy7BRsfCTwn9/MQnvPNso1e9YeECTznjaImdaOe
xAg852nwRVCe0yzmbvKLAVECzznp+zj7vzUjBZ6zxapYswPPwwWec4fXpGtF
Y2MEnnP4t3UamdlPBJ5zV+0nLfd0SBB4zmHnmjR/Yx4s8Jx9/XrG7vdKEfjM
thMc3Fd28xf4z0e9VputPp8q8Mkh039d++bnI/BXOJ7ynx+zTFd+z0gS+M/N
8L0FynOOveFe23hIosBzpsN3GyjPme9gdKVDkr/Ac66A7z9QnrP9mbfbG7rE
CTxnr4ZR8UURYQJvGeT2vXtth2iB//SHOOU/DeB7FJS3NHTKL66/L07gP9fD
dy0o/2kE86E8px58H4PynNmAA+U5f9mYTFw2LlHgLT/DfaH85xJ4XiifuRGe
L8pn4vpG+dKj1b7vIfGZZ0gcn8dLEKe8eiDUG+U520HdUp6zD9Q55Tl7Etww
bgnPC+U5b39f2b2yeaLAc9qT+4XxEfCcUp5z6uYix1fF0QLPeTOkZvYnv3CB
58TvmVCe88jaU72MD4QLPOdKUucYn7Gn47Y286IEnvMorGOU58TvolCe8yas
h5TnfA3rJ+U58TsqlOf8Bv0G5TmjYD2nPGcNWP8pz/kK3heU58T3C+U578P7
iPKcZwrntGpxL1rgOU/C+47ynCPh/Uh5zt7wPqU8Z2nRykU6zeIFnnMwvK8p
z7kevo9BeU7sByjPif0D5TnxPHrKc8ZBf0J5TuxnKM+ZOL/4cc60FIHnxH6J
8pw1xkwrW3A8SeA5Xezf+x2amyjwnNi/UZ4T+z3Kc2J/SHlObegnKc/59VD/
pjYZCQLPif0q5Tmxv6U8J/bDlOfE89Mpz4n9NuU5H0F/TnnOS9GfhqUsUAg8
J/b/lOdsAPsFynNeg/0F5TlX3/zpZdo7WeA50e9HeU7c71Ce8x7sjyjPuezc
o7YzXsgFnnMK7L8oz4n7Ncpz3l3o7Na4PFXgOfG8b8pzymH/SHlO3G9SnnMN
7Fspz4n7XMpz1mvU16hZ/2SB58R9NOU5a8C+m/KcmrBPpzwn+hgpz4k8AOU5
nwFvQHlOJ+AZKM957U54xxft0wWek55Djbgh70F5zmHAk1CeE88lpzyn2h8V
D0N5zvrA21CeUwY8D+U5U4AXojznkbEnvriXxQk8Zx/gnSjP6Qc8FeU5kdei
PGch8GCU50TejPKc9DxuxMcA+DrKc/YCfo/ynPVlXb6emiIXeM5I4A8FnhP4
RspzugA/+X/Vrrqv
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
/wCwPq1v
                  "]], 
                 Polygon[CompressedData["
1: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
6P+lUL0X
                  "]], 
                 Polygon[CompressedData["
1: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
n82IO68=
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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
04i16/nPbYk1eFWuP9fmaY2opX0/1rpDfEd8X9SYx9y+nOvPfDQd2235vC9k
fWSMbFg/1SN2Xpr+dCM8rCXmeEo95ti5f47P8nz/jN+uwjahEbHWa3rtKbm+
bqnHs9Sz/7Fevd/7g6/x/TA/m7RGzDZ2P8Jvo7nf1zl+Wb7/wvFXpD+dl+9r
qSrq60sz/3etwuf0va/g/o3w0TH18El9V38fDTfVonezf7kw/aFLFf2F8cwa
olMV8XMA/Al8RMbPa+Dv9fFG1B/D4S/gjlXUBOPgei1qBdfv0Ow/7H3Oh5+o
x5xe34icqS/r0+ZifVTft2fTd/UJa3NrTH3FGt5a3hzyayNqFGsVY9z7jViD
T6W/rFTFGqkXEWNdO+ZYc61r7JVG5FRz63LwM43w8VoROVffN0f/jn3jWuRu
axBrEWP6OlWs4QEZP1zbrq8h8Ofw4lWsr8HwZ/BiVfjQjfk+zmuEP03N/nHZ
jD/X1iOGupYfgDvl/XzdiPUxLefPWGfMM/bZA+xTRs1l7WXPeXAVNby1/OHw
KmX0DNba1tw94d/MuUXU3KuXUYNrt8c4pIr1Za5zTZzViHpyEvwd9z861+ct
+b6XqyL/3JX95CWNyDczst9boYp+2lxrzh3WiH5wYvazy1SRL26vx5oxN5l/
7q5HDr6qEfni3ryf8Zl/bsv+fFwjcpa5y55pwypihLHCmHRt5q8HMv9PasQa
d61bE05uRA9kL6SmcFgVMW2BIvzFWGeNa61rTf5hI3qsu4voKe29jOEvFdGT
G9t9Py8UoWGYqwp4JjwG/lcZPftreby9aTN8AzwQ7l1Fj3NNET2wvc82fIYZ
C/mtYX/eGvdrD7dWGT3opCJ6FHs9ezR7TXtOezc1kanwmbXQSuw53s37sRdZ
Cn4dvlz/gReGH8/xx1XR8+hP9oj2Qs7XpfDgWvSSHRj/HjwR7l9Fz/d2ET2L
vaA9/cPwKbXo9dWUHoKH1kJrWrI1crM5+sQqNJTnitCU1FYWg5+FT4f3LKOH
faCIHtznnQ++M+/n6Cp67Ltyfdh7t0v7OTnfxnxjvzWFvbI5/rn0v5U5flb2
B//ht4ktkYPNxeawOxtRg7yQ9dZNjeg530h/she1Jvu+Hj2ItZo9lr2WPePH
jajJzEXmJGs1e4S59egJ7B3UEF6vR43n8eaMxYrQ1Mwl9jBv5nh7CWtea0nj
3RON6HlvzfVuL1zBN8MnwJuUoRnclvOplqDmYG9qja8WYU9lb2WNsybzcSX8
X3gxc3wjeiB7IXu01aqoaefk/T7ViBzbroia0txrzrdWtyeyFnBOP4BXqcVc
m0M/zXhsbrWGtpbuB69ahkaiVjIk/UX/n1iEhqJ2aHz+leOXrEXvaEz3XN6z
9+71fJddjHdV5IOf65FjnT9rxmeynjW+2vPa+1pDbVLF+/H+rXleyPs199sz
PJz5wt5On1m3ivfvfPh+166iB7AXdT6stSfn+7LGnJn+92zOt6xGulERmpDa
qTXzWxnPrLX0x1ezfp6W/jIr6/Pp8Hnwu/l8a1SRH5/M57d2taawtrDHt9cf
l/7dIeOv/v18Pp+1tzX9Y1n/mJ/uaIQvmNPN7frDe3yfP+Ot/vNxzof53Z7q
y1xvM9Jfv8r1ZO9mD2ovqga9WxWa0ppF1IjmfzWQ7rl+1EbUlNcuoqZyPdiD
2ouqYahlqPmunu/PekKNZoUiemC1G3vcHpkv1G7sie2N1Xj/bITmtmrWH2px
ajLLFaFpqNWoOXYuQgNQi7QmsTYxZ5u7Xa/Wevb8G1ex/ucrwn/UXlwv39Sj
fnkx6w9rbWvKtzPflEVoNO9kvdNcRE3u89mDd818pFZpz90l7d9nPlywiHrl
1YxPr+X6u7sR+a1tzsdnjaiXmvJ53s3125rPu0EV+UXtTQ1unTI05r2L6LHs
tezh94V3qEVvb75Ri1cTOqqKeK32qCZ4bBXx370FNbAdy8hpU7Ie2SDj/TNF
aMz/zvh1UxE5cNuM93cU0UOZb90DcC9ATXl/zv8tPLAIjX+BMvLB9MxfW2X8
UztVY9wc/obxJ8N7wfOXkX+ez/MfX4XG/WRe31z8HeNPzfpqqTL2LIbkfBxQ
hX8skf75bSM0TbXNQ+COZeyRuFdyVuZj9zSGwUfUYq+jnvNtfjuiivz5YObT
vlXUC9fBo+FdM18/WoRmq3b7Y96P8bFLGZr8xrm+1Ord41kH3q8Wez+uvwOK
2HNQG/ocPjLvt1MZmtwuuT7U6tzTcG9DzX/PKjR5tV013r3hz+DeRWjmbcvQ
fPtkfblCGXPguQ/jt09aYk9h13x/7jW4J6D2qgbrXsHHLbG3ocayRxWab1/4
0FpowV+3hBasJrxkGRpur3yfvarQcLfL+1PbVePvmfev9q+mtk0RGrBamxqV
Wr+altqV8UitW81qyyrii3tL7tn8k+tvqSJiwO8Zr7pmPv0p449asRrnb43Y
0xiV68n6zvizchH9z7yMP8YnNbnNq4g/xjc1t03h/8IHF7HHMV/mh1lZb6yC
faUy5uaCIvRzfVq98MQifN36TG3ePb2TqpgzffmkIubSNePcuSZcS76zY10L
RbxLc661sjWoudh6Ui1bTfewMjRYtVh7XHtdNWu1azXak6tYM/r64CLWUqes
/6xXd8j62L0tNfsDy9CI1YrVBAeVoeGr5auRnVzGnpV7V2pkA6rYo3SvUk3p
VHhl+Me8v35l1BTWFlfz208tUX/OyvjUK+vhNzM+Wd93hz/OeHRkGRq2/bqa
q9q2NYm17OQiapWefJbAfjO/XYxtU7hjc2icY+Deqfd+VMT+ipqv2u90fhte
Ro9mLTu+iN5tDez/8P1KfhuKbS24TZ7f86nh2Mvbc9p7uidgb2WPbq+uBlPP
6w+uQgOyN7dntXfdEHv75pjfM8vYk3VvVs3n+DI0ObU5NfyhVfSMJ6R/2Uuq
0arV3sdvF2G7pIxn8Zn+KELj6JDzNayKmGVvYc9jLFPzVft9kN/OwL5Lzqc9
U5H6SHfsd9ZC61YjVSu9Db4QXiP91x7FXmULfTLvdyy2DeD5m9Mf4GXhz3I+
+8PLwbOL2MM9JsfPl+cfUoX90yL2BPrai/G5zljVHM93bhnvwnfku1o+/VGN
0v5PzbaVsZNroeWqoVXN4b8jc76/Tn93b3x1eBHs98OnV/H+Gs3h32przvfC
8E210Mp9Pws1x3obnP6m/z2gP3H8MvCvRYwfVIX/6A9qdCPKmP/O8K210OL1
x6bmeF73JvSPdvC9vvMy3uei8LW5vt0jURvUX9w7mVTGtb0H10KfKnpVe2Z7
Z3tge097RntH38fnRfTLfbBtV0auNmfby7oG7ZXtUV2brufv+T7V9Z7x4Lsi
+lf3+lzDxhJjimu7R8YD4517c1uk/6i5j+TeTiyjd3WOnCtrDu/FntNaxJhk
L/lKEbFqt/Tfp4rI5cuU0bufXcR+vfHnp4x3/u2ENYq9pz2otcsxVaxv2d7U
OXau9bFP+BztGsr4IG9aRi1iT2dvd1IZvmtMMja1lvE3BP7twEctUQN4vD28
tYE1k72ePaC1lPFyThH99iEZX38pYg7cm1u0Cu1vQOrV7kG0bY75dm9CfemS
rJ/cO3ZPc9vMb+51+jcGajNjU4+1PjuliBzi3244R86Ve1DWGwOrWJu+I9+V
+XvHzH/uzY7J9aU/6dvmk/exj6rF3qh7YFtnfnRv9/ZGaL/2QPZC1menFZGz
zF1q8mpvaqpqq6/l8ebI7au4nrHSNeJaua4RvZM9kL2Qf/Oh9qWGqpbqHtk+
WR80ZT0suwe2SxU5R9/UZ/VdY45rT5/X942hF2Q9s3wZf2OyV9YX/u2JMdm5
dw26FtX7zivC59x7tcayFji0iNprFHx3Ldaka7NT1gNHF1HbuWZdu78VkavV
/y4sol5XL7CHs5ebmXr7KVXEHmOasc0YOSH99f+xkzHHFKE/+rca7rnNTf9R
SzbmGvuMqcbWP/J5zSHu9Z9TRmwy5hn7/JubP3N/Tu3Qv8k5Nt+Pf6vTMetz
4/V+ZfSs9q7uOakl+jct7l1dVo/9PXOAsdw179p3z+DX3C9X+3ZP8J+m0LjV
ukdVocV3y/1q/0ZoaL7P9hm/nVvn+KwyajDXoGvP2sx4X2Y8Pa2Kevnw9Hf/
Nsic79p2jbpWe1TRa6tBqEWoedrLuwenFqrmqZaqpqoWas1i7WKOPLKKPf7/
a5v10GqfzP2Dd+qhFV2Ux7tnMDDXs3uL97gGytijHcn59q3F3q3XU2tVo1Wr
tZ84I+tv+z1zrs+2VO5X/g+ao8nJ
                  "]], 
                 Polygon[CompressedData["
1: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
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0UkuBGEYBuDf1ObWcQBiY55ZshWhVxamNjYiLFhJ2EksOAEnYCOsOAEO
oLXWZk4gIvaeSiT11vMllar3z1cN6c2xjYIQwpbcGA6ZKwzhmD+8YKIohCt2
MMMRfnI5FsIHl/jONN+4yFcu8IXzfOYcZ+XJPMNHppjnNB84xRwnec8JZjnO
O67qvmaSl+ziCWt5xF9nPmCeOzznmayb95jiCpMc5iDb2Mk46/ltDwlmGe2m
sSQEj0IT1YRmFrOFrtDqFou+w1K2syzaFzulPDonK9jNSvawir2sZh/j7GcN
vxTXsUpxR9TFAQ5xNNo5p7nLNZ5ym7fey8j+///8A8pFM5k=
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0UcuBVAUBuAr2owZJiTmjCQmrICZEREGBt7Te1kAjwXovW5A720dSqL3
MlQSvheDP9+5OTe55+Tm1rSUNSeEELqkNzGEbodYUgj9XOQQj7jIM67wi8dc
StWL3+MhF3jAee5zjnuc5S5nOC076iluc5JbnOAmx7nBMa5zlGsc4Sozk73L
HzMM84IxnrCHy4xykBWsZpWUqgtZzCzm89u+OTxnOo8Z4nvxQznAS9amhHDF
CK8Z5Q3reMt63rGB92zkA5vYLI/qFj6xlc9s4wvb+coOvrGT71zw9i8PmWam
U2bzk3nMsEMRC1jCSpazT79fIgn///kHi6BILw==
                "]]}, {
               
               Line[{1318, 1317, 2185, 1334, 1963, 2193, 1357, 1970, 2207, 
                1382, 2222, 1380, 1404, 1983, 2237, 1428, 1989, 2252, 1452, 
                1995, 2267, 1475, 2283, 2002, 2282, 1490, 2016, 2305, 1508, 
                2327, 1506, 1530, 2037, 2342, 1552, 2045, 2357, 1576, 2372, 
                1574, 1599, 843, 1622}], 
               
               Line[{1319, 1957, 2186, 1335, 1965, 2195, 1358, 1972, 2209, 
                1383, 1977, 2224, 1405, 1985, 2239, 1429, 2254, 1430, 1453, 
                2269, 1454, 1476, 2286, 2004, 2285, 1491, 2019, 2309, 1509, 
                2031, 2329, 1531, 2039, 2344, 1553, 2359, 1554, 1577, 819, 
                1600, 2387, 1601, 1623}], 
               
               Line[{1320, 1958, 2187, 1336, 1966, 2197, 1359, 1973, 2211, 
                1384, 1979, 2226, 1406, 2241, 1409, 1431, 2256, 1434, 1455, 
                2271, 1458, 1477, 2288, 2006, 2289, 1492, 2021, 2312, 1510, 
                2032, 2331, 1532, 2346, 1535, 1555, 2047, 2361, 1578, 2375, 
                1581, 1602, 2389, 1605, 1624}], 
               
               Line[{1321, 1959, 2188, 1338, 1967, 2199, 1361, 1974, 2213, 
                1385, 2228, 1389, 1408, 2243, 1412, 1433, 2258, 1438, 1457, 
                2273, 1461, 1478, 2292, 2008, 2291, 1493, 2023, 2315, 1512, 
                2033, 2333, 1534, 2040, 2348, 1557, 2363, 1561, 1580, 2377, 
                1584, 1604, 2391, 1608, 1625}], 
               
               Line[{1322, 1960, 2189, 1339, 1968, 2201, 1362, 1975, 2215, 
                1386, 2230, 1394, 1410, 2245, 1417, 1435, 2260, 1442, 1459, 
                2275, 1465, 1479, 2294, 2010, 2295, 1494, 2025, 2318, 1513, 
                2034, 2335, 1536, 2041, 2350, 1558, 2365, 1565, 1582, 2379, 
                1588, 1606, 2393, 1612, 1626}], 
               
               Line[{1323, 1961, 2190, 1341, 1969, 2203, 1364, 2217, 1372, 
                1388, 2232, 1398, 1411, 2247, 1420, 1437, 2262, 1445, 1460, 
                2277, 1468, 1480, 2297, 2012, 2298, 1495, 2027, 2321, 1515, 
                2337, 1523, 1538, 2042, 2352, 1560, 2367, 1568, 1583, 2381, 
                1591, 1607, 2395, 1615, 1627}], 
               
               Line[{1324, 1962, 2191, 1342, 2205, 1352, 1365, 2219, 1376, 
                1390, 1981, 2234, 1413, 2249, 1424, 1439, 1994, 2264, 1462, 
                2280, 1471, 1481, 2301, 2014, 2303, 1496, 2324, 1503, 1516, 
                2035, 2339, 1539, 2354, 1548, 1562, 2369, 1571, 1585, 2383, 
                1594, 1609, 2397, 1618, 1628}], 
               
               Line[{1326, 1333, 2194, 1345, 1356, 2208, 1368, 1381, 2223, 
                1393, 1403, 2238, 1416, 2253, 1990, 1441, 1451, 2268, 1464, 
                1474, 2284, 1483, 2307, 2308, 2018, 1498, 2328, 2030, 1519, 
                1529, 2343, 1542, 2358, 2046, 1564, 1575, 2373, 1587, 1598, 
                2386, 1611, 1621, 2399, 1630}], 
               
               Line[{1327, 1337, 2196, 1346, 1360, 2210, 1369, 2225, 1978, 
                1395, 1407, 2240, 1418, 1432, 2255, 1443, 1456, 2270, 1466, 
                2287, 2005, 1484, 2310, 2020, 2311, 1499, 1511, 2330, 1520, 
                1533, 2345, 1543, 1556, 2360, 1566, 1579, 2374, 1589, 1603, 
                2388, 1613, 2400, 2064, 1631}], 
               
               Line[{1328, 1340, 2198, 1348, 1363, 2212, 1371, 1387, 2227, 
                1397, 2242, 1986, 1419, 1436, 2257, 1444, 2272, 1997, 1467, 
                2290, 2007, 1485, 2313, 2022, 2314, 1500, 1514, 2332, 1522, 
                1537, 2347, 1545, 1559, 2362, 1567, 2376, 2053, 1590, 2390, 
                2058, 1614, 2401, 2065, 1632}], 
               
               Line[{1329, 1343, 2200, 1349, 1366, 2214, 1373, 1391, 2229, 
                1399, 1414, 2244, 1421, 2259, 1991, 1446, 2274, 1998, 1469, 
                2293, 2009, 1486, 2317, 2024, 2316, 1501, 1517, 2334, 1524, 
                1540, 2349, 1546, 2364, 2048, 1569, 2378, 2054, 1592, 2392, 
                2059, 1616, 2402, 2066, 1633}], 
               
               Line[{1330, 1347, 2202, 1351, 1370, 2216, 1375, 1396, 2231, 
                1400, 2246, 1987, 1423, 2261, 1992, 1447, 2276, 1999, 1470, 
                2296, 2011, 1487, 2319, 2026, 2320, 1502, 1521, 2336, 1526, 
                1544, 2351, 1547, 2366, 2049, 1570, 2380, 2055, 1593, 2394, 
                2060, 1617, 2403, 2067, 1634}], 
               
               Line[{1331, 1350, 2204, 1353, 1374, 2218, 1377, 2233, 1980, 
                1401, 1422, 2248, 1425, 2263, 1993, 1448, 2278, 2000, 1472, 
                2299, 2013, 1488, 2322, 2028, 2323, 1504, 1525, 2338, 1527, 
                2353, 2043, 1549, 2368, 2050, 1572, 2382, 2056, 1595, 2396, 
                2061, 1619, 2404, 2068, 1635}], 
               
               Line[{1332, 1354, 2183, 1355, 1378, 2220, 1379, 2235, 1982, 
                1402, 2250, 1988, 1426, 1449, 2265, 1450, 2279, 2001, 1473, 
                2302, 2015, 1489, 2325, 2029, 2300, 1505, 2340, 2036, 1528, 
                2355, 2044, 1550, 2370, 2051, 1573, 1596, 2384, 1597, 2398, 
                2062, 1620, 2405, 2069, 1636}], 
               
               Line[{1629, 2063, 2385, 1610, 2057, 2371, 1586, 2052, 2356, 
                1563, 2341, 1551, 1541, 2038, 2326, 1518, 2304, 1507, 1497, 
                2281, 2017, 2306, 1482, 2003, 2266, 1463, 1996, 2251, 1440, 
                2236, 1427, 1415, 1984, 2221, 1392, 1976, 2206, 1367, 1971, 
                2192, 1344, 1964, 2184, 1325}], 
               
               Line[{1638, 1637, 2408, 1654, 2076, 2416, 1677, 2083, 2430, 
                1702, 2445, 1700, 1724, 2096, 2460, 1748, 2102, 2475, 1772, 
                2108, 2490, 1795, 2507, 2116, 2506, 1810, 2129, 2505, 1828, 
                2550, 1826, 1850, 2150, 2565, 1872, 2158, 2580, 1896, 2595, 
                1894, 1919, 1275, 1942}], 
               
               Line[{1639, 2070, 2409, 1655, 2078, 2418, 1678, 2085, 2432, 
                1703, 2090, 2447, 1725, 2098, 2462, 1749, 2477, 1750, 1773, 
                2492, 1774, 1796, 2509, 2118, 2508, 1811, 2132, 2532, 1829, 
                2144, 2552, 1851, 2152, 2567, 1873, 2582, 1874, 1897, 1251, 
                1920, 2610, 1921, 1943}], 
               
               Line[{1640, 2071, 2410, 1656, 2079, 2420, 1679, 2086, 2434, 
                1704, 2092, 2449, 1726, 2464, 1729, 1751, 2479, 1754, 1775, 
                2494, 1778, 1797, 2511, 2120, 2512, 1812, 2134, 2535, 1830, 
                2145, 2554, 1852, 2569, 1855, 1875, 2160, 2584, 1898, 2598, 
                1901, 1922, 2612, 1925, 1944}], 
               
               Line[{1641, 2072, 2411, 1658, 2080, 2422, 1681, 2087, 2436, 
                1705, 2451, 1709, 1728, 2466, 1732, 1753, 2481, 1758, 1777, 
                2496, 1781, 1798, 2516, 2122, 2515, 1813, 2136, 2538, 1832, 
                2146, 2556, 1854, 2153, 2571, 1877, 2586, 1881, 1900, 2600, 
                1904, 1924, 2614, 1928, 1945}], 
               
               Line[{1642, 2073, 2412, 1659, 2081, 2424, 1682, 2088, 2438, 
                1706, 2453, 1714, 1730, 2468, 1737, 1755, 2483, 1762, 1779, 
                2498, 1785, 1799, 2518, 2124, 2519, 1814, 2138, 2541, 1833, 
                2147, 2558, 1856, 2154, 2573, 1878, 2588, 1885, 1902, 2602, 
                1908, 1926, 2616, 1932, 1946}], 
               
               Line[{1643, 2074, 2413, 1661, 2082, 2426, 1684, 2440, 1692, 
                1708, 2455, 1718, 1731, 2470, 1740, 1757, 2485, 1765, 1780, 
                2500, 1788, 1800, 2520, 2126, 2521, 1815, 2140, 2544, 1835, 
                2560, 1843, 1858, 2155, 2575, 1880, 2590, 1888, 1903, 2604, 
                1911, 1927, 2618, 1935, 1947}], 
               
               Line[{1644, 2075, 2414, 1662, 2428, 1672, 1685, 2442, 1696, 
                1710, 2094, 2457, 1733, 2472, 1744, 1759, 2107, 2487, 1782, 
                2502, 1791, 1801, 2527, 2128, 2525, 1816, 2547, 1823, 1836, 
                2148, 2562, 1859, 2577, 1868, 1882, 2592, 1891, 1905, 2606, 
                1914, 1929, 2620, 1938, 1948}], 
               
               Line[{1646, 1653, 2417, 1665, 1676, 2431, 1688, 1701, 2446, 
                1713, 1723, 2461, 1736, 2476, 2103, 1761, 1771, 2491, 1784, 
                2489, 1793, 1803, 2529, 2130, 2531, 1818, 2551, 2143, 1839, 
                1849, 2566, 1862, 2581, 2159, 1884, 1895, 2596, 1907, 1918, 
                2609, 1931, 1941, 2622, 1950}], 
               
               Line[{1647, 1657, 2419, 1666, 1680, 2433, 1689, 2448, 2091, 
                1715, 1727, 2463, 1738, 1752, 2478, 1763, 1776, 2493, 1786, 
                2510, 2117, 1804, 2533, 2133, 2534, 1819, 1831, 2553, 1840, 
                1853, 2568, 1863, 1876, 2583, 1886, 1899, 2597, 1909, 1923, 
                2611, 1933, 2623, 2177, 1951}], 
               
               Line[{1648, 1660, 2421, 1668, 1683, 2435, 1691, 1707, 2450, 
                1717, 2465, 2099, 1739, 1756, 2480, 1764, 2495, 2110, 1787, 
                2513, 2119, 1805, 2536, 2135, 2537, 1820, 1834, 2555, 1842, 
                1857, 2570, 1865, 1879, 2585, 1887, 2599, 2166, 1910, 2613, 
                2171, 1934, 2624, 2178, 1952}], 
               
               Line[{1649, 1663, 2423, 1669, 1686, 2437, 1693, 1711, 2452, 
                1719, 1734, 2467, 1741, 2482, 2104, 1766, 2497, 2111, 1789, 
                2514, 2121, 1806, 2540, 2137, 2539, 1821, 1837, 2557, 1844, 
                1860, 2572, 1866, 2587, 2161, 1889, 2601, 2167, 1912, 2615, 
                2172, 1936, 2625, 2179, 1953}], 
               
               Line[{1650, 1667, 2425, 1671, 1690, 2439, 1695, 1716, 2454, 
                1720, 2469, 2100, 1743, 2484, 2105, 1767, 2499, 2112, 1790, 
                2517, 2123, 1807, 2542, 2139, 2543, 1822, 1841, 2559, 1846, 
                1864, 2574, 1867, 2589, 2162, 1890, 2603, 2168, 1913, 2617, 
                2173, 1937, 2626, 2180, 1954}], 
               
               Line[{1651, 1670, 2427, 1673, 1694, 2441, 1697, 2456, 2093, 
                1721, 1742, 2471, 1745, 2486, 2106, 1768, 2501, 2113, 1792, 
                2522, 2125, 1808, 2545, 2141, 2546, 1824, 1845, 2561, 1847, 
                2576, 2156, 1869, 2591, 2163, 1892, 2605, 2169, 1915, 2619, 
                2174, 1939, 2627, 2181, 1955}], 
               
               Line[{1652, 1674, 2406, 1675, 1698, 2443, 1699, 2458, 2095, 
                1722, 2473, 2101, 1746, 1769, 2488, 1770, 2503, 2115, 1794, 
                2523, 2127, 1809, 2548, 2142, 2524, 1825, 2563, 2149, 1848, 
                2578, 2157, 1870, 2593, 2164, 1893, 1916, 2607, 1917, 2621, 
                2175, 1940, 2628, 2182, 1956}], 
               
               Line[{1949, 2176, 2608, 1930, 2170, 2594, 1906, 2165, 2579, 
                1883, 2564, 1871, 1861, 2151, 2549, 1838, 2526, 1827, 1817, 
                2131, 2530, 2528, 1802, 2504, 2114, 1783, 2109, 2474, 1760, 
                2459, 1747, 1735, 2097, 2444, 1712, 2089, 2429, 1687, 2084, 
                2415, 1664, 2077, 2407, 1645}]}, {
               
               Line[{453, 754, 2340, 751, 2338, 750, 747, 746, 2336, 743, 
                2334, 742, 739, 738, 2332, 735, 2330, 734, 731, 2328, 730, 
                2304, 723, 722, 2324, 717, 2321, 716, 711, 2318, 710, 705, 
                704, 2315, 699, 2312, 698, 693, 2309, 692, 687, 2305, 684, 
                728}], 
               
               Line[{466, 2300, 725, 721, 2323, 719, 715, 2320, 713, 709, 707,
                 2316, 703, 2314, 701, 697, 2311, 695, 691, 2308, 689, 2281, 
                681, 2303, 679, 675, 673, 2298, 669, 667, 2295, 663, 2291, 
                661, 657, 655, 2289, 651, 2285, 649, 645, 2282, 642, 686}], 
               
               Line[{468, 450, 2185, 452, 2186, 451, 454, 455, 2187, 456, 457,
                 2188, 458, 459, 2189, 460, 461, 2190, 462, 463, 2191, 464, 
                2184, 470, 2194, 471, 474, 2196, 475, 2198, 478, 479, 482, 
                2200, 483, 2202, 486, 487, 490, 2204, 491, 494, 2183, 495}], 
               
               Line[{497, 467, 2193, 469, 472, 2195, 473, 476, 2197, 477, 480,
                 2199, 481, 484, 2201, 485, 488, 2203, 489, 2205, 492, 493, 
                2192, 499, 2208, 500, 503, 2210, 504, 507, 2212, 508, 511, 
                2214, 512, 515, 2216, 516, 519, 2218, 520, 2220, 523, 524}], 
               
               Line[{526, 496, 2207, 498, 501, 2209, 502, 505, 2211, 506, 509,
                 2213, 510, 513, 2215, 514, 2217, 517, 518, 2219, 521, 522, 
                2206, 528, 2223, 529, 532, 2225, 533, 536, 2227, 537, 2229, 
                540, 541, 544, 2231, 545, 2233, 548, 549, 2235, 552, 553}], 
               
               Line[{555, 525, 2222, 527, 530, 2224, 531, 534, 2226, 535, 538,
                 2228, 539, 2230, 542, 543, 2232, 546, 547, 2234, 550, 551, 
                2221, 557, 2238, 558, 561, 2240, 562, 565, 2242, 566, 569, 
                2244, 570, 2246, 573, 574, 2248, 577, 578, 2250, 581, 582}], 
               
               Line[{584, 554, 2237, 556, 559, 2239, 560, 563, 2241, 564, 
                2243, 567, 568, 571, 2245, 572, 2247, 575, 576, 2249, 579, 
                580, 2236, 586, 2253, 587, 590, 2255, 591, 594, 2257, 595, 
                598, 2259, 599, 2261, 602, 603, 2263, 606, 607, 2265, 610, 
                611}], 
               Line[{613, 583, 2252, 585, 588, 2254, 589, 2256, 592, 593, 
                2258, 596, 597, 2260, 600, 601, 2262, 604, 605, 2264, 608, 
                609, 2251, 615, 2268, 616, 619, 2270, 620, 623, 2272, 624, 
                2274, 627, 628, 631, 2276, 632, 2278, 635, 636, 2279, 639, 
                640}], 
               
               Line[{643, 612, 2267, 614, 2269, 617, 618, 621, 2271, 622, 
                2273, 625, 626, 2275, 629, 630, 2277, 633, 634, 637, 2280, 
                638, 2266, 646, 2284, 647, 652, 2287, 653, 658, 2290, 659, 
                2293, 664, 665, 2296, 670, 671, 676, 2299, 677, 2302, 682, 
                683}], 
               
               Line[{685, 2283, 641, 644, 2286, 648, 650, 654, 2288, 656, 
                2292, 660, 662, 666, 2294, 668, 672, 2297, 674, 2301, 678, 
                680, 688, 2306, 2307, 690, 2310, 694, 696, 2313, 700, 702, 
                706, 2317, 708, 2319, 712, 714, 2322, 718, 720, 2325, 724, 
                465}], 
               
               Line[{726, 783, 2355, 780, 779, 2353, 776, 775, 2351, 772, 
                2349, 771, 768, 2347, 767, 764, 2345, 763, 760, 2343, 759, 
                2326, 753, 752, 2339, 749, 748, 2337, 745, 2335, 744, 741, 
                740, 2333, 737, 2331, 736, 733, 2329, 732, 729, 2327, 727, 
                757}], 
               
               Line[{755, 812, 2370, 809, 808, 2368, 805, 804, 2366, 801, 
                2364, 800, 797, 2362, 796, 793, 2360, 792, 789, 2358, 788, 
                2341, 782, 781, 2354, 778, 777, 2352, 774, 773, 2350, 770, 
                2348, 769, 766, 2346, 765, 762, 2344, 761, 758, 2342, 756, 
                786}], 
               
               Line[{784, 841, 2384, 838, 837, 2382, 834, 2380, 833, 830, 829,
                 2378, 826, 2376, 825, 822, 2374, 821, 818, 2373, 817, 2356, 
                811, 810, 2369, 807, 806, 2367, 803, 802, 2365, 799, 798, 
                2363, 795, 2361, 794, 791, 2359, 790, 787, 2357, 785, 815}], 
               
               Line[{813, 870, 2398, 867, 866, 2396, 863, 862, 2394, 859, 858,
                 2392, 855, 854, 2390, 851, 2388, 850, 847, 2386, 846, 2371, 
                840, 839, 2383, 836, 835, 2381, 832, 831, 2379, 828, 827, 
                2377, 824, 823, 2375, 820, 819, 816, 2372, 814, 844}], 
               
               Line[{842, 884, 2405, 883, 2404, 882, 881, 880, 2403, 879, 
                2402, 878, 877, 876, 2401, 875, 874, 2400, 873, 2399, 872, 
                2385, 869, 868, 2397, 865, 864, 2395, 861, 860, 2393, 857, 
                856, 2391, 853, 2389, 852, 849, 848, 2387, 845, 843, 871}], 
               
               Line[{888, 1186, 2563, 1183, 2561, 1182, 1179, 1178, 2559, 
                1175, 2557, 1174, 1171, 1170, 2555, 1167, 2553, 1166, 1163, 
                2551, 1162, 2526, 1155, 1154, 2547, 1149, 2544, 1148, 1143, 
                2541, 1142, 1137, 1136, 2538, 1131, 2535, 1130, 1125, 2532, 
                1124, 1119, 2505, 1116, 1160}], 
               
               Line[{901, 2524, 1157, 1153, 2546, 1151, 1147, 2543, 1145, 
                1141, 1139, 2539, 1135, 2537, 1133, 1129, 2534, 1127, 1123, 
                2531, 1121, 2530, 1114, 2525, 1110, 1108, 2521, 1104, 1102, 
                2519, 1098, 2515, 1096, 1092, 1090, 2512, 1086, 2508, 1084, 
                1080, 2506, 1077, 1118}], 
               
               Line[{903, 885, 2408, 887, 2409, 886, 889, 890, 2410, 891, 892,
                 2411, 893, 894, 2412, 895, 896, 2413, 897, 898, 2414, 899, 
                2407, 905, 2417, 906, 909, 2419, 910, 2421, 913, 914, 917, 
                2423, 918, 2425, 921, 922, 925, 2427, 926, 929, 2406, 930}], 
               
               Line[{932, 902, 2416, 904, 907, 2418, 908, 911, 2420, 912, 915,
                 2422, 916, 919, 2424, 920, 923, 2426, 924, 2428, 927, 928, 
                2415, 934, 2431, 935, 938, 2433, 939, 942, 2435, 943, 946, 
                2437, 947, 950, 2439, 951, 954, 2441, 955, 2443, 958, 959}], 
               
               Line[{961, 931, 2430, 933, 936, 2432, 937, 940, 2434, 941, 944,
                 2436, 945, 948, 2438, 949, 2440, 952, 953, 2442, 956, 957, 
                2429, 963, 2446, 964, 967, 2448, 968, 971, 2450, 972, 2452, 
                975, 976, 979, 2454, 980, 2456, 983, 984, 2458, 987, 988}], 
               
               Line[{990, 960, 2445, 962, 965, 2447, 966, 969, 2449, 970, 973,
                 2451, 974, 2453, 977, 978, 2455, 981, 982, 2457, 985, 986, 
                2444, 992, 2461, 993, 996, 2463, 997, 1000, 2465, 1001, 1004, 
                2467, 1005, 2469, 1008, 1009, 2471, 1012, 1013, 2473, 1016, 
                1017}], 
               
               Line[{1019, 989, 2460, 991, 994, 2462, 995, 998, 2464, 999, 
                2466, 1002, 1003, 1006, 2468, 1007, 2470, 1010, 1011, 2472, 
                1014, 1015, 2459, 1021, 2476, 1022, 1025, 2478, 1026, 1029, 
                2480, 1030, 1033, 2482, 1034, 2484, 1037, 1038, 2486, 1041, 
                1042, 2488, 1045, 1046}], 
               
               Line[{1048, 1018, 2475, 1020, 1023, 2477, 1024, 2479, 1027, 
                1028, 2481, 1031, 1032, 2483, 1035, 1036, 2485, 1039, 1040, 
                2487, 1043, 1044, 2474, 1050, 2491, 1051, 1054, 2493, 1055, 
                1058, 2495, 1059, 2497, 1062, 1063, 1066, 2499, 1067, 2501, 
                1070, 1071, 2503, 1074, 1075}], 
               
               Line[{1078, 1047, 2490, 1049, 2492, 1052, 1053, 1056, 2494, 
                1057, 2496, 1060, 1061, 2498, 1064, 1065, 2500, 1068, 1069, 
                2502, 1072, 2504, 1073, 2489, 1081, 1082, 2510, 1087, 1088, 
                2513, 1093, 2514, 1094, 1099, 2517, 1100, 1105, 1106, 2522, 
                1111, 2523, 1112, 1115}], 
               
               Line[{1117, 2507, 1076, 1079, 2509, 1083, 1085, 1089, 2511, 
                1091, 2516, 1095, 1097, 1101, 2518, 1103, 1107, 2520, 1109, 
                1113, 2527, 2528, 2529, 1120, 1122, 2533, 1126, 1128, 2536, 
                1132, 1134, 1138, 2540, 1140, 2542, 1144, 1146, 2545, 1150, 
                1152, 2548, 1156, 900}], 
               
               Line[{1158, 1215, 2578, 1212, 1211, 2576, 1208, 1207, 2574, 
                1204, 2572, 1203, 1200, 2570, 1199, 1196, 2568, 1195, 1192, 
                2566, 1191, 2549, 1185, 1184, 2562, 1181, 1180, 2560, 1177, 
                2558, 1176, 1173, 1172, 2556, 1169, 2554, 1168, 1165, 2552, 
                1164, 1161, 2550, 1159, 1189}], 
               
               Line[{1187, 1244, 2593, 1241, 1240, 2591, 1237, 1236, 2589, 
                1233, 2587, 1232, 1229, 2585, 1228, 1225, 2583, 1224, 1221, 
                2581, 1220, 2564, 1214, 1213, 2577, 1210, 1209, 2575, 1206, 
                1205, 2573, 1202, 2571, 1201, 1198, 2569, 1197, 1194, 2567, 
                1193, 1190, 2565, 1188, 1218}], 
               
               Line[{1216, 1273, 2607, 1270, 1269, 2605, 1266, 2603, 1265, 
                1262, 1261, 2601, 1258, 2599, 1257, 1254, 2597, 1253, 1250, 
                2596, 1249, 2579, 1243, 1242, 2592, 1239, 1238, 2590, 1235, 
                1234, 2588, 1231, 1230, 2586, 1227, 2584, 1226, 1223, 2582, 
                1222, 1219, 2580, 1217, 1247}], 
               
               Line[{1245, 1302, 2621, 1299, 1298, 2619, 1295, 1294, 2617, 
                1291, 1290, 2615, 1287, 1286, 2613, 1283, 2611, 1282, 1279, 
                2609, 1278, 2594, 1272, 1271, 2606, 1268, 1267, 2604, 1264, 
                1263, 2602, 1260, 1259, 2600, 1256, 1255, 2598, 1252, 1251, 
                1248, 2595, 1246, 1276}], 
               
               Line[{1274, 1316, 2628, 1315, 2627, 1314, 1313, 1312, 2626, 
                1311, 2625, 1310, 1309, 1308, 2624, 1307, 1306, 2623, 1305, 
                2622, 1304, 2608, 1301, 1300, 2620, 1297, 1296, 2618, 1293, 
                1292, 2616, 1289, 1288, 2614, 1285, 2612, 1284, 1281, 1280, 
                2610, 1277, 1275, 1303}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
PX9o0g/n9BlNyLngnXzl/haMl1wc4eswAjLjb2tzpepRv3jQ4fhAC27ZODU+
8mAExvk3SiZGVmH56SMGB05W4wzPCvt9OkQnXDh7u/1bAdapP3aaCWWovvPK
bNlECmTpeuIaup7Iqmc9XX8oo+tP6kvXP3Z2xMMpnXIgDfOE06kOpripkj1E
F202O2JZt7cU7v8ZeJZ/qxmE76jwty8geCiUormYNx1OaYt7t+xthN6pYO20
/RRMen9Rfx17F8/c0PLScKmHn2Iy/ZJ2pM+/VSueGslDZxGhPccoJjieODtu
RPotju5PDKP7EwKn+1OX7me0o/sZHab7+Rbd//iW7n9k9f/cVud7c+va8GhB
4PMlRxrR6TjjiKbaCNzg3M2VNtCEIe8PMTa+rsMXGy0ytatGwNh60LBcvgor
hvbMmOlSjncvj4bJ21Jw7U2GjkpQDqr5F1z9bcXAS3fton50EV26Tusi38J7
uLzkb9Pd27YY7PObX/gv0W80PkAwjQ/AwodGGk9gE40nwMKT9TT+wDT+AAt/
NJ/HpQ6opyMfU2o9f38RJGu0199qJD6lzEXsmmMNPjmyVtZuwByGtKfe+QeR
/h/1WjrQ+AhNRNWsi8JTQSA5bV7lUgrU9nYnO63qxPvf60v+GGaihfYma/3L
I7Ccxls0pPEWWXibTeMzTuMz3p/G50oaz7GZxnNcNY3n0Yff3U7JbcSmrODE
SJF8vNa0c/dvNQpE7U6/PHS8CjM3zJpNzWVizJ7ur6VEHyo8vLd84bpEVBWt
kZlXFQ4NLc/FdUgf/hTNTQvcdhspc5Okvg1X4GeQloUmqefGKq0UuZZEGBZP
khDyzwbGA5Oh1CGio2i+gwya74DFd1Um//Ijntn2Lz8Cix9jPYzmj6nn4Oo9
hW2Z9xPA0YSLewmZh+OOfWhiaBV+0Wx1iVCIwVl+YRzD8RQsPS1toxVbj7+r
xTfo+aShx9J3CeKnKEil+R1daX7H3dP87iJa13EqpgWDwi7rXmQU4jWNvt2b
J0fAe9ucpQapj5A6GpsnblyMjIBHQrqzKJhN6w2c1hvI0hsfaX2ChrQ+QZY+
sT1T73KwMgd92Gf2vRqzgkNvT3dv+ESB9nbH2U0vjHFs8ZaukW0ZIG1RIBI8
RnjK4V+9BEG0XgKWXgqh9RWE0PoKWPrqkfKHhVYZWSBYWjvralAeGLa/5OMn
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
Z2l4qY/3ZBOkYUNtsLod4bPHXkrPjbmfjfkeCVIf9ySgkkXBl1xih1cpHo2y
FI9GBo8Oofg+FlB8Hxl8P5dZ8F1cZDb2bt1C1+OJQ+Zf6TcmiR/5bgkRryvP
xCk/zV6aVDLyu25ZcJfY7e/6+xpf6/wh6nXzfKXEUjh57YPJkjw6nKd4FupS
PAsuzPKsp21r3bsX2cPnOcN7miaKYFwrfICb7EMmVZdAFaougf9Xl6DqHihL
1T2QUfdwfbW293qgI/Z/L4ias6IQWPiO9iQSvGoWtdtLYNAfJ0oiFQ+k0SBs
34KcUMKbTJ+1X/YfKkD/nTs/DwrGYmpK/Ze35Lyar0aXH57Iw+hz5nYPv8ei
mKe2XAaxkz2XIn/6Z4Wjx3S1godALiRm2CycIvvgs9Pie9GjRPThduywGE6D
CiUH37mE95XbTIjLJ+Vhyp2fiYt3JiDnI7dDnwiumDMnXJnem4uyh8TjjXwS
cVJ/uSdnG8EJPa9VdNIzcKQi7Vry6XjQohWfX/eRDoc2f9N5sjADWfepcz0Q
jISC5t7o3C+EX7iuuPdHNAc1009LLauKxy3+eYmnye86LhR4qz4mBwMSkvzd
RRNwe7vRtoJXdHh9ufLGUtYMnO/r6nr5egj4GOXt1x+gg+NhmQVXZbJwf5C/
vF2kHrSqNW1rJeun0k+eC47LxcQqmeYatgTsKTzoONNOh7e87Ec+rcxFt1wT
e9uLiVgwdKP6YQfJC4o9Y3Z7MlHhWn1Eu6QVWqhuU+ccJPlovr2FJ8GrbNvq
n5/KfoC79jAv2DVE7Hn66YsDcdnIG3QqzkI7DjM2eIkUkv08fn5t7+Nv2dgS
hdAgHIN7kgdWuBC7Kt6t58sllI68Xhnxpz96YNOFTz7+w+Q7qfoq2lP1VWTU
V33p0uODZdkoOTnQpJobidw9lydd35G/q1LX9LAsCY/KO7J9yMxEHqlXXEu6
6XBqxZgmjesRZDzZbytyLhtqbmvmKpNzXEvVtSCLqmsBo65lMZO90SXMESyc
OZY+0cmCuh0ygpxk33ypOjCyU3VgZNSBOak6MypSdWZk1JnvmYdLedy+CRaN
Sn4+B7NghK1WJZask68ppy1S54wK8mq6USypwOawgkOLvF8THS/9xTwWy8pN
+Jq6wlF1ZUZ98hgdkL71Gn9CONata2LO/BKJrkEtEyu+0+Fco1B6k6w/sq74
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
f30wYKf1wWCuD8Y8/9CYn7ArjO+VfDZfOwE9d98bHp78f3pHLAx6R/R+HZyk
9etgrl9naqTSPbG6HjwPU621wrXgUo5izeD12XrkvcqJxHJYJ+Mt1XzKD9WN
o+K706kQZ5dUKW2UCXn8+g90FyeimmvCpX5Sj19z/K/fCL9Y/us34ly/MZnW
n8SftP4kzvUnr9P1Sb4z6JMk0ub14C3avB6cm9fzcm+6fGhqMO6qjfi80ycH
PO994+km/oYPsXNxjSOWGbEYCN4ohaUBalTz2XlGop/jVyg+hc4Pfa5fCyvA
JsXTxDKeCt1L855KfDaE9+emfsf7VsLqO8IJ1uQ7PjHeZde3LwbvzqzXVf5c
Chv57nPHllBhvN/6nKFxPlKDxWc+kjiwaDAld3Y+6Qs6j7+Ygcf/QpuThUG0
OVk4NycrYrpWZrwwEMKzWou+ORVCnyJzsEkLyXdnnTM2jiPWpZvvHrkdiSO5
UsbiRVQwfToQ+HGvF7hJGi3Q0kNYefWe/ACJwzsL9YxFZEpwXkRCvIp8NHqO
Zl4IJHXWoZ2yYwvG1+FNxxMul1QRfrBvVFUn9dTWjs7fUnwluCIgOafDKw7P
Z2uL95Lf5/ntDUn5E4kB88aUNhnng5fSN4MH7bNzWleWcGkXodktiGTRScDK
6SXmQbVUiPeY6qJwZKLbhLtPzqUU4NrZU/iH4KIDAzukpgsLMLqsfdXPR4l4
fxk0nSL2OfI/9g+cDT2mtyyqAJ+X8DIPPknCHzUh8xpInNTXlfvwYFMuGuz7
1tjhIQ1LY94+VewneYo2Lw/LUv+blwc/6PPyJMfP+Fd9j4auj4JN23zyoNen
9d1YBxXSX4sVPdCiYGG12NngPB90Wf3YP2mE+NvQM78LvL7A3JPSwNWXB8kz
oRP53VQwk2XdFmaZhhOWfaoOfqFYrrKHiYXki8Dl5/00bY3w67XVLRyHs4D7
0LHz6SQOe6Ww1m85k4wyK+tygh5E4Y+8QeYZcn2YiuqrdLMgZH1tf/2KVDKU
CbuI95P8O8P/T+oGVxzG/lifNXAnBrmOXJ/XTX63o+9nGGTYz/D9juxmzXMJ
eLh1eg1lPslj9+TdC8nzL5MciMxiDsd36+eNqbMFgsrkFvj9i/gnXQemiEEH
Zqr/VcmeeG+sMZOCe5zu4NYpvrDiLxWU/W4NJrPF4pTSzNqbXwmOkt0l/Ifk
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
7oeNNx6AjE/a60PGJ/fDxicBOOUEGQ==
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.7931854796686046`, 
             2.7931854796686038`}, {-1.7199475781022886`, 
             1.7199475781022886`}, {0., 0.49709275031586714`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, True}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1060000000000001, 
          1.2650000000000001`}, {1.9, 0.8}, {0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1060000000000001, 1.2650000000000001`}, {1.9,
             0.8}}, "latticeNorms" -> {1.26943333814738, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.08350182464460659, 
            0.9965076242964835}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {29, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.3450209168930866, 0.8194246776210806}, {
            0.5455643248371933, -0.045715271488334014`}}, 
           "reciprocalNorms" -> {0.8890985521235303, 0.5474763178278259}, 
           "qMaxVec" -> {5.586370959337209, 3.439895156204577}, 
           "mObliqueComponents" -> {{0.26307844913097844`, 
            0.45900720231164016`}}, "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2120000000000002`, -2.63}, {
            0.6879999999999998, -1.8300000000000003`}, {
            2.5879999999999996`, -1.0300000000000002`}, \
{-1.1060000000000003`, -1.3650000000000004`}, {
            0.7939999999999999, -0.5650000000000002}, {2.694, 
            0.23499999999999988`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8939999999999998, 
            1.165}, {1.0060000000000002`, 1.965}, {2.906, 
            2.7650000000000006`}, {-0.7879999999999997, 2.43}, {1.112, 
            3.2300000000000004`}}}, "lineTable" -> {{
              
              Line[{{-10.674000000000003`, -39.885000000000005`}, \
{-4.525999999999997, 33.485}}], 
              
              Line[{{-8.774000000000001, -39.085}, {-2.625999999999997, 
               34.285000000000004`}}], 
              
              Line[{{-6.874000000000002, -38.285000000000004`}, \
{-0.7259999999999973, 35.085}}], 
              
              Line[{{-4.974000000000002, -37.485}, {1.1740000000000026`, 
               35.885000000000005`}}], 
              
              Line[{{-3.0740000000000025`, -36.685}, {3.0740000000000025`, 
               36.685}}], 
              
              Line[{{-1.1740000000000026`, -35.885000000000005`}, {
               4.974000000000002, 37.485}}], 
              
              Line[{{0.7259999999999973, -35.085}, {6.874000000000002, 
               38.285000000000004`}}], 
              
              Line[{{2.625999999999997, -34.285000000000004`}, {
               8.774000000000001, 39.085}}], 
              
              Line[{{4.525999999999997, -33.485}, {10.674000000000003`, 
               39.885000000000005`}}]}, {
              
              Line[{{-10.674000000000003`, -39.885000000000005`}, {
               4.525999999999997, -33.485}}], 
              
              Line[{{-10.568000000000001`, -38.620000000000005`}, {
               4.631999999999997, -32.22}}], 
              
              Line[{{-10.462000000000003`, -37.355000000000004`}, {
               4.737999999999997, -30.955000000000002`}}], 
              
              Line[{{-10.356000000000002`, -36.09}, {
               4.843999999999998, -29.69}}], 
              
              Line[{{-10.250000000000002`, -34.825}, {
               4.9499999999999975`, -28.425000000000004`}}], 
              Line[{{-10.144000000000002`, -33.56}, {
               5.055999999999997, -27.160000000000004`}}], 
              
              Line[{{-10.038000000000002`, -32.295}, {
               5.161999999999997, -25.895000000000003`}}], 
              
              Line[{{-9.932000000000002, -31.03}, {
               5.267999999999997, -24.630000000000003`}}], 
              
              Line[{{-9.826, -29.765}, {
               5.373999999999998, -23.365000000000002`}}], 
              
              Line[{{-9.720000000000002, -28.500000000000004`}, {
               5.479999999999998, -22.100000000000005`}}], 
              
              Line[{{-9.614, -27.235000000000003`}, {
               5.585999999999998, -20.835000000000004`}}], 
              
              Line[{{-9.508000000000001, -25.970000000000002`}, {
               5.691999999999998, -19.570000000000004`}}], 
              
              Line[{{-9.402000000000001, -24.705000000000002`}, {
               5.797999999999998, -18.305000000000003`}}], 
              
              Line[{{-9.296000000000001, -23.44}, {
               5.903999999999998, -17.040000000000003`}}], 
              
              Line[{{-9.190000000000001, -22.175}, {
               6.009999999999998, -15.775000000000002`}}], 
              
              Line[{{-9.084000000000001, -20.91}, {
               6.115999999999998, -14.510000000000002`}}], 
              
              Line[{{-8.978000000000002, -19.645}, {
               6.221999999999999, -13.245000000000001`}}], 
              
              Line[{{-8.872, -18.380000000000003`}, {
               6.3279999999999985`, -11.98}}], 
              
              Line[{{-8.766, -17.115000000000002`}, {
               6.433999999999998, -10.715}}], 
              
              Line[{{-8.66, -15.850000000000001`}, {
               6.539999999999999, -9.450000000000003}}], 
              
              Line[{{-8.554, -14.585}, {
               6.645999999999999, -8.185000000000002}}], 
              
              Line[{{-8.448, -13.32}, {
               6.751999999999999, -6.920000000000001}}], 
              Line[{{-8.342, -12.055}, {6.857999999999999, -5.655}}], 
              
              Line[{{-8.236, -10.790000000000001`}, {
               6.963999999999999, -4.390000000000001}}], 
              
              Line[{{-8.13, -9.525000000000002}, {
               7.069999999999999, -3.125000000000001}}], 
              Line[{{-8.024000000000001, -8.260000000000002}, {
               7.175999999999999, -1.8600000000000003`}}], 
              
              Line[{{-7.918, -6.995000000000001}, {
               7.281999999999999, -0.5950000000000002}}], 
              
              Line[{{-7.811999999999999, -5.73}, {7.388, 
               0.6699999999999999}}], 
              Line[{{-7.7059999999999995`, -4.465}, {7.494, 1.935}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.494, -1.935}, {7.7059999999999995`, 4.465}}], 
              
              Line[{{-7.388, -0.6699999999999999}, {7.811999999999999, 
               5.73}}], 
              
              Line[{{-7.281999999999999, 0.5950000000000002}, {7.918, 
               6.995000000000001}}], 
              
              Line[{{-7.175999999999999, 1.8600000000000003`}, {
               8.024000000000001, 8.260000000000002}}], 
              
              Line[{{-7.069999999999999, 3.125000000000001}, {8.13, 
               9.525000000000002}}], 
              
              Line[{{-6.963999999999999, 4.390000000000001}, {8.236, 
               10.790000000000001`}}], 
              Line[{{-6.857999999999999, 5.655}, {8.342, 12.055}}], 
              Line[{{-6.751999999999999, 6.920000000000001}, {8.448, 13.32}}], 
              
              Line[{{-6.645999999999999, 8.185000000000002}, {8.554, 
               14.585}}], 
              
              Line[{{-6.539999999999999, 9.450000000000003}, {8.66, 
               15.850000000000001`}}], 
              
              Line[{{-6.433999999999998, 10.715}, {8.766, 
               17.115000000000002`}}], 
              
              Line[{{-6.3279999999999985`, 11.98}, {8.872, 
               18.380000000000003`}}], 
              
              Line[{{-6.221999999999999, 13.245000000000001`}, {
               8.978000000000002, 19.645}}], 
              
              Line[{{-6.115999999999998, 14.510000000000002`}, {
               9.084000000000001, 20.91}}], 
              
              Line[{{-6.009999999999998, 15.775000000000002`}, {
               9.190000000000001, 22.175}}], 
              
              Line[{{-5.903999999999998, 17.040000000000003`}, {
               9.296000000000001, 23.44}}], 
              
              Line[{{-5.797999999999998, 18.305000000000003`}, {
               9.402000000000001, 24.705000000000002`}}], 
              
              Line[{{-5.691999999999998, 19.570000000000004`}, {
               9.508000000000001, 25.970000000000002`}}], 
              
              Line[{{-5.585999999999998, 20.835000000000004`}, {9.614, 
               27.235000000000003`}}], 
              
              Line[{{-5.479999999999998, 22.100000000000005`}, {
               9.720000000000002, 28.500000000000004`}}], 
              
              Line[{{-5.373999999999998, 23.365000000000002`}, {9.826, 
               29.765}}], 
              
              Line[{{-5.267999999999997, 24.630000000000003`}, {
               9.932000000000002, 31.03}}], 
              
              Line[{{-5.161999999999997, 25.895000000000003`}, {
               10.038000000000002`, 32.295}}], 
              
              Line[{{-5.055999999999997, 27.160000000000004`}, {
               10.144000000000002`, 33.56}}], 
              
              Line[{{-4.9499999999999975`, 28.425000000000004`}, {
               10.250000000000002`, 34.825}}], 
              
              Line[{{-4.843999999999998, 29.69}, {10.356000000000002`, 
               36.09}}], 
              
              Line[{{-4.737999999999997, 30.955000000000002`}, {
               10.462000000000003`, 37.355000000000004`}}], 
              
              Line[{{-4.631999999999997, 32.22}, {10.568000000000001`, 
               38.620000000000005`}}], 
              
              Line[{{-4.525999999999997, 33.485}, {10.674000000000003`, 
               39.885000000000005`}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
              1.0060000000000002`, 1.965}, {{0.006972554718978642, 
              0.08321020490101855}, {0.08321020490101855, 
              0.9930274452810214}}}, {
             1, 1, {-1, 0}, 0.25, 1.6114610000000003`, {0.9, 0.7}, {
              0.7939999999999999, -0.5650000000000002}, {{
              0.006972554718978628, 0.08321020490101846}, {
              0.08321020490101846, 0.9930274452810214}}}, {
             1, 1, {1, -1}, 0.25, 3.4346609999999993`, {0.9, 
              0.7}, {-0.8939999999999998, 1.165}, {{
              0.9370461888378504, -0.24287986499977732`}, \
{-0.24287986499977732`, 0.06295381116214967}}}, {
             1, 1, {-1, 1}, 0.25, 3.434661, {0.9, 0.7}, {2.694, 
              0.23499999999999988`}, {{
              0.9370461888378503, -0.24287986499977726`}, \
{-0.24287986499977726`, 0.06295381116214964}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.288261000000002, {0.9, 0.7}, {2.906, 
              2.7650000000000006`}, {{0.4855102897942041, 
              0.49979000419991604`}, {0.49979000419991604`, 
              0.5144897102057959}}}, {
             1, 1, {-1, -1}, 0.25, 8.288261000000002, {0.9, 
              0.7}, {-1.1060000000000003`, -1.3650000000000004`}, {{
              0.4855102897942041, 0.49979000419991604`}, {
              0.49979000419991604`, 0.5144897102057959}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, {1, 2, {0, 0}}}, 0, ControlType -> 
         None}}, "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$158]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$158]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$158 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], \
$CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], 
       Attributes[$CellContext`res$15605] = {
        Temporary}, $CellContext`res$15605 = {{
         0.25 (0. + 
            0.4855102897942041 (1/10 - 
              E^(I Dot[{-2.0060000000000002`, -2.0650000000000004`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9370461888378504 (1/10 - 
              E^(I Dot[{-1.7939999999999998`, 
                  0.4650000000000001}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.006972554718978628 (1/10 - 
              E^(I Dot[{-0.1060000000000001, -1.2650000000000001`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.006972554718978642 (1/10 - 
              E^(I Dot[{0.1060000000000001, 
                  1.2650000000000001`}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9370461888378503 (1/10 - 
              E^(I Dot[{
                  1.7939999999999998`, -0.4650000000000001}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.4855102897942041 (1/10 - 
              E^(I Dot[{2.0060000000000002`, 
                  2.0650000000000004`}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.49979000419991604` (1/10 - 
              E^(I Dot[{-2.0060000000000002`, -2.0650000000000004`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.24287986499977732` (1/10 - 
             E^(I Dot[{-1.7939999999999998`, 
                 0.4650000000000001}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.08321020490101846 (1/10 - 
              E^(I Dot[{-0.1060000000000001, -1.2650000000000001`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.08321020490101855 (1/10 - 
              E^(I Dot[{0.1060000000000001, 
                  1.2650000000000001`}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.24287986499977726` (1/10 - 
             E^(I Dot[{
                 1.7939999999999998`, -0.4650000000000001}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49979000419991604` (1/10 - 
              E^(I Dot[{2.0060000000000002`, 
                  2.0650000000000004`}, $CellContext`qVec])/10))}, {
         0.25 (0. + 
            0.49979000419991604` (1/10 - 
              E^(I Dot[{-2.0060000000000002`, -2.0650000000000004`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.24287986499977732` (1/10 - 
             E^(I Dot[{-1.7939999999999998`, 
                 0.4650000000000001}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.08321020490101846 (1/10 - 
              E^(I Dot[{-0.1060000000000001, -1.2650000000000001`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.08321020490101855 (1/10 - 
              E^(I Dot[{0.1060000000000001, 
                  1.2650000000000001`}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.24287986499977726` (1/10 - 
             E^(I Dot[{
                 1.7939999999999998`, -0.4650000000000001}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49979000419991604` (1/10 - 
              E^(I Dot[{2.0060000000000002`, 
                  2.0650000000000004`}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.5144897102057959 (1/10 - 
              E^(I Dot[{-2.0060000000000002`, -2.0650000000000004`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.06295381116214967 (1/10 - 
              E^(I Dot[{-1.7939999999999998`, 
                  0.4650000000000001}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9930274452810214 (1/10 - 
              E^(I Dot[{-0.1060000000000001, -1.2650000000000001`}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9930274452810214 (1/10 - 
              E^(I Dot[{0.1060000000000001, 
                  1.2650000000000001`}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.06295381116214964 (1/10 - 
              E^(I Dot[{
                  1.7939999999999998`, -0.4650000000000001}, \
$CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.5144897102057959 (1/10 - 
              E^(I Dot[{2.0060000000000002`, 
                  2.0650000000000004`}, $CellContext`qVec])/
              10))}}, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6015989452885237`*^9, 3.6015989706989765`*^9}},
 CellID->570419063],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{}}, {{{
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 14, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1: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
Th1pvd5V3BfvhbZh6Tv6JUr5sW71Gz7e6PRf898w5pL3y8W5orjOuPXZf9dd
F59sMd66nrfzE2kd9cznbDmxKUfY98o46MjwNHofCc8umg50t05leSwq7usM
MWFIbt740Slk/hrRU368c/YgCeerFfddgaBfFNxH1JfiWLfNO/zu8sUnmeVZ
XHFfxIrvTljlB2ik38W6NTd0dHu8S5qndj5FQtqX8T9XLUwm+JQIo1/+k3O8
loRDvYrfDRLdLvRJDK+kYXGs2+oTjM29u2lYHu174afw4cvSTVPvJ9I6FPbU
Fz6WHk4QJlc8h3+I5Wb/wbNU/KfdrPKp1aT1xbot7rfq/p6V8Ww81u0R55Lh
Vhek8b4VcS9hk/MDvcqbpHli3eYabAqe3lHD8syvwO2HOOz2g4WvhiayONZt
bm7wqk+GEg7a50+skGmY81ZjSvNrhICrO7J8V6axPNo6/CZe6lgo/spNYnGm
V1pUuSY8l9Yxt+L5/EHoM3ThgpkdpfrEut1/S6NobJrK8thW4PNFHOVUumPB
hRSCT7aYVbT/eYP2Uj10qnivfRYuNco80uk2rcN8QYyodG/jqWSWp3EFDh9F
2YU/uVWnpZL5a8TRq8Z4jjaW5mkmHG6xs903YfhC45sGnyXcsG6jqsyQD/8l
4fy0Yp7x4tS4NZPnXpZww7pdpO90cY2jlF9hsK/5dMMfwr5sRfBU20SCT4ng
3vig4ZUrUl29r8gjiiOV59LDjkj5sW43ZiVZDClNpc9P4cD8Iy/M+nB1KEwt
KnLcezde0Iv7Tz0XiMsTdjbrU/pTfNBsx4kRztJ1Yd2mtK5U7bgojce6vWaY
Ubf6V2l8iXaewkr/zLWHfCScGW9jnrPBIiuF5SmB563Txu2xdkOTWBzr9lD9
+bftBkvr+EKLs3B6bUjXCXYpJL9G+LbAaKHtimSWp5d2HcXRXX543+8n/S7W
rV7kDxO3/8qjfT58FP7Ucbqx6pFU51i3cYWDSvppElmeDto6FKsvdZg3TC+V
4JMttvN75Fo3Uso/QVvngujdfpBhtUR6HwmHziyf9ePf5wnmsYLnrd3u12Pi
h9D5a8SeivpNDuyR8gdr71Oh88gqL9tHSM8Z5qs8Nr61+xlpHefC83bwiemP
k/8rP9btzIOat1PXSPhrnxs/hCyjJkW2NeIJPiWC1YnPpx9Vl/Lf1D7HxAa3
Pdat8pXWF+u2oGtMv+AACQft+6hUeHVh0uh2L+NoHQqv11hMsPwWJ0zT7gtE
bd/1U+yYUidrb3Vp3bFuK2X+enU/LIGNx7pd7t+uQZ+W0vjL8Lxt2rTuJeNU
CX+s20fLolv+jolnef6B/rblkclXZaHJLI51u96gp2q5m5S/UsV1JQrzEkpv
eXnGkfwaYbrBzUKHrtJ15UF/G7V8lnfKaCk/1q3Fs9kHNM5S/k/wvD2Z4/1u
SA0pP9tfC6vtujWJZXnKKt5TOeKGSZ8/rTdKJvhki82r555M3SSt12ZtXyEY
qUP72G6PofeR0Oa4JrPv9RiWJ0jbt4gbTtWttnJRIpn/v/1ta+PPNQ9IOE/X
9kXCh4ydPRbNkvJj3V79NMFJ9kzKX78iHi2a1u/UuDxdwg3rtpfL3MY+CbEs
T7H2OSMc2d58l96zGIJPifDx2YCj2cclfOTavlHMuXrt6uLMaBbHuu00wG91
Qoaa5TkDz9tcq4vqAymxtA4F1w2X9t6oFC/M0u7XRJsOAdN3lJWIiz4ceWR1
CP327/zHEh8+/i77u0vY/2IerGf3ceeHKZdKeahvH/N4aft2YYOhWb+DLVUs
jnX+/EPoKO+LSpYf9+mn/57ZNNFUyt8Y6rwc/PA4HutfCKzfrcrrJDa+IRmP
vzse+uchrt3iOlePIvPRCOrIRzKxRxTLX8slYmZopwJx1+leUwzXJbL89cnf
I+B4vF8qra/nZGMgjcd4NfD54+8u1O7LhKfDDOr1vqZgcbyPXmZO+PtzjzSf
OOANBi1qMtQzNo7lz4H8VSG/7nplizdPqf9csY0j65UtVoW/R8Df/au9TwUT
1e/Jt7KV9DkgmI3q6rW+u4rlh32uOHf/zmvWQ6NZ/qeQvzLk18VHI4bu/fXx
9HU1wUcjroC/m2C/q30uCfcnRI0cEiPVD96n8yfYLfDOVLP8gdp9vRi0aEu4
VTUFy58F+ZdCfhyP92+z/v4ZV89FsvEYbwB/D4K/OwD6f9UejzpTxWiyXiXC
3pyCDu13Sfi7aXkMMXTVvtu+p4JZ/o+Q3wDy43i837+87Wz2rO47Nl5P598L
S/xdbV/6S1BNLTw4LTye3r/C+52hi/7MlngbH+DHisqvm05oL93XeL9vBD4H
f5f+nQ7mwfvdd71P27rGUv1P1vJIgsuJUb7VNwaQ+ftaav/vbonjmY5peadb
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
3Ab4q5D5oe9P2NBzvT0sfcm53vZQDw99fId1sZfmMwmeGxf8cm/NC5bOHwc9
WljaJ+mHS2PpelHXvl0UGOtYIp33bQ59ePiq3FlPpXOUAiyBt28aV/u7Q4IU
Hw48w4CyxdGNopKFgYA/ztPoZLNJI+ZI59Qg/t/9Npz1S5HO3Ub8i1b/PJuS
HSv81fULse8r4nhcl+v1YxvPOBIrtGt4WHYmuyrD4dVc27pd3aXxuF73i2vW
8zsqnaeD6+VzwzuvTVasYGD4d8rWfVUZbk/q5AyZvSqJjcd1FL/GpMx9Is0f
13HaqTcJadnxwveaa9PntqnKcM5K3fhtdc8Ucm6Oh6UNOU8ccTupWK4waCSd
643XNazBcjfZ/BShJswT12v6Zo8TJw9J43H+Ns8PdVjcRzpPHOdjcM/z9fv1
qUJQmf2PLjOrsPXtl3NlWpdV0jwx/4F11aJatUoV5DcT7215Uy7i9YZOGPeo
3itpPObp0WJx7bBhKcIAqAeskw+zLIecuCbNE+NhR/9Y9K+fLGzJ9ziTbCbh
4D98u/n5V9J53Fg/Y202rOk9RDqXHOtky7tOuStdpDjWydmTo7xX9pfOK8d6
uDnffY1fX+lcb6yHR3kn9FdvSxJGZl5xu7e8EsPzaqOZys1dpPPEsR5GFzY/
6vDlv+YJ+PwMm1P3ytRUoWd6vT4uNSsx/B8bX77u8Zeee+5hSc89ZziY7jXo
byadb471EGOVV+g+ViMYJe97s/auHluv1Ymm86f8TGHjcf7ZD7yXBcRJ+XE+
8oET3m/R4He99Ng64t8N4XjMH/LWOL7TwRRh5IRm49Qupex6rTr6LhzQW5on
5nGqfH5D999JLI7rbjrhTsnrtYnCimNuyrrm0vWWa44t2DdROn8c1z1iZ0z5
SqV0fjqu+9bCDUsbfZTODcd1/1Z7+Owl45IEy72umUnL/zLcapfuSjtlLeXH
emjUt9WvpinJLI710OBUXbOe01IFgy1bft29+4fhWf/piPOzJ0jnrWM9FCvf
+U04JsURH+e0d777J2uExFXz667V/Gb4fx1jp7ASU8g5RB6W9Hx2xGfw6hNN
W7SR4nhdc6pc6y83SxMegn/MnHzfD8fj/P+pfHhXg08pQlHF86qIzf9vRJcu
TYdK88d5Huy9r1bABgkfzN9ZnB7tq58Ez5NCdr0ZrpfmLgmRzovHeph1d2uO
TUyCsBjWHeshavf45BH20rnwGPf3fnNm/Jd4IXtgjpOjnoTDI32nC0P90th5
PVgn8z5feZ3eWTr/Heukh3vP9MW7koT4Cvy/sLhl540zaw1IZuOxfoJWTtw2
NSlZ8DJTufS2KGE4C0eWmkw2ls55x/qx/LVsikWpdM471k/IupN9Wz+SxiPO
jxKX3JqmShWuV9wXX6U6XKSZaBgj5UE8x3Tfk35iHj1f3sPSiJwvj/h4LhCD
WhTg3+kUsPmMh+/s4Xi8ruFdtjV9t1DCDeskaHOS0E0vQUgF3HD+AcVvFcF6
Em5YJ7GTO41eUSSdL4918miR48+BdnHCjhlm/9SY9JldVw2vKgtV+6Xz7rFO
LhZ/q9fsv86vx3poNadL4CNjdn4uwwHPvcVzhbAeOlstULaPls6Rx3VPeK5v
ZncLv/uXyeL4vTscj/Vw/mnIq141UwTziuf5N4ZbzuUXfzM3SOfR4zq2atih
1tnUZKF7xfj3LE/W5TdWC9ZJ88F1aXnlzDPRUPpdxFlx1KDo5dVE4VzF9X5g
+X8q7VLyL0h5EM8bbpGv1t6NJ+dAeViWwvnLGMc6KVsw2v/Fv/udvjBPnM/e
My08/g5MYOPxeu+teLyzW46KxbFO/upd9Ks3QSXcr6jnNDb/VQNHVXJ7Lp2f
hXUyqOe2dltmSHmwTmrsbVplRYpKyKqot2R2XZYfwhre6yudJ4V10nFqn54v
/kjnSWGdLG6/dk/vVrGCb8X9m82u9/yR0MOPDNXsXCSsk6ZTigeN2ZPM4lgP
FuEnv+81l+K4jhv9Zjm+MU0SZkD9sPsIvmeC43G9Rpi1b+g3NYHF2f24wtfi
5799O8YRt3NjXEu8XP9rnoDDpYYugVbf5OT8KQ9LWzjHHON4vflGG/RfTJTO
vcJ5pl4/VHZnpBTHdXT+0je48xPp/Cm2X4hZXvnzFemcKVyvzfdMYr55qFgc
18UqYYTYz0K6LlyXc3uTey6onyDMBZ0d53lc5/tdenq4Ljfb3zXbfEw6dx7X
5Z+Ht781TZfOK8J1cXYo+9NlehyLI/67Xx8f5Vg1msUR/0UZWZWqf5ezOOJf
c4tNfnP3d9J8AP/+G34MutHlFTmXysPy4v3xrVqkX7PECF7XcDIe8a9H8iP+
y8l8EP+9ZP6I/x5yvYi/BcEH8Uc8A4b9Z10eCDjPagdHvy/OlM6HQvxxvTDO
3puwvhhH/DdBPaRV5PcW8Hqv/X1Y3WlxOBvP+nCoK4zjuuyAOnxS8TxRCIjP
9/1X9Hzj1Gw8rlc81DObP6zXF6j/ahXxMAHxHCn/8KH7v+8R3XOvPCxHw32E
ccTnKtx3GMfrwvt0O8wT12VH2wlbZrZNZONx/uPgfsc4zgefDzsrnvNqgT3f
UvyjUj8nsfGYH58/D7XPN3a9R+H5huMxz0B4jg0Bn8Bw8r0jHI9xfB6GaZ/D
DIe+8BzG86GwThzgeYtxrBN8PmMc66QqPOcPad8XDE8HeF/geKyTgfC++Au6
G+ZJgu8U4Xisn1/wPuqofa8x/HfCew3HY/3cgfcauy7A8xe8Hw9r379svYrh
/at7npeHZQm8ZzGOuF2B9zLG8Xrl8H7vCfPE9c2GPgHH4/yxT+ii7UPY/DXQ
h+B4nCf2IXcAZ6yH4oLhB2rVSWbj8Xexz5nxuZPJW8U3hsP4KYea+NeV5oN5
4qGPwjjWD/ZdK7T9HsOhzFPb7+G5V1g/pK9j9XMB+kCM47o/hH4S41gn0dB/
YhzrIRD62F4V+8E8hqfrsSUXazqlsPGI5zDoh9k8AQfsq89o+3aGc0Po23XP
HZP6UowjDiOhn3c29blZtr6YzXOg2nVbhEEyG4914gb7hVKof1wv/P4Pjsfr
CoZ9B8ZxnrhPwTjmwf1Ounafxa7XDfZZOJ7xPLCfwjiu+wLYf/lr94PselNh
P4jncOG6+8H+DuO47rhPHKDdv7P4+bzyfVmnkth4rIeusA/N1e5nGW6/YT+L
47FODsF+FuOI/wDYF7es4BWLGJ5BG2eXWSql+WOdzIZ9d4x2X8/y58G+nl0v
4In7d91z06T9PsYRt93AG1TV8g9snobAP+B4vN4S4B8wjvNHHqMv4InzNwA+
BMezegY+BONYJwXAqzho9+/susqAt8HxWCfIz2Ac60QGfM4QLY/ErtcaeCQ8
RwzrpD3wRRjHekB+CeNYD6HAU62reP78YvgEuM6v375aGhuP6xUJPFgjLZ82
CPMgn4bjEf8s4NMwjnhGAy/XTcv7DcL8yPux6wLcfIHf0z3fzcPSE/hAjCM+
yCvaaPnJQTifG8BP4ni83rHAT2Ic6+Ex8JyzKp7zlQbh/Ds6jbx2dJ40T6wH
5EsxjvWA/CrG2boDH4txXHfC37Lr9YDrxXPNcN3DgR/GOK57T+CZRS2PzeL9
gcfG8biOyGP/Bj0O8cmE78bgeFyvOsCT19Ly7SyPPfDtOB7xHwl8O8YZPwy8
fb5WF2D5c0AXYNcL9YD8v+45dJJegHGsh+mgO9SAeeJ8XoB+gePxegNBv8A4
1oMf6CCttXoKm78v6Ck4HuvBDfQUjGM93ARdBvh/dl0tQQ/C8VgnP0D3idTq
C6xO8g53dti8RPpdjBeBfnQXdEDE4Qt87wXPa8P6QX0K41gnRM9i6xumq3+x
9bqlq5cxnJfo6msMt7O6ehzD4YGufsfW10dX72PXFayrD7J1JHoiW0eiP7L1
+kdXr2TrZamrb7J1maerhzL864N+SvVWh1n/VCs5Gs3prTf/tjX2mBXN6a2d
Ct63S9ir5vTWfbZTFxbaqzi99Vpx5UvTmio4vbVd0bABSTXDOL218LjFoy6f
Azm9tf3NAqfqCwM4vZWcP8h0qK/bGpw9VymQ01unTX06KNcmiNNbjeK/qmuc
fcfprV/Pez48UjmE01vHNnCv3eBoKKe3usp/rotqEc7prYODbxqdvRTB6a3h
l0/fOlISyOmttgHPX5z5GMPprbeHzFk4rFDN6a128B0Yqrdmd0koGb5Hyemt
WS+mV/5jGMzprf5Hl457cyyS01sbzWkevXdNOKe3Ntk1tninaSint84dPee9
dXEop7eO+fCnMCo6lNNbmz+7cU09OZzTWxvBOZ5Ub1XOXR721iKc01tzKzce
9bl3BKe3luyetzRGGc7prQ2MzbLtx8k4vbWLXF5aui+S01vTHk/vNvm+nNdb
s+0vV5PLOb3VbeapAp/hkZze+ts9sPbIJlGc3jpEVP/YNELG6a2yjjeHZnVQ
cnprx74B7U+Fh3N6a8PfhpNeqqI5vdVke+6iWCM1p7c6TwxuJFxRcnrrYI+w
ZnpGUZze2uy77RoxXM7prUv2dl9453Qkp7cODel4Or65nNNbK5tljz0SG8np
rdaNhWU3aik4vVUO5+dSvTU89MSae53lnN5ar/WobQteyTm91cul6THDY1Gc
3rq3pd/qDVsUnN5aqffan3XWRHF6K/obqd6aaJUc0G60ktNb48fbWS0vlnN6
a/okZVnT70pOb63d92X/lGcqTm+1D3i2zliQc3pr68OTU29q1JzeqlfPrvfO
nypOb+3yK7FRUUcVp7demWYTOMNbzumtr79dXpy9QcnprRdOf/IwCoji9NY+
41WvCocqOL01xqee3WSZgtNbF49cK7w3UHB668H5XQ9ezlBweiueW0311neV
TZbvHiXn9NYy3zXjptvKOb31H/A/U711Zi2LB3fOyjm9Vd/zyqOCOnJOb3Vp
0SQ21UzB6a1tjiyyGzc0itNbv//0v2L3TMbprbVPLGm4a5uS01vThrTrsidc
xemto2379Yr1UnF6a++aSvPjHyM5vXWseK5HmqmK01uXZd+ZMMJNyemtaZ/n
nC+1knN6672wNw/L6yk5vfXv7gmiakYkp7dq7PaqmqcoOL31RY2Cc5PPyTm9
NTvomH3f+ZGc3toiftutGINITm+dU7Zy0ZxRMk5vfQnnyFO99cEgzeuXp8I5
vXUWfA+E6q0b+tUyuF09nNNb76Y+TKpaGMbprUM65Fbtrw7l9NY1f5c+vKMM
5/TWhF4H3gfVjuT0Vv29+1YPCQnm9Fb9Q8V/MvyjOL11eez2lvZ91Jze6g44
UL11zoIqDbcbyDm9dbq7l1GNLzJOb02D73JQvTU5+E3j2acjOL21ai9/Rw/L
UE5vbVZa9cfzVuGc3tqv+T852UdDOL017dboRsvuhXJ6a+XKio36Qgint0au
1lt+MDOY01s7TrRzPP/9Hae33p37dIfgE8TpreZbru0ctj2Q01sPO2yfeiI/
kNNb9T1q6x8IeMvpreN+GTmcyw3k9FYP+7z7tcJFTm9dc+Tk4htXQzi9Vd9k
2bnmfSM5vXVN7/HNHNv5cnrrj8VN/y7OV3J6q5/e+FPqIDWnt9o1zve+MPUt
p7cu233AYY5BOKe3BqyyNcjPDOH0VrcWmlcDj7/j9NZ18HeXVG/dZ/DjukHr
QE5vnb+xjcHFfSKnt47Md/c/ONKP01uvLC84Zpjgxemt35wX33jR9BWnt74T
TvZz3PKC01unVtu43NTBm9NbW+wKsn5kHcjpre4vPtt2+RXC6a0WjrcqTc0K
5/TW9nMcrgTciuT01q4vVjVuYB3F6a2zdb4zIOmtTrlVCmISwjm91a1owLOR
iSGc3prxaFPKrmNBnN46Ps430vO3yOmtNv75ZZeXevN66yT5l9Tt7pzeumDd
3vrTb9zg9FbXzZtHvBx0iNNb15LxiL8hyY/4jyTzQfwnkfkj/lnkehH/RwQf
xH8z4En11ksNrvoMy7rL6a2msF5UbzWB9aV6ax+oB6q3tlj9wv1PVw9Ob30E
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
H2HjApc=
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
8116p6+P4+rc3Jv7rMkmu8S1VXw1PXjv1N/Dyj8xp5XILyg5X7devjd1vm40
soFl3x0aa2zq/OGH8BGpc4z6rgGpcyNaw77w0ygbZBvgGPpYlLgvyZWDHFR2
fmaQZPAzy44D9C26oyeiX5n6vfCXdC+nzqcs1frDy+hthI+Ej0D+duIc0ICS
42T1OzTmVU5OnUvRN/ZJnRNTfqlR6tzaB/AhsX/llI5Jnd9SzrN5yXkg5VR7
lzyu8p+9FQPEHJD6V75L39ge3g3ZbI0LHp86H9ajbK7cVPfUuSZ9S0cdsty6
3dFpljqn1Dn1+065oHbwk6ifn/jt1za1XG/2frGfP3KAqfNkncuOVbQm3VLn
zY5H3kly8LXEvxW3KOapDe7KHMtVjVzxXXP0D41rohjw14Lva/k+5QMb6fvQ
Oark/dLveqnfoc1j3Ki2jVO/W7Qvyr81iPnAlnF/lf/rWHYMWQt+XNl7oLbV
Yq5YtjkMeT1wWuL4r36MqerKbrDt5vItBceEWqtjU8eT0imD05WTof6J3LGB
/M/juXOPixPnJmdmvncGB/tQ+VL5ZZ19+ZK70d2jeyNxLk9OUjnn7egH5jFB
2xljSOExZed5lJs9DNm+zHnCY8vOWykOVB5me+YYsFGMG+9DviM4ntT31kyd
m5VdNYzz3K3YI/eaK25tR9tKRed5dLfVLDkXpzXVuMqfK4/+S/ThO8DtlBaJ
10VzUO56f3yj6a39ivxZ2bkwvXkPKvrtXwOsTumcOJ5rH2PIK9DfRV8tE89v
eeb3zZbcPl/370h0HguO8fTm0ptIb5yXYpzWG35PcFwoe9O7Xv3rPX5n8Jt6
OHwq/O3M79TN8j2Z37Jf5N5r+X/dFZcrnoPfAE5FXg8+MPjNOw79jYpFi45b
9Ht25jU5NziHr3fE7uB7X/dpb7ATeh3ki8D5wWulu35Y8P2inMYdwXHiotzz
vAS+Kbdc3/54cPypPt5Arj/qXJhYb2Lw+1FxTp+i465+RceZwndyv7MUE96L
bGaMMxXLKees9T8PfnvwuilHMSdzjuLi4NyC4tibguP5evQ5J/daKX6fC68T
91R1el9qDY8AW8Y4VjkTxSolcFLut0YT5GOC3wl6LygX05zSQ7ZXdB5GuAD9
hcynL/L7g2Nsxczj4x7pHD+GzvzM74Krg984ur9mBMuVR5mfOx7V+igX8Urm
t4/ena3jPB+CPxDM9fbXuHp3vhVjbOUZng2OQ5RbWBrze/9Avjy4T+VqpsY3
i2x/Zu73iGzgSmSTgt/4L0Su2H91jM1kD0OD4/wRiglz/81He609H1m0zatO
OUD9negH+Z/MOYrPgvMw11L/GW1XZM4lbM1tq8qLT8v9tzzl0N4Jzh8oj9S4
6Py18tjKDf3xpoNPRkeBqPZL+6cYWDHqOPDKonOkVxc9lvDT3G8N5TzysvMy
Wrdr41tGuYvnwSH8HpD4baaYuY7sNjjvrb+XVYl/U9Pfy74L/vub5qN8iXyF
8h8f57ZV5Ycfjef6er11cq+J/nZXlX425M4Z6W9n1xSdd5XefwEBWrMr
            "]], 
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1: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
9fVEG/r/u5Q2kQ==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtmWXgVcUWxe/hnv+JC0ioIIiUICBiIYrx7E7slg6RULpTGmklRAFREREF
UUEMxO7uDgzKZ1EGvt96az7MXevssyfPzJ69963XrudFPcoVCoVu/BTBOfyU
RYXC7eDxcaFwCvw4sCflKvjJYEvKyfAjwROzQuEM+G9JoVC/VCj8hawvslMp
J8KfzwuFA8AT0GkAHoe8MbgG+dHghcj/Ax5G3ZplhcKktFA4huejkbcA9808
lpvQnwXGyGeDw+jvVrAH8iboHRW53bnI/mEe88An0dkH+XKwZuZ6PdHvht7Z
yLuCPyKrB/8BbMgYyjGG/uhuo87pvH8Z/V8Tz/F45GdRzofvTMxbofMGOheB
pyE/H7yYcin8UvAW5rMcPgq8nOfr4NeA52XG96h7IXgt8svAC5C3Az9E3oLx
1Gc8w5FdSOmC/DPkO+j7XPTPQNYo9niagodTToIfCh6kbwM/EOxEOQveIbSv
Nf+LNtryfDm8I9iZcgX8BrA9pU3k/uaF9bwDnEH5q+B1H0z96WA3xtOBNgej
f5S+HWUV9f5Fvo73/6L/NPgwsonoPAquoIyMrHcE+svAv9B/FhyOfH3sNleC
u5F/B96G/AWwG/IZWkPqjWMMC2i7Nzpf8G4M8s/BjyiT4R+CC3m/s2C9dtRd
juxv9K+l/pfwvVjj7pnr7QnvAf8avjf88tRtVIZ/pm9Jm5+C91PGR27rIcpN
8AfARyij4KvB2rRzH30OoK9ePLdD3he8B1nlyO+eCm0+Da7nuRJ8MTgm8Xr3
ou63YB3kX4HTKEX4zKLPxQ7mNQTdq2Lvzys0Nt7tQr4EnMS7e8H+tHMic3mc
9+WYy1pwaOTn/6Qeb4T8ZHhf7R/w9NTfIUG+BBwbeV260O9zYIq8M3wdvAz+
DNgv8vOlYf9fqfPLu61aI3R/YjxH6huBb+Y+J2dnXvNZyFvT5xpko+FPgD9Q
7oRv1DmlzIG3C2PTul0CdqIsgQ9MrXMvvD/8Rtr8nucsjPNmnRfk74dv9I7O
HmUS/F3ZodTyU8DXQl9vxm5/M1iTdrrSzhSda2TXZ96Peclc++Hs1GuosReR
H5t6nTvx/hedJfh/ZUuRL4y8JhrnHTp3yOpSZvD+59xnSWeqPlip5HHfgG55
+Kvwc5E3oHRAZy+wEaUjfG/wWvTmoPMr7UwN+1PtSt4dXi/13DTH9qn3/0z4
danPxXzZxtQ2S7ZL9rAn5VvqVC+Zz0belvf94IvhfeBXUW6X3Uh9Tj9Gvwr6
n8Refz3rTGkdOgd9naeq6Fyd+lxrjvrGGpvmeD7ldXQqoPNT0fb8+6Lttez2
E+ylZyiHwt8DC+geAv+3aPkmcC7rcAjtNkH+CrKfkdWHbwa3UmrCt4C/Uxro
LgMPRf8P8A7q1tC9hfxPnquFO6Iv43qVtrYjuxOd2jpL6NQENyJrHNqsJlus
76I7jjZ3IluA/jawVuQ+nqWdhvA3wB1Fc7X7duJ5LEb/XXgj2UDwJNo6NvL9
2oI2c/A+dD5KfM9u1DlD3lJnFl4Ma6K1+Yzn8uBS9Eux10T1K+j+iPyuAXUr
whckbjNFtgT9V8Cpkb9HWezxlJMNlR2H7wkeRd0q4APoVwWbRn5uzLplrNsQ
1q0yz82RVwK/SVxvOfob4LXgD8NbZl6zB3Ovqda2Ongq5Rz4PuDFqc/uHuFM
6Ay+BE5hzf4s+H4q0Oc9kfdum9Q2YR/tpbD/ZTOuR34ffHBqrjNaC50NwZ5I
57fY+/NXsFdm3K/k/f8PfH94B+pOkx0GtyCbG9l2jNacGcdB6FQB74/8XImy
CL4H2Id2dqFbD52m8I9k73OfK50v+UVdw9mUfyWbqr42gR+iuzf8A807ti1V
W0tYz9eQTaSdl8PZ0fOoou+O0eC9Wn/5CbQ5Mdwdt4CTKeWQTwWrZ75Dh6Nb
DT4WWWfa3C/z/dIptz+wBZ0eQec3eB/4x0XvJc3ndUoN+FvgLYnb7wf+Edtu
/A72zrwmvZjrztjz3QEOSDyurvTVPbVubdaqMfqvIJ+A/NVgE95QP6zpA9on
4G50V8Ebw2tkvj+7oz8w89o3ld+KrBk6X4Cf6tzCPwFXUyrA14K3J8aRuc+G
5vUouJDyHPKxyJeDVZGv0LkOd/cLYKPMOA6dXeB+kW3BdOo+KH8K+UNgCfnD
4JzEftdY+dXUfUQ+LzrLwDxynS8pteHPgKsSj3c6OiuL/qaqsybsjcfBuxPX
nQ3OStzPUPTvgD+pfZH77MtfGw1/CkwjvxvOmldgrQ5krcqX+f4qlfne0v0l
e7gvz4/I9rLeN1K6wnuDg2mzGu8Ooe7e4DLdWeCE1N/nUOTVy7zPpTcI/RXw
8anbUptTUo9hNXw6eGnmtr9inGU83wT/Ej5Z5xmdHrJRZfYNYrWJzgLJwQGZ
x94k2CTpSHdAat0DkK9mTb5m3rfS5jXo34BO7dT7ZxvfZaBsbWZf+yl0BsW+
i4eClVLjBuTt0etHO63hA4o+F/3ByzL7/JnGg2432R9wkO4hdAbrO/PuEq0n
bQwM7aufXjz/F50J4FKdDdkH3S/o3w3uoK979A0iP0+k9I/st6nf/rK76NwV
fLbF8rNi+34LYo/5O9rvkHju05BtRX+RfBd0FoLlU8cyV/B+aNFrMkz7LnVM
US61fZYN7Jjav3qbehVZ2zeC7dLzW7HjAvkjbwZ+nvaF7l+tVWIuO3QDYziL
dy+jVyrZN1AccRLYWrYI+U50ngdvjWyXR8mHg4+RL5J5XduiM57ntsjHgQOR
dYlc/0XKOPh94FhKZ/gEsFrqNn6i7j6p622EX5k5VqqYmo9G/iPyBxPbjfmJ
10XrMxy8Dp356PyOzlzqrIsc3+0l/xid69Gvxx58CHldcCjyJ3Vm0R2WWXaE
zhF8I/pd0V8U4qy7dIYz27mWQUc2vqNicGQraachOCJzv/NSx8XbqTuIdm6k
bIWPShyDaI/dlNj+T9DYc8fd0ukJ1s0cj0yB35/Yrk/OHfPWop/DS9Z5APkg
5OPAXws+D53R/x5elfd7Un6Ed5Fdin3Wpsf2b28Df6HubN0NGrO+bWzfWD5u
LXSmgFvUr75l5P06ouh5jSzaN1a933L72O3Rqaq9iWxI5O+h9ZduB3S+iu3n
Kz7snXjuXZDfLX8i8v2nMet7tkc+U2cy8li1xzSvTtSrDN8A75j4/toM7w5O
CnZgfNE6sgdtaOfqzGe2cWpfQnFPjZL3nmLzYmrfYF/Z9mDD/6adm7VnMudG
pia2hxfDd4e7Q/mcafBvc9uRCvK1E8v35/0q+i8PfyzcO8Lhuf1V+W+vJ/ZF
5YP9kNjvlf/2MXh0Zp9tIfr/5I6H22f2nw+Uv4HO4Zl950W5+cE678h3I2sB
j6gTlxwPK1aSryvZ3bnnpbt0SO67UvmH0WG/aczzwCaZ77t7Atf9Pyn33lDc
XQV8B9n+8HfBz8L9+zm4IrHfNBX9t0Ms8B64Pnce6mTaexV+dux8i+J6+S3y
X5aiVyXy/q6VOXbvp7OW2R/omztHkaAzM7FOBJ+c+A7WXVwnsx+le/bWxD7G
bu2NxGPTmNeBPwbf/v3g21dkPPfnjmEUyyjO2RLijpc1p8T+/PM6x7nPlWLJ
l4L8w8T6mu/KxPHRL/JxlO8qeo/p+Y/cd0NT6g7MnV/QmGXnRyL/IfddWV3r
IF+Sc3+Xzle439fCZ4FjlX/QOqT2B2SLJsqmxY5b1ZZ05BccXLJPlelMgV8k
zu8dQb0XE8/x4MwxoOKadxLfCyPgJ6SOHY6Bf6c2dC9GjmEUK6mdrxLHAopl
Lkudg1KM3ATcI/a+1foqVlIObZPuw9CX+myWOUZT3KYc4wZks1mH7eFOPURx
beK93Tyzb6a4cr1sHjrDY9+bB2X2N2cheytx+2sTy+U3rkn8vRSPzs8dR6xB
PiP1/aJ9OiW3ny+/cS74CM91aP8Y2jg2c851NbJVIUaVXO/PQ79e7POrHO/W
xLlZ5TB/SRyXKce7JXEuV/nDP+Cnw8+g3orc9dVOQ8VClFPh9WPbMdnkz9G5
JPM9W1k2CX41PAlcPtoX4Wxdg/yc2GNWe4/lzhepvUdz93uR7nRkF2XO3X6a
OyaUXfpe9ilzHvRx5AfH/tbKDctPOwx8EvlJmfPWz8CbgRdEfqc89hHg0/qG
smVFfzvloJWL1jvVPQpcF/pVDLoS3hxsFfmd5itf9MXc41H+dW3uMSu3+iz8
lMw59ecCV/77BfhpmfO625nL74nXXPbniTAf5Z+loxz8S8i+TJzv3QzOyG3X
FI+0ypzT/RjZuZnzcO/mzjlrnH+ic7V8QXhr8Hzk14Hv5+aSfZA7ltfcv03c
jvKL7yBvA54Zuc45mddwV+LxKKZfljvekW28K/F5kS99c4g1FI8sBRtmjl3G
IH8RrBs5lpNcOdJFiW2pYrFl8OeLtjMvhVhGOD73fJXb/ij3eJRHfxt+ptYT
/hp8Xu68j+yh/GrlYr/WHEv2jUZmjim0D9PU+Xbtt78T+/Naq0j+Ump/8BPq
3hbyszqzyvvr7Kg/ne8e8BHg5Zn9+u/ku8a+l8+LPTbh68ivBVtHzvu/lfu/
BOVFzwnnolVoR/52if4LIS7QPd4n+Evy6RU3ye42Y07fMK4DItsmxciKSRcn
/n9GcfHfsruZ8/GFknPjg5AfSZu35L4vlRMYktmXa4DO9th5wm2x4zLlRvqh
H5WZ/xvalE/VMnUsL906JeeZ+8huy3YhmxA5v68ctXIOIxL78fLn5T9MC7Ge
8kX6T0G+30HgjanzAXVLzpnorukd5MqrDAMrMp6lkePVtpn/Uzg+xH0PwsfA
22T2FVukjpuGwY9LneNVfLErt47igD/hc3LnH3Xv9Mntcyv+Ui7o/7nc1P8Z
yQb+DF6f289TfkP5Co1naOr/uJSL+CZ2Ll3/WZyZOvel+0L3RrPUeWPlj8UV
b21TTJc7lycfYGawUcoZ3ps7H6f7sUbqeEd3kGLehP4alRzbPir/ECyWOa+r
d/JvN+n/P/n/uf8/k/+veEqxYfPU+1j7WbFN/RCbKEZpGGKKBmWOa6Szf+r/
GpRXbxVilqfgc1LnW1R3nPyy3HGj/H99I/0HtAnZVZlj2c3wEbnzF/JRJVc+
Yb/Ue/IJ+Uup46Pa9N+85LN5JfIYrFPmb107xDsa45HKM6T2N+TPKI5TPHsA
eDtlfWQ7oBhKfD6y/wGiEJUe
            "]], 
           Polygon[CompressedData["
1:eJxFmnfcT3Ubx++f3/c+59w3sndkRkVGQrun0H6005I9ysree2ZERmSUZO8k
M22JQipRSUkZkYRIyvP+dF2v1/PH4X7/ru/Z175OmaYd7m+fIyMjoxX/BP4/
GWVk3J7KyGgMfJWVkZGOMzIawq3g3XAJuBU8Gz4LPw6Ph3+FS2ZnZFwD94Vn
wCeRXwV3g9+BY+RXwl3gafDvyAvCzeGe8H64ENwC7gcfgC+CG8ND4MNwDbgr
vAHO5HiXwG3hHvAPyO+Hx8BvwQH5Mn67kb9vYlvO379xf/WQ3w9vh/+C74Ov
gd+GW7GNSHNtPIvCCcdny0K+iN96IhvA+j+RPQe3hvvDZ+FX4JZwbr/eZhxv
FzwS+XHkM5F3gVPIH0b+OPKdcD+2N5AV4Le5rG0K94FPsU9PuB08ET4NF+Na
YvZ/grV3sv8WZCdYUx9+EP4Mfobtedbn4LexyBLWP8nf9yH/FNnr/FYC/oI1
Y+EM5A/BDyDfBt8NT4G3wjl5fo/6+/0Mzg0/zZqx7PsLu/bgWJcndu3b+G0M
slqs7wWPZ/0xuAH8HLwdvoj92/LbeNaeY//B7F8K+TPIuyDfh6wy3Bl+Ef4N
vh7uB2+EI/Y/yj63wHXg95G3QD4VPgpfjPwM8nvgS+A3kAfkj8Lt4PfgW+FB
8BvwBXgt6y+B93NNk+H98DXwtcjfzTJ97gO/Cefg+IeR3wRfCq9D/gl8BZwf
Xgrvhq+C88JL4D/gu+ES8Aq4KP8XYbuVrS7bPf58Xufvf5DvZX0tuBy8Bn7Q
9fkbuCDnvw0eAu+BC8B/sr4BXAVey/rbkQ+F98KFkF8OPwsvg/9GfincAZ4F
n4F/ZP9r4evgD+Cz8H/hivCb8JtwSZ2f5/MCfC/7j4I/R56X4z/D+38B/hLO
A59j/b3wVfAG2R7y2+Cq8Hp4q3QGvgheDFdze54Jn4JPIb8Dbgl/7fYu//Eq
/If7gyZwG/gb+Dzr70+ZfX8I34V8JLwUPg/XhQfDa+AU1/cp6yvAZ7ifCci3
wVfC++CJWabv4+BjrC/B+s38Vp+/b2P7mL/ns74g8p2sfx5+Cy7r+j8qy/yR
9Hki64/DOeGn4Cfhz+EPWV8R/on1L8JN2Hrz90nsoTuyBWyFkO/it/HILsAP
wg3Y/xP5CrffE8hnwE9x/InwOeTluN6uPO/p8Fm4LFzM/fUw+BDrZ7F/XngO
+3eDGyGfAP+BvIz0KzF9ref+JQfyR+Am8JfwOvavCv/o9vJ7ZO/3MeRf6F5Y
Px/OyuQ9c7xJyGP5Y9Z3Rb7J7z+T9XPhn+Eb4FLwSsULzn81/A/rX4W3+/s5
D8+G34XLwyfhma6fF8On4Zfhz/z60hxvDpzN9TSCH4F3wJuRV4IjeD78OVwN
DvA8+Dn4Au9ilvvrL+HqyBPkCxQfON5L8G9wKe6vA/wyHHO/l8GrWJ8b3u32
ktf1dQTrv1VsQf6Px4NOiifIFyEvxP7V2H8Q8mPIJyPviHwU8tnIiyCvjrwz
/CpcAK4KH2T9jXBpjr+a9bckZj/Xuf+KWP+4v8+PdH/wCvkv9q/N/n3hBXBu
uDJcwf2D4u1B1n/P8eu4/W6En0X+CpyT9VewfjT8uvwFXAc+wvqb4cqsf4v1
Q5EvlT9GXjPb8ofW8FDubw/ykvDTcEfW74WXsX9R+BDyKfBxuC58O/KtzvXc
P66CP4BrwMdZ/5LiMff/tuSc72rOV47jt4f7s/4nxUbWh5TFVMXWfXBt+Er3
T7LnMvBB5FPhrpHZZi+4MbwHrom8IOtfgXty/HnSD85XifNtRF5O8dLj4S/w
f+AarH/Hj6fcYhTyNlmWUyzyeDgQWS94MZyPfWbDveGlactBpsJ94BVpu4cy
3GsP+aS02fSrkemMdOc8xxsGr2ArjmwHv41Gdgy+NWU50TJ/3sXgT5A/B+/y
55kL+SJ4vT+PLchHwh3YXvTzj4ss51HuIxsvyfX05bcznHs6v3VG1p5tEn//
xW9DkLWAB6dtjdY2hwfCf8B94GayCfggXCCx+FyaY2/it+Fun7Kf9fBg+GP4
MuTZXO/CLHtHelcHWJOX/Wsm9n4j9zdfePwO7h96RXZunVPnnqycCfk8uDs8
AY7gtfAguDvHWyL/wvuukG3vTO9OOZFyI72jbMXbtL27+e7P18AD4CsT8z+H
Xb/zwz9lWM6n3G+ux5dVacsNf3L/KP83S+dH3+bCKc5/KeefiTxXyvK5ccjf
dv2TPUyHX4JzwivhvvL3bEPSlrMWSSwflH4c47dpiids3fj7BPIukfmoGfDf
Gea7Bnr+u9DzYemcdHVB2nTxWbZp/J3Jby9Edn3yh3pfA5GNhlMpy7GVa0vH
88NL0qb7ikmKTVpzcWL2pPj6q9v3t54f5eD9vZZlOvay34/06Rm2wxl2j7pX
xRzFnsLyeRzvb88XlD9syjIdkC4oBih2TPfnuZp9+meZvupYOmahxPLXF+Cj
cG/PzyfA6ZT5Fu2z2p/XlMj0X/Yon94vsufbA/4RbhaZvnb3ekO+QfY1xe2h
eGL5gXRDOpIvMR3t7/VAL7efQfAhuGBi+f84rx+KJqaTY9L2zvTu9MyHwRkp
exfz/P5lE19FFhNlK7KZqxOLeYp98unfRKaD59j/+pTppmK0YvWl8PuRxWjp
qnR2R2TvKBUspuvdyeeN9nxH9yt9me7+oERiNZVqqyNwZ+Qj4I/gItKRyHzA
JvePFVk/TDEgbTb7ij//N9Om83qXsqFVro9lE6tJVJsoR3sCPqHnDfeG68RW
c6j2UE1aHv5V7ztYDq1cWjWralfVqBVjq3FV6yrGNOJ4p+UPg8VQxVLFqLLB
Yphil3IcxWrFbOU+RxWT4KbS99hqatXWynmfSixHV66uGqh6bDWscl3pcH33
/wu83iuVmM+a5+97VGQ+UrYnGyyfmA+TL5NPmhGZTUounzoNHgq/A5eSz4rM
Z6z0eDLR48/ytNnsHI9Py9y/j4/MfmfDeVKWa8qml7h9lE7Mnyj3UU08NLIc
a6afX769s+uDfO5w+Bd4FPfbQ/oY/7+GuitltZVqLtVeqmHqJFZD6P2ox6Da
4rS/H/UkqsRWQ7wcrOZQbXEOXgj3hBv7834N7piyWukmtgH8vZjf/sqymnEl
fw9MWS2pGmMJPCJltYdqrOVwJ9cX1XQrgtUkqvUysq2WVE3ZgvP9ifw9eCz8
dGI1yupgNWpd14e5wXIm5U4Psz3P3x/zW3a29UDedn3R/ajnsQ4enbJeiGq0
Xc6q3fJlW62mmq0t58sPfwVPgx+LrUbfGazGU+2ezrZei57XLb7/7mA1aD24
mdffqu+3BesR7AhWQ6mWyqWay5/Xf2OrEXX+wX5/qjGUmypHVW9DNdEB9yeq
ldSj+DxtMUqxSjXXl66/iq2KeYp9qomuSCzm/Z62GkGxUDWSaiXVnNUSqxlU
O6hG3xJZjpMnGCv3Uc2u2l09hh8i8znKRzenzRcpx8gd7HjKPVTDqpZVz6B2
YjWIahH1BKorvsIl3f8diCwH2+H+aWFkNd4uv96VkeVbyndUX/3MNgn5D+7/
VkdWc0mmNcqNlKMqV1X8eieyGP6bPw89L8VM5QLKCRRLVePuhaukrPZVzfpp
2nI85b7K8ba4fVdKLCdUbqicZl5kNY1qG9Vcqr3UY1FvQzWjei/q2al3px5X
Ht7nz/BA95dFYqspVFuoR/ZoYjFX137Q71fv8yv3V8odpvv1Kyf9yO9PuYpy
vqqJvd9Tfj1v+PM4kracQfez2fND7XM0bTW/an/l8Hv8+e/x/EC1t/RPtbne
+QbPn4t5vqb9pT9/pK2H8K7r405/vstdX6WPyiGWRlYDbPPr2ejPW6ye2WX+
fLf6+Za5fmxP2zl17sWRvXvFOMW6AR7PCrr+y3+v8/PNdH+/MW01rPypYrJs
6QfXpSFsX/v1V0nM37+XtvqhgseHDWnL5ye4vqg3oh5Z5cRy1sN+fbpe6fvZ
tPWIpA8fuT3/20NILMdSrqUa+MHEekw3w9elrPekHtrlnl+ot6YaU7Wmego3
J5afxMFqcNXqcz0/UQ69yfML5YLqKeyMrCd4fbAa56jnIxfS1hPY7vmL8hP1
FGokVsMV9PXXJJZffOj3K/tSD66S50PqzSmeq/ZUDnrI408huHLKeoGKz+oV
1ff6aoXbR/FgfT/lTMqdbnX+NbLcQD5CvkL+p0Aw/dzt+VhWMB3e7P4mXzD/
ol6aavzrPP7td3+m2k0153eR5W85g9mPehnyX6qVVNPXSszeP3Z/st7zLfk6
1ZuvRdbzuiNY/a1emOLXqmA9ywYe/9RrU8+3aWLx7nXPp5p7PFvj8fgGjyfr
3f8rfuTweKh4czP8I/v3DtbTLxNbz/aZYDMI9XIVf9W7VY/42th6AncH6wko
v/rAn4d6IHUT6wneEKzHf9718xb4sZT1RjI9vimetUpsRqFZhXqorRPLD+bD
w+E7Y5tBDPH8rmhsPbVhfn2F4Sz2/xCeDDeJLUYrViuHuCO2HGKx55M1Y+ux
b/X8QPmD4udnHv/vi63nrd63esD1PT4r1irmPuDx9ZNgOUHD2HIMHWurx2Pt
/y7/909ZL13v8HbPR09H1pOo5fFOvQr14NWL14zhIe7/e7ir56f52f87uBP8
AJwZ24yjmT/fBon12B4ONnNQ700zBfUu1cPUrEEzCM0i1GO+I7GeqHqj6hnf
k1gPqD3cJmW9IfUUGwWbSanXqB7kUx5f1JvUDOXRYDMMzVb+iezapLPSXc2s
WgTrYWqWpZ7TyGA9UeVT6pmVD1b/HHR7L+f6dH1iM6Hafn2aFaknXiHYjEG9
cvXcr/D7US9+vfsv2dc+92c1PT9QL+0b94fK3+9LrKd7jz9P9Xo1w+rhz+/h
xHpo1dye1VtTT716sJ6/eu3S1/fh7imbtakHp17cu/CgxHp06tUtg3vCteDy
mdYDHBF7jwxeDg+PrUenXt1bcL/Eeo7qParHp15fbT++WL1E9SzVu1wHj/Tz
V4JX+vobY9M95bjKdRt6f105oXRXNvKiYnsw26nBVjLTeixjYrMJ5dZbgtlK
Mc1g+Hsmv7VHVgTeD8+Bu8HF4V/cPpSb1vP+v3JO5a5F2X52e2kcW46s3Fg5
sHLhq9hKZVrPckhsOaps8Ytguat6Pur96PxtY+vBFvDn2ZvndSVcMNN6uv1i
6wnHfrweyCvCkd+fjl+VrWXKahLVJsrXNVtRj/mR2GpI1ZaqYVTLyP8M93iq
WcgVseVWqnlU+8gfDQ12TPX+y8bmiycFm0eoJlFtMiFYbXuEbY77hyaJ+Tg9
b9VE8n2aOWn2pJnCk7HNlL6Hh6Vs1pQrNtvuFmx+q56UelOrdL+x5Xy6lkHB
csFKsdVWOqfO3TCx/nyfYP1Z+Zhmfjz5Hs0QNEtYzW/9Y+tRq1e9Bh4cW02o
2m1MsFqxCvL8mdYj7xRbDGnnx1dsUY2v2mtqsNr/odhqr31wkm0zNc3WNBNp
l5h+HQimox0Su7+QaT1f9eKkA9IF6VRR188jwXS8eWzvW+9fM4JecGH4PPLF
8MDYesa6P81Merq+ZGdaj72D6/OhYOdrCTd1e9E1HQx2v3ncfnsldk1ae8jl
0sd8yNfy27DY9Fv2tQHum5j9Fs206xng+lw402YOmjVMjm2t9pFtysZkayXg
C8FmTn/z/6SUzaKkL98Fe6aaXZbXM2Hter0DzdPh35HP0vHh0vApeCHcMbYZ
1J/BZlqN/H3nzTS5ZhWaaWm2tcivV+s1u9L77uLHO+P62jq269NsTPfTDXnL
xHoBqpFVK2tmrNmxnn8b1++9fv72ieU4yk2Uoyj3aZZYLasaX7W+vnnQtw96
X528nv7a47V8y9jYbCHlz0v+SLmGcg7lQiV8f83YVS/LX1+Uac9HsxbNmE4G
q881e9L1Hnf/oNm3zn8iWD2vbzFkL7kybaajWZz6N697/aZesJ7/adfvJ2KL
B/L/mpkMSOx8mm1p/3bIu7LNSJnOSncVH0p7PNFsRz5EvkQ2Wzq2bw7U61EP
Ur1IxQDFguI+v5KP6Obr9e2HfKB8o2xEtqJr0r1IR3StslnZ7r8zPO/fjQtm
8/rWoE9sviHL5y+XxZZbqaem3ppmIOrFTk3bbEQ9afWW1GNS71H5xxN+fM1q
9U2Celnq8arXq3xEsyn1Jx7g/N0i67Wph6le5qLIakfVVKqtFL+7B+svXuL5
UdNgM2B9GyL7mev2K9+iGCbfIJ8h36FvbpoHy1/1Lc73/rzkY7Ni8xmyVdmU
bEv5jGZp+sahOLJ8seVqytGUqymf6xxsxqZvLRQDFAva+vXpGxh9O6JvSPRt
jGLmFPcf8j2KYbI9+RD5En1j0jBYfaZvT5TP3ev5or41kc1JV2XTssVnE7MN
6bh0XfnhI56/3JWYDet+/gpm25r5P83fd6bsWwD5cNmCfJx83b8z1GAx5PHE
+g19g/Vr9e2QfLh8uXS2Y2L6tcT9l3yf8q/WwfoPip/y998Gy/f1bYX6v5OD
xUh9i6KYMsaf32OJ5UzytbIZ2Y56oKrlNZNTb1Qz/FM+z1HvXjMU9fbV81fv
X/2PwcFiumK7vvFRL79v2uY/ipGDPF8tEFtOpNxIMblNYjFS9qCYptmm6qe1
wXyavlVRf/qlYPWRvrVSf3p6sJgnuWZ26oVrxqBZg2Zy533erFmFZnDqxWum
oNmCZipnfZ6iWUi5xPZXD0K9COWM8gVlfd6qmDrVr+/JxHrIqqXVY1CvYWBi
uWlFnz//D/ca4wo=
            "]], 
           Polygon[CompressedData["
1:eJwt2HnYjdUexvGN7d3vpsFMkiik0EilkuKc0mnQzAk5KfMsIvOQWWYl6VA0
URkzlblJqaSMSTRKnXMSERrO53c9+4/vda37Xvdaz3rXs5611n4rt+p6Z5eC
qVRqJwpjZCaVWlgglTqdOA2P5qdS3+WlUtfyUulU6q9CqdQW+jMUSide1H1P
/4wblM/nVcc12k7Q3zJeYX2l0YeeglW80nQpjKBXZlOpWtrUxAWop+1v+rtV
7mb6dtzE28mrzTtmHEfxPj052vOK66sYhtF/8e/i9dCuF7K8k7zbeS3oVmis
v9oorFwQl6v7QmaHsfyLfgCt49kyq7PJ2GKMl6A+70vZK7UpEv2jDu9NucuU
L8XFudxwz14gV9TYisQc8Prz8gsn8xLzM5H+SH+1lM/Q7oS/7VK5S4ukUhVk
+itPk3kCmz2jscxtuAWN1BXnF8MedeN5FZR3K7dRbouOuFNulWd8pe8vcaFn
fUxvkOusvhM65HKf8O5Wvgf/jOfw/oE7c8+N538kcxWvonJ5nImlvMWooFxX
3X/0/9+8JHc2rzIqYYnMubwVxrESecYyWe5llFFezXsTz9AXyh1Q/hbnqXuH
9xMaKpfSV0nsp7/G1bwydGlcqd0vvEa8OnRtXBfP5FXkndTfF6jJ2867jHeY
/gXv0m/F2JV/xCXqttHrUVV5N28XltBHcTOvq/4b4O/628yryTsu81u0533A
q8H7lT6Ci3lLeRV4O+kdqMG7DH8oTzFHu9TvxjTlfbxa6jbQG/OS93FX7h3F
u/pYZhT/D5/lctlVeJp+Fqd7xl56Hapq97Zs/fh24ztFwxgfr1F8Z7g1t64a
4Kp0Mn8xj4f1tS2bfBvxjdwf60FmXTZZ87H2r8D1vHbW4ExtPqd34z56rVzd
eDfxveVyE/WZlltkbEtxDu85XjHeBvrteO+85dlk7cQaqoqreWvlqshtl9mG
hfQMFOFtpj/GPHqEthuVq2kzn34FR2IO5a6PdYG/qTvIu553Cl0Un9M/ogGv
GH069tJPIct7T58f4EX6eZTgvU9/iPP1t8xzz9OmGqrkxvxVfA9yJejiMV/x
bZmbkbyv6bfRnncqryVvMD0svkPeVN4bsUfYE8phNF0ZnXjTZKajhdxZvPa8
l+mxMfe8mZ5blLfF2D7Fa3QbfGO99KX7obhcCQxQHojv1LWV6YlDynN5I1Am
3m9eUh+5QSjJO8dzp3reJPT1rCvoR2Ou5SbGmsYZco/wxiqPQgG5x+OblO0Q
ZW0norlcl5h/bcfLTYox0nNQPPYBehOqy3WNPUFuMj0txk63M/ejlcuqH0QP
jkxuf2zGq+5558c88b/XdrDsEJRSV43fzTNGyY5EuUyyj8V+tkAfN/B+VR6H
lNx67eaggrbdY99gz4j9C8PjrNS+idxQ7YajDD001lGhJBf5bnRvfb9AnxX7
Pf0ESsk+qO0U7Z6IdURPiD55r8aaR2X5YbwT+pkf7zbmiy4ge49cX+0GxPql
9/Hr8k6jT43vMPZmzIt1jHx1T+Yl7yTezfO8l1BRpoj2LXh9tOuHJrzH5E56
7gKZxZgae6lcb7lH6RfkWsqdEmshnYwlxpSiP81L9tbYYw/G/kSfy+/Me0pu
Zuwx2jbijeCNoTeiHe932Tt4D4bGHbxr5AbFmOm5cVbTebiPN47ugrvkbueN
462iV8b3T+81991jL81PztI4UxtiiNyH/C3xDLo0Hoo5omfgPPpGDOeto9fG
mauPNnFvUF6Dgequlrkb42Nf463HDXQRZ/x7cfbK30Pfi7Z4Wm4Hf3vMM30L
3ld+F0+qa0VvMgcXKB8ydz/jIn1cxH9OZk6MI/YKugb+Tc9CG17ZWFOyC+hX
MDj2Qd5Wc9As9gs0zZ37r3pGWfX79f9NnMtx/8smmci2zJ0BJ/iN5ZrEtxtn
CO/yeOe8efSraMXL8JrxutEPx1rgHdf2Nt4d9L24mXeh3MO8pfRy1Mskcxhz
+Sw9G7XoOugT+wH9UpxLcU/MJveeuP88lE7ucDXlesgtpJfgKvpK9OMtpl9H
a7mT2s5XfkD5WvX10df4frVkp/r7n0R5dbN4p2m7ll6DKry0bFPeCO1Hozw9
APN4R+jD6Jx7x/Gu8737b2PM8Xdhvtxv9DF0yyTvJN7NJnpzzHPMCebwTtDH
0TM/GWOM9Xg2WUs3KbfGDLlP6a2x7nP7Xex7B3N/Y+04YzBN7kV6X3wjcQbw
WvEm0JNRiS4Y4+YNpIegZPytsbemkzMqzqqiMcex/pSPxh4Z71hmOm8Nr7Iz
qxIGxj7Je5b3i8wh9OD1ivlX/h3PqOsg0z3ukfTBWL9xz8okftR/ydsbZ158
g3GOppPfC/G74Zj3s8nfeWN8Z3Gnov/EGNnF8Q0YRxn0i3txNjmj46yukU5+
f8yU2yD3J11dbmh+0j76eSe3VxSO9Y2X5H6if4w1R2/MJnecuOvUSyf3q3x+
c7medO9Y57yevLm8t+g/8Eh+cmbG2fkavSjWL683CsZ4rZchcXbggfg9UCD5
4faVXFeZi3k9eSvoN9CALpdbY93Ud4y7AsaivHb708nzYxz98LLyz7z/oT3d
UZvPlD/BJHXNeJOwQvlU7U/BoExytsYZ2yZ3fo1V7oyDhjeGfhx96C6xD2lb
SLs89I1zgn9YbpzMBJTzzFH8RXIlZUpEjtdB7oDcUJlhKJ2fnFNxXr0Vd3bM
pX/Adbx8Y85gBz0FGd5smVkYSbeO3wz660P3RrH85F4d9+sP85I7+HPZ5P4d
9/DZud813yjfH/ec+L1I74lvOu7U/GqxXuJOE98c/VD83orf1bxH8CA9Ou7k
0Xfs2ep60J3QMfrN3VkeVm4a57z+vtPXD7EOMsl9IO4FvXL32dnK41Ew7nr0
K6hkLM1lp/B2abcTnXh75OrwzqLPwYG8ZB3FeqqS+535eCa5G8cd+bHcb47l
ykPiTqS+Ktbp42m51/mfq99TKNkHYz+ckUnqI1cFg2N/iHth4eTbjz3gqdir
Yn9PJ/8riP8ZHMpL1mWsz16ZZK1XNab+8fvKHE2P3zI4M965+tXanC1TEQN4
I+R+l1siswzT41yM37HKW+NOJ/8C7/8TzBzr
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0bkuRGEYBuDf2BmD6InSNvaloBXJ0Ih9rCMRFFQSroBKaLgCroCC6IgL
GGPfr0AkovZMonjP8xbn5PvyndrU+vBaTghhQ66VA95HQjjiD09YmRvCJeNM
M8FPpgpC+OAC3znPN87xlbN84QyfOc2kPOlTfOQkHzjBe47zjmO85SgzHOEN
l82+4hBP2cJjVvGQv3be4SO3eMFV7nNPkvoSBznAPjYwzhhr+O0OFcwwe5v6
/BAi2fdoTGhkHpuYn72Lh/VCMwuzO7GIrWyTYr2dJexgKTsZZRfL2M0Ye1jO
L4OrGTW4iXXsZT8TXOQUd7nCM57Lpp727fb///wD0cQzyg==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0UkrBVAYBuBzM+3YKYmy5xewESt2dixlni5K+AHckswzK5GszeN1Jb9C
yjxPSyk8snh73lOnzvd18qqjFW2REEKX9CaF0O0wkBxCP1c4yRMu8YJr/OYx
F9JCSHCeR5xjnLM85AwPOM19TnFS9vQJ7nKcOxzjNke5xRFucpgbHOI6s1NC
WP4bmFO8MkuMp+zhKhs5yCpGWc5SlkiRnsUCftk3l+fMYIKBS/xQY7xkTap3
WMtr1vGG9bxlA+/YyHs28YHNbJFHvZVPbOMzo3xhO1/ZwTd28p2L3v5hnOlm
OmMOP5nPTDsUsphlbGGrVOp97jRE/v/zFxWDRvM=
          "]]}, {
         Line[{1322, 1321, 2180, 1338, 1955, 2188, 1362, 1961, 2203, 1383, 
          1970, 2218, 1406, 1977, 2233, 1428, 1983, 2246, 1451, 612, 2262, 
          1468, 2002, 2284, 1484, 2016, 2306, 1507, 2023, 2320, 1531, 2029, 
          2335, 1552, 2038, 2350, 1575, 2044, 2364, 1596, 844, 1620}], 
         Line[{1323, 1949, 2181, 1339, 2190, 1340, 1363, 1963, 2205, 1384, 
          1972, 2220, 1407, 2235, 1408, 1429, 2248, 1430, 1452, 2264, 1991, 
          2265, 1469, 2004, 2287, 1485, 2018, 2308, 1508, 2025, 2322, 1532, 
          2031, 2337, 1553, 2352, 1554, 1576, 820, 1597, 2379, 1598, 1621}], 
         Line[{1324, 1950, 2182, 1341, 1957, 2192, 1364, 1965, 2207, 1385, 
          1973, 2222, 1409, 563, 1431, 2250, 1434, 1453, 2268, 1992, 2267, 
          1470, 2006, 2290, 1486, 2019, 2310, 1509, 2324, 1512, 1533, 2033, 
          2339, 1555, 795, 1577, 2367, 1580, 1599, 2381, 1602, 1622}], 
         Line[{1325, 1951, 2183, 1343, 1958, 2194, 1365, 1966, 2209, 1387, 
          1974, 2224, 1411, 2238, 1414, 1433, 2252, 1437, 1455, 2271, 1994, 
          2270, 1471, 2008, 2293, 1488, 2020, 2312, 1511, 2026, 2326, 1534, 
          2034, 2341, 1557, 2355, 1561, 1579, 2369, 1583, 1601, 2383, 1605, 
          1623}], 
         Line[{1326, 1952, 2184, 1344, 1959, 2196, 1366, 1967, 2211, 1388, 
          1975, 2226, 1412, 2239, 1418, 1435, 2254, 1441, 1456, 2274, 1996, 
          2273, 1472, 2010, 2296, 1489, 2021, 2314, 1513, 2027, 2328, 1535, 
          2343, 1542, 1558, 2357, 1565, 1581, 2371, 1587, 1603, 2385, 1609, 
          1624}], 
         Line[{1327, 1953, 2185, 1346, 1960, 2198, 1368, 1968, 2213, 1390, 
          2228, 1398, 1413, 2241, 1421, 1436, 2256, 1444, 1457, 2277, 1998, 
          2276, 1473, 2012, 2299, 1491, 2022, 2316, 1515, 2330, 1523, 1537, 
          2035, 2345, 1560, 2359, 1568, 1582, 2373, 1590, 1604, 2387, 1612, 
          1625}], 
         Line[{1328, 1954, 2186, 1347, 2200, 1357, 1369, 2215, 1379, 1391, 
          2230, 1401, 1415, 2243, 1424, 1438, 2258, 1447, 1458, 2280, 2000, 
          2282, 1474, 2014, 2304, 1492, 2318, 1502, 1516, 2332, 1527, 1538, 
          2347, 1548, 1562, 2361, 1571, 1584, 2050, 2375, 1606, 2389, 1615, 
          1626}], 
         Line[{1330, 1337, 2189, 1350, 1361, 2204, 1372, 1382, 2219, 1394, 
          1405, 2234, 1417, 2247, 1984, 1440, 1450, 2263, 1460, 1467, 2285, 
          2286, 1476, 1483, 2307, 1495, 1506, 2321, 1519, 1530, 2336, 1541, 
          1551, 2351, 1564, 1574, 2365, 1586, 2378, 2052, 1608, 1619, 2391, 
          1628}], 
         Line[{1331, 1342, 2191, 1351, 2206, 1964, 1373, 1386, 2221, 1395, 
          1410, 2236, 1419, 1432, 2249, 1442, 1454, 2266, 1461, 2288, 2005, 
          2289, 1477, 1487, 2309, 1496, 1510, 2323, 1520, 2338, 2032, 1543, 
          1556, 2353, 1566, 1578, 2366, 1588, 1600, 2380, 1610, 2392, 2058, 
          1629}], 
         Line[{1332, 1345, 2193, 1353, 1367, 2208, 1375, 1389, 2223, 1397, 
          2237, 1979, 1420, 2251, 1985, 1443, 2269, 1993, 1462, 2292, 2007, 
          2291, 1478, 1490, 2311, 1498, 1514, 2325, 1522, 1536, 2340, 1545, 
          1559, 2354, 1567, 2368, 2046, 1589, 2382, 2053, 1611, 2393, 2059, 
          1630}], 
         Line[{1333, 1348, 2195, 1354, 1370, 2210, 1376, 1392, 2225, 1399, 
          569, 1422, 2253, 1986, 1445, 2272, 1995, 1463, 2294, 2009, 2295, 
          1479, 1493, 2313, 1499, 1517, 2327, 1524, 1539, 2342, 1546, 2356, 
          2040, 1569, 2370, 2047, 1591, 2384, 2054, 1613, 2394, 2060, 1631}], 
         Line[{1334, 1352, 2197, 1356, 1374, 2212, 1378, 1396, 2227, 1400, 
          2240, 1980, 1423, 2255, 1987, 1446, 2275, 1997, 1464, 2297, 2011, 
          2298, 1480, 1497, 2315, 1501, 1521, 2329, 1526, 1544, 2344, 1547, 
          2358, 2041, 1570, 2372, 2048, 1592, 2386, 2055, 1614, 2395, 2061, 
          1632}], 
         Line[{1335, 1355, 2199, 1358, 1377, 2214, 1380, 2229, 1976, 1402, 
          2242, 1981, 1425, 2257, 1988, 1448, 2278, 1999, 1465, 2300, 2013, 
          2301, 1481, 1500, 2317, 1503, 1525, 2331, 1528, 2346, 2036, 1549, 
          2360, 2042, 1572, 2374, 2049, 1593, 2388, 2056, 1616, 2396, 2062, 
          1633}], 
         Line[{1336, 1359, 2201, 1360, 2216, 1969, 1381, 1403, 2231, 1404, 
          2244, 1982, 1426, 2259, 1989, 1449, 2281, 2001, 1466, 2303, 2015, 
          2279, 1482, 1504, 2302, 1505, 2333, 2028, 1529, 2348, 2037, 1550, 
          2362, 2043, 1573, 2376, 2051, 1594, 1617, 2390, 1618, 2397, 2063, 
          1634}], 
         Line[{1627, 2057, 2377, 1607, 2363, 1595, 1585, 2045, 2349, 1563, 
          2039, 2334, 1540, 2030, 2319, 1518, 2024, 2305, 1494, 2017, 2283, 
          1475, 2003, 2261, 2260, 1459, 1990, 2245, 1439, 2232, 1427, 1416, 
          1978, 2217, 1393, 1971, 2202, 1371, 1962, 2187, 1349, 1956, 2179, 
          1329}], 
         Line[{1636, 1635, 2399, 1652, 2070, 2407, 1676, 2076, 2422, 1697, 
          2085, 2437, 1720, 2092, 2452, 1742, 2098, 2465, 1765, 1047, 2481, 
          1782, 2117, 2503, 1798, 2131, 2525, 1821, 2138, 2539, 1845, 2144, 
          2554, 1866, 2153, 2569, 1889, 2159, 2583, 1910, 1279, 1934}], 
         Line[{1637, 2064, 2400, 1653, 2409, 1654, 1677, 2078, 2424, 1698, 
          2087, 2439, 1721, 2454, 1722, 1743, 2467, 1744, 1766, 2483, 2106, 
          2484, 1783, 2119, 2506, 1799, 2133, 2527, 1822, 2140, 2541, 1846, 
          2146, 2556, 1867, 2571, 1868, 1890, 1255, 1911, 2598, 1912, 1935}], 
         Line[{1638, 2065, 2401, 1655, 2072, 2411, 1678, 2080, 2426, 1699, 
          2088, 2441, 1723, 998, 1745, 2469, 1748, 1767, 2487, 2107, 2486, 
          1784, 2121, 2509, 1800, 2134, 2529, 1823, 2543, 1826, 1847, 2148, 
          2558, 1869, 1230, 1891, 2586, 1894, 1913, 2600, 1916, 1936}], 
         Line[{1639, 2066, 2402, 1657, 2073, 2413, 1679, 2081, 2428, 1701, 
          2089, 2443, 1725, 2457, 1728, 1747, 2471, 1751, 1769, 2490, 2109, 
          2489, 1785, 2123, 2512, 1802, 2135, 2531, 1825, 2141, 2545, 1848, 
          2149, 2560, 1871, 2574, 1875, 1893, 2588, 1897, 1915, 2602, 1919, 
          1937}], 
         Line[{1640, 2067, 2403, 1658, 2074, 2415, 1680, 2082, 2430, 1702, 
          2090, 2445, 1726, 2458, 1732, 1749, 2473, 1755, 1770, 2493, 2111, 
          2492, 1786, 2125, 2515, 1803, 2136, 2533, 1827, 2142, 2547, 1849, 
          2562, 1856, 1872, 2576, 1879, 1895, 2590, 1901, 1917, 2604, 1923, 
          1938}], 
         Line[{1641, 2068, 2404, 1660, 2075, 2417, 1682, 2083, 2432, 1704, 
          2447, 1712, 1727, 2460, 1735, 1750, 2475, 1758, 1771, 2496, 2113, 
          2495, 1787, 2127, 2518, 1805, 2137, 2535, 1829, 2549, 1837, 1851, 
          2150, 2564, 1874, 2578, 1882, 1896, 2592, 1904, 1918, 2606, 1926, 
          1939}], 
         Line[{1642, 2069, 2405, 1661, 2419, 1671, 1683, 2434, 1693, 1705, 
          2449, 1715, 1729, 2462, 1738, 1752, 2477, 1761, 1772, 2499, 2115, 
          2501, 1788, 2129, 2523, 1806, 2537, 1816, 1830, 2551, 1841, 1852, 
          2566, 1862, 1876, 2580, 1885, 1898, 2165, 2594, 1920, 2608, 1929, 
          1940}], 
         Line[{1644, 1651, 2408, 1664, 1675, 2423, 1686, 1696, 2438, 1708, 
          1719, 2453, 1731, 2466, 2099, 1754, 1764, 2482, 1774, 1781, 2504, 
          2505, 1790, 1797, 2526, 1809, 1820, 2540, 1833, 1844, 2555, 1855, 
          1865, 2570, 1878, 1888, 2584, 1900, 2597, 2167, 1922, 1933, 2610, 
          1942}], 
         Line[{1645, 1656, 2410, 1665, 2425, 2079, 1687, 1700, 2440, 1709, 
          1724, 2455, 1733, 1746, 2468, 1756, 1768, 2485, 1775, 2507, 2120, 
          2508, 1791, 1801, 2528, 1810, 1824, 2542, 1834, 2557, 2147, 1857, 
          1870, 2572, 1880, 1892, 2585, 1902, 1914, 2599, 1924, 2611, 2173, 
          1943}], 
         Line[{1646, 1659, 2412, 1667, 1681, 2427, 1689, 1703, 2442, 1711, 
          2456, 2094, 1734, 2470, 2100, 1757, 2488, 2108, 1776, 2511, 2122, 
          2510, 1792, 1804, 2530, 1812, 1828, 2544, 1836, 1850, 2559, 1859, 
          1873, 2573, 1881, 2587, 2161, 1903, 2601, 2168, 1925, 2612, 2174, 
          1944}], 
         Line[{1647, 1662, 2414, 1668, 1684, 2429, 1690, 1706, 2444, 1713, 
          1004, 1736, 2472, 2101, 1759, 2491, 2110, 1777, 2513, 2124, 2514, 
          1793, 1807, 2532, 1813, 1831, 2546, 1838, 1853, 2561, 1860, 2575, 
          2155, 1883, 2589, 2162, 1905, 2603, 2169, 1927, 2613, 2175, 1945}], 
         Line[{1648, 1666, 2416, 1670, 1688, 2431, 1692, 1710, 2446, 1714, 
          2459, 2095, 1737, 2474, 2102, 1760, 2494, 2112, 1778, 2516, 2126, 
          2517, 1794, 1811, 2534, 1815, 1835, 2548, 1840, 1858, 2563, 1861, 
          2577, 2156, 1884, 2591, 2163, 1906, 2605, 2170, 1928, 2614, 2176, 
          1946}], 
         Line[{1649, 1669, 2418, 1672, 1691, 2433, 1694, 2448, 2091, 1716, 
          2461, 2096, 1739, 2476, 2103, 1762, 2497, 2114, 1779, 2519, 2128, 
          2520, 1795, 1814, 2536, 1817, 1839, 2550, 1842, 2565, 2151, 1863, 
          2579, 2157, 1886, 2593, 2164, 1907, 2607, 2171, 1930, 2615, 2177, 
          1947}], 
         Line[{1650, 1673, 2420, 1674, 2435, 2084, 1695, 1717, 2450, 1718, 
          2463, 2097, 1740, 2478, 2104, 1763, 2500, 2116, 1780, 2522, 2130, 
          2498, 1796, 1818, 2521, 1819, 2552, 2143, 1843, 2567, 2152, 1864, 
          2581, 2158, 1887, 2595, 2166, 1908, 1931, 2609, 1932, 2616, 2178, 
          1948}], 
         Line[{1941, 2172, 2596, 1921, 2582, 1909, 1899, 2160, 2568, 1877, 
          2154, 2553, 1854, 2145, 2538, 1832, 2139, 2524, 1808, 2132, 2502, 
          1789, 2118, 2480, 2479, 1773, 2105, 2464, 1753, 2451, 1741, 1730, 
          2093, 2436, 1707, 2086, 2421, 1685, 2077, 2406, 1663, 2071, 2398, 
          1643}]}, {
         Line[{454, 755, 2333, 752, 751, 2331, 748, 747, 2329, 744, 2327, 743,
           740, 2325, 739, 736, 2323, 735, 732, 2321, 731, 2305, 725, 724, 
          2318, 721, 2316, 720, 717, 716, 2314, 713, 2312, 712, 709, 2310, 
          708, 705, 2308, 704, 701, 2306, 699, 729}], 
         Line[{466, 2302, 726, 723, 2317, 722, 719, 2315, 718, 715, 2313, 714,
           711, 710, 2311, 707, 2309, 706, 703, 2307, 702, 2283, 694, 2304, 
          693, 688, 2299, 687, 682, 2296, 681, 676, 2293, 675, 670, 2290, 669,
           664, 663, 2287, 658, 2284, 655, 700}], 
         Line[{468, 451, 2180, 453, 452, 2181, 455, 456, 2182, 457, 2183, 458,
           459, 460, 2184, 461, 462, 2185, 463, 464, 2186, 465, 2179, 470, 
          2189, 471, 474, 2191, 475, 478, 2193, 479, 482, 2195, 483, 2197, 
          486, 487, 490, 2199, 491, 2201, 494, 495}], 
         Line[{497, 467, 2188, 469, 472, 2190, 473, 476, 2192, 477, 480, 2194,
           481, 484, 2196, 485, 488, 2198, 489, 2200, 492, 493, 2187, 499, 
          2204, 500, 503, 2206, 504, 507, 2208, 508, 511, 2210, 512, 515, 
          2212, 516, 519, 2214, 520, 2216, 523, 524}], 
         Line[{526, 496, 2203, 498, 501, 2205, 502, 505, 2207, 506, 509, 2209,
           510, 513, 2211, 514, 2213, 517, 518, 2215, 521, 522, 2202, 528, 
          2219, 529, 532, 2221, 533, 536, 2223, 537, 540, 2225, 541, 544, 
          2227, 545, 2229, 548, 549, 2231, 552, 553}], 
         Line[{555, 525, 2218, 527, 530, 2220, 531, 534, 2222, 535, 538, 2224,
           539, 2226, 542, 543, 2228, 546, 547, 2230, 550, 551, 2217, 557, 
          2234, 558, 561, 2236, 562, 565, 2237, 566, 569, 570, 2240, 573, 574,
           2242, 577, 578, 2244, 581, 582}], 
         Line[{584, 554, 2233, 556, 559, 2235, 560, 563, 564, 2238, 567, 568, 
          571, 2239, 572, 2241, 575, 576, 2243, 579, 580, 2232, 586, 2247, 
          587, 590, 2249, 591, 594, 2251, 595, 2253, 598, 599, 2255, 602, 603,
           2257, 606, 607, 2259, 610, 611}], 
         Line[{614, 583, 2246, 585, 2248, 588, 589, 592, 2250, 593, 2252, 596,
           597, 2254, 600, 601, 2256, 604, 605, 2258, 608, 609, 2245, 617, 
          2263, 618, 623, 2266, 624, 2269, 629, 630, 635, 2272, 636, 2275, 
          641, 642, 647, 2278, 648, 2281, 653, 654}], 
         Line[{656, 612, 615, 619, 2264, 621, 2268, 625, 627, 2271, 631, 633, 
          2274, 637, 639, 2277, 643, 645, 2280, 649, 651, 2260, 659, 2285, 
          661, 2288, 665, 667, 671, 2292, 673, 2294, 677, 679, 2297, 683, 685,
           2300, 689, 691, 2303, 695, 697}], 
         Line[{698, 2279, 696, 692, 2301, 690, 686, 2298, 684, 680, 2295, 678,
           674, 672, 2291, 668, 2289, 666, 662, 2286, 660, 2261, 652, 2282, 
          650, 646, 2276, 644, 640, 2273, 638, 634, 2270, 632, 628, 2267, 626,
           622, 620, 2265, 616, 2262, 613, 657}], 
         Line[{727, 784, 2348, 781, 780, 2346, 777, 2344, 776, 773, 2342, 772,
           769, 2340, 768, 765, 2338, 764, 761, 2336, 760, 2319, 754, 753, 
          2332, 750, 749, 2330, 746, 2328, 745, 742, 2326, 741, 738, 2324, 
          737, 734, 2322, 733, 730, 2320, 728, 758}], 
         Line[{756, 813, 2362, 810, 809, 2360, 806, 805, 2358, 802, 2356, 801,
           798, 2354, 797, 794, 2353, 793, 790, 2351, 789, 2334, 783, 782, 
          2347, 779, 778, 2345, 775, 774, 2343, 771, 2341, 770, 767, 2339, 
          766, 763, 2337, 762, 759, 2335, 757, 787}], 
         Line[{785, 842, 2376, 839, 838, 2374, 835, 834, 2372, 831, 830, 2370,
           827, 2368, 826, 823, 2366, 822, 819, 2365, 818, 2349, 812, 811, 
          2361, 808, 807, 2359, 804, 803, 2357, 800, 799, 2355, 796, 795, 792,
           2352, 791, 788, 2350, 786, 816}], 
         Line[{814, 871, 2390, 868, 867, 2388, 864, 863, 2386, 860, 859, 2384,
           856, 855, 2382, 852, 2380, 851, 848, 2378, 847, 2363, 841, 840, 
          2375, 837, 836, 2373, 833, 832, 2371, 829, 828, 2369, 825, 824, 
          2367, 821, 820, 817, 2364, 815, 845}], 
         Line[{843, 885, 2397, 884, 2396, 883, 882, 881, 2395, 880, 2394, 879,
           878, 877, 2393, 876, 875, 2392, 874, 2391, 873, 2377, 870, 869, 
          2389, 866, 865, 2387, 862, 861, 2385, 858, 857, 2383, 854, 2381, 
          853, 850, 849, 2379, 846, 844, 872}], 
         Line[{889, 1190, 2552, 1187, 1186, 2550, 1183, 1182, 2548, 1179, 
          2546, 1178, 1175, 2544, 1174, 1171, 2542, 1170, 1167, 2540, 1166, 
          2524, 1160, 1159, 2537, 1156, 2535, 1155, 1152, 1151, 2533, 1148, 
          2531, 1147, 1144, 2529, 1143, 1140, 2527, 1139, 1136, 2525, 1134, 
          1164}], 
         Line[{901, 2521, 1161, 1158, 2536, 1157, 1154, 2534, 1153, 1150, 
          2532, 1149, 1146, 1145, 2530, 1142, 2528, 1141, 1138, 2526, 1137, 
          2502, 1129, 2523, 1128, 1123, 2518, 1122, 1117, 2515, 1116, 1111, 
          2512, 1110, 1105, 2509, 1104, 1099, 1098, 2506, 1093, 2503, 1090, 
          1135}], 
         Line[{903, 886, 2399, 888, 887, 2400, 890, 891, 2401, 892, 2402, 893,
           894, 895, 2403, 896, 897, 2404, 898, 899, 2405, 900, 2398, 905, 
          2408, 906, 909, 2410, 910, 913, 2412, 914, 917, 2414, 918, 2416, 
          921, 922, 925, 2418, 926, 2420, 929, 930}], 
         Line[{932, 902, 2407, 904, 907, 2409, 908, 911, 2411, 912, 915, 2413,
           916, 919, 2415, 920, 923, 2417, 924, 2419, 927, 928, 2406, 934, 
          2423, 935, 938, 2425, 939, 942, 2427, 943, 946, 2429, 947, 950, 
          2431, 951, 954, 2433, 955, 2435, 958, 959}], 
         Line[{961, 931, 2422, 933, 936, 2424, 937, 940, 2426, 941, 944, 2428,
           945, 948, 2430, 949, 2432, 952, 953, 2434, 956, 957, 2421, 963, 
          2438, 964, 967, 2440, 968, 971, 2442, 972, 975, 2444, 976, 979, 
          2446, 980, 2448, 983, 984, 2450, 987, 988}], 
         Line[{990, 960, 2437, 962, 965, 2439, 966, 969, 2441, 970, 973, 2443,
           974, 2445, 977, 978, 2447, 981, 982, 2449, 985, 986, 2436, 992, 
          2453, 993, 996, 2455, 997, 1000, 2456, 1001, 1004, 1005, 2459, 1008,
           1009, 2461, 1012, 1013, 2463, 1016, 1017}], 
         Line[{1019, 989, 2452, 991, 994, 2454, 995, 998, 999, 2457, 1002, 
          1003, 1006, 2458, 1007, 2460, 1010, 1011, 2462, 1014, 1015, 2451, 
          1021, 2466, 1022, 1025, 2468, 1026, 1029, 2470, 1030, 2472, 1033, 
          1034, 2474, 1037, 1038, 2476, 1041, 1042, 2478, 1045, 1046}], 
         Line[{1049, 1018, 2465, 1020, 2467, 1023, 1024, 1027, 2469, 1028, 
          2471, 1031, 1032, 2473, 1035, 1036, 2475, 1039, 1040, 2477, 1043, 
          1044, 2464, 1052, 2482, 1053, 1058, 2485, 1059, 2488, 1064, 1065, 
          1070, 2491, 1071, 2494, 1076, 1077, 1082, 2497, 1083, 2500, 1088, 
          1089}], 
         Line[{1091, 1047, 1050, 1054, 2483, 1056, 2487, 1060, 1062, 2490, 
          1066, 1068, 2493, 1072, 1074, 2496, 1078, 1080, 2499, 1084, 1086, 
          2479, 1094, 2504, 1096, 2507, 1100, 1102, 1106, 2511, 1108, 2513, 
          1112, 1114, 2516, 1118, 1120, 2519, 1124, 1126, 2522, 1130, 1132}], 
         Line[{1133, 2498, 1131, 1127, 2520, 1125, 1121, 2517, 1119, 1115, 
          2514, 1113, 1109, 1107, 2510, 1103, 2508, 1101, 1097, 2505, 1095, 
          2480, 1087, 2501, 1085, 1081, 2495, 1079, 1075, 2492, 1073, 1069, 
          2489, 1067, 1063, 2486, 1061, 1057, 1055, 2484, 1051, 2481, 1048, 
          1092}], 
         Line[{1162, 1219, 2567, 1216, 1215, 2565, 1212, 2563, 1211, 1208, 
          2561, 1207, 1204, 2559, 1203, 1200, 2557, 1199, 1196, 2555, 1195, 
          2538, 1189, 1188, 2551, 1185, 1184, 2549, 1181, 2547, 1180, 1177, 
          2545, 1176, 1173, 2543, 1172, 1169, 2541, 1168, 1165, 2539, 1163, 
          1193}], 
         Line[{1191, 1248, 2581, 1245, 1244, 2579, 1241, 1240, 2577, 1237, 
          2575, 1236, 1233, 2573, 1232, 1229, 2572, 1228, 1225, 2570, 1224, 
          2553, 1218, 1217, 2566, 1214, 1213, 2564, 1210, 1209, 2562, 1206, 
          2560, 1205, 1202, 2558, 1201, 1198, 2556, 1197, 1194, 2554, 1192, 
          1222}], 
         Line[{1220, 1277, 2595, 1274, 1273, 2593, 1270, 1269, 2591, 1266, 
          1265, 2589, 1262, 2587, 1261, 1258, 2585, 1257, 1254, 2584, 1253, 
          2568, 1247, 1246, 2580, 1243, 1242, 2578, 1239, 1238, 2576, 1235, 
          1234, 2574, 1231, 1230, 1227, 2571, 1226, 1223, 2569, 1221, 1251}], 
         Line[{1249, 1306, 2609, 1303, 1302, 2607, 1299, 1298, 2605, 1295, 
          1294, 2603, 1291, 1290, 2601, 1287, 2599, 1286, 1283, 2597, 1282, 
          2582, 1276, 1275, 2594, 1272, 1271, 2592, 1268, 1267, 2590, 1264, 
          1263, 2588, 1260, 1259, 2586, 1256, 1255, 1252, 2583, 1250, 1280}], 
         Line[{1278, 1320, 2616, 1319, 2615, 1318, 1317, 1316, 2614, 1315, 
          2613, 1314, 1313, 1312, 2612, 1311, 1310, 2611, 1309, 2610, 1308, 
          2596, 1305, 1304, 2608, 1301, 1300, 2606, 1297, 1296, 2604, 1293, 
          1292, 2602, 1289, 2600, 1288, 1285, 1284, 2598, 1281, 1279, 
          1307}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
Sm6FgpfGG0GenUag9CA2Pn2agsLx4FzrnAyICN0z+jXDC2xOVVX/IXMhsf9n
V2h1I0Td+7Q2dFk0MFxyelW/hOCGU7ip/bZXoFe62ZAvJwrMb9V1fzxM6tDz
5Yj+U4QU963jR3cQXrM34vMh+BagNfrJwroM4pZm73u9vQDuCJ2cEbegYLg3
VGfHnlrQdA+xFDV3hUlI1RrSIr64c+XqtTUVsDZZaXZiqRtkW0O1ggcFDt2b
DPjka4A6fuqpXWoRWBecMenfS4GvRVDCe506qBehUo9Jl0DY9kn1M8spSG56
qsvPVQou1kKOI3FXcQfDlEwe8df7DD+ndRnlwAPpXT67MyJxuT3T/jbS/waT
x7+2bG6BOue6+xLWZC7ZfwT4XqLB1OarxaZsrfDAKsD1JEMVtL+of8K8jwbK
Ts/74tYnwFO23YU7glKxoMb3vvgn4tdaY0I0rEPB3zDqlsL6dGRgPKkhRubU
zILJe7dLO1y+2mLT41INchyZQvn5ozBa6Tp5UKEDft1p4mndWwVFQ+eb0+JG
wf2KuFzjhDnKhpeFNW4pwLUlx+2CCA82awUX+JT6oRBDs8h982LkYK4uECC6
6OjKm/GWF/0hVy69gsnaB7gvcrznI+drOPc7/EP/+R3+Prr/xbd0/4vz/ld0
/zObjzmhIOI3uzTmRRh0+J/hbiL93D/3u32///xuX6TjgIevRgdYipQp7OEt
BS8ccN/0bhR6H/MtYp1qgxiDM7l6A5mwfGpweESeBmXJWcGtihFgH95y7PSi
cEhGfs+1BN965n7/H/yf3/+7DM4uECvOAJr0tzE99nQoXJp7nJ/oovdz74f+
5/0Q7mecby61wa9PGv2iPQHgXiAqtfIROUel47sipJphkotz/zI9PTwbfnw8
9TsNdnaHVAmMIjw9pfTWc1MB6OTfT3Z0/9/7COH/Wd/ccaH+V+Jvh0+Zah5k
LYYOVuOPFo8pUJ27p5D7n3sKGSjF6iVaA2baOuF/1yTisV1raxK0ie/TCp9M
S66EXTmmYV9N0vFk6ZKmX0YURI6md6zTr4MVX54LuyZXw1ep1MLJ4v+5RwCF
/1k/8efCMm+2VzBi17dE8U4NGN77ll+bSAPWufsRGf+5H0H7UEuZzpTDGb2W
QqvhdJR2NvBsIbyQGJJSU786G3al9htwi6Tj3cJJ8QSCwwteMx9SWNcCdmvf
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
ssimFtHHVRjowTkzfj4b94ufNSkl9TwmX3lt76MncDrei23lzQS4yUsbrCf7
DEu70XUqLAiO5amFSJukgfV69YBHw4RPw/LeXE6sRKn7+r/LF2Yiw/cl4tL3
KFC/bdmbfqoK+xnlTz3Qzca4D5Neb3UpKBss25sfHQt3H3eF72nNAI7gtyv7
ekg9x16rnGNOAJMa/w0s8ukgnfObM/g9BdrjQXxtZuVI+xN1tfNoBvr52b7d
Qc5r/cnumNGmYtx3+wvbpSNxGDH93Po6Od9Nni2MrBKp0CYc1zN5NxPcSppy
znVQsLqWoWK6hQ9pI6OXxWxOwYNVRiL/fC/AJzkh/lInDQ+brmk5cygN763n
0jbv/ud3WXcTFVODsZpvZN3Fg2GwMlZPJ4nUmfFZd+Ms8bHyFiGFTwozMP1o
6o8DrQS3BTY0jTjnoGt94PNvdi/xkGzAx5NvKVh0/8iBQyxpKO9d4fu08hQU
ZcLG1lHiX5YsrvaRz8B7jxfriVhkIKXVPd7fTPx+odhh+VX5eO0Gn+De6Ux0
LVy+MJ7w+/V1u1oXnY7BDrHt/QPlFsA76FxwmuxHlo26LSDuhZ+s4/VWNAbC
uv2j17dNU2A3ePKe9Ugh9h+Tvbx1NBebrzuIaEVS8Jme8+N7es6P8zn/5sGH
Fyoe+kO+smHMr8FUuKQZyqP9lfiFSavaN1dDwfPoof02yplQ1Ldq2QThKfY6
7irmnkKUfZH8+019Lv6u6Nj/h6x/xyP55q7wPPxWK9/h+yULN+tz9voRfcWi
Vrzl8PtQuDci/nbQLgOuj2xXzPhEgemPpbsWT8fB8aqjhm8rsyDwVmF53msK
RgMuM0SFZOGR6l7bjTHpaLChaeF74tPTjHoC+0g9i/asSlLak4SrDb6fMyU8
NdtqV9hYmgoqs6ZZQaW5oCq/ZtOPagp0ru8TOzSTAis4BNSGYnLAM3y98gey
TvauetZTX5LwmLPmnh7VGHyw2fW2JelnJ8s75WsvhaKf12DihlW+OJi0Rd31
N9Fp08r73n9LheFlK8vc7mSDyt+xYyaNFHxDhV0b3RPAPC7r3EeWdOg5f0U0
i/QtBvhcXMduAxUmS5NOF9n+P7rePJzK7wsbTypCmqWUpKhoUDIktdJsTAOS
qUlKShIZ0iBTmedZ5nkej3Ed85B5SBIlEcKJFFH8ts/hfa+33/X997mea519
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
uR+npoGseBr2dqkWCjt6YNOwk+tBsl770iakQ15Eo7q5kv9rPSGkil4u8yPr
lXpl6H6STihQJuP0Vp5KA51r+rH3yTjZY6OVD5ldhFXW5s8934SDe77lp0ME
995K5nv5QC4SMi+lLlvyIQ0WpwoftCL7ccNcv8ET//QbfP1dyf9DezIszf20
9VM/BUrkmgWgnPiVxtPav7dDcebw44VRojGo9qNjTyHB5wORV1kOmKVCmJSN
WHZ3NvDqNmyzIflxz1uZZ1rvkmDyV/WxSeYs8Lw1PdJKcEWYsvam7Jk4bDu8
uX/qrTVusuh6dIrgVXG9vMHchnCkvVxbHGEciwNfvdhPEPwZseszTyRzMj6g
8BzrIeuzgJHv+pcmGrDYHdWQL0jDDJM6HZ1n2Wi4w1gll+AEn/JbkzJyz/DP
874bIT4uwCccuyWWxDF5q0tsEimp2MKiycdeTsHmJU1xriSfNuo0vk7KSUAZ
LdMTJ0cycNBlV8cksS84tb+u2iAF3LaZfLYi+LS/ZfIc6zsaGC5YVyXvE4FV
MW8Mjz5IxZhfHL7aZP6z89IL9dqc8dBeN7hzIxwvSsfwWxK+MGBSO7XsAwUy
VrmcBQoFWtW7+xpIPq2Yu5+9+J/72WUXiSi6Ywb8MWS/VDsWBRJMqZJXCX44
ThtJXrWaCp86LURlmtPgUE/mUWUS397P9fe7+U9/PxG79BVLThTCrijLK8Uy
FOBnc1/YROJ/aHiw5mRTONSIv7zrcykYTa2YuFkIT+njNSwukikEBjd34W9r
s+GE0SuxjY40+PRZf6b4ABU0V067rmjIhNGWQHaRQIK3ufmqZBKoMGq8bmxj
ZxS4p+qEChF/Tj7z4GOnWg4w8WffrfiUAtf9+pZfJv6waFoqeGJlMkzH5Qid
2pcBSp8zleLIPIvlPV+2ZWk6FN/6EblVIxKmDo76MxH/lHNRWaQumgthrR89
MiMToEdJQKmIrNf2W1fFjE4k4p+r4u723Wn4dsVzh06yLqvWGWZK349HLasc
JWZHCk7zfzv0kuDVB678LnW8jkhtNdljszACDS/17Znt0x6e0Z7LwhWG18on
QGVbJhoonehza6dBgdO9gZ96JWCbM8L3sT0TWP+EHv1kRIPI1e/uhrs8hcCk
6CSj2Eh87uufkj1O+GMC37qtXjHAPCm2pFnCFZ2rd+j7kf1enl4yYM+ZARcn
rzN1eljgrem3twaJnxzR6r4X8zIWviQlaEvfs8TTBSuXR5P3XaN0iptvFAOT
4ErGFrsEOPZL6Plrdxp0/Y/75YtvrNI/WlYNnYetAy01yb5LfJFAW0SDtXr0
PnsHEv/fPnslAQpTpxTr4G/M9NCJH5mglt+3fnnPMFjllAyymlUDV+zPa9m/
MiBHVfxrxmoaNBsK16zcXgbmfc/kPzzOgBgTRicmHRJvLW6nSRVWgPpWdq7g
rcnAcM3DPuciwb3fToSXTpVAfMwHNf6bQeAjPWX6gviProqe1G7fepg6vHBk
lXwRDLZ3Clu7DIP8xoj9ldEFYMVkLX+gURU+bdTbzjTbt/xkW/ft7mSI51s4
Wdgbgic/er/kJTzry9w84D/zoPP098aKXTFIieTu+9mSgE16Lme399Gg5mxs
6ztrG9xTKUtZNxyCy6yHC80maTAy1++Ob67f3cK5fnemlw02XsgNgzql3ol+
qhPqjRTcmf2+aXD1g4MTfA3wikut/2x9FpSpy7zyTBqGhi2HmPrts0BtRuhS
+lQo5J4SZwsi+KRmfP/O0g3pcH76p8zE0zj4RYm59JbgfOR4K0oJKIJtkboD
jJyZYKYcSlv6ivjDzqOKJzdVwTk2g5DhglwY7pZgu8lLg3P3+7ivxhDe0clp
lmGTBTtf3bsuGET2qdaM2LYHDWBQxkLJJv7y5KHMnrs6w+A5eGjAW60Znsku
c8gTKYWp/v66X51DcDLCfXDBvWY4VLHn7cdXBSCUe2Fn5Nph8B9icNd/VQl7
jy+aOj9aBAZcAgV8M8Ow305YNfV9E4zlv1yX05MANa+qP23RIDiTuaHvrkw9
iLOVvKnv1sUrPz/KbB4dhqIvR/bIazWASNLi0GDxKvjQP3WvZN0w3F0h0L4o
uAyu80wdkLkdgI/vq7ysJXkzJ8WSuSorE9jf159mUElGs1q2xj6SF1yGkld0
/G6GvAq7ndOqNXAgIU1szcUhWBJc1MUg9AC0CYMPi6Oi0Zqq/Xw5NHAOt5Ya
E4xEnzfNm0ITi/DLhszU58FkH+1gV37d2wx9eELW+CVC1vpzLlV/hsDE2PlL
zAc3WBfqeCf5lQPYPtV4Uv+XxG0WZoE1+xMh3ulahaRTLPQ4C65L7aVBkFpz
e1dqDmj/+dP8QS0TmLI6bNvSCI+Y6/PG9IXe581trs/bHu0zsbHapXCX85J6
+IYi6DxQoSJ0kAb8to2B+e01IMjL7hC1uRK6dOXfLzUbBsnRi1XOVxrhwlTI
o67lNeBqw8ipXT4EjkJDz3T1W+Dzw5GHIW9r4OTP6NR+0SEIpd9jDhT6PeYg
MHeP+W2NFO43B5ugt3NH1OR7B6gx3xNRbjUM75Y6OhrHFEJjf9IbmelsNIqC
7m4bGhyN3MFx9XoouEkoKyzbUYZaatqSv5/QYN2rvZ4cF7xQouOX9f6ySgxr
YNYSU6ZBuq8C6yWzdCyr2BajoPQGhy2PdQvuIHnQqenK+X1UPNzY9dDh/Bt0
3Pr7WT3xn8n8g0FHLHPxxau4d+qlJbj42dK9qtdp8Gyuf9flf/p3HcoYNfD5
kwY3Dm/W+5CZBy9VdJm2pc3Gyd+L2U3yoUloAdduMyqw9R8IHLQi+F/0bagm
cyk0hFg2LhkrB/+Nyrm9f4fhWEP09uPPqwg+CgivF6mDJ+xnNtqfGwbpSkeB
SP1q2Kx/M1BOvAE+tp69sO3vEPBJjbYGelbClZUbH5552QBPhW1GHmwYhr/2
GqELbhWC6qtKlvbddSD/W6KxOGcYXI++Lm9P8MjrjzaqUQ1J+z/6HGaH/95H
E/r7KDP3vmIQ30zCiiqUrVRaWaDaiGNfJBtTxoaAo8Cn2m2iEgsjzc8ZLW9A
9cbcH+H8w5BKW91ufKEC7b5oD5+WrsXyjrL0UOJXrtVHdt0yLcXFqkUbDDQr
sVGXv3mmdxhktrowONUU4IKAVS7i14rQo7Dcc/AeiZNFW23cD6TiVkGHh8G0
DFxRkHJvGcmDcvZMvEw65ej4TFc6bHMDqn63KqedHIa6IxyJvl05cD3unIwN
Txlw5fJFJJF1L5OVXhh7AGFXw6ojp6QqQbFfJziMhwbe8e8kr7Hkgvz1fReX
G1bD/lJp97Uk75x5lePSm1iHJzce9xOjNqDj6aE//elD4MIaKXb/tA+8XRzz
dkq4EnjHuq6f0aBBrpSk1JuQVPxwW+SrcXAR3PkGbG/dCB5osppSPVqNTNeC
H5zLqkHuvznOFxXJ/uIpOhnsX4IPDuYnWdlSYNPMDqnv5P/eofs/snz6z/9x
3v8HKjutlXir8Iz78nMHsAqLu89q+vsNQwR9H2EtfR/hjrl95EDfd9hL33c4
v+9e5UtVClc0YrvVU5Zoxzf4dMfMjl21Q1BGbS4ZvU/FoP5rCnbViItiD/ru
fEyDNfbMwnf31WFKO6OQcEElsi+/GHNefRjQpKV/dGcZ3s9ZcFnwYDEK4c/z
X/locJI1pvWpUAI6puaouckm47JMM+Wln2mwk3W9vlI1BQ+EWn4X9MxAVurJ
fsE8GvTu7nn+9FILBttODPWMIRboNPYP9Q5BZHRsM8+RcFwY5nzziF8kPvmq
LuxHeJnhXL+jwbl+R/vm+h2d/fVLglFTG7E2XOjFlueoH6r7NInwrMG0id3C
P5rR5Kvj4cbdNYSXvFmw5NIQMIqluIzsiYFf+rpLqv8Ww+PtHUL3XGnQKXbq
m+fnUKxW/atq6ZALmc989jZW0UBT+oLogFM+UvOtrwsPZkLP9MDMmmgacO15
ne5i3YDMZfJbx3ZUYCd76983u4dhc1oLavSW40DsRcawO2HQvSLNePg2DZTn
+hR1U/7fPkVDe60Mmz/U4filVrdb065I26Ug2vxnGHiW8Kls3/QGG8Z6C3fw
lqFlDHdoZfkwvN/m99R8phFb+J+qSX2JxoiP/DIBxE+6ZO32pb9rxjcfC70T
AwpQ9fhFPVbGYQiPuywkzEPFbssi/qLDGcjyZmaxFMHV9y4sdG3a0owMW3rD
c2uLscY/PWrTxBCYMloXm1jVY5rpLuv8U4UoZXbKsD2A8P2LCqoinVWouDZy
nfgwFS3MG6s/kDiZovEs7jNZV44mgwSJ8Ticsrjc40hwmnd+zMaq0GI0V/LZ
q/kxE2uffA/8ZEF494+bXppX65FHJu+8elQ2Xun2KTAtGYZHqpvOHyP88+EP
BW2jNwHYV1K6V5rgYZ2qAi/n8kAUllh4M90oAH1qH9ppEj7o1Za4ZUtKJB65
p3DCqt0BtDbd/8JLcOzGdImvESz1+MsiQk1GrwDZ2JxHLQuGIX/7kicPxe5h
O0eV2MKDweA6ebuoefZ+VdkD+pP+YSBiPXlWWDAOdF4ftL5P+JrJjR5zGYE6
fFuVLXfuEBUrD9kznSwdho10XIfBdFwH87iOwdF4efm5PJS6rypxOdgWR92s
JXaReGW6z9VwdKYYtw35vW1v8cP7+ik8L31ocOlFx6iibiWm9fO5qb6MwcPu
vHwW5wlfnjpw06qyGgeYpGS0itPxYsOEjf4qGqSpctJsfuXj1q8sCuffRGOS
8ZDRIsITi0uT1gxO1uCRMN9TFm7ZeI+jtf33yDBUK1yTNDtQi7r5UaWGF/Iw
f1Cq4+OXYUhSMLG06AtBN6NUCb+oILimsUZ+tt/LWGTlROi5SmT9zijnMUDW
a/2Kt56Ss99ncUQMsxRjucW35KdPI/CA1o0PtoQ3bRnjMnKPLcNVi38u5mHP
xstetnZuJN7ufbJ3KlMqDwtXuH6tmPJDreT1a9a+ocHuuf4/Mv/0/4lkS9rv
sDoStbreeG/N8AEzHyXLacLjeIwlJJ/stQTZH+yK2SZJcOdusdtewtO/fj32
J/t8GHhE0gqEj6bDYq3deqafaNC24/cqzY0FqGSqln3XPBnfXI9UWpxJ8L8o
rawtLQFOfGziva6VBd79h0yH62Z1Gvs41rxPgpSmKGbZknRIdsL+NS1knA9N
1ZY5UvHHRYc6jovBWD602mRJFvFDa2k+SmQqPub92fSKGo+ORlcsT3TQoJ+r
PouZkov6/kM8f7xScLt3UbY6iW8P2EK2n2dIw+8LuRd2CWRhr06rZ1I5DbRp
mn5PQ6lY9sDHroonEz3dNsj6+dOgtkmZeUNwKopEBXT5Mz3Hdv1oQ4YBGhzm
iNf1GivE9wrtd31+UPAXS0aTny0NVq/K1I45VIhbGpSuCppk4fT5iiu+JO9o
fxIXuuPuCm5CmzYysSXDeYfas4nEnyf6f0RTIvJR4NRRfnX2NDzMVHxxhvDc
exxRPrf35eCUzcPCHd4UvDXQs2wokQaS/YZW1puy0aJ2p7lgZRzGwINw1Woa
1NH5Pj6i832c5/tl94be3UzUhtL068/Fpl7Dg+eDPr/J/lJy36U9eCsJx/UT
eNE7Bfl5t4cLkHkT827v8rkfDW3eUsbdgSngn+cvKU54pdDrwy3Kj1PAPfvk
325XCjw5liX/a/b7FDeJsEsJ1si7y7RcbywIpQ9Ps1UT+wLaAiNVvalgMMIe
pnkuB1braDZuIvtiheS6AUnXVFgp4ZO5KY0C8RSb5g0lNJj6KSYRK58GJmvl
tCy7giFMh5df9Avh0fTzGdCin8/A/PmMBP08B8bp5zkwf55zPtCMU+SjDwzc
KzkzXRUOfMEVSY2/yP49pKjYCsnoLvdxcINJNv5+MnKikIyfN5mpweB4Kl4/
k9pTXpWNj2d6likX0sBocOenJ7nJmPctOu+NPgVZ8q0ypytoIG8+mJz7Jh0y
HqR7q35Lh6jcBO77lTS4TT8Hw0T6ORjOn4NV0c/TMIt+nobz52mDdVxuVYnP
0WmrgPCzpijc2SpaMnuPjMxbae6O6TCo2r6BetvOCMX5RdaHkbi6Kue/cz8I
op/74fy53/IcFtF3jRRopK3cwRMdAVAwbsfUSAO/YRX7WqRC4O/TRY59yZD3
TX3KKorgt+fc4Vc4i8Ce+tvWZjADOBpXbbrgTOZh8MjGxUfTwEHK9r285XMw
sy5Lek54rqhKG7W/tgRKHdaeX5RPAT3uj02CegS3V92Mt1AoBpP7Qu9qOrPg
Ihw9vYvgfK7WydStd4ohQHz9vWMyyTA45GVwzYUGcdnrZL9vpMLyVwPXti9I
hwHjR+7eETTIN7TdWf+ZAi4m1MLk5Qmw4K6/zjCJS1On+vP9jibC8pQtlxX1
fEF7tcvtHTSCx7h4g2VOv4RbR7h7aFu8cMOYtpzx7L3b/+P/Gn08scg6JgaV
3I26hVwy8ZjSuFoFiSdsISpffyx4jv7SZflrO+PRwmVXYNIoGU+22CfG0Kuw
8zH3K76ZSGSTTUjMJHHYh36ODW30c2ycP8deNtc35sU/fWMG6efkkL3uv3Ny
9J07J7ein7dDC/28HebP22+qDg04t1ChMv1Uz6VFkRCsFzu6n8SBd46NzC71
5aD6qTbw1a4MCEsVsdG+SAM1el0AuOl1ARCdqwu4T/1VqA2rgeXLHEOP7s+H
r/yaEdcHhuGgrnShvnkdbPM5hjXcueDS/4pa0Uz4+EbFh9e86sCc6vRDfzIL
2s4VlJt0DEPA7V6nuNUVMG4Xm7y9Nws6hi3CVaSJH8Z1Dp0PqIFSZSXX8gsp
QJOdlDSb7TdLr4NAK70OAvN1kEmVx/wMm+uB2aToRzFDIZwvseQsjyc4mV5P
gSR6PQXm6yn2NnvSvOIzYd3kdv9nrzxR9Gsw4x8Sl7jOW6zPTWuE3UoD6VpP
CmHVhK7OIplh2Gbolm0s6g1hP6wngyTS8cU1v+KTJG6sOry2J3uHDcx0BskU
agQjj72ihRKJS8ELp65G2vuh6QWfjwmC2ciaMSH8quX/3+/Faq7fy29hE88v
/jYY6XXzemVvJAaEcGyUJ/6wYOihuauVF1RGjLm2TdlDnupJdinih930+hec
pde/YL7+tcD6v3oZ+NLrZTBfL2uk19fgI72+BuVz9bWV9HocqNDrcTBfjztP
r9+BB71+Bzxz9Ttmer0PuOj1PoiZq/ex0OuDMEyvD0LyXH1wD72eCHeH/qsn
wnw98QO9/ghK9Poj/pirPzbT65VQT69X4ny98odBaZ/TWBpoSArs21lSgB9X
NrFZxdEgxjNHfImGIXIm3pH63VeGPZq6S1+b0yB0oe4C2/FYjDjx5VqzKhVv
izfx6xE/Z25JZjPxTcDgoNcXLu6Mh++7uRw/9ZB8dOdhjcWGJIzfc4KadjYe
klK0hRTJfB6Qsolp1g3GXzJil08/zQL/JREmQm0kPi/bZ1bE8QJ2CQ0KFJQW
QuL/R9eVR2MZfWuFilKplAYqURQSTSRbpYiSUEKjkoQmQ+YMZU7mOfM8zzPb
PGVKkkhSZPZpUIbkHr/v63fXtdZdy1/v+tbxvufs4Xn2Puc5GxzCZFMpUOM2
u9430h2GrOO6sxbXwD4XQa5LesQetpzYJwvuuGtU00vPpRo+rWRNnH1EAU7F
5TcZ89KRZZ37CI854aO7JWW98ynwWIlYV3wJWvN2101cCwLFmzK4luAQeur9
gzhCvX8Q/90/uF76i7dYYxmWvWZ+1z8RgTdP3d3WFEryIHMmSw5DGe5mv12c
WReFbUrXVowR+5ef8RYSvV2KNjdvJkgHxKDM0h1b+cl8Pug34enPK8FuZtm2
xHNxKLh32i4mhQJ/+ln4r8wiJv9KU2DYmIA/Dz6OO0T4y4OvG8p3BBfj81Wf
1p80SUCnjZMe5/LI/DQrn48VKMLu+CKlrMoYFDC/1ZtL8h2nvlyg7IUyPNEi
EFffHYG75OpfnSHxeYnwKdZBeW1kECoZgv254JOkanGikwKil6qOZ212B+YR
rqvp9GUgvHj/3nNJJF/QdGC4FujAfP3G8ercpCfEbtPap6VfDlw+4bmnQyiw
x6zqrGFmCV5mEb7VohuJzjbRDJczKDDUs37fWKUBytfWHrTcUAZKNtobY8j4
w25m053aiZivczv+wFgeBKdJGguQ/DtFx5Nj24d4YHllmi9XDE4IO4vN3yM8
ZUj3Sfl2ATIrDlqNZoRDuINIwUOSX/L2lpykW1eCB589YeHlMcVPBQ2l3wk+
8X8bt56pqBDzm7i0JrbGojarpd+qcgpYbO9a2i2E6JppdlLooT/uXm3gqVNC
xulVNKc3LMC8e9GUz3zBKHU0+dkewi/sMiT8O/0KMH406M1vswgMDGevlSW8
Vflccf7mM0W431Vqs3ZuHE41DaytQAq0lVzVNZvLw6Br070pUVE4N5ISI9NI
7Da9ay78fg5qh5sNhHhGYzqrzHp/Eq/y867UD4nmISVd9ppjdixu6R9gdCS/
d7SRlryckI2n1G4fpdTEYGoq/+Vxwvvm2Lpv6d7JwEVK4hfeW2hhiR0D3S2S
333ChUpsWHPw1GHvkbgrsXjOW/2GGhl/L/ej7r8ehZi26NQN5tAYtF9aqb+U
4LSDzqq6i5ZkYc7W7cX3taPx3motBf0PFDhz+Medp4fy0PlJWkFPUSCKiaU8
2kHG2Xow49nm99FwUdnV044tHzIv7rjDR+ZntCrYm+ukL9x8WikYL1sMTr+/
Wp4n40v70u3H6ed4l35nUWl6HgjETc8UknG6ok+d/CoVi0eAbwWXWRpUDTJy
RhMcxf3SyPbq9lS0H/w54C0TCSZVkuLShPetr8pRvcCSgd1JUdfu9oRjr3pi
dxr5PTPPYra56lSM/ZI7afvYHRjLCoP3kvy7Mds+m5EvDd8v2fTRSV4SrebW
dXiQ52tPbJVUlEzAyuU3MgZ/RqBIIovuLoIzf1QMeNGbxqNmyDVNd25jpLuj
5N9H8MD169L7HgWGo97g3NJdFc/Qxfnvpm3TxH42d9hzyIbj6TWPX4yw+OIr
8erwNILPRQ4mZhcnReOLuzFb/xpG4wZP5crVhE8ZTFBG9dkDkUtk0txhTwgK
1DG6XyA48LF+dPdiEQ+8wHStpaM7HBN4J9bsIM9HaboobxbookQ+LqHwn36B
0b9qVndYRKN6XoPXPB/frX78WNFKXuAULa/mX+UBP6dPNOT9pcCV55r1By54
4o6tL9nn1EjcePgb2sg4v5Ye1eKfCsFpHu1H7LmpmH/mD6MN4UG3t73+Wi4X
iIcExeuC+62Qw3afctMfCpibNM6ePR8HltOfr628kAbRWOTOS+a/tptXQisz
EFp16AXfBaRCTfgq6+JhChTYyP3Je/MUiiOTFG3GE6Fc7lPevE7jGsG1crpC
Hjj6VnuwT9kTgx4xKgHJs8eGcoz35j2GE357v+t8jgG9iy6J3wh+zuuO4ojM
MIXF6zYvtvOIgFutGo5tZH4mWoXz3y2yhunBn95cib7ofI9ywJ6M07iVq7d9
12PQ3pz07nxmMJyXibXaS96f4xqD8B7RpyDpw3qo39wLrH7cpUyQ35u9+W0q
ec4T9rcV6VthKF4X2hPMS9Y3gnpvNbSf/c+91fDv3uqLJpznJx3DYbLi+PET
Oo9AIiPnhTP5/QNjye8mFvFQybXYUEzkIbKlPU37SeznBk2HJIymQ0JP0yFh
uYnrA5MSgD1l7+8n5z2QhTVYPYvMj8myBMWQ9ETo2hDovvNzGNj3zFhyEPvc
ntS9s/NdAnTR3zZ9qRWGJ+03f57ftzz06hj/Kb9YeHJH7IWUWCJy1PEmspJ1
bK3aHNAjkQXiRqOVe+ZCQe+wbdABwl/GYmWe5UsEgsUIVz5HRBY6nx9rrCLP
E30NJGW4g/C2UsTn0cfpmHmTTe05wbf+PDypG0cBm431Uzj4itBa2+fjvK5X
7YjYyNOoGFjq6ns29acZBF+vlWIldqjqGLFjFWs2SK75Mz70Ohxey4x9+0Hy
S4GQenGUYAaEj08vKx2Kgj05v+Mf9JB110yQc9yfD+vYQvdIZsXBr8CvGl5k
/BMHf2U/Wkn4S0S8pL0/+T+iBzWcPlFATk4+K8o3DULN+h6pHZPEsUI+hvAR
gpOXJ9GZu2URHjdb16oVC7tnc/84EvzQ0xfEbR+bBRdUmOnr2GJg/eKeYqkO
CgyetPeZSM2Ai5q7Zw42RsB3JlZvL/I+N49+lAzYWQAO3Zs6RO3iwCPrRcDz
agrYW64zuVmXAwcDaqQoguEw3LGkTv0dwf8N9/Oc5vKBp95mo6lYKFjm/jkn
QOJ2U+SaODmGAniTp729RtILXlh7S0U2U2AnTQ+kbIEeyJ2id8mS5UUQki0S
muOrCQzL/lzSIfz0TKVrZGhxPsi94tbnueaOA3wZBX9eU8BX8LORq1QJfNOc
qeAJjYW3shar6AlOsDnZ7XAiOQP4+Zsy4oRScFH9EuYn7QQPt7Q72+mFg2an
9pC4VxHyeleeriN58PEVY06LxDKQcq5gvDIdDS4z6qGLCZ7x0hHM5lpvg2zT
ZvWvt5Wjn8Fh8dQIgnNCRi4ciX2JB1+pv3qjU45mD2tTk15SwIE2D7sWzEPg
hq8H91hkgzT7w5AXzZHAv/NXqz1ZF9mt69ofyuXDj10hDy/fiYdvqwL7s0je
z6TpcnxboMuxMtvj3hWXIkh7MLiZrzce3BpaHncVUaBjdtN0mV8J1Ms9OzBX
agJKX4s9kgmuexir4FXHXwJ7m5oS/pglgtnuk+xOBJc+2Vi27dfzHJjirwuy
sUgHBYt+6XKyvn75mZsGTpfCOSbzqtB9SfDs+smvpoRvfvkSel5FpAwm9roO
X5iNg/yc/vwN4RRI1r/wYuxFATzxzd8tLJMOqw/LN6oUUMDS/NdpNvdyuC6u
xGnRHgMs+1Oe5flQQOg8x8O/sRXwx2ylzk+hGAg8k/lmtQsFoOT22aWaFeCv
lGZV4RgGvCEZkyYeFFCwN6k4mlAENhMWnQIMGSC+8e82+nSS9x8Wq1d4lMLs
Iv+g4N/+yKvz1K2C4MaBTl81zalMOPm9wqktLBu/WDzecYrYlTZPcyk/Sylo
udQ+sldKh1+3eSyqwyhQftD/fbh8MCR0iJ47fKIcPzNWpq4l+C26zPe64+UX
IM/+7GaxcRVKhHl01T0hfmrF2fattxwUHNm1vtKlgROLSReXEwVesV2P6goK
g8vnrrFLt5eh/Y8KnVYyfl6nrqCKcTxc0ry55ItAIcrH5hkIE3vjlejXMq6s
gCWVThk9BeFwz+9VU+dzCjgFrTx0VjMUzgp9ld9xMgNqC657Os+fQzn+IcTC
LQ7sOffCZTrCl29ct+Qi/nttpSKzkn864N+AUCnJLDAe0rChI/ZmvkCPYhdN
j8JcsJlNMjgH2PikHasas6ChVfrvLoLTrE3vRXjYFMIuzQMcqklZsNfKhOk+
+b3RQ0e2Qu5S4BhJdHtblQHHzWSGzYmdmz+VXsp0sgJsfaq/vfVPAyH6IyNz
Twmupk/8PRpbDep8Ne/3XEuFpH0HMypvkHyd7Db5wbcMHqX17/h1KBybWCK0
PxI/OrSr4aenRg6wyL7Wnxgpwcr7yc9svAluLO5OqdZNhU+JfIpJPyuRs7uM
xcCQjKNh5pEVlwq7mO8zPD1UgfxvHzZ5Eb6WF3ppZunNbGhYFTTYPH/tzcaW
w3Rk/pNnEz/7thaCgljO29QveRgwN2r1kjy3Xrxs95apQoi7IS6rHDiv/8x1
RIjwguM0nYF9C3QG+HcGDnL8TEdmE75vc+vzQHP7x1WThF9M1V7WLJWNwcjD
Etv6IvJBSWt/818St7N+KNBdHovEv/2DDoPk///h0fn8h9hhkaiqS1JgJPJu
aZNzKisGD4NehV/Ef4eFnz9ld/fC9kHVjwV0pVB2scKvMIsCr5ki1b/cewFL
brj1371ZBuvBaBdLPPEjt81XVgyEQ2zR7fZvDEWgdJd52KOSxBML02OsAfqF
1TMHlVO1w//bbz1J/T2WUn+P/37PcsKQO70qEidPjW3i10PcLvHU6yjx31Rm
iZK5RH9QVIxkvtdTilb0FfZrCU9hEotiYGxOgHMb9t/Q3lGKsUWy3MvI+zza
9O3U88kYMFiv0F3AVoSTRe0GQ2R+GvRjQqvy4+HGSWbmiOl83PDueSYPiTNv
hjy9riUkQnPuDstU21xstTegf0jw8xbt3uPTFckopSr27P5aRLXbz59YkXj+
/KSisb5fEcbsyL1951cWnDrecCKe/F9fgds3FeSLULM9NHbfo3xwZxRRWEL4
6ZJi1kcmUnlowBox6noUQeGxgYpxAAXKTv54WReUhk5lrJGyoQVYrHk0JryQ
4EC5NbdXfUvHV6o9wsx3y6D4JysvuxeJDzUuz0t2peHrWz+VD1+sBEm6TxOZ
phTodakSE6XLxPi8Wex8nY/G562eFhEemnnW9KNAeC5WqNGv5acvh2/v3gal
WFIglmr/qEe1f/hn/y5tGbJGM0FYIaD6t+ZQAV5lq7okRfyXmepHqEn1I/zn
R2ZUv8NnVL/Df353P2zJ90LzMtzc8qo6/A55rrMxaZzEW4VkMB0pDsU81tnT
lik5OBae3GJI8mC0fjFDcVoRJt7StdyQl4WBvt0FP8l8/p06tP6AeQ6mKzoz
5tRm48tg7+FXZH4sL9fH8m8j+H7LRZae5iykM3a/tIngkEPy6kWOw2nYy3NL
P3x5Fm7LP2G3meSpVPpvtbNSlRjbVKonuDkC3Xb2TCo6UEDNYu+Jx+5R6MhS
e/Z4SCY6ZKiMrftI/IV2LluOdi47hnYu2z/Rw9fkvS9KNyjLP7yZgSYaPhIS
XwnObPFqvdhejiktz9aUDKSidfrZjrckDjNJ5zqynUvGpwZCF430CoCxzbhF
s4wC8nctc7HBH2+sVzmes6ochvr/RCwh+avzmuL21hJ7VAldc7jHrAquyN5x
ZbWiQMrGvv7hY2XIx9C5Mb0+BT/uy+A7HkRw4zrv61xuPmgcdUcuoK8MXnKW
aopGEtxIO0+dueA8tclO1R6GpSl40aObqR5yoV3lVBhzPeGnxm1/UvmLkZOV
gbk0IBNvRqhJb0+kwOyX8ZbGW8XIbSObd7orCvQvVpxzIPx9psdL4/e7Ctyk
GeFTlRuGOgVPVJJJvhA+z5rjpFSAUcWSvXt/peHqXxJLe8l63b+27nbviQpU
nww9wp8chXEP1hWIu1Pgm5ig0GumcgxqYXtlIhmDfRI1rcrku7QapARuFJRh
p3mzDdP5BPzwlv/MYvKcL87xu8dkDhpvjjsRqp6OjJfWT7dUkbjRMm7ZblKK
No+FwI8jCVm3K3IMkPjZoiSUJ7C4BIVY9UILjRzRK+W+AzPJL6N+I51+K0tw
6eHPLMztCTgSOaXFSuZnjQbDUrn6ZBw8qvF188t09PvkZPeQ4OSkI3M7wn4V
Yb5XfhhdaDyyWljccyDfJX8t0kgyohhZXW66tC0KRrp3p/54kjhzNHNIsNyi
APd6jh/d9Dge8xpVa4NIfHMJMPspWpmDa675mnH3RONeqY89N1sp4Mpd5a/E
XoYd42c1Re5HY7Bq2sYa8v5cVFwH+6m4Dv7huuLDjEHWHY4QnC2T/DWsFHhP
RotKEBylGBDPtfa0P9pWDggLsyB8XTf0aK6EAnRK+Y+kp9ORSWrFmYQ9GRDZ
nfD1VgvJXwVP43faF2CBBF2U1REvoKsLvNZL/J1ne0Hej8gi9LnGuHjVy3g8
Y34yrYjkhdMxYz8fvC/Eb7mNF10v2eG+ORBVekWBCz//vthbXIiMDGHSY5eD
8I/7904mght7enWUL3XkovDmzrvW/bHoJoHlL5oocLWYqynsdh5+KQvqtBAP
Rhfdv8J/3lBAlHHizOjhbKTsKN4bsiQMNSVHTO0/EBz1d+ACh2AmUrp82j0/
2EHA1uW//xJ/HAo17jz3PhtFe+/6cJVFovuK5q9OJJ6I0M4p/6adU75AO6c8
uqyvmsc1E2/71WUcGI3Gi9kD1+S7SJ7tXi/hsTMThbu4hA+1xODA5tcMKeT5
2jStiUf5mfjt/BGWXT4xqJwrc+I6eZ+MhJnz753jcdV+IdtQFWvky3g5m0J4
pXGr/MGcVZnIecv6UlxCFLI9uBrxkPA45j/nvHccInHt7VFbfq1wdOIMlbch
cWaV9tscqU8ZmGquOnbpZwhmJbaxnyT8favpDdvJdToQENat0bUyHzoHW95o
vSU45Hm49waXEFTutGpT086CUN/u3ltkfLG1jyKj823hiVNGNyanwoHkmdr9
hJ8u+dbgxF0fhzb8EKW4MgmmqpuPXZ/vN23N6Fp2PR0/98dUhyhHYJPPUCA9
mc8XttNZQneScP/zLwoW1oQvKPeJHCTj5AfGGJpcScDj+a07kiU94PTTD3V/
CC+eSBLdu94tBlc13/imVBCJhxn8j/qNk3j+cL/W8a/RyBW2csL2gBWwxa2P
cyY89PSJ80xcD32QyzK58GhGCHCNZQ5tIjw94btauNq7KDRiVDfROWGKDoPL
31ybpEAule/jVvn/8H38x/c38ZjIsxW5oRXrUZYnn73xjv2xomWzFNAbPn2i
OO0+Fr3tCtvY4Q/muU8+Ks3O92sOPWtq0kaWt/2/XJpeYk3dwxxzMs7Ole2H
b+zihl1v+AGvROB067mjO8j7MA3vT2CgswMR5ZAqfUt32L6xdUj5L3nPJRvH
9ab00at+vYx/QwxOsU8bLCffZbsk/LRzmjPy3Ujbdyk3EUO1N8yokvk54Mav
33EzAlINOz+8EHEB4y3jXpfm60jU+gzWU+sz+K8+40Kt56AptZ6D/+o5xU/E
cjp2m+DK0p8u3xM80UpyqeYF8j7OakrJT1kiYPksU67yk0TwLVaTDh6lQJgd
fUZ/mid08PLJ7QhIgIJB/Vp38j6a6+NOqh54Dmm3tluEW8TAtJbYSqdfFFi8
xsQm/dgLEDtU/DwzNAA9TPSsTpH5uUqtgxH+9Z86GPyrgy2i1tPgGbWeBv/q
aaKCOqn7HvlBPNOZz4wOwWA9ujOBkcwnF+Xvz07pMMi7efXJsVu+UNbFFbyP
jDN1/D91Pyil1v3gX91PemdyRVtgLOjXCMh+VHADAcdrmRYTFFhaoWHL7JEI
b1S9xTTOPoRd/AahfD8ocPJAmPuXt0mwQ+SXC85ZYQgr3/SrbxTYZ9eWvuNW
Ovg1W6zZ7RYOc37y7+8ROxeV4LS0NkyHtM7X5sqNbng97Pa4+yAFdB57u3Hn
p8KFw3d484bDcU7kz/Bn4i8/VCdLHD5nw83EcqlVUaHgXbaupIPwnW9L+gQv
XIyBKa3enymSabii3s/8HeFHEXmPwprp3UHl7GohDqE8fO7OaMDxbl5HpfM3
g7U7/qZjHG6QKMKyS3fn+EicnD14idM6JgJfeR92FnPOx+gLfkJVBH+uoX1v
34LvbZV2lrlakQX2Ty+4ZpN1EDY09D9B3md6QFitRD0HisaXbMgxiIX08o3c
D0h+aXcojzt3JQ/OF2b9kWOPgyvJCZ9ekfGfUuvYcJxax4Y0Wh27mXa+9Sbt
fKsG7XxrBbVODmrUOjn8q5MrUOvtsItab4d/9Xb7qZEUGas8OFV7xNR2SRR0
xvZJn5uvt+TMhdGdKoA6lXa6Qz/CIYs55UEBySMu1L4AhFP7AvCvL7D04ZlR
T8K71z+vObA2KQw0V4X4fCLP17oM/pDeWQxX4+dSQTIQesWcVFkJr5E6INab
8KEY/shLWKhZm4C609kPG8hzHc3StKTbCNoCv6KTbKMh/N6zwl2ET13ubSr8
tboAkvPrdEZKw1Ft/dbvz+f3e1D7IJBL7YPgvz7IEsnZpl6mUlhXOuw8uz0K
erTWurGkUiCc2k+BE9R+Cv7rp5wc3sZe0uSGD08rWmyIKUPPayz592MosMJx
3Z0EKcKjnPRTav9EAMsixQutJO9fsfavpV9rjT7ZRtdvmZSgCl3hQy/Cg5ab
ugofPBaKTLN8Up7yeRhRsFI/j+TNx01lunUlVlDclh5ymikPW3/YqRmQPLiE
di6VnnYu1Y92LrVZ9MrBWxVFwG33mCWgMhbcd8f6VxbP37NjIKpbWgxbOT+L
jXQkQEQz75eHuSTOU/tfkErtf8EErf+lS+2XwTtqvwz+9ctkqP01sKX21+Bf
f205tR8H+6j9OPjXj1tH7d9BEbV/B//6d3TUfh8MU/t98K/fZ0DtD8JLan8Q
//UHV1P7ibCR2k/Ef/1EO2r/Efip/Uf813+spfYr8Qu1X4n/+pVBxgeC+Te6
Y7XnH3F3lxKc0eTT30DGUS179nDTtDO051Q7OQpkYmsY734k8eTZBlXRjS6x
8OkALL6Ul4EazplnREh+F1nPkFZt9hzahLyTn60sBe+U0wls2QSXzl3KmxvN
xW9rm5ubvdNBWchi6/y9pee2H+uNri9DjyXHHDyCQ2FRxUhKPeEFj37lsw5N
1+CPp67BYuWmmP6hQFRegwIbvtysk3FqxBzNmNuxFkmowXd65jYjBVgnfvcy
Zzdj5K/aUxulc/FVhxqHa9EYjNwoWWI3YQnjdb7LrhzPBJ2uN4FrCH8xoZ1z
nKadczSinXPs/aJTIXcuD+XfJBT6O7lh641TtnUkPqwe/xq843YZssdcMq9/
HIG1+ZN/xwnv2DZw/nDOvSr0K/YfDfuQgSJ+TF+33yF4ZqnATIJjFda/m25Y
xJiLsnlmh86oU0DjlZGjFbMnqlR1DdZvf4qZj4+sFprXjaedszu14Jxd0MW2
V97fk5Gj7wlHrFIYWhyQXa04Qsb/8qGXUSwLWb6nNedXemLapPrG458pIN6t
WfGS8PlocSNRS50MHNqzfTqC8K/f6gqfDjEWYZp/r1V5di6+LxlRTibvv6Wu
QutOYC4qeOaUvpPMwQeb+RyWE/ufJUStULoYv5zgXdazMgunuI5YOBB+arFn
F9dhzlQQ2Syo8Cs2G0ZfxSy2J/hW+nC80hf2GNx3/pp7t1ISGt6v2C88RIFk
2nkx/wXnxXpZQ2TEV6bhGX6bLLHQbNxXLnM4gcRnS+lfkrpK6TiutWLp2sf5
+Lr5Ads08dMTq2RUrFRjML08KINJMQuVVSpq5nXv9WSSLt1Z6Y5HeDRdEttS
cSmL6BAnwQO5y4WDqkXzABx/tG4qyoR1sjY8awmeN3RemnJqPBnX+Nw/NHA6
E5PN+bfN65Z/oJ3TKaCd07lAO6dT5x/oVLa0GhguZGn5DWXBgStqbQVkHdvT
35xurymHuVq7mY/LE+HQByvGTYTfdXNt+iIlhGBWHRK+aZ8XKJRzaF4j/Gh5
6LIHPnvS4WV5kk6hlBee9V/Xn0/yL13LMmOD2Wj82zxYUpqegFEjVWH5BBcd
0PseP+rzBqZ7bp0+dLUQdG6FT9UfGwODc6fol/Y0QA2zdsRoqwsICz4Ie7+F
/F+X3+JVHbWwS8ckUnTtY7jKZbKRXoXgnPiPexjGS6DoQdRTFw8H3C/gdOQq
iRt3vQcHJB+HQhcLJdZ1TT6qPeNu5H4938c0Na2JCkGZsWXPw0RLUfzz962O
xA4jaec4cME5jsVmjxkXp+bBh6m+DgXTfGC/+GfOktgJ0+bbN0cmEMZtu0wU
RgvhjdXEtiXO5HmYZazO8ipYVdL4hfFsGraeXR3uReJSfoTnQT+NWnjwTl7u
bWQtOCd+vl6WMQYVP97m64Vlw0+31qcxUIxerdEXFEj83OAm/W7saBO0B+65
e3dZMxiyfijynR4FEZmzvZfk/NC5OvqB+8MqNHYQ+lpsSfj+Ck2jE/ub4JfV
a7/flGbY1n7bXalzFAavUe+vV1twf7029dwB2FPPHcAl2rmDW2a7FGvCCvBu
yBaWD+mVKKwV3tV1ifCygsKDu5OzIPzGmdLbdxA6u0SPGxL/Glv1fSxUokSc
9WoZ+9+TVv/Vd3WNW9UnUlwEi6Kl3AUfVIPXDnEzlqMUGP6lkm56LxA+zjKu
mHatRP7tKyRn7Um8vbCH9cjaSsjte8N/XOsVzNQwi7g3jYGCjEKHW2w2andf
nz1aUocDumz8h3eTdbfpeTfzpALsXGu/4cpm+K4nOJzoMgYZnbLGdX+LMTvF
SJVLqQEX1zju2TcwBirb8X5jaTwwqrtOuTLXwf07x3+Ln6YA5+BVuT/nK/Gx
aYNHZEg9Km8bFNtA4qTH1oPpOelxWFkfccC+uwK4F+n2fSLvuaW4rWKY5G8x
owmj1zUVuLItJGy/PPFT2r3eabR7va/SztE0hn1qmOnPQKc1JezbInPxQ+5x
huWl87qmP/rD6ApgnId1lR1LNViqNnh4y1H+nSfCZto5CD6aHR751W9zdnMB
bDnxPnPp7RrYHiq57LMYBSTquScOeYfB90zDx3ZHq8G6MHr3KLG3MMM162Oi
c/Fyk9fNhJcId57X+I4EEPy53tx2U0wp8sW9FFrJkAPich+MRd0ILqLdB32e
dh90P+0+6Izrh5vK28Khp0V+ONWxDNiZax4vifzf/fYMtP329bT99kf6yjW4
f6RimP/dwjSzDBDcIGdxkOSX85ZvPU0rarHK5FeSHYcXsivo5CVdJHyBdl/w
owX3Be9JGXqmqBsGrIMCIY5L46Cz56CTAcH/ApXiZSFL0rF28ME+ukIfKLE+
ohtJ4swkbb/3mgX7vU1rz8B+y0K82rIrjftaGLo8vDisVkPW62vS2mAyDz/W
rtC8SRePuuk6r5cS/FbRJd890FSOgXmfL2+5EI04Wr1Ww5vEB9r9sxsW3D/b
mOkR2ZdSiwWzrQLnDmdjrk+4e60oBeRlsduZIR5yK5qONB3IAlHmgncH31Ng
rri7vP94Kijl6un4786CRzwCyaoE7w0njN/haktHC5OeobaTqdjGn+4zf99f
P21/cvSC/cmbafeEGi64J3QTF2XghFoavFe4HdP8PRdSy1tH11RRwL9sfx+H
TBpE7St6qf4pG2bOWWQZETx8kZrXQJGa18CAltduhNwJePs8FX0znQJnNuTj
zrCdJzcSvO1N2y/qv2C/qIy5QbzAwUJYliwZQPmdBQpcK1gzCG68s5eLx96s
APZm21jzHc0FkVdQGUFw4xFqHocoah6Hf3k8AsOWYVUqLGo9OMWaGw2PX18Z
O0vwTMJPFumrroXgeOituK5kLPxw33ckhOCrfIfRL7d1PGBFW0Q6G787Nn18
WPRslgJssytiHlY0wBGbgVKm3Gz4un0ul/fvGNRuyqwKWlUFbxT7f0usyQST
DQ+Em3RIXqDiHxCl4h/4h3+inUtTt/3KA+XfR8IKKN6QVDp07xNZr9kBjlm6
mVBYzM7dwVCUjL1Xk/WzCG75t59w64L9hKupuA7aqbgObtJwnQ4VB4Ki3X9w
IGTQcOBpKm6ERCpuxH+4UbJ28yaOF9nwnhnzHD+l41aT7cNFhL/8ZCxRkb7p
BmUX9/0MFMpG9UfSZzk+kfyLhswKR+PwAb/pXPUfxG27x0LKsiggbDL8Wa3Z
DY3XKK8PupEPGpJbzE6R70q/Ebt/+ZMACDhPv8x5TwWEMUrNdvsQ3JJ3a63E
nhkJy1tX+BMSymD5E5VjGrEkjrV8fc8WHIGu3jsVW9tL4Fz/heD4dAr8DVpz
Z7thAVatob9ZkBUDh9JFHPqrKdBJu68tmHZfWx7tvrY7Or+YBWpMwTOjZtJZ
Lg92cGVcLiS4xYq2f8x9wf6xiTERHh0zd4iUldeM+lUKtw40p+cSXpY7O+NT
sycEVXrY1B/MFoDWd6XnrISHXvv55kHwywzkZvN5YmgXBxe/eazM6KLAD9r9
X8UL7v8add/dd2tfLGyKCbWpTc8DI79ARV2C3+Zo+5csF+xf8uPfN3FoxBes
8pJ0LQYKgGlYjn2U+Jcp7d6rq7R7r9Jp915FzBgVlwg4Yf2E0cjuFZkQd4i1
bg+x860GUptzCl+i9UrvBkeWeGAPeeI3Sn7fS7tPinvBfVKTLL3Njwpj8FSI
V/ryGh+4/PS+K98EBb7KJEqLnAvH8d+Fd/tPpWL/ZJgPP/FrZDz+V6o1Hp7D
SoGCdalwS8z2/nz/15m2D6dxwT4cJy/h6ZHGcBCfkqpoupME6tsXx1Lm94Gw
ndzVNfcSFonZKW08GAeMHwTLnL5TYP3/cz/Rmr+WU6YSoSC8wi32SHsk2HAV
xK4j76nKxBITeckTin6ZDl73Tsev7CnvhwcoELr/+4Q9fzZYVuSdkLsSDn4q
M5nDncQOafsfuBbsfzjw3Z3yNDYTuNRWlW+b9kD6zculu0k8rEvGp0WKcbDh
TMeVtc+z0SDZJWk9yUde7yRc4+IO4/IzIbrxb0pxwwTTJT7C9+99Eo/e3hCM
P/X6qjbtKEetP+ZbBAhvneGR3cDfkgmaBn9SjcOi4YeqWMebDxQw35y12N2q
HDTuxaj6JYSC7UX+p78CCb/rn07tYsyEsdQGe63579L6aC9K8Gf0DxPRFJtE
6G4KdDzxMx9jbuxakVJJ8JheaPT+ozogeoJBXOBvJXoNbryxzY4CLF0mB3no
X8D7qtGN+hsqMPrb+FUrf7K+ovdXhCdGwHYj6/Z1PMV4iqFn0xDxi6W0/viN
Bf3xIzc2OdtleeDRrnudDNJ5EKS0msGPzIP+5v4OveoI0F6c4hihkwPrRoPA
mvjd6U2CJl03UmBs05zvq+YSbFozHmcUR+xtbWeR4rOXwJf+giNVPB/i1hXZ
PiDfFVRZnsWzJhU4AhV1lDeWYGTb05nYZArEH9qgm9zvDzW9BePm1gWg6BQT
O078KH7zyS8b2ZOgbxmPyWvHMnQOji+EIJJ3vFveCihFg7/Yj0111iUQ4Ha4
pDCD5Bfa/QVGtPsL4mn3F1ym9nNBlNrPhX/93F6WF210JoVQpKxakzCVg7tn
fIy/kXildnO3fmNTJnKXU7695s+Dc48WqywnvMllWaGfg0CC+Bb+hvuuDLb/
7WtHxij5nq7Px/46RaXIKwVw8llne10EscOk28LLLGJAqDG/qMWkHAeE3Rb3
+lKATyN3kSRLOjIqag7/OFAEWoM9hydJvBV6+Pmj/+M0WPyo/+K1vHKsKdh1
fL6fuExfV3RsfSoOHgihHxQpgbQVxwyr5vcDHzWruG+ZBt9VTg3465Xh1WMp
i+XJ+ElBX8bY9MLwON0HK/mqcii721jc7keBlDUsLDL9acB4Y6vg3PNCDIrY
x5FOeC7d/QamS1NxKLonzbb8RSU0/ZCIFrcifjeSmfKXMQ0Mrylm587mo1j7
2l2bif1w0nTdZRbouq8duT89vi8V9J64MasE5OKZd690/UjeYWIveCTCXoTd
7Uv/BihnwfPzaz4CWXdGWn/57oL+clFbgi+Hch4OaBwI+rqvEOxXzjXkRhG7
9bYq252UgnVfk9+wcJSBFdckd9ZLCux8+/DBTvkwfLPjUnznSCXotq/6xm9D
8u/0qz+H5DLQPeUcfep7hJxLlUc/kvWVpemBVy7QA1dI9fmw+GkM7mfMOeKl
WQTB9rbWm0v/t495dUEf88/v+OiUdffxhusn76Q7FRBoYPFyB5l/7tfGit/+
RuC9jU9i9NsLYd3p7qNOxH+1aHrRLTS96G6aXjTdHqYy9U3Z2Htgsu5oeizW
zDo+ayP+daaL3XLXUAgYBEffatcth6JlDbPryffepPXR+hf00e7ZhRSf2agP
N5TO234PRAjqabslSt7/pqjPcHV7Pl6pYLcUPxeN4jG2sIjkO45BBWb73Cjc
OSrTdOR7Hmy66simReLkRpr+8P4F+sMHXk4nFd/PxZQl98qW7zNC467qMeMO
CvCIrVBtLsvELH3ZJabrYtBkMudhHIl7FzKHtr1UzMI3Dkv1n38PQ3bud8Zm
Hylgzy8tstVbD6Rq04u0lHIhtNaw5xMZp4nW99m1oO9TSdOJvbZAJ1b2vK7g
0XfEzjf30TeNxmL7hZLI+fscZ5f007MohuPE0CatRbJJKCCt56M8SoG31LyG
VtS8hv/Na+snTY4si4baRh3BhqvxENO//549+f1MObUOX76gDr/ne9at5f3h
8FpoMfO5G1E4Ufu98QR53rahyo5nmz+0YOgUo24cultLbNcjz/WoeRwKqHkc
/+Xxn0LDgmYfPTF9sdlNjd58DNW937+VxMkLAdeFb3sngtJ9vNa91xNuKp55
WUO+q04icWhmXxRyjtfTFfvmoTH7Fbb+JgoM8GZWK30uhLo9+Wv5N+iCXZjE
3kiyvvSPPzzLXZYB50OXsCT+jEWXzeYJL+bPzVHxDwAV/+AdGv45s36Dc8Gg
K27jK3LvzCrFQW/ehBMk372L7qIXOeyF3MH0QrttS7Bu5KvaeN7/1mknF9Rp
f1FxHeRTcR3+w3WnqDgQnlJxICrQcKDjAc153FhsSsWNuIKGG+nMnGWaL/pi
vNYTfutr5Vh+cou1SQgF+D34Sl8FqUCIlWDDBWfEoT1y4EbsnO3wdIFidhTI
vAitGlqdiesfaatrke89OMTd/rSgGZfSdXB1GxSiaY3VPcPkMRDxShWQMvIB
oS2/FHlrc8HE6d4zB+J3cf6u7Ma7w5HzU8VqumNZYDlwo8OJ2G1S9Tf3VUvz
ME2lz5F9Xwh0JN9gHG8lcW+QR/rB6zLsnG3Yl9ArC4cmfdJn5u/1UNhd93Wk
Bs/5xjxIM/LGjy5mGpdIfLvYGVC7bX8jbq7fr3tlbSpyfbzwbukyCqyi1W+j
FtRvF8fn8nK3laMCT8eRgokM1GjkeFRrS+b5BYv1bLM1Tn1i89ox4QO2cyHW
YYTX1JaV2Kg21OMi8wDPuyfz0OSn8sF2BrK+NL2+wHX/V69P0NZejC63Bg8w
vRln/JmDCgYx1XzHiB+Fr17VlpCLMZKyEm+3R+Bk9WPmreR7BWDvl9/aZfid
5WycKiUJLSRiXoaSvMykaGDYeacUp4Se88x4JiGniTHPajIPVme5ZYwfZKFj
jrnxiLY6mv3IqztAcFf44+dGfPsrsWL6qtPsz0wc/zrlQ3lEAfeMK/USEhG4
58MXq9BtYZBxPSQvhODAzf9PPXnW9JNUsPQjaLefTrijkwA/sp758RG8zXXt
YcGAazUGYj5L8708PJoierdFlgJpoRVzN05HgzzLROWXrmxQENNUNCTrfoXb
wf5eoScyfFijoMzohbaJxtaDJP7wajt4P/kVgqbWnisjZcLQQObX6Yu/yThG
z6Iq+QvRh7VbpZcpEm8sqzIdJnZu0xKo6vw0BVP5NTZyNiXhY6OyKKfPFBCh
1auPL6hXczp+FM8LzMYr8sd+D3Vk4RK1rWq/58/Jip4QHHEIxSvi7+JYVnnC
93v3ouWnCe4y3niE92E+au3561lckIu3jj5VnO83CYWvufn4gTvEOn7m9zdL
Bfdm5aomEsfYaPXtcwvq2w77szlDbGPAJvF+21neLBgz+LTxLMHP2mHL7ZY+
z8RzM77cUhUZODL1994Sgsc4aLpzJxboziUYnI1cMZmGNVkTvx52pGDn2i+/
PpNxOOksj/muSIHPH9zWyH7KBs05vffrm0mcj+gy61Esge2BGv0lJ8l6fUuy
00ijwDd7xzer+eNxxfhbNfv+VHSIF+C+SeyEnjPL06DBHx765V2trvKBQHem
bddmiH/1fc6Q3ZKKS149oLyUysGWe8W3a8l7fn9zjOX2oWRYt5VpPG5lLMhw
sqvFEr4g4tXKlOORik/9UvYaBuSh1FxkcAzJy53L9gV3y+XCRRZbjvqUTDD7
W7VrC8E54rR6e+qCevvOvbl3jeUKYL/6IUu75lxQ+6v/xDqe8NPzryiHZHWw
NTqB7mFSIj5SG+JjJ/H/A03n7dYCnTfeTYWsuWVOsJdfcMLwcAy+D4n58pH4
49vbscsubMoF1+6X2xT8s+D3W3Puk8UUyJ8yLa2/kwbb5V+rJ4faAts5ZaNY
wrNsk8+GblJJBxuzT7o6P5LByHQj/RiZf5mnM3Fe3M1wcTTsiLgTgtm6ywFB
2WOwSGjR2h1ySch6d3W9amk6RlcuKprfbyO2yXqOfWcFqFtJ0ilqZMBqhr7P
LARHKan1Slp0h6GkU63rHqc0XGm7oay4nwJRL16ZWKytgUnyKgYD2aAtcvit
whniR50fpZ/3VMIr+rK6U5rZkIF8zY5aFJBj09so1RcJnWNVQt6SHuieEK7Y
TfxoEU33rDeJqntmQtM9a9TIHtNbUw59Am+ZctxTwF46z6nOiwJSQmMrvt0o
gajoE0GchN+4HegptssmeaSfPyzRpwier9jeOxwTDlqfGrbO138ei7DIhlyt
hZHfcmeDBHPBVNXu1ebDZD63Ppgrm06HXedvDB+8agkX9RPSxAYpMFb5/PcR
2bfwW69pU4twFRQPXGpOixuFLt3HabxXw1E/dJaztiCa8PSX+pGEz646/MPb
N6wZXvCEHPJMygd7g4tqV3PHII6mV3ZugV7ZtHvpKZWA17BujVPJYZVsWHNc
9axDxBgksphzDIwlwK7xYxH1Vo6QuIuufB5vbPUacPx2oQEOpY+uezUYBQey
CkyOchJcYfr64tTLAjixxZ715NNUcNCQ+s2IFHAzW3bW26cW5p6Zx+w29QLe
D/1Kk5cIL3OcbFG8XQnCS2Pept0vBCsjJTZpVeJHhe3tf1+UwaePSQc+8urD
roc1uucIj5O1fVd4i6kBMnzGTkQxlEHpz1P3Y9vGQN81ozz9SQZsVm8JzMiJ
w+It5UOtXRQIfvdqpYhJC6yVZDv8+3gVnJ5hqW7ZNgbLnZwDVmzxhykno9u2
Ixl4xIDJJJngrmkH/9nXx9+C5j4Hi5sHq6DqjqJGZ/woVMqPVJA/8XVH0tYe
SfP/b79AhKY3pbpAb2pCe2idS1IrnDZlru3wKACtk+2sUuvHwE9QxOlKVyoc
e5Ukf3giGSrv7RgSJHhAlKZP1bhAn+olTR+s48v/1QezpOlW1dN0q4JoulVG
XwO9kw0KoWnw0J0tz3Ph2p2MWfEYCnzKuChyz68WWD6Ubk8Pj8H030KK4ecp
cIymc5W8QOcqaPpv0m6tKqjj7VtvOVcOGad15tQ2U4CV3nnpU4ZS6O8x51BJ
TkeRsOjAo4TPytF0sTgW6GLZ8h9fbcvdCNED4f4DT+sAN+qXBWqMwaG+oeZe
q2jQSvoubN5agLbXHOXNSZ4SoOloXVugo1X71kv40vBrSD6eUPbxYwMY5mpZ
69ePwjlan0hlQZ9ohKZbxb9At2oirTwR1rWCYoduiaNtI6T/BhXQHgWtvCQ2
5cgULNG3mEl9Xo77Q+5bL3Ij30vV44KbNP2uMzQ9rp9UO0FDqp3gPzsJzZX/
HsqdDyfs8haFHKyE4D+5D2RuUsCCplcWtkCv7BtVHwx1aHpf/8bfd7/raKZJ
MeyKmJj8eakG1pY8f79+LwX2/dasOC+cBVpX7LJXninFiD/DCY8Jj5ak6YPJ
0PTBftH0wa5cZRv4zVoMRVY3TsRAPVw9rbz8w8wYLKXphhXTdMOu0nTDHpRr
Sjf8tYPu5wG2v9irUdxF4dKc8fw+hDnPvSFJUGVutYZtpg48rXbf7helAHP/
8kdrPsZg5JFtO6ZS6nBwjMfuw3GSf/8f/bHGC2Hcb1hDcYVrlvHx7ZUwMnim
/KkziSeH99CbjOSi7cxOiAp8hZzmV7YpbiBxg6ZXtmyBXpna3fgQ5l0FqL1c
WcLNuwTOZNDZXnKhwN5PnNziEiU4nRRt2ileh/SLGpSuraSAPE3fjJGmb+ZJ
0zdTpulZvV+gZ3Vn0f0co3v5mLp815pZ93LcsdRe5YY+BR7S+mU3af2yK7R1
5Duh2+W79S023G+y59lZSfCJsciLolEw+nlrYEdOKhwJ0I6p6a4Am0GGoy+t
KDBKtUO8RLVDzKDZoc6jAoFtX5/BiLjxZMKVUmiYrHCrIfFkKeWKaO2ZFmT6
vOpR5Jd6FG7lT9rWMApikm+sroQm4qyXnVq3aAl0y7Ir/yX8SF9zfKbpUCPu
Pp2wXW3NK9zYVDkZqDoG+0sS+JV2laFQnt7JpamZ0Mz258w2DwocXTxh/2h3
NVqaqGyU4KjErJFhMZ8lFLhs9F7q3qk6/KJ3etj1mz+c3qsr/EGeAvWdoYM1
TwpwZ/fT4Jy/ubjoDWXzERKfm2n9OLMF/bgiyTq36JxYlHuVHcHtn4BWfjOq
dkPz/f2f51xWvUXnP+UcFykF2LjZOXeIfgz8o1UPW/9txFb7Wf0SiSLUPp3F
O9o6BqudJYoPO/jghtuGl2FVFhiG8N6UIHi1YrLB7lnTa+Sb0/2hmlWBSR3m
ub/lxqDj5/XdHPHZePtDwsMq51BgyBCWciQ4RLA3JEE4uAH7fhz6radejuyu
v8frS8bgAk0fbFHe/9UHS3u/b4l1TBUGFgSsq3qMWMDnkuEMFAjV63F3S67F
bwyPpvZ3BqLLmi9qihdJXC0ofmQrUojvN6gXMBkk4uILEqZaBJf+pvUNzRb0
DdOWHyye6EvG4D5HWa9bzpjluKbswjjBCSMnhY+3NGP228hf8YY5mMC9PRQK
x4Ak1dV7PzugucMfja1KDsBwnfH4a2K3flKBD4Z0X6MGXf+5T5bFeJzD/PDH
52MgnjoZEG/5Epzajjkxvo+E1lHL4QbCX9jlOmJGm4qRX2dopbpkHEbOuFpp
5RO/4y5dPiSfjgcEhXg5lO0x6/W1CAuyXsdMVn+wO12DgjINUofZM9H1mbDH
fZJHztslvuQ/WoiNm9o+2JyLwcOt4X2GBMfG5S5Vzd5fjgdb/FYvtUxFI7sb
ycuJvZ32vaAqKliO5++J9e3Ki0eTNyvHD5A4xrnORWClTjZ+9syRXPTFE79L
K0lPE54bQetjsi/oYy7Lixgz9fXDhPgNkhFXIyBwi79+JcFve347ZB3vq0YV
W3UbD5FclOAN7gwnPEuJpn+ltED/SnBa9uMNtirkVxNb900wC4ttlfzD7xD8
EBItG3UtCkynDD+9WpYBXTuTOviIvYkqB2is8avEzOsxbtEBWci9YmpoTJcC
/Z/6dbXbEqH70Gx5DV0GZHHrdKsTHPtgscKGDjNfUN627i5zpyds0VVgkSc8
jr4xOtl7Yzqq5+Meof50XJwUJjWvf9W4urArOSEd/zio3f/zWh97vpw2Wk/m
vzhk8bdvV3IQHhX7rdLIxI4TStop8/1EHxZ5nuxQ3PDs826+T+5gvmJntwbh
ZTuyT41xrwqCqdr7Gt9L00Cgr1FsL8GTPiFNLfdDC/F7j8Da7Sm5aOXlfeEA
4cVraP3ZRwv6s6sqr/o9F8tB3uD9S9wJ35/+sLp+N1nfc6wP3hWGpcCyhPj4
nsW5kKiQx76nnvjL6rvX1h9MxZ30rI6W7fH4u65CWYrgq3WK8hHlxqmgF33F
tpw5B37Y62lnkryspFMyM/vYD99Ulr9U1HRHZTAwMSXz89u70nlbRzy8P85n
/lc6DeLHi9zoyfyn/ziy7oJRBSzVe3vmmkUG6H5dFvzCkgIxz5R4axhTUXbP
hivLfPOQufZb45sqCph+sTS++jIJ6CsfZtzVS4APbh/jrL4Sf/HwVT8rnQud
HZ1NK9yz4PXbePuWIoKXeBzf/dCLwXEDelubuUxsnBNZWkvixpPGG7+3jOYA
v3NIaiF9DvTl3V35Jn/+vsj/8FxMovJc/MdzKSUyfYtV8iAifKf2z7JcuDO4
eW73vK51j2GVpLU/HPuoqnZuhz8+Wiqzb5as16WASjm5HdlwS+ETZ6tDFqx+
7PZzdwUFrPYOPeiMzIBjb8vuJvB4gHo1g6Yref/qZ9dnHe6kQvFLTuGjkqmQ
defIJX/iL2Y/upPWWpaQ9R6YUNydBB1XKzadTabA4SwbMdesEGDNPzZl+9UH
Xhh7Oc7vi6ZMp2xlOtQMIxVmv6t2FkD5Ko7m8YoxKDGcYQ59VAlcdpe54/dk
wxm7k2ITxM5dtesET+/TRtYjz8Sqx+JQoODi+Ucknqyi6SM9WaCPZEitn8Ax
av0E/9VPurDBbZK7EpZYq44NXMwC8Z697c6PiL9Q6zMgk/af+gyY0+ozbadP
QPDxUmgSdI8wKk4CQS0mvUME364cL83Sky0DyTnD+8f3JsC7bRPmx0IpoPms
a/ff83mgqHdyuO1NFLyTFei9RPj+sq/DwmeP1IK+fhwLKOVAC/P+zdbiFMgS
MHzX1REHg+3V6Z2XdDE2drDxCXnPPzW7PgyUNoL7ovN8u5cVw3TPH++0t2Nw
6UGeW+sbI/ijJzp0SCwKzzbyHWqd/F99IUGavpAtTV/o5NqyWMO1jXCGq1dM
kykVTs15srEzU6COWpcDHWpdDv7V5ZZT63jwbeY/dTz8V8e7uMM/YlNsNgw2
RD5x5Q/FLp3+HiT2ufEUy/TFBk/I1Ss9FnEgC89wGvueIf4yGTQoY/n7Ja42
P/fSkicfufk1RMJfU2CFkE5CPmsJ3m9Vv7Qi2B9TIw5HBBRSwFnBq29UxQ6j
b0WtTy/PBo2WTXkrCU/hf/G42mnQDtJbrwclHyyFj7O+8qxZFMj4oVZnfsob
VpdGBR33Kwfni22cMS9JHCiXdE7mvI81Em9XOYqXwYX6D/uuJZI4r5KvLmEe
h/qtFzzePyuEikhBz6oyksdrz8a/0StAAYEdD7/tj4KA32F2lbUUeE/rvwcu
6L+vwLh88cI0lIjkj11f+wx/Hm9T7Rgm61so885GOgxKLvU5NX/Ig9JitWZN
8r1JU3s/61UVolyB3vQWxxDUSeBL56+hgBhNx4Z7gY7Nhahsfw73QrxYovnj
dGQE7up08qogz2/vUKZYLLuO01V9tc71RWCxRKNRjoxTfMlmSZVAAfpXrj/M
8T0KH+x8sW/+HiLWUxllf8ci0JhDr8m9KBt8m7gPzevw2x1iqj5cnotLt3Rt
+/ErGlM3shqeJe+ZyTq97opBOtZM0aWfr46BV9OPf7X0UEB9Q5crw1wOfmth
pb/MH4tPCs08SlsoMEbbD1CyYD+Awpv4snKeXHzKycu7y4n8fuqpEwP5/Rqe
11MWR7JQWtFIVjdQB73P6HvkE//6nCA5+XBTNrKv547m9InGgLZOCS3ynl9u
T7TsaLyL75e4MjNbGUMLS8yxpjkSr2T3vS5qi4VLsSaDYcOZ4GK9hH6kg8Tn
UXWbtdkJuO7BqsUvtV/gBqcny5aSPLu+q5m7/rU/+K+a0Zk+ng1FmcnX1Ui8
cqXtN9Ck7TdIo+03yOy6bPXBWg9Hrr/VfPI6DfqEec6sGyH5ut/Ve+ZaDPY9
e2StPxCKnJkp0vPngOx0FZSUW7zw1ivv0w9s4+B5idnTbT8JzjQ70y8vEI5p
bhcPCutEYLRL1rZx8ryFtj+BZ8H+hOXmdR28+WEYluoXtc8kGr84vtwvRN5f
+OJV+xftXri+si7tVUkABFrSaVnPUKCbpsfSvkCPZVrmp8NGC098rbD4pdwz
RygId5XrmaXAJss3vnszo5BZrYRj25YUjPf1dDUneVnlWfqX+OZUgtPk0+/9
9IG8FDd6IN/73Gpu0+1taWB4uXrHNv14oDd+yplC/FpnpPED018b6BykW2Jb
cA6DcjXaIsm63LZgb1x6IQ72eF8xzByaz59ToyEEP4wz1L8p0naHRS3R6u5R
9vgkWfm7FMGN6ZZrz8iERkCVRn1eRG8sWPSwF8oQ/Lla3jyD51ggsD1P26vn
6I3Xj3ctPk2+d8v/s19iqGCtrcGdIOg+4OTCOxSKjwUlo+fPT7GsyA7dEB8F
9q+fxEidiQKpO3w/3Mj63qPpn0Qu0D8RDztZtmhTJPiMD3sYLA8D3mr3ih3z
+y6y1tf5NjjC8MTyAf+KNCxnPNrqS/z9mZbU3VdG8dA1dVTFXjQINsfv7R0j
45dp0qU4pTvg9iCu5invXBxWGpl0IPZ8r2ycq1uoBO7ynjvzuj0cZBzWHArI
pYDEqqEw7xPZsLjpL6fd6ghweX1m83ESV2/vvHnmh0o61MWXKDaoO0L9NZYt
CmQ+jZDnNF96Nhh/Snob0RwDDL2qh9+1kbx8aV9IXEwWVF4s/CM4egyWTX0R
jyDrdejZ4kUxchmgWtjbV9rugY6V3iLy/RRYtNkrVK00D5huf2MYlogDb96Z
RB2CozbT9ECKF+iBnOkaZt4kGAfjPQw/nLoysagr9mY98bs16nvM2bfmg2CE
b/ZK0WgQtsDbZgRfeXDdn+aPs4btx3U5zf8W43uOWY97BDcKcGyRvhdUBL4i
JbZtEpFgXphl4kbisNjr+B7X1+7o8uYunZJQKTL9jLdxITxo6dy2Hn3tSmC5
qPD4o1ccMFj4DQvZUEDrAlelA2MGjAyUe6UNxIJJ17boUJIvZN8e5qSsKwH5
wbj35h/9wVXN00+f5Jdcmo7HyAIdDxu7/Vuzy0qg4yu/V0eEAsw8nDY0yiM4
UFN544NdBdDy1V2MaywZJL+E7y4i71n3g01+UV42yK6943a2Jg5LdOWuHCH4
+XqHWNfViSIQOyvrq34iFXLSKztX5FBASuTEn41HUuBBETOLL2cucnZMxouT
eQ698LX6h3wJfD5+QS76SipkVH16okLyFLN7+VRevRuM5VFMVm0tx7jHh6x/
hRO/KLTJfv66FF7RKz4Ldk6CLwkq+vrkudyqOgHndm3YlFJvaR9EeM/s9Fnx
EAq4T9lNQVw5WFsrfJ/FeBiY2vDW0JMCDQVyHvwjbJiWI3N/2L0ULcsnRw3S
KbCbeh890O6jh3LaffRGGrvIX7q45HwZcq3Of/d7bKfpMCxboMMQwZgT4/G4
ApZs+cw/PhwAxnFmV/LJ//Xes9ZlsCQCHixhi03IzQJbflWxi4Sn9NB0G8IX
6DaY0nQzTBboZgTQ9BxmFug5JA0O1d26nQLPPa6pLJvOgoRG3QFpkncqufeL
nTFMA962yJy5ySKsvtGmb0DsKpSm/8C9QP/B9mCAc4RHBtxSU/mxbyQbdMoz
fBmqCa7o+tb0ICYGGm328cqnlKK/1KB5QCwFsml6EW9pehHlNL2IYsNjv0q2
5cKtzA13OjqyoaWPvz3xf+o693Ao0zeOK9oiRWG1FXIoEqKSQ3hCVksHJESp
FCmKJLFRWBIla5RDVHKaMQ7NGNOMIbdjYUMOHawccypqQjm2Zp9+M66u31zX
/v/+8bzvcz/3c3/v634/X1y3D9SXpxMcUlGH+tezNYNV0HL12fLqaHy/iHD5
EkJ8fAnvp7e/hfqVotnulbda5+jo73CXE7tx/anEm/Px55vz6ebxHJr5eA47
C0K/KgZVIN1MuaipSBpa467d9jmWjTi7Bm0DEqlIseGOkto/LNiaRortKGUj
Rx7XgsLHtVDkxgnc5MYJzMdJTO3IkRb7ElDdNLHzsOdjZJZ5m/olD+dVHsdj
Ox/HQ47HwWDxcTD86dU9bstKQOT3+wECQyzEdKwaFcLvRTgXJitDoCL7A/IM
i20VsFZl1XvtJDb6asLlZvzDx81gKrVS77QwgKimL6/5qhSxDseOReD6vJvH
07Dl42nUz1xtQGkUdPzRcYuY0Gro81B+8jkA65TKYrMS/QI43rfDg/q2HG1n
fyK9vov3d/XWnTOdFNQfS3iwrroSKm0p9Tk3sB7hcTms+LgchbSSwFWUXIhN
MptjNFWh9MBVrZ3hOG8H356qC6KjYbJTzYACQF+dx9elWd/9mrkcjwt8HA9Q
DMp69qIAZI32DgZaVKGX9nsVp0PY6HyxjvJcBwt9qVsd/kiCBccWBam9x3Hy
hsf9cOHjfvTyOA+7+TgPihRTrWGsxyTVp6tVUphQx7yWnpbDRsq8eScTvnkn
rX2HZytkqkG8TWJ02IcEj2qoG3bjeFg92GXCVqJBUitxyyi1CA1rkSzjvvtX
cuMQTLhxCPNx6H9xbnB7SDb8FjjY8NSjHIXUfKOGZON93Fzbsae3DGouR35I
laVBmcx4kh2Oh5eCdQLjBqmgq18p11dahdzT9aT/iGGjVie/aCN/FswWrF0g
cpYBepaXfv7+38qOb0UTvgkp0Jfq+abidBWaFCb7DeO8xNoswnb3poFC/xBr
9yADOJMOUb44nxj1jC69sJgKP8PfJ79YFKO5ox4jYnj9C4423vUKzIN7mgPL
sj/S4Xg+h2nUiu9H3jxVKd88VVCCjOCvsalgbOYTvU+XDn7S/XPB+J6yM2rp
XtBfBQMhN0S9YpKB06EtuBavn8HznZfi85137tpx4UjOaZD4fK2YcLoctY1E
PmmgsVG/YauUmFkluPl8zsgyI8P0rYBAZgKu2+v6iolSPujI5Pjh0kWVaLEN
49x4BhvF369SHSVUAK1H6h6xMRfG6YWuailsRORxMxh83Iy1zWG1JeFloEdI
ITrPUMB4gbSkOd4XhkZTQXMQCSxlP3b0nGOhwskPorU4bx9Tme6ZYT6BtuVO
ZGbvIxhbej49nvlj7quWb+4LiQsYt8cWw8FXla/XkPMhSVrhxPc5lkvEkXpm
GYB/44fZs/fPQGCx3oWCMjYa+32d7OtLDHAn1lFpYvmgZ8VRt2pkI+ORbUfj
B8oganSf/eLYB9DYdyP0EM7ztdHNtWH1NDjdExe3i0GGU1pTZJO3P3zSc3k+
6R48n3S3ezWuQ9Q4lPmwCbVQyvB+r1SJwOu/Y6FsKq5bAm9vxWsMHUqH2o0b
Lmli/bWKkLii3SEInOMIKiK6JcjrJnuuA+fbgviYrcX3S4Dzx5E9ueuJIKkR
Zq6D40pgv6fgnqgsGC1idd4kM1Al3cBxFMfPoufVXdqCLHCpcTaIVsI6VUxM
nvwXG0n/xxyafe2xHQl5DJC0sclxSSNBxK2Di51a2CiAXaWSn0UH0octvWSX
KJQtZB01iXWcFo8LMcHHhcjvkr0sLFMIEyR6yKeu/WDrSt2cO4DrfynTkl29
dDgSFxK2I5MIowSTTENcx448yattek8DpnHcoQjZWBAR9i5ajJ8/s11VrWzR
Y7AUtu9zcUoHzru57jJcx0rzfL1d+Xy936w0NYwRv4HUIwXFn1+go7YlUgv9
cb26z3ha39mKDL0dljrjWcnw7EBqvgbWNY7nfNYlU8KBc/uTnsYyGtL6szGz
eYiNIrtGIhNEsyFU//KC8I6HUBMtumwLrsOJe30mDr1KgzbJm8JH/TJgcc/I
1UFc5/eZDrVLRj2Ase7WhK1CqahHb1BzNdYLrf/hw+50x6+SbJ4IVrfqntY1
xaPqhZ0Xs7EeWcdoEguJzYJko90qamQS7DSyDQ7D8UPXfmEncDoWbnlttOtM
jkTu7YE9aljvjNG0flFKzIbLo47VZ8rJcHE6bXU0ruc1zxS21BcGQ5mmWzDV
3gUNvwueLMTfZ6Wrpsy7CgoUnW6Q08Pn+mDiqebkdz/8pj34/KbrI0YGbNZk
o8Brrw2uvclG+YZtihSsU6QiTvaflItEs97rZ5iBf0LrZ197G7yevGwCSdUu
CSnsn4jQ5yRCeo5eiyh+r4AGr872aKxLF+5ZEt2QhZQochqi+LvVSOeZxEA8
Et/qGD8TlwEZvlevOU3i88XVuSiXq3PRvM4NUhZyeZYYi+TF0lQHhLKhcbVz
mgDWU7WK6tIc0SzkH7DP6G18KtYx+otW4efLzX85kR/mguT2ZyQcekqFVtNt
ntpYh25sGw79XENG8gv9WZa0u+i5AcdyDu9vykuvMFJdAhBnQ10Ly+hQ8XxQ
S7mbjaxTlurKX6EgP4VLxeeD7yCzs6pzmz7i+yXYTeJ1NBG8qEefLu8uhPAp
XS2htz98kFfw+SB7TnjHDL8vQPVwwzrP3BcutF1/HIr1MvF+4LW4w0xku8GH
EP2UhNyKPyVr4HPUzOMG+PNxAw5w+ydomNs/QfP9k8KmScQxLUCzJ07JN49m
wWNDl+edOP6Duf0ZNLHmf/0ZNN+fcbROOUm6lI504q9vOpj6GBwkPK3n8Hmc
OKsjmZ7PQlI/lUp8s8lED3OuGnzXF6cC99xbJueNIk6tjTG2eAJXvPoHFXG+
vbtpiSXJvQQ1jRsmJVqlIwnztV+v43ogfcx1ctydAFSFX+WuhpSC9YhbjiXO
VyP6DjPCxFK08LzVsxcL0pCvTALlK/4+x9scLN/n3IUkwwqSrVkREMd8Nm15
+eO/+/ac///vvn+7kft602Jk3Pvb7U87MmGFhBzzAF7PT9y+HDrH7cvBfF9O
mNvHQ8Dt44Edr483F5Y1OSVDAGMhqVrOXxWwzMrPrC+TjUrs49SVd3qCzvKp
BylyZVDZLbWEhu9N2bQHV6arolBx6KolcrZMUAgd9tXFuvVfnsw/JA==
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.4932022609153934}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
     "mPosFirstCell" -> {{0.9, 0.7}}, 
     "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
      0.7, -1.9000000000000001`}, {2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
      0.8, -0.6000000000000001}, {2.6999999999999997`, 
      0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, {
      0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
      2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 2, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Function[$CellContext`k5manip$, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
               Row[{
                 OverVector["q"], " = ", 
                 
                 Module[{$CellContext`qm$}, $CellContext`qm$ = 
                   ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                  Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                 Dynamic[
                  NumberForm[
                   MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
               Row[{
                 Text["time, normalized to one period, t/T = "], 
                 Dynamic[
                  
                  N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
               Row[{
                 Manipulator[
                  
                  Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                  1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                  ContinuousAction -> True, Appearance -> "Open", 
                  AppearanceElements -> {
                   "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
               Row[{
                 Text["oscillation scale factor:"]}], 
               Row[{Manipulator[
                   
                   Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}] " ", 
                 Dynamic[
                  NumberForm[$CellContext`scale$$, {3, 2}]]}], 
               Row[{
                 Text["Angular frequency \[Omega](q), selection:"], 
                 Dynamic[
                  SetterBar[
                   
                   Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
               Row[{
                 Text["number of mesh intervals "], 
                 Manipulator[
                  
                  Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                  Tiny, ContinuousAction -> False, 
                  AppearanceElements -> {"InputField"}], " ", 
                 Dynamic[$CellContext`freqMeshSize$$]}], 
               LocatorPane[
                Dynamic[$CellContext`qPlaneLoc$$], 
                Dynamic[
                 (Graphics[{
                   Lighter[Gray], 
                   Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                   Line[$CellContext`qPlaneLoc$$]}, 
                  PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                  ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                ContinuousAction -> False]}], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                Row[{
                  Text["mass: "], 
                  Dynamic[
                   If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                Text["coupling to neighbouring: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}, {
                Row[{
                  Text["horizontal: "], 
                  $CellContext`kLable[1], " || ", 
                  OverVector["a"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                Row[{
                  Text["vertical: "], 
                  $CellContext`kLable[2], " || ", 
                  OverVector["b"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[3], " || (", 
                  OverVector["b"], " + ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[4], " || (", 
                  OverVector["b"], " - ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
               Part[$CellContext`k5manip$, 1], 
               Part[$CellContext`k5manip$, 2]}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
         If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
            Row[{
              Text["coupling from "], 
              Dynamic[
               $CellContext`massLabel[$CellContext`m1Sel$$]], 
              Text[" to: "]}], 
            Dynamic[
             If[$CellContext`rawNumberOfMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 
                 Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]]}, {
            Row[{
              $CellContext`kLable[5], ": "}], 
            Row[{
              Manipulator[
               
               Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                Dynamic[$CellContext`glConstKMin], 
                Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
               ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[
               NumberForm[$CellContext`k5$$, {3, 2}]]}]}}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 8}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1: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
FXbU/ypCuwc=
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            
            Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95, 
             96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 7,
              6, 5, 4, 3, 2}]}, {
            GrayLevel[0], 
            
            Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 192, 
             193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 160, 150, 
             140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 103, 102}]}}}, 
         VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0.05387887094889892, 0.47483381708604716`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
        "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
         0.7, -1.9000000000000001`}, {
         2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
         0.8, -0.6000000000000001}, {2.6999999999999997`, 
         0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
         2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = {
    507., {249., 258.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 8, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJxllmlQU1cUgIGgpQpUKFoxouMCrUUsWooL4mNTKrZYEFAUlR0VgSIOa2Vx
GdSKdqgyKMrUomIlyDLgMiC7MYSwJawBIiDVYrE6IogCUmdyzs3MvT/y5xsm
jy/33XO+Rb5hrgEaampqoo8f3sePq9HVO7W50yqc07vGJoLHy9f8vmG+a5ic
i6m8GJ7YrUa4a85oRJBuB2dTt9QzdM5YOXInY2vh4B/tHP/L5Zl3nw0R7m04
0r1tVyd3MMzIwHijjPDsk3pGpr1ybo+Sc8irsiMCgj+TcwbK7yE82vlscNlQ
O7de+VzCtVKtfg78oZ2LUv6fNsjPr+nqXS/s4MCL8KNesasyrbuQVzxLnX99
cttIuYNHguKvwjbii/y9T/JILL+d+CK3XW3Xcsm4k/gir3kZ9L1Pn5z4Ig/0
nS0211b5Ii9wnOft2tZGfJFHfpiaejHcQnyRxweUBAs+7SC+yFMe8YYDjYkX
4VleVqMGnSpfNX7JnxNR/5Wbn21+X+0lJb7I339rIqh+o/JF3rL2ZnvjzC7i
i/zAltR1o3O7iC9yfU3t4cv6HcQXeU2SzVTDOynxRd5rrhX/SYaU+CK3iwgU
hajLiS/y3U+NbOou9BBf5OsK7b4ajpMT31WzrMcnHfvLr8Up3BUhTcQXebTb
s7q3QtX7jFxs1eC2zLSH+CLfXKD9zUlflS/yrf5rwj0PyIgvcnMHQa3fxVri
i3zDAqFl95CM+CKPSY7Q1/HoJr7ISxOXTD+xUUF8keu22D+4Z9FOfFNnTzhP
7hWVz7C96hJ7T+WLfPnrlUL1KTnxRV7ZLvfO9VMQX+Q3LGVjfqfaiS9yw02V
6TwrMfFFHiqQjoT9XUJ8ka/6Jdau17eV+CLPqdF3t+AriC/yhh2e6l9bqs4X
ebSZ2olkRxnxvabkXCxw9EUuge9BX+QCeC76Ije/MjO1WNhKfJEfBy/0Ra4P
vwP6Iu83fRR1Y0kn8UXel5/b1nK3h/iS58K5oC/y6XCO6GupPHdOG84dfZHf
h/cEfZFb5Mx7MTygur/I7eE9RF/y9/Deoi/y0pfqg0fONRNf5JvgXqAvcgnc
I/RFHg/3Dn2RZ8M9RV9N5b3m8F6jL/IdMAfQF7nN2pCM5c2q+Yz8CcwZ9EX+
EOYS+iLHOYa+yPfB3ENf5K0wJ9EXOc5V9EWOcxh9B5Vzm8uEuY2+yM/AnEdf
5AmwF9AXeSzsEfRFng97B32RB8CeQl/kuNfQF7kd7EH0RT4OexN9kTvCnqV6
g8O9TPUGlwF7nOoNTgf2PtUbXAJ0AtUbnBC6guoNLhc6hOoNbj90C9UbnDN0
DtUbnDt0EdUbHHYU3Ve7TLQ2FBm2MH2ldbGqrNSzlemrRXo/vn3sJGP6qmy8
f+pUViPTVzkHczMPX5cwfXX74GC9nlcT01clMXaLTzvImL6q6/CYvBwtY/qq
UDCRdqu4memrapeFz78bqmP6yj8u82Z4kZTpK2lv9TvjNCnTV5sNUhoGdaRM
X1W4b85ryqhn+uq0Is57WZmI6SvpWGuWh6OE6avSQ7cTe/qamL5KtDije2RL
E9NXmk4L9fSjm5i+2nqpuqEutJbpq5+sebq2jxuZvppx/fXIivRGpq/y9xst
DuWamL56NSk6rvFGzPSVRmTq/TxJDdNXb6r4jx9G1jB9dThL3NFrX8v01Z4L
m+QBl+qZvsrf79unmd/A9NWxcrfw2Dwh01d7worTn0YJmb7avZM3nJZTx/RV
aP/OsH/8G5i+4s/3Tdr1q4jpqwG3U7ZfmFYwffXEzOXWc0EJ01diLZP+dwMP
mb7qMizQnBYsYfoqJSZt9HOxhOmrVwmHFHyzGqavTNoCRclJlUxffSh6GnpF
LGb6qnP1gvsr9euZvloRP6Z+dJaQ6SvLFBsbB427TF8lH9s+qJGWw/TV22mH
zlxwrGH6KrHLPmmdn4Tpq7Apz3tmkXVMX3XP2a5n2VHJ9FUvcLqvQuB76L5K
gufSfTXg8tv0c3dqmL7KAC+6r8zhd6D7KuhRkPb5vUKmr3waqte35UmYvtIs
Vp4L3VdL4RzpvhqFc6f76jS8J3RfRV3O9jLgS5i+aoL3kO6r5/De0n1lxv9Q
IFr7gOmruXAv6L4Kh3tE95UP3Du6r/zhntJ9dQLuNd1XApgDdF/Z/Xukk7e1
numrSJgzdF+NwVyi+4oHc4zuq5cw9+i+KoQ5SfcVzlW6rzxgDtN9hXOb7ise
zHm6r3Av0H2Fe4Tuq1bYO3Rf4Z6i+6oM9hrdV06wB+m+ksHepPtqH+xZuq9w
L9N9VQR7nO6rRtj7dF9VQSfQfVUEXUH3VRF0CN1XldAtdF+ZQOfQfaUDXUT3
FXbU/ypCuwc=
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              
              Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95, 
               96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 
               7, 6, 5, 4, 3, 2}]}, {
              GrayLevel[0], 
              
              Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 
               192, 193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 
               160, 150, 140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 
               103, 102}]}}}, VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0.05387887094889892, 0.47483381708604716`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
          "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
           0.7, -1.9000000000000001`}, {
           2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
           0.8, -0.6000000000000001}, {2.6999999999999997`, 
           0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
           1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
          "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
           LocatorPane[
            Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                  Dimensions[#]] < 3, 
                
                Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
                If[First[
                   Dimensions[#]] > 7, 
                 Take[#, 7], #]]; 
             Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
                First[
                  Dimensions[$CellContext`rawArrayOfMasses$$]]; 
               If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                   $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                 
                 While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  
                  AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                  Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                  Part[
                   Part[$CellContext`kArray$$, All, 1], All, 1]]; 
               If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                 Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                 
                 While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                  Part[$CellContext`u$$, 1], 
                  
                  Part[$CellContext`u$$, 
                   1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 1], 
                Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                  Part[$CellContext`u$$, 2], 
                  
                  Part[$CellContext`u$$, 
                   2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 2], 
                Part[$CellContext`u$$, 2]]; {
                Part[$CellContext`u$$, 1], 
                
                Part[$CellContext`u$$, 
                 2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
              If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
              If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
              If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
                
                1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
              If[$CellContext`omegaIndex$$ > 
                2 $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
              ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
               2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
            LocatorAutoCreate -> True, ContinuousAction -> False]]]]), 
      "Specifications" :> {
        Dynamic[
         Function[$CellContext`k5manip$, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
                Row[{
                  OverVector["q"], " = ", 
                  
                  Module[{$CellContext`qm$}, $CellContext`qm$ = 
                    ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                   Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                  Dynamic[
                   NumberForm[
                    MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
                Row[{
                  Text["time, normalized to one period, t/T = "], 
                  Dynamic[
                   
                   N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                   1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                   ContinuousAction -> True, Appearance -> "Open", 
                   AppearanceElements -> {
                    "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
                Row[{
                  Text["oscillation scale factor:"]}], 
                Row[{Manipulator[
                    
                    Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                    Tiny, ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}] " ", 
                  Dynamic[
                   NumberForm[$CellContext`scale$$, {3, 2}]]}], 
                Row[{
                  Text["Angular frequency \[Omega](q), selection:"], 
                  Dynamic[
                   SetterBar[
                    
                    Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
                Row[{
                  Text["number of mesh intervals "], 
                  Manipulator[
                   
                   Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[$CellContext`freqMeshSize$$]}], 
                LocatorPane[
                 Dynamic[$CellContext`qPlaneLoc$$], 
                 Dynamic[
                  (Graphics[{
                    Lighter[Gray], 
                    Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                    Line[$CellContext`qPlaneLoc$$]}, 
                   PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                   ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                 ContinuousAction -> False]}], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                 Row[{
                   Text["mass: "], 
                   Dynamic[
                    If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                 Text["coupling to neighbouring: "], 
                 Dynamic[
                  If[$CellContext`rawNumberOfMasses$$ > 1, 
                   SetterBar[
                    
                    Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                   $CellContext`massLabel[1]]]}, {
                 Row[{
                   Text["horizontal: "], 
                   $CellContext`kLable[1], " || ", 
                   OverVector["a"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                 Row[{
                   Text["vertical: "], 
                   $CellContext`kLable[2], " || ", 
                   OverVector["b"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[3], " || (", 
                   OverVector["b"], " + ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[4], " || (", 
                   OverVector["b"], " - ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
                Part[$CellContext`k5manip$, 1], 
                Part[$CellContext`k5manip$, 2]}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
          If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
             Row[{
               Text["coupling from "], 
               Dynamic[
                $CellContext`massLabel[$CellContext`m1Sel$$]], 
               Text[" to: "]}], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 2, 
               SetterBar[
                
                Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 DeleteCases[
                  
                  Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]]]]}, {
             Row[{
               $CellContext`kLable[5], ": "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                
                NumberForm[$CellContext`k5$$, {3, 
                 2}]]}]}}]]], {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 8}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1: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
FXbU/ypCuwc=
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               
               Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95,
                 96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 
                8, 7, 6, 5, 4, 3, 2}]}, {
               GrayLevel[0], 
               
               Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 
                192, 193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 
                160, 150, 140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 
                103, 102}]}}}, VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0.05387887094889892, 
             0.47483381708604716`}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}},
            "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
            0.7, -1.9000000000000001`}, {
            2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
            0.8, -0.6000000000000001}, {2.6999999999999997`, 
            0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
            1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
           "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{907., {288., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$158]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$158]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$158 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], \
$CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], 
       Attributes[$CellContext`res$6418] = {
        Temporary}, $CellContext`res$6418 = {{
         0.25 (0. + 
            0.4756242568370987 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.4756242568370988 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10))}, {
         0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.5243757431629014 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.5243757431629013 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/
              10))}}, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.601598982789668*^9, 3.601598982898675*^9}},
 CellID->222699939],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.2625999999999999, {0.9, 0.7}, {
        0.3900000000000001, 0.75}, {{
        0.9904798172124906, -0.09710586443259722}, {-0.09710586443259722, 
        0.00952018278750954}}}, {
       1, 3, {0, 0}, 0.25, 0.3952840000000004, {0.9, 0.7}, {
        0.5779999999999998, 1.2400000000000002`}, {{
        0.26230254702947753`, -0.43988625899353373`}, {-0.43988625899353373`, 
        0.7376974529705225}}}, {
       1, 5, {0, 0}, 0.25, 0.6168039999999999, {0.9, 0.7}, {
        1.5979999999999999`, 1.06}, {{0.7898846310983715, 
        0.4073903541481574}, {0.4073903541481574, 0.21011536890162857`}}}, {
       1, 4, {0, 0}, 0.25, 0.7321249999999998, {0.9, 0.7}, {1.19, 1.505}, {{
        0.11487109441693696`, 0.31886631381253194`}, {0.31886631381253194`, 
        0.885128905583063}}}}, {{
       2, 1, {0, 0}, 0.25, 0.2625999999999999, {0.9, 0.7}, {
        0.3900000000000001, 0.75}, {{
        0.9904798172124906, -0.09710586443259722}, {-0.09710586443259722, 
        0.00952018278750954}}}, {
       2, 3, {0, 0}, 0.25, 0.2754440000000001, {0.3900000000000001, 0.75}, {
        0.5779999999999998, 1.2400000000000002`}, {{0.12831646360058627`, 
        0.33444184661855}, {0.33444184661855, 0.8716835363994139}}}, {
       2, 4, {0, 0}, 0.25, 1.2100249999999995`, {0.3900000000000001, 0.75}, {
        1.19, 1.505}, {{0.5289146918452098, 0.4991632404289168}, {
        0.4991632404289168, 0.4710853081547903}}}, {
       2, 5, {0, 0}, 0.25, 1.5553639999999995`, {0.3900000000000001, 0.75}, {
        1.5979999999999999`, 1.06}, {{0.9382138200446969, 
        0.2407667915677617}, {0.2407667915677617, 0.06178617995530311}}}}, {{
       3, 2, {0, 0}, 0.25, 0.2754440000000001, {0.3900000000000001, 0.75}, {
        0.5779999999999998, 1.2400000000000002`}, {{0.12831646360058627`, 
        0.33444184661855}, {0.33444184661855, 0.8716835363994139}}}, {
       3, 1, {0, 0}, 0.25, 0.3952840000000004, {0.9, 0.7}, {
        0.5779999999999998, 1.2400000000000002`}, {{
        0.26230254702947753`, -0.43988625899353373`}, {-0.43988625899353373`, 
        0.7376974529705225}}}, {
       3, 4, {0, 0}, 0.25, 0.4447689999999999, {0.5779999999999998, 
        1.2400000000000002`}, {1.19, 1.505}, {{0.8421090498663355, 
        0.36463872257284086`}, {0.36463872257284086`, 
        0.15789095013366455`}}}, {
       3, 5, {0, 0}, 0.25, 1.0728, {0.5779999999999998, 
        1.2400000000000002`}, {1.5979999999999999`, 1.06}, {{
        0.9697986577181208, -0.1711409395973156}, {-0.1711409395973156, 
        0.03020134228187925}}}}, {{
       4, 5, {0, 0}, 0.25, 0.36448899999999984`, {1.19, 1.505}, {
        1.5979999999999999`, 1.06}, {{
        0.4567051406215277, -0.49812202837397007`}, {-0.49812202837397007`, 
        0.5432948593784722}}}, {
       4, 3, {0, 0}, 0.25, 0.4447689999999999, {0.5779999999999998, 
        1.2400000000000002`}, {1.19, 1.505}, {{0.8421090498663355, 
        0.36463872257284086`}, {0.36463872257284086`, 
        0.15789095013366455`}}}, {
       4, 1, {0, 0}, 0.25, 0.7321249999999998, {0.9, 0.7}, {1.19, 1.505}, {{
        0.11487109441693696`, 0.31886631381253194`}, {0.31886631381253194`, 
        0.885128905583063}}}, {
       4, 2, {0, 0}, 0.25, 1.2100249999999995`, {0.3900000000000001, 0.75}, {
        1.19, 1.505}, {{0.5289146918452098, 0.4991632404289168}, {
        0.4991632404289168, 0.4710853081547903}}}}, {{
       5, 4, {0, 0}, 0.25, 0.36448899999999984`, {1.19, 1.505}, {
        1.5979999999999999`, 1.06}, {{
        0.4567051406215277, -0.49812202837397007`}, {-0.49812202837397007`, 
        0.5432948593784722}}}, {
       5, 1, {0, 0}, 0.25, 0.6168039999999999, {0.9, 0.7}, {
        1.5979999999999999`, 1.06}, {{0.7898846310983715, 
        0.4073903541481574}, {0.4073903541481574, 0.21011536890162857`}}}, {
       5, 3, {0, 0}, 0.25, 1.0728, {0.5779999999999998, 
        1.2400000000000002`}, {1.5979999999999999`, 1.06}, {{
        0.9697986577181208, -0.1711409395973156}, {-0.1711409395973156, 
        0.03020134228187925}}}, {
       5, 2, {0, 0}, 0.25, 1.5553639999999995`, {0.3900000000000001, 0.75}, {
        1.5979999999999999`, 1.06}, {{0.9382138200446969, 
        0.2407667915677617}, {0.2407667915677617, 
        0.06178617995530311}}}}}, {{{
       1, 4, {-1, 0}, 0.25, 0.28112500000000007`, {0.9, 0.7}, {
        1.0899999999999999`, 0.20499999999999985`}, {{
        0.1284126278345929, -0.33454868830591344`}, {-0.33454868830591344`, 
        0.871587372165407}}}, {
       1, 3, {-1, 0}, 0.25, 0.7556839999999998, {0.9, 0.7}, {
        0.47799999999999987`, -0.05999999999999983}, {{0.2356593496752613, 
        0.4244102032066314}, {0.4244102032066314, 0.7643406503247386}}}, {
       1, 5, {-1, 0}, 0.25, 1.2412039999999998`, {0.9, 0.7}, {
        1.4979999999999998`, -0.24}, {{
        0.2881105765047485, -0.45288284601080875`}, {-0.45288284601080875`, 
        0.7118894234952515}}}, {
       1, 5, {0, -1}, 0.25, 1.638404, {0.9, 0.7}, {-0.30200000000000005`, 
        0.26}, {{0.8818362259857764, 0.3228019462843108}, {0.3228019462843108,
         0.11816377401422358`}}}, {
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 2, {-1, 1}, 0.25, 1.8666, {0.9, 0.7}, {2.19, 0.25}, {{
        0.8915139826422374, -0.3109932497589199}, {-0.3109932497589199, 
        0.10848601735776275`}}}, {
       1, 2, {-1, 0}, 0.25, 1.9345999999999999`, {0.9, 0.7}, {
        0.29000000000000015`, -0.55}, {{0.19233950170577893`, 
        0.39413832316757985`}, {0.39413832316757985`, 0.8076604982942212}}}, {
       1, 5, {1, -1}, 0.25, 1.9540039999999999`, {0.9, 
        0.7}, {-0.20199999999999996`, 1.56}, {{
        0.6214951453528242, -0.485014360257195}, {-0.485014360257195, 
        0.37850485464717587`}}}, {
       1, 2, {1, 0}, 0.25, 1.9905999999999995`, {0.9, 0.7}, {
        0.4900000000000001, 2.05}, {{
        0.08444690043203054, -0.27805686727619816`}, {-0.27805686727619816`, 
        0.9155530995679695}}}, {
       1, 3, {-1, 1}, 0.25, 2.1860839999999993`, {0.9, 0.7}, {
        2.3779999999999997`, 0.7400000000000002}, {{0.9992680976577296, 
        0.027043791546894076`}, {0.027043791546894076`, 
        0.0007319023422704805}}}, {
       1, 4, {0, -1}, 0.25, 2.5921249999999993`, {0.9, 0.7}, {-0.71, 
        0.7049999999999998}, {{
        0.9999903554033853, -0.003105560109948336}, {-0.003105560109948336, 
        9.644596614746179*^-6}}}, {
       1, 2, {0, 1}, 0.25, 2.6546000000000003`, {0.9, 0.7}, {2.29, 1.55}, {{
        0.7278309349807881, 0.4450764710314172}, {0.4450764710314172, 
        0.27216906501921195`}}}, {
       1, 5, {1, 0}, 0.25, 3.392404000000001, {0.9, 0.7}, {1.698, 
        2.3600000000000003`}, {{0.18771467077624002`, 0.39048415224130134`}, {
        0.39048415224130134`, 0.8122853292237601}}}, {
       1, 3, {1, 0}, 0.25, 3.4348840000000003`, {0.9, 0.7}, {
        0.6779999999999998, 2.54}, {{
        0.014348082788239742`, -0.11892104653315815`}, {-0.11892104653315815`,
         0.9856519172117603}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 4, {1, -1}, 0.25, 3.9831249999999994`, {0.9, 
        0.7}, {-0.6099999999999999, 2.005}, {{
        0.5724399811705633, -0.49472461948846697`}, {-0.49472461948846697`, 
        0.4275600188294367}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 3, {0, 1}, 0.25, 4.285684, {0.9, 0.7}, {2.4779999999999998`, 
        2.04}, {{0.581023705900855, 0.49339148663317217`}, {
        0.49339148663317217`, 0.41897629409914505`}}}, {
       1, 4, {-1, 1}, 0.25, 4.461124999999999, {0.9, 0.7}, {
        2.9899999999999998`, 1.005}, {{0.9791476365266609, 
        0.14288996609599597`}, {0.14288996609599597`, 
        0.020852363473339124`}}}, {
       1, 4, {1, 0}, 0.25, 4.583124999999998, {0.9, 0.7}, {1.29, 
        2.8049999999999997`}, {{0.033186963043774734`, 
        0.17912450565934818`}, {0.17912450565934818`, 0.9668130369562252}}}, {
       1, 4, {-1, -1}, 0.25, 4.601125, {0.9, 
        0.7}, {-0.81, -0.5950000000000002}, {{0.635518487326469, 
        0.48128446847238454`}, {0.48128446847238454`, 0.364481512673531}}}, {
       1, 5, {-1, -1}, 0.25, 4.722804, {0.9, 
        0.7}, {-0.40200000000000014`, -1.04}, {{0.3589401550434869, 
        0.4796896081226323}, {0.4796896081226323, 0.6410598449565131}}}, {
       1, 3, {0, -1}, 0.25, 5.004884, {0.9, 0.7}, {-1.322, 
        0.44000000000000017`}, {{0.9864931934486394, 0.11543124675816653`}, {
        0.11543124675816653`, 0.013506806551360608`}}}, {
       1, 3, {1, -1}, 0.25, 5.584484000000001, {0.9, 0.7}, {-1.222, 
        1.7400000000000002`}, {{
        0.8063205123338162, -0.3951806469496555}, {-0.3951806469496555, 
        0.19367948766618373`}}}, {
       1, 2, {1, -1}, 0.25, 5.6385999999999985`, {0.9, 
        0.7}, {-1.4099999999999997`, 1.25}, {{
        0.946351931330472, -0.22532188841201722`}, {-0.22532188841201722`, 
        0.05364806866952792}}}, {
       1, 5, {-1, 1}, 0.25, 6.259603999999999, {0.9, 0.7}, {
        3.3979999999999997`, 0.56}, {{
        0.9968688115094821, -0.0558693489236699}, {-0.0558693489236699, 
        0.0031311884905179267`}}}, {
       1, 2, {0, -1}, 0.25, 6.370599999999999, {0.9, 
        0.7}, {-1.5099999999999998`, -0.050000000000000044`}, {{
        0.9117037641666406, 0.2837252378111952}, {0.2837252378111952, 
        0.08829623583335952}}}, {
       1, 2, {1, 1}, 0.25, 6.842600000000003, {0.9, 0.7}, {2.39, 2.85}, {{
        0.3244526934206296, 0.46816999386198227`}, {0.46816999386198227`, 
        0.6755473065793703}}}, {
       1, 4, {0, 1}, 0.25, 7.372124999999999, {0.9, 0.7}, {3.09, 
        2.3049999999999997`}, {{0.6505722569815353, 0.4767892568289333}, {
        0.4767892568289333, 0.34942774301846474`}}}, {
       1, 3, {-1, -1}, 0.25, 7.825284, {0.9, 
        0.7}, {-1.4220000000000002`, -0.8599999999999999}, {{
        0.6890080922302628, 0.46289949348803183`}, {0.46289949348803183`, 
        0.31099190776973706`}}}, {
       1, 5, {0, 1}, 0.25, 8.095204, {0.9, 0.7}, {3.4979999999999998`, 
        1.86}, {{0.8337781234419787, 0.3722796856014994}, {0.3722796856014994,
         0.16622187655802131`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       1, 3, {1, 1}, 0.25, 9.785284000000003, {0.9, 0.7}, {2.578, 
        3.3400000000000003`}, {{0.2877467838439844, 0.452712460874922}, {
        0.452712460874922, 0.7122532161560157}}}, {
       1, 2, {-1, -1}, 0.25, 10.502599999999997`, {0.9, 
        0.7}, {-1.6099999999999999`, -1.35}, {{0.5998609868032677, 
        0.48992630396282827`}, {0.48992630396282827`, 0.4001390131967323}}}, {
       1, 5, {1, 1}, 0.25, 13.330804, {0.9, 0.7}, {3.598, 3.16}, {{
        0.5460438845248943, 0.4978754469722906}, {0.4978754469722906, 
        0.45395611547510556`}}}, {
       1, 4, {1, 1}, 0.25, 13.683125, {0.9, 0.7}, {3.19, 3.605}, {{
        0.38325309459644635`, 0.48617914401863616`}, {0.48617914401863616`, 
        0.6167469054035537}}}}, {{
       2, 3, {-1, 0}, 0.25, 0.6638439999999997, {0.3900000000000001, 0.75}, {
        0.47799999999999987`, -0.05999999999999983}, {{
        0.01166539126662282, -0.1073746241586876}, {-0.1073746241586876, 
        0.9883346087333772}}}, {
       2, 5, {0, -1}, 0.25, 0.7189640000000002, {0.3900000000000001, 
        0.75}, {-0.30200000000000005`, 0.26}, {{0.6660472568862977, 
        0.4716230576218003}, {0.4716230576218003, 0.3339527431137024}}}, {
       2, 4, {-1, 0}, 0.25, 0.7870249999999998, {0.3900000000000001, 0.75}, {
        1.0899999999999999`, 0.20499999999999985`}, {{
        0.6225977573774655, -0.48473682538674134`}, {-0.48473682538674134`, 
        0.3774022426225346}}}, {
       2, 5, {1, -1}, 0.25, 1.0065640000000002`, {0.3900000000000001, 
        0.75}, {-0.20199999999999996`, 1.56}, {{
        0.3481785559586872, -0.4763929566326632}, {-0.4763929566326632, 
        0.6518214440413128}}}, {
       2, 4, {0, -1}, 0.25, 1.2120250000000001`, {0.3900000000000001, 
        0.75}, {-0.71, 0.7049999999999998}, {{0.9983292423836142, 
        0.04084074173387526}, {0.04084074173387526, 0.001670757616385812}}}, {
       2, 2, {1, 0}, 0.25, 1.6999999999999995`, {0.3900000000000001, 0.75}, {
        0.4900000000000001, 2.05}, {{0.005882352941176469, 
        0.07647058823529411}, {0.07647058823529411, 0.9941176470588234}}}, {
       2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.3900000000000001, 0.75}, {
        0.29000000000000015`, -0.55}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       2, 1, {1, -1}, 0.25, 1.8666, {0.3900000000000001, 
        0.75}, {-0.8999999999999998, 1.2}, {{
        0.8915139826422374, -0.3109932497589199}, {-0.3109932497589199, 
        0.10848601735776275`}}}, {
       2, 1, {1, 0}, 0.25, 1.9345999999999999`, {0.3900000000000001, 0.75}, {
        1., 2.}, {{0.19233950170577893`, 0.39413832316757985`}, {
        0.39413832316757985`, 0.8076604982942212}}}, {
       2, 1, {-1, 0}, 0.25, 1.9906000000000001`, {0.3900000000000001, 0.75}, {
        0.8, -0.6000000000000001}, {{
        0.0844469004320305, -0.27805686727619805`}, {-0.27805686727619805`, 
        0.9155530995679695}}}, {
       2, 5, {-1, 0}, 0.25, 2.207763999999999, {0.3900000000000001, 0.75}, {
        1.4979999999999998`, -0.24}, {{
        0.5560666810401835, -0.49684658323987535`}, {-0.49684658323987535`, 
        0.4439333189598165}}}, {
       2, 4, {1, -1}, 0.25, 2.5750249999999997`, {0.3900000000000001, 
        0.75}, {-0.6099999999999999, 2.005}, {{
        0.3883457442160756, -0.48737390899117483`}, {-0.48737390899117483`, 
        0.6116542557839243}}}, {
       2, 1, {0, -1}, 0.25, 2.6546000000000003`, {0.3900000000000001, 
        0.75}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7278309349807881, 0.4450764710314172}, {0.4450764710314172, 
        0.27216906501921195`}}}, {
       2, 3, {0, -1}, 0.25, 3.0270440000000005`, {0.3900000000000001, 
        0.75}, {-1.322, 0.44000000000000017`}, {{0.9682528565821971, 
        0.17532615977831825`}, {0.17532615977831825`, 
        0.03174714341780294}}}, {
       2, 4, {-1, -1}, 0.25, 3.249025000000001, {0.3900000000000001, 
        0.75}, {-0.81, -0.5950000000000002}, {{0.4432098860427359, 
        0.4967644139395665}, {0.4967644139395665, 0.5567901139572641}}}, {
       2, 3, {1, 0}, 0.25, 3.287044, {0.3900000000000001, 0.75}, {
        0.6779999999999998, 2.54}, {{0.02523361415302011, 
        0.15683392129828486`}, {0.15683392129828486`, 0.9747663858469799}}}, {
       2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.3900000000000001, 
        0.75}, {-1.4099999999999997`, 1.25}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.3900000000000001, 0.75}, {
        2.19, 0.25}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 3, {1, -1}, 0.25, 3.5786440000000006`, {0.3900000000000001, 
        0.75}, {-1.222, 1.7400000000000002`}, {{
        0.7261253145046, -0.44594544749351994`}, {-0.44594544749351994`, 
        0.2738746854954}}}, {
       2, 5, {-1, -1}, 0.25, 3.831364, {0.3900000000000001, 
        0.75}, {-0.40200000000000014`, -1.04}, {{0.1637181953998629, 
        0.3700196587951446}, {0.3700196587951446, 0.8362818046001371}}}, {
       2, 3, {-1, 1}, 0.25, 3.9522439999999985`, {0.3900000000000001, 0.75}, {
        2.3779999999999997`, 0.7400000000000002}, {{
        0.9999746979184483, -0.005030053812466938}, {-0.005030053812466938, 
        0.00002530208155164402}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.3900000000000001, 0.75}, {2.29, 1.55}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.3900000000000001, 
        0.75}, {-1.5099999999999998`, -0.050000000000000044`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 5, {1, 0}, 0.25, 4.302964000000001, {0.3900000000000001, 0.75}, {
        1.698, 2.3600000000000003`}, {{0.3976012813493208, 
        0.4894021888168247}, {0.4894021888168247, 0.6023987186506791}}}, {
       2, 4, {1, 0}, 0.25, 5.0330249999999985`, {0.3900000000000001, 0.75}, {
        1.29, 2.8049999999999997`}, {{0.16093701104206715`, 
        0.3674728418793866}, {0.3674728418793866, 0.8390629889579329}}}, {
       2, 1, {-1, 1}, 0.25, 5.6385999999999985`, {0.3900000000000001, 0.75}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.946351931330472, -0.22532188841201722`}, {-0.22532188841201722`, 
        0.05364806866952792}}}, {
       2, 3, {-1, -1}, 0.25, 5.875444, {0.3900000000000001, 
        0.75}, {-1.4220000000000002`, -0.8599999999999999}, {{
        0.5588248309404363, 0.4965275815751116}, {0.4965275815751116, 
        0.4411751690595638}}}, {
       2, 3, {0, 1}, 0.25, 6.023843999999999, {0.3900000000000001, 0.75}, {
        2.4779999999999998`, 2.04}, {{0.7237478261389237, 
        0.44714305350536965`}, {0.44714305350536965`, 
        0.27625217386107614`}}}, {
       2, 1, {0, 1}, 0.25, 6.370599999999999, {0.3900000000000001, 0.75}, {
        2.8, 1.5}, {{0.9117037641666406, 0.2837252378111952}, {
        0.2837252378111952, 0.08829623583335952}}}, {
       2, 4, {-1, 1}, 0.25, 6.825024999999998, {0.3900000000000001, 0.75}, {
        2.9899999999999998`, 1.005}, {{0.9904725623715663, 
        0.09714250130951897}, {0.09714250130951897, 0.00952743762843359}}}, {
       2, 1, {-1, -1}, 0.25, 6.842600000000003, {0.3900000000000001, 
        0.75}, {-1.1, -1.4000000000000001`}, {{0.3244526934206296, 
        0.46816999386198227`}, {0.46816999386198227`, 0.6755473065793703}}}, {
       2, 2, {1, 1}, 0.25, 8.41, {0.3900000000000001, 0.75}, {2.39, 2.85}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       2, 2, {-1, -1}, 0.25, 8.41, {0.3900000000000001, 
        0.75}, {-1.6099999999999999`, -1.35}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       2, 5, {-1, 1}, 0.25, 9.084163999999996, {0.3900000000000001, 0.75}, {
        3.3979999999999997`, 0.56}, {{
        0.996026051489163, -0.06291387958209474}, {-0.06291387958209474, 
        0.0039739485108371}}}, {
       2, 4, {0, 1}, 0.25, 9.708024999999997, {0.3900000000000001, 0.75}, {
        3.09, 2.3049999999999997`}, {{0.7509251366781606, 
        0.43247725464242215`}, {0.43247725464242215`, 0.2490748633218394}}}, {
       2, 1, {1, 1}, 0.25, 10.502599999999997`, {0.3900000000000001, 0.75}, {
        2.9, 2.8}, {{0.5998609868032677, 0.48992630396282827`}, {
        0.48992630396282827`, 0.4001390131967323}}}, {
       2, 5, {0, 1}, 0.25, 10.891763999999998`, {0.3900000000000001, 0.75}, {
        3.4979999999999998`, 1.86}, {{0.8868778280542985, 
        0.3167420814479638}, {0.3167420814479638, 0.11312217194570139`}}}, {
       2, 3, {1, 1}, 0.25, 11.495444, {0.3900000000000001, 0.75}, {2.578, 
        3.3400000000000003`}, {{0.4164557715213087, 0.4929709544059368}, {
        0.4929709544059368, 0.5835442284786914}}}, {
       2, 4, {1, 1}, 0.25, 15.991025, {0.3900000000000001, 0.75}, {3.19, 
        3.605}, {{0.49027501364046383`, 0.4999054156941159}, {
        0.4999054156941159, 0.5097249863595361}}}, {
       2, 5, {1, 1}, 0.25, 16.099363999999998`, {0.3900000000000001, 0.75}, {
        3.598, 3.16}, {{0.6392341958353137, 0.4802226969959808}, {
        0.4802226969959808, 0.36076580416468634`}}}}, {{
       3, 2, {1, 0}, 0.25, 0.6638439999999993, {0.5779999999999998, 
        1.2400000000000002`}, {0.4900000000000001, 2.05}, {{
        0.011665391266622825`, -0.10737462415868763`}, {-0.10737462415868763`,
         0.9883346087333771}}}, {
       3, 5, {1, -1}, 0.25, 0.7107999999999997, {0.5779999999999998, 
        1.2400000000000002`}, {-0.20199999999999996`, 1.56}, {{
        0.8559369724254362, -0.35115362971299935`}, {-0.35115362971299935`, 
        0.1440630275745638}}}, {
       3, 1, {1, 0}, 0.25, 0.7556839999999998, {0.5779999999999998, 
        1.2400000000000002`}, {1., 2.}, {{0.2356593496752613, 
        0.4244102032066314}, {0.4244102032066314, 0.7643406503247386}}}, {
       3, 4, {-1, 0}, 0.25, 1.3333690000000007`, {0.5779999999999998, 
        1.2400000000000002`}, {1.0899999999999999`, 0.20499999999999985`}, {{
        0.19660274087668142`, -0.39742936876438545`}, {-0.39742936876438545`, 
        0.8033972591233185}}}, {
       3, 3, {1, 0}, 0.25, 1.6999999999999995`, {0.5779999999999998, 
        1.2400000000000002`}, {0.6779999999999998, 2.54}, {{
        0.005882352941176469, 0.07647058823529411}, {0.07647058823529411, 
        0.9941176470588234}}}, {
       3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {0.5779999999999998, 
        1.2400000000000002`}, {0.47799999999999987`, -0.05999999999999983}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       3, 5, {0, -1}, 0.25, 1.7348000000000003`, {0.5779999999999998, 
        1.2400000000000002`}, {-0.30200000000000005`, 0.26}, {{
        0.4463915148720312, 0.4971178233802167}, {0.4971178233802167, 
        0.5536084851279688}}}, {
       3, 4, {0, -1}, 0.25, 1.945169, {0.5779999999999998, 
        1.2400000000000002`}, {-0.71, 0.7049999999999998}, {{
        0.8528534024550048, 0.3542519955849596}, {0.3542519955849596, 
        0.147146597544995}}}, {
       3, 4, {1, -1}, 0.25, 1.9965689999999987`, {0.5779999999999998, 
        1.2400000000000002`}, {-0.6099999999999999, 2.005}, {{
        0.7068846606353201, -0.4551908799545621}, {-0.4551908799545621, 
        0.2931153393646801}}}, {
       3, 1, {1, -1}, 0.25, 2.1860839999999993`, {0.5779999999999998, 
        1.2400000000000002`}, {-0.8999999999999998, 1.2}, {{
        0.9992680976577296, 0.027043791546894076`}, {0.027043791546894076`, 
        0.0007319023422704805}}}, {
       3, 5, {1, 0}, 0.25, 2.5088000000000004`, {0.5779999999999998, 
        1.2400000000000002`}, {1.698, 2.3600000000000003`}, {{0.5, 0.5}, {0.5,
         0.5}}}, {
       3, 4, {1, 0}, 0.25, 2.9561689999999987`, {0.5779999999999998, 
        1.2400000000000002`}, {1.29, 2.8049999999999997`}, {{
        0.17148681283106634`, 0.37693379505704866`}, {0.37693379505704866`, 
        0.8285131871689337}}}, {
       3, 2, {0, 1}, 0.25, 3.0270440000000005`, {0.5779999999999998, 
        1.2400000000000002`}, {2.29, 1.55}, {{0.9682528565821971, 
        0.17532615977831825`}, {0.17532615977831825`, 
        0.03174714341780294}}}, {
       3, 5, {-1, 0}, 0.25, 3.0368000000000004`, {0.5779999999999998, 
        1.2400000000000002`}, {1.4979999999999998`, -0.24}, {{
        0.27871443624868275`, -0.44836670179135935`}, {-0.44836670179135935`, 
        0.7212855637513174}}}, {
       3, 2, {-1, 0}, 0.25, 3.2870440000000007`, {0.5779999999999998, 
        1.2400000000000002`}, {0.29000000000000015`, -0.55}, {{
        0.0252336141530201, 0.15683392129828486`}, {0.15683392129828486`, 
        0.9747663858469798}}}, {
       3, 1, {-1, 0}, 0.25, 3.434884000000001, {0.5779999999999998, 
        1.2400000000000002`}, {0.8, -0.6000000000000001}, {{
        0.014348082788239737`, -0.11892104653315812`}, {-0.11892104653315812`,
         0.9856519172117602}}}, {
       3, 3, {1, -1}, 0.25, 3.4899999999999993`, {0.5779999999999998, 
        1.2400000000000002`}, {-1.222, 1.7400000000000002`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 3, {-1, 1}, 0.25, 3.4899999999999993`, {0.5779999999999998, 
        1.2400000000000002`}, {2.3779999999999997`, 0.7400000000000002}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 2, {-1, 1}, 0.25, 3.5786440000000006`, {0.5779999999999998, 
        1.2400000000000002`}, {2.19, 0.25}, {{
        0.7261253145046, -0.44594544749351994`}, {-0.44594544749351994`, 
        0.2738746854954}}}, {
       3, 2, {1, -1}, 0.25, 3.9522439999999985`, {0.5779999999999998, 
        1.2400000000000002`}, {-1.4099999999999997`, 1.25}, {{
        0.9999746979184483, -0.005030053812466938}, {-0.005030053812466938, 
        0.00002530208155164402}}}, {
       3, 3, {0, 1}, 0.25, 4.25, {0.5779999999999998, 1.2400000000000002`}, {
        2.4779999999999998`, 2.04}, {{0.8494117647058823, 
        0.3576470588235293}, {0.3576470588235293, 0.15058823529411758`}}}, {
       3, 3, {0, -1}, 0.25, 4.25, {0.5779999999999998, 
        1.2400000000000002`}, {-1.322, 0.44000000000000017`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       3, 1, {0, -1}, 0.25, 4.285684, {0.5779999999999998, 
        1.2400000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.581023705900855, 0.4933914866331723}, {0.4933914866331723, 
        0.41897629409914516`}}}, {
       3, 1, {0, 1}, 0.25, 5.004884, {0.5779999999999998, 
        1.2400000000000002`}, {2.8, 1.5}, {{0.9864931934486394, 
        0.11543124675816653`}, {0.11543124675816653`, 
        0.013506806551360608`}}}, {
       3, 4, {-1, -1}, 0.25, 5.293769000000001, {0.5779999999999998, 
        1.2400000000000002`}, {-0.81, -0.5950000000000002}, {{
        0.3639267221520243, 0.48112790716784204`}, {0.48112790716784204`, 
        0.6360732778479758}}}, {
       3, 1, {-1, 1}, 0.25, 5.584484000000001, {0.5779999999999998, 
        1.2400000000000002`}, {2.6999999999999997`, 0.19999999999999996`}, {{
        0.8063205123338162, -0.3951806469496555}, {-0.3951806469496555, 
        0.19367948766618373`}}}, {
       3, 4, {-1, 1}, 0.25, 5.872968999999999, {0.5779999999999998, 
        1.2400000000000002`}, {2.9899999999999998`, 1.005}, {{
        0.9905967492762179, -0.0965133648755852}, {-0.0965133648755852, 
        0.009403250723782154}}}, {
       3, 2, {1, 1}, 0.25, 5.875444, {0.5779999999999998, 
        1.2400000000000002`}, {2.39, 2.85}, {{0.5588248309404363, 
        0.4965275815751116}, {0.4965275815751116, 0.4411751690595638}}}, {
       3, 2, {0, -1}, 0.25, 6.023843999999999, {0.5779999999999998, 
        1.2400000000000002`}, {-1.5099999999999998`, -0.050000000000000044`}, \
{{0.7237478261389237, 0.4471430535053697}, {0.4471430535053697, 
        0.2762521738610762}}}, {
       3, 5, {-1, -1}, 0.25, 6.158800000000001, {0.5779999999999998, 
        1.2400000000000002`}, {-0.40200000000000014`, -1.04}, {{
        0.15593946872767417`, 0.36279794765214}, {0.36279794765214, 
        0.8440605312723257}}}, {
       3, 4, {0, 1}, 0.25, 7.444368999999999, {0.5779999999999998, 
        1.2400000000000002`}, {3.09, 2.3049999999999997`}, {{
        0.8476398738429007, 0.3593696121189047}, {0.3593696121189047, 
        0.1523601261570993}}}, {
       3, 1, {1, 1}, 0.25, 7.825284, {0.5779999999999998, 
        1.2400000000000002`}, {2.9, 2.8}, {{0.6890080922302628, 
        0.4628994934880318}, {0.4628994934880318, 0.310991907769737}}}, {
       3, 3, {1, 1}, 0.25, 8.41, {0.5779999999999998, 1.2400000000000002`}, {
        2.578, 3.3400000000000003`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       3, 3, {-1, -1}, 0.25, 8.41, {0.5779999999999998, 
        1.2400000000000002`}, {-1.4220000000000002`, -0.8599999999999999}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       3, 5, {-1, 1}, 0.25, 8.4148, {0.5779999999999998, 
        1.2400000000000002`}, {3.3979999999999997`, 0.56}, {{
        0.94504919903028, -0.22788420402148601`}, {-0.22788420402148601`, 
        0.05495080096972004}}}, {
       3, 5, {0, 1}, 0.25, 8.910799999999998, {0.5779999999999998, 
        1.2400000000000002`}, {3.4979999999999998`, 1.86}, {{
        0.9568613368047763, 0.20316918795169905`}, {0.20316918795169905`, 
        0.04313866319522376}}}, {
       3, 1, {-1, -1}, 0.25, 9.785284000000003, {0.5779999999999998, 
        1.2400000000000002`}, {-1.1, -1.4000000000000001`}, {{
        0.2877467838439844, 0.452712460874922}, {0.452712460874922, 
        0.7122532161560157}}}, {
       3, 2, {-1, -1}, 0.25, 11.495444, {0.5779999999999998, 
        1.2400000000000002`}, {-1.6099999999999999`, -1.35}, {{
        0.4164557715213087, 0.4929709544059368}, {0.4929709544059368, 
        0.5835442284786914}}}, {
       3, 4, {1, 1}, 0.25, 12.415769, {0.5779999999999998, 
        1.2400000000000002`}, {3.19, 3.605}, {{0.5495063576005644, 
        0.497543084121491}, {0.497543084121491, 0.4504936423994357}}}, {
       3, 5, {1, 1}, 0.25, 12.806799999999999`, {0.5779999999999998, 
        1.2400000000000002`}, {3.598, 3.16}, {{0.7121529187619078, 
        0.4527594715307493}, {0.4527594715307493, 0.2878470812380923}}}}, {{
       4, 1, {1, 0}, 0.25, 0.28112500000000007`, {1.19, 1.505}, {1., 2.}, {{
        0.12841262783459306`, -0.33454868830591367`}, {-0.33454868830591367`, 
        0.871587372165407}}}, {
       4, 2, {1, 0}, 0.25, 0.7870249999999996, {1.19, 1.505}, {
        0.4900000000000001, 2.05}, {{
        0.6225977573774658, -0.4847368253867413}, {-0.4847368253867413, 
        0.37740224262253436`}}}, {
       4, 5, {1, 0}, 0.25, 0.9890890000000008, {1.19, 1.505}, {1.698, 
        2.3600000000000003`}, {{0.2609107977138557, 0.43913136229398964`}, {
        0.43913136229398964`, 0.7390892022861443}}}, {
       4, 2, {0, 1}, 0.25, 1.2120250000000001`, {1.19, 1.505}, {2.29, 
        1.55}, {{0.9983292423836142, 0.04084074173387526}, {
        0.04084074173387526, 0.001670757616385812}}}, {
       4, 3, {1, 0}, 0.25, 1.3333690000000005`, {1.19, 1.505}, {
        0.6779999999999998, 2.54}, {{
        0.19660274087668156`, -0.39742936876438556`}, {-0.39742936876438556`, 
        0.8033972591233185}}}, {
       4, 4, {1, 0}, 0.25, 1.6999999999999995`, {1.19, 1.505}, {1.29, 
        2.8049999999999997`}, {{0.005882352941176483, 0.07647058823529419}, {
        0.07647058823529419, 0.9941176470588234}}}, {
       4, 4, {-1, 0}, 0.25, 1.7000000000000002`, {1.19, 1.505}, {
        1.0899999999999999`, 0.20499999999999985`}, {{0.00588235294117648, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588234}}}, {
       4, 5, {1, -1}, 0.25, 1.9406889999999999`, {1.19, 
        1.505}, {-0.20199999999999996`, 1.56}, {{
        0.9984412752378151, -0.0394499067083908}, {-0.0394499067083908, 
        0.001558724762184986}}}, {
       4, 3, {0, 1}, 0.25, 1.9451689999999997`, {1.19, 1.505}, {
        2.4779999999999998`, 2.04}, {{0.8528534024550051, 
        0.35425199558495957`}, {0.35425199558495957`, 
        0.14714659754499493`}}}, {
       4, 3, {-1, 1}, 0.25, 1.9965689999999987`, {1.19, 1.505}, {
        2.3779999999999997`, 0.7400000000000002}, {{
        0.7068846606353201, -0.4551908799545621}, {-0.4551908799545621, 
        0.2931153393646801}}}, {
       4, 2, {-1, 1}, 0.25, 2.5750249999999997`, {1.19, 1.505}, {2.19, 
        0.25}, {{
        0.3883457442160756, -0.48737390899117483`}, {-0.48737390899117483`, 
        0.6116542557839243}}}, {
       4, 1, {0, 1}, 0.25, 2.5921249999999993`, {1.19, 1.505}, {2.8, 1.5}, {{
        0.9999903554033853, -0.003105560109948336}, {-0.003105560109948336, 
        9.644596614746179*^-6}}}, {
       4, 3, {-1, 0}, 0.25, 2.956168999999999, {1.19, 1.505}, {
        0.47799999999999987`, -0.05999999999999983}, {{0.17148681283106623`, 
        0.3769337950570486}, {0.3769337950570486, 0.8285131871689339}}}, {
       4, 5, {-1, 0}, 0.25, 3.1398889999999993`, {1.19, 1.505}, {
        1.4979999999999998`, -0.24}, {{
        0.03021253299081589, -0.17117165606809662`}, {-0.17117165606809662`, 
        0.9697874670091841}}}, {
       4, 2, {1, 1}, 0.25, 3.249025000000001, {1.19, 1.505}, {2.39, 2.85}, {{
        0.4432098860427359, 0.4967644139395665}, {0.4967644139395665, 
        0.5567901139572641}}}, {
       4, 4, {1, -1}, 0.25, 3.4899999999999993`, {1.19, 
        1.505}, {-0.6099999999999999, 2.005}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       4, 4, {-1, 1}, 0.25, 3.4899999999999993`, {1.19, 1.505}, {
        2.9899999999999998`, 1.005}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       4, 5, {0, -1}, 0.25, 3.776089, {1.19, 1.505}, {-0.30200000000000005`, 
        0.26}, {{0.5895157661802992, 0.49192166815983407`}, {
        0.49192166815983407`, 0.4104842338197007}}}, {
       4, 1, {-1, 1}, 0.25, 3.9831249999999994`, {1.19, 1.505}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.5724399811705633, -0.49472461948846697`}, {-0.49472461948846697`, 
        0.4275600188294367}}}, {
       4, 4, {0, 1}, 0.25, 4.25, {1.19, 1.505}, {3.09, 
        2.3049999999999997`}, {{0.8494117647058823, 0.3576470588235293}, {
        0.3576470588235293, 0.15058823529411758`}}}, {
       4, 4, {0, -1}, 0.25, 4.25, {1.19, 1.505}, {-0.71, 
        0.7049999999999998}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       4, 1, {1, -1}, 0.25, 4.461124999999999, {1.19, 
        1.505}, {-0.8999999999999998, 1.2}, {{0.9791476365266609, 
        0.14288996609599597`}, {0.14288996609599597`, 
        0.020852363473339124`}}}, {
       4, 1, {-1, 0}, 0.25, 4.583125, {1.19, 1.505}, {
        0.8, -0.6000000000000001}, {{0.0331869630437747, 
        0.1791245056593481}, {0.1791245056593481, 0.9668130369562253}}}, {
       4, 1, {1, 1}, 0.25, 4.601125, {1.19, 1.505}, {2.9, 2.8}, {{
        0.635518487326469, 0.48128446847238443`}, {0.48128446847238443`, 
        0.3644815126735309}}}, {
       4, 2, {-1, 0}, 0.25, 5.0330249999999985`, {1.19, 1.505}, {
        0.29000000000000015`, -0.55}, {{0.16093701104206712`, 
        0.36747284187938656`}, {0.36747284187938656`, 0.8390629889579329}}}, {
       4, 3, {1, 1}, 0.25, 5.293769000000001, {1.19, 1.505}, {2.578, 
        3.3400000000000003`}, {{0.3639267221520243, 0.48112790716784204`}, {
        0.48112790716784204`, 0.6360732778479758}}}, {
       4, 5, {0, 1}, 0.25, 5.452889, {1.19, 1.505}, {3.4979999999999998`, 
        1.86}, {{0.9768883980583503, 0.15025796417275328`}, {
        0.15025796417275328`, 0.02311160194164967}}}, {
       4, 5, {-1, 1}, 0.25, 5.7682889999999984`, {1.19, 1.505}, {
        3.3979999999999997`, 0.56}, {{
        0.8451837277917247, -0.3617294487152083}, {-0.3617294487152083, 
        0.15481627220827526`}}}, {
       4, 3, {1, -1}, 0.25, 5.872968999999999, {1.19, 1.505}, {-1.222, 
        1.7400000000000002`}, {{
        0.9905967492762179, -0.0965133648755852}, {-0.0965133648755852, 
        0.009403250723782154}}}, {
       4, 2, {1, -1}, 0.25, 6.825024999999998, {1.19, 
        1.505}, {-1.4099999999999997`, 1.25}, {{0.9904725623715663, 
        0.09714250130951897}, {0.09714250130951897, 0.00952743762843359}}}, {
       4, 1, {0, -1}, 0.25, 7.3721250000000005`, {1.19, 
        1.505}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.6505722569815352, 0.47678925682893325`}, {0.47678925682893325`, 
        0.3494277430184648}}}, {
       4, 3, {0, -1}, 0.25, 7.444369, {1.19, 1.505}, {-1.322, 
        0.44000000000000017`}, {{0.8476398738429005, 0.3593696121189048}, {
        0.3593696121189048, 0.15236012615709932`}}}, {
       4, 4, {1, 1}, 0.25, 8.41, {1.19, 1.505}, {3.19, 3.605}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       4, 4, {-1, -1}, 0.25, 8.41, {1.19, 
        1.505}, {-0.81, -0.5950000000000002}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       4, 5, {1, 1}, 0.25, 8.537489, {1.19, 1.505}, {3.598, 3.16}, {{
        0.6791767462306538, 0.4667929879616829}, {0.4667929879616829, 
        0.32082325376934606`}}}, {
       4, 5, {-1, -1}, 0.25, 9.011489, {1.19, 
        1.505}, {-0.40200000000000014`, -1.04}, {{0.2812480823091501, 
        0.44960827228441386`}, {0.44960827228441386`, 0.71875191769085}}}, {
       4, 2, {0, -1}, 0.25, 9.708024999999997, {1.19, 
        1.505}, {-1.5099999999999998`, -0.050000000000000044`}, {{
        0.7509251366781606, 0.43247725464242215`}, {0.43247725464242215`, 
        0.24907486332183945`}}}, {
       4, 3, {-1, -1}, 0.25, 12.415769, {1.19, 
        1.505}, {-1.4220000000000002`, -0.8599999999999999}, {{
        0.5495063576005644, 0.497543084121491}, {0.497543084121491, 
        0.4504936423994357}}}, {
       4, 1, {-1, -1}, 0.25, 13.683125, {1.19, 
        1.505}, {-1.1, -1.4000000000000001`}, {{0.38325309459644635`, 
        0.48617914401863616`}, {0.48617914401863616`, 0.6167469054035537}}}, {
       4, 2, {-1, -1}, 0.25, 15.991025, {1.19, 
        1.505}, {-1.6099999999999999`, -1.35}, {{0.49027501364046383`, 
        0.4999054156941159}, {0.4999054156941159, 0.5097249863595361}}}}, {{
       5, 3, {-1, 1}, 0.25, 0.7107999999999997, {1.5979999999999999`, 1.06}, {
        2.3779999999999997`, 0.7400000000000002}, {{
        0.8559369724254362, -0.35115362971299935`}, {-0.35115362971299935`, 
        0.1440630275745638}}}, {
       5, 2, {0, 1}, 0.25, 0.7189640000000002, {1.5979999999999999`, 1.06}, {
        2.29, 1.55}, {{0.6660472568862977, 0.4716230576218003}, {
        0.4716230576218003, 0.3339527431137024}}}, {
       5, 4, {-1, 0}, 0.25, 0.9890890000000003, {1.5979999999999999`, 1.06}, {
        1.0899999999999999`, 0.20499999999999985`}, {{0.26091079771385584`, 
        0.4391313622939897}, {0.4391313622939897, 0.7390892022861443}}}, {
       5, 2, {-1, 1}, 0.25, 1.0065640000000002`, {1.5979999999999999`, 
        1.06}, {2.19, 0.25}, {{
        0.3481785559586872, -0.4763929566326632}, {-0.4763929566326632, 
        0.6518214440413128}}}, {
       5, 1, {1, 0}, 0.25, 1.2412039999999998`, {1.5979999999999999`, 1.06}, {
        1., 2.}, {{
        0.28811057650474853`, -0.45288284601080886`}, {-0.45288284601080886`, 
        0.7118894234952515}}}, {
       5, 1, {0, 1}, 0.54, 1.638404, {1.5979999999999999`, 1.06}, {2.8, 
        1.5}, {{0.8818362259857764, 0.3228019462843108}, {0.3228019462843108, 
        0.11816377401422358`}}}, {
       5, 5, {1, 0}, 0.25, 1.7000000000000006`, {1.5979999999999999`, 1.06}, {
        1.698, 2.3600000000000003`}, {{0.005882352941176479, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588236}}}, {
       5, 5, {-1, 0}, 0.25, 1.7000000000000002`, {1.5979999999999999`, 
        1.06}, {1.4979999999999998`, -0.24}, {{0.00588235294117648, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588234}}}, {
       5, 3, {0, 1}, 0.25, 1.7348, {1.5979999999999999`, 1.06}, {
        2.4779999999999998`, 2.04}, {{0.4463915148720313, 
        0.49711782338021665`}, {0.49711782338021665`, 0.5536084851279687}}}, {
       5, 4, {-1, 1}, 0.25, 1.9406889999999999`, {1.5979999999999999`, 
        1.06}, {2.9899999999999998`, 1.005}, {{
        0.9984412752378151, -0.0394499067083908}, {-0.0394499067083908, 
        0.001558724762184986}}}, {
       5, 1, {-1, 1}, 1., 1.9540039999999999`, {1.5979999999999999`, 1.06}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.6214951453528242, -0.485014360257195}, {-0.485014360257195, 
        0.37850485464717587`}}}, {
       5, 2, {1, 0}, 0.25, 2.2077639999999987`, {1.5979999999999999`, 1.06}, {
        0.4900000000000001, 2.05}, {{
        0.5560666810401835, -0.4968465832398753}, {-0.4968465832398753, 
        0.44393331895981636`}}}, {
       5, 3, {-1, 0}, 0.25, 2.5088, {1.5979999999999999`, 1.06}, {
        0.47799999999999987`, -0.05999999999999983}, {{0.5000000000000001, 
        0.5}, {0.5, 0.49999999999999994`}}}, {
       5, 3, {1, 0}, 0.25, 3.0368, {1.5979999999999999`, 1.06}, {
        0.6779999999999998, 2.54}, {{
        0.27871443624868286`, -0.4483667017913594}, {-0.4483667017913594, 
        0.7212855637513172}}}, {
       5, 4, {1, 0}, 0.25, 3.139888999999999, {1.5979999999999999`, 1.06}, {
        1.29, 2.8049999999999997`}, {{
        0.030212532990815895`, -0.17117165606809662`}, {-0.17117165606809662`,
         0.9697874670091842}}}, {
       5, 1, {-1, 0}, 0.25, 3.392404, {1.5979999999999999`, 1.06}, {
        0.8, -0.6000000000000001}, {{0.18771467077624002`, 
        0.39048415224130145`}, {0.39048415224130145`, 0.8122853292237601}}}, {
       5, 5, {1, -1}, 0.25, 3.4899999999999993`, {1.5979999999999999`, 
        1.06}, {-0.20199999999999996`, 1.56}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       5, 5, {-1, 1}, 0.25, 3.4899999999999993`, {1.5979999999999999`, 
        1.06}, {3.3979999999999997`, 0.56}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       5, 4, {0, 1}, 0.25, 3.776088999999999, {1.5979999999999999`, 1.06}, {
        3.09, 2.3049999999999997`}, {{0.5895157661802993, 
        0.4919216681598341}, {0.4919216681598341, 0.4104842338197006}}}, {
       5, 2, {1, 1}, 0.25, 3.831364, {1.5979999999999999`, 1.06}, {2.39, 
        2.85}, {{0.1637181953998629, 0.3700196587951446}, {0.3700196587951446,
         0.8362818046001371}}}, {
       5, 5, {0, 1}, 0.25, 4.25, {1.5979999999999999`, 1.06}, {
        3.4979999999999998`, 1.86}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       5, 5, {0, -1}, 0.25, 4.25, {1.5979999999999999`, 
        1.06}, {-0.30200000000000005`, 0.26}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       5, 2, {-1, 0}, 0.25, 4.302963999999999, {1.5979999999999999`, 1.06}, {
        0.29000000000000015`, -0.55}, {{0.39760128134932105`, 
        0.48940218881682496`}, {0.48940218881682496`, 0.6023987186506791}}}, {
       5, 1, {1, 1}, 0.56, 4.722803999999999, {1.5979999999999999`, 1.06}, {
        2.9, 2.8}, {{0.358940155043487, 0.4796896081226322}, {
        0.4796896081226322, 0.641059844956513}}}, {
       5, 4, {0, -1}, 0.25, 5.452889, {1.5979999999999999`, 1.06}, {-0.71, 
        0.7049999999999998}, {{0.9768883980583503, 0.15025796417275328`}, {
        0.15025796417275328`, 0.02311160194164967}}}, {
       5, 4, {1, -1}, 0.25, 5.7682889999999984`, {1.5979999999999999`, 
        1.06}, {-0.6099999999999999, 2.005}, {{
        0.8451837277917247, -0.3617294487152083}, {-0.3617294487152083, 
        0.15481627220827526`}}}, {
       5, 3, {1, 1}, 0.25, 6.158800000000001, {1.5979999999999999`, 1.06}, {
        2.578, 3.3400000000000003`}, {{0.15593946872767417`, 
        0.36279794765214}, {0.36279794765214, 0.8440605312723257}}}, {
       5, 1, {1, -1}, 1., 6.259603999999999, {1.5979999999999999`, 
        1.06}, {-0.8999999999999998, 1.2}, {{
        0.9968688115094821, -0.0558693489236699}, {-0.0558693489236699, 
        0.0031311884905179267`}}}, {
       5, 1, {0, -1}, 0.54, 8.095204, {1.5979999999999999`, 
        1.06}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8337781234419787, 0.3722796856014994}, {0.3722796856014994, 
        0.16622187655802131`}}}, {
       5, 5, {1, 1}, 0.25, 8.41, {1.5979999999999999`, 1.06}, {3.598, 
        3.16}, {{0.4756242568370987, 0.49940546967895366`}, {
        0.49940546967895366`, 0.5243757431629014}}}, {
       5, 5, {-1, -1}, 0.25, 8.41, {1.5979999999999999`, 
        1.06}, {-0.40200000000000014`, -1.04}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       5, 3, {1, -1}, 0.25, 8.4148, {1.5979999999999999`, 1.06}, {-1.222, 
        1.7400000000000002`}, {{
        0.94504919903028, -0.22788420402148601`}, {-0.22788420402148601`, 
        0.05495080096972004}}}, {
       5, 4, {-1, -1}, 0.25, 8.537489, {1.5979999999999999`, 
        1.06}, {-0.81, -0.5950000000000002}, {{0.6791767462306538, 
        0.4667929879616829}, {0.4667929879616829, 0.32082325376934606`}}}, {
       5, 3, {0, -1}, 0.25, 8.910799999999998, {1.5979999999999999`, 
        1.06}, {-1.322, 0.44000000000000017`}, {{0.9568613368047763, 
        0.20316918795169905`}, {0.20316918795169905`, 
        0.04313866319522376}}}, {
       5, 4, {1, 1}, 0.25, 9.011489, {1.5979999999999999`, 1.06}, {3.19, 
        3.605}, {{0.2812480823091501, 0.44960827228441386`}, {
        0.44960827228441386`, 0.71875191769085}}}, {
       5, 2, {1, -1}, 0.25, 9.084163999999996, {1.5979999999999999`, 
        1.06}, {-1.4099999999999997`, 1.25}, {{
        0.996026051489163, -0.06291387958209474}, {-0.06291387958209474, 
        0.0039739485108371}}}, {
       5, 2, {0, -1}, 0.25, 10.891763999999998`, {1.5979999999999999`, 
        1.06}, {-1.5099999999999998`, -0.050000000000000044`}, {{
        0.8868778280542985, 0.3167420814479638}, {0.3167420814479638, 
        0.11312217194570139`}}}, {
       5, 3, {-1, -1}, 0.25, 12.806799999999999`, {1.5979999999999999`, 
        1.06}, {-1.4220000000000002`, -0.8599999999999999}, {{
        0.7121529187619078, 0.4527594715307493}, {0.4527594715307493, 
        0.2878470812380923}}}, {
       5, 1, {-1, -1}, 0.56, 13.330804, {1.5979999999999999`, 
        1.06}, {-1.1, -1.4000000000000001`}, {{0.5460438845248943, 
        0.4978754469722906}, {0.4978754469722906, 0.45395611547510556`}}}, {
       5, 2, {-1, -1}, 0.25, 16.099363999999998`, {1.5979999999999999`, 
        1.06}, {-1.6099999999999999`, -1.35}, {{0.6392341958353137, 
        0.4802226969959808}, {0.4802226969959808, 
        0.36076580416468634`}}}}}}, $CellContext`dynamics$$ = {{
      Complex[1.0155588635464656`, -0.00020344906926192532`], {Complex[
      0.8092116495569115, 0.], Complex[0.5655135862589794, 
      0.0029154401061891595`], Complex[-0.0836042832329365, 
      0.032540038279496294`], Complex[-0.0001239828791056237, 
      0.009783656923517929], Complex[-0.02674340155700092, 
      0.019989146477839823`], 
      Complex[-0.00161838527538297, -0.007657344448715123], 
      Complex[-0.021725665185662463`, -0.005276888079623033], 
      Complex[-0.014816001318484167`, -0.02235761611446227], 
      Complex[-0.11855957478528104`, -0.013991385026670652`], Complex[
      0.020323776867352268`, -0.012557089798369692`]}}, {
      Complex[0.7659818357411959, 0.0009567803707618717], {
      Complex[-0.21368774698718493`, -0.008608552553644615], Complex[
      0.42273543448439294`, 0.06239551732808418], Complex[0.7408053730338774, 
      0.], Complex[0.4458171048956646, -0.03595221599631237], 
      Complex[-0.026102745774401914`, -0.0067135076531037036`], 
      Complex[-0.05651857115261683, -0.04876035287679551], 
      Complex[-0.04501972837538265, -0.02800728007149524], 
      Complex[-0.04766496263788543, -0.048049960491388204`], Complex[
      0.08118871593363164, -0.03844687841799037], 
      Complex[-0.02723661865898005, -0.018029364198010024`]}}, {
      Complex[0.7133192379115759, 0.0018784153217077622`], {
      Complex[-0.4525336704590269, -0.015388487261797132`], Complex[
      0.6608445287810669, 0.], Complex[-0.21365929086035923`, 
      0.001042678129753713], 
      Complex[-0.26429394943066237`, -0.0480075293251583], Complex[
      0.09452279034202923, -0.0002773655182764685], 
      Complex[-0.028394552959652444`, -0.026970982045752944`], Complex[
      0.032874145001253914`, -0.028852568720060794`], 
      Complex[-0.04273176706603529, 0.012511357218136392`], Complex[
      0.47487705766704247`, -0.020071701873776618`], Complex[
      0.0015646697853449916`, 0.013266772974342103`]}}, {
      Complex[0.6088154819360784, -0.0005720447478369116], {Complex[
      0.017278508688206136`, 0.0024473384173532365`], 
      Complex[-0.03961708931319705, 0.011648847693179715`], Complex[
      0.01230030573127355, -0.0129707833756752], 
      Complex[-0.021804287015962834`, -0.021391865761642682`], Complex[
      0.6919935037802173, 0.], Complex[
      0.41131948573082877`, -0.022485862057164366`], 
      Complex[-0.07736212327719102, -0.04136439889068069], 
      Complex[-0.036390864458054464`, -0.05004271393080702], 
      Complex[-0.5075875406699746, -0.22694712700092895`], 
      Complex[-0.14165914492597537`, -0.08632167146475625]}}, {
      Complex[0.5679915487472201, -0.0012232702087636574`], {Complex[
      0.07424994005375585, 0.009607704260527525], 
      Complex[-0.05239383569252204, -0.0328990894273794], 
      Complex[-0.043955876033948585`, -0.03988883143697917], Complex[
      0.22051539834440864`, -0.01773452675367214], Complex[
      0.2286603180124145, -0.1441102643394386], Complex[
      0.2279511263114909, -0.12717806499291204`], Complex[-0.3519791994715512,
       0.08837577662968643], Complex[-0.17079926309341403`, 
      0.0184963803618811], Complex[0.7102464696804274, 0.], Complex[
      0.3618919493683066, 0.016826369475289177`]}}, {
      Complex[0.528190730639132, 0.00014279008409399417`], {
      Complex[-0.0044213038846697295`, -0.026176877417623676`], Complex[
      0.04104951115989301, -0.03401554581338255], 
      Complex[-0.16103889417245454`, -0.28351146761689194`], Complex[
      0.36043867571918786`, 0.32812617690236895`], Complex[
      0.14798589487378488`, -0.031120651420873825`], Complex[
      0.07493437637632012, -0.1591178717095746], Complex[0.6536719191602337, 
      0.], Complex[0.39135766111056275`, -0.07143552143765806], Complex[
      0.1041642166925518, -0.02785902649576301], Complex[
      0.03811677590422538, -0.011224633075002691`]}}, {
      Complex[0.49479494484497377`, -0.0002896943135764401], {
      Complex[-0.08749150964494207, 0.03658808458728435], Complex[
      0.07017687465622527, 0.010267736273217837`], 
      Complex[-0.35684830166117343`, 0.09873961563772542], Complex[
      0.5111080520370174, 0.], Complex[0.14245614566531603`, 
      0.034050092436526895`], Complex[-0.283644298799147, 0.2758592523287998],
       Complex[-0.11136761831664117`, 0.27668069423463215`], 
      Complex[-0.19519387400738497`, 0.32635762743721664`], 
      Complex[-0.13606660344079693`, 0.07082849688136558], 
      Complex[-0.3643754683041955, 0.14065527465374122`]}}, {
      Complex[0.4251696239348596, 0.00123624571593591], {Complex[
      0.027461485702547344`, 0.016743107704242633`], 
      Complex[-0.032511023285676094`, 0.004307167314783113], Complex[
      0.03513527080147212, 0.05600427354606102], 
      Complex[-0.05299150832813837, -0.043713757688199156`], Complex[
      0.3273967013969308, 0.10106357941741348`], 
      Complex[-0.52322817409697, -0.06647019522363132], Complex[
      0.0007030008741434057, 0.10252579899656242`], Complex[
      0.08000740673507059, -0.03015247665285138], 
      Complex[-0.21271238121459018`, 0.08711954023909661], Complex[
      0.7228781640703503, 0.]}}, {
      Complex[0.39979451846401365`, 0.00036760609198510907`], {Complex[
      0.03590193289463495, -0.005545861922629876], 
      Complex[-0.017020875572477532`, 0.00017532836880996237`], Complex[
      0.057017613534050146`, -0.004458371880639685], 
      Complex[-0.061933002768613035`, -0.04179009619576177], Complex[
      0.183796643743229, 0.006217118350654485], 
      Complex[-0.24161061722372856`, -0.08662135814439383], 
      Complex[-0.3586239462092271, -0.055447765858659986`], Complex[
      0.6600834699212367, 0.], Complex[0.25381896410489874`, 
      0.0027791109055034235`], 
      Complex[-0.5063030911035179, -0.04084560773850032]}}, {
      Complex[0.2227954918290273, -0.006408374593294209], {Complex[
      0.15315026941075838`, 0.0686402110859517], 
      Complex[-0.14161939272768814`, -0.03631593569323475], Complex[
      0.21553340853987277`, 0.11064940079334262`], 
      Complex[-0.19005507717477763`, -0.11869501090265244`], Complex[
      0.32623187883022386`, 0.07941165529133543], 
      Complex[-0.2775311918829133, -0.14769084241851618`], Complex[
      0.4189364794362607, 0.], 
      Complex[-0.3927040444535075, -0.029016250948993183`], Complex[
      0.3693846639014846, 0.07429999374346692], Complex[-0.39515855253747323`,
       0.03605076697163208]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
a481FW6YftxmlWW0CvSvZ8Ys/haA/wOHTDlA
     "], {6.9, 12.8, 20, 25.500000000000004`, 26.6}, 5, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 8, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJx0nXdUlEnztjFnjJgwrhHFHFBAHswKYl5zVsw5rjkhihkzZjGiYkJRERzF
gFkUCTODMMMgwwgKGNExfPv9tqtn565394/3PadPnaa6uqru7gt8uuaYGX29
89rY2MyrYmOT7+//71v1SOjD4AK3eu7R5v6YYlYNDytf2vdqtkLjzpeOhf3c
+kn12mHG1fKulvF/7DNUIwLbl6x7O0uO9/6/ca2qSf3vVS+tt4zbiP+WpdWa
WziS2SsvzVObh7tY5u/xz/yK65FCawbeYf4ozwev2lS4VA74Y1Ze9Tz38URa
tvIrNrfbwA42cl3hvdclfZtuGad1jSuadPClG9pnqKqvnurzYZBlnNaVmJv0
fWGkZZzWlezSc+ec4TlorywLm1M77oZlnNY1o3a7ybX9ctAfZYD3Ujff78x/
JaVN2UoN1lEcPqtoXSernHh6YqplnNb1yiv51sCLaJ+h2jTihPauc44cp3UN
Pt294+YzlnFa15eT6r263cxe2WQ/d/TaEpZxWldq3jpr76xk/igD77mV7uHG
/FdGvO2R8aVrttL7/8bfyHX1eL3Z8O6yZZzWtWSh8/zJeXLAPkOVZjCmTvts
sad1VRnn2274Mss4rWv9xRKRc/Mze+XKI7tvPtuy5Dit65P7wgarN2WhP4pN
K10j8/cs9F+Z083UeszsbIV+Hq2rbfejX8bFW8ZpXbZ1jzrdW4H2GSqfykl5
R//IkuO0rglvuryfOtYyTv9F1inu7dWW2StoT+taD/PTuv63P2aF/BfrVWhd
tF4ap3VBfBRa1zfreCq0Loi//PmwX2SvwP4qtC7IB/JHgfwh/xXKt/7/5Kdc
13CRnzRO6/pT5LO1fYbqjch/Gqd1bRD1QuO0rm+ivsBeGSjqkcZpXVS/4I9C
9Q7+K6dFfxD9xJ3WRf2Exmld0H/caV3Qr9xpXdDf3P+jH5K9Av3TndZV1brf
kj8K9GfyX6F+Lvq/XBf1fxqndYFeyHU5W+uLXBfokVwX6JdcF+idXNcQa32U
6wI9letC/aV16avM3RB1zcR0efT6pddm30lnunx3T4c7641Gpst559RdHXPc
yHTZZ8bzzan3mb0ypVmNXut7pDNdLjtyTb/d5Zg/ysdYTcM5K0xMl1d7z650
e5yJ6bKb6fFkd38T0+W8f8WVbtIW7TNUVxP7fKhf2cR0eXeFgs8j+5mYLgef
6OQ16iazV1yubPOu88XEdNlR9eCLwzPmj1L11oILnl7Mf8XrhVdWeHg602XH
rvPG1TiaznT50agrzfbloH2GqsCZoReq+JmYLj/oVCzYPc3EdNlpm++52snM
XqlnqDOm8moT0+Uvlf686VfTxHS5RqkGWbPKmZguJ026PO38ABPT5UuVS2U0
czIxXa5QqVr/RcvR/u/9eqc5mzLCxHT5T7cCAc0upzNd3qA/nrE718h02b/i
mZx1x4xMl4sWar28zWkj0+Wsvd83FnNMZ7pctVtWv13NTEyXg54czpgSYGK6
7JG05NE5W7TPUP1h+3jd2VLpTJf95vma+s01Ml0+NvLON4OXkeky2tO6qsP8
tK7/7Y9ZIf9Rl2m9qMsQH6lfpa3jKfUL4i9/PuyX1C/YX6lf56zzQeoX5I/U
L8o31OVkkZ+oy5VFPqMu54r8R13+Q9QL6nJ7UV+oy1GiHlGXC4n6RV2OFPWO
utxM9AfUZeonqMvQf6R+1bHuV1K/oL9J/YJ+KPUL+qfUL+i3Ur+gP0v9on6O
ukz9H3UZ9EKuq5S1vsh1gR7JdYF+yXWB3sl13bfWR7ku0FO5LtRfWtfmiWW+
rBmUznR5ij6olP0bI9Pl3p/D6vgv4Lo8v3v6i+LluC4/6+3/4mJSGtPlvFuc
+p+NT2O6/KPc54h2mWlMlw93H3Kjsy36Y1bSjz5dW6GZkelyis+iblUWpzNd
TmvV/P20MulMl1s/q+UR/MTIdPl3+Zv7eu83Ml1uaT45deEKZq/obvf07bbe
yHR5tzY851mYkenyo0LNijrkQX/MyvkuHVb36c51+da0HevsO3FdbpkdfvNx
Ha7Lu79e3u352sh0eWX9t1fWHDAyXa56wzl67GJmr8y69uVa/lVGpssX43c4
jjplZLr8xrPDnEo6I9Pl7lvjDi5uw3RNlapojD/bMh1UdfO+N9CvqpHpcg2t
oz7kWxrT5XOpH+LmJKYxXQ7JP/7btGhmrwzyPrnsU1oa0+WGJ+16ZzThuvwt
39fdZfegP2Yltr1K+7FwOtNlmzUpSQnuRqbLe/rZfQ/KY2S6PDK1c59XsWlM
lxd87D2i+eU0psuTf/gtK3qc2StoT+saC/PTuv63P2aF/EddpvWiLkN8pH61
sI6n1C+Iv/z5sF9Sv2B/pX6Vt84HqV+QP1K/KN9QlzuL/ERdfi3yGXX5msh/
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
rnzW+ijXBXoq14X6S+sadGW7f+kGTAdV07uuXn2yk47p8udpuq0zbycyXZ52
o/WTBbFapstpDQ6stWnE7JU2g039qpfiuvz7wb5CIX10TJcL/lhm+3Ee+mNW
upUNM67eq2O67Nv83reKX3RMlw0fDr7yyk1muvxDdXNSkiGZ6XI9vxGbZnbX
MV3OSnLsP2Khjunyr9qT153coWO6/LBOwTwlzzN/lHWhc+17hTH/ldonCpsW
n9QxXZ5l7nOtU4iO6fKF4z6V3oSifYbqUlD4s0M3dEyXw0M/22mO6pguJz/y
Gf7el9krM5pNXv3BW8d0+YmyZ15AFeaPcu/6o0/nTiQzXZ6Vawqv30fHdNlU
OT6x2Cmmg6r9ERs/zPBF+wxVZru8JfuPZjqrOucU0N3UTsd0+WKEaseIt6+Z
LtuHrXauulbLdDnu8XinrR+0TJdt7Au+SAp7zXTZ1Dmq0sj7OqbLA4/O3v1p
CtNB1bpCH+eHl0D7DJVv7Tl+OeNfM11+ku14p/EgLdPlENfl9y67aJkuoz2t
ywfml3n4P/0xK+Q/6jKtl/09tnV8pH5prOMp9QviL38+7Jfl98vW+yv16511
Pkj9gvyR+kX5hro8W+Qn6vJdkc+oy5T/qMvTRb2gLlN9oS5TPaIuXxD1i7p8
UdQ76vIM0R9Ql6mfoC5D/5H6FWXdr6R+QX+T+gX9UOoX9E+pX7+s+63UL+jP
Ur+on6MuU/9HXQa9kOsCfZHrAj2S6wL9kusCvZPrAn2U6wI9letC/aV1fS9Z
/ouL12umy5sCosNsnyQyXT7/6KiqcKKG6XLpxIiJdcZomC7X65Jklz+A2Stj
xx/wPpKtYbrsP7VkzrYaWqbL3X4Pmbx8oJbp8i+XXXm6bdUyXU7f+S4uY/5r
pstJ+V1873ZMZLq8IG7wsOzyWqbLx8qGb1qeomG6fM5mmH0Ls4bpcmyUcX1m
Uy3T5du7/6y6eI6W6bKp8pu7FZ4w/5X8y1o8D++YyHR5WfuRPVetSmS6vMjr
sH+fEmifodq0reH7gse1TJd1rdzsj/6pZbp8envI/p7lmb3SokeF7RONGqbL
p5xDn4elaZgub/46fvPkf81P6wqy15qTvicyXfYs4rvydxDTQVWzacEVz87X
Ml0e9qmmn4uiZbocnj//3JfFtEyXrxpfXMqJ1jBdnjRq38Uuiobpcq+nm+Pc
h2mYLl+Y5pfs8Bn9MSvv95nyF/2ZyHQ5X9iSsPh1WqbL1fx27Nk7Scvvywce
7i5bjOmsqmvj9U0fHlUzXd7lYXP38h4102W0p3Xh/JJv/E9/zAr5j7pM60Vd
hvhI/YJ4Sv2C+MufD/tl0S/r/ZX6Bfkg9QvyR+oX5Rvq8nGRn6jL20Q+oy6f
FPmPutxY1Avq8nlRX6jLr0U9sn8nJeoXdXmxqHfU5UWiP6AuUz9BXYb+I/Ur
wrpfSf2C/ib1C/qh1C/on1K/pln3W6lf0J+lflE/R12m/o+6DHoh17XBWl/k
ukCP5LpAv+S6QO/kuoKt9VGuC/RUrgv1l9b1IHhAZSVWw3S51+z+NRqf0DBd
VrdOXrImQM102W6C17UuzRKYLnt88a7WPB+zV5wmvGzkckDNdHlmiT1df9xQ
M12ut29yZqpGzXQ54kiRuKW/1UyXO+5PKZy8S8N0udubd5+TXTVMl79sX2WX
cVvNdNnnc/UZMRFqpst30ur0WHOf2StPVY0+vEhWM132Kh85rEkp5o+iDx+Z
7u2G/piVrJ9/lQry1jBdjhmUnhmzhumgauWBDr3n/In2GarER84JvR01TJcX
V4je8e6bmulynY/lbG2j1UyXbS5fL10jQs10ua7dxMhJwWqmy6P9hw5tpVUz
XXaJjZ7Xb5qG6fL4wKhP82yZDqrmtetn++StmulyvT4/Cts/VDNdvl3Db0eh
c2qmy97Ofb6cWsTslZhuQzLP58YzXS7R3+nw1LYJTJf39D14s8hQ5r+icfny
ekKkhulyZou/Rq5w0jBdjgpafTYwQs10ufOuPs4By5jOqvrXWniq8sNopr84
LvMN5iH///fPNSvkJ+ovrQv1F+IgdcrWOm5SpyDO8ufDvkidgn2UOtXQet+l
TkGeSJ2ivEL9bSPyEPV3hMhb1N8GIs9Rf3ND/qkL1F9HUUeovzNE3aH+GkWd
ov76i7pG/X0p+gDqL/UN1F/oM1KnPK37ktQp6GNSp6DvSZ2CPil1ymzdV6VO
QR+WOkV9G/WX+jzqL+iCXNdUax2R6wLdkesCnZLrAl2T60q21kG5LtBNuS7U
WVrXm8ZNtjdPS2D6W/pU1PT2PglMf6esqXpG8Ylj+usckTllnOoZ098NRzZ/
HrnkKdPfwh5/3CzYLJrp782QKp36Jr1g+vum376i2yq+Yvr782BA7SG14pj+
Ti4Q9sBfl8D093rTKp285yUw/fW+NcR54OB4pr85QzMzy5eMZ/p7ZPbaqNKO
zF6ZkLf5uCOu8Ux/XWtf23VmeDzT31DfWdHfj8Qz/S2Z9fRKRskEpr+6ZcGV
f/VNYPo75KNnfcfYeKa/j060nXJoZjzTX/fCO4dNaR7P9Lfv44flK5dl9soB
1xlR+7/GMf3N/Wnu1TI5junv/qVZDr1voT9mZdV2V/3gywlMf2+vibJdnyee
6a/hV7+vv9rEMv2ttdCv6bykl0x/D/4+5LovMJrp79mn193ednvG9DfH7Xlm
tXaPmf4Gtn77LP7rC6a/F3u72QdHxzP9HZrm/apJSALT3zKhi2sfnhrP9Pf0
5l3+W6NjmP7ODSiU6+b0hOnv5aBgzfoyEexebJrk1cwpt4kb6jLa07oWw/y0
rv/tj1kh/1GXab2oyxAfqV8h1vGU+gXxlz8f9kvqF+yv1C9763yw/B7ZOn+k
flG+oS4vFfmJunxE5DPqslnkP+ryblEvqMueor5Ql1uJekRdjhP1i7o8XNQ7
6rJB9AfUZeonqMvQf6R+Qb+S+gX9TeoX9EOpX9A/pX6Nsu63Ur+gP0v9on6O
ukz9H3UZ9EKu65a1vsh1gR7JdYF+yXWB3sl1TbLWR7ku0FO5LtLfU9+eLC+V
m/dWpzq3Bi/99VXVI8Lsse7PbDneVPGzX1YrR7Us7t0BHw/LOK23xt66Z+a2
y1bM/xe3bJkP5iV7Bz3aSt/V4d+ZoXnkveZ0wfuRVSzjLv83f6pq3+PLD+uU
tIxT3BYVfO9j6ojjj1W28/+qrOpjGad4bqlwwehyKFvp9n/+xEp/OpatNM3h
frbiBXVK3/k5Na57bddKZlVnEZ9uz0Oe198qv5+jchFxoO/qWK/LrNq45vlX
ZbtlHopblbNJTez+sszj/B/ziHUpCfteG3Y/YXFQ6g+d2fCh2TI/7dfC9ON/
1Fljmb8tzi/sKf5xM4tc0D602Eu+Lb4jZL3vqcrr4IhXuxTLuOwbYwK/tqub
A+tNVV0+02HKoV+W+Xvg/MKe9ndvn3LV8zvJ7xex749BfirVVcmLd/VAPz8p
25J/e3ctYJnfU+RJlY+emSt8LPN74vzCnvLnbU7ZiqcXWexpnL57BnWkDHro
0a/SE5YPivbOKN+JV7MVm7j/qxdVB5FXW+2cXv4Rkq0MtDoPWL5vZr1fZtWl
1hUGRE/D/bJ8543mp7w6ZdhoP1ptmZ/G6TtXNP+fIt+cL54YqQ3C9V52leu1
3i+lYMbHyHPj2H7J77+RP81Ffr7eY3g5JsbiT1+RD/Q9LrKnPHSu2XVUpYo5
0r4n2JM/bUV+XhzxJPZJNYs/HiI/6btzZE95e7rsxdw5BXIwP6U9+eMk8rlG
VMVyy3pb/PH4D//l360VmnjrczmLPY3Td8nIn2Yin6u2fJFS+yarR+Y/5flA
u6R6k/azfiK/p0f+jBT5/yH4zKo8CZb4/7O/keEbxPfTyJ7y/NbZOecaPEP7
v3VK2EOfVKr+rm/nMpb1SekP5LNyuHTTVaUmsnyW3/0b9k/fVnUR9RKcJ2CT
ei99d+5uuKvIZ/k9Oqv8Mau+CT2yzh9LfdH8VBf3nr+Pq3DbMr/zf8wv4qls
TLtV+tc6Fk/X9RBPqou5K36/HzclG/NBCRXftSN/moh6+e7TeXOlGxZ/2oA/
ZE91seOvhi2eL7TY07j8TqDwp7Wol/wjBi2uPdniTzeRb5/F9/fInuri/Ium
mzvUxn5l+f4h+UP1cv7aouQubhZ/PMEfsqe6mJjRX1OkosVengPp+4TW/UQx
XWoX45sX42nxB/qhkjmjwqvUqqwfyu80kj/tRb241W7WtmFolvTHA/whe6qL
KXe3z7U/YrGncfndRev+r7wpWK72wEGs/1u+D2mdz8rESvb+jsNZPkt7Oud0
FPXS3qnL1e0LLeccL5H/ZG+dP2ZVB3Euss4fy3cpaX6qi66Hu0+oqVjml39H
BPGkenHNLdXE5I3xCXOl+EA+KLaDzn3MXZSF+SC/V0n+kL50NswYf6eWxR+R
D/J7ktbnwAyVKvhM+Q93s+AcaLEnf9xEvTQuO6r4X39Z/BkA/pA91QXNT/b4
XU3yp42ol6ZifvKnx3/4T3VB8bFer+U7meRPY1EvnUR8oJ8o2E+oLmh/oR9K
e/Kni6gXF7G/1v5b/CF7rBeyp3Hqn9D/FXeRz9D/mf9UF3Hd7u8yHGP5LL9T
SvcX0pdUUY90f2kn8pm+5wn3CBXND/cIWV80P9XFW9F/aH7n/5h/iKiXdqL/
WMfngtQXyAeF+ifkg/wOKvlD+kL9k/xxAn+s73cZqoui/1vf7yzfNYV8Vnqc
KdB4Wz+LP3Qeo/MS2VNd7BT6Bfkv7ckfRdRLPqFf5M8QkW/0PVWyp7qYLfSX
7HuDPflD5zHSX+gPzH/5d7Pi/AD9UH5Xlvyh81hQl0sb/C9Y/Plnf++F54rz
NtlTXdwW5zFrexsbsof+r9B5Cfq/vOce++c8Ju+/IeJ+8QN4CH1Plezbi3qx
F+c9svcU+U/fjwU+oCL9Aj4gv6NL88u6EOfbH8CR6Du0EE+laMGmmdWK5WA8
Xb9BPKku2orzOeSD/L4u+dNC1EvKp4h21wwWf/qJ/J8uvn9rHc8MFd0vfgDv
ou/lkj+kL9XE/QLyWfpD9vLfVYn7Ednjd4DJH3HeU/08lPDmT0+LP93BH7Kn
usgv7nc/gMvRd33JH9IXut9BP5HfH4Z+qND9FPqhtCd/XEhfxP2U/OkC/pA9
1UWmuL//AH5I3x+G/q/QfRz6v/TnxD/3elkXxHlovKuoC+IAUF+qQ+K+A/Ul
64XmkX8fJTgGxEGZ0jvRo1EjFgf5/WTYR4W4CuyjtKefK/ZRRVzFer0ZqljB
eWh+0YeVK4Lz0PxD/sMfys9YwZ3IHr/zTD+X8jZRcCcapzx0EBwM6lQhDkbz
94H5oc8oxOWgz8jvS9PPpTxUCy5H45RXWwVvhD6pED+EPin7KuSVingRjXuL
fSfOCXFQiIvSOO3LXsFRaZziXEdwVxpvJOK2VPBeyEOlpuC9kOeKF3Bj4snR
14/5D25gYjx5Y8iE2Kfv0xlPbp6nwZvev9IZT/5wIbKew7t0xpPp+6jIk286
P9KoV6QznpxYL9z518h0xpN7dC7v8HgJjj9Wbb7z9ly/TemMJ1csVnR6YGQ6
48nn5gzK6DnRxHgyfZ8WeXL+4+7PprU3MZ5M339GnlwqXw1zvuMmxpPHZ96r
6W1nYjwZ5yGeXHxq857zCpgYT+43Z7BmYE0T48m3D+Yrk1LAxHiynB94ctKd
AS8C+5gYT6bvVyNPrld047ARa0yMJ9coWe/4qFm43lRVT/0F1YzpJsaT5fzA
k5ucK3wzzwET48n03WzkyVsf9fHveRL9/KQU9nSYnjzexHhy2Od6S3u/NDGe
LOcHnjx7/5ulkc9MjCfT97qRJx/ut6PEnmomxpMn2o/KryplYjz5ZsSYzePL
mRhPxjykvGq15/CEppVxvyzfJ0eenB1uilzfxsR4Mn2fGXny9aPFix5/i+u9
7CrXCzy5WY9Ew6Fwtl/yu+XIk93rdctyq29iPJm+K448eUSPfed+zzExnkz2
yJMDjB/94zeYGE+m76UjT/bP3KxRL2D5Ke2RJ7tX+njWP9DEeDL6T3m7pX3h
Wm29TIwn0/e0kScXnTb+6mQnVo/Mf8rz6unRz5Oasn4ivwOPPLnB9kE9pmal
M568UXz3G3lyStvyXkkZaG9jQ/bIk0OzXWbsTk9nPJn8QZ68s+rKxqFFWD7L
79UjT1625P6Q7D9MyBMs33UHnpwl9Ah5MtUX8uSLi722lOtqQn7C5qf7y+CU
N3XVESyerhhP+fftS9ODXmxPZzx5m/geO/LkPGlnbjxobUL+I/1Bnvzu58u9
UVfTgZ/86/v2wJMrfQ6eGbQrnfHkYuK78ciTV2y9V03vnc54Mn23H3mya930
UjPGWPzxBH+QJ2epO9/uUC4d+aHlO/zAk3cWa+r050iMp8Uf5Mnr/ixz0+1w
OuPJ9P185MnrG+56Oy/UKP3xAH+QJ+85fPlDu6NG4KX/ei8AeHK1sxtr5q/F
+r/lXQPgyb8SXuj+6IT90GKPPLlF2dZb/qhhYjyZ7JEnB4tzkXX+WN5TQJ58
IPxGw+EH0hlPxnhSvdi7Xp3XeiHGJ8yV4oM8uUTUnmnTNxoxH+Q7C8iTz81W
H5szLJ3xZHoHAXny3vU2PrNfGxlPLg35TPd9D7cRLbtssfgzAPxBnrxDzE/2
+B4E8mQvMT/yZPSf6oLigzzZH/oJ3fdPi/hAP1Gwn8i/0xP7C/1Q2iNPriz2
F3ky+YM8ebeoF+TJ9A4F8uSWIp+h/zP/qS7GFn1QfaU3y2f5vgby5CqiHpEn
0zsUyJNpfuTJVF/Ik31E/0GejPMTT6b+gzyZ4oM8mfon8mQ6byBPpv6JPLmS
8Ad5so/o/8iTv4rzCfLkfRebeu6blM54Mr0bgjw5TegX8mSyR55M+oU8uaY4
fyJPVgv9RZ5M9siTf7z5R3+RJ6P/8t9FivMD8mQ6byNPnhhbMTrudjrjye7i
vI08+Y04jyFPJnvkyXReQp5M5x/kyU7ifoE8md4BQZ58WZz3kCfTuyfIk0m/
kCfT+y/Ik+3F+RZ5Mr2fgjzZM/1erTPdTYwnt4d4Ul1sFudz5Mn0Lgzy5EMT
vn3wmmViPJnebUGevFncL5Ankz3yZGdxv0CeTP4gTx4i7kfIk+n9GuTJtfos
cAw8ZWI8Gf23/PvNf+53yJPpPRrkyW3E/Q55Mr2bgzz5nbifIk8me+TJN8X9
FHky+YM8eYG4vyNPpndzkCeHifs48mTyB3lyScF5kCcTB0CevEvcd5AnU70g
TyaOgTw5s//9m3MCWBzkuz/Ik4mrIE8me+TJGwVXQZ5sLzgP8uRegvMgT0Z/
5L9PEdwJeTK9T4Q8ua7gTsiT+wsOhjw5XHAw5Mk0P/LkMYLLIU+md5GQJ5cQ
XA55ciXBG5En2wh+iDyZ+iryZOJFyJOJcyJP9hJcFHnya8FRkSerBHdFnky8
F3ky8V7kyciNiSfXbbHtrH3TdMaTo+PHN0pNMDKefKrY9OV3zUbGk2MHOF0r
rjIynkzveiBPvjM6y6l6oJHx5LhiBW2HzzQynuzcNCa08SAcf6xKCznZemU7
I+PJeU5UObSzCd4jzMrsMSPGTmmH9wjLuyrIkzeE7cs3tzfjJPLdIuTJ1+Z3
qf5iUjrjySW2L4irUiWd8WSch3iy/b0ZujKOLA7KrPodp31vamQ8udXImT6u
34yMJ8v5gSenjcmc+eOVkfFkencJefL0jJp/dHQxMp7skZsw0LefkfFkz7XX
Kz0LNzKeLOcHnnyr+qv6GfuNjCfTe0/Ik/dv2zBg/TiWn8qVU/fGXF1rZDxZ
U7q7/+/NRsaT5fzAkx2Gzjr4fqmR8WR6Zwp5cv1uPQ89PmNkPLnH57VrWkYw
nqAqvsczJvW8kfFkzEPKqz4L16bvG5nOeDK9q4U8+WaD9htOHzEynkzvCiFP
Xn6zU8O4Vbjey65yvcCTHSICD9X1Zfsl39tCnnz6zafnqi1GxpPpPSzkycNM
M8OXTzEynkz2yJMfPJk1uH+AkfFkeucLefIxdf0tuy+y/JT2yJNfrNzweL+n
kfFk9J/ydo/v9Ps/XI2MJ9M7UMiTb2aN2XeX1yPzn/I8Iei625FsI+PJ9H4Z
8uS95U/Ff2ttZDyZ3qtCnpw+Mjo1vQ7aW963Qp7s0b3D4ivlOE8mf5AnL5lS
3D/NneWzfGcNefLNh1+zY6oakSdY3iMDnvxS6BHyZKov5Mkzh707FVDSiPyE
zU/3l20jGg9u68Di6YrxpLp4Y/t835KWLB/kO27Ik4dVOPLu3M805D/SH+TJ
t0a2rXTXmAb85F/vsgFPftbEN3/uICPjyfR+HPLk6cqfN+tMxX5lsUeevHZc
lXK11RZ/PMEf5MllM49U7vcgDfmh5f044Mnrvp0ZnXcdxpP7L7nxyf1ryoez
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
EHmy7bFeY8LycZ5cOm5Fw0eTkR9mqDLF/QJ5MtkjT6b7BfJk8gd5srO4HyFP
vifu18iTbyzfcCRrtIHxZPSf6qKIuN8hTw7e+Mjv8CoD48lnxP0OefIJwR+Q
J9P9FHky2SNPPi7up8iTyR/kybPF/R15cucP6z7emc/6v5Iu7uPIk8kf5MnE
eZAnXxEcAHky3XeQJ1O9IE8mjoE8+ULtRoXy9uU8ObK84/w/anGefF5wFeTJ
ZI88uaLgKsiTifMgT74rOA/yZPRHvj8ouBPy5FkR4W4Pr6cwnrxVcCfkyUUE
B0OevFFwMOTJND/yZOJyyJN7ltvu5RSQwnhyrOByyJPzCd6IPJn4IfJk6qvI
k4kXIU8mzok8mbgo+96F4KjIk1sJ7oo8ebvgvciTifciT0ZuTDz5w9Emnhde
6hlP9s/7qem6DXrGkyfae7XvcVTPeHKNhR3PH/fTM578bN7QK98D9Ywnb390
etHY5nrGk317NrFZ+lvHeLJJVS628k8cf6wq03l2sQfpOsaTN3iWLPr7i47x
5MVfxn4J34D3CLMye0nDoN4z9Ywn5zu1tFojtZ7x5Nqh+lOP9uG6zKqKKdmO
w+04T15YfV+5h0F6xpNxHuLJjgvOfRlTCse1yvqlZbxqVdQznnykYIf8Bbbp
GU+W8wNPXmv3tfyunXrGk7NjPJ9lBuK+pyrptdY3mPCvfKD8fLC6xpR6fnrG
kzN8EzNabNczniznB56ct6VLatAePePJ1RsXUSUEs/xUxjjPqWe3j+Wn0via
odPInXrGkxc7J6ToTugZT5bzA0/ObJscEHVMz3hynkYVGp0I0jOenDDkbKL/
LpYPSt37Aau3bWM8QeUZUDCohK+e8WTMQ8qrhLVhte8l4n6ZVU9FfSFPzl9x
RmqF7XrGkw0Lf1T3Xq9nPNnTvWP22rO43suucr3Ak51uDToy/hDbL0Xt2GHL
2C2M/6ju7n0Y82mznvHkccsv/qq2Ss948umgZWlrtukZTyZ75MlG11UXC+7Q
M57ctu7O80f/0jOeHLW/4of7/iw/pT3y5MgBr5PMu/WMJ6P/lLc77i/t2H28
nvHkIiM/RF2vpmc8eUdlv5KlN7J6ZP5Tnvv6jtv9IoD1E6XaL09V7R16xpPP
Te6r/susYzy53cl9Hyt21zGeXH3y4K0jv6G9jQ3ZI09u4tCoSf59rE9Kf5An
59lXo0D9GyyflUh98ylTX+kZTx70JXXrg9l65AkqZebBv9znYf6YVaRHyJOp
vpAnl57n9eTlcj3yEzY/3V+KvZ3e3i2TxdMV4yn7dt1hrwvl6BhPdqkxv+HZ
vjrGk19+PXnj/GI98h/pD/LkPe9jn07Nowd+kqF6PPz7/rAVOsaTP3RsfXBp
ST3jycWGNgjevUXHeHLgrZHnqubHfmWxR548ecT85mHPdYwnkz/Ik2/Y3LmW
cEKH/FA1LXB70NfGOsaTdzq6tE4qjfXF/ae66H0y5HuH/qwfKit727ceXU7P
eHLssd09C7ta/PEAf5AnB+8pHDW8lQ54qY1N1fXz9gbW1DGe3H7QnsZXL7L+
r4y7lHqg+3OWz0rZRxvya1+wfJb2yJP7+Lcv1jlQz3gy2SNPpnORdf6YVT4z
93d0OKlnPHmUblh8dCc948kYT6oXx9jPY+o5Y3zCXCk+yJP7633evnBn+aBQ
/JEnn/JOLTM1L/LVv+/LIh+QJ08fVqaOwzod/34y5DPd98N/jTjTdaTFnwHg
D/LkqWJ+sqfxJyL/kSerxPzs+8ngv/x+oIgP8mTsJ3TfPy7iA/1EwX5CdUH7
C/1Q2iNPpv1Fnkz+IE+mekGeTP0TeXJfkc/Q/5n/VBdz/W/NbHuD5bNC+Yw8
meoReXJVoV/Ik2l+5MlUX8iTe4n+gzwZ5yeeTP0HeTLFB3ky9U/kyXTeQJ68
W/RP5MnkD/LkE6L/I092EecT5MmmrX/035CgYzx5vDgvIU8OEPqFPJnskSd/
FvqFPJnOn8iTSX+RJ5M98mTSX+TJ6D/VBZ0fkCfTeRt58sETXRwdfukYT84r
ztvIk+k8hjyZzufIkweL8xLyZDr/IE+m+wX73kVApR1bynOe3Fic95Anu/e3
PWQ4wviAivQLeTKd95AnrxHnW+TJ722Xzlh2iMVTKXDf53uTcXrGkzGeVBd0
PkeeTPdB9r2Lwp8Wrj2kZzy5T9n9Ld+exnhmqO6L+wXyZLJnf58s7hfIk8kf
5MlnxP0IeXKOuF8jT7arkaWve0DPeDL6T3XRWtzvkCfv6DcjZNJ5PePJ98T9
Dnky8QfGk8X9FHky2SNPpvsp8mTyB3nyO3F/R56c0OVkQdMh1v8Vuo8jTyZ/
kCdXEpwHeTJxAOTJdN9Bnkz1gjy5ieAYyJPntuiwb+suFgclre20IotXs31U
8gmugjyZ7JEnjxJcBXlylOA8yJMzBedBnoz+UH6uE9wJeXL1gYEjlXV6xpNN
gjshTyYOhjw5UHAw5Mk0P/LkvwSXQ578dF3/FVFX9YwnE5dDnrxR8EbkycQP
2fcuRF9Fnky8CHkycU7kycRFkScTR0We7C+4K/Jk4r3Ik4n3Ik/+CNyYePJ3
12Nuow7oGE8O7ddsmKe9jvHkmaNMrSfU0PG/T96ww+NUsI7x5BnmPtc6hegY
T87d1Wvpyb5JjCdfjvhe+Uzia8aTk9IWznFsmcR48t5qjV5kj0xiPHnMXPPu
pC1JjCfXSK7tbLMe7xFmxVQ5PrHYKcZJVPaZx4osj9MxnnzhuE+lN6G4LrMq
a87ZznalGP9R+Zd8m8d3sI7xZJyHeHK5KsVe3ezEuLpir3KYPravjvHk+LzN
603ur2M8Wc4PPDkh/7OVUQN0jCdfCgp/dugG7nuq8utL3m6N5ugYTx73tXf+
0St0jCdPDSjReN0qHePJcn7gyTnVT/c5Pl/HeHJ46Gc7zVGWn0r61shCK7ex
/FS6qr+Vq7lHx3hyrEfpVvs36xhPlvMDTza+ShhUd4WO8eTkRz7D3/vqGE+2
e3Fn8dXNLB+U0GGj038fZjxB5aVrtPiv8zrGkzEPKa9+7CqmPvcK98usmiXq
C3nyiYuFfU8f1DGevD9i44cZvjrGk7MWfP3waBOu97KrXC/y5IZvC3gtZful
zGg2efUHb8Z/VM9mddxRZaOO8eTMdnlL9h+tYzz5+Zzk9ws36xhPJnvkyd7N
8yw/PEjHePITZc+8gCo6xpMfN+/l8sqb5ae0R57c//viMrtX6RhPRv8pb1st
iDqvn8n4oeqcU0B3Uzsd48kNFvt2mzuF1SPzX34nvMg7j5gurJ8o964/+nTu
RDLjyTt3/jmqSEAy48mXIlQ7Rrx9zXjytaDUk1WXoL2NDdkjT16d5+rFSe1Y
n5T+IE/27PWtb98lLJ+VWbmm8Pp9GE9QtS39xiF1iA55gmpdoY/zw0tg/phV
jYQeIU+m+kKevC1F1bK8hw75CZuf7i/dSj16WnMoi6crxlP+XaXt2RorHZIY
T64attq56lot48lhgd87rHPSIf+R/iBPbhp9I+ZJuWTGk9fWnuOXM/4148lD
d1c95DwyifHkhMfjnbZ+0DKefO24p7/eLonx5Hhhjzz5w8O+tmNykhhPJn+Q
J5e/0OSMzf+Pm7Cn8afZjncaD9Iynvw8suKuQ09eM54cD/5TXYydnJ5y/0IS
48l57Au+SAp7zXiyMvDLmS5HEhlPJn+QJ7dYWj24yPZE4KX/v4Muv3fZRct4
snef8h7aHqz/K6bOUZVG3mf5rDQ6NCjjzgaWz9IeefK1usMflJisYzyZ7JEn
07nIOn/MqoFHZ+/+NEXHeHJhu/nJDTOSGE+2gXhSvUxYnMdm0mgt48khIj7I
k+f+mfDr+Awt5oPyRMQfefL8aSe25S+UxHiyVuQD8uSmuVN1t84mMp6sgXyW
309O6r505HGLPwPAH+TJjcT8ZE/jPiL/kSf3E/MjT9aA/1QXc0R8kCfbQz+h
+/5sER/oJwr2E/nvjsX+Qj+U9siTaX+RJ5M/yJObi3pBnnxR9E/kyddFPkP/
Z/7Lf4/8aX+CQwDLZ4XyGXnyeFGPyJNJv5An0/zIk6m+kCePFv0HefIdmJ94
spvoP8iTKT7Ik8uK/sm+nyzOG8iTn4n+iTyZ/EGeTP0fefJjcT5Bntw3dM/M
KSWSGE9+J85LyJMbC/1Cnkz2yJOHCP1CnjxNnD+RJy8S+os8meyRJ5P+Ik9G
/6ku6PyAPJnO28iTM07e/77EI4nx5CRx3kaefFWcx5Ankz3y5DbivIQ8mc4/
yJO/i/sF8mTf5ve+VeScREXnPeTJtU8UNi0+yfiAqrHQL+TJs8V5D3kynW+R
J68LnWvfK4zFU+mSZ0vMlDGMz8v7C/JkOp8jT6b7IPLk/revtGvRXsd4clSd
gnlKnsd4ZqgeivsF8mSyR55M9wvkyeQP8uRn4n6EPPmCuF8jT97bsE3kivU6
xpPRf8mTxf0OefKv2pPXndyhYzz5ubjfIU++KPgD8mS6nyJPJnvkye/F/RR5
MvmDPJnu78iTs5Ic+49YyPq/Qvdx5MnkD/Jk4jzIk4kDIE+m+w7yZKoX5MnE
MZAn5zs9a16TiSwOSj2/EZtmdmf7qHwQXAV5MtkjTzYKroI8eazgPMiTifMg
T0Z/KD+JOyFP/q26OSnJkMx48m/BnZAnEwdDnpwgOBjyZJofefI2weWQJ6d+
OPjKKzeZ8WTicsiTxwneiDyZ+CHyZOqryJOJFyFP3i84J/LkZMFFkSdfFRwV
ebJZcFfkycR7kScT70WejNyYeHJYheRuS2u+Zjw5b5udG5bnaBlPbv18zWHT
2kTGk8cc/2B0L5/IePKi9iN7rlqVyP8+OfrXpiXfNIwnd1JvSFkfrmE8WfPV
dXHfQBx/rEpzfPridoSG8eTJtQ7ssX+kYTz55Og8B6cEaBlP9iziu/J3kJbx
5Is5XS5Xi0xkPHmR12H/PiVwXWZVzsuVaWXHvGY82THoXbEN9RMZT8Z5iCev
C1ni/vYzi4NSZXeH3PultIwn55b++aXGNi3jyXJ+4MmrLnc4bh6uZTx507aG
7wsex31PVVrsNUeo6msZT3ZY1bxQIQ8t48kVYz62u9NRy3iynB94cmTtpf1L
V9Eynqxr5WZ/9E8t48k+ngkdl3qz/FQqlji8+7G/lvHkrvZe9lPqaxlPlvMD
T3Z8VCjxVmEt48mnt4fs71ley3jyCbeoKgefahlPzvN63MS8bxlPUI1tuN3v
lFbLeDLmIeVVyJQTZa7+SGQ8eZmoL+TJA17Xjf11W8t4crNpwRXPztcynnwr
+On2A7VwvZdd5XqBJ+df/3tzg+Jsv5QWPSpsn2jUMJ6cUWP0pi4ntIwnD/tU
089F0TKePO/OCZeas7WMJ5M98mQlT6/gmGJaxpNPOYc+D0vTMJ7cyrTmS+VG
LD+lPfLkanZN+87w0DKejP5T3vaseiQqrKmW8eTw/PnnviymZTz54Wkvj0mD
WT0y/ynPXYuccLi9Vct48uav4zdP/lPLePIT28ITPMpqGU++anxxKSdaw3jy
xYjIeoc/ahhPJnvkyQ+dn57b/kTLeDL5gzw5rsfaN16HWD4rQfZac9L3RMaT
W3UvUeKpnxZ5gqqa3449eydh/phV3kKPkCdTfSFPrm8+PKjWTC3yEzY/3V8+
B3z6o1EixifSFeNJddFzwODAgds1jCdPGrXvYhdFw3hyhJu21JT+WuQ/0h/k
yeUezttar44W+Mnf9/0DD3eXLaZlPPl28ZjLr45oGE/u9XRznPswDePJP1b/
EbP0X/Y9wB55cqcXaQXmFLP44wn+IE9eVanry6cDNYwnd228vunDo2rGk2ek
LLoUm4Dx5P5TXRxqntva4zjrh8qFaX7JDp+1jCf/Lnpu1nBniz8e4A/y5HqV
JrnEtNQAL7Wx2eVhc/fyHjXjyTe7n+ru7JDIePK7fab8RX8mMp78eOiYFZ/M
LJ+V98IeebJvGVXPvi0SGU8me+TJdC6yzh+zKl/YkrD4dVrGkyeYbV3HnNcy
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
ZIPQX+TJ9uA/1cV9cX5g3zcW523kySOv7Ln/atBLxpO7ifM28mRbcR5Dnkz2
yJNbifMS8mQ6/yBPrivuF8iTJxcIe+CvS2A8eZA47yFPLpn19EpGScYHVJlC
v5AnLxXnPeTJjuJ8izw51HdW9Pcj8Ywnz3lzOUijwfjcc+0O8aS6SBfnc+TJ
zcV9EHlyVnQ/3c/N8Ywnu9a+tuvMcIxnhspe3C+QJ5M98uST4n6BPLmF8Ad5
8ldxP0Ke/Ercr5EnT7pQtsmxBvGMJ6P/8u+vxP0OefKEvM3HHXGNZzzZRdzv
kCcPFfwBeTLdT5EnDxP2yJPV4n6KPJn8QZ78RdzfkScfmb02qrQj6//KFnEf
R548XPiDPLme4DzIk5cIDoA8uYu47yBPpnpBntxLcAzkyQfLaldWLM3ioOQM
zcwsX5Lto1JWcBXkyWSPPLmM4CrIk22m/sN5kCePE5wHeTL6Q/m5T3An5Mmj
bg1xHjg4nvHk8oI7IU92FhwMeTJxMOTJND/y5GKCyyFPvt60SifveQmMJw8U
XA55cqjgjciTxwp+iDyZ+iry5EKCFyFPHiE4J/JkD8FFkSevEhwVefIbwV2R
J7cRvBd5MvFe5MnEjfv+X70UkDy56ocO454tzFZ+/7Ne4oSq6qun+nwYlC3t
iVv6/lyb3N/WMk72IwLbl6x7O0uO0zm5y5sD5TOPZ8n5u4t8SMxN+r4w0jIP
jTep/73qpfWWeTrRPhYq2X34Ccv4P7t42XVZWq25hSMt44NE/P0WKK1H/cvP
fiL+L81Tm4e7WMbbifiv7Rmm9VtuGaf7qeuRQmsG3rGM033W92enIhdMlnE6
3z4fvGpT4VI5cpz6VZ/+e24NNGcrQYI3kp8J+14bdj/JVn6J+NC+bG0U4pY2
wDJO8Y/sctw/xdMyjvtF4xT/XxHHldBNlp9L630dHPFql5Ij7XFfpD8i/iP2
ln/wpaTFnuKf7NJz55zhlnFaVxOzLvHYxhzltPi5FLfqquTFu3pY7GlfloXN
qR13wzJOfs6fMajr0kDLOO3LjNrtJtf2s4zT/CmdhvePbZ8jdIHvC9nT+ADv
pW6+3y3rpf2q0utBw0G3/46b4GC0LueLJ0Zqg2h/P6tov9yudOj6e3O2HKf9
ahbXoaftF8u4/C7HiBPau86WeWi/5uT/a4vDnBzl53/Eh+xpvwaf7t5x85l/
+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
f/cJ8mnjpA8pP+8q96F5VrVY9OmXShmndbza1avd9EhlnNZx/BB/t0d+yjjd
/3RSRsW63lrGpy1XT8zVrFaup3XMn94m2G2xMk7XNz146XN9Vy3jU5t28z09
H2oZnz5yOJzn9EnL+JTihnxaeCR2xdW/90E+pTggnx6vYmK18YSW8akmQBvr
7qNlfPqgVoRHh2laxqcNu11eMGullvGpfeW9zq9dtIxP3bOWuA6YrmV8+vG6
9Yrg8VrGpzN3/PCuOFzL+HRyH6uN/f6OI59S/JFPxxVM3bT6n/vQulQ82aj4
lL/vJTlRrIvx2i8eJ05pGZ++t1r+ztldy/iU4kPjtC6ZH85buo3XMj4tcTPo
zbnhWsandkktNXaOWsanaz6FZb4aomV8Stcjn1Lc6HqKPz5Xnm8wT7rPPXgv
iv87iIP8/9Kencae3aJlfErxRD41FvFHPqX1RT6dZbgfJAfliP2DfErvi3wK
+1DyEexbmf/DPpccpBXfC/LphY5Tdj6M0jI+he9OctBv8f0in441/N7l/Z+I
84H9f6+IP/KpzZLz1RK/ahmf0vmDfNpMnFfIp0HiPEQ+nSrOT+TTSHHeIp/S
uYR82kOc88in0UJnkU/nCr1APh0kdAf5lOKJfNpC6Bfy6UVDHZR5O+kg8ml3
oafIpw2E/iKfljrseHJmuJbxqZ3QceTT58VXHDL7u17IpxQH5NNgkT8gn44V
+Qny6SrDvIjFH/lUZ5gXsfggn4aJfAz5lPJb5NP3hvmh5CDI9yQHQX4oeQfy
Sck7y0VeinxK+TnyKeTJko/sDPNeyUcTRJ6MfErrjnzqHmRd2nyhlvEp5eHI
p5TPs7+fGnIBizPy6ShD7mBxQD4FrpHrAhwk14W4CfnUzpDv5HoBf8n12iU4
Dvm0liH3yfg7GXKijPOxzT6mc52UcYqzl+BQ5FP3tH6XraI0jE/doiJtHl7T
MD4d8WRj5sNOyjhd/2XEosS4Uso4xf/w+hvvJ/xSMz6Nrmq5tEFDzqf9z5ct
kpmvZnxa4u2p0y++K+O0Lreq9bSP+q2M07rsHBB9/VcDZT4U/+kevZrb9FPG
Ja/l1tGqjyjjFH+XmT8PeH1Xxin+/VVvr3tV4nxad9yLFK9myjjF/3uZqSET
6nE+fdUx07houobxaWZGj/iCAA3jU3VW075rAjWMT2m9kE/N5y5OXvJRw/h0
+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
SQeRT/OEniKfkv4inza6rD7z6ICa8ekPoePIp6/HBaf67lUzPqU4IJ9S/oB8
Wk/kJ8inkw3zIhZ/5FM3w7yIxQf5lPIx5FPKb5FP9Yb5oeQgyPckB0F+KHkH
8knJO+tFXop8Svk58inkyZKPIO+VfER5MvIprTvyaezGEWtirqgZn1IejnxK
+TzyKXABizPyaZohd7A4IJ8C18h1AQ6S60LchHwKfCfXC/hLrtd3wXHIp8UN
uU/Gv7ghJ8o4Fw/tU+zFdmWc4kwcinw6bdWWzROuqBifFty8MSdNm874dPaq
T4+dTqXxv58uUPm43E5lfBq+e4vV4kGpjE+bbJq0zWWAwoMyf7je8Yl7fArj
0+af9Bbdiir3p3XRNT+0oUhLZZzWJfjjFb8jTZR5Uvw7jdUPr1uJ82kt3+iW
+tacT/88OFDqgqMyLusjTa1QLm6aMk7xNypcZfxpiTJO8Q/YUMuj60YV41PT
WuVe3eitYnxaOLJsft3lKsanzklWdat+TGd8WijWC/l01+c66rDaKsanv78W
69/STcX4tKlYF+TTchfvucyaomJ8mpNmOWLSP/Ok9/q2dtDHYhtUjE+zfKJL
rd2pYnz6u9HcjQG7VYxPpze+2jvlmIrx6cPGRkUrhqkYn1os7G4cdlHF+JTW
Bfl04+XF5kMjVIxPR4XarHt7TsX4NMf9W/6jbSrJQbLessP7LNNLyrisBxtQ
b7HdNWVc9nkJjHx65LoyTutl3XpsfuTf90I+pfggn0Ze/mKWfOKf+Yj1iu0R
1Xn6HhXj0+zuxSqOmKJcT+uY/shz4kdvZVz+n/wqdxeXv+cV8mlzD+/+i+cp
19M8ndvMXZ8/QxmndTzUaW1hn57KuMzDbf2X7KuljNP9Qw/+ysnNSWd8ur7o
lfA53ZXraR3vXXv0OfR0uhyn68+eDTDvUVnF+NQuO1zX3U/F+PTuypgiGjcV
41OKG/JpbIR98OGhKsanFAf2+1PrfQP03VWMT72r/thVvV0649MNjdw25c18
w/g0POrm7knv3jA+zbx+TBd1NZXxqXnE+i61N6QwPv1h9+VqQmQK49PExzOt
ffJTGJ/Od+voeSUhlfHpfRF/5NOi5kYv0iLeMD6dO3zguqcn0hmfusS33fC6
m4rx6eN9wV073E5jfOot4kPjtC6BZR2a+DilMj59kmt5x2pMCuPTm1VH3c0b
kML49EK31fcudk1hfHpLXI98SnGj6yn++FyK/xmYJ93HC95L/i4b4iDPsVKf
lkZWUDE+pXgin84R8Uc+XSDWF/k02XA/SA76KfYP8mmseF/k01qG+1Dykc5w
38r8H/a55KAN4ntBPo04/tNuo7WK8Sl8d5KDnorvF/n0g+H3Lu9/T5wPyKcU
f+TTg1Fb8529VYxPe4nzB/mUzivkUzoPkU/p/EQ+pfMW+XShOJeQT+mcRz6N
ETqLfEp6gXz6VOgO8inFE/mU9Av5tKOhDsq8nXQQ+fSc0FPk03NCf5FPw095
1nh7WcX4lHQc+dTsxR2PK9tVjE8pDsinlD8gnzYV+Qnyqc4wL2LxRz6dapgX
sfggn34V+RjyKeW3yKd/DPNDyUGQ70kOgvxQ8g7kk8r/i4q8FPmU8nPkU8iT
JR/9Nsx7JR+5ijwZ+ZTWHfk0I//wK/vv6YxPKQ9HPqV8Hvl0nSEXsDgjn5ob
coeMg7Uhp8g4nDXkGrkumYYcJNfFQnAT8ulvQ76T6wX8JdeLOA759Ksh98n4
zzXkRBnnhf3Wrw/orbwXxZk4FPn07gi3MafKv2F86p4wdkJuVYUTKf512naJ
KvdKGafrwx6duFk6NZnx6eS41qbVjiQzPj1ZJXLbao1yPY2bpEbNbjxVGZf/
f24y5Obulco4rUvTvmlmJfYp49LfToiKenlXGaf4T5t5aMaxXGWc4v/fnFEt
9pdW3ovi7zu/Yt7Oeso4xf9Dh0sty3RTxin+/f+Mm7t6tDJO8T9x6PslrVsK
49ONF1b0ePclmfHpNPvdVmPepDI+PbtgoOu4kBTGp7ReyKcVvpT9cqUwmfFp
u/0FUTebpTA+pXVBPrUou3VE0sdkxqehRSaYtytIZnxql1E/ruLf+SCfeg56
3WvljBTGp/Exus3ZrVMYnz4Oq/Oq3bAUxqe3/UbW9nBLYXw6cmxt14dHUhif
0rogn+prvr1b7UkK41P3weUHviuVyvj0VkjsrkMNUyQH0XqtiPmTo++XKsdp
vYrnvrW1TFKul/1ldrb4aHRKGZd/j8u4WGLkyhTGpxQf5FNVBxvzEyP/mY9Y
r3sZ31O+d0hhfDrhc/1NXW2V62kdz+66cHBIVWWc3vej81u/lN/JjE8fnrUf
OGescj3Ns93gartm65LlOK3jgjszw03+Gad1PNPl8rOITGWc7m++zziscp0U
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
w8++NO+nYXpE/b9QjxrPD5217IOa6VHXu68PqEM0TI862+hLzgrWMD160Mfc
JeG1mukR9WtDPXKa8iDZuq+G6ZF/4+WuY9PUTI9o/qhHE8V9UI9oPqhH1O8M
9YjeF/WI1gX1iOKGejRZd8Xl/N/4ox5V2xqjHrlIw/SI+rihHhmL9UU9or5d
qEf0XqhHAQdjSx2+qmF6VEPsT9SjINHPEfVoReCNaY8qcj2ifluoR8Ynh06N
KM71iL5H1CPqO4Z6dH31lmM5U7RMj4LEOYB6dEr0A0U9oj5TqEfnGrUsVWwY
16O74txDPaL+WahHWw+UrdNJq2F6RH2dUI/ofEY9or5RqEd0zqMeUX8o5tcJ
vUA92lXEav9dXw3TI+oDhXq0r7CvRQ8fDdMj7yGtiqz8o2J6VLnPonIPslRM
j4qfWVmnZZKa6RHVh0c9orr0qEfvvVPft9ulZnpE/X1Qjzy6vNaoTquZHlEf
AdQjqtuPejRon1FgBW8106O7+x/Gfd6uZnqk67Yu3Gi3mulR9Kg3aQV+aqZH
1NcG9YjmiXoUMndY0rICFdMj6quCejTma4bPg0Vqpkfl3i3saZOtYnpEfTRQ
j6hfBupRXq+Oh1dWVDM9mjtpaduIZyqmR9TvA/Uo/qTfkNLdVEyPeo7xt7oS
rmZ65Ojbs1yf42qmR5bxX6Y27aJiekT9WVCPzszIqDy/mJrpUeTvSUH9nFRM
j2j+qEenxX1Qj2g+qEfU3wT1iN4X9YjWBfWI4oZ65GfZtWOaiZrpkd6nwYgt
r1X870eibwvq0VexvqhH1KcD9YjeC/XoyOm+lha/VUyPxor9iXpkJfo3oR6V
vO/5s9V0NdMj6q/B/LrSn5dvOKLmfCS+R9QjeT6AHpnVy1E3OaRmenRPnAOo
R9T/C/WI+kqgHi1uZ3fAZ6+a6VG2OPdQj6hfBurRcSO7EiV3qpkeUR8H1CM6
n1GPqE8E6hGd86hH1A8C9Yj0AvXIt9jn1hu3qJkeUd8H1KNPJ1oNOvdSzfTo
QtTPmkGpb5ge7avT8kWuUxrTI/Psk2VWJ6iYHlE9WNQjqkOLejR/XwWrjetU
TI+onj/qUfxAkw4Ht6uYHlHdYNQjqtOLemSvaumxLEzF9Oipa6/dtbaqmB7N
aFt09dExKqZHI356VPZbp2J6RHWYUY9onqhHu/aMnFxmXzrTI6pjj3rU2eSt
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
HZhzXtY/YfUKaJzmv6PaOV3XI8q4rPN81uh+dC1lHOs50Djt5/+MPnrqeynj
WOfhjDj/6bnv8qpUP/tfnhzH+g+irovSR+mSXb8/25X7U5xfH3ij9XuiXE/7
uXWC3RDjr8r1FP9m411aPCxQxuX/jYREvdprq8wH60jQ/WncrcSyHRZuyvUU
twSXMudSHir3l/Vtph7/1r1Jnhyn9a17M91j72DlPrRetcXv2UeAflHdBhqX
/0ed2GdV/V5KnGld9jua1i1hrTyX7rMz/c+MfiX/ib9YL6qDMQJ0lupLyHUR
1zcNNHG+ciyPzjG5vreC3UKbP82V47ReVEdiNOgp1SugcVr36UEZlpYpyn2w
zgbNn+7fRfyOnuZJ47fVTX5fGKbME+ty0HNlv28r35bzC5T70/4xev8pOnS6
cn8a32a+eMqGCsq4/P/MHYMXn4pR7oN1P+i5tK+KNrL2fXtNeV/aV13q95tc
o7oyf6wTQveh66neAj2X9uHZKuHf3f5Zd9qHtdu/0DS6oewrrDdC4/L6jDZP
Sk1W5on1N2hc/l9Eqdm3vpgq85R/n5ru3X3iqn/WXeyruLKP/szuqcxf7n+z
tKZzDv6zH8T1+aLOyQSRb9C+mnd312LzYzlynPYD1f3433V3Wd0Puh7rotD1
sj+LdcNqZsHK/On+b/f621yJVe4v/9+mxqbU/2yVeWK9FHov2leL1/z5OH2e
cn8ap7oZNC5/H+QVY1LCR9bTkONUl4PmI33L1Tu/Z4Yp70v7Z/eyFu2eLVfm
iXVa6D50vWfNtGJTCpXn0v4Je9F6u10jZf60f35GWFra3lXiQ/vnpIgnPZf2
yez3I5LLVFfGsQ4MPZf2SbZztVcZtZXn0niRDqqWBT+VuNFz/wvPzsyxVt4L
68/IdRfP3e0VaDFxSI5tf5Gn4X6jcdoPVHfFXuSBsi6ZeC5dj/Vq6Ll0nz3w
XKxLQ/en8UIRZ4ob7R/jMaGfvv+njP+/69jcZXVsaFz2nRf7h55L+yRR7EOa
J+2TmyFBVfP/mY+s0yvG6f40vpn2lRin/XMWviOsq0PPxboxNE7ri3GgfdLv
6IBZ9W3/WRex7lSfh94X6/PI9RXX0zkg+FTuk9tCHwsgb6d6NQ6Qt38X9WoK
gIOo/g9dL3/3KvIBmg/qLI3Tc+m8pfvQ/qFzvgC4ieoFUXxon9B3SvencTrn
aZz2D+kd3QfrDtFz5e9GxTlG47SvwsU5Q/On8bdCv2ic7kO6TM+l/bZHnHs0
Ls8rcT7T/LGuEY3T9ZQ/0DxpnywS5znNh8a3iPxBriP9nUjkLTQf+f9Fzz4m
VLutPJfGVyzvsnRu0Tw5LvlF5FF0fxq3FXm13FfiuYGi/tJJwUG0f7JF3k7c
RONUn43GaV9N3F/1wdeKyrisEzL0QYsxt5X7Yx0nmifdp5nIM08Ct2oM6jUp
dRo1vSeOiO+pfC+0DzuLPKQAOJfqO9Fzsb4TjdP1i0T+T8+Vfdacx/RbeVyZ
J+1DyrtOAi9TnSi6D11PdeponvL/pUUeSPORfQknnU6520UZl79fExxE98E6
VDQf+ftNkd+eBE6n+lQ0T/n7GlF/j+5P+/CMdqv5lCRlHWmc6lmdBL4m7pP7
RDzXqkCVenKrrL8n95uP4NbTwN2yriDU/yT+PQl+gqyjBfU8icvoetoPxFMn
wX+guluF4D9Q3S0ap+sLo07ZXt6mzJPWPV5wIo3LulWCT+m5tO7xgjdPgr/x
f9X1onG6/lbfU76aQcp8aH0tBC/LeJJvI7ibnkvrWys4rZXZMuX+ND69bNrh
lzbKOK27T8sLNpmjlPtT3MhPOA0+CdUHo3F6r8bCrzgN/gnVDaNxmk/9/U2C
FndXxrFuGPonVF8L/ZPq5couPB6dxfyTG10eJSetyWL+CdUfQ/9kcJ+qFo9X
ZDH/hOrVoH+y6ODbldFP9cw/oXpl6J8UDDd7PPFRFvNPys9vO2RJST3zT7K8
SueN765n/slwt7HJo+vrmX/StOzWCZO89Mw/obpn6J/o3C+Ehl7RM/8k7c6o
F8cd9cw/qVex6anJrnrmn/g8cvQdEqBn/sllUX8J/ROqM4b+yZ9uzqE+HfTM
P2kVWvpG0UN65p+UHmSxMH2mnvknVLcN/ROqh4b+yer3D0LOa/TMP9F0rmqf
9j6L+SdU9wz9E6p7hv5JRg2/uqPG65l/QnXh0D+5Juo+oX8S1mXUxrrheuaf
UB059E9mrV+xxspZz/yTNoNTtUci9cw/aaptPLXmej3zT7av6l5p2DA980+o
Th36J0ZVcxtsLqNn/smkwQdC/7jpmX9Cde3QP7ki6oOhf+KbvT05yV3P/JOy
C2ZemWutZ/4J1cdD/6TcnpsJv2rqmX9C9eLQP9nRs3TDzvZ65p+MtCm5r83F
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
JY1zXmqYfzLEdJe99T4N808yM3rEFwRomH9CfgL7/Y7wH9A/6SD8CvRPqO8t
+idFLfcd81irYf4J9b1F/4T6w6J/smVQxbJ/vqqYf7Lr0dn/prVVM/+E+iGi
f6K/aRpf85eK+SfUbxH9k+zO6ftiTqqZf0L9HNE/+b6nTtjUI2rmn1i6h36d
WknN/JOy9/ZeH//P9bQum1dWtm9YXc38k6yGm5vP2qJm/gn17UX/pPTas/en
nlEz/2SD2beqe/eomX/yYH29eU03qZl/MrWLW1OzA2rmn7QS/UPRP6E+ueif
5Drb7ul/Uc38k2Ltu2YE+quZf2J1VdvbaY+a+SfUdxj9E+oriv6JT8tKS28G
qZl/UnfuWB+nHyrmn1DfXvRPqD8s+ifNC3ZljFupZv4J9TVG/4T6lqJ/8iHY
Ms3zoJr5J9QHGf2TE4WjKtr9c3/aP9a3xhybeUTN/JMkS7sd03aomX+yKXDe
keKeauafUJ9l9E865jhOm++gZv7J2cBVmV471cw/oT6w6J9MF/1t0T+JOVg9
/76vmvknu2tuqmiyVc38E+rvjP6J5U4X6+neauafUP9f9E9231/Za8BMNfNP
yjjlx1yro2b+ScPiMRP1F1TMP/H2nu73Yp+a+Sehoq80+ich/qVjJnZQMf+E
+hqjf0J9ltE/oT7U6J9Mcamd1v6f/UP3j9Ru3KGxVzH/pOSsJ5t//VQx/4T6
U6N/srnJhDel8lTMP6E+xeifnOjukF3fVcX8k3zRBxn9k1pF+jVMGq1i/on/
x/jY+UXVzD+hvtjonzye+PNgxBoV80+O33IKrV1CzfyT+/HHXQtfqJh/MlXE
E/2T60XuXH19WsX8E+ofjf6JQ8CFn3Yj1Mw/Wetg3nGKqZr5J25Fi8yNd1Uz
/4T6ZaN/0mdviQb2zVTMP6H9hv4JzRP9E3ou+ifUHxz9E3wu9gFH/+ShiDP6
JyPUnu9e9FAx/8Swb/hd1jcc/ZPaYv+gf3Ja7EP0TxZOqNzYYqOK+SfzxTj6
J09oX4F/YgTfkfy7m4gD+ifUpxv9E4wD7ZPJqgmJz3urmX9C5wb6J/Q9on9C
5wD6J6SP6J9Qf3D0T4qK/uDon9B5i/5JjsgH0D8hnUX/hM5b9E/onEf/hPqz
o39C3yn6J3TOo3/SSegd+ifU5x39ky/iHEP/5LQ4Z9A/6Sr0C/2TzUKX0T/Z
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
FjcqwU9WPA/1VmxQgZ9cq8w74v+7avz/AUm/cSw=
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
4HtGdt+lQwsZ/x9umtxa
            "]], 
           Polygon[CompressedData["
1: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
ACZ2Ifk=
            "]], 
           Polygon[CompressedData["
1:eJwtlulXV1UUhm+CWnppuHVXn/sPWq2GlX1qtcockKSs1DKHypxTFBUR1AJn
BBwQBxTFiTkVJ1BAGRVncUxxqJxSUEtzKHvedfaHB967977nnHvO3vv8Xhs8
JnZ0O8/zUqE9NIee92eE592E61AVeN5e3/Oq4QDsw7aDmA0CvRGKBXFz8c+B
nvj6YFuEPoS+iG6B81BOXCHkowuhANYRcwyOwnH4A9seYnbCCfRb8Casx7cb
22X0b3AFDmObDbNgDvyMbQ0xXpTn9eDfM5H8gVusZT72t/H3hljoRXwZtgb0
fmiEndiysA1AD4RvYGTo1nIcXYOuhTrtE0Qwdh2++4z/AHZDhe/2p4j4Inyb
YCU6C5bCcnzTIQk9FabAamIO8l4TbEcfxtZATD3cR+/DdhXfNVgOywS2YfgS
NB7P0yADorF9hG0z7EHv1r7DL4Hbv0voc/ArHCGmBNs29C59P5Rgm8I4CdAV
/R62GehN9k0663x0ARxCh+zBI3Qn9rwzJBObBJ9j60r8PHQuccnon3RGkALT
IAHbZJgIOcQUYSuEYrhg+fKY9x9Bxyg31+PQ5ZX8Ffhb8F2Elehx2OJhAiQR
MxNS0Sma23JjMrGToDu+N7S+wO1BGfoMnIVSfLHwPnoBvvnEp0Ed1EKz7/JB
ObkI0tDzYS7kWY5v0nz41kIebOWdLVDlO5/yfio6EXrbXDMVE7g6K8O2DbZD
os5E8bAM3wblC/oh+hGc1vkpz7CtgBxYgy0f2xLoi/4UPoMf8H0Lcejx8Aks
JiaXuVdDge/OKpWYLbAXXQ2VsJm4VTZ2QeD6gvrDCe0HXIJbyi1ibsB1uGl1
Ukv8KM2NfwgMUj1YfeSoBmAVLCNmP+M0wlZ89VaXOt+xWissgeTQ9asb6AvE
3oZWrcV6SKV6Bc9XfFfTX2Mbhm84jAhd3DVsV+F36zn9sX2o+oHusBDbGGyj
4UcYbGseG7reoB7xPWRju4LtrnoT87XBHd/1F61/F75yqIAelncT8c+C2VCj
3qr+ge+A6hK9jnfT0ZmQoZwOXQ97B90F3oVobOPgO1tDHHp86OptmuoWpttZ
ZoWu/6gPLVTuErPH5tuGrkRXhS7/arDVQW2E6/c7sB1BH4Oj1pvuwnOca0Pg
6lN12oatFe6Yrz5wfbI9OhLaWR6o9ifpvFV7vFdq9aU6y/bdWY20edULq5WH
sE/1Frge9xU6k9iFVv/qAzfgic7Ual/3QTG2XVDuu/zTGa5QDUK+8ozxnmdd
f6vXwgOtnV4Tw9XxCvaX4SAx2aot9W/ttdXgjND1GvWcROvj1xnzH/SLvNeN
MZ7ynA4LfJc3OqtVulOJvY1ug1armUEwUGu0/cmxestDr4Vcq+lI1heta445
fHjIeB2w9cIW8PwSHCBuSOhqXrUfY3WeFrp+qL44T+Nii+Ld3rz7gOdXefeI
6oW4blYDA5TvsNzunHj0RK1RfS1094bujyrrETXwL/op/GfnoX1+gbFP8twM
l0N3djrDyehR6p2+q6O/0PfgDuwN3F6pr5zBdxbOQTyxE+Bj9OvqvcS04zt6
8h0dmacD3MMfY3dYWuB+n8y1Oqu1HG+y/D+F7SSctp6i3z5a11D1TBitvMHW
FLq7U3foKeu76rH9lJPQH4aGbg+Ui43qZ6oz3VlwHlqsV+jbtKfDle8wIsLd
5+tV/+ofyhur/VR0CvRBf4AtPXC9Qz2kv51VJrYvbS+11r7oflarndmPTvCs
1WU327c4G1fjL8ZWgq0UKvQ/cH1Ia0jHl6Gagy9Cd7dnBC6vld9LdVepX8Ai
6y/Zdl9tVK8hptJ+w+i3zBPf1Z3y4H+a07al
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
8/8A+qq9eQ==
            "]], 
           Polygon[CompressedData["
1:eJw1mHnQl1UVxx/ovpXFg/B74UZoIsgWW6LJJigJyCKLvLILyBrI8gKygywv
ssi+IyCr4IJoirY41VRTU9PUZGGJxbSvQ4stlpWN2ffj9/THmd/93vv87nOX
c873e56W0xbU1NYvimJUvaJI+p2ei2KabHZZFPfL7pWtVv82DY6MsWNqbyj8
zADZArXnqq+vxrYI7xX+rfAJ4Ymye2X3qX+KrJ7aLTQ2Ws9crBTFLuGLwq/I
9qi9Us/s0NiXhFcLz5R9W+2NvENjG2S71f6x+vZr7AHhzcI/ET4s/KTsb2q/
ITun9g6NH9D4P4TPC39Yv81lE9V3vcaGyR5Qe6v6Rml8quy42qvU94bWd4/G
l6q9Vn1DNDZaeLnwduEa4THZZ8MZ/VXPD485mWu0bLLaD2psn54ZK9xMeKxw
B+GrhKfIjqh9VHZK9rDG92v8e7Q19qzsX2r/W/YptT9Z+uwPCY/Lfn6f8BX+
L3xa9ke1/yQ7o/ZYjY+RjVd7P2cU58eczD2h9F7Z87DsOQ+oPbP0u7YKf0f4
Zdl2teeo7yE9/2XhGcJLhB8W/p3wprhr9sqeufPpsnVqn1HfLI3VyX6h9i/x
IbXvkW1We72emaFnF8nWqP0F5ogz3K324sJnSx9jX5St4ezUd1hjqaooPi28
V/iQ8B80/hDnJftKsk/Vr7Z/cl7fwqey73Cn2isK322dbFdhH8KX3pd9V9zZ
dfi28KvCl2T71B4a/jNbuIfwjbKPyQapf7CsvdpDkmOkh3BH4VHCc4RvE+7J
mSb7FO+/RfjB8L/X5U/dhTcKLyNGNf5xYiz5nby7m/B04VrhfsIdODPhacK3
CnfKfifvur302mo0vrDwGvHpwfSV9vUB2X44Ve1psuHC58K/yQU8u0J4SeH/
DBS+U3ZFa/29bITaG5LvnLtvKZukdmf1lRrrLFun9jz13aGx3tlnx36IG/Z0
l+zm7L2uUXtT4TPn7JcJbyucM8gd80vnBnwUX90X91/IH54XblI615Bz6guv
Fd5ZOEaIlTPCj+Abev4FchM5T7i1xquE2wrfJ9xTOAln4km4pfA7TbWWiNc/
Cz+u8aPCR4TfFn4O3458hs/j+0NldxFnxKRsVuTX8xqfr/63K47vzwmvFN6j
8YPC/xE+ln02i4RXJ5/RJuFHI/7Jt/jAfGIv2Td+rvlmCY8U7iJ8C3lYeIBw
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

            "]], 
           Polygon[CompressedData["
1:eJwtlmd0VUUUhS8xqKiPmPuSK00k1FAFBYJChMQlzcRIhxBaIIaaEMRGb4mQ
QpWigYDSUUDBvpa9d5EiUhQQUEFFmkiN315zfnxr7bfnzL1zZ8458+Iyc7vn
RHieVwAVoSTwvL2Rnjch5HmFUATz8ObCfBu7Pux5ZfgriD/P73Mwj99jIRcm
w368Z4hfil4Cq+E6XrAdLybs9Db0Ovz1UIo+xJxp6GIoUTxx3+F9AV/CbGKK
YQ96N+yESGJmETsTlsEVvOcsbhe6IuNT8KfCC7DScx9azlg0Y0nEdYBkGIf3
u+95N+AfQP8MB+07ZgVuDVrLJ+AR04/n9YVBjJXinWXuTfgn0NPxZsBM+BV/
EN5MmAUJeA8zLw0yYCneALwzvtPp6P6QAZmMD4E8+ICxgXhD7H3niM9ED4Vr
6Hfx3of3tI94BfAt+hv4Ciqwtsfx3kJfIf4J9JPwCM/Ogkt4rzGWF7i9/x79
A+yAp/EOMN4JnQTJUMve+w76KfQEmAgDedYAyIZXGBuLd9mePQ79KIyHVYyX
sZWX8S/BYn5f9N2cMYznQC6MgpfxtsJm+I+YcvgQXQdq277oHBajl8By259U
vBXoMtgE//pun5cpT+BZ2/tNcFHPVgyE+P4lep5y2HLzRrxTzC1C50MB9GDs
PN5q9GfwOQzH26h849uOKQfJt4C53fBn8/tv4tMZ7w998BbiLVANwT+MjcR7
Cf0ibIQLvqvLfeif4EerQc2djz7tu/3Wvmsta/A2wHrIJqYQ5kCR1YRqJgs9
TGcPX1tuTGL+RCgIuRxeydgaOIs+o7XBzcRFwVX0x/CR1dudzGkGLZS7eB3Q
g1Ub8Jjl3OiQq4XB6GEwFFozdhivD7qZngPNoQHUh3jVimqRmHro7uhukGZe
R+UTerx6FvyBVwGvJjqK98VBbWiJdze0sjP4i7gE/NZwyN5/V+DWuh39Krxt
dZJMTBJ0U2/Da0rMSd/pzugu0BXCegdeS2ijs1IvwWuI3oWuz/wGsFPfghcP
DZQfxNwbuP3QvoyE48T8BjmqH8iF+4hpb32qK8/prfyBJtAYGjLWg7G2IZen
xei5UALdGWukGGgFD+LVxauKrgKVtPeqJ9sv7VsIrwXeHp6VyO920AnG2Fpi
0TEQga6lXuG79eksdCZ5ka6fKu8L0XPUR2zv0wJXP6qj6fCneqetYbfv1qn1
ap+nqJ/BVNv7RvadvzDWGN0kcHuldbVFt4NE9TBbV5jn1IV6cNB33x7HWG2o
Y73pdbw34Q3rfykwCT1RvQ1OWP4pF9vwnAegY8jdFbrrFqiOYVHg3pGC9xCk
2j6PDlw9qi63WA9Tz7mArhx2d6Tuylutfo4wHo32oRf0hN5W7+oRqsvT6FuY
u5B5iyBK+a3+4Lt8UF7ka290DvBppLu3Nmgt6lH2fvW66sRWg8r2jHjLVeVs
JN79eM1D7n47qTPUmVmPUD/QvbsZvQW2Bu4+P4J3WOdkvTOf+cfR19QzWEqp
eiRxz8Nq+x71lwLrSRFh14/Ul5YL5pxS/1Qu8XstrMKLoL9WgHDYnbHOWrWY
QNxe39VbXXR79SX1TrvLOquOoAvcgXcb8wIoj3U1WxPdRj0SfUx5w+8U63G9
8HpDhp1VDbwh6EzVBuzHu53YGtAU2uq7Y12Nplpu9LQcVv/ri06HftaH9vlu
Tkzg+qr66wgYDlftztUd7/M7GjzreTsYqx64+1n3dKKtJdb2Qz0p0Lcql2Et
3jqYYTVYFa8KVLPvPmp3rf57TMKbDFMCd09vsz6pfqk7fiocRVcKu/9j+l92
j3IfbxSMsL6mPR2OzoYse8f/GD9jNg==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtlnesF1UQhRdwKeL+EBZ36f3Re++9916EICBEEQWNUSOxRCxRoxiNsUSN
Rg0gEHqvj0fv0kFAeu8QUBSi38nMHzfn7Ny5ZedOKz9mUv+JuYMgKJMrCPKA
c6MgyIRBsCIJglXwOcjy8T0L/hi4DHl+8FfkeUObk05BcCpjF/whuhsYFfne
jH5nMAd519DWaO1M5rPiIGjH9yl0lvE9E/lWsKTvWRxMGEvgJcCq6HcDL6Ff
Ej4f+Ub0S8HLIl+PvDm4EnlLMI3tzsuRF4vtv1bC2+g/0GkF7md9a/BkYmu0
tj1Yx8+tAebPBMF0sHZq5+ncPWCl2NYeT2yfbOSnwL7I1sBrgpeZ6wRWQfcY
vBm8InwFeil8LbIyfGfBd8Ir+N0qg4cis89p5IcYjeAV0D2OfBU618DSsdl5
k8/rzrr7duYWwcvp3MjstgWdHfB68APwhsy9Cr8GLwLORr8W2DG0/buDzdH5
SLbk33v5f70EjnOdp8FB8hf4ALC/zoEPBeuy9hnwP/YfFpp9hoBfMn6Hvwi+
pneDvwJ+pv+AfwrWwOanwZGp+ZP8KkK2Fv4bfDE4hvlt8GfB8e5jOm8kYwN8
LPiy32eS+6f2Lsaeo8F1yJ8CR7j+SJ+X3kO9lf97cfTf9bPeAc8xNwGsx/wH
7vMfgvMYh+GFQ/Nt+dEZdH8GDyKfAb7H2Af/GNwb+Vuj+7z/+0Twc7fPYvB1
v7/+owl6O+D3WfdtaPxr8AftBf8O/IrxB/x7xRnjGHwa+JPfQXdp7G/RFKyO
Ta/Bm4G9/Sy94XnO2Aq/DZbj/79A1oLzJ8BvwZ+ED2CchY9C1oAxW74TWw6Z
y9pssAfybch7IW8InxvaO3bhezm8NLIqqd2vjfwFfkU+BT8jWwfmB+cVo4Gd
N5C5c+BodMcxLsMbsmfr2GxQCdlzfs82GYtfvdED7lMzNbu0Q3ePv1ch5nvy
vZHvLsx3h6+Dt08tdhRHiqdWsdk7r/43Np+9mlgMKBaOohOk5huKzYue+xT7
jRlv6t+ZL8iYDG+ErD/jAstqc4cbib1BNWSD0dkPL4+8BfwIvC/y3oyd8N7I
2jLWwLspL8K3ylcz5sPypRvcoXZsPn6fve8m5uu1YvPt7ejcdZ1RyP9i/ojn
KOW3LPY6Bh/K3tXRGQi/yXzN2OL7FrxGbHF3IbJ8tRC+JbL8NgO+MLL319vt
AJux12HlMfa+nlhO0f8ejiyHnIksRynHrvfcLl9aA7+H/nC/v/xTd/7H7a9Y
f+B5fjr687VW7468T2rz0vs3Ma54v4JOH/T38t0Pnc0eL/KD3Yzjgdn6emhv
dE22QP8mvG3G4lAxmAd+ST4Kv6h8gs4d8AX2TDO2j/63XsbmxyLfB14OTO84
42xgttabn4ZfBVcyDgQWJ2UzZkP5eQ/2/1M1Eb7a430pWMD9WX79SMbyTAd0
+0lfMcu5B33/RaGt0dqFYOKx2Sm2XKZ4meqxdhFen/3Wew5RbOgOOWAHjxfx
jvJH7BvLD5G1Se1+8s+6em/WtgDv+DvqrZfAq4VWp456/VZ9zJ1aTlSO3eC9
wdLI3kxv93dk9X0afE5k+WQF+q3lX4nlONXKNW7bbP1jxnhlsHNsNmiZGpcN
WqWWY9+CZ+DtY8vZdZyrB6gFfzS1vKz4beA1tIDiOmP2UQzqrE3IuyIvH1sf
sd9jRzXwdmI5Rzqd0Onp8as82TU2n5HvqMdQn3LC+4R5sr/8zu2mfqlxarVH
b6f+SnV8JfKiziUrgs77odmtRGy9x9LE+jf1Y+rp6qEzKzSfmR2ZXPNVGcvl
A6H1gerNVkf2zuo31KNpTn3FKvZc7f2EfKCE3zknsn5OfVw282Vj63F2eQ5R
btkLL6V7qW8JrbdZAN8c2bd6vI2J5SL1GnsSO1d3O+A6Wrsb/rbHuHKuesXS
4LrE7qD7q7dVLVdNvwM/732aarHeS73bPr+nerPtifWf6om2JtaHaM8cvQN2
+yW0mlI0tZ6gKbwq/MfQ6loT3vJqYPn8iOeTo6Hl/xPgcHRbwr9Rzk8t3hR3
ql8dGLcDq7n1Y+ub8qXmJ/L5MvDhsel0RHdIbLlqUGr1QjlwQGp5QGeNgA+D
34CPhw8WVz+csTqvnKA+Isvvn8drq3qKisiGeA5XPboZ2j21V9nUehf1CbLt
FMbjyN4IrT/Rd5bboWnGvqVXWPXFbdiWtZ8oVgKzRX+v74O8XitXN0F2UjER
WF6b7PvrnMYev4VS60/UJ4zx3kQxNSe0vle1715k/a16sRKp2VZ9Yn74Ex4v
escpvn+ujNUL5WHl46YeL+p5NCcd3V915xy8Klgntv40j/c1yvkLwP8BgATT
Yw==
            "]], 
           Polygon[CompressedData["
1:eJw1mHfQVsUVxi/K0vS+lFfuRUAEREBBkCZNhAASIpaACoioERWFaMxkzKRP
TMwkmfQymXQnmUSj2BAJvUrvfPQuIE2RIliINc8vz8kf5/v27Nndd/fsOc95
9raZ8OioL52XZdlttbKstv53qGRZe8ldZZbdLblfcp/kavV1kzSW7Na4J1OW
Xab+qvQmkmFqf1YyUXJUtjc0ppf6V+VZNkXtdupbW2TZw7KfUfuM+u6s6o/G
1Ojf79TXTrbNGj9bekfpGwrv4aDah2NvDSTb1P6b+jrIdoX0jhXvkb3eKzkg
2zHOpPXXab1/q32L+rYU3uMytfdk3nshvRG/Jf0TjX1B8pTaF6hvVuE1j6l9
JPNvsQf2slJ918t2m+QNtU+pb7R+77DmH5J8ormfSjbym7IPl2xS+xqN7yWp
aJ2Gse/XZTuZ2cevae5C2urbrPGt1HeJ5B6N+4KkR8W+xccTpNeRJMm1+u0B
kkWa/5LsbWRfo/k9ZOsuuUjzmkpGqr1Wtv34RONvkL5U+muZfwd/zcA36ltQ
eO7T4S/WWC/7TLVbqm+R7KNkf1ntA+prLftY6dulvyX9cunjpO+L9VtIvz18
hq/GSK5SX+eK+7ANlyzS+EMaX8T4E9KPZh5bT/qj0ldKP629jJG+S/o+6c0q
viPuaqP6bpXtHY1ZLf0J6SVxLOkquUDjLgx/bJKtRvJ5tR+MGCZ2r5HcoT2O
lQxS+zOSa2WbrrEHteZl0h8pHdPE8nhJUt8W2X6mMS3UP0lyKuKxq2wtpb8g
/UVJq9J9XSQPxdiT2u8yjf2R7M3Yr9bsKjlf7dqlfdicfZX27YjSd8jdESvE
3IOa+2rmWLxTtt3hv1FV/x57IUfGy9ZafdOlXyl9hubeUjq2ifGWgQN7pZ9g
jPR9WnO+2jeqb7XGL5Y+VXpD6XOlz5N0SM7f7vSRU7LXU7sO+yKm9f9Z9S3M
vUf2OgwfybZL+lzpd0n/UPpSSdvkeF6i9jnJHWqPk3yg9lnJ7WqPlrxTOCaI
jZvJSemHJEPVHsKdqf227Ksyz39b+pvSl0ofL/1d6XWTcx8MeF62T3Pj02Pq
qytfzCx8Vs7cXL7bH/k6Ekzj/HHeptIvljQtfZfc6VuyLdaYZtJfJh80/131
rVF7cvL9goeb9O+b7EP6Vo3vFr7cVhhbFst+bzLGXKgxX1P765IKuaa+3mr3
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
            "]], 
           Polygon[CompressedData["
1:eJwtlnlQlVUYh6/knSz5buVX96qICMomsisgKHBlETTBNVMpk5mytLR932Yq
W/9p3/d1xtwVBAUUBQRyQ0pQUQEVlMUFNbVyet457x/PzO/8znvOd9b3fIGF
y2cu83E4HCvACQM8DseHiI/gUYizHY4sWIu+DW4FNzGReAXoe+EeuOw2cWvQ
Y6kfBwkwBG8QXiREQTlxHvzX0K/DO5BMTBKsQL8Fb8IdxNwET0t/1F22HI6/
IQidgJcEiXCQ/m4h7lX0K/ASJBBTgu+LXkmbMiiX9nj34Z1CX4A+qMEbiedP
mxrKuwS8XLwwvFp0HeyHfdAAs6kbTV0xsUVQrX3sRCcylgZ0PvUBLodjBFyn
fhFeITwI0dStJnYVbNZxevCqKVfBfhiPd4S6FkhHp8FEGEXcMbyjcBxS1duC
dqHX0HYbbFdE11MXTN1w4lrRKegJMAmC8U7jZaAzYYrOOxaWyoFgPv3Ax2PW
+WVZd+qu0u81CEVn4+XAZDgjY8NvgR7L9HFS1sc2c2pGH4LDOjcZfyNxrdAG
u3WsAcTvQe+FCzADbybcDWOoO4AXI2sJERBom28k69xSdP3O6X5FUNdB/52Q
iy7DK4bNkM68LPAFl85RzlCFnFX0UHQl7XbAdHQT3njikiEF8mAa5MMe6vKI
yYTf0athlZxX6rJgF7oGquBOYiZ4zBhkLBsg2zbjK0dvgwrZe+kfrw79B9RL
W7xJ4IUMqJS9IyYVvRW9BUpkT/DmQBd6PayTdSSmAFrRx+EozCDGl7M6EIZA
rX5jJHyD/hq+hFTiUuAD9CfwsewVMf4wDIZDqX7XSz/nOULnKJ+FeTqWM+j7
iXsAFkMU/CrnkbpodAwEwRd4n8Oncvapm4yXDTlQresn67wSHYsXB/E6t2My
T+qiGEO0y+SrBXh97OlFuATnYb6MC+bquepP2yXoh2AxxODVs+91lrknkheO
WOZ+PIxeBo/oGb+Rtk+in4DlTpM7u/G7oMdtclk83iXaX7RMHnxbzpKcZ8oN
ECL5Vu/Rdcr/geUyeVXybjflLrgCb2ielBwjuWasy6yt7G+o9nOKfjqgE9rA
q3e+HX0CmumnCdotsz6SxyVPSq6SnLUQoogfTN8eCHKZ8z9Xcjz+8+gX4QW4
GW+W3oFhxIVBuMvcwbvw5sAszZ1X8a7ANc3J8g1puw+9F3brPQqHPL37kgN6
3eZNsWU9ZP5QJn3QdiEsgpPyHWIKVc9GxzGOeJfpbxreY/C4nEu3eRvkjahC
B8jYiVlHeS2Ual4dbJv7L3lgK16s3EV0IzofPV3Oj+YhebeeRT8DT+mey7si
70ur7sFBy4xHxpUm9wRvKe2c6P6Qoeda8sZ829QvkTsvdVBJP/54frZ5M6r1
bRynOVFyYxMxkbT5Hv0D/KZ3zIn3Lvo9+EzypW328jk9u3KGBxKziT43yjui
36pAe4n7Cf0L/AzhHpMP3kdvgiIYgTfKY3KD5IivNG/IGy9ndhB1NtwOaXjf
6fhknGHyz6D3Qv4LhqL9POYNC8QLghCneR+yNA+4WY8QCAUf6Afp1P+o48ui
3EceOiD3Hwok7+KdxTtNuVPyh8vk9mb0YTikZ1zOUIfcIzih58qrfY+mLgLG
eMxbKG/iDfTzrc5D5iY6GB0idxL+JeYfy+yL5LwBxE9E/4n+CzY6zRsQiN+I
7oYuxplIORl60e14bRAh/xdyR+Qsuk2OklyVqe/BVFk/YvxcxtuJtwO2O81b
kYTfQ38tktNknJQ30H49FOvbV2qZN0Vyeo5tcoDkghL5d4Fay3y/SHIpcfNg
geZfeVNS5f7zjV7KPbKmtnnL5H3JJW4KTIX/AQO2X3c=
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtlnm0T1UUx+/PcIVccuW8DElEJVEqWpWU1aQkFFHIFBEPT2YeGQohY57Q
I0KKTLEIkYiQWYpUq2G1ajWsQqalz7e9/9jr+7377nPvOWePlTtkN+tZIIqi
qzNRVBCcHKKoehxFPZIompVG0UH4VVlRtB+8A5t94Ez09eC7sNnI883wDeAW
nneBpbBfB96Cfj24Dv1HYBH03/L9CfDRfOM7+GT4K/A52FTBfgx8Q2Jr94Fb
eV8H/hX4OXJ7xv6xKrH/bgKX8FwNvgjc5vbzwYVIDfg8MB+7qvCxfP9M4Si6
Ab4Z/USkOvx1cKnba90apCZ8FTidtRXhb4GTWV8L/mFia7R2BriA5+ngT5xp
FDbj4F87Hws/Dp/ldzUb3MvzHHA874/Cc+Ej4MN9D6O0N54Xg0d4PxzeH/4F
fAg4GNnn+gHwA/Dt7KE+aw+DeUgl+BLwDWz2YFOG+38ttbv5B/u9YG1sdoOH
3F8HwGykF/IZNj3AK9F3B19N7Yw/Bru7j5E/4H8iefBxep/ad+RD2etufub9
y/Ax8GPwVxL75rTE/iO/y/9DsHmR5x3YdHN9L9+L9rQT/R4kBz4M2x2JxWNZ
zjXe7XXXe9AfAStk2b1WRv822EWxDG8PDk3Np/JtDlIL3Sy+3Vn3hL4jGCEX
gfJgUeQSvIjujvg5BX+QdW35zgWec1hbSDHO2svAFrwrDPbX2X0PbcHeSPmM
nedWpAS8HvgQcgX8AbAhUhx+H3gbksLvAO9CSsLbgS1d/1Rs59G52oBzY4vt
S+wp12NmP3s47XvW3vvFFhuKoz6x5YViqK/r9b49awvorjjH04md/RRrH4Kf
A3vxzSfh59F3BrvovNg/z7pOSKocl69ju+fRscW0Ylu5MV/5D16Hj7bobBl7
VqwqHkujL6V7R19G+RNbzfkaPIrUzZiP52J/H/y4cpQ1X8ZWN+r7XZUDn+P5
CjCX/XTAvoTyJ9h5dK6zYJvUztUbfcfU7IfBq7hPK4LXI5fDb4xNxGvH9k42
V4ED+FddcDhruyoH4RPgNf0sNcCBifl9LNjAffdgbHVVeZpyjoO8uwf9RrCr
x7ZyYqDuF9zCNwfBK6Cfgs2A1Pz/seKN53LoJ4IvoW+BfkMwG8XgZnjP1PY5
D943sXjLBZfx/Aj6HN4Pkn8ylrfNkKbIKv/+4/CVWpsaXw7vlVgMD00sT5QH
A4Jx3bPi6DnsM8oF+F7kTvkU7Ib+Juyme31THKqGNfP6o5rRM7E7fBHbfqnF
/tpgtVBr1gTbo9asVn1FWikHse2emq/eDMaV73nyL3d9Ep6PrhL8mGzgeanV
wix017qN9jkttV4Xo8sga/Vf9EmW9Sr5a6nfoe7zhPc79Y5dXrtU99bDW/ve
sr0mTEos74rLz7z/3vujeuLvwXJb/WKQx8BCdPOROvAeqX0v8J1nldep1ZJ3
g3HF1xL5CH4/fDG8d2o1ZCT//Uv9I7Z++ovXc/XKd4LVnWz43R6riln5Wv6a
GazvK1YP6R7kd/ULxV6wGtoutb6jPnwK3Xux9fFl4OvoPwAvBOt36o/q7Sti
663LlT/eB09jszKxtVsT85XqRn5s+tVghB+mpMYvYn8mWF+flFrv1r/OB5tJ
NM9sc59qPimeZTOPYlKxWTLL7mSGeo3Xn53yJc8nwMq8/yY2ez2fZE3DjMXS
bKQB/Bi6OanVrRLYF/MapRibl5r9t9jsRu6FH00s9jR3lcO2kMfY1NR6lvrj
dva/KLH7Uew9ikTyu3P1oz7BarXyrhVYlnXFsLkGfDixXqD6p36gHtfSc1M9
K5u1Ga9p6mnF3KfyrdarpvXFpkBsa//vh95f1GeeSSyGBwVbo3o7NNha7aF3
YrGnOBynnptajR8D3xqsTw9OrUapN45wG/WUkV6fC6pHq++kVuPHo5/k9bor
uqqx1aJqyjefaV9IzV51+rVgvU09TrNuI68zj8U2w2i2KSpfBZvJNJtp5lFv
XYr9Oq8tquGDPe/GJ9ZHznAPjeC/+YynGUx1STW/P/z9YP9Tje3qe2gHFvS5
Wb7uiU2IrZ+OTK1/bvJ62xi+Aj4lthl1Wmx3fo7/NtVcGuz8ugfNIWfRN0ks
LzTPXgo2r6rGzgTneg1RXR3l/1VPV95ppj6M7gf/n2b1fz2HlVPKX+XoOe+t
isPWrF0UrF6obvzqs6/mw7+D5ZJyqp/HmeqD5qh/Wd44sX6tuaI5ODVY35Xv
Tgab10f7jKE+0sZ7h/rqG7zPDzYzqR429zvX3WvGKwTvBDbhuXTG7nF3sLlH
86TmT825n3qd1Pw1NljP1Ty4IFh/15yjeWeo+13+z/VePDmxGFIsqQ99Eqx/
K56f8DqvfvwfOxq1gQ==
            "]], 
           Polygon[CompressedData["
1:eJwtmHn8lUUVxu9FfhOYjsoV3gsiyFaaSWpoLpmZppZWRm5pEIFSIbIoooLs
Ai6IsohEoCwCsgsKigoi+6KypJCyhK1WtiOICPZ8fc4f53PnzJk778yZc57z
zDTr2L1tt1qlUunacqlUW78Ti1Lp15LeuVS6WzJH7UtTqXSZZK7aT0rOULu1
5Cm1h0uGSbppbHfJs5IzNNdi2Wuqmkt6c+kdpb+qcXdJjlL7iL51g2wPSo6V
/Ufqe1G2I5J5as+XlPT/UbI3lv1G6a/IdqfkcE2p9JHM7Sul0lDp9WUra8wt
0kdofFXtQepbUXhO5r5WslTtUZJmajeXjFZ7kuRmtbP+00f/7Sn9kOY/oPnb
ab5H1NdItis1ZpZsMyQXq328+vrKNkxSX+3vqm+ebLOlnyp9qfQ6Wv/0wmtn
D30039PSO0k/Ufr92TJEMq2wjfU3lO3rGjNT+njJF9Q+QX09ZOssqa32Weqb
Itt92WthTbOlTy58LgPVP0jSVXKbZJz6noizPVNjjyn7jBlTUbtN8n9Zxw3J
a2btEwp/i2/eGTHBeZ2dHCudpB8l/TTpv5L+oOQStT+vvjuyY4BYWCL5nNrP
yn5Fsj8XqX25xuyTr2tJ3ye/91DfQf1+qr4rZLtPek7eQ9eQupr7+GRb39h/
E+kPS/+O9P0lz9EjYvPE5P8Qo32lH0dsEZM6j86SGrWr6usmW8fYzzHS+0i/
VfohDa8n/f7CMUKsXCB9sPS20j8ueXx/6SMLxxYx9ojav5Q9afxF0kcQ/9m+
P1X6mMI5c7T0Bsm5xH+aqn1K8lz8pyG+K3uu72fHPjnQPc6f2GipMY9J/0n2
3tjjEPJY0jh5DfyfNbJW9thJex8o/fxkH9wTcdIqOeaIvbLObCFnJalVdVzV
09gfcKaFfYbvPtFnr5PtJclZsr/INzT+Q61zf43z/cbsPbJXcnZo4Az+uEr6
c9LvliS1D2r89bJ1kdSR/Wj13VNY6oQ/usR5HpscI8QDZ1Qv4pVceUD6OdLP
lTyk9oCwc6Ydss9wkOTe7LPdKrlA/92rMS2r8a1kzKqd7EO+XU727UTpLaT/
QvqqmOu85BxhzgHZuQCGgqX/JgfVbqW+KZy9vvGU9LOlv0JuSd8p/TzpG6Sv
kXxN7eXklGxbWWvgyYCKx6zHh1X/94XC53KXbL0li4kRclNjJnD+kn7ZebhQ
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
etyNuHuDZ9QdYpRY5Q7GPev/H+DPtQ==
            "]], 
           Polygon[CompressedData["
1:eJwtlnlQVlUYxi8aNlPTZ3aduWilU7bve81kblmae5aWJqCIoiaggJmWAqIs
LiCobG6QmOKSiUvuuZCUuK8kotm+76uZ9nvmvH/85nvuc95zv7O85z33ppjE
vgmNPM/LhHA4FPK8g1AP55p4XpsIzxvpe94d6LvgTpgbeN50vBL0N+hv4TtI
xuuG1wO6wzt423nPbvRpaBvmecd4LiSuhueP4ENoyn/UEJuAjodX4U1iGojt
RJ+zPDfAYrx5xN2DHkPbJJgMx6EdcbX4+2AXzx8QVw17YbS9T/+7F/0L3q/w
G5T5bp43M4azmjPMx6vDuxGvFbSGbcS+jPcS9IPXiFmD1ws9hT65kAeH8Mbi
JcHrkGZxfdC9oSek4OUTO9vix+Ol4k2GZM0Brxb2w9X6b7xNxFZrXjAOUiAV
nrN13hi49+t/+sM43jUeBqgvbZthC7wPMXhDIFJjJCab92TB3JD7/wOBG0uK
5ql3mfcG3gj0KBgJu/FK6VMClbAQ7yDeDOIWoS+TUJfCndeEeYTDlTafub7L
oVL0ApgPPxPXnPZDeg/shyJiduEPRw+DoTDBd7mmua+kbRWshjl4m/C2wGa4
IsL1jUVPpK2AMc6BtXjvQpXtn/ZjPf462BFyOaKc3IbeCodDLh+uwttJn3Tt
OUTZ+mnMB9DF6H3E1kIMDIF4uN3OTARxAbSAY3glxA+HAD1VcyQ2LuT2fAfe
dthqazUQf4Bynrhr8GLwnue5D0xQnuC9gp5oeojv/l/jyMBrinctNNc6ah/h
FvRtcCvkEbOc2GWwAd6z9dNZ+BhdpvNna9BNeQdj6HOB/Y0kJho82q+HG5Q3
OgfW3sXGrjn0hB6QRNtF2qLotx09QXsEmVpbG18bnUFoBbOJiaZflHIf3Rpv
BDqduFT0EqiAOp0nCEcP9l28+vWGXpBobf3R/eBFGBZye5BA20StJ+SE3NlZ
aHml9Qhj7o2gMaTiN1M+0jaU2Fidf/RKvKXwNvxNTCT+INsDHy/Wd3usvS7H
e1w5pHHht0V3gPbqT9s066P9ykRn2RmMs/Orc7wHL5H+CTCatofx3sKrgCWw
1PJfZybe2hfhLVbtgyIohGKrq6OISbNxJaDT0VMgB7JV96GT6i9tMwK3N9qj
FhDnu7tC+Z5PW4HWDl5gbH1Vq23NBodcbRqIHqS8tXVebu8eS1sGMVOhFO9+
3Ql489ELAncH3Id3L9xtY9b6ax9KLD4Z/aVi0dm0f4X+OnB5Gqbchsaqbfa/
ndFPQ0ebWx39O3CnnOL5pOofzy3Z9xPo43DUzu95/M7E7eL5vNYe7z/VY/QG
WAcFeBfw/oF/VXuUz3gXTeejN+rMWQ6tUk2H1fAXMTPhKXQ7aGnrfAYvQ3UD
pusX7wu8PL0bCm3eR+x+0T10FH0scONbj1eluxn2wGnoyDzO4NdrP3w3X9Wp
Ut99E+jb4E/6rsCrhGUwi7Ys1VbVKZijdSDmOvo2A99qo+r4NMi18WmcnxB3
kne253+P8HwYanj+PXDnR+eoHGaq3lu96G7nKdLGspz2XN/VbtVwrWkV3lpY
Y+usvH8E/Rg8audjke4ryNRdbGOusW+FSfrO0HeKndEH8R6CJ+xMyFf7Yphl
89D5fRIdrfzW2uBVQld0F3gGknyXn/qG0rfUA5bXWhe9p4G2s3AOLsMl8CLc
XimH6pUL6BmQY3t+WucSnQXTIMN396/u4u9p+wF+hD9gD1615m9rWsz4i0Iu
b3ROKqyeplleKb9OBW5/tUafoj+Dz+En2Ik3z3d3pO7KcihT7bRvQ93nJ+C4
9tn2SvmyInA1TrXuWVuX/wGO44eM
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
v++0f33Hf/YP2lw=
            "]], 
           Polygon[CompressedData["
1:eJw1mHnUlVUVxu9H9B1L/V7xOpzKnGNWFIEYBJR5llnmWQSBj5AZIUEFBVFB
UFE0NQhEzVQSnFAKUVGKBsuKbLUY1MplYSqkZj0/ns0fe93znH3GffZ+9n7v
OWOm9q2uUSqV+leUSjX12zeXSmelUmmAcFGUSsdJkqSX+q+QnK72KOnqacwI
4faS45L70FVJTpRcpv7LJe0k50s/Tvqt5VKpi/AJwqOFs8Z1Ez5JeJjwScL9
hM8UHi58snBjyVS1h6nveul6S05Re4z6TpDuf1U+++nq6yPd+8JdhP9WWSrV
Fz4o3Fn4PeG6wpWaM1j4iPBF2ec8L/mMnPWr0l8pfQPhDsJP68xDhL8lPFC4
geQfmttVfevLtsk3ksdgq29Kxqp9hvp6Zt+Bu7QQniTcUfh7wouF14c9sQU2
wZZ/r/La7FFHeIKkqXTNJNeo3T2HzTSvluSswrbtKP1Q9X+g+d2EP9b8i4Uf
1xkHCldKX5v9JYXa/XjveF/O/qXGN5GuteQr0vdV36OaO0y4j/BVwmdr7GdV
1jGmoXTnqm+8cHPGZI9hbGN8QvjKbFsctYl0g471qf1tbKN2J+mnSL9d+9Uo
7Hv44ODsM31RaR/krPjcBeE/2I434W3Yg3UvlHw9+Q15y0uE/6v5fYQfKfvN
PxUeVGFfaJRtK2z2ke42UriX5k8Uriv9BYXPxhlnSLdMMl7tmeq7FL3wIc2/
Qvjfmj9W+OLk+49TezR34O2IGY3vn+3j+EVZ0kntquSYIXY6C5eTfZTznRH+
1Fp91dJ9V3i6cG/h2cIDJF3VHqm+06RrLlwn+c1PwdeIQ3xbMk3tSyWliG9s
/R1sWuExjG0paSE5tfB6tGsnjzk1zng0VpPPjo2w1VThOZwv1u+hvi9kj5aF
bTVKfQuzfRBf7Km+Q1X2n3Mk89W/QPKh+rpL95ls2ky4h3TfF16nOduItcKx
T0wQG/ShWy95Ofu9P6+0zzSJt/6k0m/0kaST5s/V/I0avz1baD8i+Vn2nbFl
3WRbDBBeJPyi8B7hocI3CT8p/Cq+F/bgzXn7tpI2+KD6j5c8pfY90q2RbA5+
wff+WWlfHSa8RPg+6Z8Ufk7yoNoPSZ4PDm0U/IjttwivFb5f8mzwGevVSvad
XZItam+VvKl2F+mvk/4p4R9n34G7bJP8OvZfLP1m4dezfbiX8IeV9u2B0t8g
vEH6F7I5C+5aIvlR2IP5q4UfF75KeKnwM8KPZb8hbwlHbyrbNjWCL7HRJuHH
mCt5NDsOhlaYk+HmT3Se3sKHtUZT4a8V5i44rGs2LxArxAw5aorkGrWbqr9Z
5C105Axyx9TsOHpBZ3lRMkVjbtX8X0r/5+w1WRv/7hZ8eWJyjOLv9bJzCzlm
Xdkx2EO6ayscm7WC709L5upGwtXC/YXnZnM4XD5JfWeSSyU3q/2y+n4r3e8k
P1d7h+T3alcUjiViitidB3/GfPhkcrwPc5h7fNivZrIvElODkzmaWCMGRwi3
KByb12VzCZzSnFjLPitn3lF2ziJ3teQ9JPt19wPBdx/rbfZJOqr9L/Xtq/R9
LyTmNW9WyPRYD9104Q7Ck4UbFuYkuOlq4drCR6rM1XB2K+muzR6Drk7hHE4u
xyf2V5mTWbNhcDVvPk26ycm+cH7htdljcnZ+hkPgjonZNQh8cnJybUJfq8hX
jG1Q+KxtOGP2GtjhvMJrk/PgeTgM+34Z9Qg+3zjbpjOEBybbuhx8e3ZyLpgc
94d/2ybryQ3YvW3cgbtMIicl50xyQnX4MtI+uQZANwYOTL4Td8PH8XVshK1u
lUzgLpKl2TbFtrdkr79Evx9U2obYckh2LOJT+Nb48Ad8HF/fXfb95qrvPnxX
cpvaN6pvUGFOhpvx8f7CrSIeZqrvLulGhv8z5pngj3GSV9TeKXkt+GwhOa8w
R8FVtwsPhwskfQvz3hvZHA6XExN7dbbFwmPDv3gv9E/AhcH/7LErmbPYezS2
qDAf7Qj/xZdf11q7ys5x3SOfk/sWRTwOSo4r/KV+9A+PeMFfqUEPVLmmo7aj
htpQdo1G/QGnbSw7Z1GL4f/kMjgHLoKT4CJq0pTM+eSSUtRL8AO598bsWpma
+ZLCnAl3Homc2CO7VsZH8dXGwc/k3MNVtif5jvzzU+luijVZq0n4CfYcl8yz
9YMPidn3quzT+Db1G98S8A25f2SyPT6N+GYOXPqfqCexCbU1NSW1Zc3gXHwa
3z43uXYkP8E9B4Jv8GF8mRptZ9mchP5Q5H3qPe5+OPDnVbY1Nqf2I8eT66mZ
qJ22Sh5Orjm6F86x5FpydK/COY08hY/iL7TxFXyGPnLgiuQagdz4g+x8Sc1/
mfCD2FR4jnB74duFlwlfL/yWzr9C+M7knN0laiPq6X7JNVJb4TaS5cSZZCVx
Ld2sCvffAV8Gn5OPnhZ+IPZrVziGiCXqkSeIFcnSmN+68Bxy2ZTktVgTHWPY
8yfZ9ccC9XUtzCfUxNTCrcP3yU3EBDFAjUCtQM1F7bVO+IfZdV3PwhwBV7yr
99gYd7pL42dX+K4PZdsMW3UoPPeGeB/W2BB7sHZnyUWFc91QOABbho24B+ut
VXtenL9b4ZxP7l+N/5adU4ntAcm59p3sMejel/xR7TelW6YxVxeW8ZI/ZOsO
aswBeEJ9cwvXfGuCv94uu4airqOupLZ6OzvPU4dUF9YRe8QgY6jhtgY//aVs
jns+9MQqPso9toTvsha1AzUNa8KvIyS/4J6SeyR3Sy4v7A+r1J6Db8V73p9t
o26xNmNnxXscm8MvdS2+Re7jWwcfxVepYahlVghPCPtgK+rN3XGGlyIfcDZq
0G1hz7/qfm9lr8HcifhS4btwp99k1zRwAxzBtyo1M7UnNSi1LDFCrFDDUMvs
Kfv7Y5Hww9k5ilyFD6yNOCZ2dybnnMGFcws55tWwE3enhufOqyWzk3MeuR2b
Ybt7k2ODN+XdqLN/FbI98tHA8GFigZjAt4kBYv+W5NjA5vj2wuS3wKfxbXIV
OQs8T/rlyb4PL8P1C4QfEB4S61FTb4p3xNeJWXyE73P+M+C/gqPf9oW5gW8O
vj2IQWLxYKX3e0l4U/ATZ6W2g2vhXPLi0Tyt9kr17aOmzv6e4o7clW+OO8K/
4LOdMYex+8vmFLgFDoQLyb+jwo/wBd5gc7zv0MhBcOmY5NxEjBPr5DzyFPXM
BPZKrh2pbcj95CxyF3Ui9Rz56ObsN+At4Gi4unXwHTUS3LY3+AEfxBfhALhg
PnaVrMm2PW/Af1X4GL4GR8FVxN1zcClnln5s4d9p8GzhGohaiBi7O+KDOcfG
tov3mZ8cu32Dv6mJqHlmR3ztFv5TdqyTq9iTdaiXno38RXxQw1DLrAxuxA/4
74j/N/gvpm7wX/3k/0LqBZ/zzcJ/GXAdXPRGMufBWcuFX0vmMmpO/pvhP5ox
oZ8SPPtO+Du8zXc7vkUMkavIWcQWa7L2nRXm0XvDnsQw3yvckbuuEp4n/G7Z
3M0b7Y099iSfib3xMXxtJu9amKPZg7Xh6q4RH/DBqvC5VyKfjw4OgoumS2YU
9mF8uTo5V7cNfuD9sOf/AfepqK8=
            "]], 
           Polygon[CompressedData["
1:eJxNlnt8T2Ucx8+UfqGc9JMOKuRSbMMw7EJqRGRsw2wuu6S5VNta7vdKyv2e
exLb3GfD2MRiWIYshUrXlxdJLqlXV6H35/U8f/TH+/X6PJ/v95zznPN8n+9z
GqRmxKZXchxnOlSG457j7PU5zrd+x0lzHWcojINFAcTwj8EFYgl429Efwxxi
GYwruPYkfAoH8L8j7xS6FH0QPrJeNly7x3GqMK4KzcnpzPVREAPZeB/i/UDe
EfRp9Bk465n57VMciuEbcjK5Zh5zKGK8BwYxzoL5eCWM98MLeg+ujdU8uKY5
4xbwNXoX3m4ohDJytuHVQFeD+6Ab3t/VHecviEAH4G0iZwp6IHoAJOgd8bbi
5aMLYD6cwkvFC9Z7QhvNEa8MXkEvgIXKJScPrxbag4fhebxazPEhaAxd8frq
W0EgOgjuha1cNwpvKHoYjNS64CXjtdS7oetxfX3YgX4crxE0hERycvXO6HPE
4snpD7vQTfF6QjQkaV3xZqHXo7MhBxKgHl59aAI7yfnSb9awiFix6gk6cM9I
OEnsbWIb8FbDJPRkmAafEDsGE62n2DJbB2Xouao1fWfPfPtEdCmxEO7byjW1
prr7Hm8E45dgJ977eGtgNZwhtg3vXfTn6F7k9IYT6Kl4b8DrsJycnlBHNUC8
NtSBcryjcMzuE9VfKXoLejNshK/wYjyzhlrLxyAfbzHeq+gsGAvleAegL7oX
9IYJ5OyGQtgDH+B9YZ+xCd2HOSRDitYIbz3eOlhr81Sft9hbt6GS5oQXiHeZ
8Y+2hlXLf8DvEErsJrEN5F1kfAGexLuEtw7vJuN/IAjvfu53N8/dgl8ZHYlX
ifFdcBHvhN4dbzzjCdpf6N+4T47f3EP30ppobca4Jv8cOU3t887bOWluh7gm
RetB7E2YplrhmiXs6Tz8k3CJnDGe+W76fj201/FOw3L0IlgM28lppT3MM3KJ
3eL+t+EqXIEQG/sTPQk9ESbb+jpo16gfuj/Ew3jP9JI+6DiIgRJyRuI9i+4C
UepRqnW8JHQypMERv3m3VPQQ9SV4y9baI+i6UFtzJudpvE7wjN3HhXgdbP/R
unZEPwXXmfc1aIu+w3v8i25n9Uby7jB2XPPOevcq6im2v7SHxnbfhqHDYZHW
EG8cjLF1qr0/G32Ve16B6eREeaY/qk/6bB9SD9O9nyPWHXrADZ75CwS4pm6a
4P3E+BI0s7W5Xt+P+ALW9zA5h2C4a+at+Ws/PYrnMh4NC8krZ3wUzmsfE49W
Ldg9q+/3M9ddhidsHf5a3fT2B4nXBD909cw+0j6L5r6DIQlm4L1o12smehY0
wm8ILV1Tm1q3sZCBztT3tPW3EG80ehS8pjn6TU9Vb33ZNWeaeli6+iK6I3SG
vbb/TUAvUY+CpZ7pbepxEa6JqScWkddO9YMeorlCDeIPQF3XxNJ0Jnjm/npO
BBT7zbXt0eEQ9r+8SPUqrm0Gga7p4znq1ZDrM2ey+ul76LPEYsmJs71zCt4K
YithlXK0b21PX6MeDPt1dkOJ7WXqk+q96sGJ6tU+c/6Go8PguL2venEbxq1d
c2bovp3Qc9CzYa7t55+RPxw9DEbY9ym2/WAFehWshDxiA2EADPLMP4H2b6yt
MfXqOO1vz/wfaF4bNWfYDG15dih0cc15qL0QjA5yzX5X3Rz2mzO0mc+c+zr/
B3vm3E+3Z4DOgnl4FXjvoGfCDJ85GwsgH3bY761zK0XPRodCa5/5j9jnN/8F
mTpbIMsz59syvKWqI/tdKuy5u1a1Dut0ZnmmP6pPzvOZfxX9M7RCh0AL23P0
z9AA3Y9YPPSHarxrVSiwMf1H6BzQeZBge0pN18yvG7q7eoLP/L/o/++69iPc
gGC8/wAac4DQ
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3m0T1UUx+/P9G4e7o/fD79jeCVkVmpVKFEatCLSoBargUqj0qBSmUVR
SHoJUaKU0ICkslpWNFk9WkpF3iNkeGavDPX6fNfef+y1v/d79jn3nnP2dBv1
f6j3oApRFBWkoqgiOspGUYs4ihqFKHo3iaIYHINHgzflRdG2nOG3sH8FvQdu
N1IKfyATRfPgZ8CX81wOfxQuYo2P4SugpzP2Nnge+jDjC8Gn0JV4R0XGj2Xs
WfyCxL5Bc5eihyNvgqegRyCF4PXYbkEWgIvz7HveA89lfCqySxzfUpoxvBu8
Hf0n8pdjrTkZ2yPYHOP5FPxOX0fr6XtOak7O3qf3bkDv4Hkzei/z9iEl4K1w
RejZ2ExizT8ci9P6ZVoLmxPgLPs9BD4EPqBxcCfOoSd8Ve7hSvTXzO2OXs9a
X4FL0Jdg8xRcXWyqIdeDO8PVAxdhszexOdcgHeDT8HeBuzu+W2PgVdgtx/4H
dA34/vBXw9+M7oN0Cbb+DeDLgu1xLvavYj8ktnc9KV/B5ifwEfgseDDcjcHw
I1oLfBq4G/iCYPs9yH7L2O+/4AL4E+AZ6JnIbdhchzwIzjCvF/hecE3w7eDH
wXXA63jfKt77CzrH87PwdzG+MbFzq5U1fhj8nfBlGfPnyuBzka7gPMbbxnYO
Oo824MXgxeDpvsdCdHPsz0d/Bd8QfBa4nPXqgnPgk+Cj7OEI+5qFzRLkHebO
Rp9irCE2xxl/n+f58DPRUbDYUIzo2/L0PYoDpJLHQlp3prngynxrZ3AW7qDf
xTTWeQmZAR6HbozNu9iMCnae38Nvh28AP4Hn++AfRV4Bnw5XgEwCPwS3hzVf
x34s9gn8HfBt4V/jeRb8BPmz7/EwtjtzFnvyf8XaTGyeR+/meTp4FHiOx3sh
+irW6sua1Vm7Driun5vObyU2DdBVGPsS/B32Bdg09XPW3ruA2+lswB3A54Av
9xhRrIjviD4bvgK4HbhZsJzWUvt131YcKZ4+S4w/M5i/a6xpMH+QHzQOpvXc
JJivLmXuSualWPNc+FbB1vkcfg26Fs+J39ffSDVwPtx/4EbgesH8QT6fc/5M
cADfhF6bsjjU3Hz0acHORHuvDV7IOz7AZjn6ArgV4Pax5ZOMYgSb6u6rFZk3
H7v3sfmH8RfhP1E+T1uuGAO+Ei44vjtYntR9KU/r3ku53wOe24X3g/dnLOfv
zZmf670Hc+br8nn5Rj24D1OW7+QDyp//YnMp/LKU+fFBz3vH4Pfl2XcqLxz3
fK5c3NV9oxO6Jd+5HZxNW85RrniKbx6HXgc/Ej0L2QL+IrY8qPgtQ7/B80bw
MvQ7yC/g+eiJ7tuK2U95/k1ni27I+uvB++HbZm29aR43ynWv6vt1Rugn4Keg
f0xZLH2M/Ar+CL3D64vqzHrHG/Oslv2MLmbvp8d2p8oRVZBFKfObxl435Tfn
xeZ78ukGfibym06OFQ/KLfKZqsq3sZ2nckra59aKLa9ofb2nrt/RRdKJ5T3l
txqeA1Wfjid2TiNYszX6i5T5/S3ue4qbYr8v1VTFvvZVkrMaWei1b7LXbp1B
kfPD4G5l/uqUxa3yj3qM7V5XVTf/Rrdi7JOU9SXKdaqzu3KWg5W3m8cmworV
s/37FbtNsnanFfCZJX53i1QD0nY/E9nXcOQt5QFs57oPzPO9b9VdYNuKsRVw
U5S3eN4B3xquObINXDNtuXQyNg8qlybmYye0BvItuDQxXjYPY/NibLzysvLz
RPQDwXxP+H7wY8hUz9WVeEcJ9gm6CvI7OINuythibF7Atpz1F4KfU43Kmo1s
x7vPv4Ae6DFTn/HPYrPR3lQ7FqDHMP4eekPKasnVfrZX+XnKZjQ2sdf0C5XH
eG8xNtV5V5usnU8O3M9j83Z0i6zF1rPYn5G12HkaPNBzuHqUobHVrN+54x7u
b+pjenne7h1bL6G6r/o/IDasWtXbbZTHr0XWpKx3OcvP53mvP/K34Yo5ZFPK
zivf+6hLg/Ux8hPlyfy0+cCxxPagvah/2pTY+rWz9n3qt9oH09qLepClnoue
8Vyhd51CD/U83Iy5Y9HfwI/W3bs/qGe6z7G4kf5e9TebE+uvbmKNOZ7T1N8M
8vzzsHw8z85Q9f+eYHevuy73OFV+vTjYmarPvDXYuaufnApeGZtvy68UK+Ph
JgXbj765b7D+Tz3YeV6D1Ufle+3+lm982deRf/bxXLEavp/3rupj63t9Vy27
w2NQufoW7/F0tpu97y1C9wx2LuoD5T/qy4Z4/dL5XQG+IdhZqG8cECyeFdcp
/7/Qf0dv7y3VH7YMVkdVK+XP8vHz4Wp4HVfdHOwxqPjt4b2oes6O3qurf+4W
zNfV2wwLVm/kM6qV+ld6OTE/kT+vBf8PKVTnTw==
            "]], 
           Polygon[CompressedData["
1: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
bV6OGE++M8Qh/zG1i3gjv/0XVKhA+A==
            "]], 
           Polygon[CompressedData["
1:eJwtlnmUzmUUx3+GWcziN7zvmPedMRhrEy0qFCJrUpaEFqKI7INCUdnGbsiM
PdupUKFQKOpU/7Tv5ySVmEGcwRjMjNlo+nzPc//4nPf+vvc++33u86aPzBw4
OcLzvEUQCfPDnjcPFsC7MZ7XNOh5yfAy9jC0p2E4zPeJg7yQ5x2L9ryCgOfl
8L0aCtEK0C6jfcv3N9CFNo/RRxx9FeEvxF+E/w18m6FOoufl1/C8vcTsgWq0
nrTpAb0gCy1M2zBx54jbwvdncDvaCPybsdOxi2lXAq2xj6Ll4KtPm2RYjr4M
Ltv4G7AbEZdL3FTipsELMB7GwQRYga8BMXnEntLafBf/Ir6W6AexX4HZMAst
mnGiIJDoxs9Fq0vceOyJMAEGoBUzh4vM4RJcgavsRVfbo3jiu2F3h3j6yWO9
u9B3QgXjT0RfiZ0Ny21+pehbsQ/BSeLjaPcn2nFIwj8d/Rna3QGdse+H+6AW
vklor2NfILYSqqAJ+ltoO+BtmBN242o/0vBdJqYIbrCOMFoKXGcdxawjkbFP
M4cP0Q5AJN/nicvXevGvo916SKWfJfiXwVJ4nv5Hwzbs7fAahGx+OdirYRU0
RJuNtgl7I6yHxmj5lotzLA+Vj2Msd1LwX+T7EtRjPmeY38fohyEDXwAmY0+B
THiUdmfo7zj9LaDNGlgL15h/MVoJvq18b4PBYXeuOt9pENRYxP1DXB6cgn+J
X0bcfvz74H1oTlwCDNPZwAh4kJhMmAxT7Fy0XuW0cjuGuX9kuabcXYO9DtZa
Tv5CzM82p6loJ3w3xlCdIcyF3moLt2Ifwf8VfA3VzLkF2i3QUuNa7o7D7ovd
D/qHXW68ifYs9kgYBRU6d7R6UFe/aD/R54/wh+/6UN5rnydhD1SuwyB4TvUE
bR68amdeRX/J2B2hEyQTEwtx2GX44nQ3IAQN0W6iHWWcT62eqK7Utvjd2PXt
DjyJ9hQM1V2FKIgRyt+Ai5uB/RLMtDszxPZS5/o49hOQAqm6e9AE/gu4PfCx
6+DzIRFK0WqhReke6L6hHWM+vysPbS+Ua9HY3e1e6n7ejVYTra3OAztD5wUt
oBVaa7gLagRdji/CXggLrE7GwgDts/pXv2G3H5E2l3jbR9Xlvtj9YJDVnhL0
anK2AirBI+Y2GIx/CIzUGi3HT+Avg3I4R47XJS5Bfu0XVBJzAf08/kLsjax7
kyF7B9S0fYm0c3gH7SAcgjZoD2jOjPcd399De7TeaLWDLr+UZ3fqbUIbDh2s
rimuD/ZDulcQg3aA2P3wpe/2NiHsapFq0lnmWcU8t2M/jD5WNQlGQ2LQzS9W
40K05ctaqw2q50Wq5WhJ3NGz1JcjxHwCrYJuHd2wu0IX5ULQ3bfm2Kn4GkAa
hKEZWlNIt7xSbvTA7gU9de7EBHWXIMn2R/3pLjTGbgRpcCPg7lHI8lT5Wp+Y
xcx3kd4zq8krffeWqa5k622BVfAb+q+Q77v3vzPaUuwlUGBnmov9BXwOP0B/
yzXVug+wWwTde6h38QptApYTV7GvQTZtVsAW39XVk2hLNEeNZX2oTi7EnwWn
rSZfCLj70Q7/vdDezrIt3APtLEd05rtotxPK7X6qNmXZ/5tm+COYW00otTPU
W3wduyzk3gu9G9d9V/P0DvZRzcIepRoIftC9A3oPlP9a4z7fjbEb+z3ldIz7
L/VI2NV51fsxlleqEboDNfBF6N7DXtrvgcO+yxHV4grmUw6VIVfzdL66qx52
hNpDdcjVdtUH1YkM8BgjXbmh2m11X1pr7ZVqDbRRH1Y3dIYd8HWETjADpsNM
2BDj3tqqkKsNqhGl9u7rPV9sdVz1fGzYvdNqc0X/FeCm7/5PzkL7m3Z/Rbu8
+h+rkVsz
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
PqDz1x1yNfg/MCicmg==
            "]], 
           Polygon[CompressedData["
1:eJwtmHv81/MVx7++Rb8P4lO+5PMtKqPoonuKkEIXURJrEyPXYYwiNsY0G4bN
hCiqud8vc9ldY82GDJlrm4aZbuQaIp5P5/xxHt/365z3+/15X855nfP+dp16
ysST67VabdIGtVprfs8oa7WtURxT1GqfV7XaZs1a7Uja7dGdie0UpEF7DLov
sW+O/QjaTXQ/xPYCui21Md8Y8JbYp4I7Yv8R+DvIxrS3R/c6ffcEr6Pvuy21
2p/Bm9J/E+R89DORvZCPsK/E/jvsvwTvwPhHwR3o95FzMFeBbgq2PZDP6L8a
+8PYtm7GXtzT6dia4AvBPcBzwZ3AJ4G7ga9wfIN9M34t4//G+C2wt0d+gu0C
ZKtm7Mm9nIu0pn0Q47di/PfBHZvxDee+DrkQ2Q7bdPpsm3s7hHbneuxxGlLS
PhDdhtjKZpypZ3k2cjDrmYRsgK6O7I5cSd9+jLm2jDPwLP6CXIT+MnSXInui
H458i3Yb+vbBtor9bIPuRNeC7rwy+swFb1+PsWXel3fu3c8p4zu3Ibcjg9H9
Alv3PK+/MufnfHsd8ijtqejaYhtAn/fAx4NbwLuA3wc/p8/Qbo1uArZjkc1p
j0T3P2x75B79pt9ucQ/Y2tHnBPB+yFjkVfp2LOIOvIu+zdj/5EbcxcG0N867
O5x2l3rc4RDwLPCO4FngQeCByMmMO6URd2y/3uh2RnohM9N/vY8CfBi4A/i0
MvpcAO5aj7FPsK4vOYsv8KGR4H3KaKu7t4pvLaD/gHp880jsm9Luh25F7v9a
2juhuxrbN5GNaHdF9yT2nth7NOOOva9vNMO39LGjGjHGseeh2wHbz+3j2r3j
Zuz3Jto96+Gfir46MG3ObV/H+I1ryogVY2YAtnvAvcC3gseCuyPn5PnOzPPV
P/qCrwTvAv5Vrs9YuL6Mb9+MbjS2H4DPQrrS3g45jT0Mxn479v3AOyJn5n39
NDnBuOmW3/bOPMe70N2N9Ef33SI4Qq7o04yz8EwuAV9UJlepa8a3K/C0Itbg
3MbmjCK+8eMyYuV0YxZ8VRlrMQb105v1AfAN4FHutQxf+Bm4AveTOzK+jmOd
FycfeCZD3TN4Jf7xOP5xNfe7PXgV+BnwAnAX8ArwIvC1VdyV96EPeWf9wR9i
fw37XOyXl3H23oGx2hO8BvsT2K+rYj0XFxErxox34F0MlL9Y3wL6z0fuQO5E
xmQfbacibWhvlOfm3Y1H6ozdkDmeZv51yGfI9DL4Vs6Su8wrM8oYO7GIM3eO
VuBJyUee9UHIetbbFt2SKsZOSP52jk+r4Ao540DWswa8K/jUMuKxi2tNfjK+
DyyDa9qhe4m+R5XBUXLTUHQf8vsBciK6k8poD0m+UedeRmS8u6dPMt8MR/ZF
vgCfmvtxfzW5BLxN8qs6120uta8+rW/31mfKiCFjaRD4fvBu4CsyPk9gf9OR
acgD2B5E9sY+P/OXsdkbeZ/zWsL93lSFbjYyshl9jX99Tl/bNeWqjG9t8zKe
r0E3rBl82gl8fBG5bj1zHpv8dkQjcv7+4C3rUQsYEzMyn3l/xvBZWQ/oH4c2
4uzkzHbY9kfuKCJmjB3lJmRc2j5m/r+zly3kR/TvgPsWkSPHN+KOrEX2yLu7
NPltdhE5zzP37C8tItd57uZ/9+Be7GNf97tXM3xU39q7CN/VZ7pn/Mhls5NP
5xRxpvsg19Oe5/3TvrGM2Fanzb30Tv5yT0OT/7zTr++2jFrjkozPGck/xkQ9
128sjC3Cl9plvjGHtc/xrk8ft3aRY+Qa+dm645w8H/N3A/wIZ7kQeQ8f6VWG
Tps53jrGODBXDywijg4vo5bSx/X1o8GbgXcDr63ijr1raxhj15xubjdmjB05
VC41J5mbZiVfnlFEbDbB/2ctT1nvZU1nbbcK+T3tB5HltFcgD9E+gP4bML41
428HL0U60T60jHpvZObXZfS/p4qa09rzffAfwN3Aq8EvgG+uoj603nwePB+8
exn14pPg68E3IC/Sfgm50XoJ+3Lsj4Fn64tyBPhl8B1yiD4KXgq+M+f7FNyG
NT5QBcdaP5gD5N7L0l/OLyKXd8v4+TrHNaOWsdaYmfxsHXJuETnMXGbOMneZ
o83V1irmXvvYVz5uBX6b9fxGPqgid5hD+jSiBrEWqdH/frkO3SfYXkd3VRU1
orWiMWfsPYf+WWQx8nRL1Aty0+VF1Lpn53r1J2vH48qo6azl3koZn/Gr7U3w
G+lXxyALaa9pCY7eW98A71jEG0N+eRncAbyhMQJ+HPxJS+BJ4EXgHYrwEX1l
eBlvCt8Sj8glVYyx78Fl8L/+3GTMi1XUrNauazmDUWWs0bW6/+XYViODiqhh
v43tNfB/kFGc22jkFdrti6h5D8H+7yrywvfK4K9X8z20VRF+OzFzkrnIvU3J
eNu2CN/2TfTfKuLQt9JK2r2Sb31frMh49XvWjp5llyL25Jk61rmc0znm5x3q
4/r+Y+bnlogR62jrd3W2ra1npj9NKeItps/r++aYjmXEyFst4eP6ujW2tbZ8
4NvmWexlETWt6zOHmkut4ds2443jW0e+sxbQ5/S9d5lvpzL26F7NMb6trFkW
J3/1zJrD3DK5iFpkchnvm83Az9D3n0gP12K+Mr9VUUtZU/UALwZvl/XDuEaM
t8a2tn4qpXcRc2p7voq5xb6l/lWFzrb+MBj5OPnl18kfcoMcMbARNVFRREwa
m74RzKVHF/G2lGPkmj3Td/XZj1riDTo8dbZfST7Sr30rGzPGzoSsb94B/zb9
3NioivBT+d/7k8M6lVFzmJ/MXyOakdPMbf3rUfeNy/rEGty6Y2LOZ8z9qYo7
8C4WJn/vnHwox8g11rDWstak/RuRY8211hgn5fvEGtra2beOHC3vjy6Du60x
rTXvpX1fGTXvojzPzuB+ZcztN+bkWHOHNaNz7JL38YFv4ipq8n0zL1tr2J6X
9Zc669tbcn3zsh7yjWLNOyZrKM/Is7E2NieZm3zX7Yv8sYpv+U194TZw3dyt
D2cf+8q792V9bK1hDWsta/06rIj8aj16t/yS9z8iOcA4NhfvU0SOs8+IzH3O
uUkR+/dbc/L8fVP0bYSP6qurksvsY99VmV+XJl9sU8R7+q4q3hKe8WDGvw3u
nvFsPMnncrv/SfjfhDnmzZZ4A4xPjtUH9T250py4NPl11+TH0cw3qoj9mNM9
M8/qgOTXzkW8eZ1LjpVr5Tlzh/s317tG12rNqM9Oy1r5ofQHawprCd8QviWM
YeN2bu5vWdYYno/c3igitidk/jRm/a9CDpNr5Xi5zTPwLDYqgmvMobVc78hG
/Ech31kPvYvtlty/NcLA5Bnf8nKQXOQeHbu+JXKVHKzv+J+K3Ox/UP4XZfyZ
x8wbvmVcj7lnWRV35x3K/YfleHXLktflenOQucg3kvW4PqfvmYPlQtfzZu5P
7tyviLv3zrw7c+Q/qsjJ8rM5yVxtTfVC+v+gRvC3/7/0LyJ3yVlyl5woN5oT
re31AX3B/GQttiTrDP3BWq8Vcqu5roz//+RwuVyOs7bxjryrIbk+z9izdoxj
rWnGlfEmcu7ns6brlfy1OL/3cPLpusyP+oy+4zeHlVHDvZH503y3IPOJ9gGN
4Hz3b43ZB/tXN7a8QQ==
            "]], 
           Polygon[CompressedData["
1:eJwtlnlUVVUUh28U6svpqdfhPlMBZVTGxyCDIqAioiZYKAlRDIqgkIpNanNo
aqWWKKIQTpCaltVqnsscUpstW7myNG1QyxzKsW+vs//41tvnt/c+795z99nn
+BdX51b5WJZVC77wgWNZ/7SzrLNwEYbYlvUO2nns4W7LyoFcuMljWXe5LKsa
KuF24kLRQyARjhBfR14F9jSYDROJa0deX6jBng0zoYjcw8Q62B7wg0y0cliK
7RDvgd7gzzx+sJr4nfxHFDFexjGwBu03tBTsGejrya2AaRBD7hz0GpiMrwSt
F1p/xgGwktwD5IZhb5b5WJQGYlZDA+OexC7Cnkru04yXQgF2KdoUKNP5AuEh
7AdhPpQSk4SWCMmwUp4HbTr5ldARrQjtXuxlsAR7A0Ty/y1us1azGN9BzgLG
C2GwbdZ3K8+cxDgZXsFuK+sLR/ElEhMg6yXvCPejF6PNI3YuPAEPow3CFwxB
EAIP6DNH4A+Hjcx7kPli0e6Eu+VZ4R7oJ++EdkbrRermbeLLbDN3KP4wGAit
zBXNO61AfxZWML5C7GW46ph3LNJvvgz7GVgOCR6zRvnYt8k6yC8xhTAV28bX
HXpAH3gS7SmYrjW5jrm/4bm82HH8ZzxcT1we/lthAuThC0QfAM0aH4ntQ1wu
/hy4WeKl1tAWYi+Ax+Xbo020TW374msDbWEL83zPPIfgMCQQkw8F8lxQCC6P
0SZj34jdHjrI9+a/Z8Ik9UlcgdQtlMMQtHOOWYNy7N3MvwvOo6UTu1beX96d
2PUwDC0V0tRXaZvv9jc5b5DzJrwF/0Ea/lx8F7EvwXEYhDYQgmE0vnq0j8nt
rTUitZKG3kbeQ54X9hPzOXTC7gjtIZ2Yz9D2wj6IQMtG60t+H1il80aivcQ4
jnppJaZF+oRo+F+EHdBB50uCU+T8BafhNXytcB3+Yfiex94ML8CP+h22YW+H
aP4jym2+lfji8XXS/Sg11hnb7TG9ZB3aCOyRkAkN2n/66Rwy18toJ9COwy+6
B79A60puF+gMw9EOOqbPSb/rCSPRysgvhQv6DXLQPpRvoj34I1kbqSn4Dg5B
L809jR0vNWqbXis9d7xt6uSM9HM4C6loV5hvJ/ansAuqpFfCfLfZT1JDJ+FP
OKXzjiMvA386DNU59jim70j/2a3rPUZ6EyS4zTkiz56JPZacGPyx4IXf8WWh
j4IJ0A3tW7QRtrG/wv5a9qH0c4iSfgjhWi9H0QKw/aUHwSjb7GvZ32luU9fS
h+Tc+hf7ApyTc4G499Dehff1TEvR/TtJ+0u+nlEt+H/AH2eb95H3CoYg2KS+
WOxZUmOyL8jZITUAKdj1aKugTvu9rP1VcizG13T9pJdLT1/uNuec9DpZAxu7
B3TXdZE9LHt5u9v8VzZxW7G97I9mxs9BM+NXZe3RFjPeAjVaa1InefiKoQTG
yTeBQuiP7xPHPLOcTRXkNKI3aS0mo6XIXtO+IHU1VPYWpGofyrLNPD9hH4Gf
9bvJ/h6Db4rUFtzAf4yVeoJbtO9K7VxiPS6Dj+5Z6WFN2I2wRvvVCeKyZT4I
0T7UpGd2jG3Of7kHfOmY/iN9yK37bRt6LOuyifFGqLZNTUZrX5P+9odjeslJ
3b+yj193zN4aLN8G4nQvRMMe/MfgV2gk5hhkyP/BeHk/PS/nuMwdSe5Kfh6T
u5ec/bAP1jqmd/riD4UwOKC9U3pchtSnnAWyV7Cz0GZAFVgeo43WNZW1veaY
O4ic47Xk1MndRs42vQOUEL+I8WLV5qHNhftc5n4gZ/cj2I/Boy5zP5C7jtx5
NrhNH5S7lHzzAdhBEKg1FIEeDpFQ6zJno1ftJdLfoV7vTXL/6oKvK3SD/wHD
P1J5
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
/w0HvU9QLOe4/lp0/gc3MOBW
            "]], 
           Polygon[CompressedData["
1:eJwtmHn8j1UWxx9fKs9N9TzNN9Pc3yS/ZqK82qZSJFkqGvTLNkQie8ge2WUZ
0kST0mJmzDRLM6aUkt1IDZIwpZI9UkJSotFimc97zvnjvL73c8997nLuOZ9z
7re0S/+W/QpJkrQulyQV9PtVTJLRIUnGqfMXeZJ8Kfyg8GDhnwvvFx4m/IBk
n9q11VdLclDtLyQfS3pLd7/GX6r+ayQj1O6nvh3SVReuJjms9teShcUkWSBp
pr7bJXUkN0iSkiQpV2LjmYs5t2v8KclJSQP1N5Ts8TVZq0Zuc0709fn2I+E+
wgOFLxT+LNpe2NMlufVVkeyMNvY/krlpkryU2hl3CffQ73CNvyi3Pc0QHl2w
vX4gfTvh/sI/dfsMEh4iPKdodnlUeKLwq8JzhC8Xbi/8bZYkh9zew4Sv1Pez
hUuFL5JcIvlEeKB+75P+fOn/IVxD+FJJdckPmuN7yVz1XyM8Tb/l9dtc4z/N
7E7YA2vPlzys9gmd7VfSH5R+lPAB4f2SEWqP5x7VLpP+I+lfFF4g3E04aP0/
CZ+n+e8WPi79XuHBwoOES3Pzn/Fur6uEp2nNqZLfqf/3khL1xdx8B/se0G9b
/Q7V+MvUX1MyUu2h6vvcfepxtUcVzNdmCf9BMpM5JU+pfZb0baU/nNkeqko+
jbY3+r6SPBlt7AzJdRpfM5i9PuMMksfVnwo/od9K+j0zGK6g+35av5M1/2Kt
9y/p6wnXlyyP5oP4IuNOk2zVXE01dpts1l/6HcKNhLcID4xmE+6aO8dWhz2+
xkmORLML940P4Uvb9H0zjd+h74e6n+Pbk6Q/Fs1nHhAeEcyXjmRmi3OEJwh/
LtxK+Ii+n0Rs6Ay34xvCY4RXSF9XeLlwO+G3hG8Wfl34buH7JbvVbqy+jZmd
dUzBbMKZl6mvjvA8jWmpsW8yRngRPia8QfhW4fXCraPdGXe3WO0lzJ2Zr+Fz
9wqvlzR3f8dPlkt/o9rzpb9Duvq5xdYjGnOCeHX7sv+20dZgrQ2Szantp6H0
L6r9gmSO5GXJDewxszmZmz0O0756RvuWObozl++fMa2E75O8m9odb5GuCzwm
fFhyj9rvq+826dYKdxK+U/JGavZ8TdJPeGtq/tA32h1yl5Ml30U7E2ebGozn
rnX+nEKsC3eQrOFckrvUbi9ZqfZNGvN2ZnfGWqy52u8U22Cj4TrfGrfHUt8P
cdI3GCfCjf+W3KL2gILx4tvCa6PFVKnz8hPS/7pgvA2nwC2/lK6JpCD9k9JP
kr5M+LVocXKe2pVzi5FnpB9bsNiBT5mTucgFddV3o6Sx5DZJeY8/fK6ez8Fc
W7BjtD502Ov7aDbCVhMKNs9/hR9yvicXYdOpPl8D3w9+TGwvcaHdXLoWno/g
eu7naLQ7muz8/0rR5rxa8k20tYjhcc5Xc6U/7ntiL5xtg/s4vl3i303Q+PEa
f53vlz7a1+eWc8m9XTRmk/rfkbRSu5f68tw4E+4kZ5G73pSUSd9HfT+WbrXw
HcJdhYvCHwp39/u9ILe7beb5kTte43PwLflms9odPT/BXdi8p8/PXbyPDwbj
ILiI804LxuE1PSfDWfj5ty4Pe36s4WfkrLdKGjn/4/PYjLlWuk9W8Vy9LZot
sMls2XdjtFzBetQh70Xro02+WKZ2A+l7Sl8JrhTekxoHbs8sJ5AbyFHkqhbR
uAxOG4IfROMLOHFhZvwBlxBDxFIr5w84aqjGl3FHwvWFV0m/QFJL7SXOP6zJ
2sQwsVzN75ccQC5o6v5GDBFLi4qWe4gBYgFfI7fiM/jJ5bnVaqOd/2t5/qTm
IO/D2XA3HNHe8xWx91iwWgoOgUtuIYcUjbOX+vngzhOZ5foLNf7P+KbwnfiO
8F+j1R93CZ8rPDMar9/k/nkufCC5h1oyWN6mDx0+/KrwF5nVIqe05m+FK0jf
Tvhi6f8p3AZOla6J821b5zNy1mrhL+FwtX9Q32+kO1Pfdxe+Xt8vFD4pfceC
1VSznY9XOH+Tq6k1iVU4DR56Vja4V7ip8FvRYrSvcJtgsUudQH1VQRK8XuD3
WGb1HDZiLdbEdo8JnybcRviQ8HThxPVfZ1aPXEutkVt9hVBrUaOgY05qxUq+
1svRbIlNn9JeXxG+KtieM/gjszvibv4m+QtcI30P9/9T0nVSu6L6Ho22J+4A
27PXZ6KtxZrUleX1TWdygfqele6PksrBbIytL86NC3qpb7fHKdwCx1BTX5Fb
bThE+F3hc3w+aihqqVlFi82bhd+IxknU0l2DcRX5uIdkZ2b1KNzfW/rOwXIA
MUSeo07a7vvF5/C1WS51g62JbqafkbPhu9SlZwezSZJbjUof7XK51SiL3W9/
lFuNQq1ySNI7Wn3VWt9uEu4TbY/UM9QQ7B0fxperSZ6PxqHEb7dg3FoxN26+
TPiFaJxOfFwtPM/3wd6o91+K5lP4Dj40JVoNz/rHUqvtuX/ip0ANEa3+pR48
KP2Dwpu8PqHeHxetBqQW3CsZG62mJ96PCk+OFlPE1nHJI243fIM3DG8OfIr7
qxrM1/A7uAF/eS5ajBPrrSULonE4uaZJMG6/wP2FmmNpNBtzv9TXS3x+fLdO
MC6v7P7WKFhtQYwSq+Qwchk1L7VvRo2i9hka30XjGwuvivZGw79qCS+K5nP4
HuuTZ/BZfJc3H2+/Gl5vDgj21sTH8XXeo7w7yZHUqtSs5E58Et8kR5GrsBG2
uiJYnBNncB33N933wwN8ZLC3JG823m67NGaw3y/8uF14APvNrNaDzzs6f6/y
Wo9YWJxZbUvOIndRY37otTC1J28Qak9q0EHR3hS8LXZKhqn9gb6v5/VrN+ED
wi0LVuNS667LLFeQM7pG42S4+ZvUauNSj/eWwWpH7rRhMJtz12OoFQuWI8uc
i6lDyTnLUuNk3jvUr3D1umj1C/Zd7/7ZQfrawd6iP/H4YQxjazufjw1WC8A5
cA81wkbPD/gTnAiXXenvMWocahneinD1GcHqgu+EWxTsPfi0n5fcsTi13PSe
51feSMOjvScZz5uat3U5z3/4I9zCHMwFx8JDe/2+ySnkFmIeTofL4QLeVPM8
Py/V2PnCnYLFCLHCm4O3Bzbdl9mbg7vjDt/JrM7EP3lT8rbEZ1b6e25k0Wrz
+j4f3FrV45M3AW+DztgktTPt13y9sElqOffjzIQ3HLyIDk6EG+GcKUXzvy3+
/ticmQ/ii7v929c9fslfZ+f+Zk7NB/AFfB5uheMO+nuLPbEXfBPO3ZjaGxcu
xqe3+v4+8TVob3X/505Gut25KzgP7uPOufujXt/Adw9F+08EroQz92TGiecH
80F8EQ4+mRpnnvAcRC4irqg1iamd/n/LLvVPFC4JtsZRX483O7yFDs7KPL9P
L9qb/Zifn/ORC9d5/UpO/P8b1d+vozR+NBwaLGaxDzkA3qYmIDcccv/mzEOi
xfhaPx+5AdvsS80nsdFaj3d8sIXPhW3YP3PCUdgcW8Nd5JixHkfkHji2QzCO
g+uoyep4PUIskhPIDXDGc0Xzf3IfNQ61Djnxeefxiv4+gQuId9425Jgqnt9n
6PvTne/Jt3+P5lP4Fv+Z8d8ZNdHPguVI7LEiWm7gm9M9x5PryVvEGvUSNSS1
Y3Wfg//lzsptbvZWzb9nj/8Dj3YL0w==
            "]], 
           Polygon[CompressedData["
1:eJwtlnt4j2UYx18bYdeF369+hXed5NDBoaguRSGEyLQ5RTmfEpnTZAcbO9mB
dqAxKWdKIivMbE4ZNsvsrNhsmLJihdpW2frc13P/8bl+3/d738/zvu/zPPf9
/tpN9fWZ52ZZViQ0gf22ZT3vYVnrXZaVgv4ODsD3cBAmE9tBLBptoRuaW9Z9
iMHbCj54o2AkXCAnHMIgAh7FSyDHD32DMZVwDULxPobD6HQ4AqPJiYL/0P9C
HUSR8zled+bpAX1gA54/XgXxq/ArhEkevEk8g9hROGab+14nXu6wrFtwG0qg
GFYQq5bx6GTGvsLY16A3HCJ2Bb8Mwon9Js9sm2dORRdAIYzBS7fNGBnbHzaS
EwuN0LHEVsFqGQtLYKk+k6yB3Lcnee/B+5BKrJJ7Xodqh5njE7w09GF4B53C
WD/GrYR76FqogUhiI2XfZD3JzYEfwVvHHEJnQTY0c1pWU8gkNpx7uNCNwIJ9
eh7WMX8xeip6CkzSczAJL4v5AtEFzFWoiJZ9+UX2GL2L+HTGzIQZUEKsK/MH
oBNhOYdwANd7yQvmOo94PhRAIUzEmwDjYDs5X4MvuoLYVbgGDzC+CbRymr0/
jtcG3Ro6Ok3+dds8yzSdT+a9iLcJ7y30SfQPcEp+ee6TMFHf8QJ6NvoD+BD+
0TNZhX8T6sDJHMuILce/TLwMSsEXryXP0AK+0HudwPsZfoJLMi/el8TmoIsZ
UwR5EIJXijeP+EcwB3bjrYEn0G3Bhm1Sr3gJ6HdhLFThndZ93UzsDPqsbc6C
nIlp6HPcI0jOtZxJ8vxgEexxmf0IQa+QPYJq29S5NzoLnS3jpT6gDMphrj7f
ZK2pSPQUOTu2Oad38VqT0wZW4s3QZ1hGbCZ6FoyFDLyleOd5zlyohRpozBp2
Zuw35AToGZOaD0QHyb5IjRFfBTGwn9hmvFfRveARiJd6kedBR0I47MMbxNxh
nMVorqOgJ9dxLrOv68lPhg3gjR9Fnj9+MqSRk4bfD90XXofPXOZcDUW/DcN0
z+XszkcvhAV6Jou1t+4k1p65O0ARXiBeEIzXc+/Ed8AW3QPpsdlayxPQmaxF
gPYcN+KNwV37xhbtwYkSYw53GA6RvEcS/qfS64gNwQvHi5Nx8i5c72JsB8lx
mRqTWsvnnnlQCle472Jd+1jyUsjrQ05f7SHP4j0HL+i3Rc5pPPo+sXpogFqo
gTqdQ/btstQaejbM0vrYBmPkWbnnQdhLThJeF7xu0FXPRhI0RTeDlrCanDjp
E+g7PHM9NDjMu3XC6wjtYS15c/H+Yu6/IV9rUL4pg4gPgcHaX1Lx1qHdPC3L
i3cdAUMhgvVbi78GDrjMOsh6DHOafHdP825S818R74T/tNPUudTPU+ge8CLk
yndC3om8zlx3AQ9oDm1htIdZAznPEehvyeuF39tp1kVqZbecO9hjm77xpNwD
2sFWPRuPox8DTw/znY7SHhctNcs63YMdeNthp54HWasY23xz5NtTr/8FBnLv
UNYgjJxQ6O4039ibxKvgD+0L0icvaa+TnjffNj3pDPos5GhfkH2TfZT9bCK1
7TJ1+aB8r+Ah7bsReL8z5jbc0u90hH6zg9Eh0pthhcuc2QXohbAIgvFy8abb
5j+B/DfYZJveKj32Ye0bcv5kzXOkj8J52/TOxXjP8J4vwctaw1LL3Zzmmya9
U76xg/UMeWlPvoFXKX1M55C+K3sse93PaepE+vgd+BPu6j5LvzrGMx6FEdov
TzvMu5Xr/6EKrcsT+MdhnHzX8M6hE9DxkKg1IWu6Ee1At4IWUv9443WMv8vU
u9R9BqSDj23+Yywhlsn1KShymHX0sk3flv49Cl2CdxF9BD2QuQfAGx7mP9L/
whqbbQ==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3nwT1UYxm9flbqXcvLVdqmhhaYMpaQILaYwGhRCyJIle0hENLTaGku2
n7UsY4tkJzvZ+2VfQ7IkbShKy+eZ9/3jzPvc5zz33HvPebdbtFnH2h0yURQV
viqK8mDPxFE0EeIUdgxjKLh5iKLpjsXlT6NoKnZFNopywPWTKPoV/BZ2B5qn
sF9xPRNNXuYnM3rCXYI7y1iDZhVrvgdfGf403JPgX9APgH+R8RGasVxPAs8D
z8KeQfcM+oGp4afBg8DTGK3B5+H6Bnt/rdMTvgz89/Drud4Mn4s9ysgFb8a2
YX4ruC22MGM+eCp8N+4tldhzU5+rDreLtf7mvWqA/8ReYlRLzc7g3mHBsOaq
wh9FX5x7O4GXMt7R96J509c/zvxgri+gfy41/Ln2Gdue62JojqD5NmuaKlqD
UR7+JFwP/8YT4Bncsyhj37uWsQR9ynwh5udqP5n/Ab4c133gf9e+wH8N3xSu
GeN9+K/1PO4tCe7F3FQ0H2I7cF0EzWHmt/seHsM+AL8N/Ub45u4D/RLbt1ng
kWhWMjcPTUB7EdyRuZngpows+BDcKsYI9C3RP+P+kAvXyp87Bf4FxnA0r2KP
MfcAfBfmvwOXAHdOjb8f3BV8L3ZlxnTyJ/lVDnY/mgSugfyH6xz4GdjljAng
DdiazEVo9qKtF+zdWmNrwf/D/G7nJ4NjuAqJ+XbFxPb5UWzv1NZaz8gH/sDP
7hTzy7N2bwL3G7gx/Kfg/7K2fyvAq8GjWLMjz9kHvhq+Hvxoj7s18F+yxjg0
3cG/oKkLP4L5mxPzB/nFymD8KPgf0VQDDwb/DK4NHpaaj+vMXvW4XMG9U2KL
WenbwT+P3QRfM7F3boQdD9+SUcljuS64qPut3jkP+CW4axkrWG8d3FRwi8Ri
cCvXR+Bvg2sVzE9uAs+O7axbBMNzGAXgz/k7D0/t3sPwjynHoBuvuIZ7mev8
aA5m7dv1zjuCnXs++MbM3+7xru8+kLU8o3zzAtfLwLWwN/geFhCHZiC4brCY
0v42S21OGl03SCymXsa+7bmlN/Yb7v2J96yEfjv4NLgi+Ab3P+XSHui2oH/T
9WfhKzM/189X57wDfjp4iM492HvKByrI75nfxvxx7RX8SewQ+Bqs95PyFmM3
/Bn0/8b2vTFzj6PZz/UW5su7b+8B/5W1d5+S2rPnMwqBd8JfAddOLQ+0QzNd
+RC+G3geuEti+fb1xOJd+7A32B5p75qjecP3qqv2P9h3f5laDlUuzVEOdH/T
M1QzFF9bguVFxbXiW360EdwrsVymNQ9jm3g8ykdbsG5BzzPKe8p1k+DaoxuJ
pkewGqEYnOB5TzmwNDgk9j7KF6oN8pmFwfKWsPzoAmt2kA79LZ5v9Z0H0W3L
WM7/F81e8DnwrmB7Mwd938Q0fbA79Vzwceydnj8Vk3/Etqb2vRPX6zL2PPm4
zjqvzjjY+v9kzT/kJ8pRB2LDh7D7GJMzFm+FPR47qw6C7/DcvobxCZo2weJ4
AbiKfDy1Gq86/oef9RdwTXxvdV7yAX2LvrtRavGjGOzn+VF57375jdeLC14L
ZsGVYGyG3wA3Ltj3Kuf3YYwGdwpWm3LRlEqtZilHLVZcM3aCTwSLZcV4QzQf
e86S/88LlpPfhnvIY1y1cJnXZe3bw9jV8GWxl32vVMs/9B5Dvve713rV+YuM
aeDzscXfZ+Br0J2LrW4qhpWvlEuGssavfq/WOOlxqrwwNrXcoT5KObwOeKTn
CvViRcH9PcfK98bF9u3ag5Kef1Tz7kssrtVz6DyXZKwu5nU/US6+289UtaSl
x476qmc9ptRXXea5u5RDeFZ1rpeCq2Jnc704Y73Hlaz57BLeq7Tvp/ZVNWUt
eC3aAan1WOrNavj6ek4932d953rlaL7n7tT6Rvnea8Fq3yL4m+HrpJazlJfa
BeNvgesarLbeA24GHsy9DbELY6sFS7H9g9WIW5WXwGMyVoNyvB9QT7vJe4C1
sfm/eqci6E/4ma6KbU4avet93vP0cP/cDX4IbhP37gGXSa2fUc4sCH5EdT22
XmKMP7c2973C+DhjMaiYUi6c6/ExCf4bbFnPz6prWl/PehDu3WD+OSKYTno9
O/K8kVE+8X3I9dqhulMstf5Qe3NHar2ZcqByYfHU9kIxqF5rIvi61PpP+fiz
3vfquf2Y75VazKj/VF8hH2kL97T7eq73OYPQ10f/vO+D3nlBav8FytUbvO/q
HSwHKHa2xvafof+O1bGdu/aqSbBYVu79LFjfpnNRfyBf0lndxdrd3S/VY6t2
61uuT60PVF8xIbZ+Y4hqRDBf0j60xZZLLW+qJn7uevUg8jH919yYWl8ifqz7
mPxK/vVEajVYtfh/u/Aa0Q==
            "]], 
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1:eJwtlnlUF1UUxyfLjZ9LY9OikxVmmbmkpqZp7lubG7KIIkqKiCwqaKEoqGi5
m2aLWyUqR6VFCzpphgqUQAIiIK5HRFxAxb1OWfa5590/Pud853vve/PmLfeN
d0j0yKhalmUlQW046lhWjZdl9XUtqx/0h+N4lseyasFD0AVvmm1Z0dARXUJ+
AvoVdHvoAEV4h2mXg38YzsBs2m4h9ht+LvE/IA9a4W0h/jWkSj/kfYA3Dpqg
bfDACdrNw3sNXYlOQCfCGNoEQl30LvoLkfcRb07eZLwwmKLvzSGeCVnwEt7z
rtHiZUA2OaXwL3oEsVHgC97wHLSAy8TyHRP/B12M9tHcp+CMfBteU3QzeTfj
CQMX/TOxQ8QuQQ/GNx9vASyEs3gt8F6EF8APbx34oTNoXwCFcIq8RniPQmMY
K2PC64PeRv9bIRTPH+rh1YWHoYycT2i/FjbCY3gTyWmu48ok/gz6WfgLPYd4
P+ir65ZLm4noeChk05zjeSX+Ozy/DW9ClWPaylqnEUuHn1zzvT3xesEb8BHe
chiCHgz94Qo5tyEMvYTYUlgGHtkfjM9f51Hm8yp5Q8kbDsNgFTn78VLI2wk7
oCHeGvgY1sJI8q6Rk0b7H+EQjMbbSKwKXco3JfKcAPfJa6z76Vd0OPGpcMMx
bb4gth426Lp54w2EQRDpmu+Ygp4K4ZCCdwSvnP5q81xH5gFvM2yCL2W/492U
NdKxXkdn8s4s2AU7oQLvVWJx5PyOPkJ/rdEvQxtoB8V4x+ConsEo2kVCnG3y
25KTDOPpJxiC9L1BxMeCTWw3eZPlnegdMg8QTd4d8irwjzFXMTzPgGKZRwgA
L12rXxwzXzJvDfCy8WLRe9Dv02YWxMI9x8xpoOxjGKPrUU5uEe+I5DkC8nme
D4mwzDY1agB5veE6+hpUQyF9DcYbJHsL7uAV4dVHf4X2oe0kCIXT+A59N4Om
ehZSYTp6GkTp935L7jdwUc+s7N0s9H76exo9g1gMfIgOIX7LMTVPal8g3mip
UdBAa1gK/nZIh94ec1b90L5QT8e5zzHnvKGeXznHQa4Zs5zbYFk/mKB1Uvo+
6ZgaKrVU6vgN+rkFN3WuBup8rCS+HjZoTUrDS4e9WgO+x/tO9gDM1DWS+iJj
TcJbBIuhD1TS5iJc1bkPkJpKXkt4RGtOJe8pZi3jpK7LOPX8vqtnX2rAaqkR
+CXkzeN5LvxNTi+ttwXoVcRXy7pJDYTLsifI20dOd7mnyCuDs1p/5+J1JN4J
uumdIfXqLXQ1+gDtD9qmbmynzUGpzdDINe+R95XoXdBD78EH6KHoYTAc8vBO
4p2GU/C61EO4i74H9+UskrMCb5KsNQzQWheqe/FxYj+QdwCviZ69DMecWTm7
cs7zZX5lHvT8bsbfBNtsc89FuWauqohfgUt6R8m+lP3ZXe+lJHmWekGb1tAK
zkmtl/sZctEn9DtioD3xdtAGymUuHDPne4lVyzpKXUSHQ4TOrdwBsa65w+Qu
a6ttt5KbbJt1kTt8N7qTa/4fcqSuoTvDBa1xs9FzIB7OO+a/YCZ6ltQQ16yd
rGGebe6MFF0PGX9XeQd0k/pAvIx99R45C+GBY+7VALQ/+EKNY+rzed3Psq97
kvOk3F+yNxzzvyP/Pclaq7PlnEmd0v+gAl2jUv2eYPxx8IT2EYFuia5AX5D1
1v+NVK2td9HHZaywGBbBOtvsOfnn+gw+hc9d809Qo3fFKLQPjND7Tf5f/qON
F8/1PWbv7tGz/Kdjzo6cIakHskdlr97WOinz3EHPjJwd+Q+bQO54mG6bmldH
7xn5x4vHWwJLbbNunWnTFbroHfU/QfeT1g==
            "]], 
           Polygon[{{7023, 7022, 5341, 2846, 2856, 5343}}]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3ds1VUUx1/7oIW+R+H94DL6foVSoJQlpey9EYGGIcEgsglTqEjQmKgx
BlSMiSMaVzQajUaN0USjxgUCAooiiGBANjJli4yy/Hxzzh833+8795z7O/fe
M+5rOat6wpLcRCLRPCeRSIIN40TiSorfIZF4DTzN5JtgHX6/C+7MJhJbwZvI
d4KNkP8O7kb+J3gJ+Y6U2ci2UWS27/B7Ozr7wcvI94K1mHsd/Bn5j4zn4Lno
Pg+eQudFMMnvo/B8dGsF0/8J3ZfBv5HnIN8Nr4HvAQ8zLsAPghczicQReO3I
5qRzCPyU8QljPeu8B57NNZl8foPxK/Itskf+IZjHd4/D06zTAn4dWRPOaaX7
sAq84etfAxNp9sxhjkD/HD48jWwNa5a4bWNsE8HkPyAfor2hPwEsZi6JfUvm
jzF/hTWPgBWRrd8ffELnDV/he3wGXMs6bbBpjG071sjANyHflrUzkp/yNyeY
/jrkNSnzU/429Hu8krXft+DNYkP9bgpvzugEvy3Y+b/C2IR+Ab8/gO+BH2R8
qT3yzbV+F/Jjve9lA/g14zx8jc7P9dOsURqZfiXYLLJYKgMLGMdybc2YsRr9
k9iVYpOD/30kx7dafm4VjJ7wNshqB4uBJDqXsfkF2yjY+t/CjyMrR68B+q2R
p8Dr6HdjvrP2zO9y5GfQW4d+/WAxoHsOzNcLts4R5r8Dz2D7DZiJLMb2Ii8M
ttd/4NvBc+hsS9kdbdRZIG8Sma3WP5kyH06B9dwf+XUavRPIioLFq+K2CLsD
uiPO4WjK7kIx+5fvVXmqfP3Yc0r39Lnn6RfgV34XupPPXEe6l7Df7Ge1P2tz
qWAy5cXZlO1Ld3GC+Qt+Pg2QFTMuwv9DFsP/lQ28LedV3895hcfw2YzlRS7+
D9Aduc/nZc+4mmv2w9FZiu1yv2flSx4YMfLgZ9CZAi+C360YZRTCn1XMp+18
FMv1Xb8r2CRt3w1gd0YDeBewCj/agD34ViOXF4FzkDeGPxRZbdJZKQeeTNm3
xqbNb/l/Gsx6HWgG3oFNXXjHYHGbr1iNbQ/aS1q+pE2nDjiPEcPngvcyiuGL
wF7YjgMnYzsYXoZ8JWvPZIxBfhfyhZGdwQz4yLT5PArshn4j+HTm72E0hM+L
LMbT8BJwgnIdvhB8IPLvs05V2vRHg70ZqaTl2ETXrwTHM0qSdk99/dx0rnPc
h1lgf3yYDS5gzZlgFvkM6Qfb47LIclG2OvtXvcaq3pS4n2W6O/T3IbtFXHXA
5hY6PSPjkufG1jtegq9G5yZjl+qSx6fqRl9087037WC+OLLcLI8sbhXDGe+H
ukfVyyi2GFV/7MLohS9lscXzITVSbG8Q0wfghfAQrE9eZf1Wwe62NDauGGjh
fUS5oLquOFCulyB/wdfU2lpHfbUma/3obfiWrPUz9bpkbP1RdVL1UnVPvWwz
Os2C9ZD82NbWN2rHZif7WqrzGTurjVnrWTrz3Mh6snz4SHUiY37K31LlHmfS
WneF3knkdflOAb8LktaH0h7b6m+HvD+qj+nNoF7QEd40WN1K4UPdyPb1Gz5k
g+V0feQtI6uTW5G/5TVWbxHpKM8aoHMuaz1G9We4+zY0bbbyTT52CJbX3dG/
PbYYrQyWF4Pgo5H1Cxan8+HLGNXwocFsFXc9kXWRT/D26jPBcmJSbP1ecdIO
WedgtWQ48mmx5dVc5u/3NVfA+6AzVfkRW+1TLRoJtg1WMzoir2AUew8aL7/h
0yJ7O+1nXzUZ80G5P4X5KZHVwEVgNb8XIB/AfFff4xjVDc+jgWnTHwaOQ949
GK+CF/k7RO8NxblyXzVjged4hees/J8dW/1RLi9W7eH3fP+ualEp8kfAh53r
HKajM0m1BJ1pYND6ql9e6yaD/byeD0hbT1eujYjtbFVvhsGXgM31XXCg7hf+
OOs/GJlc5zwk2PzS2M5WtbxDbG8e9eFdxM6A2HqG3jaD3TfVxqcY5UmLgWHB
+KrI3m971Js4/w1Ze7Pq7bqcudboPAZ+j/z9lOVFP697C2OrgfJNPt7y3t0L
PtHvtwfzB7LWp9Vz9eY5wbfqgYPQaYdOJ+TtvSZ3BKuZawV/FKz0+FQcql+o
9qp3dfJYUoypV6mPDER2OGvvAL3BVAf28a0rGXvDqJ7Uieydo3fNsazlqerb
dXTui6x+z2Wd3u6bely+v9vzIntz7oVfQv8PPxPVxnGRxaHieVCw/jaVNcqC
9eTC2HJEcTELfiNrb33V8LHe3yfqfRjbm0nvoqGxxZDiamRsMaQc7+dvV72x
68T2jtI7s29s56jzXOxxq/5e5W/yweCd3kd1L91iq33KfeWLaszY2PJL+TQK
fs17jfqI+pT+6+R4vdX7tgT5/wfTlwQ=
            "]], 
           Polygon[CompressedData["
1:eJw1mHnQV2UVxy/vj/1elvfCD174XfaXHUH2HUQQWWSRJVBkVUBkd2nMZlpM
MWpq2qa0qWyabKppKq2cmiYT91Ijc0MB2QWRfZFNoO+n7+mPM/c5z3n25zzn
+z2307L1s9ZVJUkyp06S1NV3fyVJ/pImySFVpnmS1BRJUpUlSR3JVdXvkP1X
+h6RPZe9ruz7pe+T7JFcqE6SD2T7vsr/UNv2sn9T5XqlJBmv9nUk+2T/rup+
IHlXbX6h7xOSt1W+We3Haa7rJbNUfl11j8n2Q8lPJB9If0rfJyU7Va7VeGc0
3qvSP5FeJX1/lfvQt6P0DpJS4fU1KyfJMdn/pvIx2WexB62tu+YbpTafl/6A
5F6V75O0k9ST7ZL69Ff9MklZ7RepbqVsn5FeLb2Q3lv6axrzpxr7ccmrKv9T
8iOVd6l/3dxnwtkcRNdamqjuI5V/prqtst0gvYHGa6Hx+mi8/zAGZyn5t8pt
VHdB5YuSJNq00bdhyX3rSW8qvYkkldRX3Yca/xtq/7z6v1DxWXPmv5c0Vfsm
kq5aS7ey971B/XpovAnSV6h/Z5Xnqm5R4bPpUHIb2p7SeC9qnOOao4ZzlhxQ
+euq2yLbRcnb3I3qusr2XMU22pyRrzys8mbJduknpf+94rWy5pLmT8JfNqnu
Icl06anmH675J2v+z0lvJf0O6Wulr5Vekb5U+mrORmPUSFKVM8kg2QdKOhY+
n4a574I7eVlzN1D9AZXPq66XbK9U7HuPhb9uVF2h8Veq721qe62kg8ol1Y3N
3aenpH7hsZpLjqrfFY03OPcZc9Y9Vd+rsA/hS4slq1TuImmsciNJp8J7Ym/L
JetUvltjtNNc86SPl36n9DbSh0ifIL0/Y9BfdTfKNlb6VzX/I5IZsWbW3pX1
ah3DpPfI7P9DVL6BMVRuzp2r/1Lp86XfIrk9zu9T7eWwxmssfWHhMRnrOsln
Zb9P8iXJlyUbZFujvt003riy11uj8qzwp1XS20ofJX0S85ftd5tV/7XcYzL2
gyp/JXf7NuGPS3h/kqkqt1DdrbLNlz5Z+hTWrPJcxlR5omSeytMlo1UeI5mp
crfcvvku70n67eFPk2SfLf0W6XnJYzAWPofvjZBM5exkP6H+b6r/JfnKSGJc
yffHu2qb+23wRrbJPlt6k5LXyFpZM3PMjb3Myd0GG/c1J/ZDn5s5j9y+hs8N
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
lYk=
            "]], 
           Polygon[CompressedData["
1:eJw1lmdsV2UUh29baKGDthcubfnfthQ6GAVKWV1QaGUVUIoDtUBpGWUWFeNI
NMZo0BDjiPrJGDWaGPcHJw624mLJkqHgYG9aoKzi88t7/PAkv3vOeed933Pe
nMZl05qjPc9bAR1hcuh5VYmeNwYqYUjgeXOx1aNnwQwoC1zcaPRQdL3vebNh
JsyAJrgLXz0xY+F29B1QDIOI7wNZ6J6QDUXEVMJUdInGo/08GIgegK0C30gY
BTXYJ0Ihvr74RmNLgs7oeOgOefgS4LMEz/sCPoeDEc9LIS4Vvw9nsEWI2Y/9
Y/RH8B7EY9uE7VV0DDqOsTrBBmzPYWtNZZ/4joUW9AVYi28lPo/4NMa4ju6J
HkVMpe9s7dhuwDXIxrfO2pyjfTQxMRCN/SVsr8DL8D0xqbRtRWfiKyemAhLR
X2L7C//f8A8chSNwDL7Fl0TMONqWsNbBgfsv+j+XGO8irLf1ROFr5/sGdMH/
LrbV+LKwX0afhwvQlb6Ghe5/6b/lQ39i+kEvdC701ljEbKP9Jtqk4tuO/g3a
6P8yrLG9vZnq9lB7uQPb29jiiN+Kfgsdi07ElwQJEA/dfbfuf4k5DKvR38E3
tl4ffkGf1b7CZWL2wu+wT/PQOoi5ztjXYIuN1Zl+c7En67zrTEMf1rHL5tUJ
3270HqjDPhl/A22WQjOk4N9A3Bn8Z+EcDMc2gbgamKjzT7v5xE5DL4KcGM97
jO8exB3XGDrDEA85EKf91N6ie0MhdMXWDXpAAb5GbA0wB2bavXycPnvTdx3f
92osW1uKtVUfBcTnQS7k2xkpIqYUpqPvgbvt/i6Ceei50Ki7qH+OLR2dBoHO
AranGCefcZfwvVj3MnD3dyD6Bdb3PGTR7jh7swr9NayFLoE745fQF6EFQmzZ
2KJoGw2dbC9yoAM6FjpCZuhySSZ6AHogDIJqbMuwPYB+hnk9C4/Aw/C073zL
8T2JzmPOTXzPh4f4fkL7ha2B79lwH9/nmfM65rUefrRznYU9E/rAXmztxHQP
nL6Gvg43Iu7+Kw9M8N08levSlRMg2c7NhYjdf9iMfh1bR3yt6Ba4GHE5QPty
lXN7BX7C9hq2Djp/6svmqXuXoxzBOMfQR+EwZND2iu4Ceg/sggBb58Dd+Z0R
10eK3cc3sL0J79j5Tw5dHlA+OG25U2f3BPoUnJSddrHEHUQfgiOQTkwUNg+i
4U9saXZXf0Vvg61wibY3I66d2v9hcT//v87A5QDlgjZsO7HtgO12p/vTd8j+
RiDD7ofu6q3oKTAJRignw0L9B9Ui3ZHQ/bd99HMA9tu/PACb0VvgfasLykXK
STrDa/Q/fHcmY3Qn6SeiOcAJ8+tsn0SfsrVp7f1pMwJK4DbNT3UPbqGPYcQX
QwV6FIyE8aGb8wL0UnQzLLN7OUcxgTvXOt8LsDXBQvNVWO1WbihHLyfmQaut
qrGP+q5f7YFqz4vM7wP4EH5gvoPxF8FI361R903zK9dcYThMwLYCfwF3pllz
hCpiptia6vAthiW+q8mfWq1VzT0UcbVVNXYj+hPdLd+1HUfbsVBt+1KDbSJM
sneH3iXVxFYpp/runaD8oly8UfNX/bS7pRqVo/cH/iEwFALopn9v9Vo1eQz9
jPZdncvTuVG/9s4oxVYG5VpX6NauPRhsbxrlTr15xuj9pBwUurb9sBWqVtpb
pYw+S32X35Tje6kd+k6YbrVF57TN6lU3dKHmobwOvaDYdzXjtNVB1fsM5V/9
B9/VnvH0U0t/0/T+Ct2b4SvLu6ushg63daqOj1AdCF3db8N/Fa6Aj+1qxN1R
3dXdljdqGWcqzPLdWKpv49HjoK/tt94CeoOUaf+0LqszKxXDeanl+379Z2z/
AZ7xPmk=
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0E0ug1EYQOG3/dpqq02khkwkDNsRasaw9VN0ZmoBKoqgqrUETdgICRsh
YSMNE54vBifn5ObmvT9Lx73uSSYijtBIIjb5nT/Q0lM+5Go1ooIDPctl7OsS
F9HRBc5jT+c4wa7OcgY7kQ6K2KbfSkSb53IRW/zjnG809Rd/oqHf+BUr+okf
sajPuY953U3viLLe4PQ9Z+Zn031sKS74Eo6LK75GXt/wAAV9y0PM6DseoajH
fI+S7hhW4x6fYkE/8ATL+plfUNervIZ1XU/+//cPE9QgQA==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0E1KQmEYhuEvcKpkmGXWoAJXEdgazEqNArVhPyMbplBQwxqmZipqtY6C
2kjYKsLrkIOb6+Ec+AbvZu2ycLEQQihrPRbCAz/4qSf7h0O+x0N408B+5UR9
e8yRXuxh9F89ux9907Pdi1TX7rLDDtv88/4jfznVvf3NLzXtCce6sm95o3O7
xqpO7V3mdWTnWGDC+3tcZJFJLmnfTnFZB3aaKzq0V5lRyV5jNj6/CzdUsXe8
X+cxT3RmN9lSwx5E99K1vcVt3dnZ2P99Z3LoK5E=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0L0uA1AcxuG/oUMlRBM3YJWwokp8TiQam9WuDTeiCXdAfVRJW62PgbFG
EiGMjBTFDXgawy/PO5ycnJyB1fxyrisiVtSdiHhhlTW92ff85XxvxJx+7FnO
6Nue5pTa9iQn9GVnOK5PO80xfdijbHGE72y5/5WPfNCzfcaG7uxtbunG3uC6
ru0slzrn7GEOqWz3c4elnohdllnkMU+0Z1dY1b5d46kO7DobOuy8gecq2Re8
1JE96P46F7ioK3uNOTXtTRZ0a/cxpSc7mfj/3z8TPTbi
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Esuw1EUgPFD8u+whm3CQIcMdeTReka00aIYSCWkC2AFJGyEhI0IO6Be
UY89oPX2E4Mv33cH99zck2ts17a6ImINnSRiyOEgFXGIUX3CM/yUjnjEtH7g
e0zpFt9hUt/yDSb0NV9hXF9yE0V9wQU+57G/O+bn+YxPMaiP+Qg5vc97yOpN
3kCPLnIBKd3Hvfjyh25+5lnzX3iOX7nEZbT1PFfQ0VVewJte5CW86xov40Ov
8Co+ddb8xJvDPIK0rvM6MnqHd9Gvv+3zBwO6nfzv9xfZ6TFE
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0E0uA3Ecx+GfzQgLztAVCdegWtqFBbEiVkRjtF5CWyuWWm1xDuEUziHV
eGvpDTwTi0+e7yST/7zkdtP1w4mI2NIgibhy0ZqMaOvGfuQDL2cjmrq3G6zr
zr7guXr2GU/VtU94rI5dY1W39hHbTNnii/Ov+cwnNeweu6pl9zPVvl1mSTv2
Ihe0aU9zSmX71zcs8XUmYpl95vnGgVbsd36oYH/yS0X7m0Ot2iP+aC07k2OV
7MRzNjjHeW3bBRa1Zx+womp2nncZqp49P/n/v39yBTOe
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0LsuA2AYgOGvUyUOLaHU5io04SpsbVKDC9ALIE5xPqzO1W6MLBIdGdnU
QhRFr0Cio6cxvHnfP/nz/YexmdLUbCIi8qgnYTHXFTGPV13mFmfTESP41sOc
wZce4kF86gHuR1OnOYUP3ce9eNc9/Mbd3OBr85+4yhU86CVexJ2e5iJqepIn
cKVHOYsL3XbvX1R0g/d5IRVx0JnFh7zMKzjSq7yGY73OGzjRm7yFU73NOyjr
Xd7Dmf4x/7zzbmdncKnHOYcbnecCbvWzvS+414/J///9A6J4M/o=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Msug1EUQOHdkvi1EwkjaUXVX62B++URKmFkZmpWiXoQ4Skk7uL6AIxI
PIUEdTdk5pMOVtYanOyzzymtbiw3MxGxgpskIs1GNLoj1jCmN3mer3oiLjGn
L/gcs/qMTzGjT/gY0/qIDzGlD3gfk3qPJ3iXx3nH/Apv8xaKusnr6NNLvIi8
HuUasjrhLvxa/snej/jW9/zM/ea3uMAvXOQBvOpBLuFND3EZ73qYU3zoCo/g
U1e5hi/9YP4Pd7i7Exm7pP9vQE7XeQG9+tbZOxT0ddL+3z/ByStf
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0DsvA1AchvE/W02kEtZ+iAp1j2sbWmrQRidhVBsREvfL7IswKQ11KbuE
L0LC7NcYnjxPcnJO3pzU6max2hYRZVwnIrbaI5Y7IkrY1zt8wYtdEQs41wXO
40zP8xxOdY6zONGzPINjPc1TONKTfMgTfMCX3t/mPd5FVVd4Bes6wwOo6F7u
wZL+tfUHOf3JHxjXde7nm073+JYzfMd1DOp7fsCQbvAjhvUTP2NEv3ATo/qV
3zCm372f5S/+RlEnbepubdZp7sNaa4PzGjb0VeL/f/8ApZouuA==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Lsuw3EYx+G3TRjayRUg3IgmegENos6H6MgNuAHnMhIWlRjYGNuEgZHW
cVNaxKnX4Ek6fPJ8k3/y5pd/79xSbjEREXkdpCKukhED6YiMbux5PrPVFfGn
J/uXP3q0v/mlB/uTH7q339nUnd3gm2r2K6us85bL7l+zwAVV7CwHdW73s0+n
dic7VLKb3trQnn3JC+3Yx1xhzv1VDnGNwxzRuj3KvDbsMY5r057gpLbsKU6r
aM9wVtt2xf1dvrCuQzvhTUmd2N3s0Zld8v1IZXs/1f6//+POOdc=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Lsuw3EYx+FXhaVaaRdG1TpNJNyIw2I1GrgB6hRaHUhchYQbIWF3Powq
qaqzVjxJh0+eb/7DL2/+uYXlmaWOiJhXORnR1xkx3hMxoQF7mmOsZCN2NWqX
WdKIvcNtDdtb3NSQvcF1Few1FpW3VznIFea46P1+znFWvfYUJ9VtZ5lRKxHx
4r6a3uxznqlqH/NIj/YBL1jLRFyyziu+sqFr+50furE/+aVb+5s/urN/2dS9
3eKfHuxD7z/xhKdq2FU+q2mn3JpWl9v3fNtX2i4l2//3H8mlOO4=
          "]]}, {
         Line[{2, 812, 11, 825, 826, 20, 851, 852, 29, 885, 886, 38, 919, 920,
           47, 953, 954, 56, 987, 988, 65, 1019, 74}], 
         Line[{3186, 810, 3203, 5453, 4749, 5454, 3221, 5476, 4757, 5475, 
          3239, 5502, 4765, 5503, 3256, 5528, 4774, 5527, 3271, 5551, 4783, 
          5552, 3288, 5581, 4794, 5580, 3307, 5606, 3305, 3327}], 
         Line[{3188, 811, 3204, 829, 5456, 3222, 5479, 4758, 5480, 3240, 5506,
           4768, 5505, 3257, 5530, 4777, 5531, 3272, 5556, 4786, 5555, 3289, 
          5583, 4797, 5584, 3308, 5608, 3309, 3328}], 
         Line[{3190, 4747, 5449, 3206, 4752, 5459, 5460, 3224, 5487, 4760, 
          5485, 3242, 5513, 4770, 5511, 3259, 933, 5536, 3274, 5561, 4789, 
          5564, 3291, 5591, 4800, 5589, 3311, 5614, 3315, 3330}], 
         Line[{3193, 4748, 5451, 3209, 4754, 5469, 5471, 3227, 5498, 4763, 
          5496, 3245, 5519, 4772, 5524, 3261, 4781, 5545, 5547, 3277, 5576, 
          4792, 5571, 3293, 5598, 4802, 5603, 3313, 5620, 3321, 3332}], 
         Line[{3195, 3202, 5455, 3211, 3220, 5477, 5478, 3230, 5473, 4766, 
          5504, 3248, 5500, 4775, 5529, 3263, 5526, 4785, 5554, 3279, 5549, 
          4795, 5582, 3296, 5607, 4804, 5579, 3317, 5605, 4811, 3334}], 
         Line[{3197, 3207, 5458, 3214, 5484, 4759, 5483, 3233, 5510, 4769, 
          5509, 3250, 5533, 4778, 5535, 3266, 5560, 4787, 5559, 3282, 5586, 
          4798, 5588, 3299, 5610, 4805, 5612, 3319, 5625, 4813, 3337}], 
         Line[{3199, 3212, 5463, 3216, 3231, 5490, 5492, 3235, 903, 5516, 
          3252, 5541, 4780, 5540, 3268, 3280, 5566, 5568, 3284, 5596, 4801, 
          5595, 3302, 5616, 4807, 5618, 3323, 5627, 4814, 3339}], 
         Line[{3201, 5446, 4756, 3219, 3236, 5464, 5466, 3238, 5493, 4773, 
          5522, 3255, 945, 5517, 3270, 5542, 4793, 5574, 3287, 1013, 5575, 
          3304, 5602, 4809, 5623, 3326, 5629, 4816, 3341}], 
         Line[{3329, 3314, 5613, 3310, 3294, 5592, 5590, 3290, 5563, 5562, 
          4788, 3273, 934, 5537, 3258, 3246, 5514, 5512, 3241, 3228, 5488, 
          5486, 3223, 836, 5461, 3205, 3187, 5448, 3189}], 
         Line[{3331, 3320, 5619, 3312, 3300, 5599, 5597, 3292, 5570, 5569, 
          4791, 3276, 5546, 4782, 5543, 3260, 5523, 4771, 5518, 3244, 5495, 
          5494, 4762, 3226, 5470, 4755, 5467, 3208, 3191, 5450, 3192}], 
         Line[{3333, 4810, 5604, 3316, 5578, 5577, 3306, 3295, 4796, 5550, 
          5548, 3278, 5553, 4784, 5525, 3262, 4776, 5501, 5499, 3247, 4767, 
          5474, 5472, 3229, 854, 5452, 3210, 4750, 5447, 3194}], 
         Line[{3336, 4812, 5624, 3318, 4806, 5611, 5609, 3298, 4799, 5587, 
          5585, 3281, 5558, 5557, 3275, 3265, 4779, 5534, 5532, 3249, 5508, 
          5507, 3243, 3232, 5482, 5481, 3225, 3213, 4751, 5457, 3196}], 
         Line[{3338, 5626, 3335, 3322, 4808, 5617, 5615, 3301, 5594, 5593, 
          3297, 3283, 5567, 4790, 5565, 3267, 5539, 5538, 3264, 3251, 904, 
          5515, 3234, 5491, 4761, 5489, 3215, 4753, 5462, 3198}], 
         Line[{3340, 4815, 5628, 3325, 5622, 5621, 3324, 3303, 4803, 5601, 
          5600, 3286, 5573, 5572, 3285, 3269, 946, 5544, 3254, 5521, 5520, 
          3253, 3237, 5465, 4764, 5497, 3218, 5468, 3217, 3200}], 
         Line[{83, 1050, 92, 1063, 1064, 101, 1089, 1090, 110, 1123, 1124, 
          119, 1157, 1158, 128, 1191, 1192, 137, 1225, 1226, 146, 1257, 155}], 
         Line[{3342, 1048, 3359, 5637, 4819, 5638, 3377, 5660, 4827, 5659, 
          3395, 5686, 4835, 5687, 3412, 5712, 4844, 5711, 3427, 5735, 4853, 
          5736, 3444, 5765, 4864, 5764, 3463, 5790, 3461, 3483}], 
         Line[{3344, 1049, 3360, 1067, 5640, 3378, 5663, 4828, 5664, 3396, 
          5690, 4838, 5689, 3413, 5714, 4847, 5715, 3428, 5740, 4856, 5739, 
          3445, 5767, 4867, 5768, 3464, 5792, 3465, 3484}], 
         Line[{3346, 4817, 5633, 3362, 4822, 5643, 5644, 3380, 5671, 4830, 
          5669, 3398, 5697, 4840, 5695, 3415, 1171, 5720, 3430, 5745, 4859, 
          5748, 3447, 5775, 4870, 5773, 3467, 5798, 3471, 3486}], 
         Line[{3349, 4818, 5635, 3365, 4824, 5653, 5655, 3383, 5682, 4833, 
          5680, 3401, 5703, 4842, 5708, 3417, 4851, 5729, 5731, 3433, 5760, 
          4862, 5755, 3449, 5782, 4872, 5787, 3469, 5804, 3477, 3488}], 
         Line[{3351, 3358, 5639, 3367, 3376, 5661, 5662, 3386, 5657, 4836, 
          5688, 3404, 5684, 4845, 5713, 3419, 5710, 4855, 5738, 3435, 5733, 
          4865, 5766, 3452, 5791, 4874, 5763, 3473, 5789, 4881, 3490}], 
         Line[{3353, 3363, 5642, 3370, 5668, 4829, 5667, 3389, 5694, 4839, 
          5693, 3406, 5717, 4848, 5719, 3422, 5744, 4857, 5743, 3438, 5770, 
          4868, 5772, 3455, 5794, 4875, 5796, 3475, 5809, 4883, 3493}], 
         Line[{3355, 3368, 5647, 3372, 3387, 5674, 5676, 3391, 1141, 5700, 
          3408, 5725, 4850, 5724, 3424, 3436, 5750, 5752, 3440, 5780, 4871, 
          5779, 3458, 5800, 4877, 5802, 3479, 5811, 4884, 3495}], 
         Line[{3357, 5630, 4826, 3375, 3392, 5648, 5650, 3394, 5677, 4843, 
          5706, 3411, 1183, 5701, 3426, 5726, 4863, 5758, 3443, 1251, 5759, 
          3460, 5786, 4879, 5807, 3482, 5813, 4886, 3497}], 
         Line[{3485, 3470, 5797, 3466, 3450, 5776, 5774, 3446, 5747, 5746, 
          4858, 3429, 1172, 5721, 3414, 3402, 5698, 5696, 3397, 3384, 5672, 
          5670, 3379, 1074, 5645, 3361, 3343, 5632, 3345}], 
         Line[{3487, 3476, 5803, 3468, 3456, 5783, 5781, 3448, 5754, 5753, 
          4861, 3432, 5730, 4852, 5727, 3416, 5707, 4841, 5702, 3400, 5679, 
          5678, 4832, 3382, 5654, 4825, 5651, 3364, 3347, 5634, 3348}], 
         Line[{3489, 4880, 5788, 3472, 5762, 5761, 3462, 3451, 4866, 5734, 
          5732, 3434, 5737, 4854, 5709, 3418, 4846, 5685, 5683, 3403, 4837, 
          5658, 5656, 3385, 1092, 5636, 3366, 4820, 5631, 3350}], 
         Line[{3492, 4882, 5808, 3474, 4876, 5795, 5793, 3454, 4869, 5771, 
          5769, 3437, 5742, 5741, 3431, 3421, 4849, 5718, 5716, 3405, 5692, 
          5691, 3399, 3388, 5666, 5665, 3381, 3369, 4821, 5641, 3352}], 
         Line[{3494, 5810, 3491, 3478, 4878, 5801, 5799, 3457, 5778, 5777, 
          3453, 3439, 5751, 4860, 5749, 3423, 5723, 5722, 3420, 3407, 1142, 
          5699, 3390, 5675, 4831, 5673, 3371, 4823, 5646, 3354}], 
         Line[{3496, 4885, 5812, 3481, 5806, 5805, 3480, 3459, 4873, 5785, 
          5784, 3442, 5757, 5756, 3441, 3425, 1184, 5728, 3410, 5705, 5704, 
          3409, 3393, 5649, 4834, 5681, 3374, 5652, 3373, 3356}], 
         Line[{164, 1288, 173, 1301, 1302, 182, 1327, 1328, 191, 1361, 1362, 
          200, 1395, 1396, 209, 1429, 1430, 218, 1463, 1464, 227, 1495, 236}], 
         Line[{3498, 1286, 3515, 5821, 4889, 5822, 3533, 5844, 4897, 5843, 
          3551, 5870, 4905, 5871, 3568, 5896, 4914, 5895, 3583, 5919, 4923, 
          5920, 3600, 5949, 4934, 5948, 3619, 5974, 3617, 3639}], 
         Line[{3500, 1287, 3516, 1305, 5824, 3534, 5847, 4898, 5848, 3552, 
          5874, 4908, 5873, 3569, 5898, 4917, 5899, 3584, 5924, 4926, 5923, 
          3601, 5951, 4937, 5952, 3620, 5976, 3621, 3640}], 
         Line[{3502, 4887, 5817, 3518, 4892, 5827, 5828, 3536, 5855, 4900, 
          5853, 3554, 5881, 4910, 5879, 3571, 1409, 5904, 3586, 5929, 4929, 
          5932, 3603, 5959, 4940, 5957, 3623, 5982, 3627, 3642}], 
         Line[{3505, 4888, 5819, 3521, 4894, 5837, 5839, 3539, 5866, 4903, 
          5864, 3557, 5887, 4912, 5892, 3573, 4921, 5913, 5915, 3589, 5944, 
          4932, 5939, 3605, 5966, 4942, 5971, 3625, 5988, 3633, 3644}], 
         Line[{3507, 3514, 5823, 3523, 3532, 5845, 5846, 3542, 5841, 4906, 
          5872, 3560, 5868, 4915, 5897, 3575, 5894, 4925, 5922, 3591, 5917, 
          4935, 5950, 3608, 5975, 4944, 5947, 3629, 5973, 4951, 3646}], 
         Line[{3509, 3519, 5826, 3526, 5852, 4899, 5851, 3545, 5878, 4909, 
          5877, 3562, 5901, 4918, 5903, 3578, 5928, 4927, 5927, 3594, 5954, 
          4938, 5956, 3611, 5978, 4945, 5980, 3631, 5993, 4953, 3649}], 
         Line[{3511, 3524, 5831, 3528, 3543, 5858, 5860, 3547, 1379, 5884, 
          3564, 5909, 4920, 5908, 3580, 3592, 5934, 5936, 3596, 5964, 4941, 
          5963, 3614, 5984, 4947, 5986, 3635, 5995, 4954, 3651}], 
         Line[{3513, 5814, 4896, 3531, 3548, 5832, 5834, 3550, 5861, 4913, 
          5890, 3567, 1421, 5885, 3582, 5910, 4933, 5942, 3599, 1489, 5943, 
          3616, 5970, 4949, 5991, 3638, 5997, 4956, 3653}], 
         Line[{3641, 3626, 5981, 3622, 3606, 5960, 5958, 3602, 5931, 5930, 
          4928, 3585, 1410, 5905, 3570, 3558, 5882, 5880, 3553, 3540, 5856, 
          5854, 3535, 1312, 5829, 3517, 3499, 5816, 3501}], 
         Line[{3643, 3632, 5987, 3624, 3612, 5967, 5965, 3604, 5938, 5937, 
          4931, 3588, 5914, 4922, 5911, 3572, 5891, 4911, 5886, 3556, 5863, 
          5862, 4902, 3538, 5838, 4895, 5835, 3520, 3503, 5818, 3504}], 
         Line[{3645, 4950, 5972, 3628, 5946, 5945, 3618, 3607, 4936, 5918, 
          5916, 3590, 5921, 4924, 5893, 3574, 4916, 5869, 5867, 3559, 4907, 
          5842, 5840, 3541, 1330, 5820, 3522, 4890, 5815, 3506}], 
         Line[{3648, 4952, 5992, 3630, 4946, 5979, 5977, 3610, 4939, 5955, 
          5953, 3593, 5926, 5925, 3587, 3577, 4919, 5902, 5900, 3561, 5876, 
          5875, 3555, 3544, 5850, 5849, 3537, 3525, 4891, 5825, 3508}], 
         Line[{3650, 5994, 3647, 3634, 4948, 5985, 5983, 3613, 5962, 5961, 
          3609, 3595, 5935, 4930, 5933, 3579, 5907, 5906, 3576, 3563, 1380, 
          5883, 3546, 5859, 4901, 5857, 3527, 4893, 5830, 3510}], 
         Line[{3652, 4955, 5996, 3637, 5990, 5989, 3636, 3615, 4943, 5969, 
          5968, 3598, 5941, 5940, 3597, 3581, 1422, 5912, 3566, 5889, 5888, 
          3565, 3549, 5833, 4904, 5865, 3530, 5836, 3529, 3512}], 
         Line[{245, 1526, 254, 1539, 1540, 263, 1565, 1566, 272, 1599, 1600, 
          281, 1633, 1634, 290, 1667, 1668, 299, 1701, 1702, 308, 1733, 317}], 
         Line[{3654, 1524, 3671, 6005, 4959, 6006, 3689, 6028, 4967, 6027, 
          3707, 6054, 4975, 6055, 3724, 6080, 4984, 6079, 3739, 6103, 4993, 
          6104, 3756, 6133, 5004, 6132, 3775, 6158, 3773, 3795}], 
         Line[{3656, 1525, 3672, 1543, 6008, 3690, 6031, 4968, 6032, 3708, 
          6058, 4978, 6057, 3725, 6082, 4987, 6083, 3740, 6108, 4996, 6107, 
          3757, 6135, 5007, 6136, 3776, 6160, 3777, 3796}], 
         Line[{3658, 4957, 6001, 3674, 4962, 6011, 6012, 3692, 6039, 4970, 
          6037, 3710, 6065, 4980, 6063, 3727, 1647, 6088, 3742, 6113, 4999, 
          6116, 3759, 6143, 5010, 6141, 3779, 6166, 3783, 3798}], 
         Line[{3661, 4958, 6003, 3677, 4964, 6021, 6023, 3695, 6050, 4973, 
          6048, 3713, 6071, 4982, 6076, 3729, 4991, 6097, 6099, 3745, 6128, 
          5002, 6123, 3761, 6150, 5012, 6155, 3781, 6172, 3789, 3800}], 
         Line[{3663, 3670, 6007, 3679, 3688, 6029, 6030, 3698, 6025, 4976, 
          6056, 3716, 6052, 4985, 6081, 3731, 6078, 4995, 6106, 3747, 6101, 
          5005, 6134, 3764, 6159, 5014, 6131, 3785, 6157, 5021, 3802}], 
         Line[{3665, 3675, 6010, 3682, 6036, 4969, 6035, 3701, 6062, 4979, 
          6061, 3718, 6085, 4988, 6087, 3734, 6112, 4997, 6111, 3750, 6138, 
          5008, 6140, 3767, 6162, 5015, 6164, 3787, 6177, 5023, 3805}], 
         Line[{3667, 3680, 6015, 3684, 3699, 6042, 6044, 3703, 1617, 6068, 
          3720, 6093, 4990, 6092, 3736, 3748, 6118, 6120, 3752, 6148, 5011, 
          6147, 3770, 6168, 5017, 6170, 3791, 6179, 5024, 3807}], 
         Line[{3669, 5998, 4966, 3687, 3704, 6016, 6018, 3706, 6045, 4983, 
          6074, 3723, 1659, 6069, 3738, 6094, 5003, 6126, 3755, 1727, 6127, 
          3772, 6154, 5019, 6175, 3794, 6181, 5026, 3809}], 
         Line[{3797, 3782, 6165, 3778, 3762, 6144, 6142, 3758, 6115, 6114, 
          4998, 3741, 1648, 6089, 3726, 3714, 6066, 6064, 3709, 3696, 6040, 
          6038, 3691, 1550, 6013, 3673, 3655, 6000, 3657}], 
         Line[{3799, 3788, 6171, 3780, 3768, 6151, 6149, 3760, 6122, 6121, 
          5001, 3744, 6098, 4992, 6095, 3728, 6075, 4981, 6070, 3712, 6047, 
          6046, 4972, 3694, 6022, 4965, 6019, 3676, 3659, 6002, 3660}], 
         Line[{3801, 5020, 6156, 3784, 6130, 6129, 3774, 3763, 5006, 6102, 
          6100, 3746, 6105, 4994, 6077, 3730, 4986, 6053, 6051, 3715, 4977, 
          6026, 6024, 3697, 1568, 6004, 3678, 4960, 5999, 3662}], 
         Line[{3804, 5022, 6176, 3786, 5016, 6163, 6161, 3766, 5009, 6139, 
          6137, 3749, 6110, 6109, 3743, 3733, 4989, 6086, 6084, 3717, 6060, 
          6059, 3711, 3700, 6034, 6033, 3693, 3681, 4961, 6009, 3664}], 
         Line[{3806, 6178, 3803, 3790, 5018, 6169, 6167, 3769, 6146, 6145, 
          3765, 3751, 6119, 5000, 6117, 3735, 6091, 6090, 3732, 3719, 1618, 
          6067, 3702, 6043, 4971, 6041, 3683, 4963, 6014, 3666}], 
         Line[{3808, 5025, 6180, 3793, 6174, 6173, 3792, 3771, 5013, 6153, 
          6152, 3754, 6125, 6124, 3753, 3737, 1660, 6096, 3722, 6073, 6072, 
          3721, 3705, 6017, 4974, 6049, 3686, 6020, 3685, 3668}], 
         Line[{326, 1764, 335, 1777, 1778, 344, 1803, 1804, 353, 1837, 1838, 
          362, 1871, 1872, 371, 1905, 1906, 380, 1939, 1940, 389, 1971, 398}], 
         Line[{3810, 1762, 3827, 6189, 5029, 6190, 3845, 6212, 5037, 6211, 
          3863, 6238, 5045, 6239, 3880, 6264, 5054, 6263, 3895, 6287, 5063, 
          6288, 3912, 6317, 5074, 6316, 3931, 6342, 3929, 3951}], 
         Line[{3812, 1763, 3828, 1781, 6192, 3846, 6215, 5038, 6216, 3864, 
          6242, 5048, 6241, 3881, 6266, 5057, 6267, 3896, 6292, 5066, 6291, 
          3913, 6319, 5077, 6320, 3932, 6344, 3933, 3952}], 
         Line[{3814, 5027, 6185, 3830, 5032, 6195, 6196, 3848, 6223, 5040, 
          6221, 3866, 6249, 5050, 6247, 3883, 1885, 6272, 3898, 6297, 5069, 
          6300, 3915, 6327, 5080, 6325, 3935, 6350, 3939, 3954}], 
         Line[{3817, 5028, 6187, 3833, 5034, 6205, 6207, 3851, 6234, 5043, 
          6232, 3869, 6255, 5052, 6260, 3885, 5061, 6281, 6283, 3901, 6312, 
          5072, 6307, 3917, 6334, 5082, 6339, 3937, 6356, 3945, 3956}], 
         Line[{3819, 3826, 6191, 3835, 3844, 6213, 6214, 3854, 6209, 5046, 
          6240, 3872, 6236, 5055, 6265, 3887, 6262, 5065, 6290, 3903, 6285, 
          5075, 6318, 3920, 6343, 5084, 6315, 3941, 6341, 5091, 3958}], 
         Line[{3821, 3831, 6194, 3838, 6220, 5039, 6219, 3857, 6246, 5049, 
          6245, 3874, 6269, 5058, 6271, 3890, 6296, 5067, 6295, 3906, 6322, 
          5078, 6324, 3923, 6346, 5085, 6348, 3943, 6361, 5093, 3961}], 
         Line[{3823, 3836, 6199, 3840, 3855, 6226, 6228, 3859, 1855, 6252, 
          3876, 6277, 5060, 6276, 3892, 3904, 6302, 6304, 3908, 6332, 5081, 
          6331, 3926, 6352, 5087, 6354, 3947, 6363, 5094, 3963}], 
         Line[{3825, 6182, 5036, 3843, 3860, 6200, 6202, 3862, 6229, 5053, 
          6258, 3879, 1897, 6253, 3894, 6278, 5073, 6310, 3911, 1965, 6311, 
          3928, 6338, 5089, 6359, 3950, 6365, 5096, 3965}], 
         Line[{3953, 3938, 6349, 3934, 3918, 6328, 6326, 3914, 6299, 6298, 
          5068, 3897, 1886, 6273, 3882, 3870, 6250, 6248, 3865, 3852, 6224, 
          6222, 3847, 1788, 6197, 3829, 3811, 6184, 3813}], 
         Line[{3955, 3944, 6355, 3936, 3924, 6335, 6333, 3916, 6306, 6305, 
          5071, 3900, 6282, 5062, 6279, 3884, 6259, 5051, 6254, 3868, 6231, 
          6230, 5042, 3850, 6206, 5035, 6203, 3832, 3815, 6186, 3816}], 
         Line[{3957, 5090, 6340, 3940, 6314, 6313, 3930, 3919, 5076, 6286, 
          6284, 3902, 6289, 5064, 6261, 3886, 5056, 6237, 6235, 3871, 5047, 
          6210, 6208, 3853, 1806, 6188, 3834, 5030, 6183, 3818}], 
         Line[{3960, 5092, 6360, 3942, 5086, 6347, 6345, 3922, 5079, 6323, 
          6321, 3905, 6294, 6293, 3899, 3889, 5059, 6270, 6268, 3873, 6244, 
          6243, 3867, 3856, 6218, 6217, 3849, 3837, 5031, 6193, 3820}], 
         Line[{3962, 6362, 3959, 3946, 5088, 6353, 6351, 3925, 6330, 6329, 
          3921, 3907, 6303, 5070, 6301, 3891, 6275, 6274, 3888, 3875, 1856, 
          6251, 3858, 6227, 5041, 6225, 3839, 5033, 6198, 3822}], 
         Line[{3964, 5095, 6364, 3949, 6358, 6357, 3948, 3927, 5083, 6337, 
          6336, 3910, 6309, 6308, 3909, 3893, 1898, 6280, 3878, 6257, 6256, 
          3877, 3861, 6201, 5044, 6233, 3842, 6204, 3841, 3824}], 
         Line[{407, 2002, 416, 2015, 2016, 425, 2041, 2042, 434, 2075, 2076, 
          443, 2109, 2110, 452, 2143, 2144, 461, 2177, 2178, 470, 2209, 479}], 
         Line[{3966, 2000, 3983, 6373, 5099, 6374, 4001, 6396, 5107, 6395, 
          4019, 6422, 5115, 6423, 4036, 6448, 5124, 6447, 4051, 6471, 5133, 
          6472, 4068, 6501, 5144, 6500, 4087, 6526, 4085, 4107}], 
         Line[{3968, 2001, 3984, 2019, 6376, 4002, 6399, 5108, 6400, 4020, 
          6426, 5118, 6425, 4037, 6450, 5127, 6451, 4052, 6476, 5136, 6475, 
          4069, 6503, 5147, 6504, 4088, 6528, 4089, 4108}], 
         Line[{3970, 5097, 6369, 3986, 5102, 6379, 6380, 4004, 6407, 5110, 
          6405, 4022, 6433, 5120, 6431, 4039, 2123, 6456, 4054, 6481, 5139, 
          6484, 4071, 6511, 5150, 6509, 4091, 6534, 4095, 4110}], 
         Line[{3973, 5098, 6371, 3989, 5104, 6389, 6391, 4007, 6418, 5113, 
          6416, 4025, 6439, 5122, 6444, 4041, 5131, 6465, 6467, 4057, 6496, 
          5142, 6491, 4073, 6518, 5152, 6523, 4093, 6540, 4101, 4112}], 
         Line[{3975, 3982, 6375, 3991, 4000, 6397, 6398, 4010, 6393, 5116, 
          6424, 4028, 6420, 5125, 6449, 4043, 6446, 5135, 6474, 4059, 6469, 
          5145, 6502, 4076, 6527, 5154, 6499, 4097, 6525, 5161, 4114}], 
         Line[{3977, 3987, 6378, 3994, 6404, 5109, 6403, 4013, 6430, 5119, 
          6429, 4030, 6453, 5128, 6455, 4046, 6480, 5137, 6479, 4062, 6506, 
          5148, 6508, 4079, 6530, 5155, 6532, 4099, 6545, 5163, 4117}], 
         Line[{3979, 3992, 6383, 3996, 4011, 6410, 6412, 4015, 2093, 6436, 
          4032, 6461, 5130, 6460, 4048, 4060, 6486, 6488, 4064, 6516, 5151, 
          6515, 4082, 6536, 5157, 6538, 4103, 6547, 5164, 4119}], 
         Line[{3981, 6366, 5106, 3999, 4016, 6384, 6386, 4018, 6413, 5123, 
          6442, 4035, 2135, 6437, 4050, 6462, 5143, 6494, 4067, 2203, 6495, 
          4084, 6522, 5159, 6543, 4106, 6549, 5166, 4121}], 
         Line[{4109, 4094, 6533, 4090, 4074, 6512, 6510, 4070, 6483, 6482, 
          5138, 4053, 2124, 6457, 4038, 4026, 6434, 6432, 4021, 4008, 6408, 
          6406, 4003, 2026, 6381, 3985, 3967, 6368, 3969}], 
         Line[{4111, 4100, 6539, 4092, 4080, 6519, 6517, 4072, 6490, 6489, 
          5141, 4056, 6466, 5132, 6463, 4040, 6443, 5121, 6438, 4024, 6415, 
          6414, 5112, 4006, 6390, 5105, 6387, 3988, 3971, 6370, 3972}], 
         Line[{4113, 5160, 6524, 4096, 6498, 6497, 4086, 4075, 5146, 6470, 
          6468, 4058, 6473, 5134, 6445, 4042, 5126, 6421, 6419, 4027, 5117, 
          6394, 6392, 4009, 2044, 6372, 3990, 5100, 6367, 3974}], 
         Line[{4116, 5162, 6544, 4098, 5156, 6531, 6529, 4078, 5149, 6507, 
          6505, 4061, 6478, 6477, 4055, 4045, 5129, 6454, 6452, 4029, 6428, 
          6427, 4023, 4012, 6402, 6401, 4005, 3993, 5101, 6377, 3976}], 
         Line[{4118, 6546, 4115, 4102, 5158, 6537, 6535, 4081, 6514, 6513, 
          4077, 4063, 6487, 5140, 6485, 4047, 6459, 6458, 4044, 4031, 2094, 
          6435, 4014, 6411, 5111, 6409, 3995, 5103, 6382, 3978}], 
         Line[{4120, 5165, 6548, 4105, 6542, 6541, 4104, 4083, 5153, 6521, 
          6520, 4066, 6493, 6492, 4065, 4049, 2136, 6464, 4034, 6441, 6440, 
          4033, 4017, 6385, 5114, 6417, 3998, 6388, 3997, 3980}], 
         Line[{488, 2240, 497, 2253, 2254, 506, 2279, 2280, 515, 2313, 2314, 
          524, 2347, 2348, 533, 2381, 2382, 542, 2415, 2416, 551, 2447, 560}], 
         Line[{4122, 2238, 4139, 6557, 5169, 6558, 4157, 6580, 5177, 6579, 
          4175, 6606, 5185, 6607, 4192, 6632, 5194, 6631, 4207, 6655, 5203, 
          6656, 4224, 6685, 5214, 6684, 4243, 6710, 4241, 4263}], 
         Line[{4124, 2239, 4140, 2257, 6560, 4158, 6583, 5178, 6584, 4176, 
          6610, 5188, 6609, 4193, 6634, 5197, 6635, 4208, 6660, 5206, 6659, 
          4225, 6687, 5217, 6688, 4244, 6712, 4245, 4264}], 
         Line[{4126, 5167, 6553, 4142, 5172, 6563, 6564, 4160, 6591, 5180, 
          6589, 4178, 6617, 5190, 6615, 4195, 2361, 6640, 4210, 6665, 5209, 
          6668, 4227, 6695, 5220, 6693, 4247, 6718, 4251, 4266}], 
         Line[{4129, 5168, 6555, 4145, 5174, 6573, 6575, 4163, 6602, 5183, 
          6600, 4181, 6623, 5192, 6628, 4197, 5201, 6649, 6651, 4213, 6680, 
          5212, 6675, 4229, 6702, 5222, 6707, 4249, 6724, 4257, 4268}], 
         Line[{4131, 4138, 6559, 4147, 4156, 6581, 6582, 4166, 6577, 5186, 
          6608, 4184, 6604, 5195, 6633, 4199, 6630, 5205, 6658, 4215, 6653, 
          5215, 6686, 4232, 6711, 5224, 6683, 4253, 6709, 5231, 4270}], 
         Line[{4133, 4143, 6562, 4150, 6588, 5179, 6587, 4169, 6614, 5189, 
          6613, 4186, 6637, 5198, 6639, 4202, 6664, 5207, 6663, 4218, 6690, 
          5218, 6692, 4235, 6714, 5225, 6716, 4255, 6729, 5233, 4273}], 
         Line[{4135, 4148, 6567, 4152, 4167, 6594, 6596, 4171, 2331, 6620, 
          4188, 6645, 5200, 6644, 4204, 4216, 6670, 6672, 4220, 6700, 5221, 
          6699, 4238, 6720, 5227, 6722, 4259, 6731, 5234, 4275}], 
         Line[{4137, 6550, 5176, 4155, 4172, 6568, 6570, 4174, 6597, 5193, 
          6626, 4191, 2373, 6621, 4206, 6646, 5213, 6678, 4223, 2441, 6679, 
          4240, 6706, 5229, 6727, 4262, 6733, 5236, 4277}], 
         Line[{4265, 4250, 6717, 4246, 4230, 6696, 6694, 4226, 6667, 6666, 
          5208, 4209, 2362, 6641, 4194, 4182, 6618, 6616, 4177, 4164, 6592, 
          6590, 4159, 2264, 6565, 4141, 4123, 6552, 4125}], 
         Line[{4267, 4256, 6723, 4248, 4236, 6703, 6701, 4228, 6674, 6673, 
          5211, 4212, 6650, 5202, 6647, 4196, 6627, 5191, 6622, 4180, 6599, 
          6598, 5182, 4162, 6574, 5175, 6571, 4144, 4127, 6554, 4128}], 
         Line[{4269, 5230, 6708, 4252, 6682, 6681, 4242, 4231, 5216, 6654, 
          6652, 4214, 6657, 5204, 6629, 4198, 5196, 6605, 6603, 4183, 5187, 
          6578, 6576, 4165, 2282, 6556, 4146, 5170, 6551, 4130}], 
         Line[{4272, 5232, 6728, 4254, 5226, 6715, 6713, 4234, 5219, 6691, 
          6689, 4217, 6662, 6661, 4211, 4201, 5199, 6638, 6636, 4185, 6612, 
          6611, 4179, 4168, 6586, 6585, 4161, 4149, 5171, 6561, 4132}], 
         Line[{4274, 6730, 4271, 4258, 5228, 6721, 6719, 4237, 6698, 6697, 
          4233, 4219, 6671, 5210, 6669, 4203, 6643, 6642, 4200, 4187, 2332, 
          6619, 4170, 6595, 5181, 6593, 4151, 5173, 6566, 4134}], 
         Line[{4276, 5235, 6732, 4261, 6726, 6725, 4260, 4239, 5223, 6705, 
          6704, 4222, 6677, 6676, 4221, 4205, 2374, 6648, 4190, 6625, 6624, 
          4189, 4173, 6569, 5184, 6601, 4154, 6572, 4153, 4136}], 
         Line[{569, 2478, 578, 2491, 2492, 587, 2517, 2518, 596, 2551, 2552, 
          605, 2585, 2586, 614, 2619, 2620, 623, 2653, 2654, 632, 2685, 641}], 
         Line[{4278, 2476, 4295, 6741, 5239, 6742, 4313, 6764, 5247, 6763, 
          4331, 6790, 5255, 6791, 4348, 6816, 5264, 6815, 4363, 6839, 5273, 
          6840, 4380, 6869, 5284, 6868, 4399, 6894, 4397, 4419}], 
         Line[{4280, 2477, 4296, 2495, 6744, 4314, 6767, 5248, 6768, 4332, 
          6794, 5258, 6793, 4349, 6818, 5267, 6819, 4364, 6844, 5276, 6843, 
          4381, 6871, 5287, 6872, 4400, 6896, 4401, 4420}], 
         Line[{4282, 5237, 6737, 4298, 5242, 6747, 6748, 4316, 6775, 5250, 
          6773, 4334, 6801, 5260, 6799, 4351, 2599, 6824, 4366, 6849, 5279, 
          6852, 4383, 6879, 5290, 6877, 4403, 6902, 4407, 4422}], 
         Line[{4285, 5238, 6739, 4301, 5244, 6757, 6759, 4319, 6786, 5253, 
          6784, 4337, 6807, 5262, 6812, 4353, 5271, 6833, 6835, 4369, 6864, 
          5282, 6859, 4385, 6886, 5292, 6891, 4405, 6908, 4413, 4424}], 
         Line[{4287, 4294, 6743, 4303, 4312, 6765, 6766, 4322, 6761, 5256, 
          6792, 4340, 6788, 5265, 6817, 4355, 6814, 5275, 6842, 4371, 6837, 
          5285, 6870, 4388, 6895, 5294, 6867, 4409, 6893, 5301, 4426}], 
         Line[{4289, 4299, 6746, 4306, 6772, 5249, 6771, 4325, 6798, 5259, 
          6797, 4342, 6821, 5268, 6823, 4358, 6848, 5277, 6847, 4374, 6874, 
          5288, 6876, 4391, 6898, 5295, 6900, 4411, 6913, 5303, 4429}], 
         Line[{4291, 4304, 6751, 4308, 4323, 6778, 6780, 4327, 2569, 6804, 
          4344, 6829, 5270, 6828, 4360, 4372, 6854, 6856, 4376, 6884, 5291, 
          6883, 4394, 6904, 5297, 6906, 4415, 6915, 5304, 4431}], 
         Line[{4293, 6734, 5246, 4311, 4328, 6752, 6754, 4330, 6781, 5263, 
          6810, 4347, 2611, 6805, 4362, 6830, 5283, 6862, 4379, 2679, 6863, 
          4396, 6890, 5299, 6911, 4418, 6917, 5306, 4433}], 
         Line[{4421, 4406, 6901, 4402, 4386, 6880, 6878, 4382, 6851, 6850, 
          5278, 4365, 2600, 6825, 4350, 4338, 6802, 6800, 4333, 4320, 6776, 
          6774, 4315, 2502, 6749, 4297, 4279, 6736, 4281}], 
         Line[{4423, 4412, 6907, 4404, 4392, 6887, 6885, 4384, 6858, 6857, 
          5281, 4368, 6834, 5272, 6831, 4352, 6811, 5261, 6806, 4336, 6783, 
          6782, 5252, 4318, 6758, 5245, 6755, 4300, 4283, 6738, 4284}], 
         Line[{4425, 5300, 6892, 4408, 6866, 6865, 4398, 4387, 5286, 6838, 
          6836, 4370, 6841, 5274, 6813, 4354, 5266, 6789, 6787, 4339, 5257, 
          6762, 6760, 4321, 2520, 6740, 4302, 5240, 6735, 4286}], 
         Line[{4428, 5302, 6912, 4410, 5296, 6899, 6897, 4390, 5289, 6875, 
          6873, 4373, 6846, 6845, 4367, 4357, 5269, 6822, 6820, 4341, 6796, 
          6795, 4335, 4324, 6770, 6769, 4317, 4305, 5241, 6745, 4288}], 
         Line[{4430, 6914, 4427, 4414, 5298, 6905, 6903, 4393, 6882, 6881, 
          4389, 4375, 6855, 5280, 6853, 4359, 6827, 6826, 4356, 4343, 2570, 
          6803, 4326, 6779, 5251, 6777, 4307, 5243, 6750, 4290}], 
         Line[{4432, 5305, 6916, 4417, 6910, 6909, 4416, 4395, 5293, 6889, 
          6888, 4378, 6861, 6860, 4377, 4361, 2612, 6832, 4346, 6809, 6808, 
          4345, 4329, 6753, 5254, 6785, 4310, 6756, 4309, 4292}], 
         Line[{650, 2716, 659, 2729, 2730, 668, 2755, 2756, 677, 2789, 2790, 
          686, 2823, 2824, 694, 2853, 2854, 703, 2887, 2888, 712, 2919, 721}], 
         Line[{4434, 2714, 4451, 6925, 5309, 6926, 4469, 6948, 5317, 6947, 
          4487, 6972, 5325, 6973, 4504, 7000, 5336, 6999, 4520, 6998, 5342, 
          7021, 4537, 7053, 5353, 7052, 4556, 7078, 4554, 4576}], 
         Line[{4436, 2715, 4452, 2733, 6928, 4470, 6951, 5318, 6952, 4488, 
          6976, 5328, 6975, 4505, 7004, 5339, 7005, 4521, 7028, 5345, 7027, 
          4538, 7055, 5356, 7056, 4557, 7080, 4558, 4577}], 
         Line[{4438, 5307, 6921, 4454, 5312, 6931, 6932, 4472, 6959, 5320, 
          6957, 4490, 6983, 5330, 6981, 4507, 2837, 7010, 4523, 7033, 5348, 
          7036, 4540, 7063, 5359, 7061, 4560, 7086, 4564, 4579}], 
         Line[{4441, 5308, 6923, 4457, 5314, 6941, 6943, 4475, 6970, 5323, 
          6968, 4493, 6989, 5332, 6995, 4510, 7022, 5341, 7017, 4526, 7048, 
          5351, 7043, 4542, 7070, 5361, 7075, 4562, 7092, 4570, 4581}], 
         Line[{4443, 4450, 6927, 4459, 4468, 6949, 6950, 4478, 6945, 5326, 
          6974, 4496, 6971, 5334, 6997, 4512, 7024, 5344, 7026, 4528, 7019, 
          5354, 7054, 4545, 7079, 5363, 7051, 4566, 7077, 5370, 4583}], 
         Line[{4445, 4455, 6930, 4462, 6956, 5319, 6955, 4481, 6980, 5329, 
          6979, 4498, 7002, 5337, 7006, 4514, 7032, 5346, 7031, 4531, 7058, 
          5357, 7060, 4548, 7082, 5364, 7084, 4568, 7097, 5372, 4586}], 
         Line[{4447, 4460, 6935, 4464, 4479, 6962, 6964, 4483, 2807, 6986, 
          4500, 7012, 5340, 7009, 4516, 4529, 7038, 7040, 4533, 7068, 5360, 
          7067, 4551, 7088, 5366, 7090, 4572, 7099, 5373, 4588}], 
         Line[{4449, 6918, 5316, 4467, 4484, 6936, 6938, 4486, 6965, 5335, 
          6992, 4503, 2843, 6987, 4519, 7014, 5352, 7046, 4536, 2913, 7047, 
          4553, 7074, 5368, 7095, 4575, 7101, 5375, 4590}], 
         Line[{4578, 4563, 7085, 4559, 4543, 7064, 7062, 4539, 7035, 7034, 
          5347, 4522, 2838, 7011, 4506, 4494, 6984, 6982, 4489, 4476, 6960, 
          6958, 4471, 2740, 6933, 4453, 4435, 6920, 4437}], 
         Line[{4580, 4569, 7091, 4561, 4549, 7071, 7069, 4541, 7042, 7041, 
          5350, 4525, 7016, 7015, 4517, 4509, 6994, 5331, 6988, 4492, 6967, 
          6966, 5322, 4474, 6942, 5315, 6939, 4456, 4439, 6922, 4440}], 
         Line[{4582, 5369, 7076, 4565, 7050, 7049, 4555, 4544, 5355, 7020, 
          7018, 4527, 7025, 5343, 7023, 4511, 6996, 6993, 5333, 4495, 5327, 
          6946, 6944, 4477, 2758, 6924, 4458, 5310, 6919, 4442}], 
         Line[{4585, 5371, 7096, 4567, 5365, 7083, 7081, 4547, 5358, 7059, 
          7057, 4530, 7030, 7029, 4524, 4513, 5338, 7003, 7001, 4497, 6978, 
          6977, 4491, 4480, 6954, 6953, 4473, 4461, 5311, 6929, 4444}], 
         Line[{4587, 7098, 4584, 4571, 5367, 7089, 7087, 4550, 7066, 7065, 
          4546, 4532, 7039, 5349, 7037, 4515, 7008, 7007, 4508, 4499, 2808, 
          6985, 4482, 6963, 5321, 6961, 4463, 5313, 6934, 4446}], 
         Line[{4589, 5374, 7100, 4574, 7094, 7093, 4573, 4552, 5362, 7073, 
          7072, 4535, 7045, 7044, 4534, 4518, 2844, 7013, 4502, 6991, 6990, 
          4501, 4485, 6937, 5324, 6969, 4466, 6940, 4465, 4448}], 
         Line[{730, 2950, 739, 2963, 2964, 748, 2989, 2990, 757, 3023, 3024, 
          766, 3057, 3058, 775, 3091, 3092, 784, 3125, 3126, 793, 3157, 802}], 
         Line[{4591, 2948, 4608, 7109, 5378, 7110, 4626, 7132, 5386, 7131, 
          4644, 7158, 5394, 7159, 4661, 7184, 5403, 7183, 4676, 7207, 5412, 
          7208, 4693, 7237, 5423, 7236, 4712, 7262, 4710, 4732}], 
         Line[{4593, 2949, 4609, 2967, 7112, 4627, 7135, 5387, 7136, 4645, 
          7162, 5397, 7161, 4662, 7186, 5406, 7187, 4677, 7212, 5415, 7211, 
          4694, 7239, 5426, 7240, 4713, 7264, 4714, 4733}], 
         Line[{4595, 5376, 7105, 4611, 5381, 7115, 7116, 4629, 7143, 5389, 
          7141, 4647, 7169, 5399, 7167, 4664, 3071, 7192, 4679, 7217, 5418, 
          7220, 4696, 7247, 5429, 7245, 4716, 7270, 4720, 4735}], 
         Line[{4598, 5377, 7107, 4614, 5383, 7125, 7127, 4632, 7154, 5392, 
          7152, 4650, 7175, 5401, 7180, 4666, 5410, 7201, 7203, 4682, 7232, 
          5421, 7227, 4698, 7254, 5431, 7259, 4718, 7276, 4726, 4737}], 
         Line[{4600, 4607, 7111, 4616, 4625, 7133, 7134, 4635, 7129, 5395, 
          7160, 4653, 7156, 5404, 7185, 4668, 7182, 5414, 7210, 4684, 7205, 
          5424, 7238, 4701, 7263, 5433, 7235, 4722, 7261, 5440, 4739}], 
         Line[{4602, 4612, 7114, 4619, 7140, 5388, 7139, 4638, 7166, 5398, 
          7165, 4655, 7189, 5407, 7191, 4671, 7216, 5416, 7215, 4687, 7242, 
          5427, 7244, 4704, 7266, 5434, 7268, 4724, 7281, 5442, 4742}], 
         Line[{4604, 4617, 7119, 4621, 4636, 7146, 7148, 4640, 3041, 7172, 
          4657, 7197, 5409, 7196, 4673, 4685, 7222, 7224, 4689, 7252, 5430, 
          7251, 4707, 7272, 5436, 7274, 4728, 7283, 5443, 4744}], 
         Line[{4606, 7102, 5385, 4624, 4641, 7120, 7122, 4643, 7149, 5402, 
          7178, 4660, 3083, 7173, 4675, 7198, 5422, 7230, 4692, 3151, 7231, 
          4709, 7258, 5438, 7279, 4731, 7285, 5445, 4746}], 
         Line[{4734, 4719, 7269, 4715, 4699, 7248, 7246, 4695, 7219, 7218, 
          5417, 4678, 3072, 7193, 4663, 4651, 7170, 7168, 4646, 4633, 7144, 
          7142, 4628, 2974, 7117, 4610, 4592, 7104, 4594}], 
         Line[{4736, 4725, 7275, 4717, 4705, 7255, 7253, 4697, 7226, 7225, 
          5420, 4681, 7202, 5411, 7199, 4665, 7179, 5400, 7174, 4649, 7151, 
          7150, 5391, 4631, 7126, 5384, 7123, 4613, 4596, 7106, 4597}], 
         Line[{4738, 5439, 7260, 4721, 7234, 7233, 4711, 4700, 5425, 7206, 
          7204, 4683, 7209, 5413, 7181, 4667, 5405, 7157, 7155, 4652, 5396, 
          7130, 7128, 4634, 2992, 7108, 4615, 5379, 7103, 4599}], 
         Line[{4741, 5441, 7280, 4723, 5435, 7267, 7265, 4703, 5428, 7243, 
          7241, 4686, 7214, 7213, 4680, 4670, 5408, 7190, 7188, 4654, 7164, 
          7163, 4648, 4637, 7138, 7137, 4630, 4618, 5380, 7113, 4601}], 
         Line[{4743, 7282, 4740, 4727, 5437, 7273, 7271, 4706, 7250, 7249, 
          4702, 4688, 7223, 5419, 7221, 4672, 7195, 7194, 4669, 4656, 3042, 
          7171, 4639, 7147, 5390, 7145, 4620, 5382, 7118, 4603}], 
         Line[{4745, 5444, 7284, 4730, 7278, 7277, 4729, 4708, 5432, 7257, 
          7256, 4691, 7229, 7228, 4690, 4674, 3084, 7200, 4659, 7177, 7176, 
          4658, 4642, 7121, 5393, 7153, 4623, 7124, 4622, 4605}]}, {
         Line[{814, 5575, 1014, 5601, 1008, 1006, 5595, 5594, 1000, 5588, 998,
           5587, 992, 5582, 990, 5550, 978, 976, 5571, 5570, 970, 968, 5564, 
          5563, 962, 5555, 960, 954, 950, 5552, 986}], 
         Line[{821, 980, 5574, 5573, 974, 5568, 5567, 972, 966, 964, 5559, 
          5558, 958, 5554, 5553, 956, 944, 5547, 5546, 942, 936, 5536, 934, 
          928, 926, 5531, 920, 5527, 916, 952}], 
         Line[{824, 810, 812, 811, 815, 5448, 816, 5449, 817, 5450, 818, 5451,
           819, 5447, 827, 5455, 828, 5457, 833, 5458, 834, 5462, 839, 5463, 
          840, 5468, 845, 5446, 846}], 
         Line[{18, 3219, 3218, 17, 3216, 3215, 16, 3214, 3213, 15, 3211, 3210,
           14, 3209, 3208, 13, 3206, 3205, 12, 3204, 11, 3203, 10}], 
         Line[{849, 822, 5453, 825, 829, 831, 5461, 835, 5459, 837, 5467, 841,
           5469, 843, 5452, 853, 5477, 855, 5481, 861, 5484, 863, 5489, 869, 
          5490, 871, 5497, 877, 5464, 879}], 
         Line[{880, 5466, 5465, 878, 872, 5492, 5491, 870, 864, 862, 5483, 
          5482, 856, 5478, 854, 844, 5471, 5470, 842, 838, 5460, 836, 832, 
          5456, 830, 826, 823, 5454, 850}], 
         Line[{883, 5476, 847, 851, 857, 5479, 859, 5486, 5487, 865, 867, 
          5494, 873, 5498, 875, 5472, 5473, 887, 889, 5507, 895, 5510, 897, 
          5515, 903, 905, 5520, 911, 5493, 913}], 
         Line[{914, 912, 5522, 5521, 906, 5516, 904, 898, 896, 5509, 5508, 
          890, 5504, 888, 5474, 876, 874, 5496, 5495, 868, 5485, 866, 5488, 
          860, 858, 5480, 852, 5475, 848, 884}], 
         Line[{917, 881, 5502, 885, 5506, 891, 893, 5512, 5513, 899, 901, 
          5518, 5519, 907, 909, 5499, 5500, 921, 923, 5532, 5533, 929, 931, 
          5538, 937, 5541, 939, 5544, 945, 947}], 
         Line[{948, 5517, 946, 940, 938, 5540, 5539, 932, 5535, 930, 5534, 
          924, 5529, 922, 5501, 910, 5524, 5523, 908, 902, 5511, 900, 5514, 
          894, 5505, 892, 886, 882, 5503, 918}], 
         Line[{951, 5528, 915, 919, 925, 5530, 927, 5537, 933, 935, 5543, 941,
           5545, 943, 5525, 5526, 955, 957, 5557, 963, 5560, 965, 5565, 971, 
          5566, 973, 5572, 979, 5542, 820}], 
         Line[{982, 1039, 5623, 5622, 1035, 5618, 1033, 5617, 1029, 5612, 
          1027, 5611, 1023, 1021, 5579, 5578, 1012, 5603, 1010, 5599, 1004, 
          5589, 1002, 5592, 996, 994, 5584, 988, 5580, 984, 1018}], 
         Line[{985, 949, 5551, 953, 5556, 959, 961, 5562, 967, 5561, 969, 
          5569, 975, 5576, 977, 5548, 5549, 989, 991, 5585, 5586, 997, 999, 
          5593, 1005, 5596, 1007, 5600, 1013, 813}], 
         Line[{1015, 1047, 5629, 5628, 1046, 5627, 1045, 5626, 1044, 1043, 
          5625, 5624, 1042, 1041, 5605, 5604, 1037, 1036, 5620, 5619, 1031, 
          1030, 5614, 5613, 1025, 1024, 5608, 1019, 5606, 1016, 1040}], 
         Line[{1017, 5581, 983, 987, 993, 5583, 995, 5590, 5591, 1001, 1003, 
          5597, 5598, 1009, 1011, 5577, 1020, 5607, 1022, 5609, 5610, 1026, 
          1028, 5615, 5616, 1032, 1034, 5621, 1038, 5602, 981}], 
         Line[{1052, 5759, 1252, 5785, 1246, 1244, 5779, 5778, 1238, 5772, 
          1236, 5771, 1230, 5766, 1228, 5734, 1216, 1214, 5755, 5754, 1208, 
          1206, 5748, 5747, 1200, 5739, 1198, 1192, 1188, 5736, 1224}], 
         Line[{1059, 1218, 5758, 5757, 1212, 5752, 5751, 1210, 1204, 1202, 
          5743, 5742, 1196, 5738, 5737, 1194, 1182, 5731, 5730, 1180, 1174, 
          5720, 1172, 1166, 1164, 5715, 1158, 5711, 1154, 1190}], 
         Line[{1062, 1048, 1050, 1049, 1053, 5632, 1054, 5633, 1055, 5634, 
          1056, 5635, 1057, 5631, 1065, 5639, 1066, 5641, 1071, 5642, 1072, 
          5646, 1077, 5647, 1078, 5652, 1083, 5630, 1084}], 
         Line[{99, 3375, 3374, 98, 3372, 3371, 97, 3370, 3369, 96, 3367, 3366,
           95, 3365, 3364, 94, 3362, 3361, 93, 3360, 92, 3359, 91}], 
         Line[{1087, 1060, 5637, 1063, 1067, 1069, 5645, 1073, 5643, 1075, 
          5651, 1079, 5653, 1081, 5636, 1091, 5661, 1093, 5665, 1099, 5668, 
          1101, 5673, 1107, 5674, 1109, 5681, 1115, 5648, 1117}], 
         Line[{1118, 5650, 5649, 1116, 1110, 5676, 5675, 1108, 1102, 1100, 
          5667, 5666, 1094, 5662, 1092, 1082, 5655, 5654, 1080, 1076, 5644, 
          1074, 1070, 5640, 1068, 1064, 1061, 5638, 1088}], 
         Line[{1121, 5660, 1085, 1089, 1095, 5663, 1097, 5670, 5671, 1103, 
          1105, 5678, 1111, 5682, 1113, 5656, 5657, 1125, 1127, 5691, 1133, 
          5694, 1135, 5699, 1141, 1143, 5704, 1149, 5677, 1151}], 
         Line[{1152, 1150, 5706, 5705, 1144, 5700, 1142, 1136, 1134, 5693, 
          5692, 1128, 5688, 1126, 5658, 1114, 1112, 5680, 5679, 1106, 5669, 
          1104, 5672, 1098, 1096, 5664, 1090, 5659, 1086, 1122}], 
         Line[{1155, 1119, 5686, 1123, 5690, 1129, 1131, 5696, 5697, 1137, 
          1139, 5702, 5703, 1145, 1147, 5683, 5684, 1159, 1161, 5716, 5717, 
          1167, 1169, 5722, 1175, 5725, 1177, 5728, 1183, 1185}], 
         Line[{1186, 5701, 1184, 1178, 1176, 5724, 5723, 1170, 5719, 1168, 
          5718, 1162, 5713, 1160, 5685, 1148, 5708, 5707, 1146, 1140, 5695, 
          1138, 5698, 1132, 5689, 1130, 1124, 1120, 5687, 1156}], 
         Line[{1189, 5712, 1153, 1157, 1163, 5714, 1165, 5721, 1171, 1173, 
          5727, 1179, 5729, 1181, 5709, 5710, 1193, 1195, 5741, 1201, 5744, 
          1203, 5749, 1209, 5750, 1211, 5756, 1217, 5726, 1058}], 
         Line[{1220, 1277, 5807, 5806, 1273, 5802, 1271, 5801, 1267, 5796, 
          1265, 5795, 1261, 1259, 5763, 5762, 1250, 5787, 1248, 5783, 1242, 
          5773, 1240, 5776, 1234, 1232, 5768, 1226, 5764, 1222, 1256}], 
         Line[{1223, 1187, 5735, 1191, 5740, 1197, 1199, 5746, 1205, 5745, 
          1207, 5753, 1213, 5760, 1215, 5732, 5733, 1227, 1229, 5769, 5770, 
          1235, 1237, 5777, 1243, 5780, 1245, 5784, 1251, 1051}], 
         Line[{1253, 1285, 5813, 5812, 1284, 5811, 1283, 5810, 1282, 1281, 
          5809, 5808, 1280, 1279, 5789, 5788, 1275, 1274, 5804, 5803, 1269, 
          1268, 5798, 5797, 1263, 1262, 5792, 1257, 5790, 1254, 1278}], 
         Line[{1255, 5765, 1221, 1225, 1231, 5767, 1233, 5774, 5775, 1239, 
          1241, 5781, 5782, 1247, 1249, 5761, 1258, 5791, 1260, 5793, 5794, 
          1264, 1266, 5799, 5800, 1270, 1272, 5805, 1276, 5786, 1219}], 
         Line[{1290, 5943, 1490, 5969, 1484, 1482, 5963, 5962, 1476, 5956, 
          1474, 5955, 1468, 5950, 1466, 5918, 1454, 1452, 5939, 5938, 1446, 
          1444, 5932, 5931, 1438, 5923, 1436, 1430, 1426, 5920, 1462}], 
         Line[{1297, 1456, 5942, 5941, 1450, 5936, 5935, 1448, 1442, 1440, 
          5927, 5926, 1434, 5922, 5921, 1432, 1420, 5915, 5914, 1418, 1412, 
          5904, 1410, 1404, 1402, 5899, 1396, 5895, 1392, 1428}], 
         Line[{1300, 1286, 1288, 1287, 1291, 5816, 1292, 5817, 1293, 5818, 
          1294, 5819, 1295, 5815, 1303, 5823, 1304, 5825, 1309, 5826, 1310, 
          5830, 1315, 5831, 1316, 5836, 1321, 5814, 1322}], 
         Line[{180, 3531, 3530, 179, 3528, 3527, 178, 3526, 3525, 177, 3523, 
          3522, 176, 3521, 3520, 175, 3518, 3517, 174, 3516, 173, 3515, 172}], 
         Line[{1325, 1298, 5821, 1301, 1305, 1307, 5829, 1311, 5827, 1313, 
          5835, 1317, 5837, 1319, 5820, 1329, 5845, 1331, 5849, 1337, 5852, 
          1339, 5857, 1345, 5858, 1347, 5865, 1353, 5832, 1355}], 
         Line[{1356, 5834, 5833, 1354, 1348, 5860, 5859, 1346, 1340, 1338, 
          5851, 5850, 1332, 5846, 1330, 1320, 5839, 5838, 1318, 1314, 5828, 
          1312, 1308, 5824, 1306, 1302, 1299, 5822, 1326}], 
         Line[{1359, 5844, 1323, 1327, 1333, 5847, 1335, 5854, 5855, 1341, 
          1343, 5862, 1349, 5866, 1351, 5840, 5841, 1363, 1365, 5875, 1371, 
          5878, 1373, 5883, 1379, 1381, 5888, 1387, 5861, 1389}], 
         Line[{1390, 1388, 5890, 5889, 1382, 5884, 1380, 1374, 1372, 5877, 
          5876, 1366, 5872, 1364, 5842, 1352, 1350, 5864, 5863, 1344, 5853, 
          1342, 5856, 1336, 1334, 5848, 1328, 5843, 1324, 1360}], 
         Line[{1393, 1357, 5870, 1361, 5874, 1367, 1369, 5880, 5881, 1375, 
          1377, 5886, 5887, 1383, 1385, 5867, 5868, 1397, 1399, 5900, 5901, 
          1405, 1407, 5906, 1413, 5909, 1415, 5912, 1421, 1423}], 
         Line[{1424, 5885, 1422, 1416, 1414, 5908, 5907, 1408, 5903, 1406, 
          5902, 1400, 5897, 1398, 5869, 1386, 5892, 5891, 1384, 1378, 5879, 
          1376, 5882, 1370, 5873, 1368, 1362, 1358, 5871, 1394}], 
         Line[{1427, 5896, 1391, 1395, 1401, 5898, 1403, 5905, 1409, 1411, 
          5911, 1417, 5913, 1419, 5893, 5894, 1431, 1433, 5925, 1439, 5928, 
          1441, 5933, 1447, 5934, 1449, 5940, 1455, 5910, 1296}], 
         Line[{1458, 1515, 5991, 5990, 1511, 5986, 1509, 5985, 1505, 5980, 
          1503, 5979, 1499, 1497, 5947, 5946, 1488, 5971, 1486, 5967, 1480, 
          5957, 1478, 5960, 1472, 1470, 5952, 1464, 5948, 1460, 1494}], 
         Line[{1461, 1425, 5919, 1429, 5924, 1435, 1437, 5930, 1443, 5929, 
          1445, 5937, 1451, 5944, 1453, 5916, 5917, 1465, 1467, 5953, 5954, 
          1473, 1475, 5961, 1481, 5964, 1483, 5968, 1489, 1289}], 
         Line[{1491, 1523, 5997, 5996, 1522, 5995, 1521, 5994, 1520, 1519, 
          5993, 5992, 1518, 1517, 5973, 5972, 1513, 1512, 5988, 5987, 1507, 
          1506, 5982, 5981, 1501, 1500, 5976, 1495, 5974, 1492, 1516}], 
         Line[{1493, 5949, 1459, 1463, 1469, 5951, 1471, 5958, 5959, 1477, 
          1479, 5965, 5966, 1485, 1487, 5945, 1496, 5975, 1498, 5977, 5978, 
          1502, 1504, 5983, 5984, 1508, 1510, 5989, 1514, 5970, 1457}], 
         Line[{1528, 6127, 1728, 6153, 1722, 1720, 6147, 6146, 1714, 6140, 
          1712, 6139, 1706, 6134, 1704, 6102, 1692, 1690, 6123, 6122, 1684, 
          1682, 6116, 6115, 1676, 6107, 1674, 1668, 1664, 6104, 1700}], 
         Line[{1535, 1694, 6126, 6125, 1688, 6120, 6119, 1686, 1680, 1678, 
          6111, 6110, 1672, 6106, 6105, 1670, 1658, 6099, 6098, 1656, 1650, 
          6088, 1648, 1642, 1640, 6083, 1634, 6079, 1630, 1666}], 
         Line[{1538, 1524, 1526, 1525, 1529, 6000, 1530, 6001, 1531, 6002, 
          1532, 6003, 1533, 5999, 1541, 6007, 1542, 6009, 1547, 6010, 1548, 
          6014, 1553, 6015, 1554, 6020, 1559, 5998, 1560}], 
         Line[{261, 3687, 3686, 260, 3684, 3683, 259, 3682, 3681, 258, 3679, 
          3678, 257, 3677, 3676, 256, 3674, 3673, 255, 3672, 254, 3671, 253}], 
         Line[{1563, 1536, 6005, 1539, 1543, 1545, 6013, 1549, 6011, 1551, 
          6019, 1555, 6021, 1557, 6004, 1567, 6029, 1569, 6033, 1575, 6036, 
          1577, 6041, 1583, 6042, 1585, 6049, 1591, 6016, 1593}], 
         Line[{1594, 6018, 6017, 1592, 1586, 6044, 6043, 1584, 1578, 1576, 
          6035, 6034, 1570, 6030, 1568, 1558, 6023, 6022, 1556, 1552, 6012, 
          1550, 1546, 6008, 1544, 1540, 1537, 6006, 1564}], 
         Line[{1597, 6028, 1561, 1565, 1571, 6031, 1573, 6038, 6039, 1579, 
          1581, 6046, 1587, 6050, 1589, 6024, 6025, 1601, 1603, 6059, 1609, 
          6062, 1611, 6067, 1617, 1619, 6072, 1625, 6045, 1627}], 
         Line[{1628, 1626, 6074, 6073, 1620, 6068, 1618, 1612, 1610, 6061, 
          6060, 1604, 6056, 1602, 6026, 1590, 1588, 6048, 6047, 1582, 6037, 
          1580, 6040, 1574, 1572, 6032, 1566, 6027, 1562, 1598}], 
         Line[{1631, 1595, 6054, 1599, 6058, 1605, 1607, 6064, 6065, 1613, 
          1615, 6070, 6071, 1621, 1623, 6051, 6052, 1635, 1637, 6084, 6085, 
          1643, 1645, 6090, 1651, 6093, 1653, 6096, 1659, 1661}], 
         Line[{1662, 6069, 1660, 1654, 1652, 6092, 6091, 1646, 6087, 1644, 
          6086, 1638, 6081, 1636, 6053, 1624, 6076, 6075, 1622, 1616, 6063, 
          1614, 6066, 1608, 6057, 1606, 1600, 1596, 6055, 1632}], 
         Line[{1665, 6080, 1629, 1633, 1639, 6082, 1641, 6089, 1647, 1649, 
          6095, 1655, 6097, 1657, 6077, 6078, 1669, 1671, 6109, 1677, 6112, 
          1679, 6117, 1685, 6118, 1687, 6124, 1693, 6094, 1534}], 
         Line[{1696, 1753, 6175, 6174, 1749, 6170, 1747, 6169, 1743, 6164, 
          1741, 6163, 1737, 1735, 6131, 6130, 1726, 6155, 1724, 6151, 1718, 
          6141, 1716, 6144, 1710, 1708, 6136, 1702, 6132, 1698, 1732}], 
         Line[{1699, 1663, 6103, 1667, 6108, 1673, 1675, 6114, 1681, 6113, 
          1683, 6121, 1689, 6128, 1691, 6100, 6101, 1703, 1705, 6137, 6138, 
          1711, 1713, 6145, 1719, 6148, 1721, 6152, 1727, 1527}], 
         Line[{1729, 1761, 6181, 6180, 1760, 6179, 1759, 6178, 1758, 1757, 
          6177, 6176, 1756, 1755, 6157, 6156, 1751, 1750, 6172, 6171, 1745, 
          1744, 6166, 6165, 1739, 1738, 6160, 1733, 6158, 1730, 1754}], 
         Line[{1731, 6133, 1697, 1701, 1707, 6135, 1709, 6142, 6143, 1715, 
          1717, 6149, 6150, 1723, 1725, 6129, 1734, 6159, 1736, 6161, 6162, 
          1740, 1742, 6167, 6168, 1746, 1748, 6173, 1752, 6154, 1695}], 
         Line[{1766, 6311, 1966, 6337, 1960, 1958, 6331, 6330, 1952, 6324, 
          1950, 6323, 1944, 6318, 1942, 6286, 1930, 1928, 6307, 6306, 1922, 
          1920, 6300, 6299, 1914, 6291, 1912, 1906, 1902, 6288, 1938}], 
         Line[{1773, 1932, 6310, 6309, 1926, 6304, 6303, 1924, 1918, 1916, 
          6295, 6294, 1910, 6290, 6289, 1908, 1896, 6283, 6282, 1894, 1888, 
          6272, 1886, 1880, 1878, 6267, 1872, 6263, 1868, 1904}], 
         Line[{1776, 1762, 1764, 1763, 1767, 6184, 1768, 6185, 1769, 6186, 
          1770, 6187, 1771, 6183, 1779, 6191, 1780, 6193, 1785, 6194, 1786, 
          6198, 1791, 6199, 1792, 6204, 1797, 6182, 1798}], 
         Line[{342, 3843, 3842, 341, 3840, 3839, 340, 3838, 3837, 339, 3835, 
          3834, 338, 3833, 3832, 337, 3830, 3829, 336, 3828, 335, 3827, 334}], 
         Line[{1801, 1774, 6189, 1777, 1781, 1783, 6197, 1787, 6195, 1789, 
          6203, 1793, 6205, 1795, 6188, 1805, 6213, 1807, 6217, 1813, 6220, 
          1815, 6225, 1821, 6226, 1823, 6233, 1829, 6200, 1831}], 
         Line[{1832, 6202, 6201, 1830, 1824, 6228, 6227, 1822, 1816, 1814, 
          6219, 6218, 1808, 6214, 1806, 1796, 6207, 6206, 1794, 1790, 6196, 
          1788, 1784, 6192, 1782, 1778, 1775, 6190, 1802}], 
         Line[{1835, 6212, 1799, 1803, 1809, 6215, 1811, 6222, 6223, 1817, 
          1819, 6230, 1825, 6234, 1827, 6208, 6209, 1839, 1841, 6243, 1847, 
          6246, 1849, 6251, 1855, 1857, 6256, 1863, 6229, 1865}], 
         Line[{1866, 1864, 6258, 6257, 1858, 6252, 1856, 1850, 1848, 6245, 
          6244, 1842, 6240, 1840, 6210, 1828, 1826, 6232, 6231, 1820, 6221, 
          1818, 6224, 1812, 1810, 6216, 1804, 6211, 1800, 1836}], 
         Line[{1869, 1833, 6238, 1837, 6242, 1843, 1845, 6248, 6249, 1851, 
          1853, 6254, 6255, 1859, 1861, 6235, 6236, 1873, 1875, 6268, 6269, 
          1881, 1883, 6274, 1889, 6277, 1891, 6280, 1897, 1899}], 
         Line[{1900, 6253, 1898, 1892, 1890, 6276, 6275, 1884, 6271, 1882, 
          6270, 1876, 6265, 1874, 6237, 1862, 6260, 6259, 1860, 1854, 6247, 
          1852, 6250, 1846, 6241, 1844, 1838, 1834, 6239, 1870}], 
         Line[{1903, 6264, 1867, 1871, 1877, 6266, 1879, 6273, 1885, 1887, 
          6279, 1893, 6281, 1895, 6261, 6262, 1907, 1909, 6293, 1915, 6296, 
          1917, 6301, 1923, 6302, 1925, 6308, 1931, 6278, 1772}], 
         Line[{1934, 1991, 6359, 6358, 1987, 6354, 1985, 6353, 1981, 6348, 
          1979, 6347, 1975, 1973, 6315, 6314, 1964, 6339, 1962, 6335, 1956, 
          6325, 1954, 6328, 1948, 1946, 6320, 1940, 6316, 1936, 1970}], 
         Line[{1937, 1901, 6287, 1905, 6292, 1911, 1913, 6298, 1919, 6297, 
          1921, 6305, 1927, 6312, 1929, 6284, 6285, 1941, 1943, 6321, 6322, 
          1949, 1951, 6329, 1957, 6332, 1959, 6336, 1965, 1765}], 
         Line[{1967, 1999, 6365, 6364, 1998, 6363, 1997, 6362, 1996, 1995, 
          6361, 6360, 1994, 1993, 6341, 6340, 1989, 1988, 6356, 6355, 1983, 
          1982, 6350, 6349, 1977, 1976, 6344, 1971, 6342, 1968, 1992}], 
         Line[{1969, 6317, 1935, 1939, 1945, 6319, 1947, 6326, 6327, 1953, 
          1955, 6333, 6334, 1961, 1963, 6313, 1972, 6343, 1974, 6345, 6346, 
          1978, 1980, 6351, 6352, 1984, 1986, 6357, 1990, 6338, 1933}], 
         Line[{2004, 6495, 2204, 6521, 2198, 2196, 6515, 6514, 2190, 6508, 
          2188, 6507, 2182, 6502, 2180, 6470, 2168, 2166, 6491, 6490, 2160, 
          2158, 6484, 6483, 2152, 6475, 2150, 2144, 2140, 6472, 2176}], 
         Line[{2011, 2170, 6494, 6493, 2164, 6488, 6487, 2162, 2156, 2154, 
          6479, 6478, 2148, 6474, 6473, 2146, 2134, 6467, 6466, 2132, 2126, 
          6456, 2124, 2118, 2116, 6451, 2110, 6447, 2106, 2142}], 
         Line[{2014, 2000, 2002, 2001, 2005, 6368, 2006, 6369, 2007, 6370, 
          2008, 6371, 2009, 6367, 2017, 6375, 2018, 6377, 2023, 6378, 2024, 
          6382, 2029, 6383, 2030, 6388, 2035, 6366, 2036}], 
         Line[{423, 3999, 3998, 422, 3996, 3995, 421, 3994, 3993, 420, 3991, 
          3990, 419, 3989, 3988, 418, 3986, 3985, 417, 3984, 416, 3983, 415}], 
         Line[{2039, 2012, 6373, 2015, 2019, 2021, 6381, 2025, 6379, 2027, 
          6387, 2031, 6389, 2033, 6372, 2043, 6397, 2045, 6401, 2051, 6404, 
          2053, 6409, 2059, 6410, 2061, 6417, 2067, 6384, 2069}], 
         Line[{2070, 6386, 6385, 2068, 2062, 6412, 6411, 2060, 2054, 2052, 
          6403, 6402, 2046, 6398, 2044, 2034, 6391, 6390, 2032, 2028, 6380, 
          2026, 2022, 6376, 2020, 2016, 2013, 6374, 2040}], 
         Line[{2073, 6396, 2037, 2041, 2047, 6399, 2049, 6406, 6407, 2055, 
          2057, 6414, 2063, 6418, 2065, 6392, 6393, 2077, 2079, 6427, 2085, 
          6430, 2087, 6435, 2093, 2095, 6440, 2101, 6413, 2103}], 
         Line[{2104, 2102, 6442, 6441, 2096, 6436, 2094, 2088, 2086, 6429, 
          6428, 2080, 6424, 2078, 6394, 2066, 2064, 6416, 6415, 2058, 6405, 
          2056, 6408, 2050, 2048, 6400, 2042, 6395, 2038, 2074}], 
         Line[{2107, 2071, 6422, 2075, 6426, 2081, 2083, 6432, 6433, 2089, 
          2091, 6438, 6439, 2097, 2099, 6419, 6420, 2111, 2113, 6452, 6453, 
          2119, 2121, 6458, 2127, 6461, 2129, 6464, 2135, 2137}], 
         Line[{2138, 6437, 2136, 2130, 2128, 6460, 6459, 2122, 6455, 2120, 
          6454, 2114, 6449, 2112, 6421, 2100, 6444, 6443, 2098, 2092, 6431, 
          2090, 6434, 2084, 6425, 2082, 2076, 2072, 6423, 2108}], 
         Line[{2141, 6448, 2105, 2109, 2115, 6450, 2117, 6457, 2123, 2125, 
          6463, 2131, 6465, 2133, 6445, 6446, 2145, 2147, 6477, 2153, 6480, 
          2155, 6485, 2161, 6486, 2163, 6492, 2169, 6462, 2010}], 
         Line[{2172, 2229, 6543, 6542, 2225, 6538, 2223, 6537, 2219, 6532, 
          2217, 6531, 2213, 2211, 6499, 6498, 2202, 6523, 2200, 6519, 2194, 
          6509, 2192, 6512, 2186, 2184, 6504, 2178, 6500, 2174, 2208}], 
         Line[{2175, 2139, 6471, 2143, 6476, 2149, 2151, 6482, 2157, 6481, 
          2159, 6489, 2165, 6496, 2167, 6468, 6469, 2179, 2181, 6505, 6506, 
          2187, 2189, 6513, 2195, 6516, 2197, 6520, 2203, 2003}], 
         Line[{2205, 2237, 6549, 6548, 2236, 6547, 2235, 6546, 2234, 2233, 
          6545, 6544, 2232, 2231, 6525, 6524, 2227, 2226, 6540, 6539, 2221, 
          2220, 6534, 6533, 2215, 2214, 6528, 2209, 6526, 2206, 2230}], 
         Line[{2207, 6501, 2173, 2177, 2183, 6503, 2185, 6510, 6511, 2191, 
          2193, 6517, 6518, 2199, 2201, 6497, 2210, 6527, 2212, 6529, 6530, 
          2216, 2218, 6535, 6536, 2222, 2224, 6541, 2228, 6522, 2171}], 
         Line[{2242, 6679, 2442, 6705, 2436, 2434, 6699, 6698, 2428, 6692, 
          2426, 6691, 2420, 6686, 2418, 6654, 2406, 2404, 6675, 6674, 2398, 
          2396, 6668, 6667, 2390, 6659, 2388, 2382, 2378, 6656, 2414}], 
         Line[{2249, 2408, 6678, 6677, 2402, 6672, 6671, 2400, 2394, 2392, 
          6663, 6662, 2386, 6658, 6657, 2384, 2372, 6651, 6650, 2370, 2364, 
          6640, 2362, 2356, 2354, 6635, 2348, 6631, 2344, 2380}], 
         Line[{2252, 2238, 2240, 2239, 2243, 6552, 2244, 6553, 2245, 6554, 
          2246, 6555, 2247, 6551, 2255, 6559, 2256, 6561, 2261, 6562, 2262, 
          6566, 2267, 6567, 2268, 6572, 2273, 6550, 2274}], 
         Line[{504, 4155, 4154, 503, 4152, 4151, 502, 4150, 4149, 501, 4147, 
          4146, 500, 4145, 4144, 499, 4142, 4141, 498, 4140, 497, 4139, 496}], 
         Line[{2277, 2250, 6557, 2253, 2257, 2259, 6565, 2263, 6563, 2265, 
          6571, 2269, 6573, 2271, 6556, 2281, 6581, 2283, 6585, 2289, 6588, 
          2291, 6593, 2297, 6594, 2299, 6601, 2305, 6568, 2307}], 
         Line[{2308, 6570, 6569, 2306, 2300, 6596, 6595, 2298, 2292, 2290, 
          6587, 6586, 2284, 6582, 2282, 2272, 6575, 6574, 2270, 2266, 6564, 
          2264, 2260, 6560, 2258, 2254, 2251, 6558, 2278}], 
         Line[{2311, 6580, 2275, 2279, 2285, 6583, 2287, 6590, 6591, 2293, 
          2295, 6598, 2301, 6602, 2303, 6576, 6577, 2315, 2317, 6611, 2323, 
          6614, 2325, 6619, 2331, 2333, 6624, 2339, 6597, 2341}], 
         Line[{2342, 2340, 6626, 6625, 2334, 6620, 2332, 2326, 2324, 6613, 
          6612, 2318, 6608, 2316, 6578, 2304, 2302, 6600, 6599, 2296, 6589, 
          2294, 6592, 2288, 2286, 6584, 2280, 6579, 2276, 2312}], 
         Line[{2345, 2309, 6606, 2313, 6610, 2319, 2321, 6616, 6617, 2327, 
          2329, 6622, 6623, 2335, 2337, 6603, 6604, 2349, 2351, 6636, 6637, 
          2357, 2359, 6642, 2365, 6645, 2367, 6648, 2373, 2375}], 
         Line[{2376, 6621, 2374, 2368, 2366, 6644, 6643, 2360, 6639, 2358, 
          6638, 2352, 6633, 2350, 6605, 2338, 6628, 6627, 2336, 2330, 6615, 
          2328, 6618, 2322, 6609, 2320, 2314, 2310, 6607, 2346}], 
         Line[{2379, 6632, 2343, 2347, 2353, 6634, 2355, 6641, 2361, 2363, 
          6647, 2369, 6649, 2371, 6629, 6630, 2383, 2385, 6661, 2391, 6664, 
          2393, 6669, 2399, 6670, 2401, 6676, 2407, 6646, 2248}], 
         Line[{2410, 2467, 6727, 6726, 2463, 6722, 2461, 6721, 2457, 6716, 
          2455, 6715, 2451, 2449, 6683, 6682, 2440, 6707, 2438, 6703, 2432, 
          6693, 2430, 6696, 2424, 2422, 6688, 2416, 6684, 2412, 2446}], 
         Line[{2413, 2377, 6655, 2381, 6660, 2387, 2389, 6666, 2395, 6665, 
          2397, 6673, 2403, 6680, 2405, 6652, 6653, 2417, 2419, 6689, 6690, 
          2425, 2427, 6697, 2433, 6700, 2435, 6704, 2441, 2241}], 
         Line[{2443, 2475, 6733, 6732, 2474, 6731, 2473, 6730, 2472, 2471, 
          6729, 6728, 2470, 2469, 6709, 6708, 2465, 2464, 6724, 6723, 2459, 
          2458, 6718, 6717, 2453, 2452, 6712, 2447, 6710, 2444, 2468}], 
         Line[{2445, 6685, 2411, 2415, 2421, 6687, 2423, 6694, 6695, 2429, 
          2431, 6701, 6702, 2437, 2439, 6681, 2448, 6711, 2450, 6713, 6714, 
          2454, 2456, 6719, 6720, 2460, 2462, 6725, 2466, 6706, 2409}], 
         Line[{2480, 6863, 2680, 6889, 2674, 2672, 6883, 6882, 2666, 6876, 
          2664, 6875, 2658, 6870, 2656, 6838, 2644, 2642, 6859, 6858, 2636, 
          2634, 6852, 6851, 2628, 6843, 2626, 2620, 2616, 6840, 2652}], 
         Line[{2487, 2646, 6862, 6861, 2640, 6856, 6855, 2638, 2632, 2630, 
          6847, 6846, 2624, 6842, 6841, 2622, 2610, 6835, 6834, 2608, 2602, 
          6824, 2600, 2594, 2592, 6819, 2586, 6815, 2582, 2618}], 
         Line[{2490, 2476, 2478, 2477, 2481, 6736, 2482, 6737, 2483, 6738, 
          2484, 6739, 2485, 6735, 2493, 6743, 2494, 6745, 2499, 6746, 2500, 
          6750, 2505, 6751, 2506, 6756, 2511, 6734, 2512}], 
         Line[{585, 4311, 4310, 584, 4308, 4307, 583, 4306, 4305, 582, 4303, 
          4302, 581, 4301, 4300, 580, 4298, 4297, 579, 4296, 578, 4295, 577}], 
         Line[{2515, 2488, 6741, 2491, 2495, 2497, 6749, 2501, 6747, 2503, 
          6755, 2507, 6757, 2509, 6740, 2519, 6765, 2521, 6769, 2527, 6772, 
          2529, 6777, 2535, 6778, 2537, 6785, 2543, 6752, 2545}], 
         Line[{2546, 6754, 6753, 2544, 2538, 6780, 6779, 2536, 2530, 2528, 
          6771, 6770, 2522, 6766, 2520, 2510, 6759, 6758, 2508, 2504, 6748, 
          2502, 2498, 6744, 2496, 2492, 2489, 6742, 2516}], 
         Line[{2549, 6764, 2513, 2517, 2523, 6767, 2525, 6774, 6775, 2531, 
          2533, 6782, 2539, 6786, 2541, 6760, 6761, 2553, 2555, 6795, 2561, 
          6798, 2563, 6803, 2569, 2571, 6808, 2577, 6781, 2579}], 
         Line[{2580, 2578, 6810, 6809, 2572, 6804, 2570, 2564, 2562, 6797, 
          6796, 2556, 6792, 2554, 6762, 2542, 2540, 6784, 6783, 2534, 6773, 
          2532, 6776, 2526, 2524, 6768, 2518, 6763, 2514, 2550}], 
         Line[{2583, 2547, 6790, 2551, 6794, 2557, 2559, 6800, 6801, 2565, 
          2567, 6806, 6807, 2573, 2575, 6787, 6788, 2587, 2589, 6820, 6821, 
          2595, 2597, 6826, 2603, 6829, 2605, 6832, 2611, 2613}], 
         Line[{2614, 6805, 2612, 2606, 2604, 6828, 6827, 2598, 6823, 2596, 
          6822, 2590, 6817, 2588, 6789, 2576, 6812, 6811, 2574, 2568, 6799, 
          2566, 6802, 2560, 6793, 2558, 2552, 2548, 6791, 2584}], 
         Line[{2617, 6816, 2581, 2585, 2591, 6818, 2593, 6825, 2599, 2601, 
          6831, 2607, 6833, 2609, 6813, 6814, 2621, 2623, 6845, 2629, 6848, 
          2631, 6853, 2637, 6854, 2639, 6860, 2645, 6830, 2486}], 
         Line[{2648, 2705, 6911, 6910, 2701, 6906, 2699, 6905, 2695, 6900, 
          2693, 6899, 2689, 2687, 6867, 6866, 2678, 6891, 2676, 6887, 2670, 
          6877, 2668, 6880, 2662, 2660, 6872, 2654, 6868, 2650, 2684}], 
         Line[{2651, 2615, 6839, 2619, 6844, 2625, 2627, 6850, 2633, 6849, 
          2635, 6857, 2641, 6864, 2643, 6836, 6837, 2655, 2657, 6873, 6874, 
          2663, 2665, 6881, 2671, 6884, 2673, 6888, 2679, 2479}], 
         Line[{2681, 2713, 6917, 6916, 2712, 6915, 2711, 6914, 2710, 2709, 
          6913, 6912, 2708, 2707, 6893, 6892, 2703, 2702, 6908, 6907, 2697, 
          2696, 6902, 6901, 2691, 2690, 6896, 2685, 6894, 2682, 2706}], 
         Line[{2683, 6869, 2649, 2653, 2659, 6871, 2661, 6878, 6879, 2667, 
          2669, 6885, 6886, 2675, 2677, 6865, 2686, 6895, 2688, 6897, 6898, 
          2692, 2694, 6903, 6904, 2698, 2700, 6909, 2704, 6890, 2647}], 
         Line[{2718, 7047, 2914, 7073, 2908, 2906, 7067, 7066, 2900, 7060, 
          2898, 7059, 2892, 7054, 2890, 7020, 2878, 2876, 7043, 7042, 2870, 
          2868, 7036, 7035, 2862, 7027, 2860, 2854, 2850, 7021, 2886}], 
         Line[{2725, 2880, 7046, 7045, 2874, 7040, 7039, 2872, 2866, 2864, 
          7031, 7030, 2858, 7026, 7025, 2856, 2846, 7017, 7016, 2840, 7010, 
          2838, 2832, 2830, 7005, 2824, 6999, 2820, 2852}], 
         Line[{2728, 2714, 2716, 2715, 2719, 6920, 2720, 6921, 2721, 6922, 
          2722, 6923, 2723, 6919, 2731, 6927, 2732, 6929, 2737, 6930, 2738, 
          6934, 2743, 6935, 2744, 6940, 2749, 6918, 2750}], 
         Line[{666, 4467, 4466, 665, 4464, 4463, 664, 4462, 4461, 663, 4459, 
          4458, 662, 4457, 4456, 661, 4454, 4453, 660, 4452, 659, 4451, 658}], 
         Line[{2753, 2726, 6925, 2729, 2733, 2735, 6933, 2739, 6931, 2741, 
          6939, 2745, 6941, 2747, 6924, 2757, 6949, 2759, 6953, 2765, 6956, 
          2767, 6961, 2773, 6962, 2775, 6969, 2781, 6936, 2783}], 
         Line[{2784, 6938, 6937, 2782, 2776, 6964, 6963, 2774, 2768, 2766, 
          6955, 6954, 2760, 6950, 2758, 2748, 6943, 6942, 2746, 2742, 6932, 
          2740, 2736, 6928, 2734, 2730, 2727, 6926, 2754}], 
         Line[{2787, 6948, 2751, 2755, 2761, 6951, 2763, 6958, 6959, 2769, 
          2771, 6966, 2777, 6970, 2779, 6944, 6945, 2791, 2793, 6977, 2799, 
          6980, 2801, 6985, 2807, 2809, 6990, 2815, 6965, 2817}], 
         Line[{2818, 2816, 6992, 6991, 2810, 6986, 2808, 2802, 2800, 6979, 
          6978, 2794, 6974, 2792, 6946, 2780, 2778, 6968, 6967, 2772, 6957, 
          2770, 6960, 2764, 2762, 6952, 2756, 6947, 2752, 2788}], 
         Line[{2821, 2785, 6972, 2789, 6976, 2795, 2797, 6982, 6983, 2803, 
          2805, 6988, 6989, 2811, 6993, 2813, 6971, 2825, 7001, 7002, 2827, 
          2833, 7007, 2835, 7012, 2841, 7013, 2843, 2847}], 
         Line[{2848, 6987, 2844, 2842, 2836, 7009, 7008, 2834, 7006, 2828, 
          7003, 2826, 2814, 6997, 6996, 6995, 6994, 2812, 2806, 6981, 2804, 
          6984, 2798, 6975, 2796, 2790, 2786, 6973, 2822}], 
         Line[{2851, 7000, 2819, 2823, 2829, 7004, 2831, 7011, 2837, 2839, 
          7015, 2845, 7022, 7023, 7024, 2855, 2857, 7029, 2863, 7032, 2865, 
          7037, 2871, 7038, 2873, 7044, 2879, 7014, 2724}], 
         Line[{2882, 2939, 7095, 7094, 2935, 7090, 2933, 7089, 2929, 7084, 
          2927, 7083, 2923, 2921, 7051, 7050, 2912, 7075, 2910, 7071, 2904, 
          7061, 2902, 7064, 2896, 2894, 7056, 2888, 7052, 2884, 2918}], 
         Line[{2885, 2849, 6998, 2853, 7028, 2859, 2861, 7034, 2867, 7033, 
          2869, 7041, 2875, 7048, 2877, 7018, 7019, 2889, 2891, 7057, 7058, 
          2897, 2899, 7065, 2905, 7068, 2907, 7072, 2913, 2717}], 
         Line[{2915, 2947, 7101, 7100, 2946, 7099, 2945, 7098, 2944, 2943, 
          7097, 7096, 2942, 2941, 7077, 7076, 2937, 2936, 7092, 7091, 2931, 
          2930, 7086, 7085, 2925, 2924, 7080, 2919, 7078, 2916, 2940}], 
         Line[{2917, 7053, 2883, 2887, 2893, 7055, 2895, 7062, 7063, 2901, 
          2903, 7069, 7070, 2909, 2911, 7049, 2920, 7079, 2922, 7081, 7082, 
          2926, 2928, 7087, 7088, 2932, 2934, 7093, 2938, 7074, 2881}], 
         Line[{2952, 7231, 3152, 7257, 3146, 3144, 7251, 7250, 3138, 7244, 
          3136, 7243, 3130, 7238, 3128, 7206, 3116, 3114, 7227, 7226, 3108, 
          3106, 7220, 7219, 3100, 7211, 3098, 3092, 3088, 7208, 3124}], 
         Line[{2959, 3118, 7230, 7229, 3112, 7224, 7223, 3110, 3104, 3102, 
          7215, 7214, 3096, 7210, 7209, 3094, 3082, 7203, 7202, 3080, 3074, 
          7192, 3072, 3066, 3064, 7187, 3058, 7183, 3054, 3090}], 
         Line[{2962, 2948, 2950, 2949, 2953, 7104, 2954, 7105, 2955, 7106, 
          2956, 7107, 2957, 7103, 2965, 7111, 2966, 7113, 2971, 7114, 2972, 
          7118, 2977, 7119, 2978, 7124, 2983, 7102, 2984}], 
         Line[{746, 4624, 4623, 745, 4621, 4620, 744, 4619, 4618, 743, 4616, 
          4615, 742, 4614, 4613, 741, 4611, 4610, 740, 4609, 739, 4608, 738}], 
         Line[{2987, 2960, 7109, 2963, 2967, 2969, 7117, 2973, 7115, 2975, 
          7123, 2979, 7125, 2981, 7108, 2991, 7133, 2993, 7137, 2999, 7140, 
          3001, 7145, 3007, 7146, 3009, 7153, 3015, 7120, 3017}], 
         Line[{3018, 7122, 7121, 3016, 3010, 7148, 7147, 3008, 3002, 3000, 
          7139, 7138, 2994, 7134, 2992, 2982, 7127, 7126, 2980, 2976, 7116, 
          2974, 2970, 7112, 2968, 2964, 2961, 7110, 2988}], 
         Line[{3021, 7132, 2985, 2989, 2995, 7135, 2997, 7142, 7143, 3003, 
          3005, 7150, 3011, 7154, 3013, 7128, 7129, 3025, 3027, 7163, 3033, 
          7166, 3035, 7171, 3041, 3043, 7176, 3049, 7149, 3051}], 
         Line[{3052, 3050, 7178, 7177, 3044, 7172, 3042, 3036, 3034, 7165, 
          7164, 3028, 7160, 3026, 7130, 3014, 3012, 7152, 7151, 3006, 7141, 
          3004, 7144, 2998, 2996, 7136, 2990, 7131, 2986, 3022}], 
         Line[{3055, 3019, 7158, 3023, 7162, 3029, 3031, 7168, 7169, 3037, 
          3039, 7174, 7175, 3045, 3047, 7155, 7156, 3059, 3061, 7188, 7189, 
          3067, 3069, 7194, 3075, 7197, 3077, 7200, 3083, 3085}], 
         Line[{3086, 7173, 3084, 3078, 3076, 7196, 7195, 3070, 7191, 3068, 
          7190, 3062, 7185, 3060, 7157, 3048, 7180, 7179, 3046, 3040, 7167, 
          3038, 7170, 3032, 7161, 3030, 3024, 3020, 7159, 3056}], 
         Line[{3089, 7184, 3053, 3057, 3063, 7186, 3065, 7193, 3071, 3073, 
          7199, 3079, 7201, 3081, 7181, 7182, 3093, 3095, 7213, 3101, 7216, 
          3103, 7221, 3109, 7222, 3111, 7228, 3117, 7198, 2958}], 
         Line[{3120, 3177, 7279, 7278, 3173, 7274, 3171, 7273, 3167, 7268, 
          3165, 7267, 3161, 3159, 7235, 7234, 3150, 7259, 3148, 7255, 3142, 
          7245, 3140, 7248, 3134, 3132, 7240, 3126, 7236, 3122, 3156}], 
         Line[{3123, 3087, 7207, 3091, 7212, 3097, 3099, 7218, 3105, 7217, 
          3107, 7225, 3113, 7232, 3115, 7204, 7205, 3127, 3129, 7241, 7242, 
          3135, 3137, 7249, 3143, 7252, 3145, 7256, 3151, 2951}], 
         Line[{3153, 3185, 7285, 7284, 3184, 7283, 3183, 7282, 3182, 3181, 
          7281, 7280, 3180, 3179, 7261, 7260, 3175, 3174, 7276, 7275, 3169, 
          3168, 7270, 7269, 3163, 3162, 7264, 3157, 7262, 3154, 3178}], 
         Line[{3155, 7237, 3121, 3125, 3131, 7239, 3133, 7246, 7247, 3139, 
          3141, 7253, 7254, 3147, 3149, 7233, 3158, 7263, 3160, 7265, 7266, 
          3164, 3166, 7271, 7272, 3170, 3172, 7277, 3176, 7258, 
          3119}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
Tc/ilJ4ue+b3sd969Nsoubii1GmZreEeNvh6PdfTXDKPV1/0IOfdPShsOzfa
tdcCex0OnR9hnm9lgOHTqIt6YtZX5hY74nEt3gWs71l9tnkr8tsIer/Nutqv
6ohHxT5UtxL7fAlptzvaZhiT4F+xidcDcy4VtyQz38+P3tPtW+MIRwNF9jyT
uQgyVVeSsok9jicm6MbsU+DHO9gS/dQVxHdbtxQR+yKOlkU3R/Vw7AE+t3lh
D+uXHdJ4R+xKqzQqu+8dhwCxHp/SDfZgp9jt9prYX55ZPU/E8xQc3u/q8cfR
HBbsyFdh3vdTwrateToWBfwHo88v+eEOgps99zN597mca1KRTyi0blb5O0fo
DNpJP4t+x/xe8cocufnWFmBVuz2wTjMalfntg7iZn88OCU1uWmSDZeI3ZNdq
RqFae0TYKubnznW1q5Vl7eFJ4b0o/mQ3GA99uj2a+X4+XmRL/qSLcHZnrG+C
rB387LE5xvycSOqygUK+lgus479pIsF1HqYnONlmEbv6dEavgMVVaK/OuGnq
VwrBWvbhK8k9q2WLgGFddyWMSju0ap2IgIyNoZuK3pD6Kroqf1jyBkh2rQp/
qBIDf/avGuwh4xvcaoYGexPAS1VK94xbCe7boT3ZitwfX28+4ZbZrAffHHgD
pJNzsF7Xs1KZ5H/N4ow+gcYj8LL3RM1yzTDk8ZEvZH7+G/t03ve/sa4YV1Z2
fbAxDCS6GZsvE/uV2+0S2/Km4cGqxIrExxFQb1Cqe57YBd4vUTi3owBqp1nz
GYnUwoBUbzRfOQOSrCK8F28OhPQZN669mnsVVpY1Pz75kQG8N1rijuQHIr+N
y0Gu8iuoIyL2XbOX6Pa9TYvtNoXjL73FQgvXNmDkq8RZRrHkvBTPei5wUs9F
+rlsP4HtJ9J+blnIWhe2UesCel1HNrLigB+oOAAdh3dU3DCEihvQcQt1+yX8
yfAqxsQf+aQoFYH5ZaGPucj9uknl+brM1FsoxjWlVOZEHJrkZr44cYcBU23E
KlQbr6LNmXSZL4vPYw3fV70NZPxx/7UiZ5RTMbWVb9PwtGysm3p1VJHcs9SS
WHmCe3aw8gTpPHldz8orjCxg5RXSecWg8hCuU3kIdB7y9JWK2SVboaig88Pj
hyPhhmWxlw6xZzpLlI5WRGGg8q2Ak4HGcOjPj36xMebvKRrU/m6OxiOqR750
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
gZamhoqMBtUhLRpCGSVlVRTZhOy99957b8mog1AKSVFaIqXFExpE+d23+3m+
3+/n+f0+vz+7Xu+O933uc13XOe/nus9F61xKrMMNURvZxBcF4drf65xF+CNg
ibe3MPl9qyadTyATn0WLtnGWb4/EqrW6O7x7fMCwzuvcdvK7JFR00RKMwSAf
uW9WIofga50JB/ldsOLGKuuOhDCkZa99k38wHDnWzFtO9gGL8xvO7FgYiWMF
Q9UCC0LRq/PDX7KvSOeaZdKjZRHYf2CNTmJaEt7yX9eWSfCPp+MnmPBPX78/
Oi4WjcLhyyWLNniBLq7+O0Lum/xiqo6rE3DWmovJxeIXsEbz99NrZD+3NdHb
331MxNZPs86tbrkAjyXTl88gv1Oj4+WY8JJdbnqvBgJxYS6mHMJoLNHy1zUk
fxeg8xln4jOrcTp/wO/+0/kDMvKHHYHT+TY+D5vOt4GRb/u92NNV8ykeYx4W
fN3w6xg6fl0o7kTqJPIum3rXxKAFX5VhJ48TPsu7KLGIzDOD9MNcvibiiqQj
HKJHgnDoUbPWBBEPoXS8DxPek8qX8BSVLyEjX5olTNW5MpP/rHN5qPoCjan6
Ahn1Bf+LO1PqN8xQQX7pET6eKLxREaOaSfanleFRtf9ljKyKaUobrD3AfeP1
LlLnbLLRlimIN4HRtqVDie2mEDrk+ZE8h5/MP71/gTO1fwFj/7pA5XtgQeV7
wMj39sSaK+UJWeEpndd8g8VOwLFaPSOWsKM9pmjKJqsA3sqy+tncp3FL9XAk
yX/rVo/11p1JuLP54f2ycxHIS+OII/vhh9P9E8rkn7QM46OyX6MwCDZIKr4M
w+HqM+E9xHxssJdNXCzvjDHjcZFlcyxw4+ZsETIPT9h5osR0uzXO+Jqe5H7B
BThbY0bI/lerBFdriG0UB5a0n8JGejth1uirJvK7Em7p54kKT7wxMrtUTHxY
BhRfPxxXJ8ZrV1B465R/4r9aXZpbfysQdxyfkFDh9cKmIT5vc8IPt+h8HJn4
NIYPrpg15o7rCuW5bKSdUa3zFD/5PW+S7nR9Dd/Kp+trYNTXOjYpTRWd/nhe
YJ8aV6AC3lFb2riKrMfpfHYw8YlrFu33VbTCVTWSb9j6TeG6ulJfCzHu0dx4
KuZ3CFwQqHP3pLkDq9NDc0HyHDh7wYrH6/0xJad4oWeMJx66qKxA1imXKf0B
O99P6w/I0B8SqfoUTRZM16fIqE/l6fgyJvwY7VOweOpVnNy25IujjRqsdi6c
NUyMe9L5aDLxWeKlNlxy0BJ0nzSvKTce2+f3PKvi3bTebr5om04KVN+4/1tm
sxMcOzpL2+o3eR/3dD2OG6h6HBn1OF2fwVtMfN5VT+s8eJrSeZCh81ykdACY
HJvWAYChA+RR9Q64UvUOMOqdHvp8+c40XxL25VnFv7oK9V3tbq7b/uyTet04
MUKeezmoleQRNBuWn9Bgn/nZCN1Ue9jI8SUXdS5d2xsDw8MDl6p6ZaE6pIKL
vN/BpVxue1C0M2iMeo5tbtfGF99mxeQT+BV0PM/IP/GiTwc8ppoMwSrmfYfM
k6PA/15lNql7sLyK3GK+2ReGTM+YuDZ6w0nHDONk8nuQWToxJmd84cv79awb
lqpAoQWbmxyBX023r89k35fSneAB17TuhAzdSbldqOv2m2CYuund/tU0EN/8
7tFpJvu9fG/Q7v4SARP6zWx2IiFQvdWxiuwH8sbkg8jvnakwjGO2U29DIeBi
dFABsQ+6UjoYGFA6GDJ0sJN0++wV/7RfSulyuJnS5ZChy43dey/5er0KpKwt
WclSF4ZvXxu3KJLfUaatkh7PzoSsfIWtC66FQF7ZtbzPRP72OJL3RU1RJigO
zHtZlW4NB8Wv9Cwh8t4YSj/Eh5R+iAz9cDZ9XT3KtK7S9SIobZ7Wi4ChFznU
PjFXXpAOUbqfL8wU1wZF3WL/ueQ525d5O4wskoF26cUmjxt2yLGwo2we+buz
0rSOCjlG0zoqMnTU2VXTuit4U7orMnRXlYlpvRcmKL0XGXpvM6X3wtJb03ov
3qDrvbWUbgwNlG6MDN3Yry4sPI7dDOdoL5X48KoALi+WXjNzmPDnjnrDmm/x
OG/i+iMx6Qx4Kpda1EDkIUU73p31qHfFDK+8fTNW58JbBR+55cS4meVEqouC
Czq3vBibem+BEa1KC4IJP0xwnOQQbLXHrNvZo3qDJ6FlswAX+XtKdesBFxp3
IZpL80fTTufAOqOtTbM/EH476/DBsrAEHyF/F7A6Q9D8RxWvPxH5gO33OvvW
MtzauTTlY6kDDq8+p5ffT4NWhyOf8y/fxDMjUVav3iTjTm5fOd+XNNjZYPv0
b1gpCqR6bvzwLh3T2mVs7N/SwNiq9cObCBOsKKpr2u8Qigdf9TWZEXFSIKau
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
gQfrRy1t8ok6S7dyt01zPczTHr/em+EF7mea/AsyiPyH0g8xkdIPkaEf8tPX
1RVM62owpRfBTkovAoZeFOvVHiU2UAucnpm/sssuANfcKv29RN5y9POZrI+9
lYCNLG85zuegQL/cYn5i3QikdFRopnRUZOiodN0VlCndFRm6K6v9tN4L6pTe
iwy9N4bSe3E7pfciQ+/loXRjPETpxsjQjU/ONqxke+AOe271TklE5sCYTt+E
LWGHzacveftQLpbsHwjK1onEX4WPbLKHifUtabxL6//QdeZhNUXt35eESkJJ
ppSEaBAqabhLkeZQKhENNBjSnCbN83ia53nSLEqJG5nL2CSZkxAqqQzJu/fZ
5zy/6znX+/y7rn3W3utzr73u73edtdcqTMNE/lNHUnblwwPlFVYTxHilNXLD
UlGyBM1VzrR+1MqHzZsb7xeMEXmE+9fxZ3rV2D/8fuGgjA/0BhaWOhH1JMR8
U/m27BIqa1zOtPpWgz3J8+qTCQ6BtTZ3nLfU47B71u48nyTM4F75UXOQ6D/m
L93i5jdh9DZPbn3NAmxtfPrToWMYdgn0Pzz//ipGzf6+qEL3HHZ9kr6kROje
DZ+u6TS5XsMOOCrsklCJ+id6t64l8suDk5370P06BqZnS+Z2VWNbzZ4qqyKC
/7B7/y7rK2iavbifX7YUOU5dFLS4PgxtSyzrbnU0Im9odMZl4Vxkz1HiKSR0
LKd8g/mgSjlKvxn6e3uzOuj9na6fS+73dYA2cWOFO3Lst1K6LJ4HB0SVZNoJ
/uIbFF2+GsaAlZ/36uWKWbC1gOcz+f/du6TTsryvW9Cossz6vEQVzljlvs7k
6jAMPUjtex4ZgZxnMldonIyG7WYTPTTy/x2RV+NcRwoxqLXrdMmkP1p9mN3b
S4xLsxjxusQSr7y0Wz7DXPWoVn/EgfdpMfqZ9Sn3vB0G553VqnaKVejWKope
pyORQz9x2Q/i+rj/EZfCB37lF10aUVu/ZPvMxiq81nD1fA3xXtssEu03bm/A
27wmMqfPVmC77MGIJCIuofxlcdtkK5H20us338Z0fDyUuZ+fqP8Nm/MnPf9j
kPgj79bd5flgvlp+zIY83+R1o5FTaDLO2an992G3MwzEd5xcRn7fnfFw8Bq6
YnE/W0S5fRL8iAo9RO7jpDnP+9Ip/VA4KMchGM5TAHMjdp49TowDtywnny2u
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
+0pwOCQoNwfiUHXG8tY3xPN76FgfdGtzxdjK7OPpltH4fNAiZTnxPEe6L228
KFiI/Lt+bbLZH4rSA2I/HhGcQ6RpHSHX0vGOxe1Zt1e7o+Lf1iXaf/+PZycL
T9sPNxM/ZUXijOXQcI53GTz4FTpEfsdtNuCTiFX7UXPl29jD/+LAUKKIfZrg
DNfWHxy7mg5b2fYeSpjygrNufwIVifqf1NLzKbyh8imYMPJpQQQ9/8I2Kv8C
M/82GUka9M06BgkSn2+4XImCpZrxnNuI+16yo+dxjGyi53Fg5nEl+yNSfAIu
+DD0QWqmVDweaaEd6CfKDzA48LBw+CGqkX9M4ix+FKnNbePNRoEMAx8y/9bN
aljRZ+CHt67v1Js7OxNz0reu+0KU136dE2em4Iza6XMl7LSi0SdVYbMo8Ty7
GfxDWfhnfH21YSI6GAICA3U/3DmJHXcDY8nvgEwYfMxZ+OhH39IylC8CPtO+
QtqleDgp1Hw7mHgfxxro+hbEKX0LTH17ZNdh9cjyAmjc9aW25mA8HJ9eEhBI
tEtIaZtSWkwFrN15ektjbQZwB1YkmhDvafj0zuPRWeXQu7B9l11ZCowc5T3T
Qp5Hw7dMR7+iFAxvKT/7kksD5VLMeEfO667wCbnqXkTojUPPD0b6gdSdiE8K
RP2fKX0Ok3Z0fQ5MfR5xZHu7jXodWOfMfKy+LA8Mso47a5PfiVO6F2Qz6boX
mbrXndLJ8HUXXSfjZoZOvsCIuxtL3NlOacXnzHaC8Ex7HjmLBJQa6JS9Rlxf
60vX4ZhL6XBk6vDDlJ7H9HN0PY9MPd82RfcFYE/5AmD6gkkGZykWzrKU74Bg
QbrvAKbv+PI/OEhRvgayKF8DTF8jT/kgmE/5IGD6IEXKN8HjHXTfBEzfJMjg
5sjC7Qzlv2D9Q7r/Aqb/Mqd8HCzPo/s4/I+Po3wfAOX7kOn7GimfCDMpn4gt
DJ+4e6x8zSmxVOBS0Rh+o1GMcvs+O3cR4wxQPhRcKB+KTB8auyLwRhyfP176
+dbG2ioXvN/+EiPzjrR607p2gxCEWT1fymnJsLU/8g+5b2RIr8tApU0EOjdO
Ko63ZcO3kGO15PWzZDWknlrHYUDlIZedXjnwz5vD1Y4o/1PhU3+yh4Y52ZNd
XBzpoBGhf3cD+f9OQLdzzOsoZOsbX/56ayREVMzgJucl1o7yx7dOJWOZd8wa
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
j29icPvEwu3iCN1/wW/KfyHTf8lTPg7uUT4OmT6uezPd9wHD9yHT98k+o/tE
MKJ8IjJ9olfQ+gzPo0GQVtBqm7gyG3Xd/s3aS9RjRPlQyKV8KDJ9aIkI2145
DjsYFda5yx8UCS/aN6ppEuOSSFaa1AmzOByf7NxV+zMYr24U3Ueeg7PtvHL2
s89uKMZdNOyv4AAvRzkVyflAkztjiifdAjFPvWIiN1EL3MbrJc+R69iXLihs
TQhD52dh+n9LT2DX6me77YjyWSGb30r9SEf2RsF3zatpqHwvQW0x8ZxLtezX
/KiKRkORGPUDz89ihPqXke/EfX+ujQrvX5WE1TuD5nzTD0XnQJ6QbwTPmuff
+VI+puN46vV5zrXRuCzuZhupG0X+lNQI0HLQQtpVcU95DGr0P9lA7iNtKFxb
2JCdj5wSAiVzCmKRc7dMsiL5v57yYx6pqVzk/9K4e8vvCDwYNP+TCXH938cl
bx+2ZKHhgW8/NfaGINv29TpGRP2lC9PHfqnH4NwDQ1f0Pu+Fu3tkz6wn2nXg
SERr6lVVFPUtVC+ZFwm2m6L49pPj/IMO+X4+H+iOu/lBZW4keI2u1BUj95VS
yFiz4no2/vZpVjE3jMNXfIuVkon7PtDscPtu74Rtg/YeTkd3wQqb+lhS/zga
zU7nUg7DqlAu0ZOv3DH452ddU6J8DSNeP1niZbTIYEvM4yScrnx0XZ7IS7J/
jvQGkP7ofXOvvk88hpuaBKfkueE9P/ufT6f/d1xkJ5cetFqZjoFZbVZ/FiTg
hOH03aNEeX/Jv2HarjRkl5XpcpmOQ9lSkZzzRLlo9ut/ioHRKHrwyT/Ptf7o
PTs8ZYyof7Ap98rS6sNQEHCuaEtcCBz48ew1uS83u46Bi8WX0yjkWNVk4i6K
PAtr+L6R+8asCX7waJ0wNC5/oPKl9TSMxtc4kOVJXcdVnn9zghCHfffqFgbA
nLW7eMnz+GDjPoMlM0KhXVBSqLE4HuLYxTtIfe7KiMtalrjIFI3uFghOgDVS
1SVrbqQB1/NV7HbE8w+npoy6acSAwUJt+daryVB6D/tJvf3QbiorpN8dpIs3
HPK87Qpqhec0bxL1TLaZxw9+8MRd5fDWRZ6GcV8SD5HnnljLbK1Ydj0MG9oE
/ny5n4hZQyErh4h6EsS6r8qdjMbwS8dtd/1LQZ92gak1RLlx2iqvshhH7Nf3
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
tFt9LL9uyxFsOfi705EoP9YndV5xdRbaxOLM+0KuuF78xNxH5P9oq0TMNq/f
AqYFExtP2sjD3LEXt8l8Gq0VKP52dQb6Lml26Frojz2Vx7aS+zPYrbn65I11
AlqaBv8ZXuKF5pM//5Hfb6YxeI6x8KzwUctdrBWAtr+yUi9wE/fdUC5N5hH5
k0XLjwqfwhW2GLDR3QzdbdW0hsn73rtllPGbBkeWXg8JGw6Bmf5tLqvI7yBs
6PkUjKl8Csx8akTlX9xO5V9k5l/TuUaKm3d5YsuA0QkNCWcc0PsaRp6XnUDl
cfykTc/jyMzjDrmfGviWusHoz6NvxQ1sgW1fWS2p30IYHLxZOJhL9yR3DViD
7osLr8YEzSAp6cQBUj+8tOK5GvtZDQYzdo2ucFRBrp4XbiRP6BwM/XfbAQIy
Bp6qdujA0oF9XOT/yN+EKf5PWfg/ma2R7a8ZBL47NYqnzrnDl9KT4+RzZjP4
2LHwmXbLmnnjdSak3X+ZzU+eE7dbcFUWwd+T0rcwmEbXt8DUt1w/blr2DqXA
36P32L2laXBZ8mxzKXH9o6su/FJWBXDT9+5v1Q3+oKsz19Kd/N485ygHb0Au
PLzwTdVltxM8iclNnEdcL37MytZROYPwA4O2zW/V4DKtkdOA3Jdg5LyF4fwU
cE9dmShs5Ifnxlb+fv33P/oc/qrT9Tn8R58XCSv+Ki+FyiptSV5HGlRecKz8
TIyHRpTuBV5K9yJT916ndDLMoHQyMnWyDiPu3Sxx57w7IPtSbB+Ui54XmnE9
Cd+8PNVuQFzvRulwPEbpcGTq8JmUnocfbnQ9j0w9r0j5AhigfAEwfYEfg/Mn
Fs53Kd8BtynfAUzfcZfBYYqFA8PXwCDla4Dpa3ooHwS2lA8Cpg9yp3wTvDtH
903I9E0mDG4CLNysKf8FEpT/Qqb/+k75OPgZRfdxyPRxAQp03wc2lO/DFQzf
94vyiXCD8onI9Im7ePytldPC4KxXaPfByDw8+Xj1CilinDxL+VA4SvlQZPrQ
4NIVs3/EiwHt45iSkmQdmM/O44gk9x/ICR2Ya1COwv7lu0dVabB1qrqymhjP
OU71H+FoKEIr8U3vzRvrYbmMsdvoGyKOMwT47W3O45rIF/6u1y+CGk/RVqEH
5Dz8pNenhIuY8G5J6Q/3YuAznr2lqI/Iy9dnScoN1GJ19Zd/eZujMcFpTdRB
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
D0e84Ejlm+uQyOpQgvMdYGfsz1Lyv4AWld/C48g5fgt0flvbbTxS+80cfIM0
s6aPOMGT2f0idUR7QGBDI+XYDUg81vmlxdsJUjfI65HfEygP1mREubrAj2Rz
r9uRl6F9b3UROX9YxPUvMQ16wHaNVU+Ehw2xnYMfIklefTt0sKTbidD9odvT
NUNxByVqD3kuYieVn8NZKj8HOj8P/cHTVBNqD1HWV/mTVVzBqfK5BdkPr9sc
74VBKu9FOu9NcJjjyficypORzpPtaXH3Yoi7XeKlV+cj3TCxcKmZNlc2Nsd8
ll5E5MNZKg9HNyoPRzoP76LyefhH5fNA5/N9VF0Aa9LndAHQdYEODedWBpwb
qLoDuiTmdAfQdcfL/4GDL1XXQAxV1wBd17yj6iDQpOogoOsgdapuAnGmJlI3
AV03HfofuDX2zekveMg2p7+Qrr/udczpOAig6jik6zgd7TndB+1U3Yd03Sd/
fk4nwhRVJyJdJzbtOxnZWm2GTUdyKUXW2QgWO2AF0T7v0pwOxdtUHYp0HeoX
4Hp44XFb+Ba9473uTn+oMgo+RfITlU+rE7+vcMX3zpM/TkMEDDT/XnSWwH/k
jD7nPUkZmMyZOacunQo7BjQj+4m6ub5KWe/dQxPk6eIyWjqWDU+09vnfJZ4z
QSgw48ClIDxz1DC6JT8ebvBtEdYh7juvRvhDQGE41ty5HdusZ44soyM25Dmx
7WFt7kqpcfjg2UoFnnkE3+5f9+EweX7p99eLXMZiERpHghoP26CIxCKeG0Q7
msXYFRyMxRPfnkXbbA7HdJeOCFOi/x1HbsU+2h2G5ts2amxTCkQKi4buaqJ/
/Jzud/KQJ4pYjMwbvO6JG4MfF5H7zc98VzD3PO+Gy7as/je91QU/NXFcIXmp
X074FftRJ/yQfNRmzRUbLIt/y0PqMsO9lR+5OFxRcWag5ni/DW7K4hElz4ev
Po+moS1ueHvKmeWqgi1ee3hyMIxsX3P8BKeCO/J8SDRU6rJB5uo2DVJPHbKd
1Hh0wR25rZ/nVvDexB+OYslz39OmPqjX5JuAr9nGnmfhfrDYU+YueX7ClrOn
7l8U0UHP3k42L70wGF4p/KONGNd5WrxGGOI1o7oqJOyWP5Ytzf0nc9YZ0npW
n2Mj80nWSI0AkzlO5Nt6mxWZo/d6paQ3RPufampc8hnisvB5HXPzR3/sXV2j
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
FYGaipOpp4k9/wep/38R
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
       3.7217503613850935`*^-9, 1.1083585189732328`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.54, $CellContext`k3$$ = 0.56, $CellContext`k4$$ = 
    1., $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
     0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
     0.25, {3, 3, {1, -1}} -> 0.25, {1, 4, {-1, 0}} -> 0.25, {1, 4, {0, -1}} -> 
     0.25, {1, 4, {-1, -1}} -> 0.25, {1, 4, {-1, 1}} -> 0.25, {1, 4, {1, 0}} -> 
     0.25, {1, 4, {0, 1}} -> 0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 
     0.25, {1, 4, {0, 0}} -> 0.25, {2, 4, {-1, 0}} -> 0.25, {2, 4, {0, -1}} -> 
     0.25, {2, 4, {-1, -1}} -> 0.25, {2, 4, {-1, 1}} -> 0.25, {2, 4, {1, 0}} -> 
     0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 0.25, {2, 4, {1, -1}} -> 
     0.25, {2, 4, {0, 0}} -> 0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
     0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 0.25, {3, 4, {1, 0}} -> 
     0.25, {3, 4, {0, 1}} -> 0.25, {3, 4, {1, 1}} -> 0.25, {3, 4, {1, -1}} -> 
     0.25, {3, 4, {0, 0}} -> 0.25, {4, 1, {-1, 0}} -> 0.25, {4, 1, {0, -1}} -> 
     0.25, {4, 1, {-1, -1}} -> 0.25, {4, 1, {-1, 1}} -> 0.25, {4, 1, {1, 0}} -> 
     0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 0.25, {4, 1, {1, -1}} -> 
     0.25, {4, 2, {-1, 0}} -> 0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
     0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 0.25, {4, 2, {0, 1}} -> 
     0.25, {4, 2, {1, 1}} -> 0.25, {4, 2, {1, -1}} -> 0.25, {4, 3, {-1, 0}} -> 
     0.25, {4, 3, {0, -1}} -> 0.25, {4, 3, {-1, -1}} -> 0.25, {4, 3, {-1, 1}} -> 
     0.25, {4, 3, {1, 0}} -> 0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
     0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 0.25, {4, 4, {0, -1}} -> 
     0.25, {4, 4, {-1, -1}} -> 0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 
     0.25, {4, 4, {0, 1}} -> 0.25, {4, 4, {1, 1}} -> 0.25, {4, 4, {1, -1}} -> 
     0.25, {1, 5, {-1, 0}} -> 0.25, {1, 5, {0, -1}} -> 0.25, {1, 5, {-1, -1}} -> 
     0.25, {1, 5, {-1, 1}} -> 0.25, {1, 5, {1, 0}} -> 0.25, {1, 5, {0, 1}} -> 
     0.25, {1, 5, {1, 1}} -> 0.25, {1, 5, {1, -1}} -> 0.25, {1, 5, {0, 0}} -> 
     0.25, {2, 5, {-1, 0}} -> 0.25, {2, 5, {0, -1}} -> 0.25, {2, 5, {-1, -1}} -> 
     0.25, {2, 5, {-1, 1}} -> 0.25, {2, 5, {1, 0}} -> 0.25, {2, 5, {0, 1}} -> 
     0.25, {2, 5, {1, 1}} -> 0.25, {2, 5, {1, -1}} -> 0.25, {2, 5, {0, 0}} -> 
     0.25, {3, 5, {-1, 0}} -> 0.25, {3, 5, {0, -1}} -> 0.25, {3, 5, {-1, -1}} -> 
     0.25, {3, 5, {-1, 1}} -> 0.25, {3, 5, {1, 0}} -> 0.25, {3, 5, {0, 1}} -> 
     0.25, {3, 5, {1, 1}} -> 0.25, {3, 5, {1, -1}} -> 0.25, {3, 5, {0, 0}} -> 
     0.25, {4, 5, {-1, 0}} -> 0.25, {4, 5, {0, -1}} -> 0.25, {4, 5, {-1, -1}} -> 
     0.25, {4, 5, {-1, 1}} -> 0.25, {4, 5, {1, 0}} -> 0.25, {4, 5, {0, 1}} -> 
     0.25, {4, 5, {1, 1}} -> 0.25, {4, 5, {1, -1}} -> 0.25, {4, 5, {0, 0}} -> 
     0.25, {5, 1, {-1, 0}} -> 0.25, {5, 1, {0, -1}} -> 0.54, {5, 1, {-1, -1}} -> 
     0.56, {5, 1, {-1, 1}} -> 1., {5, 1, {1, 0}} -> 0.25, {5, 1, {0, 1}} -> 
     0.54, {5, 1, {1, 1}} -> 0.56, {5, 1, {1, -1}} -> 1., {5, 2, {-1, 0}} -> 
     0.25, {5, 2, {0, -1}} -> 0.25, {5, 2, {-1, -1}} -> 0.25, {5, 2, {-1, 1}} -> 
     0.25, {5, 2, {1, 0}} -> 0.25, {5, 2, {0, 1}} -> 0.25, {5, 2, {1, 1}} -> 
     0.25, {5, 2, {1, -1}} -> 0.25, {5, 3, {-1, 0}} -> 0.25, {5, 3, {0, -1}} -> 
     0.25, {5, 3, {-1, -1}} -> 0.25, {5, 3, {-1, 1}} -> 0.25, {5, 3, {1, 0}} -> 
     0.25, {5, 3, {0, 1}} -> 0.25, {5, 3, {1, 1}} -> 0.25, {5, 3, {1, -1}} -> 
     0.25, {5, 4, {-1, 0}} -> 0.25, {5, 4, {0, -1}} -> 0.25, {5, 4, {-1, -1}} -> 
     0.25, {5, 4, {-1, 1}} -> 0.25, {5, 4, {1, 0}} -> 0.25, {5, 4, {0, 1}} -> 
     0.25, {5, 4, {1, 1}} -> 0.25, {5, 4, {1, -1}} -> 0.25, {5, 5, {-1, 0}} -> 
     0.25, {5, 5, {0, -1}} -> 0.25, {5, 5, {-1, -1}} -> 0.25, {5, 5, {-1, 1}} -> 
     0.25, {5, 5, {1, 0}} -> 0.25, {5, 5, {0, 1}} -> 0.25, {5, 5, {1, 1}} -> 
     0.25, {5, 5, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
    5, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$3182, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    9, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {6.9, 12.8, 20, 25.500000000000004`, 26.6}, 
     "numberOfMasses" -> 5, "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
      0.46569037656903756`, 0.18075313807531387`}, {0.7923012552301256, 
      0.26251046025104596`}, {0.7981171548117154, 0.5843096234309623}, {
      0.30778242677824286`, 0.8248535564853555}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.3900000000000001, 0.75}, {
      0.5779999999999998, 1.2400000000000002`}, {1.19, 1.505}, {
      1.5979999999999999`, 1.06}}, "pointsDataTable" -> CompressedData["
1:eJw9UltIlFEQ/t1dV103kZACCbMIkS6IWJSEzESEFUSkISEisnSDoqSHiIhe
yi5EikGY9aBhPQgiEhLqQ7OZD2olsgUqXXRdb5uKu+zFX1atPTPHBn6Gc775
v/m+ObPDdb3kgtUwjMT4lxb/LPFvf4GKEL1sVJHovsgxA5c4r9PXLypsKHiQ
NrLgUX32g/D4qFF48AXnAfjLsUTNfO7WfAuw0UeyHQ0OEz4LTgWiC+Q+oLOB
cp+EG/9JPz8J/F+n5nVgRV1vJLciRqIv0V3WlVUzf6YfpG6N+NhloOgKkKqu
613RviL0jC88ut5LqjqrJkHrHYZcbmBqf61k8sWo1jsHJdzAovlNqGW+qNYb
hkrWN671GridG1h1vR1ZTiRMgttw8nZGe7F3EgR3YG5+ctu2cpOOexWQ4I59
v+XPyR8F8REhzylX+rlCC/5Rsue9VNtwbfM9d5Tus495ch0eP/204Tc08xza
qSkz79cuuxU7ihXhLITXFGGE9rLPnzA1vPPHyt1JGG2pLnKMhODqbKw16LGi
+DSw/LwiDJHgMdhqK0vb925az8GGhZ39Nz802bCb+znw4+DrY+9DQRI8GU8e
fHykanoOBE/DbJ7HIp1lfJ3aWdcSPGD9QeKyrCSc4rl4aIFt+ck5ogT4SKlo
qQ7CIZWKBkFsJ2EGEwVA3n+G5F1mgMscIRDc1HgyCo8FZW4+kjoD3zAQBsHt
KPuRggyPOPVcJrQOB3IqigLrvJKObUH1QhMkfi3u+sU7cKAyCsJr0mqrKnCg
+J6lgIJ7xkjwAO1+uGVsaHlZ6xwiNd3MvFSUOXjhkYJLv+n6YejL7rhxuX4F
orweAXh+9En8CVPxE+/LGmDVdPyFB0hwEyp7Tjgte2Ige2dBtU2d/U6UfUvB
QI5awB4S3I7Lpb63r/pWQfBN+A+jCC/2
      "], "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {-0.20000000000000018`, -0.8799999999999999}, \
$CellContext`qPlaneLoc$$ = {{-2.709857394019914, -1.7138642998702553`}, {
    2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    6.9, 12.8, 20, 25.500000000000004`, 
     26.6}, $CellContext`rawNumberOfMasses$$ = 5, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 1, $CellContext`tauSliderValue$$ = 
    12, $CellContext`tick$$ = True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}, {0.3900000000000001, 0.75}, {0.5779999999999998, 
    1.2400000000000002`}, {1.19, 1.505}, {1.5979999999999999`, 1.06}}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Function[$CellContext`k5manip$, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
               Row[{
                 OverVector["q"], " = ", 
                 
                 Module[{$CellContext`qm$}, $CellContext`qm$ = 
                   ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                  Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                 Dynamic[
                  NumberForm[
                   MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
               Row[{
                 Text["time, normalized to one period, t/T = "], 
                 Dynamic[
                  
                  N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
               Row[{
                 Manipulator[
                  
                  Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                  1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                  ContinuousAction -> True, Appearance -> "Open", 
                  AppearanceElements -> {
                   "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
               Row[{
                 Text["oscillation scale factor:"]}], 
               Row[{Manipulator[
                   
                   Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}] " ", 
                 Dynamic[
                  NumberForm[$CellContext`scale$$, {3, 2}]]}], 
               Row[{
                 Text["Angular frequency \[Omega](q), selection:"], 
                 Dynamic[
                  SetterBar[
                   
                   Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
               Row[{
                 Text["number of mesh intervals "], 
                 Manipulator[
                  
                  Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                  Tiny, ContinuousAction -> False, 
                  AppearanceElements -> {"InputField"}], " ", 
                 Dynamic[$CellContext`freqMeshSize$$]}], 
               LocatorPane[
                Dynamic[$CellContext`qPlaneLoc$$], 
                Dynamic[
                 (Graphics[{
                   Lighter[Gray], 
                   Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                   Line[$CellContext`qPlaneLoc$$]}, 
                  PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                  ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                ContinuousAction -> False]}], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                Row[{
                  Text["mass: "], 
                  Dynamic[
                   If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                Text["coupling to neighbouring: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}, {
                Row[{
                  Text["horizontal: "], 
                  $CellContext`kLable[1], " || ", 
                  OverVector["a"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                Row[{
                  Text["vertical: "], 
                  $CellContext`kLable[2], " || ", 
                  OverVector["b"], " "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[3], " || (", 
                  OverVector["b"], " + ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                Row[{
                  Text["diagonal: "], 
                  $CellContext`kLable[4], " || (", 
                  OverVector["b"], " - ", 
                  OverVector["a"], ") "}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
               Part[$CellContext`k5manip$, 1], 
               Part[$CellContext`k5manip$, 2]}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
         If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
            Row[{
              Text["coupling from "], 
              Dynamic[
               $CellContext`massLabel[$CellContext`m1Sel$$]], 
              Text[" to: "]}], 
            Dynamic[
             If[$CellContext`rawNumberOfMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 
                 Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]]}, {
            Row[{
              $CellContext`kLable[5], ": "}], 
            Row[{
              Manipulator[
               
               Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                Dynamic[$CellContext`glConstKMin], 
                Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
               ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[
               NumberForm[$CellContext`k5$$, {3, 2}]]}]}}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 8}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1: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
FXbU/ypCuwc=
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            
            Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95, 
             96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 7,
              6, 5, 4, 3, 2}]}, {
            GrayLevel[0], 
            
            Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 192, 
             193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 160, 150, 
             140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 103, 102}]}}}, 
         VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0.05387887094889892, 0.47483381708604716`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
        "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
         0.7, -1.9000000000000001`}, {
         2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
         0.8, -0.6000000000000001}, {2.6999999999999997`, 
         0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
         2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = {
    507., {249., 258.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 8, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1: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
FXbU/ypCuwc=
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              
              Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95, 
               96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 
               7, 6, 5, 4, 3, 2}]}, {
              GrayLevel[0], 
              
              Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 
               192, 193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 
               160, 150, 140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 
               103, 102}]}}}, VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0.05387887094889892, 0.47483381708604716`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
          "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
           0.7, -1.9000000000000001`}, {
           2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
           0.8, -0.6000000000000001}, {2.6999999999999997`, 
           0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
           1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
          "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
           LocatorPane[
            Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                  Dimensions[#]] < 3, 
                
                Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
                If[First[
                   Dimensions[#]] > 7, 
                 Take[#, 7], #]]; 
             Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
                First[
                  Dimensions[$CellContext`rawArrayOfMasses$$]]; 
               If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                   $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                 
                 While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  
                  AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                  Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                  Part[
                   Part[$CellContext`kArray$$, All, 1], All, 1]]; 
               If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                 Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                 
                 While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                  Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                  Part[$CellContext`u$$, 1], 
                  
                  Part[$CellContext`u$$, 
                   1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 1], 
                Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                  Part[$CellContext`u$$, 2], 
                  
                  Part[$CellContext`u$$, 
                   2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
                Part[$CellContext`glConstLocDefault, 2], 
                Part[$CellContext`u$$, 2]]; {
                Part[$CellContext`u$$, 1], 
                
                Part[$CellContext`u$$, 
                 2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
              If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
              If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
              If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
                
                1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
              If[$CellContext`omegaIndex$$ > 
                2 $CellContext`rawNumberOfMasses$$, 
                1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
              ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
               2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
            LocatorAutoCreate -> True, ContinuousAction -> False]]]]), 
      "Specifications" :> {
        Dynamic[
         Function[$CellContext`k5manip$, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; {
                Row[{
                  OverVector["q"], " = ", 
                  
                  Module[{$CellContext`qm$}, $CellContext`qm$ = 
                    ReplaceAll[
                    "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                   Slider2D[
                    
                    Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> 
                    False, ImageSize -> (
                    150 (#/Max[#])& )[$CellContext`qm$]]], " 2 \[Pi] ", 
                  Dynamic[
                   NumberForm[
                    MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
                Row[{
                  Text["time, normalized to one period, t/T = "], 
                  Dynamic[
                   
                   N[($CellContext`tauSliderValue$$ - 
                    1)/$CellContext`dynMeshSize$$]]}], 
                Row[{
                  Manipulator[
                   
                   Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {
                   1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                   ContinuousAction -> True, Appearance -> "Open", 
                   AppearanceElements -> {
                    "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                    "FasterSlowerButtons", "DirectionButton"}]}], 
                Row[{
                  Text["oscillation scale factor:"]}], 
                Row[{Manipulator[
                    
                    Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.05, 1}, ImageSize -> 
                    Tiny, ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}] " ", 
                  Dynamic[
                   NumberForm[$CellContext`scale$$, {3, 2}]]}], 
                Row[{
                  Text["Angular frequency \[Omega](q), selection:"], 
                  Dynamic[
                   SetterBar[
                    
                    Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`freqTab$$; {
                Row[{
                  Text["number of mesh intervals "], 
                  Manipulator[
                   
                   Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                    True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> 
                   Tiny, ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}], " ", 
                  Dynamic[$CellContext`freqMeshSize$$]}], 
                LocatorPane[
                 Dynamic[$CellContext`qPlaneLoc$$], 
                 Dynamic[
                  (Graphics[{
                    Lighter[Gray], 
                    Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                    Line[$CellContext`qPlaneLoc$$]}, 
                   PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                   ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
                 ContinuousAction -> False]}], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                 Row[{
                   Text["mass: "], 
                   Dynamic[
                    If[$CellContext`rawNumberOfMasses$$ > 1, 
                    SetterBar[
                    
                    Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                    $CellContext`massLabel[1]]]}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                    Part[$CellContext`rawArrayOfMasses$$, \
$CellContext`m1Sel$$] = $CellContext`massValue; \
$CellContext`parameterLocatorDependencies$$ = 
                    ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], {0.25, 
                    Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
                 Text["coupling to neighbouring: "], 
                 Dynamic[
                  If[$CellContext`rawNumberOfMasses$$ > 1, 
                   SetterBar[
                    
                    Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                    Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                   $CellContext`massLabel[1]]]}, {
                 Row[{
                   Text["horizontal: "], 
                   $CellContext`kLable[1], " || ", 
                   OverVector["a"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
                 Row[{
                   Text["vertical: "], 
                   $CellContext`kLable[2], " || ", 
                   OverVector["b"], " "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[3], " || (", 
                   OverVector["b"], " + ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
                 Row[{
                   Text["diagonal: "], 
                   $CellContext`kLable[4], " || (", 
                   OverVector["b"], " - ", 
                   OverVector["a"], ") "}], 
                 Row[{
                   Manipulator[
                    
                    Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}], " ", 
                   Dynamic[
                    NumberForm[$CellContext`k4$$, {3, 2}]]}]}, 
                Part[$CellContext`k5manip$, 1], 
                Part[$CellContext`k5manip$, 2]}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]][
          If[$CellContext`rawNumberOfMasses$$ == 1, {{"", ""}, {"", ""}}, {{
             Row[{
               Text["coupling from "], 
               Dynamic[
                $CellContext`massLabel[$CellContext`m1Sel$$]], 
               Text[" to: "]}], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 2, 
               SetterBar[
                
                Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 DeleteCases[
                  
                  Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]], 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]]]]}, {
             Row[{
               $CellContext`kLable[5], ": "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                
                NumberForm[$CellContext`k5$$, {3, 
                 2}]]}]}}]]], {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 8}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$6418, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1: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
FXbU/ypCuwc=
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwNw2e7qQAAAGDHdo2SnVApoZTdsCtUysh2bOf7/U/3l97zPs+Lvf/ab6fD
4fj32/U79OUMO10Rlxtwe0CPN+r1QT5/zB9AE8l44E8qFO7SDAyAyWAoC0Zz
UCwfiyNRKB2OYMlUo0QRGZiEs6UsQiG5ci5fLaA0iuGp9M/5whYJjiDrZInB
8CZVbleqnSpdw4uZCMAztWI6I/NCv9FcKuqw1R53upMuP2p3LFnp1RsSV5/1
+vpwpAiiKkqL8cScyMZofLKWK3X63B+2mr43FvZcOy9XR9MSWe6wMHe6sZ7O
Lqv1fbt77Pavw/G6sd/H0+d0vtlbocaefz5foeBAm3tAwBUJB5MJNxAJxGM+
KOqNgv4YFEolE2ghkkkzfDecToFZGMohsXwuimSTGJrCsXQRh0kiWyIRqpQr
U4VqBaWrGENniCJeYwiOpZoNss6VGvVKu1VkawCcobudaqc9lXrOcIiTxNZw
UO9JgiI3+j1ennTGo/Zo2J2MRVWRLbM3m7KiIE3Voa6NF8bEXIwMXVla6mo5
Xa+0ra3vtsZ+tzjszePBOh2X59Pc3qwuZ/t23T8f2/tt97gfXs/N9bsm8KfP
+/h+aYPhf1UGYi0=
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwNw4m2oQAAAFBn5kvml+YT3jnP7iElogWRXVkjhZRCizW7sXufNe+ec/98
+P9+/LLZbOLP3z8TxULQ7ji+X2GPN/Bph9yekNMFOJygyw17fQQURvwBtlSO
+L7iQQALgTgIoUAoFggmwjAZRbIolonF00iMiqPFRDKPEzkMT8KRcopsFoq1
bI7JUHQ6U6WyFTLdyBfqufz7eGqXKxzN9OoNvlqTO5xQq0vtjthi+43mkG2P
uK4pySovdCq00uUnvb4uDo2hpA3EmTyaj5SFoq7GE2uqbTR9qxs7w9ybs8Ns
vlTHx/nivFzdNtvL2rpam/t2d1osC0TiuT88dvvX4dhlqt+nM5ImXWDIj0Qd
QNANgb4I7AwBnjAUjMfCCaLSaYM4BicTABqHCDwQQ0IY6oXDUTJlDwbQLJUq
l8hKGc/n4lSGKOSxXDZXr2UYutxmY5l0vlGnqky2Vi00G4fXs8S20nRlLPSY
Lmfsth1ZqvcEbiRX+W6j32tLw5rAt8RBVxkNDV0Yq7yqSKYxms8G2lTUtd5k
zA5FeWYqi/n8eNA21uJ0HK+W+nYzO+yn1np5Pn0G/Pvng+Y61vWyvvxTl4vN
7Wrud7vHfXu/nb7f/wGjRyAU
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               
               Line[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 92, 93, 94, 95,
                 96, 97, 98, 99, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 
                8, 7, 6, 5, 4, 3, 2}]}, {
               GrayLevel[0], 
               
               Line[{102, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 
                192, 193, 194, 195, 196, 197, 198, 199, 200, 190, 180, 170, 
                160, 150, 140, 130, 120, 110, 109, 108, 107, 106, 105, 104, 
                103, 102}]}}}, VertexNormals -> CompressedData["
1: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
FHJy1P8BSkDobw==
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0.05387887094889892, 
             0.47483381708604716`}}, PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}},
            "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
            0.7, -1.9000000000000001`}, {
            2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
            0.8, -0.6000000000000001}, {2.6999999999999997`, 
            0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
            1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
           "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{907., {288., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$158]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$158]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$158 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], \
$CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], 
       Attributes[$CellContext`res$6418] = {
        Temporary}, $CellContext`res$6418 = {{
         0.25 (0. + 
            0.4756242568370987 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.4756242568370988 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10))}, {
         0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.5243757431629014 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.5243757431629013 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/
              10))}}, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6015989970434837`*^9, 3.6015990333005576`*^9}, {
  3.6015991145102024`*^9, 3.6015991183794236`*^9}},
 CellID->21486365]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "The positions of masses within a two dimensional periodic array of cells, \
can be described by summing the lattice vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["r", "\[RightVector]"], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["n", "1"], ",", " ", 
        SubscriptBox["n", "2"]}], ")"}]}]], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "1"], 
      OverscriptBox["a", "\[RightVector]"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"2", " "}]], 
      OverscriptBox["b", "\[RightVector]"]}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", representing the origin of each of the lattice cell, and a relative \
vector to the position of each of the masses.",
 " ",
 "With ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 " representing the equilibrium position of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 ", the position of that mass is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 "+ ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6008874666091995`*^9, 3.600887466629201*^9}, 
   3.6012090394184523`*^9, {3.601382475199787*^9, 3.601382478123955*^9}},
 CellID->143536934],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["a", "\[RightVector]"], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], "=", " ", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], 
      OverscriptBox["n", "\[RightVector]"]], "+", 
     SubscriptBox[
      OverscriptBox["p", "\[RightVector]"], "k"], " ", "-", " ", 
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], 
      OverscriptBox["m", "\[RightVector]"]], "-", 
     SubscriptBox[
      OverscriptBox["p", "\[RightVector]"], "j"]}]}], TraditionalForm]], 
  "InlineMath"],
 ", with direction ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["a", "^"], 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]], 
  "InlineMath"],
 ", represent the equilibrium separation of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 " from the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["j", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["m", "\[RightVector]"]], TraditionalForm]]],
 ".",
 " ",
 "If the harmonic coupling between these masses has magnitude ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]]],
 ", then the system of equations describing the vector displacement ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["u", "\[RightVector]"], 
    RowBox[{"n", ",", " ", "k", " "}]], TraditionalForm]]],
 " for the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in unit cell ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["n", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " from the equilibrium position is given by"
}], "DetailNotes",
 CellChangeTimes->{{3.6008874666091995`*^9, 3.600887467295239*^9}, {
  3.6012090498004904`*^9, 3.601209051237634*^9}},
 CellID->185095190],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["m", "k"], " ", 
    SubscriptBox[
     OverscriptBox[
      OverscriptBox["u", "\[RightVector]"], ".."], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}]]}], "=", " ", 
   RowBox[{"-", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", 
       RowBox[{"k", " ", "\[NotEqual]", " ", 
        OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
     RowBox[{
      SubscriptBox["K", 
       RowBox[{
        OverscriptBox["n", "\[RightVector]"], ",", 
        RowBox[{"k", ";", 
         OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
      SubscriptBox["Proj", 
       SubscriptBox[
        OverscriptBox["a", "^"], 
        RowBox[{
         OverscriptBox["n", "\[RightVector]"], ",", 
         RowBox[{"k", ";", 
          OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["u", "\[RightVector]"], 
         RowBox[{
          OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}]], "-", " ", 
        SubscriptBox[
         OverscriptBox["u", "\[RightVector]"], 
         RowBox[{
          OverscriptBox["m", "\[RightVector]"], ",", " ", "j"}]]}], ")"}], 
      " "}]}]}]}], TraditionalForm]]]], "DetailNotes",
 CellChangeTimes->{{3.6008875035133104`*^9, 3.6008875050703993`*^9}},
 CellID->413013362],

Cell[TextData[{
 "In general, we have one such equation for each ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}], TraditionalForm]]],
 " pair.",
 " ",
 "A trial solution of the form: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["u", "\[RightVector]"], 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", " ", "k", " "}]], "(", "t", 
     ")"}], "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
       OverscriptBox["q", "\[RightVector]"], ")"}], 
      SqrtBox[
       SubscriptBox["m", "k"]]], " ", 
     SuperscriptBox["e", 
      RowBox[{"I", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "\[RightVector]"], 
           OverscriptBox["n", "\[RightVector]"]], ".", " ", 
          OverscriptBox["q", "\[RightVector]"]}], " ", "-", " ", 
         RowBox[{"\[Omega]", " ", "t"}]}], ")"}]}]]}]}], TraditionalForm]]],
 " can be used to decouple this system, resulting in a single equation for \
each ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass of the form"
}], "DetailNotes",
 CellChangeTimes->{3.601209052017712*^9},
 CellID->160232404],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
     OverscriptBox["q", "\[RightVector]"], ")"}]}], " ", "=", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", 
      RowBox[{"k", " ", "\[NotEqual]", " ", 
       OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
    RowBox[{
     SubscriptBox["K", 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", 
       RowBox[{"k", ";", 
        OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
     SubscriptBox["Proj", 
      SubscriptBox[
       OverscriptBox["a", "^"], 
       RowBox[{
        OverscriptBox["n", "\[RightVector]"], ",", 
        RowBox[{"k", ";", 
         OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
         OverscriptBox["q", "\[RightVector]"], ")"}], 
        SubscriptBox["m", "k"]], "-", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox[
           OverscriptBox["\[Epsilon]", "\[RightVector]"], "j"], "(", 
          OverscriptBox["q", "\[RightVector]"], ")"}], 
         SqrtBox[
          RowBox[{
           SubscriptBox["m", "k"], 
           SubscriptBox["m", "j"]}]]], 
        SuperscriptBox["e", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox[
              OverscriptBox["r", "\[RightVector]"], 
              OverscriptBox["m", "\[RightVector]"]], " ", "-", " ", 
             SubscriptBox[
              OverscriptBox["r", "\[RightVector]"], 
              OverscriptBox["n", "\[RightVector]"]]}], ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}]}]]}]}], ")"}]}]}]}], 
  TraditionalForm]]]], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.5980567961741514`*^9}, {
  3.5991430414266324`*^9, 3.5991431578722925`*^9}, {3.5991432045039597`*^9, 
  3.5991434204693127`*^9}, {3.599995184437109*^9, 3.599995299044664*^9}, {
  3.5999955623567247`*^9, 3.59999570266675*^9}, {3.599995845419915*^9, 
  3.599996134802467*^9}, {3.5999964591490183`*^9, 3.599996636408157*^9}, {
  3.6000782740315385`*^9, 3.6000782764963427`*^9}, {3.6000800168821993`*^9, 
  3.600080195362113*^9}, {3.6000802877454753`*^9, 3.6000802964814906`*^9}, {
  3.600819379450795*^9, 3.6008194857548757`*^9}, {3.6008195456733027`*^9, 
  3.6008197257836046`*^9}, {3.600819776466503*^9, 3.6008198064982214`*^9}, {
  3.600819885519741*^9, 3.6008199013896484`*^9}, {3.6008233445915885`*^9, 
  3.6008233557062244`*^9}, {3.600823461634283*^9, 3.6008234639174137`*^9}},
 CellID->323301769],

Cell[TextData[{
 "This describes all the steady state lattice vibrations, the normal modes, \
that can be modelled by this trial solution. Here ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " is a vector in reciprocal space, effectively parameterizing the angular \
velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", " ", "=", " ", 
    RowBox[{"\[Omega]", "(", 
     OverscriptBox["q", "\[RightVector]"], ")"}]}], TraditionalForm]], 
  "InlineMath"],
 ". The vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    FormBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
           OverscriptBox["q", "\[RightVector]"], ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     TraditionalForm], "k"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ", is an eigenvector of the equations of motion of the system for this \
assumed solution, where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "2"], TraditionalForm]], "InlineMath"],
 " are the eigenvalues of this system. For an N-atom basis, there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "N"}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " such ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "2"], TraditionalForm]], "InlineMath"],
 " eigenvalues per ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " point, each resulting in a different characteristic motion."
}], "DetailNotes",
 CellChangeTimes->{{3.6008875562233257`*^9, 3.600887556236326*^9}, {
  3.6012090526877794`*^9, 3.6012090538738976`*^9}, {3.6013825361482735`*^9, 
  3.601382742763091*^9}},
 CellID->72937650],

Cell[TextData[{
 "The rank of the resulting eigenvalue problem depends on the number of \
masses per unit cell, but the complexity of the matrix expression depends on \
the number of neighboring interactions that are considered.",
 " ",
 "For example, given lattice vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], ",", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ", diagonals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], "=", 
     RowBox[{
      OverscriptBox["a", "\[RightVector]"], " ", "+", " ", 
      OverscriptBox["b", "\[RightVector]"]}]}], ",", " ", 
    RowBox[{
     OverscriptBox["s", "\[RightVector]"], "=", 
     RowBox[{
      OverscriptBox["a", "\[RightVector]"], " ", "-", " ", 
      OverscriptBox["b", "\[RightVector]"], " "}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", and a one atom basis, where each unit cell contains a single mass coupled \
with harmonic oscillator forces between only nearest neighbors, the normal \
mode solutions follow from the solution of the eigenvalue problem"
}], "DetailNotes",
 CellChangeTimes->{{3.6008875562233257`*^9, 3.600887556623348*^9}, {
   3.6008880360077677`*^9, 3.600888037934878*^9}, 3.601209054354946*^9},
 CellID->69846009],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SuperscriptBox["\[Omega]", "2"], "0"},
         {"0", 
          SuperscriptBox["\[Omega]", "2"]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], " ", 
     OverscriptBox["\[Epsilon]", "\[RightVector]"]}], " ", "=", " ", 
    RowBox[{
     FractionBox["4", "m"], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"1", " "}]], 
        OverscriptBox["a", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["a", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["a", "\[RightVector]"], " ", ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"2", " "}]], 
        OverscriptBox["b", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["b", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["b", "\[RightVector]"], " ", ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", "3"], 
        OverscriptBox["r", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["r", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             OverscriptBox["b", "\[RightVector]"], " ", "+", " ", 
             OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", "4"], 
        OverscriptBox["s", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["s", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             OverscriptBox["b", "\[RightVector]"], " ", "-", " ", 
             OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}]}],
       ")"}], 
     OverscriptBox["\[Epsilon]", "\[RightVector]"]}]}], TraditionalForm]], 
  "InlineMath"],
 "   ",
 " "
}], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.598056894559779*^9}, {
   3.598056950150959*^9, 3.5980569832608523`*^9}, {3.598057031767627*^9, 
   3.598057031774627*^9}, {3.598057330464711*^9, 3.598057330604719*^9}, {
   3.5980584907700768`*^9, 3.5980584911520987`*^9}, {3.5991428674046793`*^9, 
   3.5991429352825613`*^9}, 3.5991434894172564`*^9, {3.599143745937928*^9, 
   3.599143747597023*^9}, {3.599144339776894*^9, 3.599144393338958*^9}, {
   3.5999961526324863`*^9, 3.599996166069255*^9}, {3.6000802839234686`*^9, 
   3.6000802840794687`*^9}, {3.600823510848098*^9, 3.6008235167144337`*^9}, {
   3.6012090548449945`*^9, 3.6012090598194923`*^9}, {3.601209092614772*^9, 
   3.6012090941649265`*^9}},
 CellID->508431597],

Cell[TextData[{
 "Controls are provided to display the dynamics associated with each of the \
characteristic angular frequencies ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]]],
 ", for given reciprocal vector values ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 "."
}], "DetailNotes",
 CellID->122369289],

Cell[TextData[{
 "Three tabs are provided in this Demonstration. The primary tab displays the \
dynamics of the solution for particular pair of (",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "(", 
    OverscriptBox["q", "\[RightVector]"], ")"}], TraditionalForm]]],
 ") values. In that tab, selecting run for the time control will animate the \
lattice vibrations. A scaling control is provided to alter the initial \
magnitude of the eigenvectors, tantamount to picking the initial time \
boundary value constraints. Note that it is possible to select physically \
unrealistic scaling factors that allow for collisions that are not modelled \
by this system."
}], "DetailNotes",
 CellChangeTimes->{
  3.601208839708481*^9, {3.6012090601785283`*^9, 3.6012090619407043`*^9}, {
   3.601382813834156*^9, 3.601382893437709*^9}},
 CellID->476930990],

Cell[TextData[{
 "A second tab provides the dispersion relation, the dependence of angular \
velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "(", 
    OverscriptBox["q", "\[RightVector]"], ")"}], TraditionalForm]]],
 " on all ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " points."
}], "DetailNotes",
 CellChangeTimes->{
  3.601209062576768*^9, {3.6013829455216885`*^9, 3.6013829491098933`*^9}},
 CellID->450664638],

Cell[TextData[{
 "Finally, a parameters tab provides controls for the spring constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]], 
  "InlineMath"],
 ", the primitive unit cell lattice vectors ",
 Cell[BoxData[
  RowBox[{
   OverscriptBox["a", "\[RightVector]"], ",", 
   OverscriptBox["b", "\[RightVector]"]}]], "InlineMath"],
 ", and the positions of the masses ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 " within each unit cell of the lattice. Additional mass position locators, \
up to five total, may be added or deleted by Alt-clicking on the lattice cell \
in the desired location. For mass locator removal, it is neccessary to adjust \
one of the other locators so that the remove takes effect. Note that it is \
possible to select equilibrium mass positions that are too proximate, leading \
to physically unrealistic dynamics, such as masses passing through each other."
}], "DetailNotes",
 CellChangeTimes->{{3.600966198344832*^9, 3.600966236435011*^9}, {
  3.6012090632078314`*^9, 3.6012090644089513`*^9}, {3.601382988189129*^9, 
  3.6013829971846433`*^9}},
 CellID->557416845],

Cell["\<\
Note that the total number of interactions, even when those interactions are \
restricted to just the neighboring lattice cells, increases fast as \
additional masses per cell are added. For example, with three masses per unit \
cell, considering only the neighboring and origin cells, there are 29 \
interactions possible for each mass. To simplify the physical constants \
dialog, which would get unwieldy if methods to choose from all possible \
couplings, distinct \"spring constant\" selection is only available for a \
subset of the possible interactions. This imposes the following respective \
constraints along the \"horizontal\", \"vertical\", \"NE diagonal\", and \"NW \
diagonal\" directions connecting the masses across the cells\
\>", "DetailNotes",
 CellChangeTimes->{{3.6008880438402157`*^9, 3.600888044919277*^9}, {
  3.6012090650310135`*^9, 3.6012090662031307`*^9}},
 CellID->204245605],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], ")"}]}], ",", "j"}]]}], 
   TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], ")"}]}], ",", "j"}]]}], 
   TraditionalForm]]],
 " ."
}], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.598056894559779*^9}, {
   3.598056950150959*^9, 3.5980569832608523`*^9}, {3.598057031767627*^9, 
   3.598057031774627*^9}, {3.598057330464711*^9, 3.598057446094325*^9}, {
   3.59805756332403*^9, 3.5980575811080475`*^9}, {3.5980576945015335`*^9, 
   3.5980577077462907`*^9}, {3.5980585058849416`*^9, 3.598058539899887*^9}, {
   3.5982726803130836`*^9, 3.598272680323084*^9}, {3.598396857147249*^9, 
   3.598396862212539*^9}, 3.5983970077038608`*^9, {3.5986527341628847`*^9, 
   3.598652736497018*^9}, {3.599142949402369*^9, 3.599142973472746*^9}, {
   3.599144400390361*^9, 3.5991444194934535`*^9}, {3.599144544232588*^9, 
   3.599144772358636*^9}, {3.5991448024383564`*^9, 3.599144812883954*^9}, {
   3.599996318317963*^9, 3.599996379259449*^9}, {3.600076492258809*^9, 
   3.600076523646064*^9}, {3.6000766422374725`*^9, 3.600076689224755*^9}, {
   3.6000767765225077`*^9, 3.6000772270044994`*^9}, {3.6000776433692303`*^9, 
   3.6000781070644455`*^9}, {3.60007816099374*^9, 3.600078188605788*^9}, {
   3.60007853087039*^9, 3.6000790980561857`*^9}, {3.60007913498145*^9, 
   3.6000792378012314`*^9}, {3.6000792689076858`*^9, 3.600079283852512*^9}, {
   3.6000793585454435`*^9, 3.6000793899326982`*^9}, {3.6000794650156302`*^9, 
   3.600079471318041*^9}, {3.600887622755131*^9, 3.6008876400591207`*^9}},
 CellID->325571302],

Cell[TextData[{
 "These are labeled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]], "InlineMath"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]], "InlineMath"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "3"], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "4"], TraditionalForm]], "InlineMath"],
 " in the parameters tab respectively. For example, the first identity above \
is the imposition of an equality constraint on the coupling constants in the \
\"left\" and \"right\" directions separating masses in neighboring \
\"horizontal\" cells (when the lattice is square). Those are the interactions \
directed primarily along the lattice vector directions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    OverscriptBox["a", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 " (primarily since these directions are also adjusted for the positions of \
the masses within the respective cells if different).",
 " ",
 "Similarly, the same coupling constants are used for each of the pairs of \
directions in the that are directed primarily along the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ", \[PlusMinus](",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], " ", "+", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 "), \[PlusMinus](",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], " ", "-", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ") directions separating the lattice cells."
}], "DetailNotes",
 CellChangeTimes->{{3.6008880598061285`*^9, 3.600888064512398*^9}, {
  3.6012090668131914`*^9, 3.6012090675292635`*^9}},
 CellID->64527093],

Cell[TextData[{
 "When there is when there is more than mass per unit cell, distinct coupling \
constants for the intra-cell interactions between the masses within the \
origin unit cell may be selected (i.e. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["0", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["0", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]]],
 ").",
 " ",
 "These are labeled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "5"], TraditionalForm]], "InlineMath"],
 " in the parameters tab."
}], "DetailNotes",
 CellChangeTimes->{{3.600887684261649*^9, 3.6008876842696495`*^9}, 
   3.6008880700537148`*^9, 3.6012090681853285`*^9},
 CellID->209290908],

Cell["\<\
General theory describing oscillations around lattice equilibrium points can \
be found in:\
\>", "DetailNotes",
 CellID->30163790],

Cell["\<\
Neil W Ashcroft and N David Mermin. Solid State Physics. Holt, Rinehart and \
Winston, New York, 1976. Chapters 21, 22.\
\>", "DetailNotes",
 CellChangeTimes->{3.601209069027413*^9},
 CellID->213153736]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.600887285796858*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.600887286596904*^9},
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6008872914131794`*^9},
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["one atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208909916481*^9}},
 CellID->476564237],

Cell["two atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208912380481*^9}},
 CellID->245358486],

Cell["n atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.6012089151324806`*^9}},
 CellID->584424833],

Cell["lattice vibration", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.6012089173234806`*^9}},
 CellID->103468090],

Cell["phonon", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208919819481*^9}},
 CellID->21953905],

Cell["reciprocal lattice vector", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208922747481*^9}},
 CellID->733906711],

Cell["angular frequency", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208922739481*^9}},
 CellID->200946478]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Analysis of Lattice Vibrations in Two Dimensions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
AnalysisOfLatticeVibrationsInTwoDimensions/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
AnalysisOfLatticeVibrationsInTwoDimensions/"]], "RelatedLinks",
 CellChangeTimes->{{3.598398001761718*^9, 3.5983980017637177`*^9}, {
  3.5983985448847823`*^9, 3.598398544890783*^9}},
 CellID->24498121],

Cell[TextData[ButtonBox["Motion of Atoms in Crystal",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/MotionOfAtomsInCrystal/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/MotionOfAtomsInCrystal/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981123320417`*^9}, {3.5983985249356413`*^9, 
   3.5983985249386415`*^9}},
 CellID->28998832],

Cell[TextData[ButtonBox["Normal Modes in a Periodic Square Lattice",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/NormalModesInAPeriodicSquareLattice/\
"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/NormalModesInAPeriodicSquareLattice/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981127470655`*^9}, {3.5983984299812107`*^9, 
   3.598398430938265*^9}, {3.598398474839776*^9, 3.5983984748437767`*^9}},
 CellID->63968418],

Cell[TextData[ButtonBox["Simple Harmonic Motion for a Spring",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/SimpleHarmonicMotionForASpring/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/SimpleHarmonicMotionForASpring/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981127470655`*^9}, {3.5983984299812107`*^9, 
   3.5983984299832106`*^9}, {3.5983985017343144`*^9, 3.598398501741315*^9}},
 CellID->611518950]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Peeter Joot",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Peeter+Joot"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Peeter+Joot"]
}], "Author",
 CellChangeTimes->{
  3.600887159561638*^9, {3.601208952954481*^9, 3.601208952959481*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[3428150, 60233, 312, 8, 30, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[3428465, 60243, 719, 17, 30, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[3429187, 60262, 381, 12, 30, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[3429571, 60276, 680, 16, 30, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[3430254, 60294, 844, 21, 30, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[3431101, 60317, 369, 9, 30, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[3431473, 60328, 1464, 31, 30, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[3432940, 60361, 908, 21, 30, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 3438188, 60513},
 {"RotateAndZoomIn3D", 3438300, 60516},
 {"DragLocators", 3438413, 60519},
 {"CreateAndDeleteLocators", 3438532, 60522},
 {"SliderZoom", 3438649, 60525},
 {"GamepadControls", 3438758, 60528},
 {"AutomaticAnimation", 3438874, 60531},
 {"BookmarkAnimation", 3438994, 60534}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 101, 1, 98, "DemoTitle"],
Cell[CellGroupData[{
Cell[705, 27, 60, 1, 365, "InitializationSection",
 InitializationCell->True],
Cell[768, 30, 116995, 2693, 14082, "Input",
 InitializationCell->True,
 CellID->454600298]
}, Open  ]],
Cell[CellGroupData[{
Cell[117800, 2728, 29, 0, 311, "ManipulateSection"],
Cell[CellGroupData[{
Cell[117854, 2732, 87542, 1798, 9766, "Input",
 CellID->106836794],
Cell[205399, 4532, 118163, 2278, 606, "Output",
 CellID->415749290]
}, Open  ]],
Cell[323577, 6813, 106, 2, 32, "Input",
 CellID->73064412]
}, Open  ]],
Cell[CellGroupData[{
Cell[323720, 6820, 36, 0, 228, "ManipulateCaptionSection"],
Cell[323759, 6822, 1155, 18, 106, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324951, 6845, 28, 0, 229, "ThumbnailSection"],
Cell[324982, 6847, 1199865, 20350, 606, "Output",
 CellID->379559828]
}, Open  ]],
Cell[CellGroupData[{
Cell[1524884, 27202, 28, 0, 189, "SnapshotsSection"],
Cell[1524915, 27204, 838020, 14368, 606, "Output",
 CellID->570419063],
Cell[2362938, 41574, 357844, 6344, 598, "Output",
 CellID->222699939],
Cell[2720785, 47920, 679219, 11510, 598, "Output",
 CellID->21486365]
}, Open  ]],
Cell[CellGroupData[{
Cell[3400041, 59435, 26, 0, 452, "DetailsSection"],
Cell[3400070, 59437, 1774, 56, 68, "DetailNotes",
 CellID->143536934],
Cell[3401847, 59495, 2521, 81, 66, "DetailNotes",
 CellID->185095190],
Cell[3404371, 59578, 1466, 42, 50, "DetailNotes",
 CellID->413013362],
Cell[3405840, 59622, 1371, 44, 74, "DetailNotes",
 CellID->160232404],
Cell[3407214, 59668, 2874, 70, 55, "DetailNotes",
 CellID->323301769],
Cell[3410091, 59740, 2355, 64, 76, "DetailNotes",
 CellID->72937650],
Cell[3412449, 59806, 1327, 32, 72, "DetailNotes",
 CellID->69846009],
Cell[3413779, 59840, 3782, 100, 59, "DetailNotes",
 CellID->508431597],
Cell[3417564, 59942, 375, 11, 29, "DetailNotes",
 CellID->122369289],
Cell[3417942, 59955, 958, 21, 68, "DetailNotes",
 CellID->476930990],
Cell[3418903, 59978, 488, 15, 29, "DetailNotes",
 CellID->450664638],
Cell[3419394, 59995, 1332, 30, 96, "DetailNotes",
 CellID->557416845],
Cell[3420729, 60027, 914, 14, 86, "DetailNotes",
 CellID->204245605],
Cell[3421646, 60043, 3421, 94, 38, "DetailNotes",
 CellID->325571302],
Cell[3425070, 60139, 1908, 51, 93, "DetailNotes",
 CellID->64527093],
Cell[3426981, 60192, 733, 21, 58, "DetailNotes",
 CellID->209290908],
Cell[3427717, 60215, 141, 4, 28, "DetailNotes",
 CellID->30163790],
Cell[3427861, 60221, 212, 5, 28, "DetailNotes",
 CellID->213153736]
}, Open  ]],
Cell[CellGroupData[{
Cell[3428110, 60231, 37, 0, 168, "ControlSuggestionsSection"],
Cell[3428150, 60233, 312, 8, 30, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[3428465, 60243, 719, 17, 30, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[3429187, 60262, 381, 12, 30, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[3429571, 60276, 680, 16, 30, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[3430254, 60294, 844, 21, 30, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[3431101, 60317, 369, 9, 30, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[3431473, 60328, 1464, 31, 30, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[3432940, 60361, 908, 21, 30, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3433885, 60387, 30, 0, 208, "SearchTermsSection"],
Cell[3433918, 60389, 174, 3, 28, "SearchTerms",
 CellID->476564237],
Cell[3434095, 60394, 174, 3, 28, "SearchTerms",
 CellID->245358486],
Cell[3434272, 60399, 174, 3, 28, "SearchTerms",
 CellID->584424833],
Cell[3434449, 60404, 179, 3, 28, "SearchTerms",
 CellID->103468090],
Cell[3434631, 60409, 165, 3, 28, "SearchTerms",
 CellID->21953905],
Cell[3434799, 60414, 185, 3, 28, "SearchTerms",
 CellID->733906711],
Cell[3434987, 60419, 177, 3, 28, "SearchTerms",
 CellID->200946478]
}, Open  ]],
Cell[CellGroupData[{
Cell[3435201, 60427, 31, 0, 188, "RelatedLinksSection"],
Cell[3435235, 60429, 468, 10, 28, "RelatedLinks",
 CellID->24498121],
Cell[3435706, 60441, 486, 11, 28, "RelatedLinks",
 CellID->28998832],
Cell[3436195, 60454, 575, 12, 28, "RelatedLinks",
 CellID->63968418],
Cell[3436773, 60468, 564, 12, 28, "RelatedLinks",
 CellID->611518950]
}, Open  ]],
Cell[CellGroupData[{
Cell[3437374, 60485, 25, 0, 188, "AuthorSection"],
Cell[3437402, 60487, 384, 11, 28, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
