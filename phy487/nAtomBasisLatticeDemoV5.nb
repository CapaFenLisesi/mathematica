(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   3758727,      65902]
NotebookOptionsPosition[   3752796,      65726]
NotebookOutlinePosition[   3754445,      65776]
CellTagsIndexPosition[   3754093,      65764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Phonon Modes for 2D Lattice Vibrations", "DemoTitle",
 CellChangeTimes->{3.600887141142584*^9}],

Cell[CellGroupData[{

Cell["", "InitializationSection",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "glConstMinSquaredDistanceFromOrigin", ",", 
      "glConstMinAngleBetweenLatticeVectors", ",", "glConstLocDefault", ",", 
      "glConstDefaultMass", ",", "glConstKDefaults", ",", "glConstKMin", ",", 
      "glConstKMax", ",", "glConstMMax", ",", "glConstWindowHalfWidth", ",", 
      "glConstSpringColors", ",", "glConstPrimaryDisplaySize", ",", 
      "glConstTextDisplayOffsetHack", ",", "glConstNeighboringCellIndexes", 
      ",", "glConstDynPlotRange", ",", "glConstSpringColorsByN"}], "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstMinSquaredDistanceFromOrigin", " ", "=", " ", "0.1"}], 
    " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstMinAngleBetweenLatticeVectors", "=", 
     RowBox[{"Pi", "/", "6"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstLocDefault", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "1.3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "0.8"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstDefaultMass", "=", "20"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKDefaults", "=", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25", ",", "0.25", ",", "0.25", ",", "0.25"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKMin", "=", "0.05"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstKMax", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstMMax", "=", "30"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstWindowHalfWidth", "=", "3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstSpringColors", "=", 
     RowBox[{"Darker", "@", 
      RowBox[{"{", 
       RowBox[{
       "Orange", ",", "Green", ",", "Purple", ",", "Cyan", ",", "Yellow"}], 
       "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstPrimaryDisplaySize", "=", 
     RowBox[{"{", 
      RowBox[{"380", ",", "380"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstTextDisplayOffsetHack", "=", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"glConstNeighboringCellIndexes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstDynPlotRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "glConstWindowHalfWidth"}], "/", "2"}], ",", " ", 
         "glConstWindowHalfWidth"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "glConstWindowHalfWidth"}], "/", "2"}], ",", " ", 
         "glConstWindowHalfWidth"}], "}"}]}], "}"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"RGBColor", "[", "...", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], "\[Rule]", 
       RowBox[{"RGBColor", "[", "...", "]"}]}], ",", " ", "..."}], "}"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glConstSpringColorsByN", " ", "=", " ", 
     RowBox[{"DeleteDuplicates", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", " ", 
            RowBox[{
             RowBox[{"Append", "[", 
              RowBox[{"glConstNeighboringCellIndexes", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], " ", "\[Rule]", " ", 
           RowBox[{"glConstSpringColors", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"s", ",", " ", 
            RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "5"}], "}"}]}], " ", "]"}], ",", "1"}], 
       "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Future", " ", "possible", " ", "maintainance", " ", 
     RowBox[{"TODOs", ":", "\[IndentingNewLine]", GridBox[{
        {
         RowBox[{
          RowBox[{
          "implement", " ", "a", " ", "min", " ", "separation", " ", "for", 
           " ", "the", " ", "equilibrium", " ", "mass", " ", "positions", " ",
            "too", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "as", " ", "done", " ", "for", " ", "the", " ", "lattice", " ", 
              "vectors"}], ")"}], ".", " ", "\[IndentingNewLine]", 
            "Trickier"}]}], ",", " ", 
          RowBox[{
          "since", " ", "that", " ", "should", " ", "be", " ", "based", " ", 
           "on", " ", "the", " ", "separations", " ", "in", " ", "the", " ", 
           "origin", " ", "cell"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
          "and", " ", "not", " ", "the", " ", "obsolute", " ", "separations", 
           " ", "of", " ", "the", " ", 
           RowBox[{"locators", ".", "\[IndentingNewLine]", "Even"}], " ", 
           "if", " ", "that", " ", "is", " ", "done"}], ",", " ", 
          RowBox[{"that", " ", 
           RowBox[{"doesn", "'"}], "t", " ", "mean", " ", "that", " ", "the", 
           " ", "scaling", " ", 
           RowBox[{"won", "'"}], "t", " ", "allow", " ", "for", " ", 
           "overlap", " ", "in", " ", "the", " ", "dynamic", " ", 
           RowBox[{"tab", "."}]}]}]},
        {
         RowBox[{
         "would", " ", "be", " ", "cool", " ", "to", " ", "make", " ", "qLoc",
           " ", "a", " ", "pair", " ", "of", " ", "Locators", " ", 
          RowBox[{"that", ":", "\[IndentingNewLine]", " ", 
           RowBox[{
           "trace", " ", "out", " ", "constrained", " ", "positions", " ", 
            "along", " ", "the", " ", "2", " ", "Pi", " ", "scaled", " ", 
            "reciprocal", " ", "lattice", " ", 
            RowBox[{"vectors", ".", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
              "returning", " ", "the", " ", "distance", " ", "from", " ", 
               "the", " ", "origin", " ", "of", " ", "each", " ", "of", " ", 
               "those", " ", "locators"}], ")"}]}]}]}]}]},
        {
         RowBox[{"a", " ", "message", " ", "box", " ", "on", " ", "user", " ", 
          RowBox[{"error", ":", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"-", " ", "when"}], " ", "an", " ", "angle", " ", "or", 
            " ", "distance", " ", "from", " ", "origin", " ", "change", " ", 
            "has", " ", "driven", " ", "a", " ", "reset", " ", "of", " ", 
            "the", " ", "lattice", " ", 
            RowBox[{"vectors", ".", "\[IndentingNewLine]", 
             RowBox[{"-", " ", "when"}]}], " ", "too", " ", "many", " ", "of",
             " ", "the", " ", "locators", " ", "have", " ", "been", " ", 
            "deleted", " ", "and", " ", "a", " ", "forced", " ", "reset", " ",
             "to", " ", "the", " ", "defaults", " ", 
            RowBox[{"occurs", "."}]}]}]}]},
        {
         RowBox[{
         "Can", " ", "the", " ", "frequency", " ", "qPlaneLoc", " ", 
          "LocatorPane", " ", "look", " ", "more", " ", "like", " ", 
          "Slider2D", " ", "in", " ", "the", " ", "dynamics", " ", "tab", " ",
           "for", " ", 
          RowBox[{"consistency", "?"}]}]},
        {
         RowBox[{
          RowBox[{
          "Am", " ", "using", " ", "a", " ", "calculated", " ", "value", " ", 
           "for", " ", "the", " ", "max", " ", "freq", " ", "for", " ", "the",
            " ", "freq", " ", "plot", " ", "intersection", " ", 
           RowBox[{"plane", ".", " ", "\[IndentingNewLine]", "Hardcoded"}], 
           " ", "this", " ", "to", " ", "magic", " ", "#", " ", 
           RowBox[{"that", "'"}], "s", " ", "out", " ", "of", " ", "the", " ",
            "graphic", " ", 
           RowBox[{"(", "23", ")"}]}], ",", " ", 
          RowBox[{
          "but", " ", "that", " ", "could", " ", "be", " ", "wrong", " ", 
           "for", " ", "some", " ", "params"}]}]},
        {
         RowBox[{
          RowBox[{
          "Scaling", " ", "of", " ", "the", " ", "masses", " ", "ended", " ", 
           "up", " ", "different", " ", "for", " ", "the", " ", "dynPlot", 
           " ", 
           RowBox[{"vs", ".", " ", "parameters"}], " ", 
           RowBox[{"tab", ".", " ", "\[IndentingNewLine]", "Hacked"}], " ", 
           "the", " ", "dynPlot", " ", "scaling", " ", "for", " ", "now"}], 
          ",", " ", 
          RowBox[{"to", " ", "be", " ", "a", " ", "bit", " ", 
           RowBox[{"closer", "."}]}]}]}
       },
       GridBoxDividers->{
        "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{True}}, "RowsIndexed" -> {}}]}]}], "\[IndentingNewLine]",
     "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "checkAgainstRange", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"checkAgainstRange", "::", "usage"}], " ", "=", " ", 
     "\"\<This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator.\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"checkAgainstRange", "[", 
      RowBox[{
      "v_", ",", "default_", ",", "lowerLimit_", ",", " ", "upperLimit_", ",",
        " ", 
       RowBox[{"typeFunc_", " ", ":", " ", "NumberQ"}]}], "]"}], " ", ":=", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"typeFunc", "[", "v", "]"}], ",", "v", ",", " ", 
           "default"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", "<=", " ", "upperLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", ">=", " ", "lowerLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "springPoints", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Based", " ", "on", " ", "my", " ", "ListLinePlot", " ", "answer", " ", 
     "posted", " ", 
     RowBox[{"in", ":", " ", 
      ButtonBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
           "a"}], "/", "37228"}], "/", "10"}]}],
       BaseStyle->"Hyperlink",
       ButtonData->{
         URL["http://mathematica.stackexchange.com/a/37228/10"], None},
       ButtonNote->"http://mathematica.stackexchange.com/a/37228/10"]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"springPoints", "::", "usage"}], " ", "=", " ", 
     "\"\<springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"springPoints", "[", " ", 
      RowBox[{"a12_List", ",", " ", 
       RowBox[{"n_Integer:", "8"}], ",", 
       RowBox[{"h_:", ".05"}], ",", " ", 
       RowBox[{"f_:", " ", "0.1"}]}], " ", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a1", ",", " ", "a2", ",", " ", "n1", ",", " ", "springDiff", ",", 
         " ", "nd", ",", " ", "r", ",", " ", "r1"}], " ", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", " ", "a2"}], "}"}], " ", "=", " ", "a12"}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"n1", " ", "=", " ", 
         RowBox[{"Norm", "[", "a1", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"springDiff", " ", "=", " ", 
         RowBox[{"a2", " ", "-", " ", "a1"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nd", " ", "=", " ", 
         RowBox[{"Norm", "[", "springDiff", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"ArcTan", " ", "@@", "  ", "springDiff"}], " ", "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"r1", " ", "=", " ", 
         RowBox[{"r", " ", ".", " ", 
          RowBox[{"{", 
           RowBox[{"n1", ",", " ", "0"}], "}"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", " ", 
                 RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                 RowBox[{"t", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}]}], ",", " ", 
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", " ", 
                  RowBox[{"2", " ", "Pi", " ", "n", " ", "t"}], "]"}]}]}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", " ", 
                 RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}], " ", "+", " ", 
                 RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"n1", " ", "+", 
                 RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
               "}"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], 
             " ", "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "indexLabel", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"indexLabel", "::", "usage"}], " ", "=", " ", 
     "\"\<\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indexLabel", " ", "=", " ", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#1", ",", "Italic"}], "]"}], ",", " ", "#2"}], "]"}], " ", 
      "&"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "kLable", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kLable", "::", "usage"}], " ", "=", " ", 
     "\"\<SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kLable", " ", "=", " ", 
     RowBox[{
      RowBox[{"Style", "[", " ", 
       RowBox[{
        RowBox[{"indexLabel", "[", 
         RowBox[{"\"\<k\>\"", ",", " ", "#"}], "]"}], ",", " ", 
        RowBox[{"FontColor", "\[Rule]", 
         RowBox[{"glConstSpringColors", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}]}], " ", "]"}], " ", "&"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "massColors", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"massColors", " ", ":=", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"{", " ", 
          RowBox[{
          "Blue", ",", " ", "Green", ",", " ", "Purple", ",", " ", "Red", ",",
            " ", "Orange"}], " ", "}"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", " ", "5"}], "]"}], " ", "+", " ", "1"}], "]"}], 
        " ", "]"}], " ", "&"}], " ", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "massLabel", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"massLabel", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"indexLabel", "[", 
         RowBox[{"\"\<m\>\"", ",", " ", "#"}], "]"}], ",", " ", 
        RowBox[{"massColors", "[", "#", "]"}]}], "]"}], " ", "&"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcLineTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcLineTable", "[", " ", 
      RowBox[{"n_List", ",", " ", "b_List", ",", " ", "i_List"}], " ", "]"}], 
     " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"first", ",", " ", "second"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"first", ",", " ", "second"}], "}"}], " ", "=", " ", "i"}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Line", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"n", "[", 
                 RowBox[{"[", "first", "]"}], "]"}]}], 
               RowBox[{"b", "[", 
                RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"j", " ", 
               RowBox[{"b", "[", 
                RowBox[{"[", "second", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"[", "first", "]"}], "]"}], 
               RowBox[{"b", "[", 
                RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"j", " ", 
               RowBox[{"b", "[", 
                RowBox[{"[", "second", "]"}], "]"}]}]}]}], "}"}], " ", 
           "\[IndentingNewLine]", "]"}], " ", "\[IndentingNewLine]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"-", 
             RowBox[{"n", "[", 
              RowBox[{"[", "second", "]"}], "]"}]}], ",", " ", 
            RowBox[{"n", "[", 
             RowBox[{"[", "second", "]"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcReciprocalBasis", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcReciprocalBasis", "::", "usage"}], " ", "=", " ", 
     "\"\<Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcReciprocalBasis", "[", "loc_List", "]"}], " ", ":=", " ", 
     RowBox[{"Inverse", "[", " ", 
      RowBox[{"Transpose", "[", " ", "loc", " ", "]"}], " ", "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "nMassesFromLocArray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nMassesFromLocArray", "[", "uLoc_", "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Dimensions", "[", "uLoc", "]"}], " ", "//", " ", "First"}], 
        ")"}], " ", "-", "2"}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "adjustedmoSel", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"adjustedmoSel", "[", 
      RowBox[{"rNumM_", ",", "mOrigInd_", ",", "m1Ind_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rNumM", ">", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"mOrigInd", "\[Equal]", "m1Ind"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"First", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", "rNumM", "]"}], ",", "m1Ind"}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", "mOrigInd"}], " ", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"First", "@", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Range", "[", "2", "]"}], ",", "m1Ind"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "constructKArrayElements", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constructKArrayElements", "[", " ", 
      RowBox[{"i_Integer", ",", " ", "j_Integer"}], "  ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "j", ",", " ", 
                RowBox[{"s", " ", 
                 RowBox[{"glConstNeighboringCellIndexes", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}]}], "}"}], " ", "\[Rule]", 
              " ", 
              RowBox[{"glConstKDefaults", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"s", ",", " ", 
               RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], ",",
              " ", 
             RowBox[{"{", 
              RowBox[{"n", ",", " ", "4"}], "}"}]}], " ", "]"}], ",", " ", 
           "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", " ", 
         RowBox[{
          RowBox[{"i", " ", "<", " ", "j"}], ",", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], " ", "\[Rule]", " ", 
             RowBox[{"glConstKDefaults", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}]}], "]"}], ",", " ", "a"}], " ",
          "]"}]}]}], " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "constructKArray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constructKArray", "[", " ", "r_Integer", " ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"constructKArrayElements", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "r"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "r"}], "}"}]}], "]"}], ",", " ", "2"}], "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnAlteredKArrayElements", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnAlteredKArrayElements", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "m2Ind_Integer", ",", 
       "ni_Integer", ",", "v_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"kA", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"glConstNeighboringCellIndexes", "[", 
               RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", "_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"glConstNeighboringCellIndexes", "[", 
               RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", "v"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"-", 
               RowBox[{"glConstNeighboringCellIndexes", "[", 
                RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", "_"}], "]"}],
           "\[RuleDelayed]", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "m2Ind", ",", 
              RowBox[{"-", 
               RowBox[{"glConstNeighboringCellIndexes", "[", 
                RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", "v"}], 
           "]"}]}]}], "}"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnAlteredKarrayOriginElement", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnAlteredKarrayOriginElement", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "moInd_Integer", ",", "v_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "m1oSet", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m1oSet", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"{", 
             RowBox[{"m1Ind", ",", "moInd"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"kA", "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"m1oSet", ",", "_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Rule", "[", 
            RowBox[{"m1oSet", ",", "v"}], "]"}]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "selectVFromKarray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"To", " ", "refresh", " ", "k1"}], ",", "k2", ",", "k3", ",", 
     RowBox[{
     "k4", " ", "after", " ", "changing", " ", "m1Sel", " ", "or", " ", 
      RowBox[{"m2Sel", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"selectVFromKarray", "[", 
      RowBox[{
      "kA_List", ",", "m1Ind_Integer", ",", "m2Ind_Integer", ",", 
       "ni_Integer"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m1Ind", ",", "m2Ind", ",", 
         RowBox[{"glConstNeighboringCellIndexes", "[", 
          RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], "/.", "kA"}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "selectOriginVFromKarray", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "To", " ", "refresh", " ", "k5", " ", "after", " ", "changing", " ", 
     "m1Sel", " ", "and", " ", "moSel"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"selectOriginVFromKarray", "[", 
      RowBox[{"kA_List", ",", "m1Ind_Integer", ",", "moInd_Integer"}], "]"}], 
     ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"{", 
           RowBox[{"m1Ind", ",", "moInd"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "/.", "kA"}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "returnKarrayForAdditionalMassIndex", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"returnKarrayForAdditionalMassIndex", "[", " ", 
      RowBox[{"kA_List", ",", "nmNew_Integer"}], " ", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "k2", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k2", " ", "=", " ", 
         RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"constructKArrayElements", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], ")"}], "/@",
             " ", 
            RowBox[{"(", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "nmNew"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", " ", "nmNew"}], "}"}]}], "]"}], ",", 
                 " ", "1"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Max", "[", "#", "]"}], " ", "\[Equal]", " ", 
                 "nmNew"}], " ", "&"}]}], "]"}], ")"}]}], ",", " ", "2"}], 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"kArray", ",", " ", "k2"}], "]"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kA", ",", " ", "k2"}], "}"}], ",", " ", "1"}], "]"}]}]}], 
      " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "resetLatticeVectorsIfAngleTooSmall", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"resetLatticeVectorsIfAngleTooSmall", "[", " ", 
      RowBox[{"uLoc_List", ",", "minAngle_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", " ", "=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"Normalize", "[", 
             RowBox[{"uLoc", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"uLoc", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"t", " ", ">", " ", 
            RowBox[{"Pi", "/", "2"}]}], ",", " ", 
           RowBox[{"Pi", "-", "t"}], ",", " ", "t"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"t", " ", "<", " ", "minAngle"}], ",", 
          "\[IndentingNewLine]", "glConstLocDefault", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uLoc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"uLoc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\n", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "projOpU", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOpU", "[", "v_List", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], ",", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "}"}]}], "}"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOp", "::", "usage"}], " ", "=", " ", 
     "\"\<given an input vector \!\(\*OverscriptBox[\(v\), \
\(\[RightVector]\)]\) = {\!\(\*SubscriptBox[\(v\), \(x\)]\), \
\!\(\*SubscriptBox[\(v\), \(y\)]\)}, compute the projection matrix operator \
along the unit vector in that direction.\n\n   projOp[{1, 0}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"1\", \"0\"},
{\"0\", \"0\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{0, 1}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"0\", \"0\"},
{\"0\", \"1\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{a,b}] // MatrixForm = \!\
\(\*Cell[TextData[Cell[BoxData[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{
FractionBox[
SuperscriptBox[\"a\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]},
{
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
SuperscriptBox[\"b\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}]],
CellChangeTimes->{{3.5990911441851797`*^9, 3.599091144641206*^9}, \
3.5990913830438423`*^9, 3.5990915191646276`*^9, 3.599091555028679*^9, \
3.599091735722014*^9, {3.599091916353346*^9, 3.599091928988068*^9}}]]]\)\n\
\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "projOp", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"projOp", "[", "v_List", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"projOpU", "[", "v", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"v", ".", " ", "v"}], ")"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "relativeDifferences", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"relativeDifferences", "::", "usage"}], " ", "=", " ", 
     "\"\<Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"relativeDifferences", "[", " ", 
      RowBox[{"r_List", ",", "mp_List", ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "mIndex1_Integer", ",", " ", "mIndex2_Integer", ",", " ", "n_List"}], 
        "}"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "d", ",", " ", "pOrigin", ",", " ", "pOther", ",", " ", "dn"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pOrigin", " ", "=", " ", 
         RowBox[{"mp", "[", 
          RowBox[{"[", " ", "mIndex1", " ", "]"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pOther", " ", "=", " ", 
         RowBox[{
          RowBox[{"mp", "[", 
           RowBox[{"[", " ", "mIndex2", " ", "]"}], "]"}], "+", " ", 
          RowBox[{"n", " ", ".", " ", "r"}]}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"pOther", " ", "-", " ", "pOrigin"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dn", " ", "=", " ", 
         RowBox[{"d", " ", ".", "d"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"dn", ",", " ", "pOrigin", ",", " ", "pOther", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"projOpU", "[", "d", "]"}], "/", "dn"}], "  ", 
           RowBox[{"(*", 
            RowBox[{"//", " ", "MatrixForm"}], "*)"}], ")"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calculateCouplings", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateCouplings", "::", "usage"}], " ", "=", " ", 
     "\"\<Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions.\>\""}], 
    " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateCouplings", "[", 
      RowBox[{"ld_List", ",", " ", "kA_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "t", ",", " ", "t1", ",", " ", "t2", ",", " ", "r", ",", " ", "mp", 
         ",", " ", "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", " ", "mp", ",", " ", "numberOfMasses"}], "}"}], 
         " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", " ", "\"\<mPosFirstCell\>\"", ",", 
            " ", "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"relativeDifferences", "[", 
              RowBox[{"r", ",", " ", "mp", ",", " ", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}]}], " ", "]"}], "&"}],
           "/@", " ", 
          RowBox[{"(", 
           RowBox[{"kA", "/.", " ", 
            RowBox[{"Rule", " ", "\[Rule]", " ", "List"}]}], ")"}]}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"t", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", "1"}], 
            "]"}], " ", "&"}], "/@", " ", "t"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"t1", " ", "=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Select", "[", " ", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "i"}], ")"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "\[NotEqual]", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], ")"}]}], " ", 
                 "&"}]}], "]"}], ")"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}]}], " ", "&"}]}], "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"the", " ", "rest", " ", "of", " ", "the", " ", 
          RowBox[{"permutations", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t2", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"#", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
                 "1"}], "]"}], " ", "&"}], "/@", " ", "t2"}]}], "}"}], ",", 
           " ", "1"}], "]"}]}], "  ", ";", "\[IndentingNewLine]", 
        RowBox[{"t2", " ", "=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Select", "[", " ", 
               RowBox[{"t2", ",", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                   "i"}], ")"}], " ", "&"}]}], "]"}], ")"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t2", ",", " ", "t1"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "spScaled", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spScaled", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1_List", ",", "s2_List"}], "}"}], ",", " ", "scaleKValue_", 
       ",", " ", "referenceSepSquared_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "ds", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ds", " ", "=", " ", 
         RowBox[{"s2", " ", "-", " ", "s1"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"springPoints", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2"}], "}"}], ",", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"12", " ", "scaleKValue", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"ds", ".", "ds"}], ")"}], "/", "referenceSepSquared"}],
              "]"}]}], "]"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "oneTermOfdynamicsMatrix", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneTermOfdynamicsMatrix", "::", "usage"}], " ", "=", " ", 
     "\"\<\!\(TraditionalForm\`\(grab\\\ data\\\ \(from : \\\ \
rawArrayOfMasses\), \\\ parameterLocatorDependencies, \
\[IndentingNewLine]\(\(couplingData[\([_]\)]\)[\([_]\)]\)[\([_]\)]\\\  = \\\ \
{k, \\\ j, \\\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \\\ \
\*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\\  + \\\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]
ex : \\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]
to\\\ form\\\ equations\\\ of\\\ the\\\ \(form : \
\[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\\  = \\\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\\  \[NotEqual] \\\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\\ \
\((\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\
\[RightVector]\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), \
SubscriptBox[\(m\), \(k\)]] - \\\ \
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(j\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), \
SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \*SubscriptBox[\(m\), \(j\)]\)]] \
\*SuperscriptBox[\(e\), \(I\\\ \((\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\\  . \\\ \
\*OverscriptBox[\(q\), \(\[RightVector]\)]\\\ )\)\)])\)\[IndentingNewLine]
Note\\\ that\\\ qVec\\\ here\\\ is\\\ intended\\\ to\\\ be\\\ an\\\ undefined\
\\\ global . \\\ \\\ Is\\\ there\\\ a\\\ way\\\ to\\\ do\\\ that\\\ \
\(\(programatically\)\(?\)\)\)\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneTermOfdynamicsMatrix", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "k_Integer", ",", " ", "j_Integer", ",", " ", "mVec_List", ",", " ", 
         "kS_", ",", " ", "_", ",", "_", ",", "_", ",", "proj_List"}], "}"}], 
       ",", " ", "r_List", ",", " ", "mk_", ",", " ", "epsilon_List", ",", 
       " ", "mA_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"kS", " ", 
       RowBox[{"proj", "  ", ".", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"epsilon", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "/", "mk"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"epsilon", "[", 
            RowBox[{"[", "j", "]"}], "]"}], 
           RowBox[{
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"mVec", " ", ".", " ", "r"}], ")"}], ".", " ", 
                 "qVec"}], ")"}]}], ")"}]}], "/", 
            RowBox[{"Sqrt", "[", " ", 
             RowBox[{"mk", " ", 
              RowBox[{"mA", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}]}]}]}], ")"}]}]}], 
      "  ", ")"}]}], "  ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "dynamicsMatrix", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsMatrix", "[", 
      RowBox[{"ld_List", ",", " ", "cd_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cdFlatAndSorted", ",", " ", "r", ",", " ", "res", ",", " ", 
         "epsilon", ",", " ", "m", ",", "mScalarArray", ",", " ", 
         "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cdFlatAndSorted", " ", "=", " ", 
         RowBox[{"SplitBy", "[", " ", 
          RowBox[{
           RowBox[{"Sort", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"cd", ",", " ", "2"}], "]"}]}], " ", ",", " ", "First"}],
           " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "mScalarArray", ",", " ", "numberOfMasses"}], 
          "}"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", 
            " ", "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}],
         " ", ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Here", " ", 
            SubscriptBox[
             OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], " ", 
            RowBox[{"(", 
             RowBox[{"=", 
              RowBox[{"epsilon", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ")"}], " ", "is", " ", 
            "represented", " ", "as", " ", "a", " ", "2", "x", 
            RowBox[{"(", 
             RowBox[{"2", "N"}], ")"}], " ", "matrix", " ", "with", " ", 
            "the", " ", "vector", " ", "factored", " ", 
            RowBox[{"out", ".", "  ", "For"}], " ", "example", " ", "with", 
            " ", "N"}], " ", "=", " ", "3"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Epsilon]", "\[RightVector]"], "1"], "=", " ", 
           RowBox[{
            RowBox[{
             TagBox[
              RowBox[{"(", "\[NoBreak]", GridBox[{
                 {"1", "0", "0", "0", "0", "0"},
                 {"0", "1", "0", "0", "0", "0"}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
              Function[BoxForm`e$, 
               MatrixForm[BoxForm`e$]]], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "This", " ", "will", " ", "be", " ", 
             "pre"}], "-", 
            RowBox[{
            "multiplied", " ", "by", " ", "a", " ", "2", "x2", " ", 
             "projection", " ", 
             RowBox[{"matrix", ".", "\[IndentingNewLine]", "The"}], " ", 
             "whole", " ", "thing", " ", "should", " ", "be", " ", 
             "logically", " ", "treated", " ", "as", " ", "if", " ", "it", 
             " ", "is", " ", "post"}], "-", 
            RowBox[{
            "multiplied", " ", "by", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", Cell[TextData[Cell[BoxData[
              TagBox[
               RowBox[{"(", "\[NoBreak]", GridBox[{
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "2"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "2"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "1"}]]},
                  {
                   SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "2"}]]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
               Function[BoxForm`e$, 
                MatrixForm[BoxForm`e$]]]],
              
              CellChangeTimes->{{3.600871330362259*^9, 
               3.6008713538916054`*^9}}]]]}]}]}]}], "\[IndentingNewLine]", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"epsilon", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", " ", 
            RowBox[{"2", " ", "numberOfMasses"}], " ", "]"}], ",", "2"}], 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", " ", 
             RowBox[{
              RowBox[{"Total", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"oneTermOfdynamicsMatrix", "[", 
                   RowBox[{"#", ",", " ", "r", ",", " ", 
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "epsilon", ",", 
                    " ", "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{"cdFlatAndSorted", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ")"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "numberOfMasses"}], "}"}]}], "]"}], " ",
             "//", " ", "Flatten"}], ",", " ", 
           RowBox[{"2", " ", "numberOfMasses"}]}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", " ", "/.", " ", 
          RowBox[{"qVec", " ", "\[Rule]", " ", "#"}]}], " ", "&"}]}]}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{"cdFlatAndSorted", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{"mScalarArray", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{
         RowBox[{
          RowBox[{"oneTermOfdynamicsMatrix", "[", 
           RowBox[{"#", ",", " ", "r", ",", " ", 
            RowBox[{"mScalarArray", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "epsilon", ",", " ", 
            "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"cdFlatAndSorted", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", "res"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", "epsilon"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{";", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"oneTermOfdynamicsMatrix", "[", " ", 
            RowBox[{
            "parameterLocatorDependencies", ",", " ", "couplingData"}], " ", 
            "]"}], "[", 
           RowBox[{"#", ",", " ", "r", ",", 
            RowBox[{"mScalarArray", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "epsilon", ",", 
            "mScalarArray"}], " ", "]"}], " ", "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "calcDynamics", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcDynamics", "::", "usage"}], " ", "=", " ", 
     "\"\<a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \
\(k\)]\),\!\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for \
each of the system eigenvalues, when evaluated at qLoc.\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", ":", "\n", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ld", ",", " ", "cd", ",", " ", "basisAndMassPoints", ",", " ", 
         "kArray", ",", " ", "matrix", ",", " ", "dynamics", ",", " ", 
         "qPoint", ",", " ", "omegaIndex"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"basisAndMassPoints", " ", "=", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}]}], " ", "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ld", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{"basisAndMassPoints", ",", " ", "1", ",", 
           RowBox[{"{", "10", "}"}]}], " ", "]"}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cd", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"ld", ",", " ", "kArray"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPoint", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], "/", 
          "2"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"ld", ",", " ", "cd"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"calcDynamics", "[", " ", 
            RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}], " ", "//",
            " ", "First"}], " ", "//", " ", "TableForm"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcDynamics", "[", "mAtQ_List", "]"}], " ", ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Eigensystem", "[", " ", "mAtQ", " ", "]"}], " ", "//", " ", 
         "Transpose"}], ")"}]}], ")"}]}], "  ", ";"}], "\[IndentingNewLine]", 
   "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "frequencyPlotCalc", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"frequencyPlotCalc", "::", "usage"}], " ", "=", " ", 
     "\"\<frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"frequencyPlotCalc", "[", 
      RowBox[{"ld_List", ",", "m_", ",", "meshSz_Integer"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eigTable2D", ",", " ", "eigTable1D", ",", " ", "qMax", ",", " ", 
         "omegaPointList2D", ",", " ", "omegaPointList1D", ",", " ", "range", 
         ",", " ", "numberOfMasses"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"qMax", ",", " ", "numberOfMasses"}], "}"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<qMaxVec\>\"", ",", "\"\<numberOfMasses\>\""}], "}"}], 
          " ", "/.", " ", "ld"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"eigTable2D", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"Table", "[", "  ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"qx", ",", " ", "qy"}], "}"}], " ", ",", 
                RowBox[{"Eigenvalues", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", " ", 
                   RowBox[{"{", 
                    RowBox[{"qx", ",", " ", "qy"}], "}"}], "  ", "]"}], " ", "//",
                   " ", "N"}], " ", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"qx", ",", " ", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"qMax", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/", " ", "meshSz"}]}], 
               "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"qy", ",", " ", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"qMax", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", " ", 
                RowBox[{
                 RowBox[{"qMax", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", " ", "meshSz"}]}], 
               "}"}]}], " ", "]"}], " ", "]"}], ",", "1"}], "]"}]}], " ", ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"omegaPointList2D", "[", "nn_", "]"}], " ", ":=", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "nn", "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
          " ", "eigTable2D"}]}], "  ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"range", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "numberOfMasses"}], ")"}], " ", "//", " ", 
           "Range"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot3D", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"omegaPointList2D", "[", "#", "]"}], " ", "&"}], "/@", 
           " ", "range"}], ",", " ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}], " ", ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(q\), \(x\)]\)\>\"", ",", " ", 
             "\"\<\!\(\*SubscriptBox[\(q\), \(y\)]\)\>\""}], "}"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\n", " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "showFreqPlot", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showFreqPlot", "::", "usage"}], " ", "=", " ", 
     "\"\<showFreqPlot[ qPlaneLoc, freqPlot ]\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showFreqPlot", "[", 
      RowBox[{"qpl_List", ",", " ", "freqPlotData_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aa", ",", " ", "bb"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"aa", ",", " ", "bb"}], "}"}], " ", "=", "  ", "qpl"}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"freqPlotData", ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", " ", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
               "  ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"bb", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "23"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"aa", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "23"}], "}"}]}], "}"}],
              "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "pointsTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pointsTable", "::", "usage"}], " ", "=", " ", 
     "\"\<Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage.\>\""}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pointsTable", "[", " ", 
      RowBox[{"massPosition_List", ",", " ", "latticeOrigins_List"}], " ", 
      "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", " ", "+", " ", "massPosition"}], ")"}], " ", "&"}], "/@",
        " ", "latticeOrigins"}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", "findLatticeCells", " ", "]"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findLatticeCells", "::", "usage"}], " ", "=", " ", 
     "\"\<All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n\>\""}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findLatticeCells", "[", 
      RowBox[{"latticeVectors_List", ",", "limits_List"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b", ",", "sol", ",", " ", "oneSolution"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", " ", "b"}], "}"}], " ", "=", " ", 
         "latticeVectors"}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Rationalize", " ", "to", " ", 
          RowBox[{"fix", ":", " ", "to", ":", " ", 
           ButtonBox[
            RowBox[{
             RowBox[{"http", ":"}], "//", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], 
                 "/", "questions"}], "/", "6055"}], "/", "how"}], "-", "to", 
              "-", "get", "-", "rid", "-", "of", "-", "warnings", "-", "when",
               "-", "using", "-", "solve", "-", "on", "-", "an", "-", 
              "equation", "-", "with", "-", "inexact", "-", "coeffici"}]}],
            BaseStyle->"Hyperlink",
            ButtonData->{
              URL[
              "http://mathematica.stackexchange.com/questions/6055/how-to-get-\
rid-of-warnings-when-using-solve-on-an-equation-with-inexact-coeffici"], None},
            
            ButtonNote->
             "http://mathematica.stackexchange.com/questions/6055/how-to-get-\
rid-of-warnings-when-using-solve-on-an-equation-with-inexact-coeffici"]}]}], 
         " ", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"oneSolution", "[", "o_", "]"}], " ", ":=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "m"}], "}"}], " ", "/.", 
          RowBox[{"Solve", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Rationalize", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "<", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", " ", "o"}], ")"}], " ", 
                 ".", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", " ", "o"}], ")"}], " ", 
                 ".", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}], " ", "<", " ", 
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "<", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", "o"}], ")"}], " ", ".", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], ")"}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"n", " ", "a"}], " ", "+", " ", 
                   RowBox[{"m", " ", "b"}], " ", "+", "o"}], ")"}], " ", ".", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], " ", "<", " ", 
                RowBox[{
                 RowBox[{"limits", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], " ", "]"}], 
            "\[IndentingNewLine]", ",", " ", 
            RowBox[{"{", 
             RowBox[{"n", ",", "m"}], "}"}], ",", " ", "Integers"}], 
           "]"}]}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sol", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"oneSolution", "[", "#", "]"}], " ", "&"}], "/@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "a", ",", " ", "b", ",",
                 " ", 
                RowBox[{"a", "+", "b"}]}], "}"}]}], " ", ",", "1"}], "]"}], 
           " ", "//", " ", "Sort"}], " ", "//", " ", "DeleteDuplicates"}]}], 
        " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"a", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
             RowBox[{"b", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], " ", "&"}], "/@", 
         " ", "sol"}]}]}], " ", "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "locDependent", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"locDependent", "::", "usage"}], " ", "=", " ", 
     "\"\<Locator dependent calculations (i.e. based on the mass positions \
and the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"locDependent", "[", " ", 
      RowBox[{"uLoc_List", ",", "numMasses_Integer", ",", " ", "rma_List"}], 
      " ", "]"}], "  ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "m", ",", "latticeBasis", ",", " ", "numberLatticeLinesToDisplay", 
         ",", "reciprocalBasis", ",", "mObliqueComponents", ",", " ", 
         "mPosFirstCell", ",", " ", "reciprocalNorms", ",", " ", 
         "allLatticeCellOriginsInDynPlotRange", ",", " ", "cellOrigins"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"latticeBasis", " ", "=", 
         RowBox[{"Take", "[", 
          RowBox[{"uLoc", ",", " ", "2"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"uLoc", ",", " ", "2"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numberLatticeLinesToDisplay", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Ceiling", "[", "  ", 
             RowBox[{"Abs", "[", 
              RowBox[{"glConstWindowHalfWidth", "/", " ", 
               RowBox[{
                RowBox[{"latticeBasis", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], " ", "&"}], 
           " ", "/@", " ", 
           RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"reciprocalBasis", " ", "=", " ", 
         RowBox[{
         "calcReciprocalBasis", "[", " ", "latticeBasis", " ", "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{"reciprocalNorms", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"reciprocalBasis", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
           " ", 
           RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"mObliqueComponents", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", " ", "i", " ", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"reciprocalBasis", "[", 
             RowBox[{"[", " ", "j", " ", "]"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numMasses"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "2"}], "}"}]}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mPosFirstCell", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", "-", " ", 
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{"mObliqueComponents", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", ".", " ", 
              "latticeBasis"}]}], " ", ")"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", "numMasses", "]"}]}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"allLatticeCellOriginsInDynPlotRange", " ", "=", " ", 
         RowBox[{
          RowBox[{"findLatticeCells", "[", 
           RowBox[{"latticeBasis", ",", "glConstDynPlotRange"}], "]"}], " ", "//",
           " ", "Transpose"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"cellOrigins", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
          "allLatticeCellOriginsInDynPlotRange", " ", "//", " ", "Last"}], 
          ")"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<mScalarArray\>\"", " ", "\[Rule]", " ", "rma"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<numberOfMasses\>\"", " ", "\[Rule]", " ", "numMasses"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<latticeBasis\>\"", " ", "\[Rule]", " ", "latticeBasis"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeNorms\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"latticeBasis", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeUnitVectors\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"latticeBasis", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<numberLatticeLinesToDisplay\>\"", "\[Rule]", " ", 
           "numberLatticeLinesToDisplay"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<latticeCellOriginIndexes\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
            "allLatticeCellOriginsInDynPlotRange", " ", "//", " ", "First"}], 
            ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<reciprocalBasis\>\"", "\[Rule]", " ", "reciprocalBasis"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
          "\"\<reciprocalNorms\>\"", "\[Rule]", " ", "reciprocalNorms"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"\"\<qMaxVec\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "reciprocalNorms"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<mObliqueComponents\>\"", "\[Rule]", " ", 
           "mObliqueComponents"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<mPosFirstCell\>\"", "\[Rule]", " ", "mPosFirstCell"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<pointsDataTable\>\"", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"pointsTable", "[", 
                RowBox[{
                 RowBox[{"mPosFirstCell", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", " ", "cellOrigins"}], 
                "]"}], ")"}], " ", "&"}], "/@", " ", 
             RowBox[{"Range", "[", "numMasses", "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<lineTable\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"calcLineTable", "[", " ", 
               RowBox[{
               "numberLatticeLinesToDisplay", ",", " ", "latticeBasis", ",", 
                " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
             RowBox[{"Permutations", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "plotSprings", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotSprings", "::", "usage"}], " ", "=", " ", 
     "\"\<Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotSprings", "[", 
      RowBox[{
      "uLoc_List", ",", " ", "ld_List", ",", "cd_List", ",", "m1Ind_Integer", 
       ",", " ", "m2Ind_Integer", ",", " ", "moInd_Integer"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "aLoc", ",", " ", "bLoc", ",", "mLoc", ",", "pointsList", ",", 
         "latticeBasis", ",", "reciprocalBasis", ",", "pointsDataTable", ",", 
         " ", "numberLatticeLinesToDisplay", ",", " ", "lines", ",", " ", 
         "cOrigin", ",", " ", "cN", ",", " ", "g", ",", " ", "mScalarArray", 
         ",", " ", "numberOfMasses", ",", " ", "scaleLoc"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"latticeBasis", " ", "=", " ", 
         RowBox[{"Take", "[", " ", 
          RowBox[{"uLoc", ",", " ", "2"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"aLoc", " ", "=", " ", 
         RowBox[{"uLoc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"bLoc", " ", "=", " ", 
         RowBox[{"uLoc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"scaleLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{"aLoc", ".", "aLoc"}], "  ", "+", " ", 
          RowBox[{"bLoc", " ", ".", "bLoc"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "mLoc", ",", "reciprocalBasis", ",", "pointsDataTable", ",", 
           "numberLatticeLinesToDisplay", ",", " ", "lines", ",", " ", 
           "mScalarArray", ",", " ", "numberOfMasses"}], "}"}], "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mPosFirstCell\>\"", ",", "\"\<reciprocalBasis\>\"", ",", 
            "\"\<pointsDataTable\>\"", ",", 
            "\"\<numberLatticeLinesToDisplay\>\"", ",", " ", 
            "\"\<lineTable\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", " ", 
            "\"\<numberOfMasses\>\""}], "}"}], "  ", "/.", " ", "ld"}]}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pointsList", "[", "n_Integer", "]"}], " ", ":=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"massColors", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
           ",", 
           RowBox[{"PointSize", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mScalarArray", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "/", "glConstMMax"}], "/", 
              "500"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", " ", "#", " ", "]"}], " ", "&"}], " ", "/@",
             " ", 
            RowBox[{"pointsDataTable", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"massLabel", "[", " ", "n", "]"}], ",", 
             RowBox[{
              RowBox[{"mLoc", "[", 
               RowBox[{"[", "n", "]"}], "]"}], " ", "+", " ", 
              "glConstTextDisplayOffsetHack"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"cOrigin", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"cd", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "m1Ind", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{"m1Ind", ",", " ", "moInd"}], "}"}]}], " ", "&"}]}], 
          " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"cN", " ", "=", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"cd", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "m1Ind", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", 
             RowBox[{"{", 
              RowBox[{"m1Ind", ",", " ", "m2Ind"}], "}"}]}], "&"}]}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"spScaled", "[", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"6", ",", "7"}], "}"}]}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "glConstKMax"}], ",", 
               " ", "scaleLoc"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                "glConstSpringColorsByN"}], ")"}]}]}], " ", "]"}], " ", "&"}],
           "/@", " ", "cN"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", " ", 
         RowBox[{
          RowBox[{"numberOfMasses", " ", ">", " ", "1"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"g", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"spScaled", "[", 
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}]}], "]"}], ",", " ", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "/", "glConstKMax"}], ",",
                   " ", "scaleLoc"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                   "glConstSpringColorsByN"}], ")"}]}]}], " ", "]"}], " ", 
              "&"}], "/@", " ", "cOrigin"}]}], "]"}], ","}], " ", "]"}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", " ", 
                 RowBox[{"lines", "\[IndentingNewLine]", ",", "Blue", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"reciprocalBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                   RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]", 
                  ",", "Thick", ",", 
                  RowBox[{"Arrowheads", "[", "0.05", "]"}], 
                  "\[IndentingNewLine]", ",", "Red", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                   RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]", 
                  ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"aLoc", "/", "2"}], " ", "+", " ", 
                    "glConstTextDisplayOffsetHack"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"bLoc", "/", "2"}], " ", "+", " ", 
                    "glConstTextDisplayOffsetHack"}]}], "]"}]}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"This", " ", "polygon", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "with", " ", "doubling", " ", "of", " ", "PlotRange"}], 
                    " ", "\[Rule]", " ", 
                    RowBox[{"glConstDynPlotRange", " ", "below"}]}], ")"}], 
                   " ", "was", " ", "to", " ", "visually", " ", "test", " ", 
                   "the", " ", "Solve", " ", "logic", " ", "used", " ", "to", 
                   " ", "find", " ", "all", " ", "the", " ", "lattice", " ", 
                   "cells", " ", "contained", " ", "or", " ", "just", " ", 
                   "outside", " ", "of", " ", "the", " ", 
                   RowBox[{"region", "."}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{",", 
                   RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", "Gray"}]}], "\[IndentingNewLine]",
                    ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"glConstDynPlotRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pointsList", "[", "#", "]"}], " ", "&"}], "/@", 
                 " ", 
                 RowBox[{"Range", "[", "numberOfMasses", "]"}]}]}], 
               "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"PlotRange", " ", "\[Rule]", " ", 
              RowBox[{"(*", "2", "*)"}], " ", "glConstDynPlotRange"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "g"}], 
          "\[IndentingNewLine]", "}"}], " ", "]"}]}]}], " ", 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "dynamicsGraphicsTable", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsGraphicsTable", "::", "usage"}], " ", "=", " ", 
     "\"\<Calculate a time indexed table of positions for each of the \
masses\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Example", ":", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ld", ",", " ", "cd", ",", " ", "basisAndMassPoints", ",", " ", 
         "kArray", ",", " ", "matrix", ",", " ", "dynamics", ",", " ", "sc", 
         ",", " ", "qPoint", ",", " ", "omegaIndex", ",", "  ", "lines", ",", 
         "mScalarArray", ",", " ", "numberOfMasses", ",", " ", "pointsData", 
         ",", "dynAtOmegaIndex", ",", " ", "dynMesh", ",", "dynTable"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"basisAndMassPoints", " ", "=", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}]}], " ", "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ld", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{"basisAndMassPoints", ",", " ", "1", ",", 
           RowBox[{"{", "10", "}"}]}], " ", "]"}]}], "  ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cd", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"ld", ",", " ", "kArray"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sc", " ", "=", " ", "0.25"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPoint", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], "/", 
          "2"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"ld", ",", " ", "cd"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{"calcDynamics", "[", " ", 
          RowBox[{"matrix", "[", " ", "qPoint", " ", "]"}], " ", "]"}]}], " ",
         ";", "\[IndentingNewLine]", 
        RowBox[{"omegaIndex", " ", "=", " ", "1"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynAtOmegaIndex", " ", "=", " ", 
         RowBox[{"dynamics", "[", 
          RowBox[{"[", "omegaIndex", "]"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynMesh", " ", "=", " ", "30"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynTable", " ", "=", " ", 
         RowBox[{"dynamicsGraphicsTable", "[", 
          RowBox[{
          "ld", ",", " ", "dynAtOmegaIndex", ",", " ", "sc", ",", " ", 
           "qPoint", ",", " ", "dynMesh"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"With", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"showDynPlot", "[", " ", 
            RowBox[{"dynTable", ",", " ", "n"}], " ", "]"}]}], " ", "]"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Animate", "[", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"showDynPlot", "[", " ", 
           RowBox[{"dynTable", ",", " ", "n"}], " ", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "1", ",", " ", "dynMesh", ",", " ", "1"}], 
           "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dynamicsGraphicsTable", "[", 
      RowBox[{
      "ld_List", ",", " ", "dynAtOmegaIndex_List", ",", " ", "sc_", ",", " ", 
       "qPoint_List", ",", " ", "dynMesh_Integer"}], " ", "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pointsDataTable", ",", "e", ",", " ", "omega", ",", " ", "lines", 
         ",", " ", "nu", ",", " ", "a", ",", "b", ",", " ", "mScalarArray", 
         ",", " ", "numberOfMasses", ",", " ", "latticeCellOriginIndexes", 
         ",", " ", "mPosFirstCell", ",", "pointsData"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", " ", "b"}], "}"}], ",", "pointsDataTable", ",", 
           "lines", ",", " ", "mScalarArray", ",", " ", "numberOfMasses", ",",
            " ", "latticeCellOriginIndexes", ",", " ", "mPosFirstCell"}], 
          "}"}], "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<latticeBasis\>\"", ",", "\"\<pointsDataTable\>\"", ",", " ", 
            "\"\<lineTable\>\"", ",", " ", "\"\<mScalarArray\>\"", ",", " ", 
            "\"\<numberOfMasses\>\"", ",", " ", 
            "\"\<latticeCellOriginIndexes\>\"", ",", " ", 
            "\"\<mPosFirstCell\>\""}], "}"}], "  ", "/.", " ", "ld"}]}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"omega", ",", " ", "e"}], "}"}], " ", "=", " ", 
         "dynAtOmegaIndex"}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"e", " ", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{"e", ",", "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nu", " ", "=", " ", 
         RowBox[{"2", " ", "Pi", " ", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"omega", " ", "\[Equal]", " ", "0"}], ",", " ", "1", ",", 
            " ", 
            RowBox[{"1", "/", "omega"}]}], "]"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pointsData", " ", ":=", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
              RowBox[{"b", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
              "+", " ", 
              RowBox[{"mPosFirstCell", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "\[IndentingNewLine]", 
              "+", " ", 
              RowBox[{"sc", " ", 
               RowBox[{"Re", "[", " ", 
                RowBox[{
                 RowBox[{"e", "[", 
                  RowBox[{"[", " ", "k", " ", "]"}], "]"}], " ", 
                 RowBox[{"E", "^", 
                  RowBox[{"(", 
                   RowBox[{"I", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"qPoint", " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"b", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ")"}]}], "  ", 
                    "-", " ", 
                    RowBox[{"nu", " ", "tau"}]}], " ", ")"}]}], ")"}]}]}], 
                " ", "]"}]}]}], " ", "\[IndentingNewLine]", "&"}], "/@", " ", 
            "latticeCellOriginIndexes"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "numberOfMasses"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"tau", ",", "0", ",", "1", ",", 
             RowBox[{"1", "/", "dynMesh"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", " ", 
         RowBox[{
         "pointsData", ",", " ", "mScalarArray", ",", "numberOfMasses", ",", 
          "lines", ",", "dynMesh"}], " ", "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "showDynPlot", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showDynPlot", "::", "usage"}], " ", "=", " ", 
     "\"\<showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"showDynPlot", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
        "pointsData_List", ",", " ", "mScalarArray_List", ",", 
         "numberOfMasses_Integer", ",", "lines_List", ",", " ", 
         "dynMesh_Integer"}], " ", "}"}], ",", " ", "n_"}], " ", "]"}], " ", ":=",
      " ", 
     RowBox[{"Show", "[", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"pointsData", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "n", "]"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{
              "PlotRange", " ", "\[Rule]", " ", "glConstDynPlotRange"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "\[Rule]", "glConstPrimaryDisplaySize"}], 
              "\[IndentingNewLine]", ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"PointSize", "[", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "glConstMMax"}], "/",
                     "350"}], "]"}], "]"}], ",", 
                 RowBox[{"massColors", "[", "k", "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"k", ",", "numberOfMasses"}], "}"}]}], "]"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{
            "{", "\[IndentingNewLine]", "lines", "\[IndentingNewLine]", "}"}],
             "]"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
         "}"}], ",", " ", "1"}], "]"}], "\[IndentingNewLine]", "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601384568255503*^9, 3.6013846068957133`*^9}, {
   3.601384697696907*^9, 3.6013847654097795`*^9}, 3.601385370746403*^9, {
   3.601385703897458*^9, 3.6013858671947985`*^9}, {3.6013859369007854`*^9, 
   3.6013862565130663`*^9}, {3.601386287618845*^9, 3.601386609852276*^9}, 
   3.6013883021340685`*^9, {3.601388339834225*^9, 3.6013883634195743`*^9}, 
   3.6013895576548805`*^9, 3.6013897858849344`*^9, {3.6013899175164633`*^9, 
   3.6013899237438197`*^9}, {3.6013902884636803`*^9, 3.601390307373762*^9}, {
   3.6013903606908116`*^9, 3.6013903655340886`*^9}, {3.6013904046453257`*^9, 
   3.6013904283296804`*^9}, {3.6013906600559344`*^9, 3.601390689104596*^9}, {
   3.601390728076825*^9, 3.6013907681771183`*^9}, 3.6013908182919846`*^9, {
   3.601390891800189*^9, 3.601390932180499*^9}, {3.6013909695316353`*^9, 
   3.6013909758089943`*^9}, {3.6013910645760717`*^9, 3.601391320952736*^9}, {
   3.601391435270274*^9, 3.6013916772021117`*^9}, 3.6013917100099883`*^9, {
   3.6013917417488036`*^9, 3.601391758067737*^9}, {3.6013919250272865`*^9, 
   3.601391931312646*^9}, 3.601391980636467*^9, {3.6013920515635242`*^9, 
   3.6013920860454965`*^9}, {3.601392228344635*^9, 3.6013922300747347`*^9}, {
   3.6013922885550795`*^9, 3.6013923711148014`*^9}, {3.601392403747668*^9, 
   3.601392429697152*^9}, {3.601392460009886*^9, 3.6013924618869934`*^9}, 
   3.601392495188898*^9, {3.6013925358982267`*^9, 3.60139256568093*^9}, {
   3.60139267443215*^9, 3.60139267687029*^9}, {3.601392795672085*^9, 
   3.601392812691058*^9}, {3.601487330343955*^9, 3.6014874916991835`*^9}, {
   3.601487744991671*^9, 3.6014877935674496`*^9}, {3.60148964525436*^9, 
   3.6014896667695904`*^9}, {3.6014911727117257`*^9, 3.6014912011403513`*^9}, 
   3.6014913920092688`*^9, {3.6015049201900363`*^9, 3.601504921465109*^9}, {
   3.6015049694438534`*^9, 3.6015051088448267`*^9}, 3.601510158678661*^9, {
   3.601510341001089*^9, 3.6015103715238347`*^9}, {3.6015104088279686`*^9, 
   3.6015107342535815`*^9}, {3.6015107662544117`*^9, 
   3.6015107759769683`*^9}, {3.6015111875295076`*^9, 3.601511306315302*^9}, {
   3.601512394495542*^9, 3.6015124103054466`*^9}, {3.6015124586622124`*^9, 
   3.601512461037348*^9}, {3.6015125348575706`*^9, 3.601512551233507*^9}, {
   3.601512837974908*^9, 3.601512840824071*^9}, 3.6015519253794203`*^9, {
   3.60155212137263*^9, 3.601552138440606*^9}, {3.6015928398373117`*^9, 
   3.6015928406963606`*^9}, {3.601592972262886*^9, 3.601593035706515*^9}, {
   3.601593106344555*^9, 3.6015931439477057`*^9}, {3.601593175770526*^9, 
   3.6015931831749496`*^9}, 3.6015932402212124`*^9, 3.6015933437151318`*^9, {
   3.60159339980434*^9, 3.6015934133541145`*^9}, {3.601593445458951*^9, 
   3.601593483192109*^9}, {3.601593515955983*^9, 3.6015935487328577`*^9}, 
   3.601595231242092*^9, 3.601595401817848*^9, {3.60159658197935*^9, 
   3.6015965875836706`*^9}, 3.601596631546185*^9},
 CellID->454600298]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tick", ";", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"This", " ", 
        RowBox[{"If", "[", "]"}], " ", "is", " ", "effectively", " ", "my", 
        " ", "Initialization"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "}"}], " ", 
         RowBox[{"block", ".", "  ", "Done"}], " ", "with", " ", "a", " ", 
         "variable", " ", "so", " ", "that", " ", "copies", " ", "of", " ", 
         "the", " ", "output", " ", "cell", " ", 
         RowBox[{"won", "'"}], "t", " ", "re"}], "-", 
        RowBox[{"execute", " ", "their", " ", "Initialization", " ", 
         RowBox[{"cells", ".", "  ", "This"}], " ", "allows", " ", 
         "\"\<interesting\>\"", " ", "settings", " ", "to", " ", "be", " ", 
         "maintained", " ", "per"}], "-", 
        RowBox[{
        "copy", " ", "of", " ", "the", " ", "output", " ", "cell"}]}]}], ",", 
      " ", 
      RowBox[{
      "but", " ", "still", " ", "provide", " ", "an", " ", "Initialization", 
       " ", "block", " ", "for", " ", "the", " ", "primary", " ", "output", 
       " ", 
       RowBox[{"cell", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", " ", 
    RowBox[{"If", " ", "[", " ", 
     RowBox[{"bInitDefaults", ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"glConstLocDefault", ",", " ", "mLocDefault"}], "}"}], 
           ",", " ", "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
         RowBox[{"locDependent", "[", " ", 
          RowBox[{
          "u", ",", " ", "rawNumberOfMasses", ",", "rawArrayOfMasses"}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "n", "}"}], ",", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", "2"}], " ", ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"n", "\[LessEqual]", "rawNumberOfMasses"}], ",", 
             RowBox[{
              RowBox[{"kArray", " ", "=", " ", 
               RowBox[{"returnKarrayForAdditionalMassIndex", "[", 
                RowBox[{"kArray", ",", "n"}], "]"}]}], " ", ";", " ", 
              RowBox[{"n", "++"}]}]}], "]"}]}]}], " ", "]"}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"qLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\"\<qMaxVec\>\"", " ", "/.", " ", 
            "parameterLocatorDependencies"}], ")"}], "/", "2"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qPlaneLoc", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"couplingData", " ", "=", " ", 
         RowBox[{"calculateCouplings", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", "kArray"}], " ", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshMatrix", ":", " ", 
           RowBox[{"dependent", " ", "on"}], ":", " ", 
           "parameterLocatorDependencies"}], ",", " ", "couplingData"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", 
         RowBox[{"dynamicsMatrix", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", "couplingData"}], 
          " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshDynamics", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "matrix"}]}], ",", " ", 
          "qLoc", ","}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", 
         RowBox[{"calcDynamics", "[", " ", 
          RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}]}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshDynPlot", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "dynamics"}]}], ",", " ", 
          "omegaIndex", ",", " ", "scale"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dynPlot", " ", "=", " ", 
         RowBox[{"dynamicsGraphicsTable", "[", " ", 
          RowBox[{"parameterLocatorDependencies", ",", " ", 
           RowBox[{"dynamics", "[", 
            RowBox[{"[", "omegaIndex", "]"}], "]"}], ",", " ", "scale", ",", 
           " ", "qLoc", ",", " ", "dynMeshSize"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"bRefreshFreqPlot", ":", " ", 
           RowBox[{"dependent", " ", "on", " ", "matrix"}]}], ",", " ", 
          "freqMeshSize"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"freqPlot", " ", "=", " ", 
         RowBox[{"frequencyPlotCalc", "[", " ", 
          RowBox[{
          "parameterLocatorDependencies", ",", " ", "matrix", ",", " ", 
           "freqMeshSize"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bInitDefaults", " ", "=", " ", "False"}], " ", ";"}], 
       "\[IndentingNewLine]", ")"}], ","}], "]"}], " ", ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"Switch", "[", 
       RowBox[{"tabNumber", ",", "dynTab", ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "freqTab", 
        ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"x", "^", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "_", ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"tauSliderValue", " ", "x"}], "]"}], " ", 
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{"-", "x"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "@", 
     RowBox[{"Switch", "[", " ", 
      RowBox[{
      "tabNumber", ",", "\[IndentingNewLine]", "dynTab", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{"bRefreshMatrix", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"matrix", " ", "=", " ", 
              RowBox[{"dynamicsMatrix", "[", " ", 
               RowBox[{
               "parameterLocatorDependencies", ",", " ", "couplingData"}], 
               " ", "]"}]}], " ", ";", 
             RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
             RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", ";", 
             " ", 
             RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
            ")"}], ","}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", " ", 
          RowBox[{"bRefreshDynamics", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dynamics", " ", "=", " ", 
              RowBox[{"calcDynamics", "[", " ", 
               RowBox[{"matrix", "[", " ", "qLoc", " ", "]"}], " ", "]"}]}], 
             " ", ";", 
             RowBox[{"bRefreshDynamics", " ", "=", " ", "False"}], " ", ";", 
             RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}]}], ")"}], 
           ","}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", " ", 
          RowBox[{"bRefreshDynPlot", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dynPlot", " ", "=", " ", 
              RowBox[{"dynamicsGraphicsTable", "[", " ", 
               RowBox[{"parameterLocatorDependencies", ",", " ", 
                RowBox[{"dynamics", "[", 
                 RowBox[{"[", "omegaIndex", "]"}], "]"}], ",", " ", "scale", 
                ",", " ", "qLoc", ",", "dynMeshSize"}], " ", "]"}]}], " ", 
             ";", 
             RowBox[{"bRefreshDynPlot", " ", "=", " ", "False"}]}], ")"}], 
           ","}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"showDynPlot", "[", " ", 
          RowBox[{"dynPlot", ",", " ", "tauSliderValue"}], " ", "]"}]}], 
        "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", "freqTab", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{"bRefreshMatrix", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"matrix", " ", "=", " ", 
              RowBox[{"dynamicsMatrix", "[", " ", 
               RowBox[{
               "parameterLocatorDependencies", ",", " ", "couplingData"}], 
               " ", "]"}]}], " ", ";", 
             RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
             RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", ";", 
             " ", 
             RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
            ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", " ", 
          RowBox[{"bRefreshFreqPlot", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"freqPlot", " ", "=", " ", 
              RowBox[{"frequencyPlotCalc", "[", " ", 
               RowBox[{
               "parameterLocatorDependencies", ",", " ", "matrix", ",", " ", 
                "freqMeshSize"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{"bRefreshFreqPlot", " ", "=", " ", "False"}]}], " ", 
            ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"showFreqPlot", "[", " ", 
          RowBox[{"qPlaneLoc", ",", " ", "freqPlot"}], " ", "]"}]}], 
        "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "_", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"tauSliderValue", " ", "x"}], "]"}], " ", 
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{"-", "x"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"LocatorPane", "[", " ", 
        RowBox[{
         RowBox[{"Dynamic", "[", 
          RowBox[{"u", ",", 
           RowBox[{
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"u", " ", "=", " ", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], "<", "3"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Flatten", "[", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"glConstLocDefault", ",", " ", "mLocDefault"}], 
                    "}"}], ",", " ", "1"}], "]"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "cap", " ", "the", " ", "number", " ", "of", " ", 
                    "Locators", " ", "at", " ", "5"}], ",", " ", 
                   RowBox[{
                   "so", " ", "the", " ", "selection", " ", "Pane", " ", 
                    RowBox[{"doesn", "'"}], "t", " ", "start", " ", 
                    "truncating", " ", 
                    RowBox[{"the", " ", "'"}], "to", " ", 
                    RowBox[{"neighbouring", "'"}], " ", "SetterBar"}]}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], " ", ">", " ", "7"}], ",", " ", 
                   RowBox[{"Take", "[", 
                    RowBox[{"#", ",", "7"}], "]"}], ",", " ", "#"}], "]"}]}], 
                " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rm", ",", "km"}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"rm", " ", "=", " ", 
                  RowBox[{"First", "@", 
                   RowBox[{"Dimensions", "[", "rawArrayOfMasses", "]"}]}]}], 
                 " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", " ", "[", 
                  RowBox[{
                   RowBox[{"rm", " ", ">", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"Shrink", " ", "rawArrayOfMasses"}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"rawArrayOfMasses", " ", "=", " ", 
                    RowBox[{"Take", "[", " ", 
                    RowBox[{"rawArrayOfMasses", ",", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], " ", 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Grow", " ", "rawArrayOfMasses", " ", "if", " ", 
                    "required"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"rm", "<", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "rawArrayOfMasses", ",", " ", "glConstDefaultMass"}], 
                    "]"}], " ", ";", " ", 
                    RowBox[{"rm", "++"}]}]}], " ", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"km", " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"kArray", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "//", " ", 
                   "Max"}]}], " ", ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", " ", "[", 
                  RowBox[{
                   RowBox[{"km", " ", ">", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"Shrink", " ", "kArray"}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"Select", "[", 
                    RowBox[{"kArray", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "\[LessEqual]", "  ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], "&"}], 
                    ")"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Grow", " ", "kArray", " ", "if", " ", "required"}], 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"km", "<", " ", 
                    RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"km", "++"}], " ", ";", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnKarrayForAdditionalMassIndex", "[", 
                    RowBox[{"kArray", ",", "km"}], "]"}]}]}]}], " ", "]"}]}], 
                  " ", "\[IndentingNewLine]", "]"}]}]}], 
               "\[IndentingNewLine]", "]"}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                "lattice", " ", "vector", " ", "end", " ", "points", " ", 
                "to", " ", "be", " ", "too", " ", "close", " ", "to", " ", 
                "the", " ", "origin"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ".", " ", 
                   RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "<", " ", 
                  "glConstMinSquaredDistanceFromOrigin"}], ",", " ", 
                 RowBox[{"glConstLocDefault", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"u", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ".", " ", 
                   RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "<", " ", 
                  "glConstMinSquaredDistanceFromOrigin"}], ",", " ", 
                 RowBox[{"glConstLocDefault", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                 RowBox[{"u", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                "angle", " ", "between", " ", "lattice", " ", "vectors", " ", 
                "get", " ", "too", " ", "small"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"u", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"u", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], " ", "=", " ", 
               RowBox[{"resetLatticeVectorsIfAngleTooSmall", "[", " ", 
                RowBox[{
                "u", ",", " ", " ", "glConstMinAngleBetweenLatticeVectors"}], 
                " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"rawNumberOfMasses", " ", "=", " ", 
               RowBox[{"nMassesFromLocArray", "[", "u", "]"}]}], " ", ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "These", " ", "are", " ", "in", " ", "case", " ", "the", " ", 
                "number", " ", "of", " ", "locators", " ", "were", " ", 
                "changed", " ", "and", " ", "we", " ", "have", " ", "a", " ", 
                "mass", " ", "selected", " ", "that", " ", "is", " ", "now", 
                " ", 
                RowBox[{"invalid", "."}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"m1Sel", " ", "=", " ", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"m1Sel", " ", ">", "rawNumberOfMasses"}], ",", " ", 
                 "1", ",", " ", "m1Sel"}], "]"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"m2Sel", " ", "=", " ", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"m2Sel", " ", ">", "rawNumberOfMasses"}], ",", " ", 
                 "1", ",", " ", "m2Sel"}], "]"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"moSel", " ", "=", " ", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"moSel", " ", ">", "rawNumberOfMasses"}], ",", " ", 
                 "1", ",", " ", "moSel"}], " ", "]"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"moSel", " ", "=", " ", 
               RowBox[{"adjustedmoSel", "[", " ", 
                RowBox[{
                "rawNumberOfMasses", ",", " ", "moSel", ",", " ", "m1Sel"}], 
                " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"omegaIndex", " ", "=", " ", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"omegaIndex", " ", ">", 
                  RowBox[{"(", 
                   RowBox[{"2", "rawNumberOfMasses"}], ")"}]}], ",", " ", "1",
                  ",", " ", "omegaIndex"}], "]"}]}], " ", ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "Adjust", " ", "these", " ", "for", " ", "Slider", " ", 
                 "display", " ", "in", " ", "case", " ", "m1Sel"}], ",", " ", 
                "m2Sel", ",", " ", 
                RowBox[{
                "or", " ", "moSel", " ", "were", " ", "changed", " ", "just", 
                 " ", 
                 RowBox[{"above", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"k1", " ", "=", " ", 
               RowBox[{"selectVFromKarray", "[", 
                RowBox[{
                "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                 "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
              RowBox[{"k2", " ", "=", " ", 
               RowBox[{"selectVFromKarray", "[", 
                RowBox[{
                "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "2"}], 
                "]"}]}], " ", ";", "\[IndentingNewLine]", 
              RowBox[{"k3", " ", "=", " ", 
               RowBox[{"selectVFromKarray", "[", 
                RowBox[{
                "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "3"}], 
                "]"}]}], " ", ";", "\[IndentingNewLine]", 
              RowBox[{"k4", " ", "=", " ", 
               RowBox[{"selectVFromKarray", "[", 
                RowBox[{
                "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", "4"}], 
                "]"}]}], " ", ";", "\[IndentingNewLine]", 
              RowBox[{"k5", " ", "=", " ", 
               RowBox[{"selectOriginVFromKarray", "[", " ", 
                RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], " ",
                 "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
               RowBox[{"locDependent", "[", " ", 
                RowBox[{
                "u", ",", " ", "rawNumberOfMasses", ",", "rawArrayOfMasses"}],
                 " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"Reset", " ", "in", " ", "case", " ", "a"}], ",", 
                RowBox[{"or", " ", "b", " ", "changed"}], ",", " ", 
                RowBox[{
                "and", " ", "the", " ", "last", " ", "selected", " ", "value",
                  " ", "is", " ", "now", " ", "out", " ", "of", " ", 
                 RowBox[{"range", "."}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"qLoc", " ", "=", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "\"\<qMaxVec\>\"", "/.", "parameterLocatorDependencies"}], 
                 " ", ")"}], "/", "2"}]}], "  ", ";", "\[IndentingNewLine]", 
              RowBox[{"qPlaneLoc", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"couplingData", " ", "=", " ", 
               RowBox[{"calculateCouplings", "[", " ", 
                RowBox[{"parameterLocatorDependencies", ",", " ", "kArray"}], 
                " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", "XXX", "*)"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"tick", "=", 
               RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Why", " ", 
            RowBox[{"doesn", "'"}], "t", " ", "Alt"}], "-", 
           RowBox[{
           "click", " ", "to", " ", "remove", " ", "existing", " ", "Locator",
             " ", "refresh", " ", "this", " ", 
            RowBox[{"plot", "?", "  ", 
             RowBox[{"Workaround", ":", " ", 
              RowBox[{
              "move", " ", "one", " ", "of", " ", "the", " ", "other", " ", 
               "locators", " ", "to", " ", "refresh"}]}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"plotSprings", "[", 
          RowBox[{
          "u", ",", " ", "parameterLocatorDependencies", ",", "couplingData", 
           ",", "m1Sel", ",", " ", "m2Sel", ",", " ", "moSel"}], "]"}], " ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"LocatorAutoCreate", "\[Rule]", "True"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
        "\[IndentingNewLine]", "]"}]}], " ", 
      RowBox[{"(*", "LocatorPane", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", " ", "]"}]}]}], " ", 
   RowBox[{"(*", "Switch", "*)"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TabView", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<dynamics\>\"", " ", "\[Rule]", "  ", 
        RowBox[{"Column", "[", " ", 
         RowBox[{"{", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dynamic", "@", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"OverVector", "[", "\"\<q\>\"", "]"}], ",", 
               "\[IndentingNewLine]", "\"\< = \>\"", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "qm", "}"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"qm", " ", "=", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    "\"\<qMaxVec\>\"", "  ", "/.", 
                    "parameterLocatorDependencies"}], ")"}]}], " ", ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Slider2D", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"qLoc", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"qLoc", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"(*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "0.01"}], "}"}], ",", " ", "qm"}], 
                    "}"}], "*)"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "#"}], ",", "#"}], "}"}], "/", "2"}], " ", 
                    "&"}], " ", "@", " ", "qm"}], ")"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], 
                    "\[IndentingNewLine]", ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"150", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}], " ", "&"}], ")"}], 
                    " ", "@", " ", "qm"}]}]}], "\[IndentingNewLine]", 
                   "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", " ", 
               "\[IndentingNewLine]", "\"\< 2 \[Pi] \>\"", ",", "  ", 
               RowBox[{"Dynamic", "[", 
                RowBox[{"(", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"qLoc", "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi"}], ")"}]}], " ", "//", " ", 
                    "MatrixForm"}], ")"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ")"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"With", " ", "this", " ", "enabled"}], ",", " ", 
              RowBox[{
              "a", " ", "change", " ", "results", " ", "in", " ", "a", " ", 
               "switch", " ", "through", " ", "the", " ", "tabNumbers"}], ",",
               " ", 
              RowBox[{"first", " ", "freqTab"}], ",", " ", 
              RowBox[{"then", " ", "to", " ", 
               RowBox[{"parametersTab", "?", "  ", "Why"}]}], ",", " ", 
              RowBox[{
              "and", " ", "why", " ", "not", " ", "with", " ", "scale", " ", 
               RowBox[{
               "below", "?", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "As"}], " ", "a", " ", "work", " ", "around", " ", 
               RowBox[{"I", "'"}], "ve", " ", "just", " ", "hardcoded", " ", 
               "the", " ", "mesh", " ", "size", " ", "to", " ", "something", 
               " ", "that", " ", "is", " ", 
               RowBox[{"smooth", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Text", "@", "\"\<number of time intervals \>\""}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Manipulator", "[", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"dynMeshSize", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"dynMeshSize", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "14", ",", " ", "4", ",", " ", "30", ",", 
                    " ", "IntegerQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "30", ",", "1"}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], ",", 
                "\"\< \>\"", ",", " ", 
                RowBox[{"Dynamic", "[", "dynMeshSize", "]"}]}], " ", 
               "\[IndentingNewLine]", "}"}], "]"}], ","}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "Text", "@", "\"\<time, normalized to one period, t/T = \>\""}],
               ",", " ", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"tauSliderValue", "-", "1"}], ")"}], "/", 
                 "dynMeshSize"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"Manipulator", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"tauSliderValue", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tauSliderValue", " ", "=", " ", "#"}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"dynMeshSize", "+", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "True"}], ",", 
                RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"AppearanceElements", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<StepLeftButton\>\"", ",", "\"\<PlayPauseButton\>\"", 
                   ",", "\"\<StepRightButton\>\"", ",", 
                   "\"\<FasterSlowerButtons\>\"", ",", 
                   "\"\<DirectionButton\>\""}], "\[IndentingNewLine]", 
                  "}"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", " ", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"200", ",", "60"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"Text", "@", "\"\<oscillation scale factor:\>\""}], 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Manipulator", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"scale", ",", 
                   RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"scale", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "0.05", ",", " ", "0.05", ",", " ", "1"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.05", ",", "1"}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                 RowBox[{"AppearanceElements", "\[Rule]", 
                  RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], 
               "\[IndentingNewLine]", "\"\< \>\""}], ",", "  ", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"(", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"scale", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ")"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "Text", "@", 
               "\"\<Angular frequency \[Omega](q), selection:\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"SetterBar", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"omegaIndex", ",", 
                   RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"omegaIndex", "=", "#"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                  "]"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", "rawNumberOfMasses"}], "]"}]}], " ", "]"}]}]}],
              "\[IndentingNewLine]", "}"}], " ", "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}], " ", 
       RowBox[{"(*", " ", "Column", " ", "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "\"\<\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))\>\"", 
        " ", "\[Rule]", "  ", 
        RowBox[{"Column", "[", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<number of mesh intervals \>\""}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Manipulator", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"freqMeshSize", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"freqMeshSize", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "12", ",", " ", "2", ",", " ", "30", ",", 
                    " ", "EvenQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "30", ",", "2"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], ",", 
              "\"\< \>\"", ",", " ", 
              RowBox[{"Dynamic", "[", "freqMeshSize", "]"}]}], " ", 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"LocatorPane", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "qPlaneLoc", 
              RowBox[{"(*", 
               RowBox[{",", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"qPlaneLoc", " ", "=", " ", "#"}], ";", " ", 
                  RowBox[{"tick", "=", 
                   RowBox[{
                    RowBox[{"Not", "[", "tick", "]"}], " ", "&"}]}]}], 
                 ")"}]}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Lighter", "@", "Gray"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}], ",", 
                    "\[IndentingNewLine]", "Black", ",", 
                    RowBox[{"Line", "[", "qPlaneLoc", "]"}]}], 
                   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                  " ", 
                  RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    "/", "2"}]}], "\[IndentingNewLine]", ",", 
                  RowBox[{"ImageSize", " ", "\[Rule]", "  ", 
                   RowBox[{"200", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}]}]}], 
                 "\[IndentingNewLine]", "]"}], " ", "&"}], " ", "@", " ", 
               RowBox[{"(", 
                RowBox[{
                "\"\<qMaxVec\>\"", " ", "/.", 
                 "parameterLocatorDependencies"}], ")"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], " ",
          "]"}]}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<parameters\>\"", "\[Rule]", 
        RowBox[{"Grid", "[", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Text", "[", "\"\<mass: \>\"", "]"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{"rawNumberOfMasses", " ", ">", " ", "1"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"m1Sel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m1Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"massValue", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\"\<mScalarArray\>\"", " ", "/.", " ", 
                    "parameterLocatorDependencies"}], ")"}], "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "3"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "4"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"moSel", " ", "=", " ", 
                    RowBox[{"adjustedmoSel", "[", " ", 
                    RowBox[{
                    "rawNumberOfMasses", ",", " ", "moSel", ",", " ", 
                    "m1Sel"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", 
                    RowBox[{"selectOriginVFromKarray", "[", " ", 
                    RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], 
                    " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", " ", "]"}]}], "&"}], "/@",
                     " ", 
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}]}], 
                    ")"}]}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
               "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"massValue", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"massValue", " ", "=", " ", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "0.25", ",", " ", "0.25", ",", " ", 
                    "glConstMMax"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"rawArrayOfMasses", "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}], "=", "massValue"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"parameterLocatorDependencies", " ", "=", " ", 
                    RowBox[{"(", 
                    RowBox[{"parameterLocatorDependencies", " ", "/.", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<mScalarArray\>\"", ",", " ", "_"}], "]"}], 
                    " ", "\[RuleDelayed]", " ", 
                    RowBox[{"Rule", "[", 
                    RowBox[{
                    "\"\<mScalarArray\>\"", ",", " ", "rawArrayOfMasses"}], 
                    "]"}]}], ")"}]}], " ", ")"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.25", ",", 
                    RowBox[{"Dynamic", "@", "glConstMMax"}]}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\"\< \>\"", ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"massValue", ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "Text", "[", "\"\<coupling to neighbouring: \>\"", " ", "]"}], 
             ",", " ", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"If", " ", "[", " ", 
               RowBox[{
                RowBox[{"rawNumberOfMasses", " ", ">", " ", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"m2Sel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m2Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "2"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "3"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"selectVFromKarray", "[", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", 
                    "4"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                     " ", 
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}]}], 
                   ")"}]}], "\[IndentingNewLine]", "]"}], ",", 
                RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "}"}],
            "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Text", "@", "\"\<horizontal: \>\""}], ",", 
                RowBox[{"kLable", "[", "1", "]"}], ",", " ", "\"\< || \>\"", 
                ",", " ", 
                RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
                "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"k1", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k1", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    "1", ",", " ", "k1"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", "\"\< \>\"", ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"k1", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Text", "@", "\"\<vertical: \>\""}], ",", 
                RowBox[{"kLable", "[", "2", "]"}], ",", " ", "\"\< || \>\"", 
                ",", " ", 
                RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
                "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"k2", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k2", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "2", ",", " ", "k2"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\"\< \>\"", ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"k2", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}], " ", 
            "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
                RowBox[{"kLable", "[", "3", "]"}], ",", " ", "\"\< || (\>\"", 
                ",", "  ", 
                RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
                "\"\< + \>\"", ",", " ", 
                RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
                "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"k3", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k3", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "3", ",", " ", "k3"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\"\< \>\"", ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"k3", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
                RowBox[{"kLable", "[", "4", "]"}], ",", " ", "\"\< || (\>\"", 
                ",", "  ", 
                RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
                "\"\< - \>\"", ",", " ", 
                RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
                "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"k4", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k4", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKArrayElements", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "m2Sel", ",", " ", 
                    " ", "4", ",", " ", "k4"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                  RowBox[{"AppearanceElements", "\[Rule]", 
                   RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                "\"\< \>\"", ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"k4", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Dynamic", "@", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{"rawNumberOfMasses", " ", "\[Equal]", " ", "1"}], 
                "\[IndentingNewLine]", ",", "\"\<\>\"", "\[IndentingNewLine]",
                 ",", " ", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", " ", 
                  RowBox[{
                   RowBox[{"Text", "@", "\"\<coupling from \>\""}], ",", " ", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"massLabel", "[", " ", "m1Sel", "]"}]}], ",", 
                   RowBox[{"Text", "@", "\"\< to: \>\""}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"Switch", "[", 
               RowBox[{
               "rawNumberOfMasses", ",", "\[IndentingNewLine]", "1", ",", 
                "\"\<\>\"", ",", "\[IndentingNewLine]", "2", ",", " ", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"massLabel", "[", " ", 
                  RowBox[{"First", "@", 
                   RowBox[{"Delete", "[", " ", 
                    RowBox[{
                    RowBox[{"Range", "[", "2", "]"}], ",", " ", "m1Sel"}], 
                    "]"}]}], " ", "]"}]}], ",", "\[IndentingNewLine]", "_", 
                ",", " ", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"moSel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"moSel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", 
                    RowBox[{"selectOriginVFromKarray", "[", " ", 
                    RowBox[{"kArray", ",", " ", "m1Sel", ",", " ", "moSel"}], 
                    " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                     " ", 
                    RowBox[{"(", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "rawNumberOfMasses", "]"}], ",", 
                    "m1Sel"}], "]"}], ")"}]}], ")"}]}], "\[IndentingNewLine]",
                   "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Dynamic", "@", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{"rawNumberOfMasses", " ", "\[Equal]", " ", "1"}], 
                ",", "\"\<\>\"", ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"kLable", "[", "5", "]"}], ",", " ", 
                   "\"\<: \>\""}], "}"}], "]"}]}], "\[IndentingNewLine]", 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{"rawNumberOfMasses", " ", "\[Equal]", " ", "1"}], 
                ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"k5", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k5", "=", 
                    RowBox[{"checkAgainstRange", "[", 
                    RowBox[{
                    "#", ",", " ", "glConstKMin", ",", " ", "glConstKMin", 
                    ",", " ", "glConstKMax"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"returnAlteredKarrayOriginElement", "[", " ", 
                    RowBox[{
                    "kArray", ",", " ", "m1Sel", ",", " ", "moSel", ",", " ", 
                    "k5"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"couplingData", " ", "=", " ", 
                    RowBox[{"calculateCouplings", "[", " ", 
                    RowBox[{
                    "parameterLocatorDependencies", ",", " ", "kArray"}], " ",
                     "]"}]}], " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "glConstKMin"}], ",", 
                    RowBox[{"Dynamic", "@", "glConstKMax"}]}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    RowBox[{"AppearanceElements", "\[Rule]", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                   ",", "\"\< \>\"", ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"NumberForm", "[", " ", 
                    RowBox[{"k5", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
                  "\[IndentingNewLine]", "}"}], "]"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", "}"}], " ", "]"}]}]}], " ", 
      RowBox[{"(*", "Grid", "*)"}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"tabNumber", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tabNumber", " ", "=", " ", "#"}], " ", ";", 
          RowBox[{"tick", "=", 
           RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"250", ",", "350"}], "}"}]}]}], " ", "\[IndentingNewLine]", 
    "]"}], " ", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tick", ",", "False"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qPlaneLoc", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qLoc", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tauSliderValue", ",", "1"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"omegaIndex", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scale", ",", " ", "0.2"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqMeshSize", ",", "12"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynMeshSize", ",", "14"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynamics", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynPlot", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqPlot", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bInitDefaults", ",", " ", "True"}], "}"}], ",", " ", "None"}], 
    "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshMatrix", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshDynamics", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshDynPlot", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bRefreshFreqPlot", ",", " ", "False"}], "}"}], ",", " ", 
     "None"}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tabNumber", ",", "1"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dynTab", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freqTab", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parametersTab", ",", " ", "3"}], "}"}], ",", " ", "None"}], 
    "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "The", " ", "number", " ", "of", " ", "default", " ", "masses", " ", 
     "are", " ", "coupled", " ", "by", " ", "these", " ", "next", " ", "four",
      " ", 
     RowBox[{"variables", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rawNumberOfMasses", ",", " ", "3"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mLocDefault", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "0.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", " ", "1.2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1.3", ",", " ", "1.4"}], "}"}]}], "}"}]}], "}"}], ",", 
       " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rawArrayOfMasses", ",", " ", 
         RowBox[{"{", 
          RowBox[{"10", ",", " ", "15", ",", " ", "20"}], "}"}]}], "}"}], ",",
        " ", "None"}], "}"}]}], "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawNumberOfMasses", ",", " ", "1"}], "}"}], ",", " ", "None"}],
     "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mLocDefault", ",", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.7"}], "}"}], 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"{", 
           RowBox[{"0.4", ",", " ", "1.2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", " ", "1.4"}], "}"}]}], "*)"}], "}"}]}], "}"}], 
     ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawArrayOfMasses", ",", " ", 
       RowBox[{"{", "10", 
        RowBox[{"(*", 
         RowBox[{",", " ", "15", ",", " ", "20"}], "*)"}], "}"}]}], "}"}], 
     ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"moSel", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"pick", " ", "anything", " ", "that", " ", 
     RowBox[{"isn", "'"}], "t", " ", "m1Sel"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kArray", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], " ", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parameterLocatorDependencies", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"couplingData", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"glConstSpringColorsByN", ",", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k1", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k2", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k3", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k4", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k5", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "tick", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"SynchronousInitialization", "\[Rule]", "False"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "seems", " ", "to", " ", "cause", " ", "the", " ", 
     "tabNumber", " ", "to", " ", "switch", " ", "if", " ", 
     RowBox[{"enabled", "."}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.6013845596960135`*^9, {3.6013849419158754`*^9, 3.6013850018713045`*^9}, {
   3.6013850794767437`*^9, 3.601385097266761*^9}, {3.601385134804908*^9, 
   3.6013851913481417`*^9}, 3.601385299290316*^9, {3.601385437846241*^9, 
   3.6013854385522814`*^9}, 3.60138559342614*^9, {3.6013868469728384`*^9, 
   3.6013870381917753`*^9}, 3.6013877675854945`*^9, {3.601388376944348*^9, 
   3.6013883890050373`*^9}, 3.6013884249690948`*^9, {3.601388673194292*^9, 
   3.6013886824388213`*^9}, {3.6013891407130327`*^9, 3.6013891464263597`*^9}, 
   3.601389335188156*^9, {3.601389712307726*^9, 3.601389713789811*^9}, {
   3.60138980486102*^9, 3.6013899056717863`*^9}, 3.6013901293345785`*^9, {
   3.60139028932573*^9, 3.6013902895987453`*^9}, {3.601390478563554*^9, 
   3.6013904836558447`*^9}, {3.6013905478495164`*^9, 3.601390553751854*^9}, 
   3.601390946273305*^9, {3.601391042574813*^9, 3.601391043374859*^9}, {
   3.6013918894322505`*^9, 3.601391892836445*^9}, {3.601392097848171*^9, 
   3.6013921005103235`*^9}, {3.601392139997582*^9, 3.6013921427507396`*^9}, 
   3.6015052226223345`*^9, {3.6015107568728757`*^9, 3.6015107572798986`*^9}, {
   3.601515719590727*^9, 3.601515719851742*^9}, {3.601551924279357*^9, 
   3.6015520208098783`*^9}, {3.6015520737049036`*^9, 
   3.6015520787571926`*^9}, {3.6015521640750723`*^9, 3.60155218763342*^9}, {
   3.6015525875472937`*^9, 3.601552630947776*^9}, {3.6015925911300864`*^9, 
   3.601592613813384*^9}, {3.6015926462762403`*^9, 3.6015926750798883`*^9}, 
   3.6015927261078067`*^9, {3.601592756429541*^9, 3.6015927749646015`*^9}, {
   3.601592813396799*^9, 3.6015928171110115`*^9}, {3.6015936054051*^9, 
   3.601593616936759*^9}, {3.6015936522817807`*^9, 3.601593659804211*^9}, {
   3.6015936977343807`*^9, 3.601593703482709*^9}, {3.6015938032044134`*^9, 
   3.601593839254475*^9}, {3.6015939055702677`*^9, 3.6015939355059805`*^9}, {
   3.6015940687956038`*^9, 3.601594074351922*^9}, {3.601594145196974*^9, 
   3.6015941714714766`*^9}, {3.6015942162630386`*^9, 3.601594258628462*^9}, {
   3.601594310046403*^9, 3.6015943121155214`*^9}, {3.601594409881113*^9, 
   3.601594438379743*^9}, {3.6015945562274837`*^9, 3.6015945581155915`*^9}, 
   3.601594604665254*^9, {3.6015946540800805`*^9, 3.601594656909242*^9}, {
   3.601594703469905*^9, 3.601594755839901*^9}, {3.6015948057987585`*^9, 
   3.601594991432376*^9}, {3.601595046788542*^9, 3.601595049002669*^9}, {
   3.6015950818715487`*^9, 3.601595181218231*^9}, {3.6015952625988855`*^9, 
   3.6015952890633993`*^9}, 3.6015953542951307`*^9, {3.6015955048957443`*^9, 
   3.6015955051827607`*^9}, {3.60159561566708*^9, 3.601595631144965*^9}, {
   3.601595829788327*^9, 3.6015958783671055`*^9}, {3.6015963343461857`*^9, 
   3.601596523434001*^9}, {3.6015979474234486`*^9, 3.6015979721458626`*^9}, 
   3.601598243986411*^9, {3.601598621801021*^9, 3.601598627504347*^9}, {
   3.6016507978370523`*^9, 3.601650907184306*^9}, {3.601650937196023*^9, 
   3.6016509572121677`*^9}, {3.6016509919631553`*^9, 
   3.6016511666671476`*^9}, {3.6016512580043716`*^9, 3.601651307219187*^9}, {
   3.601651353112812*^9, 3.601651395776252*^9}, {3.6016514665432997`*^9, 
   3.6016514680663867`*^9}, {3.6016514986871386`*^9, 3.601651522722513*^9}, {
   3.6016515632218294`*^9, 3.6016515747754903`*^9}, {3.6016516188090086`*^9, 
   3.6016516664427333`*^9}, 3.601651704439907*^9, {3.601651747806387*^9, 
   3.6016517664024506`*^9}, {3.601651816635324*^9, 3.6016519070244937`*^9}, {
   3.601652367313821*^9, 3.601652468751623*^9}, {3.6016525085238976`*^9, 
   3.6016525239017773`*^9}, {3.601652571209483*^9, 3.601652656792378*^9}, 
   3.6016526903142953`*^9, {3.601652788091888*^9, 3.60165287082362*^9}, 
   3.601654156059131*^9, 3.6016546044967804`*^9, {3.6016551805267277`*^9, 
   3.6016552125065565`*^9}, {3.6016714442643642`*^9, 3.601671475358143*^9}, {
   3.6016715180945873`*^9, 3.6016715710796175`*^9}, {3.6016716117969465`*^9, 
   3.601671705532308*^9}, {3.6016717722811255`*^9, 3.601671913068178*^9}, {
   3.601671956118641*^9, 3.6016719704834623`*^9}, 3.601672102002985*^9, {
   3.601672313946107*^9, 3.6016723218575597`*^9}, {3.6016728085073943`*^9, 
   3.6016728355179396`*^9}, 3.6016729236639814`*^9, {3.6016860266468124`*^9, 
   3.6016861553621745`*^9}},
 CellID->106836794],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    True, $CellContext`couplingData$$ = {{{}}, {{{
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
            "]], 
           Polygon[CompressedData["
1:eJwtl3d8z0cYx3+JX35fu1bt1h6p2rNVm9qbiNhBEELsLbESIyRWCIkRM4i9
YhN71OjLqlJUzaIoWqPt+9O7P948z+ee5+5+37t77lIocFCbgd4ul+sU+IAv
/8Ty/yrEFZAPvwosRUvCXwMF8A87LtcI7OEwGJZ4XK7mbpcrHXHBXi5Xf+iI
P4e4krSXgKIwmbgYtMLYRaCY1ZoS2wQK0taT3DbYo7DfY3+ATzCCuM7oIdjF
aAvBHggHYD9MRfuc/iYQF4GdCzsnZIPxaIVt3y2wuxLfDUY7pn+N8xaG0VYX
HdMVyD9toQ5+KBRCG4U/HHrjjyP2M/rOAW1o24c2gv5e0z6Uth34O+E6Whwx
WfluxaA47EVvRU5a9HQwhvgh8JLcN/CnxiGvGXFpiQvC7wPt8RvC95CP9gC0
JuSFwH3se/Ar9KVtEloh+i4O7enjkH4vmoOfAdJDGHFt0TPTPo68HtCcmJVo
iTDU/p7N2P0c07fGuK01Ji4FbQ/shQH0twjtiGP2hfbHKEhA8/IxG+wabUu0
Jti1YDXyUfwjsJG4A7QPwg6FIXZfvWPst3CUtjFoS9FSscdhj4WRdozdxLSg
P2/8f5nfSLRlMB7/GPHH4QRsRjuJdgLWEl+PecSjDcMfLdDe0JcP+izFQAxa
Ifz99nfGEf+RmE9QHz2J9tXop2GLx3xnj+anecJ42E5sU+JeMbdnEKo1R3+B
/RyewCC7D/6QTVsoDIacjJFAf/Ewnz5K4rclbgxxy2EFFCDuIWM8gBja2msu
aNWJTSQnBX8XlNV8tT+x79NeHr8CvCRvGHE90btqHGJmQD3sfhAMc4n/jtiV
xB3A3wsV8fujP2IOj+Gp/R1jIaPdZ9pv4cTEQ2XsK3aemm9u8qPobzH6QlhF
Xia0jHDVnp3VaLXx1xB3DD8VktEekz8IrTZ+DfgF/zw5kdjTYAYkam0dc6Z0
tt7Zc36X2L7kdsevRdx0j1lPresF4qPRPIx52dorac+OnwOeETOY3NbozWAW
bUXR56Etwl8AmfELw1y0+fhzdNbx0ysOO1a1irZ/6GsHY3TH7wadYB797UKr
i11Hc7O/Q/tPZ0NnpL89b3+RP4Z+wvSNYTnaAgjEDoLesJu8vIybB0r5mLV/
4Ji68ZtdN63fALQwtDy0fwH5IQrtOmNcg3uqPVoPx5ytCdiTYCKcsrm5sSOx
p8F0fXdyRjK/EHRdNouJqYg+hfGmQiR00J4n7gV8cJszq/5Sde5hHnYptDPY
s6AC/V0l75r2P36y6iLadfwrsEx9gK/uMvzV0JUxZto74jBtF+GSrdGq1Ufc
Zu76veHE5sMuCO3o46CNVc5iu4cjiYl2zD2m++xLfQe0IDQvXarw0d5bKeS1
RPoKLY3qIlpN4mJpXwhx0BltlmO+ub59AdtfBJTHrqT9QR8XVJdhCNQhPpHc
sdjVsGdiz4AI+01bou3ADsRuhd3aMXem7s6q2FG6p2mbr3z63oK/ASbih0OY
7mXitupuIC4Bu6rOFvYt2m5DOfZTHLnbVW9gHW3T0MuinSHvLMzDT4B46EMf
d9HWal/ozoRmdp5TsSMhAqLhJFon2pqqfmJvg03QnTH6eEy7v2P6Vf837P2y
xmP2uvZ8GghnLkvRl0Eu1TvVZHLbecx31Pcsg5aAFg+L7Hqoxo7FDoMJUJ6Y
XcQ217nF/1v3NDHlHNOuuIm6p9EqOWZ/a5+HW81X9xt2a+ye9NMLNsIG1RNb
93Xvt9RdBiVsfBfsAMjGuKH4g/VG0pqiZUAbojeH1si+a/S+KWt/Yz/sWHt+
pnrMOdZ5Vh1TPbtN2zrtdexj6H70V0b3BPyAvxW2wB63udP0ZriP3Z+4cvil
4Tx+ku5CtHOMeRrmalxYoDrLuJc0P3LX4zcg7iL+ee1//FqOOQc6D3O15sSP
Qy9J3AmdZ30DtMbEbcRO1pvE7gPdM5mYQ1bIApOJiSG3Mrl3iDkOQcT0gx+x
uznmbaM3TgdsNzk+ujvsm2aOvTvX07ZB40EytENrCy1hNjGnHVP3VP+mwArV
F4+pj4m0PaX/393mDq2P1gga6n7TGdcdit1H+czTrTNEbHW9h5jHAYhymzre
w94Luh+2k3vOMXeb7rjJdtxXxA4n14+8XrpbPOZM6bzo3Oy0NeCmxqC9JgTo
3a+1IG6NziMk6fsQNwp9CfZSyEtcX/wszHE69kxyI8Abfyu5/noXeEztVg2f
4ph10Hpk9zZv75P27fbebe513e/13P+XSFd7nUNoTFwjt/k7pJPOHzRFy2/f
uQ20XuAPjbUXieuiug7NcFrYOjXF7rlYG6ucVh7zd0NJYlbh38S+BZXoY7b2
gmPWRmvURHcA8cG2Tg3wmP2vc1BZb0VyoojZrz2iOTtmP2pfrrPf77Xqmvom
pq/eNfoGaCf0XW0NvWrPv+rAN3pj6FzL11sWez+Upo9JikPbh38IDup76Y2N
XlRj4E9XHVS91z7XnCGr9gMxl6Ei41UBf7Tj+M91f2B3QGsD0eTVsHMI8Jia
rNq82G3ObVfH1CjVKj/sY2ipcBh667w4Zl6a3xGrBcMN7J+9zL6Os79jL/4e
SFENc8wdortkk91LT7AHEveQ9gfaF+RuQ5ups6Tv5zbnOFDfkfVYRnuy1gKK
4K9Fb47dAlrZsxqk30POaMikdxv+OsfEKLaxXfOftBbY1SCEuEf4d2x9XEv7
1/Rf2sfUCD+dIejobd7ZfmiT6X8SFCZ3GLnfqhbhz9EdaOtaNfKX076VvE1Q
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
            "]], 
           Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
            "]], 
           Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
          "]]}, {
         Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
          1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209, 
          1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 1687, 
          1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
         Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
          1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658, 
          1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 1983, 
          1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
         Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
          1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660, 
          1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 1982, 
          1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
         Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
          1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213, 
          1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 1694, 
          1991, 1293, 1701, 2008, 1318, 690, 1338}], 
         Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
          1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214, 
          1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 1696, 
          1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
         Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
          1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215, 
          1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 1994, 
          1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
         Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
          1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219, 
          1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 1286, 
          2002, 1300, 1312, 2016, 1325, 703, 1342}], 
         Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
          1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220, 
          1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 1290, 
          2003, 1301, 684, 1326, 2026, 1708, 1343}], 
         Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
          1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
          1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700, 
          1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
         Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
          1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223, 
          1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 1298, 
          2009, 1306, 2022, 1705, 1330, 709, 1346}], 
         Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
          1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243, 
          1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 2012, 
          1309, 696, 1332, 2029, 1711, 1347}], 
         Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
          1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225, 
          1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 1308, 
          2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
         Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
          1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904, 
          1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847, 
          1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
         Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
          1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916, 
          1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857, 
          1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
         Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
          1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928, 
          1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 1634, 
          1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
         Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
          1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469, 
          1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 1791, 
          2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
         Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
          1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762, 
          2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 2197, 
          1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
         Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
          2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764, 
          2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 2196, 
          1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
         Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
          1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473, 
          1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 1798, 
          2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
         Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
          1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474, 
          1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 1800, 
          2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
         Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
          1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475, 
          1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 2208, 
          1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
         Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
          1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479, 
          1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 1546, 
          2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
         Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
          1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480, 
          1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 1550, 
          2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
         Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
          1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
          2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804, 
          1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
         Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
          1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483, 
          1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 1558, 
          2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
         Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
          1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503, 
          2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 2226, 
          1569, 1071, 1592, 2243, 1815, 1607}], 
         Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
          1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485, 
          2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 1568, 
          2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
         Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
          2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118, 
          2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061, 
          1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
         Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
          1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130, 
          2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071, 
          1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
         Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
          2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142, 
          2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 1738, 
          2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
         Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 594,
           1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 572, 
          1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 1940, 
          556, 1941, 553, 581}], 
         Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 563,
           1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 544, 
          539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 521, 
          520, 1918, 515, 554}], 
         Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 1820,
           347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 359, 
          1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 374, 
          1837, 375, 377}], 
         Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 1832,
           368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 387, 
          1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 1856, 
          411, 414}], 
         Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 396,
           1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 422, 
          1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 1876, 
          446, 1877, 448, 451}], 
         Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
          1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
          1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 379,
           1823, 417}], 
         Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 433,
           1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 458, 
          459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 474, 
          1893, 475, 477}], 
         Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 465,
           1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 486, 
          487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 505, 
          510, 1914, 511, 514}], 
         Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 496,
           1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 522, 
          524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 542, 
          546, 1936, 548, 551}], 
         Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
          1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
          507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
          1896, 483, 1897, 479, 517}], 
         Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
          1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
          608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
          586, 584, 580, 1938, 618}], 
         Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 663,
           2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 645, 
          1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 622, 
          621, 1979, 616, 654}], 
         Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 597,
           1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 623, 
          1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 643, 
          647, 1997, 649, 577}], 
         Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 2018,
           687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 669, 
          668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 2001, 
          653, 679}], 
         Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 2027,
           706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 2021, 
          693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 1998, 
          702}], 
         Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 969,
           2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 947, 
          2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 2154, 
          931, 2155, 928, 956}], 
         Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 938,
           2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 919, 
          914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 896, 
          895, 2132, 890, 929}], 
         Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 2034,
           722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 734, 
          2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 749, 
          2051, 750, 752}], 
         Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 2046,
           743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 762, 
          2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 2070, 
          786, 789}], 
         Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 771,
           2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 797, 
          2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 2090, 
          821, 2091, 823, 826}], 
         Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
          2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
          2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 754,
           2037, 792}], 
         Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 808,
           2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 833, 
          834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 849, 
          2107, 850, 852}], 
         Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 840,
           2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 861, 
          862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 880, 
          885, 2128, 886, 889}], 
         Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 871,
           2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 897, 
          899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 917, 
          921, 2150, 923, 926}], 
         Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
          2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
          882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
          2110, 858, 2111, 854, 892}], 
         Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
          1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 985, 
          2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 965, 
          2174, 961, 959, 955, 2152, 993}], 
         Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
          1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026, 
          1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 1003, 
          2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
         Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 972,
           2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 998, 
          2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 2207, 
          1018, 1022, 2211, 1024, 952}], 
         Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
          1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224, 
          1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 1035, 
          1032, 2214, 1031, 2215, 1028, 1054}], 
         Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
          1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237, 
          1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 1057, 
          2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
HHyWGO3jlMwBmVtOdo3HKZDRF+Nr2B2ON3tEjcM2pqFAe4+2CMl37ls+8R1D
1rj78naDQrsEjJT6YM5H4tDy/uYyxcZyON0q0cKpngXHeVYeXqRFAadWf9B5
W6Kfz/hkvF6eBSuHf4Yf1yE4/OBvHxbmm/3twyK7D2tG93lhJd3nRXaf90XO
oQ31l8pgU/cCkXe1DHjzRvia4x0KrlUZKQ0olYE4tZhr2D0VZLZ7vKy5T3CM
7iNDf+ffPjLcYvWR8+k+NYTQfWpg96l5xzefiusvBoG59U5jiVHQrzjauyma
gstGk9Y112YRPb1hu3OBH4Tsmqy1jNznWboPDrvpPjiw++AU3WcHDbrPDsas
PvukSyohi+MYsG6kdI/wez8INrK0etpDwdF4r5O9B5LhRN6cXdEBFuh4fqXe
o0EKqug+PljRfXxg9/Fn03MCsJGeEwD2nMD1lWntHMIe0Bskx2P/0h0FFoTm
BJL4+XPkw+36qP24+v3ayTe4QvDAPSmL37/J36XnGWA9Pc8A7HkG7zoTNTXu
BKQ2iTOTvhD9uINfBgmefKTnIuA+PRcB7LmIWHqOAriO/Z2jAPYchdyaublf
p9WA7JHLnGmzEoBH4dIuv3UEnxNVc4R3PoMlIqf0bu6OBINHy4oaFClYc0fo
/rLEclg2YvJU+pk5CC2iilVuEXyu+9Juq1gG32bv6jKwtkPLU/lfv/qSuA19
/3vhnUyoXqf3mNEcgeXaI57WrylYf8Uu0f9dKhQr7D86eicV8+6qZpcSnp+g
mP3omWsM8Ck+4G3sjMOA7jcSe/qJvivmytz/5BGmHkv6cD0oFe1llp7Q/Wdu
eZuQ2SPHaIzt5fqzWbAQrxVPFdMtJHWz3tvb1z8I32T+9hCZmgpd+0IFkwg+
W7aot5/echeuyO6aPG1uATxcEmGLzwg+N3AXLb9jitNcPypcnZYDKpyW0unk
PB4zHs8UfZmKHNzpG4rehKPH1l1K/SQ+Vz1Y27hc8g74K+/pfna8GE5vgDBZ
wkNGloWFaZa6QOcaw+xvPSWgPKZVoBBJePj3tqsHXD0wsViG8TW+GNZYhsRt
SiHxVlEoakT03sbwgiONb4tgnvHj61OIny0ihZMKPjFwysPTydUjmSBte6nj
WiUFP/g6c0ZlsnF9eWO81IMUyBTIiJ9Ozm+qoNQ2olOAHK1rJTRE3MDRRjN0
mNjbHRVer6iL6Lz18/N35YYYVr3ARbKEgrm5+uvf2hbi9Hyzj31fvdH/ZLxE
Zim5B5MLLmZ7A/GJ+G0qlisJoVO34g+T8AfvLEqkPAgWcrpLKgVnwY6OyXMa
yHtUeXWrRj0yGCf3/6iKP5UC5m0fG93/2QsoXjxwen0hng8w5z8WEICn8/0f
LSG8zvya8/IsK2/gtj3bqaaZDwfGpl6rrSb4LPbcuHyVN+w0+DW0j6cImjV2
pvoTvXzBdLmSvGEuhvbHjD8teoJTxY5bHCN10I7re7VIdw7WHAxOHNYJwdkH
yjfWPP9Hjwjitfq7cODj7ecLr+XBO/PHLy8R+5INJ/bCxhvI3RhnGmmbC2t7
xefVkrr5ybZq++izXDw1Z/6jq7cjUS2nmFlIzvN7Pn9TlUkuCvt4GB6FKOwx
4x26WkPB3vTMoVbvILTPZDw825IN17ma3wk0U/Dys4iz8JJITLeOtolqSYd4
x1CBBqJDfXZO7RYsy8LVXXr7eXZE45Hvx1VFCJ6/LVnL9DqThcGyWYHTw6Nx
bvvIxVHy+xKGkBDPjVS0bn/18K1SPKgpJ3Nt6yL8Nq5l25+edNxw5vDzlE4v
2BHp2PD5nzmNngqrIIVMbOVRnHnnVQzOXCD2R/4VBduGnlgmFGZgca24aJ5o
DLZPuzu2k7yv6cevOlcXpeGhGekeNevvwLGlObyqBN8+rDyy6vb6NPTNb573
J/QKHmmwS+ghdXZmwDW1O1Qaep6T+Rm7NxbltzvK8JPn0vls1c03Pwc/vy9U
1TCJwoMDO92yyT2rt0utKzEn+eki+nn5bjs8K2IYZjNAQXXHgE4LIxvfHpzv
6uwShfLlTSXV5H3NL3u1Rs47Fl5dnbXbS5ABN5wrezeS593G2n9Zy9p/yWLN
rzJiWu8bxjrCCn1bnz2KDGi3mb3XkuS103xrnX0difiOr+JX6XJnXCk0w0+B
1KMzokE74wQjILb9MvPCjhyQJ1S9gPzdLSz/Gyb45ysO7uHq8oYrhZt1X+9m
AHreyNlFdJzkv5zHyUte1isiBsu2xvKLn3iE7cVVl9W+ER47kuUmSu7r3f00
c2ffAPyQLlQrT+ovV80mWx71R7ACD7688iEVNIq5V1aS8+9h7fWcnrDX08Yf
xXvg9TXUgp2e1y1TYPKGYsFeko9yLHudCfYDf3ZUD1vFYfcL6Tax7BAMEJHT
jCV1Ssp4U2lXXxR2DQae2346FE3UI87PI+c5uKIomSlkhTmBc10PiaRAyP4G
UXuKvHfWPpHMhH2iR/6XrjT1B+B2cb+yb3si4KiF+mr8TvgGy37LBPvIcN9p
VY5hOPS9u/BUezgq+ylUmRNel3pKfegPTygyQrKmnouPwMpI4y3l5HfuP4vC
Q3p90fy2WUeqdzik48auMqILlrP2mLay9pgiWHtMxufUNn39445zrH6eGh/x
hHVcUfNVRv9rv3mC/fJdQ1uWSIVi9sMf+9Z/isO37juBh9xPcfeuoOBHj3F8
qecnuch4lNM+9TGE/H7Lu/79qlwPvDMjYuh5vTvMkeN0tyf+T7H2p+5P2J+S
++rgk1d8B0+Ou3o5MW2g58P72rvjJF9Y9ncn2Ne371g13SgCjQ5Q+yI3J+IK
vyqFlSRfqrweu428iMEeabvLe2enoqTFjIqVRNdH8IutwiFNHOhZW+2+ygq+
SV+IbiT+F7L2th6y9rbOsObM1yl2nXNNTca+3YkhxctTsEFYWnMy0VNaliMG
bisy4M2UD6uf/A4FIds1PL8IH04bGMfRZwmwP2o45HZXCujsaQ5a3/WfuXHY
MGFPbUuD9afVG52BOX319KYeTdihu6BSmpxnEes8jhPOY2qp4Vl8LgMMBt7D
ZYso2F56uM2E+BHgf5j8cHc6WBj8iblSEAkqt2U+vyfn2W908HLYTyeI5A46
+kHDAG9P01yxmfg/wNpHe8zaR+NnzdsfOT34a3CrI4z4m6rW9rujkuWJ8cNj
/7W3m2B/KaOwgYszE0buWI5udYuFbaUAegQ/c0av+jUUZcAdU4dd13pjQO2Q
rmgY4QPeuWYvX15xh0fzjjuvSvTEHCr7yCUSDzNZe3DSE/bg1vEx9XQCHwOn
+KZxw1WBmGBft4xB9DsPy15+gv1DlbuerxblQNmk6aoyzvFgIVboH0Lqzjse
W73sVznAYAZf/N0WB5zRaiENz/7RX5OFBGf7w8WzM3zGYiIwqzHAo4PkozZr
/27vhP27U5NNVkv4+YGhcLUFY3ISLhQ31XKm/ms/cV/PfiH4JC7Kg008prOu
PIiGoQrZHQeJTtz+QkXH2z0fmi8qGHZMj4L9G7VnSj2lwGT7b9EVL1ygbmrn
172WKbjCrc1zDck7f9benxxr74/jI733FyWc71FRbwYrpGdXilQxUE115Ohz
grc/Bel9wBkT9gHtG144zBXOh/oBz9SL1yLAQ/Rbbw3Ry8KB0aMD9QUwkvkl
d/JIOCy+6HnydzE555XxWwEDDnjTMJxS+paGC457WN/9SME8of/f/8xc5U3e
m/xRaa6rdkp4Fs5SXyFuS3TEKpY9zwR7tTMak7atQViEhjZrnMPg4poMjmTC
Wy6mBDspCgZj9q3rD1Ov5OBtubCKDsI3RFn7jNUT9hlzlnDwfJvEgAoP4UCt
11EgLPQyyJ7UlxfyjlJVuZngYbz5kPuvYMh/JjXeRfKlMcrzruDZQlgUNFw0
dcQOzLILGE/IeZyHRNTUL6TCpqL2wATDRNijp8B1m9zzlcwlvMEeDDg8aDw5
8lsyuKc7LT9Pnouf46CY5MlCyLTeW6dx+AYoLXaxmllOdBbD6Og0U4ScP1tb
/QKNoVGx9tU3cp+DeyaV6xZnwaolBSX3uJJh9YD+C4daUjd5H1CMkRx42hKb
dPJcCjTwf1auJ3yv8PZGmQpSd0MVU2IlzTwxdY7H4iDCl1qmXNdctCwb7k9J
kVd+HoLnZAPWriV5t7FffPWDyhxYa7hJ70FIGnjvb1vKT/h8ZNKOSW1LiuCr
QOey25ZJ8Np04KwS4c+Rt6bVzuCLhc1rRVccbULM4nobeZ/o6zBTgStbFgXC
HNtzh4IWF6HB3csPefMp0OuqzFW5XwRqJ+93muxKgAjOGWsGkigInxTLGzWp
GHgYSt/Md8XDjowytej4f3jg9AyR849AQuRd0rLGIpRjPO0pzSL6Lt1OTzDL
Bv5Ey1TZ/SzGqN9rwiKIH43u5GvHPYtBl+fHjAr+JFDizzVcRHRroj3jW/LM
UrAyPc9YS4XD9wd53fbBhP/0XehuX+AKV3Osve2uFeOlL7YJTgwKhBTePRwt
8AVdkxsKCz3yUed9yZ5Aku9812429tuUwtr1rx5XjIRBjmPkttIACmYFHFW0
euEB56Reqsw/U4i1Kgu0ssn9f4/YPDfS1xc6FI5M7WSmQVJLb/oQqSMnWPuM
kRP2GR/TegeYXH/1DrD1zga75LchO0ohwddSXdndC069mGR4MJSCmgumcp5O
j+B4ZssF+750ENk3FvkPL5rE2os8MWEv8tbitwe32HrDKX7xqj3zSB34maN0
gfDYaNa+ZPqEfcnW9cafqg8UgfwZx/3t2x5jmLYt//xc4kd64I+vZB5Max7Z
NEsmBW+/WfJ8HonPuSul4hS148BKoLbO6Xw6dMuqV80m+RLG8p82wb965w6P
P0WxYPVrdmIC5MDynCta4SSew1n2GRPslyjNbQrkyoLwH32MXJ50rK5QrL9P
8q5g8uncgUdJQGkcmVxXX4yHpo59f0Dup33SHp9T4XGwYfbx2/uX5IFF6+95
z/+Zf15M74EeZe2BLmHtXfJV3kmqlkyB543SEYU78mCZ9vyXo0UUcDTT+6Fh
E/ZDy9XGA4+ujIcm1xO6Ev6luFC290WRJwWbm/uE8s3CYVmz792y7FJ0Eue2
2PTPv0/VNqn8flcOiAxtTA1MSofYXI8c/jziv4X2HzrB/8YmFxVO3zy4LvY2
90hTJrgOrbM1J+e88y/23QuWWll6REGx6OU1r3iKsf9R6fzvJC8STEBzfGks
cF/lvxiaXoSmwTXUKPGzNjVywVhtPji6OZ89cysdJEY3eN5PpSCbtffaM2Hv
9duvP43UkyI43jkcUJkdC7sVe+zWExwoYtl3T7BXPimWFnczhdRxy0Fb2UK8
ak/KagaJn1N9G0SYqVAgW3Un8ncOvlX/IXqDxI9Yisrb6hGEY9HFb25zBUDf
R33rtQXsfdsk1nyM43/mZDQVPilp/UqFwFe6oRyyOaiR3cNXS+LcVG+1PbRn
Y7U+H0P9XBas2z0jsJHg0l1aX4Mfra+Bra81WPkYPiEfp9asWehQVgjjL3Z+
Uti2Bxx3CAgHk7xWYe35vp2w5yv6rbnWqzYb118R+aBjlw0Vctkqj9OIfvQx
yI5vyEIhh2VnHiZlA3Pw7mqRf/ZZjsW3OVVmQFuaYpu8MwMdpRdtTyJ8Q5vl
/+ME/ze2imbdmpoFzzLuVpx8m46T+sJMzcnzctTS+8WRE/aLlQq1rEUEElHo
wO2m4d0I/LecfqmR+x888vW47JJUXC53xNf9YQnEHtp4i9+XArd7jfpayYmw
1mOJq9TCYhz8uhrrY4j/+v9/f7ngwY2Dix7EwPDMhTyPS0txdrrMWxkvEp8s
+9gJ9mPjY1Wbo1NQyXF9joJFKazg90iXdKPA4OW2SzwP49Fw98JAfpdSOL04
NaGD5FG4Wson0cNJsP/lpJhFiaWoPa127hJ3CjhZe9PHWXvT7PzddZ55Yodk
MgwPhNffLS7BY5necRIk74pZ+9RFE/apr9DPi6vp5wX2856j7xmb6HsG9j03
b70U2P85FXLvq9SutCrASrc3/bvJfZax/OdP8F9Lv3dYRb93ZL/3KpZ97gT7
H6p/4wHf0fEA7Hj4UP03DjG54m8cIjsOJeh4Awk63pAdb3ysPfETE/bEWXkB
mXReIDsvFv2L/Ww6H1GWzkfsZ+Vj5lT7sxLaWXB651xmoXEm3vSRUNpMeILV
v+yhu9L5joV0vgM731NpP2hB+wG2n080zqAJjTPIxpkzNJ7gZRpPwIyFJ4nT
Ro8xAyJQZ8Uh5c9KxWDQoDFLjODeAhrf0JnGN9zEwrdFNK7ifRpXkY2rj9fB
VsMFIfgIPDt59Eqh32KkUf8xwQEOSXOjjjiUd4+eV9NUCAWc14PGswn++6j4
yMblYJx8t7H8ugxc4JvYef+ff2dGQlp2iRQDbQROHTQZzsHzSk7NX0kd+Xj1
6tyFe5LweKPlxScni8H+5PL+9kjCQ1YMG0YkJ+PV0IApikYIswzDvsgRHiJw
BmOlo5Mw7JP2dpmGHKSGfqhYEb596w3zaGRZIv76kLfm6PcsjHhe6bG8jvBV
lzb58eNZ+EKw8NhKtXTQsTN17CHv8Qpdr1GQrtfArtevhf/Wa7xF12t8z6rX
q2iegHo0T0A2T2ih+QCa0XwA2HxAguYnmE/zE2Tzk/M0P0FNmp8gm5+E07wI
22hehGxetJjmV7ia5lfI5lcNNA/HVJqHI5uHs/ep90zYp04VlJpyONcbMwyW
cwmtKQD7z1b3mkl+ybH20Dsm7KGb0nUEY+k6AidYdeTdlD8ZshdLUdXppPSN
jREoxh3Z8pScR/ycxLewmQ9xAZZ07ysqhsRDe8+uI/GpxPLfNXHPve9L5PGy
3XB52EFwbmcZHPeXn67qQcFpln33BPtpyk8NJg0V4x7Zfu/Vp5KwRfuXlUMI
4XUuli/+j64vD6vp+/5HCKHQYEjGDBVlKvMqSYlSlISQKcrUoJDQIBHRXJrn
ebjN82pSaZ4VqVBEdCsNKPw259zv5/c+z+Pf+5zn3H3W3nvttV5rr9dLUjUP
uUs9zCJXRmPBFhWfncRf8dtop5SH2GOk2UjnFbsC2HLTxWCvHxvW0/31Coz+
esUUC7fi+WGoXuevHrk8E+b41UXrkrxSln5+K+N5mcwnzmcP5OKMI54tB6Ni
kGvVyKA02S9StbpCS5IzcZlqvcuZyQk43D9x4AwZ/9h7X7aZnonCRb9vCnxt
TwUNM64Lt6vZ4EX39QOjrz80lcu0fkEMLhYPdm58nAKO3WVOlbVkX9D9/k2M
fn/lQts7e1+ko3lVaJDj9gRcEuDjsJGs533sUeGqpDS08+gJDMuJw9iGgdHP
f3icXkunKuakY19qzl1rE3e4l5vspFbPhrn0+00Y778ZGztw5zri3pk/Akf6
DqDytTshL8j7RejnVRnPu6h1m7ME0rBjqBjFhONQzlF8+Crx23xvucT5PySg
tay75Y4J8XjyTePp+8QfLqPyPvSm8j7k5H2aNI/BQ5rHgIOTvKLyTfzh9Tff
RE6+uZjmN3Cn+Q04OI8llYfidioPRU4eGkfluVhF5bnIyXOPU3k0LqTyaOTk
0Uvo90cx3p9P4VRI41TIwam4l04PmSHtBYYfzWr2bUqDsjXGWw42sUGeyo/w
PJUfASc/Eqf5ImoYfBHaatOUXn/OwT11mm83HgnG5Rfv6pn/f+OJYYwH/D9J
VtQYwtH88Y7mx1NgnsOZz87tbLhdK8b7uMMaLe6fG10bkQi+ATyl+h/Y8KI/
yDNAOhv3CcDzndND0HRIP86K7HcFmhfiJ80L8YzmhVjn0S2mvDMDM+VepY5R
C8PFET5LNpH53UE/P3bbf59/49F/956WFQ4l1Eh2n4mB90NR75f3s+Gulu+x
3IVuOGxkl3p5WQQ0ZY/hXUuel3M6ojw9JwM9Zg0pXBobgaExlqnaZN0W0nwU
PQw+ijtnr7LG9KVirvbI1bkBEWgcsnB+SQ2Jw//x/BbR5Ufrw33xwKiCYpZj
IJT3Gl1hD7Fh6pdm5eNTA7A8Y4/K5hd+4Lrc0uTWMNkvWg8cWl1S8Gd5+upn
XREo/N7/1b0GEhfRPBhZDB6M0iQ5VlZjKj5+87LxuUckLrsYkL6HjKea5sfo
YfBjRKgUakz0eoJXu90OVY51g+YIl0run2zIpPBDbKfwQ+DghzePcLnVfEjB
XN9F/JXBEXikWauhhuzfqn/wb1wwam96EZqEm4dYBXOSQrB08sZnH1+TfJl+
/hPjeV8K58QFFM4JHJzTgcJXUWjqX3wVOfiqCYWj4nkKR0UOjqpI836spXk/
OHWKYxTei28ovBc5eO8u+nlJxvPOc/7izLC66y/OjByc+TdVf8FlVP0FOfWX
vTGyLaYqkTDv4jPPd9wseHEgpGQcec8NCgeDCgoHAw4Oxq/6cYk4tyUkT93p
2xBxGyXsc5uukfdrHhV7PpQWCF5HJA8KPY2DKy9SVneQ96vMWtrY9CMQ2gfj
7DR+hIP4haQSr14S51yZ2CK5xgOeCfh4ZX9+gM7RWjpjyTxeEM+7pJPlBNHK
dz6uX+aHjtEiio0/2HDQOmie5ucgkC2bbf90dzjoKV3i+lPHFxDZ2nRIxg+G
N0V9MzANgZuP7wv8JOtqsSNKf6t5Ap8Pch3g3RWAj5qKp2wh7+FtMlO5rOgG
Obt/xHk+CMA1v7oWyn5nQ2XiXk0boQBItD4mZhIRDCF9qxvzyHsWUfUXoOsv
wKm/9M6cLm268Ql0XDcNbXCIx7ykhlk1ZL/4beh2V9WyhaDbr25kd8XjM5W0
rX7k92qqvgMNVH0HOPWdSqreBNVUvQk49aZO37B59h+c0PEyd87CNyw8flmD
5UHsqUjVufAKVedCTp3rBlXPgkiqngWcepYlVV+DdKq+Bpz62kWqvoZ+VH0N
OfW1eVRdD5uouh5y6np7qfogHKbqg8CpD26l6sgwkaojI6eO/MLm+0GV5iSQ
vK5cmZ0VDlUXlqhJkXX+3u2x5entMZC4xD+K/1ocxPQPfxMm6231YeEt33iT
wGef+d0TaeYgsjSx2+c92S+8pl8cViaD5Yd15ePsIqDNsm1jFjkHNb/mLZBq
TQanG6ueyN0Kh2Om2o3B5Ly4mPauWzsoCcLbFWebypui1txfn6T/9HMJm719
kZkI6ksFi1yPOuKbu8L+huT9hVQdFj5RdVjg1GFbqDovxFN1XuDUeV3jTRPE
D8bBo555bhO3huOp2ZvOGZJzoXf/5NHx6jEw4bXvjbeqLPxupl1V8oePkaoj
gzhVRwZOHbmfqlPDdKpODZw69fceyaExr73gVPj10xk6mbhoQEx4HInP149c
gl1lD+HSluPjLkSkY8W5Wu/PxK+2U3VwUKXq4MCpg1tRdXbIperswKmz52fX
Thn0NUVRc88zLaoZeEnHLegOGc/g9HclMp2OKJaw22DL1xycPuSmG5rPhhNU
HR/uUnV84NTxeah7AgDUPQHg3BMYs+9D4b1vzmgQmHJ/zJVsTL4sKydE4ufN
n13n2u30wsUCxm3OyWm4NytrQ0MjGyZT9xngS+bf+wzAuc8gV+mivnxqKgwm
C6VuagyGhb/cN3eTeblD3YsASepeBHDuRVyk7lFARfPfexTIuUchqntyc5JS
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.49488850049789845`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$9256, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {0.25}, "numberOfMasses" -> 1, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
     "mPosFirstCell" -> {{0.9, 0.7}}, 
     "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
      0.7, -1.9000000000000001`}, {2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
      0.8, -0.6000000000000001}, {2.6999999999999997`, 
      0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, {
      0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
      2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    0.25}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       TabView[{"dynamics" -> Column[{
            Dynamic[
             Row[{
               OverVector["q"], " = ", 
               
               Module[{$CellContext`qm$}, $CellContext`qm$ = 
                 ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                Slider2D[
                  
                  Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False, 
                  ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
               " 2 \[Pi] ", 
               Dynamic[
                NumberForm[
                 MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
            Row[{
              Text["time, normalized to one period, t/T = "], 
              Dynamic[
               
               N[($CellContext`tauSliderValue$$ - 
                 1)/$CellContext`dynMeshSize$$]]}], 
            Row[{
              Dynamic[
               Manipulator[
                
                Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {
                1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                ContinuousAction -> True, Appearance -> "Open", 
                AppearanceElements -> {
                 "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                  "FasterSlowerButtons", "DirectionButton"}]]}], 
            Row[{
              Text["oscillation scale factor:"]}], 
            Row[{" " Manipulator[
                
                Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], 
              Dynamic[
               NumberForm[$CellContext`scale$$, {3, 2}]]}], 
            Row[{
              Text["Angular frequency \[Omega](q), selection:"], 
              Dynamic[
               SetterBar[
                
                Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = \
#; $CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
         "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
         Column[{
            Row[{
              Text["number of mesh intervals "], 
              Manipulator[
               
               Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                   EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {2,
                30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[$CellContext`freqMeshSize$$]}], 
            LocatorPane[
             Dynamic[$CellContext`qPlaneLoc$$], 
             Dynamic[
              (Graphics[{
                Lighter[Gray], 
                Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], 
                   Part[#, 2]}, {-Part[#, 1], 
                   Part[#, 2]}}], Black, 
                Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                   Part[#, 1]}, {-Part[#, 2], 
                   Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
               ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
             ContinuousAction -> False]}], "parameters" -> Grid[{{
             Row[{
               Text["mass: "], 
               Dynamic[
                If[$CellContext`rawNumberOfMasses$$ > 1, 
                 SetterBar[
                  
                  Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   Range[$CellContext`rawNumberOfMasses$$]]], 
                 $CellContext`massLabel[1]]]}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                 Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                  ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {0.25, 
                 Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
             Text["coupling to neighbouring: "], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 1, 
               SetterBar[
                
                Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 Range[$CellContext`rawNumberOfMasses$$]]], 
               $CellContext`massLabel[1]]]}, {
             Row[{
               Text["horizontal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 1], FontColor -> RGBColor[
                  Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
               OverVector["a"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
             Row[{
               Text["vertical: "], 
               Style[
                Subscript[
                 Style["k", Italic], 2], FontColor -> RGBColor[0, 
                  Rational[2, 3], 0]], " || ", 
               OverVector["b"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 3], FontColor -> 
                RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
               " || (", 
               OverVector["b"], " + ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 4], FontColor -> RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], " || (", 
               OverVector["b"], " - ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Text["coupling from "], 
                 Dynamic[
                  $CellContext`massLabel[$CellContext`m1Sel$$]], 
                 Text[" to: "]}]]], 
             Dynamic[
              Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]], 
               Blank[], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  DeleteCases[
                   
                   Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 $CellContext`kLable[5], ": "}]]], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Dynamic[
                  Manipulator[
                   
                   Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}]], " ", 
                 Dynamic[
                  NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
        Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], ImageSize -> {250, 350}]],
       Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 12}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$9256, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
               "]], 
              Polygon[CompressedData["
1:eJwtl3d8z0cYx3+JX35fu1bt1h6p2rNVm9qbiNhBEELsLbESIyRWCIkRM4i9
YhN71OjLqlJUzaIoWqPt+9O7P948z+ee5+5+37t77lIocFCbgd4ul+sU+IAv
/8Ty/yrEFZAPvwosRUvCXwMF8A87LtcI7OEwGJZ4XK7mbpcrHXHBXi5Xf+iI
P4e4krSXgKIwmbgYtMLYRaCY1ZoS2wQK0taT3DbYo7DfY3+ATzCCuM7oIdjF
aAvBHggHYD9MRfuc/iYQF4GdCzsnZIPxaIVt3y2wuxLfDUY7pn+N8xaG0VYX
HdMVyD9toQ5+KBRCG4U/HHrjjyP2M/rOAW1o24c2gv5e0z6Uth34O+E6Whwx
WfluxaA47EVvRU5a9HQwhvgh8JLcN/CnxiGvGXFpiQvC7wPt8RvC95CP9gC0
JuSFwH3se/Ar9KVtEloh+i4O7enjkH4vmoOfAdJDGHFt0TPTPo68HtCcmJVo
iTDU/p7N2P0c07fGuK01Ji4FbQ/shQH0twjtiGP2hfbHKEhA8/IxG+wabUu0
Jti1YDXyUfwjsJG4A7QPwg6FIXZfvWPst3CUtjFoS9FSscdhj4WRdozdxLSg
P2/8f5nfSLRlMB7/GPHH4QRsRjuJdgLWEl+PecSjDcMfLdDe0JcP+izFQAxa
Ifz99nfGEf+RmE9QHz2J9tXop2GLx3xnj+anecJ42E5sU+JeMbdnEKo1R3+B
/RyewCC7D/6QTVsoDIacjJFAf/Ewnz5K4rclbgxxy2EFFCDuIWM8gBja2msu
aNWJTSQnBX8XlNV8tT+x79NeHr8CvCRvGHE90btqHGJmQD3sfhAMc4n/jtiV
xB3A3wsV8fujP2IOj+Gp/R1jIaPdZ9pv4cTEQ2XsK3aemm9u8qPobzH6QlhF
Xia0jHDVnp3VaLXx1xB3DD8VktEekz8IrTZ+DfgF/zw5kdjTYAYkam0dc6Z0
tt7Zc36X2L7kdsevRdx0j1lPresF4qPRPIx52dorac+OnwOeETOY3NbozWAW
bUXR56Etwl8AmfELw1y0+fhzdNbx0ysOO1a1irZ/6GsHY3TH7wadYB797UKr
i11Hc7O/Q/tPZ0NnpL89b3+RP4Z+wvSNYTnaAgjEDoLesJu8vIybB0r5mLV/
4Ji68ZtdN63fALQwtDy0fwH5IQrtOmNcg3uqPVoPx5ytCdiTYCKcsrm5sSOx
p8F0fXdyRjK/EHRdNouJqYg+hfGmQiR00J4n7gV8cJszq/5Sde5hHnYptDPY
s6AC/V0l75r2P36y6iLadfwrsEx9gK/uMvzV0JUxZto74jBtF+GSrdGq1Ufc
Zu76veHE5sMuCO3o46CNVc5iu4cjiYl2zD2m++xLfQe0IDQvXarw0d5bKeS1
RPoKLY3qIlpN4mJpXwhx0BltlmO+ub59AdtfBJTHrqT9QR8XVJdhCNQhPpHc
sdjVsGdiz4AI+01bou3ADsRuhd3aMXem7s6q2FG6p2mbr3z63oK/ASbih0OY
7mXitupuIC4Bu6rOFvYt2m5DOfZTHLnbVW9gHW3T0MuinSHvLMzDT4B46EMf
d9HWal/ozoRmdp5TsSMhAqLhJFon2pqqfmJvg03QnTH6eEy7v2P6Vf837P2y
xmP2uvZ8GghnLkvRl0Eu1TvVZHLbecx31Pcsg5aAFg+L7Hqoxo7FDoMJUJ6Y
XcQ217nF/1v3NDHlHNOuuIm6p9EqOWZ/a5+HW81X9xt2a+ye9NMLNsIG1RNb
93Xvt9RdBiVsfBfsAMjGuKH4g/VG0pqiZUAbojeH1si+a/S+KWt/Yz/sWHt+
pnrMOdZ5Vh1TPbtN2zrtdexj6H70V0b3BPyAvxW2wB63udP0ZriP3Z+4cvil
4Tx+ku5CtHOMeRrmalxYoDrLuJc0P3LX4zcg7iL+ee1//FqOOQc6D3O15sSP
Qy9J3AmdZ30DtMbEbcRO1pvE7gPdM5mYQ1bIApOJiSG3Mrl3iDkOQcT0gx+x
uznmbaM3TgdsNzk+ujvsm2aOvTvX07ZB40EytENrCy1hNjGnHVP3VP+mwArV
F4+pj4m0PaX/393mDq2P1gga6n7TGdcdit1H+czTrTNEbHW9h5jHAYhymzre
w94Luh+2k3vOMXeb7rjJdtxXxA4n14+8XrpbPOZM6bzo3Oy0NeCmxqC9JgTo
3a+1IG6NziMk6fsQNwp9CfZSyEtcX/wszHE69kxyI8Abfyu5/noXeEztVg2f
4ph10Hpk9zZv75P27fbebe513e/13P+XSFd7nUNoTFwjt/k7pJPOHzRFy2/f
uQ20XuAPjbUXieuiug7NcFrYOjXF7rlYG6ucVh7zd0NJYlbh38S+BZXoY7b2
gmPWRmvURHcA8cG2Tg3wmP2vc1BZb0VyoojZrz2iOTtmP2pfrrPf77Xqmvom
pq/eNfoGaCf0XW0NvWrPv+rAN3pj6FzL11sWez+Upo9JikPbh38IDup76Y2N
XlRj4E9XHVS91z7XnCGr9gMxl6Ei41UBf7Tj+M91f2B3QGsD0eTVsHMI8Jia
rNq82G3ObVfH1CjVKj/sY2ipcBh667w4Zl6a3xGrBcMN7J+9zL6Os79jL/4e
SFENc8wdortkk91LT7AHEveQ9gfaF+RuQ5ups6Tv5zbnOFDfkfVYRnuy1gKK
4K9Fb47dAlrZsxqk30POaMikdxv+OsfEKLaxXfOftBbY1SCEuEf4d2x9XEv7
1/Rf2sfUCD+dIejobd7ZfmiT6X8SFCZ3GLnfqhbhz9EdaOtaNfKX076VvE1Q
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
               "]], 
              Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
               "]], 
              Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
             "]]}, {
            
            Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
             1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209,
              1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 
             1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
            
            Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
             1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658,
              1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 
             1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
            
            Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
             1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660,
              1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 
             1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
            
            Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
             1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213,
              1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 
             1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
            
            Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
             1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214,
              1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 
             1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
            
            Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
             1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215,
              1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 
             1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
            
            Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
             1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219,
              1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 
             1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
            
            Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
             1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220,
              1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 
             1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
            
            Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
             1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
             1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700,
              1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
            
            Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
             1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223,
              1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 
             1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
            
            Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
             1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243,
              1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 
             2012, 1309, 696, 1332, 2029, 1711, 1347}], 
            
            Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
             1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225,
              1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 
             1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
            
            Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
             1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904,
              1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847,
              1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
            Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
             1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916,
              1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857,
              1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
            
            Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
             1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928,
              1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 
             1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
            
            Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
             1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469,
              1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 
             1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
            
            Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
             1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762,
              2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 
             2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
            
            Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
             2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764,
              2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 
             2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
            
            Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
             1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473,
              1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 
             1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
            
            Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
             1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474,
              1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 
             1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
            
            Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
             1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475,
              1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 
             2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
            
            Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
             1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479,
              1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 
             1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
            
            Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
             1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480,
              1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 
             1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
            
            Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
             1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
             2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804,
              1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
            
            Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
             1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483,
              1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 
             1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
            
            Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
             1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503,
              2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 
             2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
            
            Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
             1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485,
              2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 
             1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
            
            Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
             2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118,
              2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061,
              1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
            
            Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
             1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130,
              2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071,
              1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
            
            Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
             2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142,
              2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 
             1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
            
            Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 
             594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 
             572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 
             1940, 556, 1941, 553, 581}], 
            
            Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 
             563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 
             544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 
             521, 520, 1918, 515, 554}], 
            
            Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
             1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 
             359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 
             374, 1837, 375, 377}], 
            
            Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
             1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 
             387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 
             1856, 411, 414}], 
            
            Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 
             396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 
             422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 
             1876, 446, 1877, 448, 451}], 
            
            Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
             1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
             1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 
             379, 1823, 417}], 
            
            Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 
             433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 
             458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 
             474, 1893, 475, 477}], 
            
            Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 
             465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 
             486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 
             505, 510, 1914, 511, 514}], 
            
            Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 
             496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 
             522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 
             542, 546, 1936, 548, 551}], 
            
            Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
             1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
             507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
             1896, 483, 1897, 479, 517}], 
            
            Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
             1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
             608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
             586, 584, 580, 1938, 618}], 
            
            Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 
             663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 
             645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 
             622, 621, 1979, 616, 654}], 
            
            Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 
             597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 
             623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 
             643, 647, 1997, 649, 577}], 
            
            Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
             2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 
             669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 
             2001, 653, 679}], 
            
            Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
             2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 
             2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 
             1998, 702}], 
            
            Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 
             969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 
             947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 
             2154, 931, 2155, 928, 956}], 
            
            Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 
             938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 
             919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 
             896, 895, 2132, 890, 929}], 
            
            Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
             2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 
             734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 
             749, 2051, 750, 752}], 
            
            Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
             2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 
             762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 
             2070, 786, 789}], 
            
            Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 
             771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 
             797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 
             2090, 821, 2091, 823, 826}], 
            
            Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
             2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
             2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 
             754, 2037, 792}], 
            
            Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 
             808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 
             833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 
             849, 2107, 850, 852}], 
            
            Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 
             840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 
             861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 
             880, 885, 2128, 886, 889}], 
            
            Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 
             871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 
             897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 
             917, 921, 2150, 923, 926}], 
            
            Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
             2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
             882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
             2110, 858, 2111, 854, 892}], 
            
            Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
             1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 
             985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 
             965, 2174, 961, 959, 955, 2152, 993}], 
            
            Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
             1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026,
              1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 
             1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
            
            Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 
             972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 
             998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 
             2207, 1018, 1022, 2211, 1024, 952}], 
            
            Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
             1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224,
              1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 
             1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
            
            Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
             1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237,
              1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 
             1057, 2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0., 0.49488850049789845`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
        "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
         0.7, -1.9000000000000001`}, {
         2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
         0.8, -0.6000000000000001}, {2.6999999999999997`, 
         0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
         2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                 "]], 
                Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                 "]], 
                Polygon[CompressedData["
1:eJwtmQe4FeXVRs+9c2bOAQVEFMFKVUFQQUCwYcPe/WOMURNbojG2iD2JsbfE
WGKJmugfe4siooKKgF0siKigIFbADiiCgJC1nr15nuHOmm/a+cq7372n+5En
HXBia41//Ffnz8FlrTaWv6/D8xu12u/gMfDXcNGs1U6GX4CXwW3gx6s4fzb8
I+dPht+G+xe1Wk/az+f8t+Du8LrwX+Cp8ELOX8T5D8BfwcNp35z2w+Gn4Gm0
f0f7HvCD8BR4AfxXeAbci/PX5/yz4FfhnvAG8Enw8/Aizq/gE+Hn4AVwI9n2
9+HF3O9o+Bn4I3gpfDw8KX9vK+cP5ffs1FKrbUfnPAv/mvaXaJ9L+wrOHw8v
hQ/l+dvR/gy8DP4NvBt8G/wpfCC8LfwsvAI+E94GHsF2TBHn78L+f2j/jPbD
4Z3gifBy+Fh4V/hKtpnsz2K7iv2naf+R9kPg4fBd8Fz4OHh3+O/w+/Dm8Ebw
I/ACeD94GHwf/AV8ALw1fC88Dz4J3hven+2MIt73APZfpH0l7X+GD4QnwT/B
f4D3ha+DP8zxXg9uYZvXGn12ahl9at86p44pY749keMxM8fEfY+Noe8Ppf1J
9qdybCFtR8Hj4VnwkkaM9ws5/2bmHHTfY85Vx9SxfQT+RRlzyLk0Dt7dvoU/
bo058Jsy5pxz7yF4NM+v8b5fwi/bp2WMuWPvO/lux7JNZP9zjq1sxBrx9zmH
fk/bKvDKvL9z7U9sr7M/gP7pS9v3XPN2a8z5X9F2Bttk9n/kWJP2W+BP4E1z
PV0AT4M3grvBf4Pfg/vC3eHJ9jHz9Sr4V/B03wG+ET4afhluga+ED4UP8x5F
8OHsv0t7W9qvgX8Nz877jYJHwuPgRTzvWvgo+DF4IXwB/At4Ctzg/Ivgg+G3
4CZ8MfzzbK/g2+Hfwa/BdfhW+LfwK/l+D8KnwNPy+vvhk+HP4TXhe+AT4E/h
DvA0+FJ4Qq6/K+Bfwh/C7Wm/Dz4JXjXHQ82YwPh+lO2v034hbcvhXvC78OXN
0KcvOfccuD/8ZhXrY294aM732alfm+V4fQzvCQ+Br4FnwVvD/eCz4dfgPnAP
+8N3gHeFB8FvVLH+d4AHwLM4f1XeZxL8R3gJ3B1+Hv4z/C3cpSU0QW1ocv0m
8Fj4r/CPtPeAJ8MXqL/2cRF8HvvLaO9J+2vw+fBPcG94BnwZ/B3365rPPwf+
gPa14NHw6c3QFLVlM7bezZijar99YF/0SjYmvFyF3nzO/mkc2y/1aD58CrwP
/FTqk5qj9tya83t3eDD8b/jb7N8t4alVrI99U8/UzznwCHgL+zPn27nw/8Gj
8vrj4T3gd7j+O/io1Nt+8Lac3w+9fxJeG94OXgseBfeBt4E3hsfCM+BvaqHh
avmd+XzvtzN8DzwT3j/19cGMd7+Ed4T/C3/t2od3gHtwv6Hcf23uPzr1+PO8
fivfF67Rfm/O53lVxIerc70upr0b7U/Cx7o+qohPF+X6e5L2H+B/GnPgL6rQ
7xtSH25M/d4JHgi/Chfc7yb4GON9Gf11CXwI/Dz8fS00RC2ZC3fK9X18zt92
+b4nwt9UoQ935/p9KX/PhfBBqQc+bwx8Rq7v1eBHUn/m5f3Hw2elXrWBH875
OD31y/l5WjM0VW1Vw9XyDXn+VrR3o3/HwIPhHeGt4UnwOmwbFKEPZ5bhWYxl
9slFcGe4I/yGMRBeG17fWMfWlf1Dyogtxpg32HaDH0g/JXfxGUV4oOeriJHr
FqEhask5GR9W4Vgn2lZ3TbPfYOvYjJgxOJ9vLOkDb1HEGriqDA3aPt/X++mp
huf9X69Cw35WxBxU2/R4vpvvOKoK/zMxn78q26acP6wID6OXWYtzBtJf69Bf
j9LWGx4GD4bvgFeB+8F1+G74JraFXP8d283sl7T3oX0RfAtcwBu3RPs/1RJ4
ODyI65+BB8Lbw1vCE9Q73vcV3vdx3ufnvE/HRvizTWl/ivalqXfzud+N8IIy
9GsOfC28yDGFl8C3Gg/sE7jB9XfB9XyfjvCD8GrwZnAH+AG4Pbwh3Aa+F+4E
D4CXc7//h2tV6Gcr7XfCHfL6L2n/Rz5vU/gL+Dr46tSHgfDG8HOOH9eO4Jxh
nHst7e/WYgwcC+eYc02PcG4ZGqPWuCanVzEnnBsdc/ycb535+wHH/uH4+c7w
Gmxrs13CsXdqMYecS2Mzvuv/9oLX8Dew/wrHRhp74bap5xeX4RFPLkKj1Co9
eO8iYtxZuT58zuXsX1GGBqvFetYPq/AsGxbh6fUyehq9jTHx0jJi1otFxDxj
2U0ZX40pxhbvOb0Wa9Bn6Tn+UoTm6zVc493pz61bYu0bU42tXuO1PnNGxotd
Mkaczd+yJWLHz+DzivA4Y3J9Dc/1c30ZGnhZERqoNhrDjeXGhIfK8CB6ET3M
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                 "]], 
                Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
               "]]}, {
              
              Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
               1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
               1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
               1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
               1334}], 
              
              Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149,
                1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 
               1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 
               1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
              
              Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150,
                1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 
               1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 
               1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
              
              Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
               1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
               1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
               1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
              
              Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
               1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
               1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
               1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
               1339}], 
              
              Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
               1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
               1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
               1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
               1340}], 
              
              Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
               1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
               1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
               1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
              
              Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
               1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
               1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
               1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
              
              Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
               1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
               1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
               1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
              
              Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
               1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
               1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
               1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
              
              Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165,
                1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 
               1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 
               1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
              
              Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
               1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
               1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
               1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
               1348}], 
              
              Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
               1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
               1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
               1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
              
              Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
               1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
               1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
               1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
              
              Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
               1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
               1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
               1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
               1102}], 
              
              Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
               2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
               2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
               2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
               1594}], 
              
              Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409,
                1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 
               1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 
               1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
              
              Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410,
                2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 
               1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 
               1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
              
              Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
               2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
               2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
               2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
              
              Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
               2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
               2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
               2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
               1599}], 
              
              Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
               2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
               2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
               2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
               1600}], 
              
              Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
               2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
               2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
               2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
              
              Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
               2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
               2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
               2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
              
              Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
               2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
               1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
               1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
              
              Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
               2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
               2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
               2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
              
              Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425,
                1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 
               1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 
               1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
              
              Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
               2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
               2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
               2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
               1608}], 
              
              Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
               1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
               1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
               1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
              
              Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
               1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
               1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
               1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
              
              Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
               1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
               1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
               1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
               1362}]}, {
              
              Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599,
                594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 
               1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 
               560, 557, 1940, 556, 1941, 553, 581}], 
              
              Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566,
                563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 
               1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 
               526, 1922, 521, 520, 1918, 515, 554}], 
              
              Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
               1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
               358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371,
                1836, 374, 1837, 375, 377}], 
              
              Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
               1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
               386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405,
                410, 1856, 411, 414}], 
              
              Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847,
                396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 
               1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 
               440, 442, 1876, 446, 1877, 448, 451}], 
              Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435,
                1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 
               407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385,
                383, 379, 1823, 417}], 
              
              Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866,
                433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 
               1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471,
                1892, 474, 1893, 475, 477}], 
              
              Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886,
                465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 
               1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 
               504, 1911, 505, 510, 1914, 511, 514}], 
              
              Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903,
                496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 
               1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 
               540, 1933, 542, 546, 1936, 548, 551}], 
              
              Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535,
                1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 
               509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489,
                485, 1896, 483, 1897, 479, 517}], 
              
              Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636,
                1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 
               1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 
               590, 1960, 586, 584, 580, 1938, 618}], 
              
              Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666,
                663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 
               1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 
               627, 1983, 622, 621, 1979, 616, 654}], 
              
              Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962,
                597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 
               619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641,
                1993, 643, 647, 1997, 649, 577}], 
              Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
               2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
               2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
               2000, 656, 2001, 653, 679}], 
              
              Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
               2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694,
                2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 
               678, 1998, 702}], 
              
              Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974,
                969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 
               2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 
               935, 932, 2154, 931, 2155, 928, 956}], 
              
              Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941,
                938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 
               2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 
               901, 2136, 896, 895, 2132, 890, 929}], 
              
              Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
               2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
               733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746,
                2050, 749, 2051, 750, 752}], 
              
              Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
               2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
               761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780,
                785, 2070, 786, 789}], 
              
              Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061,
                771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 
               2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 
               815, 817, 2090, 821, 2091, 823, 826}], 
              
              Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810,
                2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 
               782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760,
                758, 754, 2037, 792}], 
              Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080,
                808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 
               2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846,
                2106, 849, 2107, 850, 852}], 
              
              Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100,
                840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 
               2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 
               879, 2125, 880, 885, 2128, 886, 889}], 
              
              Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117,
                871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 
               2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 
               915, 2147, 917, 921, 2150, 923, 926}], 
              
              Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910,
                2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 
               884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864,
                860, 2110, 858, 2111, 854, 892}], 
              
              Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203,
                1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989,
                985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 
               967, 965, 2174, 961, 959, 955, 2152, 993}], 
              
              Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221,
                1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 
               1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 
               1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
              
              Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176,
                972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 
               994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206,
                1016, 2207, 1018, 1022, 2211, 1024, 952}], 
              
              Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
               1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
               1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
               1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
              
              Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
               1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
               1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
               2231, 1060, 1057, 2229, 1056, 1053, 2212, 
               1077}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0., 0.49488850049789845`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$9256, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
          "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
           0.7, -1.9000000000000001`}, {
           2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
           0.8, -0.6000000000000001}, {2.6999999999999997`, 
           0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
           1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
          "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         Switch[$CellContext`tabNumber$$, $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], $CellContext`freqTab$$, 
          
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
            Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
          Blank[], 
          LocatorPane[
           Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                 Dimensions[#]] < 3, 
               
               Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
               If[First[
                  Dimensions[#]] > 7, 
                Take[#, 7], #]]; 
            Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
               First[
                 Dimensions[$CellContext`rawArrayOfMasses$$]]; 
              If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                  $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                
                While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                 Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                 Part[
                  Part[$CellContext`kArray$$, All, 1], All, 1]]; 
              If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                
                While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                 Part[$CellContext`u$$, 1], 
                 
                 Part[$CellContext`u$$, 
                  1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 1], 
               Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                 Part[$CellContext`u$$, 2], 
                 
                 Part[$CellContext`u$$, 
                  2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 2], 
               Part[$CellContext`u$$, 2]]; {
               Part[$CellContext`u$$, 1], 
               
               Part[$CellContext`u$$, 
                2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
             If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
             If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
             If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
             If[$CellContext`omegaIndex$$ > 
               2 $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
             ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
              2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
           $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
           LocatorAutoCreate -> True, ContinuousAction -> False]]]), 
      "Specifications" :> {
        TabView[{"dynamics" -> Column[{
             Dynamic[
              Row[{
                OverVector["q"], " = ", 
                
                Module[{$CellContext`qm$}, $CellContext`qm$ = 
                  ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                 Slider2D[
                   
                   Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False,
                    ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
                " 2 \[Pi] ", 
                Dynamic[
                 NumberForm[
                  MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
             Row[{
               Text["time, normalized to one period, t/T = "], 
               Dynamic[
                
                N[($CellContext`tauSliderValue$$ - 
                  1)/$CellContext`dynMeshSize$$]]}], 
             Row[{
               Dynamic[
                Manipulator[
                 
                 Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {
                 1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                 ContinuousAction -> True, Appearance -> "Open", 
                 AppearanceElements -> {
                  "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                   "FasterSlowerButtons", "DirectionButton"}]]}], 
             Row[{
               Text["oscillation scale factor:"]}], 
             Row[{" " Manipulator[
                 
                 Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], 
               Dynamic[
                NumberForm[$CellContext`scale$$, {3, 2}]]}], 
             Row[{
               Text["Angular frequency \[Omega](q), selection:"], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
          "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
          Column[{
             Row[{
               Text["number of mesh intervals "], 
               Manipulator[
                
                Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                2, 30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[$CellContext`freqMeshSize$$]}], 
             LocatorPane[
              Dynamic[$CellContext`qPlaneLoc$$], 
              Dynamic[
               (Graphics[{
                 Lighter[Gray], 
                 Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                 Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
              ContinuousAction -> False]}], "parameters" -> Grid[{{
              Row[{
                Text["mass: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                  Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                   ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {0.25, 
                  Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
              Text["coupling to neighbouring: "], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ > 1, 
                SetterBar[
                 
                 Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  Range[$CellContext`rawNumberOfMasses$$]]], 
                $CellContext`massLabel[1]]]}, {
              Row[{
                Text["horizontal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 1], FontColor -> RGBColor[
                   Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
                OverVector["a"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
              Row[{
                Text["vertical: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 2], FontColor -> RGBColor[0, 
                   Rational[2, 3], 0]], " || ", 
                OverVector["b"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 3], FontColor -> 
                 RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
                " || (", 
                OverVector["b"], " + ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 4], FontColor -> RGBColor[0, 
                   Rational[2, 3], 
                   Rational[2, 3]]], " || (", 
                OverVector["b"], " - ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Text["coupling from "], 
                  Dynamic[
                   $CellContext`massLabel[$CellContext`m1Sel$$]], 
                  Text[" to: "]}]]], 
              Dynamic[
               Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
                Dynamic[
                 $CellContext`massLabel[
                  First[
                   Delete[
                    Range[2], $CellContext`m1Sel$$]]]], 
                Blank[], 
                Dynamic[
                 SetterBar[
                  
                  Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   DeleteCases[
                    
                    Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  $CellContext`kLable[5], ": "}]]], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Dynamic[
                   Manipulator[
                    
                    Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}]], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
         Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
         ImageSize -> {250, 350}], {{$CellContext`tick$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 12}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$9256, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                  "]], 
                 Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                  "]], 
                 Polygon[CompressedData["
1:eJwtmQe4FeXVRs+9c2bOAQVEFMFKVUFQQUCwYcPe/WOMURNbojG2iD2JsbfE
WGKJmugfe4siooKKgF0siKigIFbADiiCgJC1nr15nuHOmm/a+cq7372n+5En
HXBia41//Ffnz8FlrTaWv6/D8xu12u/gMfDXcNGs1U6GX4CXwW3gx6s4fzb8
I+dPht+G+xe1Wk/az+f8t+Du8LrwX+Cp8ELOX8T5D8BfwcNp35z2w+Gn4Gm0
f0f7HvCD8BR4AfxXeAbci/PX5/yz4FfhnvAG8Enw8/Aizq/gE+Hn4AVwI9n2
9+HF3O9o+Bn4I3gpfDw8KX9vK+cP5ffs1FKrbUfnPAv/mvaXaJ9L+wrOHw8v
hQ/l+dvR/gy8DP4NvBt8G/wpfCC8LfwsvAI+E94GHsF2TBHn78L+f2j/jPbD
4Z3gifBy+Fh4V/hKtpnsz2K7iv2naf+R9kPg4fBd8Fz4OHh3+O/w+/Dm8Ebw
I/ACeD94GHwf/AV8ALw1fC88Dz4J3hven+2MIt73APZfpH0l7X+GD4QnwT/B
f4D3ha+DP8zxXg9uYZvXGn12ahl9at86p44pY749keMxM8fEfY+Noe8Ppf1J
9qdybCFtR8Hj4VnwkkaM9ws5/2bmHHTfY85Vx9SxfQT+RRlzyLk0Dt7dvoU/
bo058Jsy5pxz7yF4NM+v8b5fwi/bp2WMuWPvO/lux7JNZP9zjq1sxBrx9zmH
fk/bKvDKvL9z7U9sr7M/gP7pS9v3XPN2a8z5X9F2Bttk9n/kWJP2W+BP4E1z
PV0AT4M3grvBf4Pfg/vC3eHJ9jHz9Sr4V/B03wG+ET4afhluga+ED4UP8x5F
8OHsv0t7W9qvgX8Nz877jYJHwuPgRTzvWvgo+DF4IXwB/At4Ctzg/Ivgg+G3
4CZ8MfzzbK/g2+Hfwa/BdfhW+LfwK/l+D8KnwNPy+vvhk+HP4TXhe+AT4E/h
DvA0+FJ4Qq6/K+Bfwh/C7Wm/Dz4JXjXHQ82YwPh+lO2v034hbcvhXvC78OXN
0KcvOfccuD/8ZhXrY294aM732alfm+V4fQzvCQ+Br4FnwVvD/eCz4dfgPnAP
+8N3gHeFB8FvVLH+d4AHwLM4f1XeZxL8R3gJ3B1+Hv4z/C3cpSU0QW1ocv0m
8Fj4r/CPtPeAJ8MXqL/2cRF8HvvLaO9J+2vw+fBPcG94BnwZ/B3365rPPwf+
gPa14NHw6c3QFLVlM7bezZijar99YF/0SjYmvFyF3nzO/mkc2y/1aD58CrwP
/FTqk5qj9tya83t3eDD8b/jb7N8t4alVrI99U8/UzznwCHgL+zPn27nw/8Gj
8vrj4T3gd7j+O/io1Nt+8Lac3w+9fxJeG94OXgseBfeBt4E3hsfCM+BvaqHh
avmd+XzvtzN8DzwT3j/19cGMd7+Ed4T/C3/t2od3gHtwv6Hcf23uPzr1+PO8
fivfF67Rfm/O53lVxIerc70upr0b7U/Cx7o+qohPF+X6e5L2H+B/GnPgL6rQ
7xtSH25M/d4JHgi/Chfc7yb4GON9Gf11CXwI/Dz8fS00RC2ZC3fK9X18zt92
+b4nwt9UoQ935/p9KX/PhfBBqQc+bwx8Rq7v1eBHUn/m5f3Hw2elXrWBH875
OD31y/l5WjM0VW1Vw9XyDXn+VrR3o3/HwIPhHeGt4UnwOmwbFKEPZ5bhWYxl
9slFcGe4I/yGMRBeG17fWMfWlf1Dyogtxpg32HaDH0g/JXfxGUV4oOeriJHr
FqEhask5GR9W4Vgn2lZ3TbPfYOvYjJgxOJ9vLOkDb1HEGriqDA3aPt/X++mp
huf9X69Cw35WxBxU2/R4vpvvOKoK/zMxn78q26acP6wID6OXWYtzBtJf69Bf
j9LWGx4GD4bvgFeB+8F1+G74JraFXP8d283sl7T3oX0RfAtcwBu3RPs/1RJ4
ODyI65+BB8Lbw1vCE9Q73vcV3vdx3ufnvE/HRvizTWl/ivalqXfzud+N8IIy
9GsOfC28yDGFl8C3Gg/sE7jB9XfB9XyfjvCD8GrwZnAH+AG4Pbwh3Aa+F+4E
D4CXc7//h2tV6Gcr7XfCHfL6L2n/Rz5vU/gL+Dr46tSHgfDG8HOOH9eO4Jxh
nHst7e/WYgwcC+eYc02PcG4ZGqPWuCanVzEnnBsdc/ycb535+wHH/uH4+c7w
Gmxrs13CsXdqMYecS2Mzvuv/9oLX8Dew/wrHRhp74bap5xeX4RFPLkKj1Co9
eO8iYtxZuT58zuXsX1GGBqvFetYPq/AsGxbh6fUyehq9jTHx0jJi1otFxDxj
2U0ZX40pxhbvOb0Wa9Bn6Tn+UoTm6zVc493pz61bYu0bU42tXuO1PnNGxotd
Mkaczd+yJWLHz+DzivA4Y3J9Dc/1c30ZGnhZERqoNhrDjeXGhIfK8CB6ET3M
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                  "]], 
                 Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
                "]]}, {
               
               Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
                1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
                1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
                1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
                1334}], 
               
               Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 
                1149, 1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 
                1210, 1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 
                1268, 1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
               
               Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 
                1150, 1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 
                1211, 1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 
                1269, 1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
               
               Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
                1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
                1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
                1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
               
               Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
                1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
                1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
                1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
                1339}], 
               
               Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
                1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
                1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
                1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
                1340}], 
               
               Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
                1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
                1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
                1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
               
               Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
                1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
                1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
                1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
               
               Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
                1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
                1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
                1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
               
               Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
                1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
                1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
                1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
               
               Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 
                1165, 1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 
                1224, 1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 
                1283, 1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
               
               Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
                1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
                1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
                1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
                1348}], 
               
               Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
                1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
                1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
                1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
               
               Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
                1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
                1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
                1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
               
               Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
                1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
                1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
                1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
                1102}], 
               
               Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
                2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
                2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
                2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
                1594}], 
               
               Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 
                1409, 1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 
                1470, 1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 
                1528, 1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
               Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 
                1410, 2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 
                1471, 1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 
                1529, 1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
               
               Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
                2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
                2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
                2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
               
               Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
                2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
                2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
                2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
                1599}], 
               
               Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
                2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
                2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
                2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
                1600}], 
               
               Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
                2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
                2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
                2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
               
               Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
                2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
                2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
                2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
               
               Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
                2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
                1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
                1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
               
               Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
                2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
                2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
                2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
               
               Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 
                1425, 1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 
                1484, 1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 
                1543, 1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
               
               Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
                2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
                2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
                2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
                1608}], 
               
               Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
                1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
                1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
                1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
               
               Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
                1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
                1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
                1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
               
               Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
                1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
                1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
                1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
                1362}]}, {
               
               Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 
                599, 594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 
                573, 1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 
                1943, 560, 557, 1940, 556, 1941, 553, 581}], 
               
               Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 
                566, 563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 
                545, 1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 
                1921, 526, 1922, 521, 520, 1918, 515, 554}], 
               
               Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346,
                 1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
                358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 
                371, 1836, 374, 1837, 375, 377}], 
               
               Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365,
                 1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
                386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 
                405, 410, 1856, 411, 414}], 
               
               Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 
                1847, 396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 
                418, 1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 
                1871, 440, 442, 1876, 446, 1877, 448, 451}], 
               
               Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 
                435, 1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 
                409, 407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 
                1844, 385, 383, 379, 1823, 417}], 
               
               Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 
                1866, 433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 
                455, 1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 
                470, 471, 1892, 474, 1893, 475, 477}], 
               
               Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 
                1886, 465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 
                481, 1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 
                1910, 504, 1911, 505, 510, 1914, 511, 514}], 
               
               Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 
                1903, 496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 
                518, 1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 
                1932, 540, 1933, 542, 546, 1936, 548, 551}], 
               
               Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 
                535, 1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 
                1894, 509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 
                491, 489, 485, 1896, 483, 1897, 479, 517}], 
               
               Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 
                636, 1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 
                610, 1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 
                592, 590, 1960, 586, 584, 580, 1938, 618}], 
               
               Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 
                666, 663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 
                646, 1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 
                1982, 627, 1983, 622, 621, 1979, 616, 654}], 
               
               Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 
                1962, 597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 
                1977, 619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 
                1992, 641, 1993, 643, 647, 1997, 649, 577}], 
               
               Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688,
                 2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
                2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
                2000, 656, 2001, 653, 679}], 
               
               Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707,
                 2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 
                694, 2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 
                681, 678, 1998, 702}], 
               
               Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 
                974, 969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 
                948, 2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 
                2157, 935, 932, 2154, 931, 2155, 928, 956}], 
               
               Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 
                941, 938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 
                920, 2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 
                2135, 901, 2136, 896, 895, 2132, 890, 929}], 
               
               Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721,
                 2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
                733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 
                746, 2050, 749, 2051, 750, 752}], 
               
               Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740,
                 2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
                761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 
                780, 785, 2070, 786, 789}], 
               
               Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 
                2061, 771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 
                793, 2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 
                2085, 815, 817, 2090, 821, 2091, 823, 826}], 
               
               Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 
                810, 2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 
                784, 782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 
                2058, 760, 758, 754, 2037, 792}], 
               
               Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 
                2080, 808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 
                830, 2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 
                845, 846, 2106, 849, 2107, 850, 852}], 
               
               Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 
                2100, 840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 
                856, 2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 
                2124, 879, 2125, 880, 885, 2128, 886, 889}], 
               
               Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 
                2117, 871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 
                893, 2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 
                2146, 915, 2147, 917, 921, 2150, 923, 926}], 
               
               Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 
                910, 2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 
                2108, 884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 
                866, 864, 860, 2110, 858, 2111, 854, 892}], 
               
               Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 
                2203, 1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 
                2192, 989, 985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 
                971, 2179, 967, 965, 2174, 961, 959, 955, 2152, 993}], 
               
               Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 
                2221, 1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 
                2213, 1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 
                2200, 1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 
                1029}], 
               
               Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 
                2176, 972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 
                2191, 994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 
                1012, 2206, 1016, 2207, 1018, 1022, 2211, 1024, 952}], 
               
               Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
                1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
                1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
                1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
               
               Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
                1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
                1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
                2231, 1060, 1057, 2229, 1056, 1053, 2212, 
                1077}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1:eJx0XHk0Vm331iAqzdIkpKhokKSibA0aSEkUkpQKIRVJpEEZyph5SuZ5fMzj
NmXImCRRhlQy9BzRqPC7387zfN/6rN/7/vOu9ay9tvvcZ+9rX9fZe7firKnq
+ckcHBxl3BwcU8j/qVW8715IpILV1yABRf5icPGByOfhFHBf4crXXZ0IXLnX
zji3loDl8inOW/wpaLxn9+LxVl8sfqPeJ3OtCG4aabZ35lBwve5El1ZzEZba
p+9U6UqF6ceCE8IiKLjXn9enb/QMZa76C1dtvg2LHZx5tY9QcE5iWL+mqgE5
57uvklGIxt/Hm8NOtjBBsMThAAezEafwnJcMmpaHIknKuxzPMCH4Snwlx45G
XJtxxH5zaTHGhozcR00m+P4OeFZYWYvBfFqGjbOLEGws5nu9YQKnsfBO6all
KPTHVf3GzzT8cyZTe/AuBSIOm9dtf8nAxHCVRXadj1DXu/yH8ycKustEr/Xp
ucG1SSWL1bbEQ4/HnukWwxR4LVyikTwjBZgP3y2VNQoHzTt34sZ6KZgSHObQ
8TAOml5vyrCVLIS5DzYszsqj4OrJ+KKki0fhwitZjo+FaVAydG+7bw8FSe93
vpyulYWvN0R/3X32JvB+m3U66i0FusUPBO9GPcVBp1VLTGUC0Nx/86sdDsTP
J2GRhLfVOPu9cKezbww2PKmXatpEgU3Pml3L99eh0fU3G2+ez0KxO2Jp278y
gfqaIRT8uha3fBEyChTIww+ujS1ZTCY8e3dkk/Hbp3jxRFV3KabiU9OnUT5m
FAxr7GvVsihCZ3Uh0Vf3EjG8Y4eFTBIFj5Q5BUy2xOMtIwVHLXVnCOEWjAsn
9/B0ZMncO19sQZ7Tc/GxnGQQmJQQ9Imi4Nr1amOutBgwFk9d9c4xG4w17AMy
Gih4m+Re/3gwGowKouY99EwH0aGViXffUPBwzC2RkeSInpta7PcI3od2Stl8
8jgF5q2PVO9yxuJs/hdav/S90P1sL3h/pUDZ4L1RqC0DL/kFFu/QSsekBz/E
3Ij/fZs/ZYh/zcFF+y5Wub7OwIczX2wszKKgbbkkckUW4TstCeewyVmY+Phz
w7gfBSbcj08W3stH3gVWJdov0lF0ym7XtFQK3mhmH1ivkopcSwLFpvVGYkbq
Q66cDxScT48bV6s3xEgTxsulh3yBuVChuHmUAnGbc778sr6gF2Xssu1QBPAu
SJIw+0FBmats8e2mdChOD/SIlMyCCPEj5zhLKbi0LTNoWW4mWDe/s4gryIKP
WZs7tuRTkMkzPGUlHwP0rLapZjzKBpA3tA1+SkGC/OM9738mAI/rO9VZDalw
c8qRvD/tFGTznPfxEgjBehUX6qNCMtqqi1SEDZD4nKegcP9nLNZHP6r+rJOK
02/k+ju/oyBnUiDnEKagn54F18KTOdgqpzGdt5yCA8s6eL/KxOBiK4k9G8Iy
UX3fJdv0ZgpW1XFSSV0e8OeKdmVrYgiq+w9I7h4hcZiy7vFgXzzkaD5atAo9
UUJY2fHgEAVF3PtDOn4Vg4CohElwQzKoxKtWNwZToMTxfkl2fhnUzeXhVS9O
g3b9dFNOawrSfnyI3apfCe6dRfFtL7OB+ZnTSHc3BfaSL13uiZeD4WejqcMx
qbD03acNpy9T8PJEoaaRYjEEOHBFVUolwdmvF+BeFAXlmsemObumQ8ERgbG+
o04w1q3q0PCegtTpQ41bq52guPDqlgU9DhB+tGlKyhg5f459zu6PyWgvKOEo
kcLAp8KRmhtbKRA175+1bn0cJjZuK2jPZGBWmdS74x0UePDG7Cv8Y4v35jJe
+n6KwT2cjk5D38h7LMnM3KeUDpLevf2RPAGQVLp3q1s3BWa7ejtiJpXA8RUc
ntMnJYJ5FHcLhFJwPPlxUZZ3NYypb7hp8CQPZl3t9LWbTcHd+AXX4qc3Qphv
U1GoXRHIve+1MzdmQrLspVOVOo1QdThKkW99FhR2Om5fc58JuiPiYvtVGwCF
1T59L02F5td6szMIvn1hqoe0KtXAi7u+6fYdLmjvJlhnIkWB6clEg/UXi6BT
+OxaYYEI9LpwbsHvDAq6mOuPO4S5wNhAKwR/QKz6/FrvEJJ8VIgs4LX2Qv53
QW3FZvmoZ9q/xb+aAr9lHJzcnaGYNseNZ/3raDwarcVcRt57tv6hknQMgJcX
5S+UmXjB3kb/No/fFEwVkPjkKZkJyjwntx1eEw38Zx4I5rVQsMb+1H2VWeUw
U/PmeMfNcpDPizy4YioFss7OC5yka8HSOlrVaH4ptIQNPH9VxQQ9z5h206Mv
oMjLTyuqrQ4WZDk0z7//GWRPm02fs+AlxNiKJnlNQ3jVn5Iv8uMzzNwsdcG0
oBw+LBpWVKf88IBdAbWVxJvO8pXK3BllYPfbTTTisw9++7Hky2QPCtw2FJVF
Dgfho1jta6YFFbg362Log0sUDKystx+9m4rR53YFr+l+hkf2zhAL2kLB9hkK
j1fPzMf4B+sqnAUrsPTM9Hd8+0kdGagdc0jLxKAbsYF8VUXIvWr4VhrBmYtl
05avLHoCsgHXG+Ruh8KU3VpC+wg+2O26nXK1Iw10kldq1+oXwpEXHB+WJ5Jz
lnRxdhqWQLp2E2PWl6eg8Wjvl50SFDhn3LhYObsKjpQum3NZuQH22hXORWUm
5FOte3eIPYXLpXMdnu2pgdqmE8cFSpig5JcuERvFAK7edQqlg/XAXb3ERucj
Ezj+3/8G2fbIske2fQHtH1n+ke3fjj4PqtDnQfZ5tOnzYzZ9fjzBOr8j/bx4
nn5ePMx63l30/eAa+n6QfT9r6fuEYPo+gX2fUvT9Qwx9/8C+f/H7vs7bWvzg
x3zp2M78cmDcrxnaTd57iX90QV9OBJROGuesO1ANruvfB7fuoECbjgf0oeMB
2PHAQ8cPsuIH2PEjQ8cbsuIN2fF2lo5PLKTjE9nxuR6Z43+oerwRtHCNw+Jy
DI3n8Xxlw4R+jdVfnDLL0T/1VPGxvFIs5z132WopBTPpfEF9Ol+QnS/pdH5h
HZ1fyM4vVj5CFJ2PwM7He3T+Ai+dv8DOXyad7/iNzndg5/vC3p+GquXZyKF/
BkPRHbQYa25cJX83yavQq7ymEt/d/LzoW64XpN/aKjJHjwLbugJrft7neGBK
54fCwGSUtFN7ll3OhAQar5CFV4gsvLpD4xuy8A3Z+NbhXPP6w5I61Gmsc6nQ
LcI2H1P43sSEPpexhQExxShzQMCuvS0Jr+ZceRkaRoG08pvylsFIDH3U+X37
aje4BKFR9iROmgtWm+ltdoSM7oTr+++Fgd6jaOH5pE6J03gOsTSeAxvPTWj8
h+s0/gMb/5GuF5hA1wtk14v99/sC5sukIaPx6ofd92UBXPamvyH80M6tynaX
ZzEaHfw4yW5tCpq+qjvVS3D+qYuPv7VgOaYfENyQHpiJ0751GG09R+pdJb9L
XH4lru7u2fzTOhPte1v7lBQoOEjXR6yh6yN2sOpjAV1PcTldT/Eoq5463izY
LrkwAp25pwy8snCHTo57dWE/KTiyJ9VFYfgEho2tiPtdHwkXcl1KXcjv+ftD
1NSVYuDwDOlvW+7mwA5Xro0/a0l+mb2btuB+Anx4sOmsEzMTtr5b8fpQI6l3
NH+ApzR/gP/wB5pvQAHNN4DNNwJofoLTaX6CbH4SzHeU38kkHVsvl6vJNWQg
/7xf3/9UUMBIytLxYhLelrdS5tjaPDQK/x6wLpPwhLouN1n+TPy2NTJmdnwm
7s1ZVM5XTMFGml+hJs2vkM2vItL+8jGIp/kYsvlYB83f4Nfiv/wN2PxN98Za
Y+tHhWDYI7xJZ2MW3Pm5p9qK6Bq+u1tFvh8uALnaddOMMBM6vd247sdSEHuw
MrqhNB8OlF1+fmZfOhyYpBy4nUF4Js0/4SLNP4HNP6/SfBUEaL4KbL5qSfNb
2Cr5l98im9+GD8xs/rAqCUev3dq+8GcO3vzMy3eN3I/Uzp4CaYzFqtyne19d
zMTTFt/OChE+duH3X76NxjTfRjbfvkHzc9Cl+Tmy+TlF83nwp/k8sPl8Fc3/
wYDm/8Dm/19ovQA7ab0AbL3A0hdwh9YXwNYXjNvatUvFnkFlotkT57BEsEuO
9h7fS+5fQVxG1fgpqNqVtz+ffQ+mizw05XOmYKT4xM4fJQzY92dlnEj6E5zs
9vEs90cKqjV7+VTCnTBfknruPjUe1z/d2NFMzv/z8V89hYO0nkK2nnrpvHL7
6uRIvH6zdrZdWyr+7F2xL5HwvevvwzX4f+yEfp1pC6f1huFhj6k9BgQHNtH6
DkJpfQdsfTeN1oOwitaDwNaDHrR+BD9aPwJbPz6m9SaI0HoT4lh6k6VPgZr5
V58CW5+epfUs8NF6Fth69iatf6Gb1r/I1r82tF6GNFovI1svN1CCU0S2JIGb
+p67p2dWYOvyoDXhRgT3VG4GVHM8Ri4hTpOE7gJcYVf7MraMgk5avyNLvyNb
v/ut8a4YCYvHbZnXH3Z3xMO9Vz8buokODc99U2LqHI0+j7OeFD9MAUXhqh2b
yHsRCqgJ3GJjAEGn+tsW6hRBIN9qt0yiU4DZu/vaxmDoqqq2uPGkHHasXCts
RPDKy26g5nTQE3QIs0/afKUU8nkiEseDKBA8xt9yWL4ApRft6Rs4EwdpFgN3
zpG6kzcoOJASXoKFfwZ891/wwQ8Pdu9hED6vZ2OWmP2zGMdUqYuxNhHYwr/G
Y3sMwb1b2YFnPxdhs8bH/Q2WUbiYX3k1XwoF4wf3eBltLsILk6dxv7eMxXyb
ui3v00i9Ezfpq3xbiIOZHveeL4xHCymvs0nZRJ9aLTkcUpqPt6o8nzqoxeCL
+btD60soWHReu3/R/jyMdt1O5b2Mwfm/hkXiSD6qBTLrQy75oL6/y2XFdamQ
yKGV7NlPgXp6jo5Yz33I8xk4Cc154Lu1ZXisjuAG5cEb6XIPbDlv/gyKLYZm
dd3cXURXhnqaTy85F4pF/HnmIZOKwPxxlRIzl+gX985nlS6Z2Ps6xn9xVCrc
0FDb4FVD/i6UHhy/UIDF+/gPbtExBC1z8UlFVSSPFN5dEpTPx54lW2p21nmj
Gcf+0cXEXjJLlhm0PQvvpOtNcY8Lwh1DuhfGSF3b5Od5Q9o0G/Ulrxjoikfi
5qyxHrcXFHALCKmFdaXjyoi9P52tozAv/tL2cqLHg4YVphddSMMzTwSbjfjI
/TBvdp0gddN9g/Gi0j8pKDxfKW3EIxaVDgxKM4jeEcZvv32aSb3nUsyLfRaJ
QRI5msNNFKxvWFYt/pDw/pEV5kVn06AmoOP8M+Jno7voT1/5ENj2uH6zU1s+
GMldCw0l9zw36fe6jzx3oPPKjyRJ9zS48jvt/TMSnzU9M34u0/bBK8mDIjJE
D066dPaqYx/hY0fGu1tLYtDXrnyIe3849F6K0fQfpGD2t9eNZqIR+HT2LvEp
Yw9gocnwljFSB/1vHFyudy8Az/fpZjuI7QZUzg+UJ/Xi+MfXDCllC5RP1jJx
GLiOazL3rSog+Cx0ZuW5xNV38PC9z0LVln7ofoW7Qp/Yvzt8aq4t0xamaY48
fiAdirlXedqmEj72JHnruHjGXdh7eE+WaWIiuuQW3u7/QoHLhXHXa2edsOpI
HreGfgpuFhfSv8SkoC/B9uY+9Sd41yNm6mWVDHw857t0BrmfZW1Zevt3Z8La
9J8uPKlhYO17Wv1WG9Ed77/wd6Yng0jLFtWu2ATIXNDqp0/u/8AhRltxcBSc
XDnKvFkaC0Vvun8FfaaA1/tt43zrCJA+v1PeRDwa2no61GaS84j1pS1ouhMH
0sY2oXWXIiCc6rtnTc5jeERYKZYzGh6cWcdpIh0EshuTh/xJ/Vomlrm8ZA8D
3LsUrA5d9ANdjqKPVQQ/lRv0a6vWMCD2+I3G8qXXYdmJiixZkhfzS05fH76Z
CYKTsSmr0xylhj64bO8k9XdxwuDkoVQ48MVEx+1HEiZbPJNvIPEWCDPennkY
AsD/c8ekkxk4/mFy52pyD9OFgr8Gc1nj7Lfe14X8C1Hqkov44qf/6Kzbfiuu
BGDtvilinh9KsHfy/Ys3CL41drqc+/guE3onX34Z0RwEhopzrShybzt4NG9X
7MiC8w+mzLp7LgK6nL7bRL8i9dQz0S7TKwfG17ne3GlN7u2kHaOa5NFouq7A
iWmF8FW+yNHgTwLYbAs0lCV5Wv2V4/C6FISlCy6fVnONAfU1XWG3syi42WTS
kNVYBDWhU+6dco0C0amVs/oILpm7VuyqyCqGt3e+nlaKioD6m/caDOIoyO1Z
e5NTqhjWpvYP90yzgrZxNWFbosfPvQre+0U0F1wn5dds2uSHnupdX14RPiam
dYLhfi0Sto0Kvrn+pARj3r3zcSU8c46I/riIiiMsGSnne9NWgj7jQsVTCH7e
9vQSBGUfcJ8O15euL8HL1WnvOOOJrg8MPBU/HAICq3eL2HfnoZe4f2zOM8Lr
Lu5tl3gYC+Vaao8fK8XC48LLc6vIezw79uKazuJo2Jtd+k5RKg0aHX4Ku5L3
GFTRysP5OQMyJn/o336QAcdmX5b9QO5t3FJLc499BlTIrau8jtlwWqjI+yap
F06O+9M2SxSD7rcftl+Gk0E36kBISiQFY2IrAupVS2C+9p/WoCYGBJz5eUbK
mwKj5a/KuPcQ3cvBIb7ncCjM+T4mcfUBOc8NMwe3lEIoknIbspFJwcKpJ/+o
plMQw1//rfBlGtxQc4u+N1aE7l9HUkIJT+afdY/xQT8Fspevi/rzqAynPDE3
sbhPcAncPDvup8EWl7uaTZcL0bffyuoN0aHmDEld6mQeKMR7vTo6IxvvtTWt
T0ggOLA/5uH0q3kQyhV7q9sxEyvvjfbXkPerf76jq0Y4CqP6I+5dmZMJrSen
ZTe/JjruZdxON4FU1Cw0yg8cygFDTs73uqXkva/10Fx3JA4zFdE60jMXFuSf
8m+tpGDGEvf9hU+jUHVgx3zRP0Ww+IHhC91kCpqer35oGKIAEcfv3tx5pBge
h46dRfK8LhmFcjbGXtCrt0f+nHYOOPfpe88l/PDfdL0rbY8se2TbWzT+9Y8x
tH9k+59EnwfU6PMg+zxInx/y6PMj+/wL6OcFDfp5kf28l+j7AU/6fpB9P+L0
fWIufZ/Avk/W/SPQ9w/s+3/jV5QkMSsJb/a5MrkMi0Ch1nVwNeGx69WKBTr1
GQgnigXxQBm8WWbdN/keBVF0PKAlHQ/AjgdW/CArfoAdP6x4Q1a8ITveWPGJ
rPhEdnwuLOp2ZMwsxvakSSNeoSm4qjhgpSeJZ5knZSezJbIx5M3FWTnTsjDr
0Hv10RzCu+h8wWQ6X5CdL8fp/MI9dH4hO7+S6HzEajofkZ2PPnT+ohidv8DO
32A639GZzndg5/vRy8mdXmGXMfxVfWHc8XJQGORukLalYKCp5NPXlGjsEUpp
zm/Oh4vj/D/++S49csZCduxpLu7PMHuuZxIAP66Wz1QnuiabxiucTeMVsvHK
jMY3bKfxDdn45u9/u2GrezHOjdu20HhONM5omn9XkPyeXLh1s90WxMpfUxq6
58ehcl3/t42Ej3Ut/MmlaJ2HAu3udet64/DUpAX2CgTnx/cITZPZmYvP6vWC
DSJikUOIUrEjzytL4zka0niObDyvp/Efp0/5i//Ixn9lul5AE10vgF0vzOPN
xxMiXKBzxqcNcL0I3sp5bJtP9AVcqNOLPBuJ2/qzW90XZ4KF/uc0ecKjnjjn
fjLeloZrG8+benSEgtPb0GkdpP4uturyXBOVifrBRs9H5rmA04gyHw+pX0p0
fcQHdH1Edn1cTNdTDKHrKbLrqfgSbm2Foigc3tHCa/HlMZbJLX9zgdTflNzS
NG/vOOz3sxqYWhyJQvnhTQ9Jfd967tLVO6pPMDek93JMSxQK9um85iD2RcUp
CatKY/GzR/Qm+SexGKnp5atB/u5Omj+gNM0fkM0fFtN8AxVovoFsvvGd5ifg
RPMTYPOT55o+Cdb9R0ApkHvTmhYGjNdI2j/tpWBw5tJ9ynt04eb+aznK5jHw
zNXrSth3wodNbWcO3XDFFTvKI74/CwPVm6GWHr8I36P5Feyi+RWw+dVJmo/B
FJqPAZuPRdH8DYRo/oZs/sZxK0n/NSMaRg9Qc2Y+v40zjeHbT/J3fz5cwtkz
NwIsVV8Zi9g/Qbkzh6Y3fiP80MzmvBNXCBjr6PT77mag9/zvT5YRnilB809k
8U9k808Jmq/iFpqvIpuvbqL5LQrR/BbZ/DZxxYbo2HMZYBc0OvJMIQKcy6cJ
fCQ8Z1a3dzteI3xp/tKiG5akzjb9Fr9L8t2P5ttgSvNtYPNtFj+HzTQ/BzY/
F6f5PGjQfB7YfH4zzf/hEs3/gc3/f9B6AWpovQBsvXCU1hcQSusLZOsLN7Db
F6eYAZ1vPzoIaaTgJaPksBbCQwZP+DLTQ31hepHm6U9bS3Cu3YeGcySvI3/I
cMyTv4hp8st36d0vQpH7/KHXSR61fVu/4Vi+Dd6+KUkpTinEvcppwork3hRp
PQVGtJ5Ctp5qXLDPdtGkfJBcJv1M2D4Ktmbxt7SVEz9UTsfxXQWwsWQazzZG
LJwbrK4fJPrxJ63vgCfrr74Dtr77TetBOEjrQWDrQQdaP8IzWj8CWz+epvUm
9NJ6E9h6M5fWpxBF61Ng61OWngUxWs8iW8/G0voXbtH6F9n6V57Wy9hK62Vk
6+ULIzcFc/cHYNaeR2FRonkotZIhurCegmEs8LYPD4IwRtHkDeey8EKLy/l7
rf/R78DS78jW71GdH7/5SMaD7eFa2c/Ti0BqLbSXk+eNc1BxE/tmhovH5n31
mpkFukVX9CLaCZ48OPfzfL0rUJk1qRt3ZUNso0HlVuIfkg/bHH4fA3vX/raT
Ck4CdV3G9TDi/9ZCL4vecQZyaBkOGq0Oh5R7z1fHENzoC+gekSb1fsrxrec7
pX1BwOD0xjQSh+tT19+LvF6GNacyYs2StXGOqSHDy4fovmZKSfB1OR7mWawc
n/MIzYwNn28k95DJUWYid68ax+9YT9K/EYqbP8x0CJcl9WiruHrEoVp03bS5
dPPeGEze/DFhxnIK4uPjG1X46/GLqnaRsEU6Sq8Kbj1GMaHHY6dnzqIGtPI+
ckhAJRuPzxKPdmxkgqp2e7Dp23oUt3qsqrksD88XKF1+UMeEm7z1Ol/ee8DK
ozYbNs8KBB/PK1Qh0XGr1z+YUnLfAt8cXbNRbF8UiOmq1QgQ/WiqdPl8z50E
yG1y4jovhVD2/ZDk8kyCY3mKicr363GD0A2GkWwBzpb8ePlWDRMOla+Nsb/n
h8+fqrzgUH8MRronJBVHiL6gfL++olKxK2Gp148QKzSW+2CfSuL/ubdHNLpV
4X3R3QbespkY3ffy8AVyD1+/zPl05U0Fns0qvPNHKwONKi4WHz9GAae+qJLP
cDp2R51bVuIXhnnPZu1fTHBjrRvDm5mYjQ89cODX4giM2tYic4e8F6OjNnuD
GktRoeiRwU6hNHyyK+rGmB2pF1sqZI9pFWPQnO6+aXNTcN94vRBvBOGx0o4R
r9SK8X217OMQ0wTUrn3UUB1NgfNMmcGda0ux/+yTrkCfRLRdPNOvhfAiAfda
CztIx2ld61wDc2zRZqHBn9EPFNy72hef9CIRF2kF7DseYgmDY1dMB4kOVfSQ
tpc8UI48LyxjwhJScezVTuP5piQfg9K/996qwH23eoZrSZ2X05cTvaBK6tdD
hg3edMDuqy/fF3lHwqb7ZjfXk/dCnQ2SFZttD7ecdIcM/JLg64OK++8GKYie
HfZ2lUo53uOVXDO2OhOPl0Zra+kR3D7g279gSTlmjc6rUebMxtdW2cuVdSkQ
3ZF07SvJ/xn21pPe1GXA50lHN4WROtja35vwoD8cLh++tGZZMwN2Silv8STx
L5a7PqJLrRRXejL/aC9Pww1BZWc/PqTAcl/3Xb7fsRChH1A5+CYVtBcdGjPr
ouDGz6eNNbt8sIbb/NLP2HsYJ+HSkUzqlyurX/9sQr8+49OqcFdDLzC+PS3K
Xi8FUsxPurqTut9rbLGiwb0Q43f1j/UUJuBXaXmTswT3Rs/sZEbvicWj2Q+7
Tp4IwSUZR31effnvPEDNBP8hj7YaHFyRilKmTbMYgWno8cVnqd1LCnxZ9g0T
7CvNQx4Jns7EGwfmmj3/5ovvHqlaGRA8kbujwX+Bl/DXI62flX1dcTIUZB8i
fEb6mcBFkfkMvK0ezJkQkIG7Dmr57q0juMqaQ/CdMIcw3DDz3dfoLNzcrHgb
czMxSUHwnTnRj/n/Yh+THr5RXiYePaeOBdrY2mLC/Jqy+YT/nHug/VpU2g27
Ak6vkNAPBIWRSKXlf0g880b58N3JRMvuZS8VZmUiX15acG4xBSr/Mv8Qo2y4
ynVKPuY4bmMeZWZi3KVR/QSiE9X+xd6stirMYtQZjs6Jnv3jeRwkV7ipMYdJ
fgmd2LJxazRMbRcdvOyUBupaOu3hJE8ld4Ze4m7JQoa+BpenXhq+5RkvKS4j
da2WnruYevV/5y7i7U7VL5JLx9un4sE6PxV/V9WZBJC6zMGa05gywV75pmnt
OoFY0J83O6X2eRrkOSqX3n9LwVve3UsLH6aC8O7z111XZcMx1+95IkTHnbrW
tXrScCrOm503uLMnBZfuHRrvI3pNizXv8WzCvMd4pbGz/9RwdHww9wLjcxhu
NTYVLiT3f5plXzTBfqWkpuGqy0mwTHuhQKpLNqSK39ZIrKagYIun0ePmOIgN
bRz+vS4DtldMnRLSQvjPlijR+nnu6Bkbqeow8xEKPhxd20byJZc1ZzKHNWfC
7ottzvsqT5nHwWydLTKfN6XB+uUzO76T51W6e1Hly8UkNF70bMHQSQbyF10/
dIHwqF2eOUdmHXuEF62VPF0l7mCPmM5hj7F/5nDouZqnrLmae6w+l8/vY/pr
akOg95rS7+icEHhjV50p/YPEJ+s8Syac503Kda9pQnG4SXBR1AddBtZ+Li1b
S/ieZnBSztXJCRgu8Vn3pG46cij2V6SRe17S5m+q5R0OqV81eLvjwkCltGyS
K7nPfaz5mWrW/Ay7P+h5/EVW3d1E6Lx9scNZNBaOq/BYW5G828+yr5lgP0Ww
eNbkd7443yHr5SHdZOwx9fugw6SgVGbF7tidnlhxfqFM7qQk1HmYfsGS4GdS
11Nti8AUELjv8dwwJx72mZ3clkZwIJE1t+M8YW7H0m9kqlhbHsz/nDDrXFgW
8H2fem0t0e/J/zLnYzVoJSJtFgNZqWeXvG02wGU76kofE97ev3GOvaZhCkgk
xpkPGNjDzMkaJ2LIOVeqaL75lJsLUTF9gl+aMoDrvL2XNNGhtqx5oYsT5oUE
jsVu8BPNh5RGL7/wHZkwu6e2TiyZ1COWvdEEewW+1rPbCE/eNmTuMudJKOwY
uDZrYdU/fUlVceb5p7BVNI4ZmM8AM5+apksWFBheOvz+OSMHRtPyT7j4ZIB4
74C9ItH7L1hzSk8mzCld94t4HyKZCcN7+58kxjNga+aUTUDiv4I1v/RpwvzS
l0H1cAn7cpDS1RAod0uDH4s1pjfrU9DcmDTnyeYqGHU5dFw/MxtWcfulPNlG
wYo/3MtOZjGg3HFD2SylNHgV3u6RRfDhKcv/wAT/+4TjVutPTgEXzidFBaYJ
ME/doVKJ1LUylv2bCfbJmwV5wkPqIaR8Lb9ZUz5cWRT5fRPhOdPhY/wRq2hQ
3qpqPVsmAVbIxG/r7SP1gjV/1Tlh/mqxTKXeQa4oVHuzY6NhRBKOVj28kkX0
45BqbsSCb/FosiFjmdbnVBQ+zDHnH5x8f85E5+ycBlKPa//81M+A+KffV+58
w4QfKwX54qIe4Nl9BWHhewIxUrbtpxnB+RuKoR9D9t4FAWt1Wy5DF3xTJ7np
7T95PeMoY/f5BsifN5tf6GQmXBEuBDnCA/0sdHf/ftUAL3l3ne8MygLJdzq9
Y7lMkPiYZnG9PRzEd6YtaOLVRrUSJennRLdSh/YZykIGmE4VXey5KAy+2e04
GkDq4BBjQGrQrw5q35Y21z9Mg7583Nr9iwlVpVHVJ2fWwWPtNXmbi1LhdcLe
Fa3TKMjRbQ6aKVYEQzbSF4ZbcuBq/89+aS+if81Lsv3LS2FkoW1LnWkmVDUW
L86zIfromUtrWdUzuGSZp3Oo9QZ0/cpTMVakILjRzedKZzF0RR+tfT73AQY9
XJW0iMT5yZoz6z7GVIDqs1SDId1cOCi+39ViHzln1R/7Tv0a6FVvDJ9/tQjk
neVcFjKZcHKcN10gqgh6bihNiV7nilM1+5tsSTwbdYo7OZcXgMQmwy07ywNw
d+P8K15PKfjwjIezJqgBUkr4H182LIdDzNSSxeeY4CUksGnY4jkkndSONNUt
gATRUo5GdyZMPWxw5FjBE8j+nrojQiALr3231PMguoO7seVi4UtzOLVQTafD
MR1/R1muvE14o02TUd+g2wuYXNoWX8RZBGbXr5zbIcWEAJ+PH5bVO6DDSOOB
yCfpGBhffuE5ic8NG4UO/xgPhJVf7CV55/tBvPMR8QRSBw1Y81fbJsxfKdF6
B/VovYNsvTPTx1GyKfcFuN7WLTDnz4PqR4GTvOSZYFso5h08Gg7tVtuqB7uj
wOZZr4Yr4Vd3WHNc6hPmuISuhMy76pQAQSIfd31JTwQ3l+xqU/JcGqz5rsQJ
813rz1yfb9pcCx8dz++4Nh4Cnas2SCUuIfytu2iGb1MNbOrVkJC3DYXyCOH9
XmsIPixqm7+gJweOzUoU7k9JA+p0y1z3Aoo9fwVJE/z/mj7vdveqp3D3R0en
rlY5tFumxVXPIfX6X+bN9KbxbujMewbzL8QsyxLwg7plkasnHyQ6LjlxVPNe
JVjUVc4cHvTAjwquK4cukPfFv84x8Xk5ODyBMyXcVUTP88sOtjHBiTW3pjxh
bk2nQqAn/uVT+LTv7utmqgJOrThvt/3bf+bNwJQ1z1bHmjezFrIUbP2eDfr7
FzmF9OTg7lIznfQkCsQvdBw4VxALJsHvdoVS+aiuUbFrAeF1u+Z4bjLeXg3z
8nV4r+g9hSlbFIaiSL4XsfxfmuDfMGD0XZPYczD2DdEP2VsHdUsMNh9/9xlK
WfZXJ9gvS3xtcOJTMHiF+/u7Li5CueHy/C15pD4KD1wUjQnE2ELrs33mT5HT
IWbOrAcUMH0vvlprWQ9uw5s+vD1YD69OL/Hpn8IE3X+Z0zu4a6r/8NLnYHrg
uaAcwYM/yc4RXaZMOMeynzzBfrsvd431+Rj0UV0oRnmV4pqlKxNWE93tsE2o
kQpMwQdJe4MepZfgNW/OxEDye+WsDamNY/VQ9oVjXM4lC1RmqprOaWHCpL99
g8Id9P+jdrD7CP3FQes+NMdjrEDGaT5uRCNB++Vns4jOMmyPixnLgPkJEl8+
6hWBVE1r1lTCf8JofY0XaH2N3ix9rcrKx3UT8tFoGuNc38o6aF2j9aBwVjCo
9Nqe5uQjepw1l/jzEz2XOJ31vDNEtq3SmpILC+b5+q5f/RRchC3LTp0j8Wwn
WbpdrpDwJS7JJ03lsEp+S7Da7n/yXU9lW1kBuN7UFnNrT0cdBr/gb8JPtrD8
j37637lHc0W+ZpeuLPCPP2+9YlEavrAaUdMhuJfMmoc0ZM1D1rPioT2B2e9Z
Fg8Jg0zXgkflYOBwg1PfjIIB8QvL88ZTIFr/2/4nI1UgzF9sy72HAu/A/LJt
ZekQpeys357CwGFvkRnz6v/r32CCf067tN+pM1LwZ9X23Qf7K9HwQGtQC9HF
2Sx7Vr4gOz7vjJevFtNKB5E/r0ayk2tg5tQtTlMWkvtUtr3XcoYBo36XDOZ6
VEPjVvmAWWIUdLVfeNk8hYGW8b9zhGc8wzPyeZuGgeQ1a86TNXeKCqz8Dc8u
PPzicCJ2/n729fvRCjybLdoua/gffMNc1vwnG0806efFWvp5gf282+h7xkL6
nqGJdc+KgTY5B7Uy8bJE6uCc+CpMDpu1PmY78cPynzfBvzb93rGefu/Ifu8n
WfY5E+wF6XjATDoegB0P++g4xPrVf+MQVVlxuICON1xGxxs6s+LNiTXXenHC
XCsrL3ABnRfIzosHLPsLE+zj6XzEJDofUZWVjy+M6+Y94E7Dl5ni3BwX8nA0
KCl+VS7Roay5WZkJc7OedL6DE53vwM73OtoPVNF+YIzlZyeNM2hF4wyOsXBG
h8YT8KPxBNh4krDITzN3rjl8DJv32VWrFOrcpUKzQiloofENWfiGLSx8O0vj
KhrSuIr1LFzl09C3SI4Jw5Z8o9xb37LhEMddubsvyHMdf3g7/H0Gnu534olz
y4GWawm8H7MpeG1wxXWLQi1ahcQyc2Iq0CQvwq/dmwnRN7j4xtTL8eMFbfG+
jqfYkhrz6z0XeV+LTtwRfp2GJg0fYsq3FwJ/j2rfW3LPs62fcCUWl+OcBwc2
znjpDYf6zl0IIPpo9rnST3WqFcg7tf6D6q9y9DDkT7SjmNBnYuEuGPEUB94/
6TM/WIaW20usRoUomMdt8nDF7Wq0zNtxaOYmL5SMWvVdgOSLHV2vcSpdr7GS
Va85Fv+t12hB12tk1+v9NE/AlzRPQDZPWEHzASyk+QB2sfgAi5+gJ81PkM1P
fGh+gpOs//ITZPOTVTQvQkGaFyGbF92m+RVOofkVsvnVCM3D4SzNw4HNw0tZ
85/FrPlPti72H3V1/TF6CbdpLZCJNcgAoVWJsXJER2xnzc1ydP/v3CxXyd86
Agl0HQF2HVneKJTovbARD05W1h34jJgxbcWVqyQOIfmO0+9zwfg7KVNo+VgW
yPEWyBxtoUCO7f/D//o3fzk6LV4vC0cHI0wGjj+AVlUH62VvCZ6w7V/+r312
eKt+xPbn+EzT2cIzoQK37OTyfCvHhCbFtqc7uerRv8t5O69cKS7i+n4jIZ4J
iwVrIEwvD6tOx8349MIYZygw0z83EF3JmgfWZc0DX2bNA3PMufKOa2oFjkcY
eF9P2oOZCw+kWllR8PBf7CcfTe5X7qrEXcupI0WfClBOPvaHC8FnHyUvz+vS
ZXg5VykizjoP83d9UNlL8HZGGMXhtKYSe6t92nfuu4n9M1SUPYwpKGfNIUdM
mEMWNx5enFVfiYyq15vryq3xtW5N/yXyezprPnkxaz7ZgTWf7Gxt85VLJx/r
HO36xd6notWy8H3niS5wkxi6ZumXgoWtPKl3SlxRMPNtyqvPFMR1bLq8rrEe
j47MsJx9MxW1ZMtvzetnQjbL/8oJ888aqRaFFu8aMKfFhuM3ZxaeX6iCGnlM
yP2XeelTPRwj0tLheFmuIKf18VU8zM1vKkLi2cSmdrKaig2OTj30TCbwDlzK
G9KwGyc6i9Z9WEDrPrzM0n3HWHPX9RPmrj/RehOHaL2JbL1ZyZrHFmHNY7P3
mzxoHQrLaB0KbB26kNa5IE/rXGDr3FxaR2MiraPxMktHV7D8S0zwv5/+TgVb
6e9UwP5OtdZn1rrok8nYUDaclpgYh1TWcbQkuFFE6yPwp/URsPVRAGu+ffGE
+fbvzBNRQ0urcWuOVF61Vz5uONJZXzePgrIJ52F/1zru/ePMzlXpuNB/aIGk
Rgoe7d819dVL4n9PQsLY8mwU0Fb3v2SQjsdNvCt0CQ9/IBL+1vdHBX6Osbqz
JiELY6Uut+sqkXOy5ti3TZhjXzpnUtCtGQUIzQo1HAKR6Fd3T2hpGQURLHvd
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0., 0.49488850049789845`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}},
            "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
            0.7, -1.9000000000000001`}, {
            2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
            0.8, -0.6000000000000001}, {2.6999999999999997`, 
            0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
            1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
           "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left, 
        SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$144]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$144]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[
             Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$144 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], 
       Attributes[$CellContext`res$9256] = {
        Temporary}, $CellContext`res$9256 = {{
         0.25 (0. + 
            0.4756242568370987 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.005882352941176467 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9283667621776504 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.8494117647058823 (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.4756242568370988 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10))}, {
         0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.0764705882352941 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. - 
            0.25787965616045844` (1/10 - 
             E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.35764705882352943` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.49940546967895366` (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/10)), 
          0.25 (0. + 
            0.5243757431629014 (1/10 - 
              E^(I Dot[{-2., -2.1}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{-1.9, -0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{-1.7999999999999998`, 0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{-0.1, -1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.9941176470588234 (1/10 - 
              E^(I Dot[{0.1, 1.3}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.07163323782234958 (1/10 - 
              E^(I Dot[{1.7999999999999998`, -0.5}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.15058823529411766` (1/10 - 
              E^(I Dot[{1.9, 0.8}, $CellContext`qVec])/10)) + 
          0.25 (0. + 
            0.5243757431629013 (1/10 - 
              E^(I Dot[{2., 2.1}, $CellContext`qVec])/
              10))}}, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->420324208]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.6013905751210766`*^9},
 CellID->73064412]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
A lattice of atoms can be modelled as harmonic oscillators, with forces \
proportional to the displacements of the atoms from equilibrium positions. \
The simplest such model introduces coupling for only the nearest neighbor \
atoms. In this demonstration, a lattice cell containing 1-5 atoms is \
modelled, with nearest neighbor harmonic coupling to the mass(es) in each \
nearby cell. Normal mode solutions to these equations of motion are plotted. \
Controls are provided to alter the coupling \"spring constants\" and other \
free parameters, as well as controls to select from the reciprocal space \
vectors, and angular frequencies associated with the normal mode solutions. A \
time control is also provided to display changes of the lattice through one \
period of the lattice vibration.  A plot of the dispersion relation, showing \
the angular velocities associated with each reciprocal vector is also \
provided.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.6008873855675645`*^9, {3.601208787872481*^9, 3.601208804510481*^9}, {
   3.601209090380548*^9, 3.601209091209631*^9}, {3.6013823516277194`*^9, 
   3.601382454828622*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    True, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.4015360000000002, {0.9, 0.7}, {
        0.44399999999999995`, 1.1400000000000001`}, {{
        0.5178514504303474, -0.4996812240994581}, {-0.4996812240994581, 
        0.4821485495696527}}}, {
       1, 4, {0, 0}, 0.25, 0.6625960000000004, {0.9, 0.7}, {
        1.1640000000000001`, 1.4700000000000002`}, {{0.10518626734842955`, 
        0.3067932797662528}, {0.3067932797662528, 0.8948137326515705}}}, {
       1, 3, {0, 0}, 0.525, 0.6868090000000001, {0.9, 0.7}, {1.572, 1.185}, {{
        0.657510312182863, 0.47454241281054854`}, {0.47454241281054854`, 
        0.342489687817137}}}}, {{
       2, 1, {0, 0}, 0.25, 0.4015360000000002, {0.9, 0.7}, {
        0.44399999999999995`, 1.1400000000000001`}, {{
        0.5178514504303474, -0.4996812240994581}, {-0.4996812240994581, 
        0.4821485495696527}}}, {
       2, 4, {0, 0}, 0.25, 0.6273000000000004, {0.44399999999999995`, 
        1.1400000000000001`}, {1.1640000000000001`, 1.4700000000000002`}, {{
        0.8263988522238164, 0.37876614060258246`}, {0.37876614060258246`, 
        0.17360114777618363`}}}, {
       2, 3, {0, 0}, 1., 1.2744090000000001`, {0.44399999999999995`, 
        1.1400000000000001`}, {1.572, 1.185}, {{0.998411028170705, 
        0.03983022718766104}, {0.03983022718766104, 
        0.0015889718292949858`}}}}, {{
       3, 4, {0, 0}, 0.25, 0.24768900000000002`, {1.572, 1.185}, {
        1.1640000000000001`, 1.4700000000000002`}, {{
        0.6720686021583515, -0.4694596853312017}, {-0.4694596853312017, 
        0.32793139784164843`}}}, {
       3, 1, {0, 0}, 0.525, 0.6868090000000001, {0.9, 0.7}, {1.572, 1.185}, {{
        0.657510312182863, 0.47454241281054854`}, {0.47454241281054854`, 
        0.342489687817137}}}, {
       3, 2, {0, 0}, 1., 1.2744090000000001`, {0.44399999999999995`, 
        1.1400000000000001`}, {1.572, 1.185}, {{0.998411028170705, 
        0.03983022718766104}, {0.03983022718766104, 
        0.0015889718292949858`}}}}, {{
       4, 3, {0, 0}, 0.25, 0.24768900000000002`, {1.572, 1.185}, {
        1.1640000000000001`, 1.4700000000000002`}, {{
        0.6720686021583515, -0.4694596853312017}, {-0.4694596853312017, 
        0.32793139784164843`}}}, {
       4, 2, {0, 0}, 0.25, 0.6273000000000004, {0.44399999999999995`, 
        1.1400000000000001`}, {1.1640000000000001`, 1.4700000000000002`}, {{
        0.8263988522238164, 0.37876614060258246`}, {0.37876614060258246`, 
        0.17360114777618363`}}}, {
       4, 1, {0, 0}, 0.25, 0.6625960000000004, {0.9, 0.7}, {
        1.1640000000000001`, 1.4700000000000002`}, {{0.10518626734842955`, 
        0.3067932797662528}, {0.3067932797662528, 0.8948137326515705}}}}}, {{{
       1, 4, {-1, 0}, 0.25, 0.30779599999999985`, {0.9, 0.7}, {1.064, 
        0.17000000000000015`}, {{
        0.08738255207994913, -0.28239483294129886`}, {-0.28239483294129886`, 
        0.9126174479200507}}}, {
       1, 3, {-1, 0}, 0.25, 0.9914089999999999, {0.9, 0.7}, {
        1.472, -0.11499999999999999`}, {{
        0.3300191949034152, -0.47021965707392205`}, {-0.47021965707392205`, 
        0.6699808050965848}}}, {
       1, 2, {-1, 0}, 0.25, 1.048736, {0.9, 0.7}, {
        0.344, -0.15999999999999992`}, {{0.29477008513105313`, 
        0.45593934031062155`}, {0.45593934031062155`, 0.7052299148689469}}}, {
       1, 3, {0, -1}, 0.25, 1.6072089999999992`, {0.9, 
        0.7}, {-0.32799999999999985`, 0.385}, {{0.9382625408394303, 
        0.24067809475930016`}, {0.24067809475930016`, 
        0.06173745916056966}}}, {
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 2, {-1, 1}, 0.25, 1.8099359999999998`, {0.9, 0.7}, {
        2.2439999999999998`, 0.6400000000000001}, {{
        0.9980109793937465, -0.044554061580077846`}, {-0.044554061580077846`, 
        0.00198902060625347}}}, {
       1, 3, {1, -1}, 0.25, 2.2426089999999994`, {0.9, 
        0.7}, {-0.22799999999999976`, 1.685}, {{
        0.5673677399849906, -0.4954408013166808}, {-0.4954408013166808, 
        0.43263226001500954`}}}, {
       1, 4, {0, -1}, 0.25, 2.677395999999999, {0.9, 
        0.7}, {-0.7359999999999998, 0.6700000000000002}, {{0.9996638524895084,
         0.018331244238805052`}, {0.018331244238805052`, 
        0.000336147510491533}}}, {
       1, 2, {1, 0}, 0.25, 3.1543360000000016`, {0.9, 0.7}, {
        0.5439999999999999, 2.4400000000000004`}, {{
        0.040178344982906074`, -0.19637730412993415`}, {-0.19637730412993415`,
         0.9598216550170939}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 2, {0, 1}, 0.25, 3.6227360000000006`, {0.9, 0.7}, {2.344, 
        1.9400000000000002`}, {{0.5755694038980481, 0.4942562748154985}, {
        0.4942562748154985, 0.4244305961019517}}}, {
       1, 3, {1, 0}, 0.25, 3.7822090000000013`, {0.9, 0.7}, {
        1.6720000000000002`, 2.4850000000000003`}, {{0.15757563899826793`, 
        0.36434263680299}, {0.36434263680299, 0.842424361001732}}}, {
       1, 4, {1, -1}, 0.25, 3.9721959999999994`, {0.9, 
        0.7}, {-0.6359999999999997, 1.9700000000000002`}, {{
        0.5939525642742702, -0.4910935915548981}, {-0.4910935915548981, 
        0.40604743572572977`}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 4, {-1, 1}, 0.25, 4.332996, {0.9, 0.7}, {2.964, 
        0.9700000000000002}, {{0.9831756133631326, 0.12861308895738668`}, {
        0.12861308895738668`, 0.016824386636867455`}}}, {
       1, 3, {-1, -1}, 0.25, 4.371809, {0.9, 
        0.7}, {-0.42799999999999994`, -0.915}, {{0.40339914209426797`, 
        0.49057952897759255`}, {0.49057952897759255`, 0.5966008579057319}}}, {
       1, 4, {1, 0}, 0.25, 4.417396000000001, {0.9, 0.7}, {
        1.2640000000000002`, 2.7700000000000005`}, {{0.029994141344810404`, 
        0.1705710785268064}, {0.1705710785268064, 0.9700058586551896}}}, {
       1, 4, {-1, -1}, 0.25, 4.782595999999999, {0.9, 
        0.7}, {-0.8359999999999999, -0.6299999999999999}, {{
        0.6301381090938896, 0.48276709970902826`}, {0.48276709970902826`, 
        0.36986189090611044`}}}, {
       1, 2, {0, -1}, 0.25, 5.680336, {0.9, 0.7}, {-1.456, 
        0.3400000000000001}, {{0.9771844482439066, 0.14931511093709945`}, {
        0.14931511093709945`, 0.022815551756093285`}}}, {
       1, 2, {1, -1}, 0.25, 5.973135999999999, {0.9, 
        0.7}, {-1.3559999999999999`, 1.6400000000000001`}, {{
        0.8520710059171598, -0.35502958579881666`}, {-0.35502958579881666`, 
        0.1479289940828403}}}, {
       1, 3, {-1, 1}, 0.25, 6.111009, {0.9, 0.7}, {3.372, 0.685}, {{
        0.9999631812029732, -0.006067737750018002}, {-0.006067737750018002, 
        0.00003681879702680802}}}, {
       1, 4, {0, 1}, 0.25, 7.147796000000001, {0.9, 0.7}, {3.064, 
        2.2700000000000005`}, {{0.6551524413959211, 0.4753185457447303}, {
        0.4753185457447303, 0.3448475586040789}}}, {
       1, 3, {0, 1}, 0.25, 8.266409000000001, {0.9, 0.7}, {3.472, 1.985}, {{
        0.8002488142069911, 0.39981326837324405`}, {0.39981326837324405`, 
        0.1997511857930088}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       1, 2, {-1, -1}, 0.25, 8.787536, {0.9, 0.7}, {-1.556, -0.96}, {{
        0.6864194923355079, 0.4639480282072244}, {0.4639480282072244, 
        0.3135805076644921}}}, {
       1, 2, {1, 1}, 0.25, 8.835536000000001, {0.9, 0.7}, {2.444, 3.24}, {{
        0.2698122671901286, 0.44386214939308716`}, {0.44386214939308716`, 
        0.7301877328098713}}}, {
       1, 4, {1, 1}, 0.25, 13.362596000000002`, {0.9, 0.7}, {3.164, 
        3.5700000000000003`}, {{0.3835853452427957, 0.48625880779453334`}, {
        0.48625880779453334`, 0.6164146547572044}}}, {
       1, 3, {1, 1}, 0.25, 13.821809000000002`, {0.9, 0.7}, {3.572, 3.285}, {{
        0.5165448314327018, 0.49972619358290943`}, {0.49972619358290943`, 
        0.4834551685672982}}}}, {{
       2, 3, {1, -1}, 0.25, 0.7486089999999995, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.22799999999999976`, 1.685}, {{
        0.6032307920423077, -0.48922735366526454`}, {-0.48922735366526454`, 
        0.3967692079576924}}}, {
       2, 1, {1, 0}, 0.25, 1.048736, {0.44399999999999995`, 
        1.1400000000000001`}, {1., 2.}, {{0.29477008513105313`, 
        0.45593934031062155`}, {0.45593934031062155`, 0.7052299148689469}}}, {
       2, 3, {0, -1}, 0.25, 1.1660089999999999`, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.32799999999999985`, 0.385}, {{
        0.5111315607340937, 0.4998760729977213}, {0.4998760729977213, 
        0.48886843926590645`}}}, {
       2, 4, {-1, 0}, 0.25, 1.3253000000000001`, {0.44399999999999995`, 
        1.1400000000000001`}, {1.064, 0.17000000000000015`}, {{
        0.2900475364068513, -0.4537840488945899}, {-0.4537840488945899, 
        0.7099524635931486}}}, {
       2, 4, {0, -1}, 0.25, 1.6132999999999993`, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.7359999999999998, 0.6700000000000002}, {{
        0.8630756833818881, 0.34376743321143005`}, {0.34376743321143005`, 
        0.136924316618112}}}, {
       2, 2, {1, 0}, 0.25, 1.7000000000000006`, {0.44399999999999995`, 
        1.1400000000000001`}, {0.5439999999999999, 2.4400000000000004`}, {{
        0.005882352941176465, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588236}}}, {
       2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.44399999999999995`, 
        1.1400000000000001`}, {0.344, -0.15999999999999992`}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       2, 1, {1, -1}, 0.25, 1.8099359999999998`, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.8999999999999998, 1.2}, {{
        0.9980109793937465, -0.044554061580077846`}, {-0.044554061580077846`, 
        0.00198902060625347}}}, {
       2, 4, {1, -1}, 0.25, 1.8552999999999993`, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.6359999999999997, 1.9700000000000002`}, {{
        0.6286853878079015, -0.48315636285236896`}, {-0.48315636285236896`, 
        0.3713146121920985}}}, {
       2, 3, {-1, 0}, 0.25, 2.6318090000000005`, {0.44399999999999995`, 
        1.1400000000000001`}, {1.472, -0.11499999999999999`}, {{
        0.4015428171269267, -0.4902103458115691}, {-0.4902103458115691, 
        0.5984571828730733}}}, {
       2, 1, {-1, 0}, 0.25, 3.154336000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {0.8, -0.6000000000000001}, {{
        0.04017834498290608, -0.19637730412993415`}, {-0.19637730412993415`, 
        0.9598216550170939}}}, {
       2, 3, {1, 0}, 0.25, 3.317009000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {1.6720000000000002`, 2.4850000000000003`}, {{
        0.4546216184520452, 0.4979365446400658}, {0.4979365446400658, 
        0.5453783815479548}}}, {
       2, 4, {1, 0}, 0.25, 3.3293000000000017`, {0.44399999999999995`, 
        1.1400000000000001`}, {1.2640000000000002`, 2.7700000000000005`}, {{
        0.20196437689604424`, 0.4014657735860391}, {0.4014657735860391, 
        0.7980356231039557}}}, {
       2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.44399999999999995`, 
        1.1400000000000001`}, {-1.3559999999999999`, 1.6400000000000001`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.44399999999999995`, 
        1.1400000000000001`}, {2.2439999999999998`, 0.6400000000000001}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 1, {0, -1}, 0.25, 3.6227360000000006`, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.5755694038980481, 0.4942562748154985}, {0.4942562748154985, 
        0.4244305961019517}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.44399999999999995`, 
        1.1400000000000001`}, {2.344, 1.9400000000000002`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.44399999999999995`, 
        1.1400000000000001`}, {-1.456, 0.3400000000000001}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 4, {-1, -1}, 0.25, 4.7713, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.8359999999999999, -0.6299999999999999}, {{
        0.34338649843858055`, 0.47483914237209973`}, {0.47483914237209973`, 
        0.6566135015614193}}}, {
       2, 3, {-1, -1}, 0.25, 4.983409000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {-0.42799999999999994`, -0.915}, {{
        0.15258310124655627`, 0.35958517552944175`}, {0.35958517552944175`, 
        0.8474168987534436}}}, {
       2, 1, {0, 1}, 0.25, 5.680336, {0.44399999999999995`, 
        1.1400000000000001`}, {2.8, 1.5}, {{0.9771844482439066, 
        0.14931511093709945`}, {0.14931511093709945`, 
        0.022815551756093285`}}}, {
       2, 1, {-1, 1}, 0.25, 5.973135999999999, {0.44399999999999995`, 
        1.1400000000000001`}, {2.6999999999999997`, 0.19999999999999996`}, {{
        0.8520710059171598, -0.35502958579881666`}, {-0.35502958579881666`, 
        0.1479289940828403}}}, {
       2, 4, {-1, 1}, 0.25, 6.379300000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {2.964, 0.9700000000000002}, {{
        0.9954697223833336, -0.06715470349411375}, {-0.06715470349411375, 
        0.004530277616666401}}}, {
       2, 4, {0, 1}, 0.25, 8.141300000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {3.064, 2.2700000000000005`}, {{
        0.8431577266529915, 0.36365199660987807`}, {0.36365199660987807`, 
        0.15684227334700854`}}}, {
       2, 2, {1, 1}, 0.25, 8.41, {0.44399999999999995`, 
        1.1400000000000001`}, {2.444, 3.24}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       2, 2, {-1, -1}, 0.25, 8.41, {0.44399999999999995`, 
        1.1400000000000001`}, {-1.556, -0.96}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       2, 3, {-1, 1}, 0.25, 8.780209, {0.44399999999999995`, 
        1.1400000000000001`}, {3.372, 0.685}, {{
        0.9764214040918616, -0.15173215125061376`}, {-0.15173215125061376`, 
        0.023578595908138416`}}}, {
       2, 1, {1, 1}, 0.25, 8.787536, {0.44399999999999995`, 
        1.1400000000000001`}, {2.9, 2.8}, {{0.6864194923355079, 
        0.4639480282072243}, {0.4639480282072243, 0.31358050766449197`}}}, {
       2, 1, {-1, -1}, 0.25, 8.835536000000001, {0.44399999999999995`, 
        1.1400000000000001`}, {-1.1, -1.4000000000000001`}, {{
        0.2698122671901286, 0.44386214939308716`}, {0.44386214939308716`, 
        0.7301877328098713}}}, {
       2, 3, {0, 1}, 0.25, 9.882809, {0.44399999999999995`, 
        1.1400000000000001`}, {3.472, 1.985}, {{0.9277508044524589, 
        0.2589000758792364}, {0.2589000758792364, 0.07224919554754118}}}, {
       2, 4, {1, 1}, 0.25, 13.303300000000002`, {0.44399999999999995`, 
        1.1400000000000001`}, {3.164, 3.5700000000000003`}, {{
        0.5561326888817061, 0.4968391301406418}, {0.4968391301406418, 
        0.4438673111182939}}}, {
       2, 3, {1, 1}, 0.25, 14.385409000000001`, {0.44399999999999995`, 
        1.1400000000000001`}, {3.572, 3.285}, {{0.6801602929746384, 
        0.4664142674010867}, {0.4664142674010867, 0.3198397070253616}}}}, {{
       3, 2, {-1, 1}, 0.25, 0.7486089999999995, {1.572, 1.185}, {
        2.2439999999999998`, 0.6400000000000001}, {{
        0.6032307920423077, -0.48922735366526454`}, {-0.48922735366526454`, 
        0.3967692079576924}}}, {
       3, 1, {1, 0}, 0.25, 0.991409, {1.572, 1.185}, {1., 2.}, {{
        0.33001919490341536`, -0.47021965707392216`}, {-0.47021965707392216`, 
        0.6699808050965848}}}, {
       3, 2, {0, 1}, 0.25, 1.1660089999999999`, {1.572, 1.185}, {2.344, 
        1.9400000000000002`}, {{0.5111315607340937, 0.4998760729977213}, {
        0.4998760729977213, 0.48886843926590645`}}}, {
       3, 4, {-1, 0}, 0.25, 1.2882889999999998`, {1.572, 1.185}, {1.064, 
        0.17000000000000015`}, {{0.20031530192371436`, 0.4002362823869489}, {
        0.4002362823869489, 0.7996846980762856}}}, {
       3, 1, {0, 1}, 0.25, 1.6072089999999992`, {1.572, 1.185}, {2.8, 1.5}, {{
        0.9382625408394303, 0.24067809475930016`}, {0.24067809475930016`, 
        0.06173745916056966}}}, {
       3, 3, {1, 0}, 0.67, 1.7000000000000006`, {1.572, 1.185}, {
        1.6720000000000002`, 2.4850000000000003`}, {{0.005882352941176479, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588236}}}, {
       3, 3, {-1, 0}, 0.67, 1.7000000000000002`, {1.572, 1.185}, {
        1.472, -0.11499999999999999`}, {{0.00588235294117648, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588234}}}, {
       3, 4, {-1, 1}, 0.25, 1.9838889999999998`, {1.572, 1.185}, {2.964, 
        0.9700000000000002}, {{
        0.9766998052814447, -0.15085521417780925`}, {-0.15085521417780925`, 
        0.023300194718555295`}}}, {
       3, 1, {-1, 1}, 0.25, 2.2426089999999994`, {1.572, 1.185}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.5673677399849906, -0.4954408013166808}, {-0.4954408013166808, 
        0.43263226001500954`}}}, {
       3, 4, {1, 0}, 0.25, 2.607089000000001, {1.572, 1.185}, {
        1.2640000000000002`, 2.7700000000000005`}, {{
        0.03638694344535221, -0.18725099143143928`}, {-0.18725099143143928`, 
        0.9636130565546478}}}, {
       3, 2, {1, 0}, 0.25, 2.6318090000000005`, {1.572, 1.185}, {
        0.5439999999999999, 2.4400000000000004`}, {{
        0.4015428171269267, -0.4902103458115692}, {-0.4902103458115692, 
        0.5984571828730735}}}, {
       3, 2, {-1, 0}, 0.25, 3.3170090000000005`, {1.572, 1.185}, {
        0.344, -0.15999999999999992`}, {{0.45462161845204524`, 
        0.4979365446400658}, {0.4979365446400658, 0.5453783815479547}}}, {
       3, 4, {0, 1}, 0.25, 3.403289000000001, {1.572, 1.185}, {3.064, 
        2.2700000000000005`}, {{0.6540919680932179, 0.4756633950275749}, {
        0.4756633950275749, 0.3459080319067821}}}, {
       3, 3, {1, -1}, 0.21000000000000002`, 3.4899999999999993`, {1.572, 
        1.185}, {-0.22799999999999976`, 1.685}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 3, {-1, 1}, 0.21000000000000002`, 3.4899999999999993`, {1.572, 
        1.185}, {3.372, 0.685}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 1, {-1, 0}, 0.25, 3.7822090000000004`, {1.572, 1.185}, {
        0.8, -0.6000000000000001}, {{0.15757563899826793`, 
        0.36434263680299}, {0.36434263680299, 0.842424361001732}}}, {
       3, 3, {0, 1}, 0.43, 4.25, {1.572, 1.185}, {3.472, 1.985}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       3, 3, {0, -1}, 0.43, 4.25, {1.572, 1.185}, {-0.32799999999999985`, 
        0.385}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       3, 1, {1, 1}, 0.25, 4.371808999999999, {1.572, 1.185}, {2.9, 2.8}, {{
        0.4033991420942681, 0.4905795289775926}, {0.4905795289775926, 
        0.5966008579057319}}}, {
       3, 2, {1, 1}, 0.25, 4.983409000000001, {1.572, 1.185}, {2.444, 
        3.24}, {{0.15258310124655627`, 0.35958517552944175`}, {
        0.35958517552944175`, 0.8474168987534436}}}, {
       3, 4, {1, -1}, 0.25, 5.491488999999999, {1.572, 
        1.185}, {-0.6359999999999997, 1.9700000000000002`}, {{
        0.8877854439843182, -0.31563024163391756`}, {-0.31563024163391756`, 
        0.11221455601568178`}}}, {
       3, 4, {0, -1}, 0.25, 5.592089, {1.572, 1.185}, {-0.7359999999999998, 
        0.6700000000000002}, {{0.9525713914782113, 0.212553841685996}, {
        0.212553841685996, 0.047428608521788526`}}}, {
       3, 1, {1, -1}, 0.25, 6.111009, {1.572, 1.185}, {-0.8999999999999998, 
        1.2}, {{0.9999631812029732, -0.006067737750018002}, \
{-0.006067737750018002, 0.00003681879702680802}}}, {
       3, 4, {1, 1}, 0.25, 8.222689, {1.572, 1.185}, {3.164, 
        3.5700000000000003`}, {{0.30822812342774975`, 0.4617613532507432}, {
        0.4617613532507432, 0.6917718765722504}}}, {
       3, 1, {0, -1}, 0.25, 8.266409000000001, {1.572, 
        1.185}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8002488142069911, 0.39981326837324405`}, {0.39981326837324405`, 
        0.1997511857930088}}}, {
       3, 3, {1, 1}, 0.7250000000000001, 8.41, {1.572, 1.185}, {3.572, 
        3.285}, {{0.4756242568370987, 0.49940546967895366`}, {
        0.49940546967895366`, 0.5243757431629014}}}, {
       3, 3, {-1, -1}, 0.7250000000000001, 8.41, {1.572, 
        1.185}, {-0.42799999999999994`, -0.915}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       3, 2, {1, -1}, 0.25, 8.780209, {1.572, 1.185}, {-1.3559999999999999`, 
        1.6400000000000001`}, {{
        0.9764214040918616, -0.15173215125061376`}, {-0.15173215125061376`, 
        0.023578595908138416`}}}, {
       3, 4, {-1, -1}, 0.25, 9.092689, {1.572, 
        1.185}, {-0.8359999999999999, -0.6299999999999999}, {{
        0.6377061835063311, 0.4806630909734183}, {0.4806630909734183, 
        0.3622938164936687}}}, {
       3, 2, {0, -1}, 0.25, 9.882809, {1.572, 1.185}, {-1.456, 
        0.3400000000000001}, {{0.9277508044524589, 0.2589000758792364}, {
        0.2589000758792364, 0.07224919554754118}}}, {
       3, 1, {-1, -1}, 0.25, 13.821809000000002`, {1.572, 
        1.185}, {-1.1, -1.4000000000000001`}, {{0.5165448314327018, 
        0.49972619358290943`}, {0.49972619358290943`, 0.4834551685672982}}}, {
       3, 2, {-1, -1}, 0.25, 14.385409000000001`, {1.572, 
        1.185}, {-1.556, -0.96}, {{0.6801602929746384, 0.4664142674010867}, {
        0.4664142674010867, 0.3198397070253616}}}}, {{
       4, 1, {1, 0}, 0.25, 0.30779599999999985`, {1.1640000000000001`, 
        1.4700000000000002`}, {1., 2.}, {{
        0.08738255207994926, -0.282394832941299}, {-0.282394832941299, 
        0.9126174479200507}}}, {
       4, 3, {1, 0}, 0.25, 1.2882890000000002`, {1.1640000000000001`, 
        1.4700000000000002`}, {1.6720000000000002`, 2.4850000000000003`}, {{
        0.2003153019237143, 0.40023628238694886`}, {0.40023628238694886`, 
        0.7996846980762857}}}, {
       4, 2, {1, 0}, 0.25, 1.3253000000000008`, {1.1640000000000001`, 
        1.4700000000000002`}, {0.5439999999999999, 2.4400000000000004`}, {{
        0.2900475364068513, -0.45378404889458995`}, {-0.45378404889458995`, 
        0.7099524635931487}}}, {
       4, 2, {0, 1}, 0.25, 1.6132999999999993`, {1.1640000000000001`, 
        1.4700000000000002`}, {2.344, 1.9400000000000002`}, {{
        0.8630756833818881, 0.34376743321143005`}, {0.34376743321143005`, 
        0.136924316618112}}}, {
       4, 4, {1, 0}, 0.25, 1.7000000000000006`, {1.1640000000000001`, 
        1.4700000000000002`}, {1.2640000000000002`, 2.7700000000000005`}, {{
        0.005882352941176479, 0.07647058823529418}, {0.07647058823529418, 
        0.9941176470588236}}}, {
       4, 4, {-1, 0}, 0.25, 1.7000000000000002`, {1.1640000000000001`, 
        1.4700000000000002`}, {1.064, 0.17000000000000015`}, {{
        0.00588235294117648, 0.07647058823529418}, {0.07647058823529418, 
        0.9941176470588234}}}, {
       4, 2, {-1, 1}, 0.25, 1.8552999999999993`, {1.1640000000000001`, 
        1.4700000000000002`}, {2.2439999999999998`, 0.6400000000000001}, {{
        0.6286853878079015, -0.48315636285236896`}, {-0.48315636285236896`, 
        0.3713146121920985}}}, {
       4, 3, {1, -1}, 0.25, 1.9838889999999998`, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.22799999999999976`, 1.685}, {{
        0.9766998052814447, -0.15085521417780925`}, {-0.15085521417780925`, 
        0.023300194718555295`}}}, {
       4, 3, {-1, 0}, 0.25, 2.607089, {1.1640000000000001`, 
        1.4700000000000002`}, {1.472, -0.11499999999999999`}, {{
        0.036386943445352225`, -0.18725099143143933`}, {-0.18725099143143933`,
         0.9636130565546478}}}, {
       4, 1, {0, 1}, 0.25, 2.677395999999999, {1.1640000000000001`, 
        1.4700000000000002`}, {2.8, 1.5}, {{0.9996638524895084, 
        0.018331244238805052`}, {0.018331244238805052`, 
        0.000336147510491533}}}, {
       4, 2, {-1, 0}, 0.25, 3.329300000000001, {1.1640000000000001`, 
        1.4700000000000002`}, {0.344, -0.15999999999999992`}, {{
        0.20196437689604427`, 0.4014657735860392}, {0.4014657735860392, 
        0.7980356231039557}}}, {
       4, 3, {0, -1}, 0.25, 3.4032890000000005`, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.32799999999999985`, 0.385}, {{
        0.654091968093218, 0.4756633950275749}, {0.4756633950275749, 
        0.34590803190678204`}}}, {
       4, 4, {1, -1}, 0.25, 3.4899999999999993`, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.6359999999999997, 1.9700000000000002`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       4, 4, {-1, 1}, 0.25, 3.4899999999999993`, {1.1640000000000001`, 
        1.4700000000000002`}, {2.964, 0.9700000000000002}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       4, 1, {-1, 1}, 0.25, 3.9721959999999994`, {1.1640000000000001`, 
        1.4700000000000002`}, {2.6999999999999997`, 0.19999999999999996`}, {{
        0.5939525642742702, -0.4910935915548981}, {-0.4910935915548981, 
        0.40604743572572977`}}}, {
       4, 4, {0, 1}, 0.25, 4.25, {1.1640000000000001`, 1.4700000000000002`}, {
        3.064, 2.2700000000000005`}, {{0.8494117647058823, 
        0.35764705882352954`}, {0.35764705882352954`, 
        0.15058823529411774`}}}, {
       4, 4, {0, -1}, 0.25, 4.25, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.7359999999999998, 0.6700000000000002}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       4, 1, {1, -1}, 0.25, 4.332996, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.8999999999999998, 1.2}, {{
        0.9831756133631326, 0.12861308895738668`}, {0.12861308895738668`, 
        0.016824386636867455`}}}, {
       4, 1, {-1, 0}, 0.25, 4.417396000000001, {1.1640000000000001`, 
        1.4700000000000002`}, {0.8, -0.6000000000000001}, {{
        0.029994141344810394`, 0.1705710785268063}, {0.1705710785268063, 
        0.9700058586551896}}}, {
       4, 2, {1, 1}, 0.25, 4.7713, {1.1640000000000001`, 
        1.4700000000000002`}, {2.444, 3.24}, {{0.34338649843858055`, 
        0.47483914237209973`}, {0.47483914237209973`, 0.6566135015614193}}}, {
       4, 1, {1, 1}, 0.25, 4.782595999999998, {1.1640000000000001`, 
        1.4700000000000002`}, {2.9, 2.8}, {{0.6301381090938897, 
        0.4827670997090283}, {0.4827670997090283, 0.3698618909061104}}}, {
       4, 3, {-1, 1}, 0.25, 5.491488999999999, {1.1640000000000001`, 
        1.4700000000000002`}, {3.372, 0.685}, {{
        0.8877854439843182, -0.31563024163391756`}, {-0.31563024163391756`, 
        0.11221455601568178`}}}, {
       4, 3, {0, 1}, 0.25, 5.592089, {1.1640000000000001`, 
        1.4700000000000002`}, {3.472, 1.985}, {{0.9525713914782113, 
        0.212553841685996}, {0.212553841685996, 0.047428608521788526`}}}, {
       4, 2, {1, -1}, 0.25, 6.379300000000001, {1.1640000000000001`, 
        1.4700000000000002`}, {-1.3559999999999999`, 1.6400000000000001`}, {{
        0.9954697223833336, -0.06715470349411375}, {-0.06715470349411375, 
        0.004530277616666401}}}, {
       4, 1, {0, -1}, 0.25, 7.147796000000001, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.6551524413959211, 0.47531854574473026`}, {0.47531854574473026`, 
        0.34484755860407884`}}}, {
       4, 2, {0, -1}, 0.25, 8.141300000000001, {1.1640000000000001`, 
        1.4700000000000002`}, {-1.456, 0.3400000000000001}, {{
        0.8431577266529915, 0.363651996609878}, {0.363651996609878, 
        0.15684227334700848`}}}, {
       4, 3, {-1, -1}, 0.25, 8.222689, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.42799999999999994`, -0.915}, {{
        0.30822812342774975`, 0.4617613532507432}, {0.4617613532507432, 
        0.6917718765722504}}}, {
       4, 4, {1, 1}, 0.25, 8.41, {1.1640000000000001`, 1.4700000000000002`}, {
        3.164, 3.5700000000000003`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       4, 4, {-1, -1}, 0.25, 8.41, {1.1640000000000001`, 
        1.4700000000000002`}, {-0.8359999999999999, -0.6299999999999999}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       4, 3, {1, 1}, 0.25, 9.092689, {1.1640000000000001`, 
        1.4700000000000002`}, {3.572, 3.285}, {{0.6377061835063311, 
        0.4806630909734183}, {0.4806630909734183, 0.3622938164936687}}}, {
       4, 2, {-1, -1}, 0.25, 13.303300000000002`, {1.1640000000000001`, 
        1.4700000000000002`}, {-1.556, -0.96}, {{0.5561326888817061, 
        0.4968391301406418}, {0.4968391301406418, 0.4438673111182939}}}, {
       4, 1, {-1, -1}, 0.25, 13.362596000000002`, {1.1640000000000001`, 
        1.4700000000000002`}, {-1.1, -1.4000000000000001`}, {{
        0.3835853452427957, 0.48625880779453334`}, {0.48625880779453334`, 
        0.6164146547572044}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
            "]], 
           Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJw1mHXgVUUWx+/73Tf3XRBpRAQJQQREkJBGQUAwELt1FXXt7natNdeutdsV
ERQQJKRFBEVSEAUUCVFSOvfz3e/sH/O+33fmzNyJM+ecmQb9rznp6rIkSXYX
kiQFK/IzD6wMHl5Mkh7Iu4L7lJKkH7xXliQvhCTpRn3LPElqID8eeU/k+8K7
oTsJ+Tj+q8MK8JbI2qPTAFltSjN4CayKfk94R3hzdLrCm4L30eZb2m5DPoay
lQGWR1Yd/Q7Uj4PXBlujv2/RY+gEjke+GN0v+PRPZR7Piej0oY+21B8BbwVm
yBvCdzCPfahrCg9gNeTHwbvDO6LXveDvaZxtwC/pv8i4Usre8DsoY+B/oT8S
fjA6LeGt43z/N+/M3xxDfRv4MciPANsj6wZvV/R3hWPRqZd5ToPhF9P3GuZy
AViN8g28Engq4x4Gvxy8jP8r4BeBC2l7OXg0bR+k7gB4Hfig4H4WUL8cWS2+
+ys4mlIV/iZYxhiWgc+jPyS4n+Pg/6ZshO9BtgJsjP7vYEPKdPqsBx5Ev72R
dwYbM/a28IZgpZLX/NDM/yWvBa8P7wTfH9xNv+vp46XctrEPss/glUte/7bI
2mW2wyrIHqFuAfq7MuschP4IZH/IHtFZBx5MXR94F3AN/VfSfIPlB6I/HP2K
tD1MY0C2gTa14Wu0r8gro/NJbn6ovovObur2h28HyyHfAb6NTomyHlsbhU4Z
7Q5EZxd15dFJ+P8O9fuBHZAv0jqmtv8Csr1KtuGaGgN9zKLJZnB05r2+Odj+
tyDL6Kd85vUvgBVKXs86OkeUzvAm4HR0R9B2GjiR/+X4XmXa3kRf45FfCk7W
OiPfF/lOeB3abkLekP8tkE9D9jPtv0R/EZgjmwsvD+5H+QH+qM4O+lX5f2ew
vBalJrKvaD8bnX8gv4cyDX5LsO738Brgd+gshj8XPJeKrMcA2v5H84RXzLwW
WhOd/02pz+k2sBF1bXT2wW20bwAv0sen8hG03Q/5zjKPYTcYSt7bF6l/Pdpz
qWQ/INt7DdnE3P6uJrKxtN9Fu3K5ufqoCM+pa8S3dvLN76KfmQGmyFfSz7Po
bI/rtk1OFflS5M8gfzX3HPRd+UadndvopyzuacW4jxUYw0eyvcxnpDGYZbap
N3Pbnmzwjdzf1Vl8Af493xsYx6P91brdS/9/as8KHt8a2QTydeBqnVvka8Hm
6B9e8LpNyuz7i/T5ErgX8tfA2yirZJPgCErdgu1b660zUg1Mo53LV67i2zXg
W+mvBqWLfDs4AflOmq7MfAarojuQb3Wnz2XIj9Q3kbVAPwerUJoUbB/14jgP
yWx/ssNng89FRv2H9LOEuU1BvhT8vcw2v6rMfl7fGoTOSPhKZAX4JNrn9DkH
fEABEP4wuAmdibJtdH6F3ws/Q/GOPtoV7KdG0GYjTSaDk6ivjnwcuB39GeAD
sjdwCzqvpLZDrffLyJ+Tz0X/BZ0nxlKEf57a9nWu95b/LNqnySa0hvJLH+f2
pYodrZE1KXpt5dfOZRxD+NaJwT65AbJh6Dcq2j/ov85OPfBznfXM8faL3L5I
a/gefJ7OMfqzUtuh9uF95POjXPUNM/vvd6MPmYvsYfgBcWwao3yv1uGfyJsV
7W/lr+VzxRUrW8QcQ7FSfR4F7wReQNvlrMuekuOIxjyUfr7ILN8l31yM9lB0
e/XTIfM6/IrOzpJjrupH0XYFsq8T730dZL0Kzle0DkcrzwFXU95mzJeh/4Hi
PfXlFDfieRSXzTyOztnU9wVX0ufx4HMxDskX/QudH5G/AR6Vmj8B7wpflNj/
6ly3os/q4FuyD/jtqf2G4vOTueOjbKAyOnMoZyDvGn3RFvhb8GfQ+YlmH4K3
IFsPvwHsR1kKPw7sQVmSOG8bjN5a+OvgdfxfB78K/Jn+N8FHBuctx2p95IdT
n/EtUedasC/fPRv8E/0zwc9p8xd8Xub/kp+qXCTOXWswIHj83WjbG/wFeU8w
jzlhffCd4PG2Q+cerVHBZ29o8LxG6zvB8Vo5yWeKb/Bh+g7/PwFvUP7IHldB
vpD/heiHn0I+OuZpyiUC2BydxcqtUvurrxSbgm3gytx+QPnSevl8ZBXhU8En
Up/9R8AhMcZr/DPRexfZ5ciWBp+X1eBvyA4pOMdqGnPdZpnjmeKa8okF6H0M
Xkvbj+K3BqbODXWmWqH/YRzngNR5wkbFN/QHKy9BPgh8j1IB/n7sU/ryx+sy
r891sm3FooLHelVwPznyLvEcKed6KLVvfAzsGON+W7AX+t+gv5Y1rML/Ccgr
pM4bdRY+0F5l9me30Of0YF+3GDwd2R/odNH6BrdV/rA7c361WWPJ7Edvo+3t
8tfwDcieCrbn18BRyOqjP1b+NfOe3IPu1/JZBfvu3vy/VHaRuc/x8LuR7cnc
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
            "]], 
           Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
            "]], 
           Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
          "]]}, {
         Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
          1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209, 
          1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 1687, 
          1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
         Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
          1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658, 
          1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 1983, 
          1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
         Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
          1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660, 
          1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 1982, 
          1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
         Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
          1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213, 
          1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 1694, 
          1991, 1293, 1701, 2008, 1318, 690, 1338}], 
         Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
          1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214, 
          1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 1696, 
          1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
         Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
          1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215, 
          1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 1994, 
          1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
         Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
          1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219, 
          1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 1286, 
          2002, 1300, 1312, 2016, 1325, 703, 1342}], 
         Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
          1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220, 
          1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 1290, 
          2003, 1301, 684, 1326, 2026, 1708, 1343}], 
         Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
          1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
          1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700, 
          1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
         Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
          1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223, 
          1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 1298, 
          2009, 1306, 2022, 1705, 1330, 709, 1346}], 
         Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
          1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243, 
          1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 2012, 
          1309, 696, 1332, 2029, 1711, 1347}], 
         Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
          1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225, 
          1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 1308, 
          2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
         Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
          1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904, 
          1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847, 
          1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
         Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
          1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916, 
          1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857, 
          1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
         Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
          1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928, 
          1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 1634, 
          1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
         Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
          1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469, 
          1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 1791, 
          2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
         Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
          1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762, 
          2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 2197, 
          1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
         Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
          2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764, 
          2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 2196, 
          1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
         Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
          1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473, 
          1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 1798, 
          2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
         Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
          1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474, 
          1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 1800, 
          2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
         Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
          1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475, 
          1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 2208, 
          1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
         Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
          1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479, 
          1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 1546, 
          2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
         Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
          1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480, 
          1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 1550, 
          2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
         Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
          1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
          2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804, 
          1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
         Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
          1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483, 
          1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 1558, 
          2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
         Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
          1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503, 
          2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 2226, 
          1569, 1071, 1592, 2243, 1815, 1607}], 
         Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
          1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485, 
          2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 1568, 
          2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
         Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
          2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118, 
          2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061, 
          1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
         Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
          1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130, 
          2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071, 
          1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
         Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
          2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142, 
          2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 1738, 
          2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
         Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 594,
           1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 572, 
          1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 1940, 
          556, 1941, 553, 581}], 
         Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 563,
           1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 544, 
          539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 521, 
          520, 1918, 515, 554}], 
         Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 1820,
           347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 359, 
          1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 374, 
          1837, 375, 377}], 
         Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 1832,
           368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 387, 
          1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 1856, 
          411, 414}], 
         Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 396,
           1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 422, 
          1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 1876, 
          446, 1877, 448, 451}], 
         Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
          1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
          1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 379,
           1823, 417}], 
         Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 433,
           1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 458, 
          459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 474, 
          1893, 475, 477}], 
         Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 465,
           1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 486, 
          487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 505, 
          510, 1914, 511, 514}], 
         Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 496,
           1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 522, 
          524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 542, 
          546, 1936, 548, 551}], 
         Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
          1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
          507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
          1896, 483, 1897, 479, 517}], 
         Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
          1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
          608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
          586, 584, 580, 1938, 618}], 
         Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 663,
           2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 645, 
          1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 622, 
          621, 1979, 616, 654}], 
         Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 597,
           1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 623, 
          1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 643, 
          647, 1997, 649, 577}], 
         Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 2018,
           687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 669, 
          668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 2001, 
          653, 679}], 
         Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 2027,
           706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 2021, 
          693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 1998, 
          702}], 
         Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 969,
           2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 947, 
          2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 2154, 
          931, 2155, 928, 956}], 
         Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 938,
           2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 919, 
          914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 896, 
          895, 2132, 890, 929}], 
         Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 2034,
           722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 734, 
          2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 749, 
          2051, 750, 752}], 
         Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 2046,
           743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 762, 
          2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 2070, 
          786, 789}], 
         Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 771,
           2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 797, 
          2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 2090, 
          821, 2091, 823, 826}], 
         Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
          2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
          2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 754,
           2037, 792}], 
         Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 808,
           2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 833, 
          834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 849, 
          2107, 850, 852}], 
         Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 840,
           2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 861, 
          862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 880, 
          885, 2128, 886, 889}], 
         Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 871,
           2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 897, 
          899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 917, 
          921, 2150, 923, 926}], 
         Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
          2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
          882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
          2110, 858, 2111, 854, 892}], 
         Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
          1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 985, 
          2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 965, 
          2174, 961, 959, 955, 2152, 993}], 
         Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
          1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026, 
          1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 1003, 
          2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
         Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 972,
           2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 998, 
          2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 2207, 
          1018, 1022, 2211, 1024, 952}], 
         Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
          1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224, 
          1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 1035, 
          1032, 2214, 1031, 2215, 1028, 1054}], 
         Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
          1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237, 
          1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 1057, 
          2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
X7GnAnRL38jWGSoEqx69iNmJ9vOkv7mPlkMNmOzOcjBw8YHxYaHSr9DPtbE3
lom9sQnYG5sqwA8riOOOWPEjb7klBzRrXo6YO5oPZM5GOqajvPcKntOQIeY0
4pRnD7+0rAchJ3659JNoDpj5wOtuR3X3xtEYJYeRUKA012z59mkdlI0MZixA
77XvBi8U/zUWAxjayaIirhyoZHosRYuN3vuYq1UjuFra96pC+F5vYf73MOZ/
P2Be1RrzwmkEL8wF3D323DrQvffkltoDvjCb7SV5B63nVf64ehPzPlBJn57/
QqgcOMx1933pW/6gFmwX9i4N8EwScuLR+eM0ehk+Q3EYiOdGJIi5kRh+0kbG
+hKwodHLyoLPhguHa/X1K1B+LsB/OiLAf3oV88g6BI/cirnmdwTXDAX4T5c0
Zj43FmEDZlhU5NpV5cBg3NDgdAk6Xz9nuqWxyoGhwm0j295yIBEW8HoCxYlj
Zbywp1AmsHl6bdMSp3qoqFG9XzpjFOQK8Ja+4kt2W5rVghFmRxbrYxE4vCpk
3priUcAwo7jpqwQ3/aHmaEzcpiIQPecZ1KVYDQdf9iu3sL/5Rrdg3yjtN8xN
PNI/p5OrH5RyyDgpOPq//cA+aYqP1iL46O3cC0lrWyqgH09+YuGaCrDpUmFq
Cdq3XZr+69ubKkBrQ+PYbCYLxmrqyo6hPMQa89Q3CJ76gFaR2A/NBXDjuYou
5VsckJ9kpNeCzsVIWs/mKXYpDI79tDKsvwpkd0ZYZaF6c3WG1EIJi1Kw+HNN
nZRlJTwr/15tHK1f79iOSfvpXLD5aPd105k6aNR618z3HnrvYP+mOfZvKmP/
JgNz3HoEx52F/ZvG2L9pj/2bYpjvtib47jHMd48TfPdSap1wPrVOQK+zNzn+
Y9x0Hrw9T7l30VAdUPV13L0BrXN9aunpUNUioC7n5OIoz4HKafyTV/NQnD/l
ZE/xy8AWNYNOZ5MquLx5I//L/1XWpvYZPqH2GdD7XIe5cjuCK99FPS/gTT0v
SD+vCwJ4858wl6pJcKnS2I9pi/2Ywzh+ijFXbk9w5cK1X+MQXqbiENBxWE3F
M5yi4hnS8Wwty5p0CsqEsd+1VYe61oFKo238dLQPYQ9bato+VMFN4wpRInvK
oZ5UN3cbOl9mDu48S42HcCJiqJ7DLYf6i1W2QrSeQeydtCG8k6uwX/IO9kuO
Yb9kYXhgpFJSCTTIH7w0218JWCe2xnehz7HqKag3Op8LW49L+3y8UQa5Cnyd
SXRfZaz7el/Bf1L3FaTvq8fUvQc7qXsP0PeeP+bH5Ql+PBXPI3UL8EIyCS8k
V0nVQu2WN/Ru89P6o+0RsNMZsp1JHgXifuoFw53R0JEzENJTxAFRqnrPRSpH
wcQO073eBfWwyGvPvRrjHMjw77XQTP02pyROzCmlOcq0PbiXCO0jhTXbrtWB
M8KLjuug9Q/7UzxyJsEjL1vuF3tGoxaeut23tNn7AZwAZdc7UJwIEz5EG+xD
TMac8naCU+7FnPITglNuxryzCcE7m2IfYiDhQzwfcH6DbUwNXKNpPvbm4xlw
T0y3fZaH8jdnsSAR8XJYyXwjJteXBa5Kul9yRnXElaLoZzucKyBTI4Dh7lkI
myP/5a3dNArk8HxUGDEfZSKAj96OeepMgqfeT+UhUJvKQyCdh1zAfLEBwRfj
eU6oRsxf0b5CBuEr/H/ewDxizipshZuviEI4UN6cm8CbKwf3Q3n3rXpQntBA
cdnvCS47ZTJMqAuwoe5ikzf/iM6Cq9mB8r+g+8El2S9BbDYCFjvZHL09mwvW
Rjltk0B1zZ2f/a56OIZCpqELZ2Z+MbCNWSZ06D3KYzHfPUHw3VqmMtVKz1F9
fSBrVa1uDhw6ezt4N8qTDbC/72+Evy8E8+CNBA/+Cfv7PhP+Pk/MidcQnHg0
5sRPEZx4+uDI23bvBGjdF/v9VtMkEPeX+ttwVDdJxfy5NmDzQ7jlwjXtNZM5
sHFeyOIcVKc3LMhLNHQtg3WOdp89hLOhR35k0/wu9PmYNx8lePNhqh6B6lQ9
Auh6ZDXm0AMJDp1L1UGwiaqDIF0HdQrggiVXUB49HcKjR/vsfiO48hcepXlO
oVlA6vzUwUS3BygfTV2kjb43WZ6h8/epWCAiX3dvn95leDL9uJUMWudNk9cv
10XFgyuy0hnrdiRB/QEV9y60P+6/28ZJce8C0w08qyXofMmINhT0o/iRFOCt
e4G9dcWEt24I++l+x366euynM6LqZaBG1cuArpdT5OWc2PUX4W8Kw4yGKHSe
XAMfu6B6XIKq38F0x9f6HdD1+zPMiT8mOPFtVH8AjlH9AUj3BxZlfO0PwEdU
fwDS/YF92Ct3CHvl6D6D09y67Z/ulgG+0BPPzlcsIJ9uUSiM7o3CkKWc+sOl
wEzWzKChZTeQeJOYI4vqRyOqfwLkqf4JoPsnWSsOxi+wLgCz4Tf55p75cMxY
+6Ukei/ECPCyjRD+NWXsXyuk+kJAkeoLAbov5GDVEyN01hc8/VVV2x/VdwbD
shbJ6LzYUH0noEj1nQDdd2p50OfcmnoTyq806WTIsWFK07tNr9HnLMIetEHs
QaP7Wv7HOHvFD1SCp3uHz0XYZkNRyXO8Xej3X+34d9Sf+nmAfafVLUWcDf8Y
iNFgofvtNPaUDRCessETfGasmSdo36/eMd5bAz97xV38C72v7w4ETe9XDAFb
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.49488850049789845`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.67, $CellContext`k2$$ = 
    0.43, $CellContext`k3$$ = 0.7250000000000001, $CellContext`k4$$ = 
    0.21000000000000002`, $CellContext`k5$$ = 
    1., $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.525, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 1., {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.67, {3, 3, {0, -1}} -> 0.43, {3, 3, {-1, -1}} -> 
     0.7250000000000001, {3, 3, {-1, 1}} -> 
     0.21000000000000002`, {3, 3, {1, 0}} -> 0.67, {3, 3, {0, 1}} -> 
     0.43, {3, 3, {1, 1}} -> 0.7250000000000001, {3, 3, {1, -1}} -> 
     0.21000000000000002`, {1, 4, {-1, 0}} -> 0.25, {1, 4, {0, -1}} -> 
     0.25, {1, 4, {-1, -1}} -> 0.25, {1, 4, {-1, 1}} -> 0.25, {1, 4, {1, 0}} -> 
     0.25, {1, 4, {0, 1}} -> 0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 
     0.25, {1, 4, {0, 0}} -> 0.25, {2, 4, {-1, 0}} -> 0.25, {2, 4, {0, -1}} -> 
     0.25, {2, 4, {-1, -1}} -> 0.25, {2, 4, {-1, 1}} -> 0.25, {2, 4, {1, 0}} -> 
     0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 0.25, {2, 4, {1, -1}} -> 
     0.25, {2, 4, {0, 0}} -> 0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
     0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 0.25, {3, 4, {1, 0}} -> 
     0.25, {3, 4, {0, 1}} -> 0.25, {3, 4, {1, 1}} -> 0.25, {3, 4, {1, -1}} -> 
     0.25, {3, 4, {0, 0}} -> 0.25, {4, 1, {-1, 0}} -> 0.25, {4, 1, {0, -1}} -> 
     0.25, {4, 1, {-1, -1}} -> 0.25, {4, 1, {-1, 1}} -> 0.25, {4, 1, {1, 0}} -> 
     0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 0.25, {4, 1, {1, -1}} -> 
     0.25, {4, 2, {-1, 0}} -> 0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
     0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 0.25, {4, 2, {0, 1}} -> 
     0.25, {4, 2, {1, 1}} -> 0.25, {4, 2, {1, -1}} -> 0.25, {4, 3, {-1, 0}} -> 
     0.25, {4, 3, {0, -1}} -> 0.25, {4, 3, {-1, -1}} -> 0.25, {4, 3, {-1, 1}} -> 
     0.25, {4, 3, {1, 0}} -> 0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
     0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 0.25, {4, 4, {0, -1}} -> 
     0.25, {4, 4, {-1, -1}} -> 0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 
     0.25, {4, 4, {0, 1}} -> 0.25, {4, 4, {1, 1}} -> 0.25, {4, 4, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 3, $CellContext`m2Sel$$ = 
    3, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {7.3, 20, 20, 20}, "numberOfMasses" -> 4, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
      0.7576569037656905, 0.1938075313807531}, {0.41585774058577407`, 
      0.8054811715481172}, {0.7789958158995816, 0.57163179916318}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.44399999999999995`, 
      1.1400000000000001`}, {1.572, 1.185}, {1.1640000000000001`, 
      1.4700000000000002`}}, "pointsDataTable" -> CompressedData["
1:eJw9UmtIk2EU3q1NP21IrBAxqZCSQiwMoqLO6UcYlHSDkPCHSDeESiRiRNgP
sQgyg4IyiQyLCEJCIhSq82UWdrEiZhYWtdyU5WVtOqcrXd97zrcOvLyc99n3
XM7Z0srjew7aLRaLwzhu49iMs7ZY1QRdb1I1Tz/ENQSH+Z6j3reqHCh4hFK3
4FNmHwLhGaQm4cFrfL+CJFeYWrjvNPlGIaUjtxMtXNPwRnAqFl8g77/N24Ly
7sLUd6IXIoH/+zR5NRz6sGxgpjZBC9tK/Kc8Nt15P3f/gY3vobyxK1ZQHqfJ
WZ83tNyKefUjuzvygrRj3fktFcFp6uCHcap6fOJytuMTeD2KoJv017e2Ppqw
4mnuA9B+I3z35fY4dRtsjV19wHJVX2Gz1t9avSkKDVePLajTbZihWi0J2Y59
7sL2GAmegObuJQ9qjvjhrJKvt6Nh7vvOBjuOqnYkHc+wgUkS3IXv4nsH7zQH
QPD5KH5/UCf7terP2F8Mbhtq/a1TdIUFNeT4bYO0Ok0NYIC2qbZkjEQvDvzz
6idUEVQJNFM/CD2KbtZHwvcZZF4zMKXixqJQyAPIwOecPwn6yac3c4p6SfAE
XOT8Cfip5Px2TNSqQJko+hpO34t8LK3USXAXrlijDP4Fwd0o8x4z8Tly21ad
W/RlHHj8nigpc96QE3N5f310gfV+EcsXBKglp+hbvjMCPezvBdQxoQszeR9h
KOP8w1TD+YOw4WGPkSBq7iMOu3iBabiS+WyYz/4C5j6S4CutzCpbPwmCO3Ex
DzQdL6m/V2MmRnlefhJcw6PDf4zEMTNfFv4DV2vCYA==
      "], "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    7.3, 20, 20, 20}, $CellContext`rawNumberOfMasses$$ = 
    4, $CellContext`scale$$ = 0.2, $CellContext`tabNumber$$ = 
    3, $CellContext`tauSliderValue$$ = 1, $CellContext`tick$$ = 
    True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {
    0.44399999999999995`, 1.1400000000000001`}, {1.572, 1.185}, {
    1.1640000000000001`, 1.4700000000000002`}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       TabView[{"dynamics" -> Column[{
            Dynamic[
             Row[{
               OverVector["q"], " = ", 
               
               Module[{$CellContext`qm$}, $CellContext`qm$ = 
                 ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                Slider2D[
                  
                  Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False, 
                  ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
               " 2 \[Pi] ", 
               Dynamic[
                NumberForm[
                 MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
            Row[{
              Text["time, normalized to one period, t/T = "], 
              Dynamic[
               
               N[($CellContext`tauSliderValue$$ - 
                 1)/$CellContext`dynMeshSize$$]]}], 
            Row[{
              Dynamic[
               Manipulator[
                
                Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {
                1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                ContinuousAction -> True, Appearance -> "Open", 
                AppearanceElements -> {
                 "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                  "FasterSlowerButtons", "DirectionButton"}]]}], 
            Row[{
              Text["oscillation scale factor:"]}], 
            Row[{" " Manipulator[
                
                Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], 
              Dynamic[
               NumberForm[$CellContext`scale$$, {3, 2}]]}], 
            Row[{
              Text["Angular frequency \[Omega](q), selection:"], 
              Dynamic[
               SetterBar[
                
                Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = \
#; $CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
         "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
         Column[{
            Row[{
              Text["number of mesh intervals "], 
              Manipulator[
               
               Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                   EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {2,
                30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[$CellContext`freqMeshSize$$]}], 
            LocatorPane[
             Dynamic[$CellContext`qPlaneLoc$$], 
             Dynamic[
              (Graphics[{
                Lighter[Gray], 
                Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], 
                   Part[#, 2]}, {-Part[#, 1], 
                   Part[#, 2]}}], Black, 
                Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                   Part[#, 1]}, {-Part[#, 2], 
                   Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
               ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
             ContinuousAction -> False]}], "parameters" -> Grid[{{
             Row[{
               Text["mass: "], 
               Dynamic[
                If[$CellContext`rawNumberOfMasses$$ > 1, 
                 SetterBar[
                  
                  Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   Range[$CellContext`rawNumberOfMasses$$]]], 
                 $CellContext`massLabel[1]]]}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                 Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                  ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {0.25, 
                 Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
             Text["coupling to neighbouring: "], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 1, 
               SetterBar[
                
                Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 Range[$CellContext`rawNumberOfMasses$$]]], 
               $CellContext`massLabel[1]]]}, {
             Row[{
               Text["horizontal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 1], FontColor -> RGBColor[
                  Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
               OverVector["a"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
             Row[{
               Text["vertical: "], 
               Style[
                Subscript[
                 Style["k", Italic], 2], FontColor -> RGBColor[0, 
                  Rational[2, 3], 0]], " || ", 
               OverVector["b"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 3], FontColor -> 
                RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
               " || (", 
               OverVector["b"], " + ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 4], FontColor -> RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], " || (", 
               OverVector["b"], " - ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Text["coupling from "], 
                 Dynamic[
                  $CellContext`massLabel[$CellContext`m1Sel$$]], 
                 Text[" to: "]}]]], 
             Dynamic[
              Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]], 
               Blank[], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  DeleteCases[
                   
                   Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 $CellContext`kLable[5], ": "}]]], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Dynamic[
                  Manipulator[
                   
                   Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}]], " ", 
                 Dynamic[
                  NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
        Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], ImageSize -> {250, 350}]],
       Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], True}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 12}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwtmHUcF0UaxneX/e3ap1ggBmmgIIqIhaRKd0l3t3SDdId0hyBKCSgKIraH
HWe3Z9edep535n2fe+aP+TzPvvvO7OzMO29MqW6Dmw9Koij6I46iImDPNIpK
gkPAR2hn8nJ6HkUdeX868k5g4yyKuoMlkfcAz1U/sHlqeWnkT4FVkG8A29OK
wjuADTOPcT46bcBTkbcF19EqwreAfRinOHw0OI62GVlt9DvR9074LfBpyO+F
14dvBy9Hfwe4jFYOPob3H8JrwZ8E5/F8HXwVuJXnqyOPdSstDXOoz/jt9D+M
2Qs8E3lvcC/tUvg94D5aWfhucD/tCvh94He0m+BfgT/QboR/CzZjzMHgRYx5
T2qdochuo/2I/DbktyLvD78Q3ldrg84AcBDyC7RuYMfU41yCTjP4Sch7gX3C
Gmr9WzLmBK0FOs3hQzVv+DCwGDq3gWtppeArY3/3BHgjcEjsb6nP8tg2sAS8
I6yn1nUa7Tz4ZDApRNEs+KngBbRt2MkLfGsL310IfxF+PPLF8JfgG5FPhj8L
T5FPoe+54C98ewb8JPgk3s+MrDePthD+EFiCd8vgl4CVaZvhN4A7GXMrvDq8
Nu0u+B5kT9BnFfxx8B+MPwz+q+yZ5xXwo+CDice8H7wns+xL5nYnuBb5MfAB
2mr4VYw9Ap3/8t+j0JmKfDLyaeBpvFsKLwcu4P3Z8NlgO60DeK32Fz4Pfj18
aGp5NficsNczwLnBxuaDw9EpA29Nv76p9/RK9FuBf0HeUsi3O8PPCHNYBb6O
zrqwhmvB9bT5OoNgUXTWgG+hkxW8R6/At2WWvwFfCs5Ff7n+mzYJvgJcmXiP
loF3yB9E3let/6PgV/T9RGcU+cfgdub8EdgPeR/ap/CBmb87AZ3fef9q+N4J
Bc9N6xmDd2ae/8kFn0cgugX99fCx8J/hT9F3In03hH3TnlaQHSIfx7daZPZF
xyFvAHbl+TLZVThHJ8KbgFXQvz32OpeDD4Q3hVeAj4p9vsqEM9kE+cVBR+ex
XuZ9OAfZZ7QDzGMHsieDzVzJfErS5miPwI3oXMu7t+k7E70uyF/WfyG/Hvk7
8NdptyJ/GmyE/CDjd0f3K557IX8f3MTz7egf4/1McHjk5508twYXy0fCb9Ze
wp+hT2udBXA/8m6ye+T7tJfIL2Ru7wS7OQs+PfV5HwVORK8F/IhsEJ0cnTHI
ZsOLyz7ge3hXXX4bHIr8e+Y8DHl7+NPw3pnt4QZ01oHdkL+KvC/y8ozRAXkR
cAHvKsO3gm/xvi78XbDAuybwD+BLeHdMfosxBmS2sd7wx+Vf0XkEnJE6jiyU
r6VvX/kNMKHVhP8p/wfvpn8HxzLO8eDU3P8inzwSvg9eH51BvI8Sz+c33p0M
bwM/DTyO1jFy/72pdR5I7SsayrfAf1G8gv879tnQGXkfPBz7f4/GXvMDsjG+
u4K+fRjvsGJc5vGfTe035MN7pPYn8tWDQnwsLd8OHqW1hE9VjKX/y4qlwYco
lnUGXwkx60XwJdo18OdjP0s+G53n4FUjr/UzsffuWXBq6nMkm1T8Vd9lstvY
NvAGOCf1OGvAN2PH3NfAnTzfDF8Nbkgt66Lzmtg/jwIPhrMjv1teZwZ+bcG5
SY3I/nc43/4ZHEPfkZn3ZDR8MPxr2R68f2Z76atznHnPx8I/D//yWWz70X5p
375UnI7c/9fYa/g7OII+/wz2rG9J1gvZO7Ft6b3YcbwB/EBq29d5+SnMU3s+
HP3R8KbIH1SczWxX+1PrSV//I7nyhUGy7eBP5TP1X8op+itfkm/UngW/pT2d
qn3jeWzwe8rfRsDLI+sa8oSmYNvMMWUEvA3ttMi+TvmJYlZ3ZItj7+9SsH3m
+H9d7rxCOcOw1HmF8sB2OsuZc5+mwcdrDbWWWn/ZeBvFLPgU+FXw6ZpX5H/Q
vyjuVc4d8xQfq+aep+Ln1bn9hfZLPqRX5jyuHfKeijvy27lz0TPQ6YRuK9rx
8IbBPyufrQ3fHfzyN/J/9DsFeQuwEfKu8gfIv5W/Spw/SK442yJ1XqX8qmUY
X/lg2dxy5b395WfCempdG2TOc8/LzeU+6iIfHXue2hvlmso564S+yjlL5Jbr
W62R9YOfFTkv1N6WgG+MvafK4y6TjYS4cylnpGb6fzcV1QIPxfbhD8TOd3UG
+2X2NfI5WruWufV6ZI4z0nkIXIp+Jfis1Ossn9oqd/58RDaW2w/Lj+0ANwa/
PT+ca53xXeAL6FYLfmYFz3Xgd6d+lnxT6v/U/yq26rvyMR1z+xT5FvmuLSG+
KF7oW/IxPXKPKb/VIcT8S9CZpGf0VoEVg+0pV60Er8jidEfncvDh1OducuYa
R3nUS6nPsM7yo+B5iWPxBWAXnQd4dXhr+VT54cSx9VJwOeM/D6+gmCo7zyxf
Cr8IbIx+WbCU8mF4AezK8yD5ZOWq6A8AD6H/GuMMkI9K/U467RW7aCPkn/UN
1Q/w79E5K/Gci4IfpNb/ElyNjgq7oyG/6I38xsQ5iHKPa8BdtCXaF7A4c5oX
2Za20/cuZO/Tt0zB7z/IneevQ+dq8PKCc+dPVdeEHGxn4pxHfT9Evj/xmHvB
exPnybuDb1f+8ffwv1Xk9+Gz+G5V+Bp4JbBT5DVVXiT5OuRXJF6fqxLXDmPB
x5BXBntqbonnoflU5DvDQ+46JnHNMkP7hv6QxLnoMHAgbVrk9VKuqLqycW7/
prjcEN5FuQ68Abyz1gd+U+56VfmG8g7VSKpbe6f2n/Kj1dFZHeR6PyV1bL0j
9ZiqI+vllqu+vDnknudozjoPmW17fGr7Fp8S7Fw13I3Bf6p2mITOrtjnV3NV
DVIWPhL5ztj+X/PW/FUr11Xc5J+HyM9ozZBViHx+1sTOqdbHzj/bag/RbwT2
R15PNUPqPOpjcL5yHmTbctuu9mhRZrnG/xbZAt7fHjm/kQ13AveFGN0I+UF0
lmT+1m7Fu7CnzROvs+4BauZeE90r1Mp9J6CYMoG+j4W9kJ9SvFCNvyi1b5S/
L47++OBL5fdbBFtqAj4Vcg/FiVmJ69M5YI3ca6G7CNUckyPXf5szv7+f91vB
2fJpSahTwKcVozOf+0U6R2A7dMqBpRP/7/mqGRL7BNXPd6sWg1fBTrdmrsWK
hfO4HH4Z/OyC67l35VsKPk8f5bZ56Z+J7JSCz3VZ1dmZfdjC3FzfnC9/TisW
cvjaIU/umzivl9+T/5ukWjHk/KoFdBc0F1kJnRN0SibOUZVfLwt+T/Ygu5id
2ed8pFiQOmd+IvWaaA0WB5/ZD/knYPfgo2QT8jnr4VXBi0Ptr9pEtar8SfGw
PqpNX8vDPQPy0gXnjgs0f/h9iWsc+RrdGxwCP0f/cNCR7gjaUPhQcCRtIny0
1ijY6nb5o8x+4pHcXLpHlJ9kzlsfhf+kGI/+2sz7skE+Vr5Q5xReqeCaUDam
OnFP2C/tm3TkIz/Ovb+yvSKhFlZd/2buOxDZ19u57yu2oFMN2ZHEtqF/25v5
DqRO8M+b4NcXbFe6R/mCvrtUHyKvgfyxxHNTDS+57ku+RucksB7yExLXfKof
T0xcKynHO5Q6p1XdNlF1aLAlxc1xwWZUBy2B14HP0VkJdqOYuyL48RnwBbnr
MdUsq4Iff4W+k3PXWuOQf5Pah6ienZL77mN85lppFPIfU+duWludY+V72+A1
+cfOod5UPdI21KSqDZvnrsGU/9ytXCGxv3pPPj3x3dTm3HW0/NvKzD7yQWQP
544r2uuXc9uKYvoT8AmJ75q0F7pD+g7ZwFB7qJbsGuoy1UGDQ32h+8Duuete
5Wk9Q42hWrhu4n+sDx7MnTeofp+X2QdvQVYj8bmrJrvO7M+2I1+Y2ba/S62v
Me4KcvnUHfBmYI/Ivrtd4juWDmGcprIL/VPm/GKafFqwD+2LzrXyqZW562Gd
8dPBw6ntRHukvpLNQGdp5lxmT+D6zoHc9xb6rr7/19T+R/chX4R85u3gT5R/
bZK/ze2zZFfLM9+B/IDOk8HPyH50x6K8Ym3IKxRH3gvxRfWm7gX3hn3XnUnj
xOdX//xi6txD9qmcSuu6Idiy9kJ7onuU8fBeieegfPC+3PfbueIj/eYGHeUc
urfRfeFzufM9yX9LHUeU0z0f/Il8z+O57U054UO571QVX04v+B51HPw/IcfT
nP8F/yN1PqP7NNmv7k57az2DTequTHFBd3h/Q/Y/sw3lLQ==
               "]], 
              Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
               "]], 
              Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
               "]], 
              Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
               "]], 
              Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
             "]]}, {
            
            Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
             1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209,
              1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 
             1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
            
            Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
             1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658,
              1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 
             1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
            
            Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
             1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660,
              1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 
             1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
            
            Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
             1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213,
              1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 
             1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
            
            Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
             1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214,
              1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 
             1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
            
            Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
             1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215,
              1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 
             1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
            
            Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
             1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219,
              1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 
             1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
            
            Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
             1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220,
              1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 
             1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
            
            Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
             1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
             1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700,
              1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
            
            Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
             1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223,
              1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 
             1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
            
            Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
             1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243,
              1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 
             2012, 1309, 696, 1332, 2029, 1711, 1347}], 
            
            Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
             1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225,
              1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 
             1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
            
            Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
             1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904,
              1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847,
              1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
            
            Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
             1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916,
              1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857,
              1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
            
            Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
             1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928,
              1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 
             1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
            
            Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
             1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469,
              1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 
             1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
            
            Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
             1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762,
              2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 
             2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
            
            Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
             2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764,
              2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 
             2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
            
            Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
             1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473,
              1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 
             1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
            
            Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
             1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474,
              1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 
             1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
            
            Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
             1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475,
              1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 
             2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
            Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
             1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479,
              1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 
             1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
            
            Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
             1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480,
              1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 
             1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
            
            Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
             1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
             2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804,
              1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
            
            Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
             1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483,
              1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 
             1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
            
            Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
             1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503,
              2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 
             2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
            
            Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
             1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485,
              2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 
             1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
            
            Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
             2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118,
              2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061,
              1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
            
            Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
             1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130,
              2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071,
              1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
            
            Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
             2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142,
              2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 
             1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
            
            Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 
             594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 
             572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 
             1940, 556, 1941, 553, 581}], 
            
            Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 
             563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 
             544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 
             521, 520, 1918, 515, 554}], 
            
            Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
             1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 
             359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 
             374, 1837, 375, 377}], 
            
            Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
             1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 
             387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 
             1856, 411, 414}], 
            
            Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 
             396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 
             422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 
             1876, 446, 1877, 448, 451}], 
            
            Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
             1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
             1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 
             379, 1823, 417}], 
            
            Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 
             433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 
             458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 
             474, 1893, 475, 477}], 
            
            Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 
             465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 
             486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 
             505, 510, 1914, 511, 514}], 
            
            Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 
             496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 
             522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 
             542, 546, 1936, 548, 551}], 
            
            Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
             1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
             507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
             1896, 483, 1897, 479, 517}], 
            
            Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
             1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
             608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
             586, 584, 580, 1938, 618}], 
            
            Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 
             663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 
             645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 
             622, 621, 1979, 616, 654}], 
            
            Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 
             597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 
             623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 
             643, 647, 1997, 649, 577}], 
            
            Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
             2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 
             669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 
             2001, 653, 679}], 
            
            Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
             2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 
             2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 
             1998, 702}], 
            
            Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 
             969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 
             947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 
             2154, 931, 2155, 928, 956}], 
            
            Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 
             938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 
             919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 
             896, 895, 2132, 890, 929}], 
            
            Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
             2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 
             734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 
             749, 2051, 750, 752}], 
            
            Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
             2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 
             762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 
             2070, 786, 789}], 
            
            Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 
             771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 
             797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 
             2090, 821, 2091, 823, 826}], 
            
            Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
             2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
             2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 
             754, 2037, 792}], 
            
            Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 
             808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 
             833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 
             849, 2107, 850, 852}], 
            
            Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 
             840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 
             861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 
             880, 885, 2128, 886, 889}], 
            
            Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 
             871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 
             897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 
             917, 921, 2150, 923, 926}], 
            
            Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
             2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
             882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
             2110, 858, 2111, 854, 892}], 
            
            Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
             1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 
             985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 
             965, 2174, 961, 959, 955, 2152, 993}], 
            
            Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
             1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026,
              1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 
             1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
            
            Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 
             972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 
             998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 
             2207, 1018, 1022, 2211, 1024, 952}], 
            
            Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
             1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224,
              1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 
             1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
            
            Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
             1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237,
              1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 
             1057, 2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
X7GnAnRL38jWGSoEqx69iNmJ9vOkv7mPlkMNmOzOcjBw8YHxYaHSr9DPtbE3
lom9sQnYG5sqwA8riOOOWPEjb7klBzRrXo6YO5oPZM5GOqajvPcKntOQIeY0
4pRnD7+0rAchJ3659JNoDpj5wOtuR3X3xtEYJYeRUKA012z59mkdlI0MZixA
77XvBi8U/zUWAxjayaIirhyoZHosRYuN3vuYq1UjuFra96pC+F5vYf73MOZ/
P2Be1RrzwmkEL8wF3D323DrQvffkltoDvjCb7SV5B63nVf64ehPzPlBJn57/
QqgcOMx1933pW/6gFmwX9i4N8EwScuLR+eM0ehk+Q3EYiOdGJIi5kRh+0kbG
+hKwodHLyoLPhguHa/X1K1B+LsB/OiLAf3oV88g6BI/cirnmdwTXDAX4T5c0
Zj43FmEDZlhU5NpV5cBg3NDgdAk6Xz9nuqWxyoGhwm0j295yIBEW8HoCxYlj
Zbywp1AmsHl6bdMSp3qoqFG9XzpjFOQK8Ja+4kt2W5rVghFmRxbrYxE4vCpk
3priUcAwo7jpqwQ3/aHmaEzcpiIQPecZ1KVYDQdf9iu3sL/5Rrdg3yjtN8xN
PNI/p5OrH5RyyDgpOPq//cA+aYqP1iL46O3cC0lrWyqgH09+YuGaCrDpUmFq
Cdq3XZr+69ubKkBrQ+PYbCYLxmrqyo6hPMQa89Q3CJ76gFaR2A/NBXDjuYou
5VsckJ9kpNeCzsVIWs/mKXYpDI79tDKsvwpkd0ZYZaF6c3WG1EIJi1Kw+HNN
nZRlJTwr/15tHK1f79iOSfvpXLD5aPd105k6aNR618z3HnrvYP+mOfZvKmP/
JgNz3HoEx52F/ZvG2L9pj/2bYpjvtib47jHMd48TfPdSap1wPrVOQK+zNzn+
Y9x0Hrw9T7l30VAdUPV13L0BrXN9aunpUNUioC7n5OIoz4HKafyTV/NQnD/l
ZE/xy8AWNYNOZ5MquLx5I//L/1XWpvYZPqH2GdD7XIe5cjuCK99FPS/gTT0v
SD+vCwJ4858wl6pJcKnS2I9pi/2Ywzh+ijFXbk9w5cK1X+MQXqbiENBxWE3F
M5yi4hnS8Wwty5p0CsqEsd+1VYe61oFKo238dLQPYQ9bato+VMFN4wpRInvK
oZ5UN3cbOl9mDu48S42HcCJiqJ7DLYf6i1W2QrSeQeydtCG8k6uwX/IO9kuO
Yb9kYXhgpFJSCTTIH7w0218JWCe2xnehz7HqKag3Op8LW49L+3y8UQa5Cnyd
SXRfZaz7el/Bf1L3FaTvq8fUvQc7qXsP0PeeP+bH5Ql+PBXPI3UL8EIyCS8k
V0nVQu2WN/Ru89P6o+0RsNMZsp1JHgXifuoFw53R0JEzENJTxAFRqnrPRSpH
wcQO073eBfWwyGvPvRrjHMjw77XQTP02pyROzCmlOcq0PbiXCO0jhTXbrtWB
M8KLjuug9Q/7UzxyJsEjL1vuF3tGoxaeut23tNn7AZwAZdc7UJwIEz5EG+xD
TMac8naCU+7FnPITglNuxryzCcE7m2IfYiDhQzwfcH6DbUwNXKNpPvbm4xlw
T0y3fZaH8jdnsSAR8XJYyXwjJteXBa5Kul9yRnXElaLoZzucKyBTI4Dh7lkI
myP/5a3dNArk8HxUGDEfZSKAj96OeepMgqfeT+UhUJvKQyCdh1zAfLEBwRfj
eU6oRsxf0b5CBuEr/H/ewDxizipshZuviEI4UN6cm8CbKwf3Q3n3rXpQntBA
cdnvCS47ZTJMqAuwoe5ikzf/iM6Cq9mB8r+g+8El2S9BbDYCFjvZHL09mwvW
Rjltk0B1zZ2f/a56OIZCpqELZ2Z+MbCNWSZ06D3KYzHfPUHw3VqmMtVKz1F9
fSBrVa1uDhw6ezt4N8qTDbC/72+Evy8E8+CNBA/+Cfv7PhP+Pk/MidcQnHg0
5sRPEZx4+uDI23bvBGjdF/v9VtMkEPeX+ttwVDdJxfy5NmDzQ7jlwjXtNZM5
sHFeyOIcVKc3LMhLNHQtg3WOdp89hLOhR35k0/wu9PmYNx8lePNhqh6B6lQ9
Auh6ZDXm0AMJDp1L1UGwiaqDIF0HdQrggiVXUB49HcKjR/vsfiO48hcepXlO
oVlA6vzUwUS3BygfTV2kjb43WZ6h8/epWCAiX3dvn95leDL9uJUMWudNk9cv
10XFgyuy0hnrdiRB/QEV9y60P+6/28ZJce8C0w08qyXofMmINhT0o/iRFOCt
e4G9dcWEt24I++l+x366euynM6LqZaBG1cuArpdT5OWc2PUX4W8Kw4yGKHSe
XAMfu6B6XIKq38F0x9f6HdD1+zPMiT8mOPFtVH8AjlH9AUj3BxZlfO0PwEdU
fwDS/YF92Ct3CHvl6D6D09y67Z/ulgG+0BPPzlcsIJ9uUSiM7o3CkKWc+sOl
wEzWzKChZTeQeJOYI4vqRyOqfwLkqf4JoPsnWSsOxi+wLgCz4Tf55p75cMxY
+6Ukei/ECPCyjRD+NWXsXyuk+kJAkeoLAbov5GDVEyN01hc8/VVV2x/VdwbD
shbJ6LzYUH0noEj1nQDdd2p50OfcmnoTyq806WTIsWFK07tNr9HnLMIetEHs
QaP7Wv7HOHvFD1SCp3uHz0XYZkNRyXO8Xej3X+34d9Sf+nmAfafVLUWcDf8Y
iNFgofvtNPaUDRCessETfGasmSdo36/eMd5bAz97xV38C72v7w4ETe9XDAFb
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0., 0.49488850049789845`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], True}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {0.25}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {0.25}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
        "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
         0.7, -1.9000000000000001`}, {
         2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
         0.8, -0.6000000000000001}, {2.6999999999999997`, 
         0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
         2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        True, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1:eJwtmQX8F1UWxWfG+c1gd6ECSogBCiIqdrIWGIAgndIhKQYhpYgSAkqINNLq
iii2oFhgr9jduuuGu6vruue75/L5PP7vvDszvzfv3XfuuXcO7zLgiv5Zon/6
L9efN/RfZ/09RPjWMkl2CHcTbih8l/DrwlcFvlt4pNrvaZKcrbFlss0UPla2
9sLjiiT5UWOD1B+qsadlm6C2b+ZnbJHtBuFUuKXwM8LvqHVVv77GZsn2gvDV
wmcILxT+WPga4VOF7xF+M+Z7mvCC0s/gWXWEZ5R+n07CpwjfKzxNrXbmZ/Ls
ScIHCrcWfk74OuF/6n2uFH5CeLjwv4Qv4R30PiOE/yP8B+G1so8V3kP3Xy48
UvbRwrsKtxLeLPvxFa0b76ax72RrJDxH+HnhH4RPFJ4rvFX4R+Gb1HZSv53G
XtL944X3E+4o/JTwOOF9hC8WflC4lu6frv4ajX0i27CY75kaWyf7MbLfxrWy
f156TVibLhobX3jNWLv+wh/p+htL7wnr+KzaKPV3kf1C2e8XPkjPm8yzNfap
bNPVeqs/TGN/k32CntlB/eM1Nlu2O8MfemvsFfZSeIvmd47wCuF5rKn6g3XN
E7INVvtr6vcbLNt/dc1N6g+T/SnZSv3+OOF+wpuE26ht1fXnamy6rm0r/KLw
ccIThdsJvyJ8svCdwl+o9VH/Ut2/XLbPc8+tqfBi4U7CBwj31j21hIeo/ax+
U9ZYts/Ueql/rq5fIlsHtVdlP19jq/g9terqD9RYXdluwQeEtwlvV1und1oR
+83+D1X7u8Yv0NhqXXub8KGZ/e0h4dGFfbFqnEfORP3wrxdzr8fN6k/R2Gv8
Xmmfxpefxz91fwvZa8h+e+nzeVTmd+BdpgrXEm4m/LDw1jhvNTV2R+lWXf02
iW3f5PaVzhp7WLZPc/vSWcKLhD+J89lV+KHSz7xU+IjMv/VanEfeZ3LpObD+
+Ahzw4eGC5+X2bfwIXyJPWPv4By4B056PzcnNQw+2Sa8UvhK4RZqq0qvIWvJ
meBsvJr7LDWSfQ7nTfho4ZXsQelndhc+IfjtH3BC4uetEe4rfBjcputPgCuE
Rwq3kn01Z0H4ELhA9gbCF+Tm1TbChwgfrv2aCrfo+m3sVfjHGjhFuEv43yTh
xsL91L5X/3SN3SNbK+1nzbCfKNtAjdUQniV8hvD2eL899fwx+Ffu61fLfiHc
BecKT5Z9u/DLuc8rHDY25n+ocDddf7jw9aVjAxwNL1wt+74aai/7YcLNNZ+9
hHsK14Q7ZD9K+Hrh6sIP5OaO3XT/zREv/pvaJ4YX9lF86+DMvjtVuLHwEjhC
+DHhKxJzIFwIH/9btrM0tjQ3p8KtS1lDPW+i8AGZOZ1z0Cfe5ybdc3zpmAPX
YycWtcg9/6tkryrcNt5viPDRwh+EP1yl69fGueL+xsJz4SrhIXCN8CvCh2l/
bxdeJPw+c5X9erhW+EXhX4WvZX2ENwv3EN4NftPv1ROuEvw2VfZXiQXCY9hv
4ZfhhsA8/wPOsvBM4UeEvwq+rZd5T9nbHRFPL9bYstjv9nHeuLZazHeT8NfC
7dVe0lxOC38j5hJ7OdO3aH0HBL9N1TVNZLtP7fLMMf4O2St63rSYP3z0dG4u
Z0/Ym2uED473PZZYFevTSfY/CvcPf78IDi0850vivPMuv0c8mKWxt2J98ecu
wg+W1gc98E/hB+DW3PGlmfAK4XeDv04LPbB/xLMZwm8Ivxf+2CT0xa6yjyd2
CL8pvJfwJOF7hd8V3lN4ovB84fdKcyBcOEBj3+lZk/UOA2P9l7JWapep3YpN
7Wu1fvCD7OtiPa/I7HNwEZwCj/2cm2t4h4sycyTvdp1abfUf1Zq1KL1e/Ba/
OaVwjGoa8ReuJcZdGHxK7EPDoGV26P6upTUcWu494e7CPQvHTmIcsQ69cHro
B7QXMbS5cN/gZ9aMtWMP2Iuv4v1O1tg82XoV1iZv63ldhOfH9az527nXiPnj
s2jB29Uaqb9Z17fCfwr7JjGeWL9I9jMSawa0A3s0k7OdeO/Yo4VwS+K9w2dm
C49K7EvsGXvJnrKXnNkFwlMSn2U45syIH3APPoPvoDnRlm8L34XWFN5b19dR
u1P9eRp7R7YnS2sbfHCO5j4t+A3Ngnb5k9qczBptWWGNc63wjYm1z5O59Sz8
20O2HWr3qD9aY/tUrKHQUjkxMPxxUvDNS6XP75nqt02sd/ElYhkxDZ8iRncT
7pk4dm/ANzNzTF5xvKumfq/gd2J+9/BvtMBvuec6UGOP4dt6h72F++r62sRi
2fcUbil8ML6LZhHuKFxDnfWlfR8fwVfg3/3CXq00J7TLHGPhCjgYLoZDpxc+
83AHHAIX3F/67ON/3+Y+U21D33LWHgj7YM50YQ3ZM7OGQks9Cidn5pS7Zf9W
+Cm0HjFUuImuWaj+Q/BLcO6j+jsrMRd/UdrGNccJf8mahT9VrVhDXBb+gLZo
praL+v31vkeWfubRuu6Uin/rLtlP4azJ3kn2n3LPfYyue6F0PjE3+Huj2jca
e1x/F2tsVeH4+CxaJnEu8pnw/XBf4t/5XngzsUF4beEc5AXOauLchJjwGFow
caxAnxwY861TOudYG/5PLlI/8h3yg9WZcyj056+pc6teah+p35yYlVsfN1D/
QTS/bL3Vvoz4szz3+zdR/2E0g2zDhGsJP0BOxt6pfab+ZXBgbk6BWxom5lfO
20mJ9V1T+EPt/cjf+hbWj8cF3xBfOGO/pZ4zZ2+g8J9TaxC0yKnCtwlPYY7q
j9LYMbKtJ2ZxljjTkX/BHbtUfD6mR3wZVPqZPOtxtIPaEZx9cgiNnwunqb9Y
7TzOD/upfn1dczNaSPiReL8paAm1w+EbcvDSMYNYSUwmlrTEf/EtjY3MHXse
Sr3mxKCphbkbzYx27hDnbwQ5VGmfezPykwWy9RH+NvKdlbk5HW7vJDyxcPz+
ITUnL2R+wt+lzo83CfcV/pp3E75P+MOI18QAYgFzZK5z0XjCY4XrCc9mTUtr
9kYRb97KzXHj4/zfW3iNWKv5rFlpDYMvfZVaS3+otiTO63Jd/xExl1gvXFN7
9XrpvWLPioo1GFoGTbOz8HPCWyAw9dOKc2RysTJz7rx76IFRws8Lz8NnEvsc
vofP46v4LGeBHHp98D+59Rvx+7cm1ib4NGv3RWpf3xR6GJ9kbfEh8sOfUvvW
x2qr4v4aun+A8I+pr8fviKFPk7skjq39gt9v1dhJst2YOx8aL9yo9BnC1/A5
tEtP4arCw0OvksOQy8zXWPWK9WGNxPr5mNKadVzEK7QsGvkW4aGJtTM5yOSI
z4sL59/74+uR36CZJwQfw+9o7sahjybp+q2luRBO/Evuvbkh4jt71DX46nY9
7xS4UG1EZg35fy0Z53cyNQLZnlG7LvTDL7lrVsMj3lDLQuPgew0y56YjQs/O
CX/lvD6WmrNuy+2Dd6f2YXwTzTtY+KDEWpgckdyEHIXcizPH2eNMtyics4xO
nXOSy6BPFkV8PrDiHGVo6jNL7GTNWXtymCsKa/TpqfeEvWENWAs49OrCOeyE
1D5ArG/ImUu9B72EmwtvTK0xxwuP5h3Unxb8Bx+SC5ATtCk8BjeOimvhXLgX
n+pQ+AzPSP2MsaFf68T6zUzNf3AhnHh9bk6D2+YHJ6Kp0R5okI2lazzUepYH
X9K4bkJuG5wMN6Nhx+XO8Vel3nP2npz7vtTPIBcnR14b60PuTE59V+wHuTYx
al3qnJ3YdbrwnbGfg3LnrAvw3cS5LD41Md6f3+OMcdYmRwwh39oWz5she0fh
14M/0bboV/QpOd4hFWvyd1Pnv2j1zsHPaIRZuTmXe3nG9tAMb4U/EktnhZ7Y
oLFmpf2RXIwctHPuMw3GpznrgyM+4RP4BjFqReqawpDY36WpNS2xlhzindT1
MnILahi3pD6DaIduMX/4517huqGX0UxoJzTsh6nreWjb1pzJ1BwKl6I5+qSu
kfA8OGpM6poD3PVBnA9yWvQKOdETqX0MX0Nzv5BaEzBfcnBycTgD7kBjbIj1
ZL2aBcZfO8t/7ytcv0XToe2oZ26N9+9RmCPhSs4MZ4f648sR72bH+RwU54Xz
eJTwtcK7CrfPXVOhtqJHJRcXjiGjQv/eU1jz3Zy55oAWRL/2i3xwtuzf5z4j
nI1HovWJfBAb+Q+5MznvksL5ErktNeQ9Ks6Z4L4hmeux8PuyiH/Url6MeEuO
kVUcf0dnjnnkHvtVHHuIYcRS9HaHzPUD8kHyja4x/1mFORiuZv3h5sdZn8z1
hB9yN+Y+ILPtjIq1OJr8ydDf1D4WaeyEisfQvadXfC01VmqtaGS0Mnr+6cwa
Fa1Kjjcl9hP9vCWzDj5b4+eE/t0U968snM/xwWRc4lpNQ7UGoaO3RM43L9Zj
aeFnLFf/uXh2PeFjK9bpT8Yakx9SY2DtyQH6x3m5vHANZWr8HvkJNXjqaWhk
tDI5Wc+ID/A39SzyLep33dU6RjztAaeWrnFR69pJYxcWrvFxLfdcWrjmTe17
Z+GWuWMOz+4Zz6sa60UOSi7aWvZ9iD3EMPg397P5jdZqrXLng20CUwOlz9j5
uXO8DhGviF/kiFcK75E4d0R/TYv1Yb3rxPqQM7XJnUN2jPjXrPD7tYj3aRHP
I/fUI5Kzc+e85L7EeGJ9lajvsAfsLe/Au2g4uajweWyX+h2vjvnye/qTXFKY
szYEP8NlfGN5MPIt/II1Z+2rEI9zr+81EV/ROuTIfSP+osWomS4Urpu4lsr+
dE5dU0Yf8E1hYMyHtf8x/JtvCusL11j3ylw/o/Y6PHfsJkYRq9Cso4lFmbVs
78KxAc6Gu2tXnMuRI5Ir8s2AbwedE9d79q1Yq6Gh0dLkOMQiOB1uJyeA69D4
5ApofLj889Ta/4LQA/DvmNw1CWoTdTN/m2PNWDtyUs4UGumgmD/64IioL6LZ
P4p4T+xfFtqB+Lsk4kF7vdvG3LkeDkAte0nu2MN8iaWcx9mJNTPaGQ2JlqRG
QC0BPYPWQeOgdW4orMepl1Nf5xsf3x52z/ztr348D36Ca+bmzrWIx8R26kO1
Iw8n16fGMlb2czLXXnYL/qWmRG0JHkfrUJOgNsE3Qeq3VTJ/K5yiVi1zPX1D
7phL7P0l9bfKOblzNzQCWoE5M3fqw3wrgIvIhR6P2gFrujLiAWvdtXDsIwYS
G8lX1gV/riicX/FtYltoGeoBfItcoLEjK9bwkyJe4+98w6oa+SL1szUxP76B
8a0NH+tCrMnse/tHPFkV9QTeke85fCPj3afEfm5KnRs3jt9Dn7QurMnnRPwn
t7wjd36IpkBbLIz5U3Mmdx0ZehTNQO7MN5GdM685tfPJMX9yrpsKaxT8Gw2A
FkCPDwm93V02iIT4Ro2PWl+38GdiPrGfnIDcgJyB3IFvupxdzjDfevsXxsyP
/JU9Z+/JIUfIdkDU/9GI1DIHFc7NyfnI/fjmyVlDg6BFlsV55RsM32LQSNR2
FmfWTv8DQ2HsJQ==
                 "]], 
                Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                 "]], 
                Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                 "]], 
                Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
               "]]}, {
              
              Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
               1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
               1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
               1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
               1334}], 
              
              Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149,
                1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 
               1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 
               1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
              
              Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150,
                1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 
               1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 
               1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
              
              Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
               1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
               1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
               1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
              
              Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
               1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
               1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
               1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
               1339}], 
              
              Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
               1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
               1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
               1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
               1340}], 
              
              Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
               1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
               1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
               1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
              
              Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
               1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
               1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
               1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
              
              Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
               1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
               1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
               1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
              
              Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
               1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
               1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
               1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
              
              Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165,
                1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 
               1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 
               1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
              
              Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
               1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
               1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
               1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
               1348}], 
              
              Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
               1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
               1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
               1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
              
              Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
               1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
               1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
               1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
              
              Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
               1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
               1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
               1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
               1102}], 
              
              Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
               2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
               2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
               2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
               1594}], 
              
              Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409,
                1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 
               1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 
               1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
              
              Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410,
                2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 
               1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 
               1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
              
              Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
               2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
               2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
               2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
              
              Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
               2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
               2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
               2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
               1599}], 
              
              Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
               2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
               2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
               2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
               1600}], 
              
              Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
               2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
               2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
               2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
              
              Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
               2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
               2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
               2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
              
              Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
               2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
               1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
               1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
              
              Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
               2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
               2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
               2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
              
              Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425,
                1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 
               1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 
               1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
              
              Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
               2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
               2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
               2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
               1608}], 
              
              Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
               1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
               1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
               1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
              Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
               1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
               1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
               1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
              
              Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
               1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
               1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
               1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
               1362}]}, {
              
              Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599,
                594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 
               1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 
               560, 557, 1940, 556, 1941, 553, 581}], 
              
              Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566,
                563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 
               1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 
               526, 1922, 521, 520, 1918, 515, 554}], 
              
              Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
               1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
               358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371,
                1836, 374, 1837, 375, 377}], 
              
              Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
               1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
               386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405,
                410, 1856, 411, 414}], 
              
              Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847,
                396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 
               1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 
               440, 442, 1876, 446, 1877, 448, 451}], 
              
              Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435,
                1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 
               407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385,
                383, 379, 1823, 417}], 
              
              Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866,
                433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 
               1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471,
                1892, 474, 1893, 475, 477}], 
              
              Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886,
                465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 
               1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 
               504, 1911, 505, 510, 1914, 511, 514}], 
              
              Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903,
                496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 
               1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 
               540, 1933, 542, 546, 1936, 548, 551}], 
              
              Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535,
                1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 
               509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489,
                485, 1896, 483, 1897, 479, 517}], 
              
              Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636,
                1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 
               1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 
               590, 1960, 586, 584, 580, 1938, 618}], 
              
              Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666,
                663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 
               1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 
               627, 1983, 622, 621, 1979, 616, 654}], 
              
              Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962,
                597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 
               619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641,
                1993, 643, 647, 1997, 649, 577}], 
              
              Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
               2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
               2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
               2000, 656, 2001, 653, 679}], 
              
              Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
               2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694,
                2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 
               678, 1998, 702}], 
              
              Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974,
                969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 
               2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 
               935, 932, 2154, 931, 2155, 928, 956}], 
              
              Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941,
                938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 
               2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 
               901, 2136, 896, 895, 2132, 890, 929}], 
              
              Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
               2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
               733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746,
                2050, 749, 2051, 750, 752}], 
              
              Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
               2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
               761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780,
                785, 2070, 786, 789}], 
              
              Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061,
                771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 
               2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 
               815, 817, 2090, 821, 2091, 823, 826}], 
              
              Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810,
                2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 
               782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760,
                758, 754, 2037, 792}], 
              
              Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080,
                808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 
               2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846,
                2106, 849, 2107, 850, 852}], 
              
              Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100,
                840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 
               2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 
               879, 2125, 880, 885, 2128, 886, 889}], 
              
              Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117,
                871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 
               2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 
               915, 2147, 917, 921, 2150, 923, 926}], 
              
              Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910,
                2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 
               884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864,
                860, 2110, 858, 2111, 854, 892}], 
              
              Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203,
                1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989,
                985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 
               967, 965, 2174, 961, 959, 955, 2152, 993}], 
              
              Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221,
                1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 
               1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 
               1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
              
              Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176,
                972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 
               994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206,
                1016, 2207, 1018, 1022, 2211, 1024, 952}], 
              
              Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
               1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
               1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
               1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
              
              Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
               1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
               1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
               2231, 1060, 1057, 2229, 1056, 1053, 2212, 
               1077}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0., 0.49488850049789845`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {0.25}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
          "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
           0.7, -1.9000000000000001`}, {
           2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
           0.8, -0.6000000000000001}, {2.6999999999999997`, 
           0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
           1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
          "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         0.25}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         Switch[$CellContext`tabNumber$$, $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], $CellContext`freqTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
            Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
          Blank[], 
          LocatorPane[
           Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                 Dimensions[#]] < 3, 
               
               Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
               If[First[
                  Dimensions[#]] > 7, 
                Take[#, 7], #]]; 
            Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
               First[
                 Dimensions[$CellContext`rawArrayOfMasses$$]]; 
              If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                  $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                
                While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                 Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                 Part[
                  Part[$CellContext`kArray$$, All, 1], All, 1]]; 
              If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                
                While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                 Part[$CellContext`u$$, 1], 
                 
                 Part[$CellContext`u$$, 
                  1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 1], 
               Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                 Part[$CellContext`u$$, 2], 
                 
                 Part[$CellContext`u$$, 
                  2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 2], 
               Part[$CellContext`u$$, 2]]; {
               Part[$CellContext`u$$, 1], 
               
               Part[$CellContext`u$$, 
                2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
             If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
             If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
             If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
             If[$CellContext`omegaIndex$$ > 
               2 $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
             ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
              2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
           $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
           LocatorAutoCreate -> True, ContinuousAction -> False]]]), 
      "Specifications" :> {
        TabView[{"dynamics" -> Column[{
             Dynamic[
              Row[{
                OverVector["q"], " = ", 
                
                Module[{$CellContext`qm$}, $CellContext`qm$ = 
                  ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                 Slider2D[
                   
                   Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False,
                    ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
                " 2 \[Pi] ", 
                Dynamic[
                 NumberForm[
                  MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
             Row[{
               Text["time, normalized to one period, t/T = "], 
               Dynamic[
                N[($CellContext`tauSliderValue$$ - 
                  1)/$CellContext`dynMeshSize$$]]}], 
             Row[{
               Dynamic[
                Manipulator[
                 
                 Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {
                 1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                 ContinuousAction -> True, Appearance -> "Open", 
                 AppearanceElements -> {
                  "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                   "FasterSlowerButtons", "DirectionButton"}]]}], 
             Row[{
               Text["oscillation scale factor:"]}], 
             Row[{" " Manipulator[
                 
                 Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], 
               Dynamic[
                NumberForm[$CellContext`scale$$, {3, 2}]]}], 
             Row[{
               Text["Angular frequency \[Omega](q), selection:"], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
          "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
          Column[{
             Row[{
               Text["number of mesh intervals "], 
               Manipulator[
                
                Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                2, 30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[$CellContext`freqMeshSize$$]}], 
             LocatorPane[
              Dynamic[$CellContext`qPlaneLoc$$], 
              Dynamic[
               (Graphics[{
                 Lighter[Gray], 
                 Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                 Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
              ContinuousAction -> False]}], "parameters" -> Grid[{{
              Row[{
                Text["mass: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                  Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                   ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {0.25, 
                  Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
              Text["coupling to neighbouring: "], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ > 1, 
                SetterBar[
                 
                 Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  Range[$CellContext`rawNumberOfMasses$$]]], 
                $CellContext`massLabel[1]]]}, {
              Row[{
                Text["horizontal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 1], FontColor -> RGBColor[
                   Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
                OverVector["a"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
              Row[{
                Text["vertical: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 2], FontColor -> RGBColor[0, 
                   Rational[2, 3], 0]], " || ", 
                OverVector["b"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 3], FontColor -> 
                 RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
                " || (", 
                OverVector["b"], " + ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 4], FontColor -> RGBColor[0, 
                   Rational[2, 3], 
                   Rational[2, 3]]], " || (", 
                OverVector["b"], " - ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Text["coupling from "], 
                  Dynamic[
                   $CellContext`massLabel[$CellContext`m1Sel$$]], 
                  Text[" to: "]}]]], 
              Dynamic[
               Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
                Dynamic[
                 $CellContext`massLabel[
                  First[
                   Delete[
                    Range[2], $CellContext`m1Sel$$]]]], 
                Blank[], 
                Dynamic[
                 SetterBar[
                  
                  Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   DeleteCases[
                    
                    Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  $CellContext`kLable[5], ": "}]]], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Dynamic[
                   Manipulator[
                    
                    Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}]], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
         Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
         ImageSize -> {250, 350}], {{$CellContext`tick$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 12}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                  "]], 
                 Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                  "]], 
                 Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                  "]], 
                 Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
                "]]}, {
               
               Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
                1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
                1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
                1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
                1334}], 
               
               Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 
                1149, 1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 
                1210, 1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 
                1268, 1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
               
               Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 
                1150, 1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 
                1211, 1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 
                1269, 1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
               
               Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
                1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
                1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
                1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
               
               Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
                1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
                1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
                1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
                1339}], 
               
               Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
                1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
                1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
                1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
                1340}], 
               
               Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
                1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
                1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
                1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
               
               Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
                1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
                1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
                1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
               
               Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
                1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
                1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
                1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
               
               Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
                1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
                1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
                1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
               
               Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 
                1165, 1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 
                1224, 1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 
                1283, 1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
               Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
                1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
                1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
                1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
                1348}], 
               
               Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
                1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
                1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
                1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
               
               Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
                1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
                1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
                1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
               
               Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
                1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
                1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
                1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
                1102}], 
               
               Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
                2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
                2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
                2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
                1594}], 
               
               Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 
                1409, 1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 
                1470, 1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 
                1528, 1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
               
               Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 
                1410, 2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 
                1471, 1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 
                1529, 1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
               
               Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
                2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
                2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
                2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
               
               Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
                2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
                2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
                2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
                1599}], 
               
               Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
                2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
                2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
                2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
                1600}], 
               
               Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
                2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
                2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
                2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
               
               Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
                2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
                2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
                2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
               
               Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
                2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
                1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
                1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
               
               Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
                2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
                2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
                2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
               
               Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 
                1425, 1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 
                1484, 1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 
                1543, 1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
               
               Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
                2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
                2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
                2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
                1608}], 
               
               Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
                1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
                1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
                1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
               
               Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
                1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
                1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
                1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
               
               Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
                1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
                1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
                1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
                1362}]}, {
               
               Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 
                599, 594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 
                573, 1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 
                1943, 560, 557, 1940, 556, 1941, 553, 581}], 
               
               Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 
                566, 563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 
                545, 1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 
                1921, 526, 1922, 521, 520, 1918, 515, 554}], 
               
               Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346,
                 1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
                358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 
                371, 1836, 374, 1837, 375, 377}], 
               Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365,
                 1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
                386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 
                405, 410, 1856, 411, 414}], 
               
               Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 
                1847, 396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 
                418, 1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 
                1871, 440, 442, 1876, 446, 1877, 448, 451}], 
               
               Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 
                435, 1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 
                409, 407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 
                1844, 385, 383, 379, 1823, 417}], 
               
               Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 
                1866, 433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 
                455, 1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 
                470, 471, 1892, 474, 1893, 475, 477}], 
               
               Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 
                1886, 465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 
                481, 1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 
                1910, 504, 1911, 505, 510, 1914, 511, 514}], 
               
               Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 
                1903, 496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 
                518, 1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 
                1932, 540, 1933, 542, 546, 1936, 548, 551}], 
               
               Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 
                535, 1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 
                1894, 509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 
                491, 489, 485, 1896, 483, 1897, 479, 517}], 
               
               Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 
                636, 1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 
                610, 1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 
                592, 590, 1960, 586, 584, 580, 1938, 618}], 
               Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 
                666, 663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 
                646, 1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 
                1982, 627, 1983, 622, 621, 1979, 616, 654}], 
               
               Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 
                1962, 597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 
                1977, 619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 
                1992, 641, 1993, 643, 647, 1997, 649, 577}], 
               
               Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688,
                 2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
                2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
                2000, 656, 2001, 653, 679}], 
               
               Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707,
                 2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 
                694, 2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 
                681, 678, 1998, 702}], 
               
               Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 
                974, 969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 
                948, 2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 
                2157, 935, 932, 2154, 931, 2155, 928, 956}], 
               
               Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 
                941, 938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 
                920, 2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 
                2135, 901, 2136, 896, 895, 2132, 890, 929}], 
               
               Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721,
                 2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
                733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 
                746, 2050, 749, 2051, 750, 752}], 
               
               Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740,
                 2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
                761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 
                780, 785, 2070, 786, 789}], 
               Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 
                2061, 771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 
                793, 2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 
                2085, 815, 817, 2090, 821, 2091, 823, 826}], 
               
               Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 
                810, 2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 
                784, 782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 
                2058, 760, 758, 754, 2037, 792}], 
               
               Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 
                2080, 808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 
                830, 2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 
                845, 846, 2106, 849, 2107, 850, 852}], 
               
               Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 
                2100, 840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 
                856, 2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 
                2124, 879, 2125, 880, 885, 2128, 886, 889}], 
               
               Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 
                2117, 871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 
                893, 2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 
                2146, 915, 2147, 917, 921, 2150, 923, 926}], 
               
               Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 
                910, 2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 
                2108, 884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 
                866, 864, 860, 2110, 858, 2111, 854, 892}], 
               
               Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 
                2203, 1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 
                2192, 989, 985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 
                971, 2179, 967, 965, 2174, 961, 959, 955, 2152, 993}], 
               
               Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 
                2221, 1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 
                2213, 1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 
                2200, 1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 
                1029}], 
               
               Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 
                2176, 972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 
                2191, 994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 
                1012, 2206, 1016, 2207, 1018, 1022, 2211, 1024, 952}], 
               
               Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
                1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
                1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
                1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
               
               Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
                1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
                1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
                2231, 1060, 1057, 2229, 1056, 1053, 2212, 
                1077}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0., 0.49488850049789845`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, True}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {0.25}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {0.25}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}},
            "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
            0.7, -1.9000000000000001`}, {
            2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
            0.8, -0.6000000000000001}, {2.6999999999999997`, 
            0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
            1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
           "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left, 
        SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (
                   Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$144]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$144]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$144 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.601686336691546*^9, 3.6016863756617746`*^9}},
 CellID->465591972]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    True, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
        0.5060000000000002, 1.2400000000000002`}, {{
        0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109, 
        0.6525884217028176}}}, {
       1, 3, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
        1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
        0.45043660026690807`}, {0.45043660026690807`, 
        0.7170411692283046}}}}, {{
       2, 1, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
        0.5060000000000002, 1.2400000000000002`}, {{
        0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109, 
        0.6525884217028176}}}, {
       2, 3, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
        1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}, {{
        0.9464696733662902, 0.22508849540613599`}, {0.22508849540613599`, 
        0.053530326633709754`}}}}, {{
       3, 1, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
        1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
        0.45043660026690807`}, {0.45043660026690807`, 0.7170411692283046}}}, {
       3, 2, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
        1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}, {{
        0.9464696733662902, 0.22508849540613599`}, {0.22508849540613599`, 
        0.053530326633709754`}}}}}, {{{
       1, 3, {-1, 0}, 0.25, 0.443449, {0.9, 0.7}, {1.2679999999999998`, 
        0.1449999999999998}, {{
        0.3053879927567766, -0.4605715651630738}, {-0.4605715651630738, 
        0.6946120072432234}}}, {
       1, 2, {-1, 0}, 0.25, 0.8216359999999995, {0.9, 0.7}, {
        0.40600000000000025`, -0.05999999999999983}, {{0.29701230228470993`, 
        0.45694200351493847`}, {0.45694200351493847`, 0.70298769771529}}}, {
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 2, {-1, 1}, 0.25, 1.9784360000000005`, {0.9, 0.7}, {2.306, 
        0.7400000000000002}, {{0.9991912803851123, 0.028426494463303514`}, {
        0.028426494463303514`, 0.0008087196148877297}}}, {
       1, 3, {0, -1}, 0.25, 2.053649, {0.9, 0.7}, {-0.532, 
        0.6449999999999998}, {{0.9985270121622536, 0.03835124697550566}, {
        0.03835124697550566, 0.001472987837746381}}}, {
       1, 3, {1, -1}, 0.25, 3.324248999999999, {0.9, 
        0.7}, {-0.43199999999999994`, 1.9449999999999998`}, {{
        0.533721751890427, -0.49886154737506133`}, {-0.49886154737506133`, 
        0.4662782481095731}}}, {
       1, 2, {1, 0}, 0.25, 3.472036, {0.9, 0.7}, {0.6060000000000002, 
        2.54}, {{
        0.024894903163446426`, -0.15580483612497095`}, {-0.15580483612497095`,
         0.9751050968365534}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 2, {0, 1}, 0.25, 4.063636000000001, {0.9, 0.7}, {2.406, 2.04}, {{
        0.5581297143740238, 0.49660944041247795`}, {0.49660944041247795`, 
        0.44187028562597636`}}}, {
       1, 3, {-1, -1}, 0.25, 4.1830490000000005`, {0.9, 
        0.7}, {-0.6320000000000001, -0.6550000000000002}, {{
        0.5610797291640619, 0.4962552434838799}, {0.4962552434838799, 
        0.43892027083593815`}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 3, {1, 0}, 0.25, 4.504649, {0.9, 0.7}, {1.468, 2.745}, {{
        0.07162023056624389, 0.2578580484295225}, {0.2578580484295225, 
        0.9283797694337561}}}, {
       1, 3, {-1, 1}, 0.25, 5.203848999999999, {0.9, 0.7}, {
        3.1679999999999997`, 0.9449999999999998}, {{0.9884652686886188, 
        0.10677865556821496`}, {0.10677865556821496`, 
        0.011534731311381241`}}}, {
       1, 2, {0, -1}, 0.25, 5.330035999999998, {0.9, 
        0.7}, {-1.3939999999999997`, 0.44000000000000017`}, {{
        0.9873171588334488, 0.11190168321564802`}, {0.11190168321564802`, 
        0.012682841166551204`}}}, {
       1, 2, {1, -1}, 0.25, 5.895235999999999, {0.9, 
        0.7}, {-1.2939999999999996`, 1.7400000000000002`}, {{
        0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
        0.1834701782931168}}}, {
       1, 3, {0, 1}, 0.25, 7.9944489999999995`, {0.9, 0.7}, {3.268, 2.245}, {{
        0.7014146941208831, 0.45763754325032285`}, {0.45763754325032285`, 
        0.29858530587911697`}}}, {
       1, 2, {-1, -1}, 0.25, 8.164835999999998, {0.9, 
        0.7}, {-1.4939999999999998`, -0.8599999999999999}, {{
        0.7019413494649495, 0.45740539062878915`}, {0.45740539062878915`, 
        0.29805865053505054`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       1, 2, {1, 1}, 0.25, 9.548836000000005, {0.9, 0.7}, {
        2.5060000000000002`, 3.3400000000000003`}, {{0.2701099903695068, 
        0.44401642252521667`}, {0.44401642252521667`, 0.7298900096304932}}}, {
       1, 3, {1, 1}, 0.25, 14.185049, {0.9, 0.7}, {3.368, 3.545}, {{
        0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
        0.5706025407455412}}}}, {{
       2, 1, {1, 0}, 0.25, 0.8216359999999995, {0.5060000000000002, 
        1.2400000000000002`}, {1., 2.}, {{0.29701230228470993`, 
        0.45694200351493847`}, {0.45694200351493847`, 0.70298769771529}}}, {
       2, 3, {1, -1}, 0.25, 1.3768689999999997`, {0.5060000000000002, 
        1.2400000000000002`}, {-0.43199999999999994`, 1.9449999999999998`}, {{
        0.6390179457885975, -0.48028534305006504`}, {-0.48028534305006504`, 
        0.36098205421140256`}}}, {
       2, 3, {0, -1}, 0.25, 1.431469000000001, {0.5060000000000002, 
        1.2400000000000002`}, {-0.532, 0.6449999999999998}, {{
        0.7526841307775437, 0.43145188613934365`}, {0.43145188613934365`, 
        0.24731586922245624`}}}, {
       2, 2, {1, 0}, 0.25, 1.6999999999999995`, {0.5060000000000002, 
        1.2400000000000002`}, {0.6060000000000002, 2.54}, {{
        0.005882352941176469, 0.07647058823529411}, {0.07647058823529411, 
        0.9941176470588234}}}, {
       2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.5060000000000002, 
        1.2400000000000002`}, {0.40600000000000025`, -0.05999999999999983}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       2, 3, {-1, 0}, 0.25, 1.7796690000000002`, {0.5060000000000002, 
        1.2400000000000002`}, {1.2679999999999998`, 0.1449999999999998}, {{
        0.3262651650391164, -0.4688456111782583}, {-0.4688456111782583, 
        0.6737348349608836}}}, {
       2, 1, {1, -1}, 0.25, 1.9784360000000005`, {0.5060000000000002, 
        1.2400000000000002`}, {-0.8999999999999998, 1.2}, {{
        0.9991912803851123, 0.028426494463303514`}, {0.028426494463303514`, 
        0.0008087196148877297}}}, {
       2, 3, {1, 0}, 0.25, 3.1904689999999993`, {0.5060000000000002, 
        1.2400000000000002`}, {1.468, 2.745}, {{0.2900651910424454, 
        0.45379221675559295`}, {0.45379221675559295`, 0.7099348089575546}}}, {
       2, 1, {-1, 0}, 0.25, 3.472036000000001, {0.5060000000000002, 
        1.2400000000000002`}, {0.8, -0.6000000000000001}, {{
        0.024894903163446423`, -0.15580483612497095`}, {-0.15580483612497095`,
         0.9751050968365536}}}, {
       2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
        1.2400000000000002`}, {-1.2939999999999996`, 1.7400000000000002`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
        1.2400000000000002`}, {2.306, 0.7400000000000002}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 1, {0, -1}, 0.25, 4.063636000000002, {0.5060000000000002, 
        1.2400000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.5581297143740237, 0.49660944041247795`}, {0.49660944041247795`, 
        0.44187028562597636`}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.5060000000000002, 1.2400000000000002`}, {
        2.406, 2.04}, {{0.8494117647058823, 0.3576470588235293}, {
        0.3576470588235293, 0.15058823529411758`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.5060000000000002, 
        1.2400000000000002`}, {-1.3939999999999997`, 0.44000000000000017`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 3, {-1, -1}, 0.25, 4.886069000000003, {0.5060000000000002, 
        1.2400000000000002`}, {-0.6320000000000001, -0.6550000000000002}, {{
        0.26504824225773316`, 0.4413588919845381}, {0.4413588919845381, 
        0.7349517577422668}}}, {
       2, 1, {0, 1}, 0.25, 5.330035999999998, {0.5060000000000002, 
        1.2400000000000002`}, {2.8, 1.5}, {{0.9873171588334488, 
        0.11190168321564802`}, {0.11190168321564802`, 
        0.012682841166551204`}}}, {
       2, 1, {-1, 1}, 0.25, 5.895235999999999, {0.5060000000000002, 
        1.2400000000000002`}, {2.6999999999999997`, 0.19999999999999996`}, {{
        0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
        0.1834701782931168}}}, {
       2, 3, {-1, 1}, 0.25, 7.173268999999998, {0.5060000000000002, 
        1.2400000000000002`}, {3.1679999999999997`, 0.9449999999999998}, {{
        0.9878681532785122, -0.10947449482237473`}, {-0.10947449482237473`, 
        0.012131846721487824`}}}, {
       2, 1, {1, 1}, 0.25, 8.164835999999998, {0.5060000000000002, 
        1.2400000000000002`}, {2.9, 2.8}, {{0.7019413494649495, 
        0.45740539062878904`}, {0.45740539062878904`, 0.2980586505350505}}}, {
       2, 2, {1, 1}, 0.25, 8.41, {0.5060000000000002, 1.2400000000000002`}, {
        2.5060000000000002`, 3.3400000000000003`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 0.5243757431629014}}}, {
       2, 2, {-1, -1}, 0.25, 8.41, {0.5060000000000002, 
        1.2400000000000002`}, {-1.4939999999999998`, -0.8599999999999999}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       2, 3, {0, 1}, 0.25, 8.638668999999997, {0.5060000000000002, 
        1.2400000000000002`}, {3.268, 2.245}, {{0.8830809468449364, 
        0.32132380578535885`}, {0.32132380578535885`, 0.1169190531550636}}}, {
       2, 1, {-1, -1}, 0.25, 9.548836000000005, {0.5060000000000002, 
        1.2400000000000002`}, {-1.1, -1.4000000000000001`}, {{
        0.2701099903695068, 0.44401642252521667`}, {0.44401642252521667`, 
        0.7298900096304932}}}, {
       2, 3, {1, 1}, 0.25, 13.504068999999998`, {0.5060000000000002, 
        1.2400000000000002`}, {3.368, 3.545}, {{0.6065611779679146, 
        0.4885127586359341}, {0.4885127586359341, 0.3934388220320853}}}}, {{
       3, 1, {1, 0}, 0.25, 0.4434490000000001, {1.3679999999999999`, 
        1.4449999999999998`}, {1., 2.}, {{
        0.3053879927567767, -0.4605715651630739}, {-0.4605715651630739, 
        0.6946120072432233}}}, {
       3, 2, {-1, 1}, 0.25, 1.3768689999999997`, {1.3679999999999999`, 
        1.4449999999999998`}, {2.306, 0.7400000000000002}, {{
        0.6390179457885975, -0.48028534305006504`}, {-0.48028534305006504`, 
        0.36098205421140256`}}}, {
       3, 2, {0, 1}, 0.25, 1.4314690000000008`, {1.3679999999999999`, 
        1.4449999999999998`}, {2.406, 2.04}, {{0.7526841307775438, 
        0.43145188613934354`}, {0.43145188613934354`, 
        0.24731586922245613`}}}, {
       3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3679999999999999`, 
        1.4449999999999998`}, {1.468, 2.745}, {{0.005882352941176479, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588236}}}, {
       3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3679999999999999`, 
        1.4449999999999998`}, {1.2679999999999998`, 0.1449999999999998}, {{
        0.00588235294117648, 0.07647058823529418}, {0.07647058823529418, 
        0.9941176470588234}}}, {
       3, 2, {1, 0}, 0.25, 1.779669, {1.3679999999999999`, 
        1.4449999999999998`}, {0.6060000000000002, 2.54}, {{
        0.32626516503911657`, -0.4688456111782583}, {-0.4688456111782583, 
        0.6737348349608835}}}, {
       3, 1, {0, 1}, 0.25, 2.053649, {1.3679999999999999`, 
        1.4449999999999998`}, {2.8, 1.5}, {{0.9985270121622536, 
        0.03835124697550566}, {0.03835124697550566, 0.001472987837746381}}}, {
       3, 2, {-1, 0}, 0.25, 3.1904689999999984`, {1.3679999999999999`, 
        1.4449999999999998`}, {0.40600000000000025`, -0.05999999999999983}, {{
        0.2900651910424454, 0.45379221675559295`}, {0.45379221675559295`, 
        0.7099348089575547}}}, {
       3, 1, {-1, 1}, 0.25, 3.324248999999999, {1.3679999999999999`, 
        1.4449999999999998`}, {2.6999999999999997`, 0.19999999999999996`}, {{
        0.533721751890427, -0.49886154737506133`}, {-0.49886154737506133`, 
        0.4662782481095731}}}, {
       3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
        1.4449999999999998`}, {-0.43199999999999994`, 1.9449999999999998`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 3, {-1, 1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
        1.4449999999999998`}, {3.1679999999999997`, 0.9449999999999998}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 1, {1, 1}, 0.25, 4.1830490000000005`, {1.3679999999999999`, 
        1.4449999999999998`}, {2.9, 2.8}, {{0.5610797291640619, 
        0.4962552434838798}, {0.4962552434838798, 0.43892027083593804`}}}, {
       3, 3, {0, 1}, 0.25, 4.25, {1.3679999999999999`, 1.4449999999999998`}, {
        3.268, 2.245}, {{0.8494117647058823, 0.35764705882352954`}, {
        0.35764705882352954`, 0.15058823529411774`}}}, {
       3, 3, {0, -1}, 0.25, 4.25, {1.3679999999999999`, 
        1.4449999999999998`}, {-0.532, 0.6449999999999998}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       3, 1, {-1, 0}, 0.25, 4.504648999999999, {1.3679999999999999`, 
        1.4449999999999998`}, {0.8, -0.6000000000000001}, {{
        0.07162023056624386, 0.2578580484295225}, {0.2578580484295225, 
        0.9283797694337562}}}, {
       3, 2, {1, 1}, 0.25, 4.886069000000003, {1.3679999999999999`, 
        1.4449999999999998`}, {2.5060000000000002`, 3.3400000000000003`}, {{
        0.26504824225773316`, 0.4413588919845381}, {0.4413588919845381, 
        0.7349517577422668}}}, {
       3, 1, {1, -1}, 0.25, 5.203848999999999, {1.3679999999999999`, 
        1.4449999999999998`}, {-0.8999999999999998, 1.2}, {{
        0.9884652686886188, 0.10677865556821496`}, {0.10677865556821496`, 
        0.011534731311381241`}}}, {
       3, 2, {1, -1}, 0.25, 7.173268999999998, {1.3679999999999999`, 
        1.4449999999999998`}, {-1.2939999999999996`, 1.7400000000000002`}, {{
        0.9878681532785122, -0.10947449482237473`}, {-0.10947449482237473`, 
        0.012131846721487824`}}}, {
       3, 1, {0, -1}, 0.25, 7.9944489999999995`, {1.3679999999999999`, 
        1.4449999999999998`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7014146941208831, 0.4576375432503228}, {0.4576375432503228, 
        0.2985853058791169}}}, {
       3, 3, {1, 1}, 0.25, 8.41, {1.3679999999999999`, 1.4449999999999998`}, {
        3.368, 3.545}, {{0.4756242568370987, 0.49940546967895366`}, {
        0.49940546967895366`, 0.5243757431629014}}}, {
       3, 3, {-1, -1}, 0.25, 8.41, {1.3679999999999999`, 
        1.4449999999999998`}, {-0.6320000000000001, -0.6550000000000002}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       3, 2, {0, -1}, 0.25, 8.638668999999997, {1.3679999999999999`, 
        1.4449999999999998`}, {-1.3939999999999997`, 0.44000000000000017`}, {{
        0.8830809468449364, 0.3213238057853588}, {0.3213238057853588, 
        0.11691905315506354`}}}, {
       3, 2, {-1, -1}, 0.25, 13.504068999999998`, {1.3679999999999999`, 
        1.4449999999999998`}, {-1.4939999999999998`, -0.8599999999999999}, {{
        0.6065611779679146, 0.4885127586359341}, {0.4885127586359341, 
        0.3934388220320853}}}, {
       3, 1, {-1, -1}, 0.25, 14.185049, {1.3679999999999999`, 
        1.4449999999999998`}, {-1.1, -1.4000000000000001`}, {{
        0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
        0.5706025407455412}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.8170832666604735, 8.555796124624313*^-19], {
       Complex[-0.1551466195070449, -0.02928694300950744], 
       Complex[-0.08034259694988509, -0.00047175640050472513`], 
       Complex[0.8375380350719087, 0.], 
       Complex[0.4666355190468595, -0.0004985640370077093], 
       Complex[-0.20310748883587712`, -0.016903168364508586`], 
       Complex[-0.08814336401214015, -0.009492515485614628]}}, {
      Complex[0.5876992109976588, 1.2550461617911596`*^-17], {
       Complex[0.10265545213610033`, 0.01483166503182088], 
       Complex[-0.21926883764259486`, 0.07211151289527805], 
       Complex[-0.44542014763984, 0.0003393634361678888], 
       Complex[0.837302840746496, 0.], 
       Complex[0.14543310652579094`, -0.026179799756868828`], 
       Complex[-0.11853612578393895`, 0.024509848792435757`]}}, {
      Complex[0.46308591274793803`, 9.388726924165144*^-19], {
       Complex[0.5856965084947664, 0.], 
       Complex[0.37149697558513206`, -0.047522142498678935`], 
       Complex[-0.06211177295084582, -0.014137478667721927`], 
       Complex[0.03996101664200798, 0.020361651823961217`], 
       Complex[-0.5801299379883637, 0.03228994210021736], 
       Complex[-0.4156269741507784, -0.016818315292689935`]}}, {
      Complex[0.33746419191058674`, 9.388615370724266*^-18], {
       Complex[0.38146658921800886`, 0.05867346593832412], 
       Complex[-0.5610351649694442, 0.08522274989831861], 
       Complex[0.007921615183111227, 0.031953466545772934`], 
       Complex[-0.040380406555232076`, 0.002172503405046786], 
       Complex[-0.4043648162058401, 0.10588784082140093`], 
       Complex[0.5929376694372075, 0.]}}, {
      Complex[0.2268905294295152, -1.491178032519196*^-17], {
       Complex[0.4247651258483777, 0.14288020541835011`], 
       Complex[0.5343128700236054, 0.], 
       Complex[0.18821994764138578`, 0.0023787190037572736`], 
       Complex[0.1818142885917423, 0.050085365393960156`], 
       Complex[0.4094698788934038, 0.06660749867566884], 
       Complex[0.49505966937432855`, 0.1596433164618535]}}, {
      Complex[0.09769781217756833, 1.0536612858016284`*^-17], {
       Complex[0.5210314594039757, 0.], 
       Complex[-0.43483974904981604`, 0.0582955431607703], 
       Complex[0.24346672484530527`, -0.016758489256039517`], 
       Complex[-0.20360512711838424`, -0.022543132064595378`], 
       Complex[0.49483735325357797`, -0.085690075171752], 
       Complex[-0.4183948693713216, 
        0.08521176602931739]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
     "], {21.1, 5.2, 20}, 3, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
            "]], 
           Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
            "]], 
           Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
            "]], 
           Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
          "]]}, {
         Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
          1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209, 
          1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 1687, 
          1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
         Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
          1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658, 
          1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 1983, 
          1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
         Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
          1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660, 
          1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 1982, 
          1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
         Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
          1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213, 
          1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 1694, 
          1991, 1293, 1701, 2008, 1318, 690, 1338}], 
         Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
          1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214, 
          1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 1696, 
          1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
         Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
          1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215, 
          1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 1994, 
          1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
         Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
          1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219, 
          1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 1286, 
          2002, 1300, 1312, 2016, 1325, 703, 1342}], 
         Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
          1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220, 
          1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 1290, 
          2003, 1301, 684, 1326, 2026, 1708, 1343}], 
         Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
          1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
          1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700, 
          1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
         Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
          1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223, 
          1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 1298, 
          2009, 1306, 2022, 1705, 1330, 709, 1346}], 
         Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
          1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243, 
          1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 2012, 
          1309, 696, 1332, 2029, 1711, 1347}], 
         Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
          1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225, 
          1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 1308, 
          2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
         Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
          1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904, 
          1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847, 
          1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
         Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
          1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916, 
          1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857, 
          1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
         Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
          1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928, 
          1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 1634, 
          1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
         Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
          1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469, 
          1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 1791, 
          2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
         Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
          1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762, 
          2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 2197, 
          1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
         Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
          2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764, 
          2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 2196, 
          1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
         Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
          1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473, 
          1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 1798, 
          2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
         Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
          1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474, 
          1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 1800, 
          2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
         Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
          1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475, 
          1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 2208, 
          1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
         Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
          1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479, 
          1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 1546, 
          2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
         Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
          1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480, 
          1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 1550, 
          2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
         Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
          1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
          2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804, 
          1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
         Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
          1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483, 
          1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 1558, 
          2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
         Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
          1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503, 
          2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 2226, 
          1569, 1071, 1592, 2243, 1815, 1607}], 
         Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
          1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485, 
          2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 1568, 
          2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
         Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
          2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118, 
          2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061, 
          1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
         Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
          1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130, 
          2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071, 
          1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
         Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
          2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142, 
          2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 1738, 
          2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
         Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 594,
           1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 572, 
          1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 1940, 
          556, 1941, 553, 581}], 
         Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 563,
           1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 544, 
          539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 521, 
          520, 1918, 515, 554}], 
         Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 1820,
           347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 359, 
          1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 374, 
          1837, 375, 377}], 
         Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 1832,
           368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 387, 
          1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 1856, 
          411, 414}], 
         Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 396,
           1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 422, 
          1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 1876, 
          446, 1877, 448, 451}], 
         Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
          1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
          1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 379,
           1823, 417}], 
         Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 433,
           1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 458, 
          459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 474, 
          1893, 475, 477}], 
         Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 465,
           1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 486, 
          487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 505, 
          510, 1914, 511, 514}], 
         Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 496,
           1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 522, 
          524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 542, 
          546, 1936, 548, 551}], 
         Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
          1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
          507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
          1896, 483, 1897, 479, 517}], 
         Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
          1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
          608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
          586, 584, 580, 1938, 618}], 
         Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 663,
           2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 645, 
          1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 622, 
          621, 1979, 616, 654}], 
         Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 597,
           1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 623, 
          1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 643, 
          647, 1997, 649, 577}], 
         Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 2018,
           687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 669, 
          668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 2001, 
          653, 679}], 
         Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 2027,
           706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 2021, 
          693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 1998, 
          702}], 
         Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 969,
           2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 947, 
          2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 2154, 
          931, 2155, 928, 956}], 
         Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 938,
           2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 919, 
          914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 896, 
          895, 2132, 890, 929}], 
         Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 2034,
           722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 734, 
          2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 749, 
          2051, 750, 752}], 
         Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 2046,
           743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 762, 
          2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 2070, 
          786, 789}], 
         Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 771,
           2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 797, 
          2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 2090, 
          821, 2091, 823, 826}], 
         Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
          2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
          2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 754,
           2037, 792}], 
         Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 808,
           2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 833, 
          834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 849, 
          2107, 850, 852}], 
         Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 840,
           2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 861, 
          862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 880, 
          885, 2128, 886, 889}], 
         Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 871,
           2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 897, 
          899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 917, 
          921, 2150, 923, 926}], 
         Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
          2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
          882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
          2110, 858, 2111, 854, 892}], 
         Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
          1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 985, 
          2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 965, 
          2174, 961, 959, 955, 2152, 993}], 
         Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
          1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026, 
          1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 1003, 
          2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
         Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 972,
           2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 998, 
          2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 2207, 
          1018, 1022, 2211, 1024, 952}], 
         Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
          1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224, 
          1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 1035, 
          1032, 2214, 1031, 2215, 1028, 1054}], 
         Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
          1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237, 
          1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 1057, 
          2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
HHyWGO3jlMwBmVtOdo3HKZDRF+Nr2B2ON3tEjcM2pqFAe4+2CMl37ls+8R1D
1rj78naDQrsEjJT6YM5H4tDy/uYyxcZyON0q0cKpngXHeVYeXqRFAadWf9B5
W6Kfz/hkvF6eBSuHf4Yf1yE4/OBvHxbmm/3twyK7D2tG93lhJd3nRXaf90XO
oQ31l8pgU/cCkXe1DHjzRvia4x0KrlUZKQ0olYE4tZhr2D0VZLZ7vKy5T3CM
7iNDf+ffPjLcYvWR8+k+NYTQfWpg96l5xzefiusvBoG59U5jiVHQrzjauyma
gstGk9Y112YRPb1hu3OBH4Tsmqy1jNznWboPDrvpPjiw++AU3WcHDbrPDsas
PvukSyohi+MYsG6kdI/wez8INrK0etpDwdF4r5O9B5LhRN6cXdEBFuh4fqXe
o0EKqug+PljRfXxg9/Fn03MCsJGeEwD2nMD1lWntHMIe0Bskx2P/0h0FFoTm
BJL4+XPkw+36qP24+v3ayTe4QvDAPSmL37/J36XnGWA9Pc8A7HkG7zoTNTXu
BKQ2iTOTvhD9uINfBgmefKTnIuA+PRcB7LmIWHqOAriO/Z2jAPYchdyaublf
p9WA7JHLnGmzEoBH4dIuv3UEnxNVc4R3PoMlIqf0bu6OBINHy4oaFClYc0fo
/rLEclg2YvJU+pk5CC2iilVuEXyu+9Juq1gG32bv6jKwtkPLU/lfv/qSuA19
/3vhnUyoXqf3mNEcgeXaI57WrylYf8Uu0f9dKhQr7D86eicV8+6qZpcSnp+g
mP3omWsM8Ck+4G3sjMOA7jcSe/qJvivmytz/5BGmHkv6cD0oFe1llp7Q/Wdu
eZuQ2SPHaIzt5fqzWbAQrxVPFdMtJHWz3tvb1z8I32T+9hCZmgpd+0IFkwg+
W7aot5/echeuyO6aPG1uATxcEmGLzwg+N3AXLb9jitNcPypcnZYDKpyW0unk
PB4zHs8UfZmKHNzpG4rehKPH1l1K/SQ+Vz1Y27hc8g74K+/pfna8GE5vgDBZ
wkNGloWFaZa6QOcaw+xvPSWgPKZVoBBJePj3tqsHXD0wsViG8TW+GNZYhsRt
SiHxVlEoakT03sbwgiONb4tgnvHj61OIny0ihZMKPjFwysPTydUjmSBte6nj
WiUFP/g6c0ZlsnF9eWO81IMUyBTIiJ9Ozm+qoNQ2olOAHK1rJTRE3MDRRjN0
mNjbHRVer6iL6Lz18/N35YYYVr3ARbKEgrm5+uvf2hbi9Hyzj31fvdH/ZLxE
Zim5B5MLLmZ7A/GJ+G0qlisJoVO34g+T8AfvLEqkPAgWcrpLKgVnwY6OyXMa
yHtUeXWrRj0yGCf3/6iKP5UC5m0fG93/2QsoXjxwen0hng8w5z8WEICn8/0f
LSG8zvya8/IsK2/gtj3bqaaZDwfGpl6rrSb4LPbcuHyVN+w0+DW0j6cImjV2
pvoTvXzBdLmSvGEuhvbHjD8teoJTxY5bHCN10I7re7VIdw7WHAxOHNYJwdkH
yjfWPP9Hjwjitfq7cODj7ecLr+XBO/PHLy8R+5INJ/bCxhvI3RhnGmmbC2t7
xefVkrr5ybZq++izXDw1Z/6jq7cjUS2nmFlIzvN7Pn9TlUkuCvt4GB6FKOwx
4x26WkPB3vTMoVbvILTPZDw825IN17ma3wk0U/Dys4iz8JJITLeOtolqSYd4
x1CBBqJDfXZO7RYsy8LVXXr7eXZE45Hvx1VFCJ6/LVnL9DqThcGyWYHTw6Nx
bvvIxVHy+xKGkBDPjVS0bn/18K1SPKgpJ3Nt6yL8Nq5l25+edNxw5vDzlE4v
2BHp2PD5nzmNngqrIIVMbOVRnHnnVQzOXCD2R/4VBduGnlgmFGZgca24aJ5o
DLZPuzu2k7yv6cevOlcXpeGhGekeNevvwLGlObyqBN8+rDyy6vb6NPTNb573
J/QKHmmwS+ghdXZmwDW1O1Qaep6T+Rm7NxbltzvK8JPn0vls1c03Pwc/vy9U
1TCJwoMDO92yyT2rt0utKzEn+eki+nn5bjs8K2IYZjNAQXXHgE4LIxvfHpzv
6uwShfLlTSXV5H3NL3u1Rs47Fl5dnbXbS5ABN5wrezeS593G2n9Zy9p/yWLN
rzJiWu8bxjrCCn1bnz2KDGi3mb3XkuS103xrnX0difiOr+JX6XJnXCk0w0+B
1KMzokE74wQjILb9MvPCjhyQJ1S9gPzdLSz/Gyb45ysO7uHq8oYrhZt1X+9m
AHreyNlFdJzkv5zHyUte1isiBsu2xvKLn3iE7cVVl9W+ER47kuUmSu7r3f00
c2ffAPyQLlQrT+ovV80mWx71R7ACD7688iEVNIq5V1aS8+9h7fWcnrDX08Yf
xXvg9TXUgp2e1y1TYPKGYsFeko9yLHudCfYDf3ZUD1vFYfcL6Tax7BAMEJHT
jCV1Ssp4U2lXXxR2DQae2346FE3UI87PI+c5uKIomSlkhTmBc10PiaRAyP4G
UXuKvHfWPpHMhH2iR/6XrjT1B+B2cb+yb3si4KiF+mr8TvgGy37LBPvIcN9p
VY5hOPS9u/BUezgq+ylUmRNel3pKfegPTygyQrKmnouPwMpI4y3l5HfuP4vC
Q3p90fy2WUeqdzik48auMqILlrP2mLay9pgiWHtMxufUNn39445zrH6eGh/x
hHVcUfNVRv9rv3mC/fJdQ1uWSIVi9sMf+9Z/isO37juBh9xPcfeuoOBHj3F8
qecnuch4lNM+9TGE/H7Lu/79qlwPvDMjYuh5vTvMkeN0tyf+T7H2p+5P2J+S
++rgk1d8B0+Ou3o5MW2g58P72rvjJF9Y9ncn2Ne371g13SgCjQ5Q+yI3J+IK
vyqFlSRfqrweu428iMEeabvLe2enoqTFjIqVRNdH8IutwiFNHOhZW+2+ygq+
SV+IbiT+F7L2th6y9rbOsObM1yl2nXNNTca+3YkhxctTsEFYWnMy0VNaliMG
bisy4M2UD6uf/A4FIds1PL8IH04bGMfRZwmwP2o45HZXCujsaQ5a3/WfuXHY
MGFPbUuD9afVG52BOX319KYeTdihu6BSmpxnEes8jhPOY2qp4Vl8LgMMBt7D
ZYso2F56uM2E+BHgf5j8cHc6WBj8iblSEAkqt2U+vyfn2W908HLYTyeI5A46
+kHDAG9P01yxmfg/wNpHe8zaR+NnzdsfOT34a3CrI4z4m6rW9rujkuWJ8cNj
/7W3m2B/KaOwgYszE0buWI5udYuFbaUAegQ/c0av+jUUZcAdU4dd13pjQO2Q
rmgY4QPeuWYvX15xh0fzjjuvSvTEHCr7yCUSDzNZe3DSE/bg1vEx9XQCHwOn
+KZxw1WBmGBft4xB9DsPy15+gv1DlbuerxblQNmk6aoyzvFgIVboH0Lqzjse
W73sVznAYAZf/N0WB5zRaiENz/7RX5OFBGf7w8WzM3zGYiIwqzHAo4PkozZr
/27vhP27U5NNVkv4+YGhcLUFY3ISLhQ31XKm/ms/cV/PfiH4JC7Kg008prOu
PIiGoQrZHQeJTtz+QkXH2z0fmi8qGHZMj4L9G7VnSj2lwGT7b9EVL1ygbmrn
172WKbjCrc1zDck7f9benxxr74/jI733FyWc71FRbwYrpGdXilQxUE115Ohz
grc/Bel9wBkT9gHtG144zBXOh/oBz9SL1yLAQ/Rbbw3Ry8KB0aMD9QUwkvkl
d/JIOCy+6HnydzE555XxWwEDDnjTMJxS+paGC457WN/9SME8of/f/8xc5U3e
m/xRaa6rdkp4Fs5SXyFuS3TEKpY9zwR7tTMak7atQViEhjZrnMPg4poMjmTC
Wy6mBDspCgZj9q3rD1Ov5OBtubCKDsI3RFn7jNUT9hlzlnDwfJvEgAoP4UCt
11EgLPQyyJ7UlxfyjlJVuZngYbz5kPuvYMh/JjXeRfKlMcrzruDZQlgUNFw0
dcQOzLILGE/IeZyHRNTUL6TCpqL2wATDRNijp8B1m9zzlcwlvMEeDDg8aDw5
8lsyuKc7LT9Pnouf46CY5MlCyLTeW6dx+AYoLXaxmllOdBbD6Og0U4ScP1tb
/QKNoVGx9tU3cp+DeyaV6xZnwaolBSX3uJJh9YD+C4daUjd5H1CMkRx42hKb
dPJcCjTwf1auJ3yv8PZGmQpSd0MVU2IlzTwxdY7H4iDCl1qmXNdctCwb7k9J
kVd+HoLnZAPWriV5t7FffPWDyhxYa7hJ70FIGnjvb1vKT/h8ZNKOSW1LiuCr
QOey25ZJ8Np04KwS4c+Rt6bVzuCLhc1rRVccbULM4nobeZ/o6zBTgStbFgXC
HNtzh4IWF6HB3csPefMp0OuqzFW5XwRqJ+93muxKgAjOGWsGkigInxTLGzWp
GHgYSt/Md8XDjowytej4f3jg9AyR849AQuRd0rLGIpRjPO0pzSL6Lt1OTzDL
Bv5Ey1TZ/SzGqN9rwiKIH43u5GvHPYtBl+fHjAr+JFDizzVcRHRroj3jW/LM
UrAyPc9YS4XD9wd53fbBhP/0XehuX+AKV3Osve2uFeOlL7YJTgwKhBTePRwt
8AVdkxsKCz3yUed9yZ5Aku9812429tuUwtr1rx5XjIRBjmPkttIACmYFHFW0
euEB56Reqsw/U4i1Kgu0ssn9f4/YPDfS1xc6FI5M7WSmQVJLb/oQqSMnWPuM
kRP2GR/TegeYXH/1DrD1zga75LchO0ohwddSXdndC069mGR4MJSCmgumcp5O
j+B4ZssF+750ENk3FvkPL5rE2os8MWEv8tbitwe32HrDKX7xqj3zSB34maN0
gfDYaNa+ZPqEfcnW9cafqg8UgfwZx/3t2x5jmLYt//xc4kd64I+vZB5Max7Z
NEsmBW+/WfJ8HonPuSul4hS148BKoLbO6Xw6dMuqV80m+RLG8p82wb965w6P
P0WxYPVrdmIC5MDynCta4SSew1n2GRPslyjNbQrkyoLwH32MXJ50rK5QrL9P
8q5g8uncgUdJQGkcmVxXX4yHpo59f0Dup33SHp9T4XGwYfbx2/uX5IFF6+95
z/+Zf15M74EeZe2BLmHtXfJV3kmqlkyB543SEYU78mCZ9vyXo0UUcDTT+6Fh
E/ZDy9XGA4+ujIcm1xO6Ev6luFC290WRJwWbm/uE8s3CYVmz792y7FJ0Eue2
2PTPv0/VNqn8flcOiAxtTA1MSofYXI8c/jziv4X2HzrB/8YmFxVO3zy4LvY2
90hTJrgOrbM1J+e88y/23QuWWll6REGx6OU1r3iKsf9R6fzvJC8STEBzfGks
cF/lvxiaXoSmwTXUKPGzNjVywVhtPji6OZ89cysdJEY3eN5PpSCbtffaM2Hv
9duvP43UkyI43jkcUJkdC7sVe+zWExwoYtl3T7BXPimWFnczhdRxy0Fb2UK8
ak/KagaJn1N9G0SYqVAgW3Un8ncOvlX/IXqDxI9Yisrb6hGEY9HFb25zBUDf
R33rtQXsfdsk1nyM43/mZDQVPilp/UqFwFe6oRyyOaiR3cNXS+LcVG+1PbRn
Y7U+H0P9XBas2z0jsJHg0l1aX4Mfra+Bra81WPkYPiEfp9asWehQVgjjL3Z+
Uti2Bxx3CAgHk7xWYe35vp2w5yv6rbnWqzYb118R+aBjlw0Vctkqj9OIfvQx
yI5vyEIhh2VnHiZlA3Pw7mqRf/ZZjsW3OVVmQFuaYpu8MwMdpRdtTyJ8Q5vl
/+ME/ze2imbdmpoFzzLuVpx8m46T+sJMzcnzctTS+8WRE/aLlQq1rEUEElHo
wO2m4d0I/LecfqmR+x888vW47JJUXC53xNf9YQnEHtp4i9+XArd7jfpayYmw
1mOJq9TCYhz8uhrrY4j/+v9/f7ngwY2Dix7EwPDMhTyPS0txdrrMWxkvEp8s
+9gJ9mPjY1Wbo1NQyXF9joJFKazg90iXdKPA4OW2SzwP49Fw98JAfpdSOL04
NaGD5FG4Wson0cNJsP/lpJhFiaWoPa127hJ3CjhZe9PHWXvT7PzddZ55Yodk
MgwPhNffLS7BY5necRIk74pZ+9RFE/apr9DPi6vp5wX2856j7xmb6HsG9j03
b70U2P85FXLvq9SutCrASrc3/bvJfZax/OdP8F9Lv3dYRb93ZL/3KpZ97gT7
H6p/4wHf0fEA7Hj4UP03DjG54m8cIjsOJeh4Awk63pAdb3ysPfETE/bEWXkB
mXReIDsvFv2L/Ww6H1GWzkfsZ+Vj5lT7sxLaWXB651xmoXEm3vSRUNpMeILV
v+yhu9L5joV0vgM731NpP2hB+wG2n080zqAJjTPIxpkzNJ7gZRpPwIyFJ4nT
Ro8xAyJQZ8Uh5c9KxWDQoDFLjODeAhrf0JnGN9zEwrdFNK7ifRpXkY2rj9fB
VsMFIfgIPDt59Eqh32KkUf8xwQEOSXOjjjiUd4+eV9NUCAWc14PGswn++6j4
yMblYJx8t7H8ugxc4JvYef+ff2dGQlp2iRQDbQROHTQZzsHzSk7NX0kd+Xj1
6tyFe5LweKPlxScni8H+5PL+9kjCQ1YMG0YkJ+PV0IApikYIswzDvsgRHiJw
BmOlo5Mw7JP2dpmGHKSGfqhYEb596w3zaGRZIv76kLfm6PcsjHhe6bG8jvBV
lzb58eNZ+EKw8NhKtXTQsTN17CHv8Qpdr1GQrtfArtevhf/Wa7xF12t8z6rX
q2iegHo0T0A2T2ih+QCa0XwA2HxAguYnmE/zE2Tzk/M0P0FNmp8gm5+E07wI
22hehGxetJjmV7ia5lfI5lcNNA/HVJqHI5uHs/ep90zYp04VlJpyONcbMwyW
cwmtKQD7z1b3mkl+ybH20Dsm7KGb0nUEY+k6AidYdeTdlD8ZshdLUdXppPSN
jREoxh3Z8pScR/ycxLewmQ9xAZZ07ysqhsRDe8+uI/GpxPLfNXHPve9L5PGy
3XB52EFwbmcZHPeXn67qQcFpln33BPtpyk8NJg0V4x7Zfu/Vp5KwRfuXlUMI
4XUuli/+j64vD6vp+/5HCKHQYEjGDBVlKvMqSYlSlISQKcrUoJDQIBHRXJrn
ebjN82pSaZ4VqVBEdCsNKPw259zv5/c+z+Pf+5zn3H3W3nvttV5rr9dLUjUP
uUs9zCJXRmPBFhWfncRf8dtop5SH2GOk2UjnFbsC2HLTxWCvHxvW0/31Coz+
esUUC7fi+WGoXuevHrk8E+b41UXrkrxSln5+K+N5mcwnzmcP5OKMI54tB6Ni
kGvVyKA02S9StbpCS5IzcZlqvcuZyQk43D9x4AwZ/9h7X7aZnonCRb9vCnxt
TwUNM64Lt6vZ4EX39QOjrz80lcu0fkEMLhYPdm58nAKO3WVOlbVkX9D9/k2M
fn/lQts7e1+ko3lVaJDj9gRcEuDjsJGs533sUeGqpDS08+gJDMuJw9iGgdHP
f3icXkunKuakY19qzl1rE3e4l5vspFbPhrn0+00Y778ZGztw5zri3pk/Akf6
DqDytTshL8j7RejnVRnPu6h1m7ME0rBjqBjFhONQzlF8+Crx23xvucT5PySg
tay75Y4J8XjyTePp+8QfLqPyPvSm8j7k5H2aNI/BQ5rHgIOTvKLyTfzh9Tff
RE6+uZjmN3Cn+Q04OI8llYfidioPRU4eGkfluVhF5bnIyXOPU3k0LqTyaOTk
0Uvo90cx3p9P4VRI41TIwam4l04PmSHtBYYfzWr2bUqDsjXGWw42sUGeyo/w
PJUfASc/Eqf5ImoYfBHaatOUXn/OwT11mm83HgnG5Rfv6pn/f+OJYYwH/D9J
VtQYwtH88Y7mx1NgnsOZz87tbLhdK8b7uMMaLe6fG10bkQi+ATyl+h/Y8KI/
yDNAOhv3CcDzndND0HRIP86K7HcFmhfiJ80L8YzmhVjn0S2mvDMDM+VepY5R
C8PFET5LNpH53UE/P3bbf59/49F/956WFQ4l1Eh2n4mB90NR75f3s+Gulu+x
3IVuOGxkl3p5WQQ0ZY/hXUuel3M6ojw9JwM9Zg0pXBobgaExlqnaZN0W0nwU
PQw+ijtnr7LG9KVirvbI1bkBEWgcsnB+SQ2Jw//x/BbR5Ufrw33xwKiCYpZj
IJT3Gl1hD7Fh6pdm5eNTA7A8Y4/K5hd+4Lrc0uTWMNkvWg8cWl1S8Gd5+upn
XREo/N7/1b0GEhfRPBhZDB6M0iQ5VlZjKj5+87LxuUckLrsYkL6HjKea5sfo
YfBjRKgUakz0eoJXu90OVY51g+YIl0run2zIpPBDbKfwQ+DghzePcLnVfEjB
XN9F/JXBEXikWauhhuzfqn/wb1wwam96EZqEm4dYBXOSQrB08sZnH1+TfJl+
/hPjeV8K58QFFM4JHJzTgcJXUWjqX3wVOfiqCYWj4nkKR0UOjqpI836spXk/
OHWKYxTei28ovBc5eO8u+nlJxvPOc/7izLC66y/OjByc+TdVf8FlVP0FOfWX
vTGyLaYqkTDv4jPPd9wseHEgpGQcec8NCgeDCgoHAw4Oxq/6cYk4tyUkT93p
2xBxGyXsc5uukfdrHhV7PpQWCF5HJA8KPY2DKy9SVneQ96vMWtrY9CMQ2gfj
7DR+hIP4haQSr14S51yZ2CK5xgOeCfh4ZX9+gM7RWjpjyTxeEM+7pJPlBNHK
dz6uX+aHjtEiio0/2HDQOmie5ucgkC2bbf90dzjoKV3i+lPHFxDZ2nRIxg+G
N0V9MzANgZuP7wv8JOtqsSNKf6t5Ap8Pch3g3RWAj5qKp2wh7+FtMlO5rOgG
Obt/xHk+CMA1v7oWyn5nQ2XiXk0boQBItD4mZhIRDCF9qxvzyHsWUfUXoOsv
wKm/9M6cLm268Ql0XDcNbXCIx7ykhlk1ZL/4beh2V9WyhaDbr25kd8XjM5W0
rX7k92qqvgMNVH0HOPWdSqreBNVUvQk49aZO37B59h+c0PEyd87CNyw8flmD
5UHsqUjVufAKVedCTp3rBlXPgkiqngWcepYlVV+DdKq+Bpz62kWqvoZ+VH0N
OfW1eVRdD5uouh5y6np7qfogHKbqg8CpD26l6sgwkaojI6eO/MLm+0GV5iSQ
vK5cmZ0VDlUXlqhJkXX+3u2x5entMZC4xD+K/1ocxPQPfxMm6231YeEt33iT
wGef+d0TaeYgsjSx2+c92S+8pl8cViaD5Yd15ePsIqDNsm1jFjkHNb/mLZBq
TQanG6ueyN0Kh2Om2o3B5Ly4mPauWzsoCcLbFWebypui1txfn6T/9HMJm719
kZkI6ksFi1yPOuKbu8L+huT9hVQdFj5RdVjg1GFbqDovxFN1XuDUeV3jTRPE
D8bBo555bhO3huOp2ZvOGZJzoXf/5NHx6jEw4bXvjbeqLPxupl1V8oePkaoj
gzhVRwZOHbmfqlPDdKpODZw69fceyaExr73gVPj10xk6mbhoQEx4HInP149c
gl1lD+HSluPjLkSkY8W5Wu/PxK+2U3VwUKXq4MCpg1tRdXbIperswKmz52fX
Thn0NUVRc88zLaoZeEnHLegOGc/g9HclMp2OKJaw22DL1xycPuSmG5rPhhNU
HR/uUnV84NTxeah7AgDUPQHg3BMYs+9D4b1vzmgQmHJ/zJVsTL4sKydE4ufN
n13n2u30wsUCxm3OyWm4NytrQ0MjGyZT9xngS+bf+wzAuc8gV+mivnxqKgwm
C6VuagyGhb/cN3eTeblD3YsASepeBHDuRVyk7lFARfPfexTIuUchqntyc5JS
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.49488850049789845`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 0.24, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
     0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
     0.25, {3, 3, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
    1, $CellContext`m2Sel$$ = 3, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$19800, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    3, $CellContext`omegaIndex$$ = 
    3, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {21.1, 5.2, 20}, "numberOfMasses" -> 3, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
      0.8164016736401674, 0.22334728033472817`}, {0.6908368200836819, 
      0.6836401673640167}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.5060000000000002, 
      1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}}, 
     "pointsDataTable" -> CompressedData["
1:eJw9UE1IlGEQ/nZddf1YxIN4EJGCCKEoYusgKjPgQY0k1i4R0kHKOgSJRYjs
QUFJEJEOktqhJTEQQhbqoBGNSIein0Nlaj/YssvKppnrurvKQus7M7sODMPM
877PPPMc7bjddr3AsizOUpNOk2e9HAmanOAoXOiUiMINqf/p4wcOFyoep3xV
PJXrY6A8YZpQHhyX+g6yEv8oIP18jm8T8nu0FqElsQfvFSev6gKdb+eqhTov
xvw/3RcjhQ915nhtrDz961hR/z41h3rLZ5scC15ux77AYrKmfXQxSd8/pS+F
px34xzdXPbgRor6xxuFb62ka2JABTXKbWYWAaXxzs/T00ZsjwW4nBpuYcB2i
mZn459YUnWS2mp9gLfXEjp/5DStTXQ32cgLu3Hzw1w8F2MZsPgsvdJRdrn2x
S4pnwOt+VnXlWhgUdyGeu/qyxePCedln4/O3914/rkyQ4m7srFu7OPIwCoqX
ortfBNN5uS9L4WkWuAN+04V6d4ivbRx24yt5/42+trKACO3J+RHyAy/chSE1
BMwx5kEJ1tvLRuEWBMTAED1huVMRqFhlw5IgdNVpMOLMAxtTwufAFfHzByme
hWA3G5AGxQuR3ZyJ2yh2tXvwrvizRIqXYIvHeeJ+xT6w+vJTZXgA411MIQ==

      "], "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {
    0., -0.45999999999999996`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    21.1, 5.2, 20}, $CellContext`rawNumberOfMasses$$ = 
    3, $CellContext`scale$$ = 0.2, $CellContext`tabNumber$$ = 
    1, $CellContext`tauSliderValue$$ = 9, $CellContext`tick$$ = 
    True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {
    0.5060000000000002, 1.2400000000000002`}, {1.3679999999999999`, 
    1.4449999999999998`}}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {},
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       TabView[{"dynamics" -> Column[{
            Dynamic[
             Row[{
               OverVector["q"], " = ", 
               
               Module[{$CellContext`qm$}, $CellContext`qm$ = 
                 ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                Slider2D[
                  
                  Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False, 
                  ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
               " 2 \[Pi] ", 
               Dynamic[
                NumberForm[
                 MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
            Row[{
              Text["time, normalized to one period, t/T = "], 
              Dynamic[
               
               N[($CellContext`tauSliderValue$$ - 
                 1)/$CellContext`dynMeshSize$$]]}], 
            Row[{
              Dynamic[
               Manipulator[
                
                Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {
                1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                ContinuousAction -> True, Appearance -> "Open", 
                AppearanceElements -> {
                 "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                  "FasterSlowerButtons", "DirectionButton"}]]}], 
            Row[{
              Text["oscillation scale factor:"]}], 
            Row[{" " Manipulator[
                
                Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], 
              Dynamic[
               NumberForm[$CellContext`scale$$, {3, 2}]]}], 
            Row[{
              Text["Angular frequency \[Omega](q), selection:"], 
              Dynamic[
               SetterBar[
                
                Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = \
#; $CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
         "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
         Column[{
            Row[{
              Text["number of mesh intervals "], 
              Manipulator[
               
               Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                   EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {2,
                30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[$CellContext`freqMeshSize$$]}], 
            LocatorPane[
             Dynamic[$CellContext`qPlaneLoc$$], 
             Dynamic[
              (Graphics[{
                Lighter[Gray], 
                Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], 
                   Part[#, 2]}, {-Part[#, 1], 
                   Part[#, 2]}}], Black, 
                Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                   Part[#, 1]}, {-Part[#, 2], 
                   Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
               ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
             ContinuousAction -> False]}], "parameters" -> Grid[{{
             Row[{
               Text["mass: "], 
               Dynamic[
                If[$CellContext`rawNumberOfMasses$$ > 1, 
                 SetterBar[
                  
                  Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   Range[$CellContext`rawNumberOfMasses$$]]], 
                 $CellContext`massLabel[1]]]}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                 Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                  ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {0.25, 
                 Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
             Text["coupling to neighbouring: "], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 1, 
               SetterBar[
                
                Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 Range[$CellContext`rawNumberOfMasses$$]]], 
               $CellContext`massLabel[1]]]}, {
             Row[{
               Text["horizontal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 1], FontColor -> RGBColor[
                  Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
               OverVector["a"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
             Row[{
               Text["vertical: "], 
               Style[
                Subscript[
                 Style["k", Italic], 2], FontColor -> RGBColor[0, 
                  Rational[2, 3], 0]], " || ", 
               OverVector["b"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 3], FontColor -> 
                RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
               " || (", 
               OverVector["b"], " + ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 4], FontColor -> RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], " || (", 
               OverVector["b"], " - ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Text["coupling from "], 
                 Dynamic[
                  $CellContext`massLabel[$CellContext`m1Sel$$]], 
                 Text[" to: "]}]]], 
             Dynamic[
              Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]], 
               Blank[], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  DeleteCases[
                   
                   Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 $CellContext`kLable[5], ": "}]]], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Dynamic[
                  Manipulator[
                   
                   Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}]], " ", 
                 Dynamic[
                  NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
        Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], ImageSize -> {250, 350}]],
       Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], True}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {0., -0.45999999999999996`}}, 0}, {{
       Hold[$CellContext`tauSliderValue$$], 5}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 3}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 12}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$19800, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.8170832666604735, 8.555796124624313*^-19], {
          Complex[-0.1551466195070449, -0.02928694300950744], 
          Complex[-0.08034259694988509, -0.00047175640050472513`], 
          Complex[0.8375380350719087, 0.], 
          Complex[0.4666355190468595, -0.0004985640370077093], 
          Complex[-0.20310748883587712`, -0.016903168364508586`], 
          Complex[-0.08814336401214015, -0.009492515485614628]}}, {
         Complex[0.5876992109976588, 1.2550461617911596`*^-17], {
          Complex[0.10265545213610033`, 0.01483166503182088], 
          Complex[-0.21926883764259486`, 0.07211151289527805], 
          Complex[-0.44542014763984, 0.0003393634361678888], 
          Complex[0.837302840746496, 0.], 
          Complex[0.14543310652579094`, -0.026179799756868828`], 
          Complex[-0.11853612578393895`, 0.024509848792435757`]}}, {
         Complex[0.46308591274793803`, 9.388726924165144*^-19], {
          Complex[0.5856965084947664, 0.], 
          Complex[0.37149697558513206`, -0.047522142498678935`], 
          Complex[-0.06211177295084582, -0.014137478667721927`], 
          Complex[0.03996101664200798, 0.020361651823961217`], 
          Complex[-0.5801299379883637, 0.03228994210021736], 
          Complex[-0.4156269741507784, -0.016818315292689935`]}}, {
         Complex[0.33746419191058674`, 9.388615370724266*^-18], {
          Complex[0.38146658921800886`, 0.05867346593832412], 
          Complex[-0.5610351649694442, 0.08522274989831861], 
          Complex[0.007921615183111227, 0.031953466545772934`], 
          Complex[-0.040380406555232076`, 0.002172503405046786], 
          Complex[-0.4043648162058401, 0.10588784082140093`], 
          Complex[0.5929376694372075, 0.]}}, {
         Complex[0.2268905294295152, -1.491178032519196*^-17], {
          Complex[0.4247651258483777, 0.14288020541835011`], 
          Complex[0.5343128700236054, 0.], 
          Complex[0.18821994764138578`, 0.0023787190037572736`], 
          Complex[0.1818142885917423, 0.050085365393960156`], 
          Complex[0.4094698788934038, 0.06660749867566884], 
          Complex[0.49505966937432855`, 0.1596433164618535]}}, {
         Complex[0.09769781217756833, 1.0536612858016284`*^-17], {
          Complex[0.5210314594039757, 0.], 
          Complex[-0.43483974904981604`, 0.0582955431607703], 
          Complex[0.24346672484530527`, -0.016758489256039517`], 
          Complex[-0.20360512711838424`, -0.022543132064595378`], 
          Complex[0.49483735325357797`, -0.085690075171752], 
          Complex[-0.4183948693713216, 0.08521176602931739]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
        "], {21.1, 5.2, 20}, 3, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
               "]], 
              Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
               "]], 
              Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
               "]], 
              Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
             "]]}, {
            
            Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
             1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209,
              1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 
             1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
            
            Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
             1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658,
              1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 
             1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
            
            Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
             1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660,
              1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 
             1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
            
            Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
             1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213,
              1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 
             1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
            
            Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
             1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214,
              1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 
             1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
            
            Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
             1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215,
              1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 
             1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
            
            Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
             1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219,
              1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 
             1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
            
            Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
             1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220,
              1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 
             1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
            
            Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
             1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
             1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700,
              1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
            
            Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
             1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223,
              1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 
             1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
            
            Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
             1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243,
              1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 
             2012, 1309, 696, 1332, 2029, 1711, 1347}], 
            
            Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
             1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225,
              1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 
             1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
            
            Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
             1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904,
              1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847,
              1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
            
            Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
             1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916,
              1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857,
              1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
            
            Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
             1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928,
              1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 
             1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
            
            Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
             1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469,
              1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 
             1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
            Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
             1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762,
              2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 
             2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
            
            Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
             2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764,
              2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 
             2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
            
            Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
             1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473,
              1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 
             1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
            
            Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
             1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474,
              1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 
             1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
            
            Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
             1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475,
              1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 
             2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
            
            Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
             1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479,
              1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 
             1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
            
            Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
             1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480,
              1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 
             1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
            
            Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
             1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
             2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804,
              1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
            
            Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
             1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483,
              1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 
             1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
            
            Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
             1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503,
              2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 
             2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
            
            Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
             1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485,
              2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 
             1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
            
            Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
             2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118,
              2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061,
              1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
            
            Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
             1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130,
              2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071,
              1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
            
            Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
             2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142,
              2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 
             1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
            
            Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 
             594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 
             572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 
             1940, 556, 1941, 553, 581}], 
            
            Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 
             563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 
             544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 
             521, 520, 1918, 515, 554}], 
            
            Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
             1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 
             359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 
             374, 1837, 375, 377}], 
            
            Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
             1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 
             387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 
             1856, 411, 414}], 
            
            Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 
             396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 
             422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 
             1876, 446, 1877, 448, 451}], 
            
            Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
             1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
             1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 
             379, 1823, 417}], 
            
            Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 
             433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 
             458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 
             474, 1893, 475, 477}], 
            
            Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 
             465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 
             486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 
             505, 510, 1914, 511, 514}], 
            
            Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 
             496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 
             522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 
             542, 546, 1936, 548, 551}], 
            
            Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
             1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
             507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
             1896, 483, 1897, 479, 517}], 
            
            Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
             1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
             608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
             586, 584, 580, 1938, 618}], 
            
            Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 
             663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 
             645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 
             622, 621, 1979, 616, 654}], 
            
            Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 
             597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 
             623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 
             643, 647, 1997, 649, 577}], 
            
            Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
             2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 
             669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 
             2001, 653, 679}], 
            
            Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
             2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 
             2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 
             1998, 702}], 
            
            Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 
             969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 
             947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 
             2154, 931, 2155, 928, 956}], 
            
            Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 
             938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 
             919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 
             896, 895, 2132, 890, 929}], 
            
            Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
             2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 
             734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 
             749, 2051, 750, 752}], 
            
            Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
             2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 
             762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 
             2070, 786, 789}], 
            
            Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 
             771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 
             797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 
             2090, 821, 2091, 823, 826}], 
            
            Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
             2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
             2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 
             754, 2037, 792}], 
            
            Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 
             808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 
             833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 
             849, 2107, 850, 852}], 
            
            Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 
             840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 
             861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 
             880, 885, 2128, 886, 889}], 
            
            Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 
             871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 
             897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 
             917, 921, 2150, 923, 926}], 
            
            Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
             2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
             882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
             2110, 858, 2111, 854, 892}], 
            
            Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
             1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 
             985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 
             965, 2174, 961, 959, 955, 2152, 993}], 
            
            Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
             1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026,
              1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 
             1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
            
            Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 
             972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 
             998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 
             2207, 1018, 1022, 2211, 1024, 952}], 
            
            Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
             1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224,
              1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 
             1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
            
            Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
             1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237,
              1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 
             1057, 2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1:eJx0XHk0Vm331iAqzdIkpKhokKSibA0aSEkUkpQKIRVJpEEZyph5SuZ5fMzj
NmXImCRRhlQy9BzRqPC7387zfN/6rN/7/vOu9ay9tvvcZ+9rX9fZe7firKnq
+ckcHBxl3BwcU8j/qVW8715IpILV1yABRf5icPGByOfhFHBf4crXXZ0IXLnX
zji3loDl8inOW/wpaLxn9+LxVl8sfqPeJ3OtCG4aabZ35lBwve5El1ZzEZba
p+9U6UqF6ceCE8IiKLjXn9enb/QMZa76C1dtvg2LHZx5tY9QcE5iWL+mqgE5
57uvklGIxt/Hm8NOtjBBsMThAAezEafwnJcMmpaHIknKuxzPMCH4Snwlx45G
XJtxxH5zaTHGhozcR00m+P4OeFZYWYvBfFqGjbOLEGws5nu9YQKnsfBO6all
KPTHVf3GzzT8cyZTe/AuBSIOm9dtf8nAxHCVRXadj1DXu/yH8ycKustEr/Xp
ucG1SSWL1bbEQ4/HnukWwxR4LVyikTwjBZgP3y2VNQoHzTt34sZ6KZgSHObQ
8TAOml5vyrCVLIS5DzYszsqj4OrJ+KKki0fhwitZjo+FaVAydG+7bw8FSe93
vpyulYWvN0R/3X32JvB+m3U66i0FusUPBO9GPcVBp1VLTGUC0Nx/86sdDsTP
J2GRhLfVOPu9cKezbww2PKmXatpEgU3Pml3L99eh0fU3G2+ez0KxO2Jp278y
gfqaIRT8uha3fBEyChTIww+ujS1ZTCY8e3dkk/Hbp3jxRFV3KabiU9OnUT5m
FAxr7GvVsihCZ3Uh0Vf3EjG8Y4eFTBIFj5Q5BUy2xOMtIwVHLXVnCOEWjAsn
9/B0ZMncO19sQZ7Tc/GxnGQQmJQQ9Imi4Nr1amOutBgwFk9d9c4xG4w17AMy
Gih4m+Re/3gwGowKouY99EwH0aGViXffUPBwzC2RkeSInpta7PcI3od2Stl8
8jgF5q2PVO9yxuJs/hdav/S90P1sL3h/pUDZ4L1RqC0DL/kFFu/QSsekBz/E
3Ij/fZs/ZYh/zcFF+y5Wub7OwIczX2wszKKgbbkkckUW4TstCeewyVmY+Phz
w7gfBSbcj08W3stH3gVWJdov0lF0ym7XtFQK3mhmH1ivkopcSwLFpvVGYkbq
Q66cDxScT48bV6s3xEgTxsulh3yBuVChuHmUAnGbc778sr6gF2Xssu1QBPAu
SJIw+0FBmats8e2mdChOD/SIlMyCCPEj5zhLKbi0LTNoWW4mWDe/s4gryIKP
WZs7tuRTkMkzPGUlHwP0rLapZjzKBpA3tA1+SkGC/OM9738mAI/rO9VZDalw
c8qRvD/tFGTznPfxEgjBehUX6qNCMtqqi1SEDZD4nKegcP9nLNZHP6r+rJOK
02/k+ju/oyBnUiDnEKagn54F18KTOdgqpzGdt5yCA8s6eL/KxOBiK4k9G8Iy
UX3fJdv0ZgpW1XFSSV0e8OeKdmVrYgiq+w9I7h4hcZiy7vFgXzzkaD5atAo9
UUJY2fHgEAVF3PtDOn4Vg4CohElwQzKoxKtWNwZToMTxfkl2fhnUzeXhVS9O
g3b9dFNOawrSfnyI3apfCe6dRfFtL7OB+ZnTSHc3BfaSL13uiZeD4WejqcMx
qbD03acNpy9T8PJEoaaRYjEEOHBFVUolwdmvF+BeFAXlmsemObumQ8ERgbG+
o04w1q3q0PCegtTpQ41bq52guPDqlgU9DhB+tGlKyhg5f459zu6PyWgvKOEo
kcLAp8KRmhtbKRA175+1bn0cJjZuK2jPZGBWmdS74x0UePDG7Cv8Y4v35jJe
+n6KwT2cjk5D38h7LMnM3KeUDpLevf2RPAGQVLp3q1s3BWa7ejtiJpXA8RUc
ntMnJYJ5FHcLhFJwPPlxUZZ3NYypb7hp8CQPZl3t9LWbTcHd+AXX4qc3Qphv
U1GoXRHIve+1MzdmQrLspVOVOo1QdThKkW99FhR2Om5fc58JuiPiYvtVGwCF
1T59L02F5td6szMIvn1hqoe0KtXAi7u+6fYdLmjvJlhnIkWB6clEg/UXi6BT
+OxaYYEI9LpwbsHvDAq6mOuPO4S5wNhAKwR/QKz6/FrvEJJ8VIgs4LX2Qv53
QW3FZvmoZ9q/xb+aAr9lHJzcnaGYNseNZ/3raDwarcVcRt57tv6hknQMgJcX
5S+UmXjB3kb/No/fFEwVkPjkKZkJyjwntx1eEw38Zx4I5rVQsMb+1H2VWeUw
U/PmeMfNcpDPizy4YioFss7OC5yka8HSOlrVaH4ptIQNPH9VxQQ9z5h206Mv
oMjLTyuqrQ4WZDk0z7//GWRPm02fs+AlxNiKJnlNQ3jVn5Iv8uMzzNwsdcG0
oBw+LBpWVKf88IBdAbWVxJvO8pXK3BllYPfbTTTisw9++7Hky2QPCtw2FJVF
Dgfho1jta6YFFbg362Log0sUDKystx+9m4rR53YFr+l+hkf2zhAL2kLB9hkK
j1fPzMf4B+sqnAUrsPTM9Hd8+0kdGagdc0jLxKAbsYF8VUXIvWr4VhrBmYtl
05avLHoCsgHXG+Ruh8KU3VpC+wg+2O26nXK1Iw10kldq1+oXwpEXHB+WJ5Jz
lnRxdhqWQLp2E2PWl6eg8Wjvl50SFDhn3LhYObsKjpQum3NZuQH22hXORWUm
5FOte3eIPYXLpXMdnu2pgdqmE8cFSpig5JcuERvFAK7edQqlg/XAXb3ERucj
Ezj+3/8G2fbIske2fQHtH1n+ke3fjj4PqtDnQfZ5tOnzYzZ9fjzBOr8j/bx4
nn5ePMx63l30/eAa+n6QfT9r6fuEYPo+gX2fUvT9Qwx9/8C+f/H7vs7bWvzg
x3zp2M78cmDcrxnaTd57iX90QV9OBJROGuesO1ANruvfB7fuoECbjgf0oeMB
2PHAQ8cPsuIH2PEjQ8cbsuIN2fF2lo5PLKTjE9nxuR6Z43+oerwRtHCNw+Jy
DI3n8Xxlw4R+jdVfnDLL0T/1VPGxvFIs5z132WopBTPpfEF9Ol+QnS/pdH5h
HZ1fyM4vVj5CFJ2PwM7He3T+Ai+dv8DOXyad7/iNzndg5/vC3p+GquXZyKF/
BkPRHbQYa25cJX83yavQq7ymEt/d/LzoW64XpN/aKjJHjwLbugJrft7neGBK
54fCwGSUtFN7ll3OhAQar5CFV4gsvLpD4xuy8A3Z+NbhXPP6w5I61Gmsc6nQ
LcI2H1P43sSEPpexhQExxShzQMCuvS0Jr+ZceRkaRoG08pvylsFIDH3U+X37
aje4BKFR9iROmgtWm+ltdoSM7oTr+++Fgd6jaOH5pE6J03gOsTSeAxvPTWj8
h+s0/gMb/5GuF5hA1wtk14v99/sC5sukIaPx6ofd92UBXPamvyH80M6tynaX
ZzEaHfw4yW5tCpq+qjvVS3D+qYuPv7VgOaYfENyQHpiJ0751GG09R+pdJb9L
XH4lru7u2fzTOhPte1v7lBQoOEjXR6yh6yN2sOpjAV1PcTldT/Eoq5463izY
LrkwAp25pwy8snCHTo57dWE/KTiyJ9VFYfgEho2tiPtdHwkXcl1KXcjv+ftD
1NSVYuDwDOlvW+7mwA5Xro0/a0l+mb2btuB+Anx4sOmsEzMTtr5b8fpQI6l3
NH+ApzR/gP/wB5pvQAHNN4DNNwJofoLTaX6CbH4SzHeU38kkHVsvl6vJNWQg
/7xf3/9UUMBIytLxYhLelrdS5tjaPDQK/x6wLpPwhLouN1n+TPy2NTJmdnwm
7s1ZVM5XTMFGml+hJs2vkM2vItL+8jGIp/kYsvlYB83f4Nfiv/wN2PxN98Za
Y+tHhWDYI7xJZ2MW3Pm5p9qK6Bq+u1tFvh8uALnaddOMMBM6vd247sdSEHuw
MrqhNB8OlF1+fmZfOhyYpBy4nUF4Js0/4SLNP4HNP6/SfBUEaL4KbL5qSfNb
2Cr5l98im9+GD8xs/rAqCUev3dq+8GcO3vzMy3eN3I/Uzp4CaYzFqtyne19d
zMTTFt/OChE+duH3X76NxjTfRjbfvkHzc9Cl+Tmy+TlF83nwp/k8sPl8Fc3/
wYDm/8Dm/19ovQA7ab0AbL3A0hdwh9YXwNYXjNvatUvFnkFlotkT57BEsEuO
9h7fS+5fQVxG1fgpqNqVtz+ffQ+mizw05XOmYKT4xM4fJQzY92dlnEj6E5zs
9vEs90cKqjV7+VTCnTBfknruPjUe1z/d2NFMzv/z8V89hYO0nkK2nnrpvHL7
6uRIvH6zdrZdWyr+7F2xL5HwvevvwzX4f+yEfp1pC6f1huFhj6k9BgQHNtH6
DkJpfQdsfTeN1oOwitaDwNaDHrR+BD9aPwJbPz6m9SaI0HoT4lh6k6VPgZr5
V58CW5+epfUs8NF6Fth69iatf6Gb1r/I1r82tF6GNFovI1svN1CCU0S2JIGb
+p67p2dWYOvyoDXhRgT3VG4GVHM8Ri4hTpOE7gJcYVf7MraMgk5avyNLvyNb
v/ut8a4YCYvHbZnXH3Z3xMO9Vz8buokODc99U2LqHI0+j7OeFD9MAUXhqh2b
yHsRCqgJ3GJjAEGn+tsW6hRBIN9qt0yiU4DZu/vaxmDoqqq2uPGkHHasXCts
RPDKy26g5nTQE3QIs0/afKUU8nkiEseDKBA8xt9yWL4ApRft6Rs4EwdpFgN3
zpG6kzcoOJASXoKFfwZ891/wwQ8Pdu9hED6vZ2OWmP2zGMdUqYuxNhHYwr/G
Y3sMwb1b2YFnPxdhs8bH/Q2WUbiYX3k1XwoF4wf3eBltLsILk6dxv7eMxXyb
ui3v00i9Ezfpq3xbiIOZHveeL4xHCymvs0nZRJ9aLTkcUpqPt6o8nzqoxeCL
+btD60soWHReu3/R/jyMdt1O5b2Mwfm/hkXiSD6qBTLrQy75oL6/y2XFdamQ
yKGV7NlPgXp6jo5Yz33I8xk4Cc154Lu1ZXisjuAG5cEb6XIPbDlv/gyKLYZm
dd3cXURXhnqaTy85F4pF/HnmIZOKwPxxlRIzl+gX985nlS6Z2Ps6xn9xVCrc
0FDb4FVD/i6UHhy/UIDF+/gPbtExBC1z8UlFVSSPFN5dEpTPx54lW2p21nmj
Gcf+0cXEXjJLlhm0PQvvpOtNcY8Lwh1DuhfGSF3b5Od5Q9o0G/Ulrxjoikfi
5qyxHrcXFHALCKmFdaXjyoi9P52tozAv/tL2cqLHg4YVphddSMMzTwSbjfjI
/TBvdp0gddN9g/Gi0j8pKDxfKW3EIxaVDgxKM4jeEcZvv32aSb3nUsyLfRaJ
QRI5msNNFKxvWFYt/pDw/pEV5kVn06AmoOP8M+Jno7voT1/5ENj2uH6zU1s+
GMldCw0l9zw36fe6jzx3oPPKjyRJ9zS48jvt/TMSnzU9M34u0/bBK8mDIjJE
D066dPaqYx/hY0fGu1tLYtDXrnyIe3849F6K0fQfpGD2t9eNZqIR+HT2LvEp
Yw9gocnwljFSB/1vHFyudy8Az/fpZjuI7QZUzg+UJ/Xi+MfXDCllC5RP1jJx
GLiOazL3rSog+Cx0ZuW5xNV38PC9z0LVln7ofoW7Qp/Yvzt8aq4t0xamaY48
fiAdirlXedqmEj72JHnruHjGXdh7eE+WaWIiuuQW3u7/QoHLhXHXa2edsOpI
HreGfgpuFhfSv8SkoC/B9uY+9Sd41yNm6mWVDHw857t0BrmfZW1Zevt3Z8La
9J8uPKlhYO17Wv1WG9Ed77/wd6Yng0jLFtWu2ATIXNDqp0/u/8AhRltxcBSc
XDnKvFkaC0Vvun8FfaaA1/tt43zrCJA+v1PeRDwa2no61GaS84j1pS1ouhMH
0sY2oXWXIiCc6rtnTc5jeERYKZYzGh6cWcdpIh0EshuTh/xJ/Vomlrm8ZA8D
3LsUrA5d9ANdjqKPVQQ/lRv0a6vWMCD2+I3G8qXXYdmJiixZkhfzS05fH76Z
CYKTsSmr0xylhj64bO8k9XdxwuDkoVQ48MVEx+1HEiZbPJNvIPEWCDPennkY
AsD/c8ekkxk4/mFy52pyD9OFgr8Gc1nj7Lfe14X8C1Hqkov44qf/6Kzbfiuu
BGDtvilinh9KsHfy/Ys3CL41drqc+/guE3onX34Z0RwEhopzrShybzt4NG9X
7MiC8w+mzLp7LgK6nL7bRL8i9dQz0S7TKwfG17ne3GlN7u2kHaOa5NFouq7A
iWmF8FW+yNHgTwLYbAs0lCV5Wv2V4/C6FISlCy6fVnONAfU1XWG3syi42WTS
kNVYBDWhU+6dco0C0amVs/oILpm7VuyqyCqGt3e+nlaKioD6m/caDOIoyO1Z
e5NTqhjWpvYP90yzgrZxNWFbosfPvQre+0U0F1wn5dds2uSHnupdX14RPiam
dYLhfi0Sto0Kvrn+pARj3r3zcSU8c46I/riIiiMsGSnne9NWgj7jQsVTCH7e
9vQSBGUfcJ8O15euL8HL1WnvOOOJrg8MPBU/HAICq3eL2HfnoZe4f2zOM8Lr
Lu5tl3gYC+Vaao8fK8XC48LLc6vIezw79uKazuJo2Jtd+k5RKg0aHX4Ku5L3
GFTRysP5OQMyJn/o336QAcdmX5b9QO5t3FJLc499BlTIrau8jtlwWqjI+yap
F06O+9M2SxSD7rcftl+Gk0E36kBISiQFY2IrAupVS2C+9p/WoCYGBJz5eUbK
mwKj5a/KuPcQ3cvBIb7ncCjM+T4mcfUBOc8NMwe3lEIoknIbspFJwcKpJ/+o
plMQw1//rfBlGtxQc4u+N1aE7l9HUkIJT+afdY/xQT8Fspevi/rzqAynPDE3
sbhPcAncPDvup8EWl7uaTZcL0bffyuoN0aHmDEld6mQeKMR7vTo6IxvvtTWt
T0ggOLA/5uH0q3kQyhV7q9sxEyvvjfbXkPerf76jq0Y4CqP6I+5dmZMJrSen
ZTe/JjruZdxON4FU1Cw0yg8cygFDTs73uqXkva/10Fx3JA4zFdE60jMXFuSf
8m+tpGDGEvf9hU+jUHVgx3zRP0Ww+IHhC91kCpqer35oGKIAEcfv3tx5pBge
h46dRfK8LhmFcjbGXtCrt0f+nHYOOPfpe88l/PDfdL0rbY8se2TbWzT+9Y8x
tH9k+59EnwfU6PMg+zxInx/y6PMj+/wL6OcFDfp5kf28l+j7AU/6fpB9P+L0
fWIufZ/Avk/W/SPQ9w/s+3/jV5QkMSsJb/a5MrkMi0Ch1nVwNeGx69WKBTr1
GQgnigXxQBm8WWbdN/keBVF0PKAlHQ/AjgdW/CArfoAdP6x4Q1a8ITveWPGJ
rPhEdnwuLOp2ZMwsxvakSSNeoSm4qjhgpSeJZ5knZSezJbIx5M3FWTnTsjDr
0Hv10RzCu+h8wWQ6X5CdL8fp/MI9dH4hO7+S6HzEajofkZ2PPnT+ohidv8DO
32A639GZzndg5/vRy8mdXmGXMfxVfWHc8XJQGORukLalYKCp5NPXlGjsEUpp
zm/Oh4vj/D/++S49csZCduxpLu7PMHuuZxIAP66Wz1QnuiabxiucTeMVsvHK
jMY3bKfxDdn45u9/u2GrezHOjdu20HhONM5omn9XkPyeXLh1s90WxMpfUxq6
58ehcl3/t42Ej3Ut/MmlaJ2HAu3udet64/DUpAX2CgTnx/cITZPZmYvP6vWC
DSJikUOIUrEjzytL4zka0niObDyvp/Efp0/5i//Ixn9lul5AE10vgF0vzOPN
xxMiXKBzxqcNcL0I3sp5bJtP9AVcqNOLPBuJ2/qzW90XZ4KF/uc0ecKjnjjn
fjLeloZrG8+benSEgtPb0GkdpP4uturyXBOVifrBRs9H5rmA04gyHw+pX0p0
fcQHdH1Edn1cTNdTDKHrKbLrqfgSbm2Foigc3tHCa/HlMZbJLX9zgdTflNzS
NG/vOOz3sxqYWhyJQvnhTQ9Jfd967tLVO6pPMDek93JMSxQK9um85iD2RcUp
CatKY/GzR/Qm+SexGKnp5atB/u5Omj+gNM0fkM0fFtN8AxVovoFsvvGd5ifg
RPMTYPOT55o+Cdb9R0ApkHvTmhYGjNdI2j/tpWBw5tJ9ynt04eb+aznK5jHw
zNXrSth3wodNbWcO3XDFFTvKI74/CwPVm6GWHr8I36P5Feyi+RWw+dVJmo/B
FJqPAZuPRdH8DYRo/oZs/sZxK0n/NSMaRg9Qc2Y+v40zjeHbT/J3fz5cwtkz
NwIsVV8Zi9g/Qbkzh6Y3fiP80MzmvBNXCBjr6PT77mag9/zvT5YRnilB809k
8U9k808Jmq/iFpqvIpuvbqL5LQrR/BbZ/DZxxYbo2HMZYBc0OvJMIQKcy6cJ
fCQ8Z1a3dzteI3xp/tKiG5akzjb9Fr9L8t2P5ttgSvNtYPNtFj+HzTQ/BzY/
F6f5PGjQfB7YfH4zzf/hEs3/gc3/f9B6AWpovQBsvXCU1hcQSusLZOsLN7Db
F6eYAZ1vPzoIaaTgJaPksBbCQwZP+DLTQ31hepHm6U9bS3Cu3YeGcySvI3/I
cMyTv4hp8st36d0vQpH7/KHXSR61fVu/4Vi+Dd6+KUkpTinEvcppwork3hRp
PQVGtJ5Ctp5qXLDPdtGkfJBcJv1M2D4Ktmbxt7SVEz9UTsfxXQWwsWQazzZG
LJwbrK4fJPrxJ63vgCfrr74Dtr77TetBOEjrQWDrQQdaP8IzWj8CWz+epvUm
9NJ6E9h6M5fWpxBF61Ng61OWngUxWs8iW8/G0voXbtH6F9n6V57Wy9hK62Vk
6+ULIzcFc/cHYNaeR2FRonkotZIhurCegmEs8LYPD4IwRtHkDeey8EKLy/l7
rf/R78DS78jW71GdH7/5SMaD7eFa2c/Ti0BqLbSXk+eNc1BxE/tmhovH5n31
mpkFukVX9CLaCZ48OPfzfL0rUJk1qRt3ZUNso0HlVuIfkg/bHH4fA3vX/raT
Ck4CdV3G9TDi/9ZCL4vecQZyaBkOGq0Oh5R7z1fHENzoC+gekSb1fsrxrec7
pX1BwOD0xjQSh+tT19+LvF6GNacyYs2StXGOqSHDy4fovmZKSfB1OR7mWawc
n/MIzYwNn28k95DJUWYid68ax+9YT9K/EYqbP8x0CJcl9WiruHrEoVp03bS5
dPPeGEze/DFhxnIK4uPjG1X46/GLqnaRsEU6Sq8Kbj1GMaHHY6dnzqIGtPI+
ckhAJRuPzxKPdmxkgqp2e7Dp23oUt3qsqrksD88XKF1+UMeEm7z1Ol/ee8DK
ozYbNs8KBB/PK1Qh0XGr1z+YUnLfAt8cXbNRbF8UiOmq1QgQ/WiqdPl8z50E
yG1y4jovhVD2/ZDk8kyCY3mKicr363GD0A2GkWwBzpb8ePlWDRMOla+Nsb/n
h8+fqrzgUH8MRronJBVHiL6gfL++olKxK2Gp148QKzSW+2CfSuL/ubdHNLpV
4X3R3QbespkY3ffy8AVyD1+/zPl05U0Fns0qvPNHKwONKi4WHz9GAae+qJLP
cDp2R51bVuIXhnnPZu1fTHBjrRvDm5mYjQ89cODX4giM2tYic4e8F6OjNnuD
GktRoeiRwU6hNHyyK+rGmB2pF1sqZI9pFWPQnO6+aXNTcN94vRBvBOGx0o4R
r9SK8X217OMQ0wTUrn3UUB1NgfNMmcGda0ux/+yTrkCfRLRdPNOvhfAiAfda
CztIx2ld61wDc2zRZqHBn9EPFNy72hef9CIRF2kF7DseYgmDY1dMB4kOVfSQ
tpc8UI48LyxjwhJScezVTuP5piQfg9K/996qwH23eoZrSZ2X05cTvaBK6tdD
hg3edMDuqy/fF3lHwqb7ZjfXk/dCnQ2SFZttD7ecdIcM/JLg64OK++8GKYie
HfZ2lUo53uOVXDO2OhOPl0Zra+kR3D7g279gSTlmjc6rUebMxtdW2cuVdSkQ
3ZF07SvJ/xn21pPe1GXA50lHN4WROtja35vwoD8cLh++tGZZMwN2Silv8STx
L5a7PqJLrRRXejL/aC9Pww1BZWc/PqTAcl/3Xb7fsRChH1A5+CYVtBcdGjPr
ouDGz6eNNbt8sIbb/NLP2HsYJ+HSkUzqlyurX/9sQr8+49OqcFdDLzC+PS3K
Xi8FUsxPurqTut9rbLGiwb0Q43f1j/UUJuBXaXmTswT3Rs/sZEbvicWj2Q+7
Tp4IwSUZR31effnvPEDNBP8hj7YaHFyRilKmTbMYgWno8cVnqd1LCnxZ9g0T
7CvNQx4Jns7EGwfmmj3/5ovvHqlaGRA8kbujwX+Bl/DXI62flX1dcTIUZB8i
fEb6mcBFkfkMvK0ezJkQkIG7Dmr57q0juMqaQ/CdMIcw3DDz3dfoLNzcrHgb
czMxSUHwnTnRj/n/Yh+THr5RXiYePaeOBdrY2mLC/Jqy+YT/nHug/VpU2g27
Ak6vkNAPBIWRSKXlf0g880b58N3JRMvuZS8VZmUiX15acG4xBSr/Mv8Qo2y4
ynVKPuY4bmMeZWZi3KVR/QSiE9X+xd6stirMYtQZjs6Jnv3jeRwkV7ipMYdJ
fgmd2LJxazRMbRcdvOyUBupaOu3hJE8ld4Ze4m7JQoa+BpenXhq+5RkvKS4j
da2WnruYevV/5y7i7U7VL5JLx9un4sE6PxV/V9WZBJC6zMGa05gywV75pmnt
OoFY0J83O6X2eRrkOSqX3n9LwVve3UsLH6aC8O7z111XZcMx1+95IkTHnbrW
tXrScCrOm503uLMnBZfuHRrvI3pNizXv8WzCvMd4pbGz/9RwdHww9wLjcxhu
NTYVLiT3f5plXzTBfqWkpuGqy0mwTHuhQKpLNqSK39ZIrKagYIun0ePmOIgN
bRz+vS4DtldMnRLSQvjPlijR+nnu6Bkbqeow8xEKPhxd20byJZc1ZzKHNWfC
7ottzvsqT5nHwWydLTKfN6XB+uUzO76T51W6e1Hly8UkNF70bMHQSQbyF10/
dIHwqF2eOUdmHXuEF62VPF0l7mCPmM5hj7F/5nDouZqnrLmae6w+l8/vY/pr
akOg95rS7+icEHhjV50p/YPEJ+s8Syac503Kda9pQnG4SXBR1AddBtZ+Li1b
S/ieZnBSztXJCRgu8Vn3pG46cij2V6SRe17S5m+q5R0OqV81eLvjwkCltGyS
K7nPfaz5mWrW/Ay7P+h5/EVW3d1E6Lx9scNZNBaOq/BYW5G828+yr5lgP0Ww
eNbkd7443yHr5SHdZOwx9fugw6SgVGbF7tidnlhxfqFM7qQk1HmYfsGS4GdS
11Nti8AUELjv8dwwJx72mZ3clkZwIJE1t+M8YW7H0m9kqlhbHsz/nDDrXFgW
8H2fem0t0e/J/zLnYzVoJSJtFgNZqWeXvG02wGU76kofE97ev3GOvaZhCkgk
xpkPGNjDzMkaJ2LIOVeqaL75lJsLUTF9gl+aMoDrvL2XNNGhtqx5oYsT5oUE
jsVu8BPNh5RGL7/wHZkwu6e2TiyZ1COWvdEEewW+1rPbCE/eNmTuMudJKOwY
uDZrYdU/fUlVceb5p7BVNI4ZmM8AM5+apksWFBheOvz+OSMHRtPyT7j4ZIB4
74C9ItH7L1hzSk8mzCld94t4HyKZCcN7+58kxjNga+aUTUDiv4I1v/RpwvzS
l0H1cAn7cpDS1RAod0uDH4s1pjfrU9DcmDTnyeYqGHU5dFw/MxtWcfulPNlG
wYo/3MtOZjGg3HFD2SylNHgV3u6RRfDhKcv/wAT/+4TjVutPTgEXzidFBaYJ
ME/doVKJ1LUylv2bCfbJmwV5wkPqIaR8Lb9ZUz5cWRT5fRPhOdPhY/wRq2hQ
3qpqPVsmAVbIxG/r7SP1gjV/1Tlh/mqxTKXeQa4oVHuzY6NhRBKOVj28kkX0
45BqbsSCb/FosiFjmdbnVBQ+zDHnH5x8f85E5+ycBlKPa//81M+A+KffV+58
w4QfKwX54qIe4Nl9BWHhewIxUrbtpxnB+RuKoR9D9t4FAWt1Wy5DF3xTJ7np
7T95PeMoY/f5BsifN5tf6GQmXBEuBDnCA/0sdHf/ftUAL3l3ne8MygLJdzq9
Y7lMkPiYZnG9PRzEd6YtaOLVRrUSJennRLdSh/YZykIGmE4VXey5KAy+2e04
GkDq4BBjQGrQrw5q35Y21z9Mg7583Nr9iwlVpVHVJ2fWwWPtNXmbi1LhdcLe
Fa3TKMjRbQ6aKVYEQzbSF4ZbcuBq/89+aS+if81Lsv3LS2FkoW1LnWkmVDUW
L86zIfromUtrWdUzuGSZp3Oo9QZ0/cpTMVakILjRzedKZzF0RR+tfT73AQY9
XJW0iMT5yZoz6z7GVIDqs1SDId1cOCi+39ViHzln1R/7Tv0a6FVvDJ9/tQjk
neVcFjKZcHKcN10gqgh6bihNiV7nilM1+5tsSTwbdYo7OZcXgMQmwy07ywNw
d+P8K15PKfjwjIezJqgBUkr4H182LIdDzNSSxeeY4CUksGnY4jkkndSONNUt
gATRUo5GdyZMPWxw5FjBE8j+nrojQiALr3231PMguoO7seVi4UtzOLVQTafD
MR1/R1muvE14o02TUd+g2wuYXNoWX8RZBGbXr5zbIcWEAJ+PH5bVO6DDSOOB
yCfpGBhffuE5ic8NG4UO/xgPhJVf7CV55/tBvPMR8QRSBw1Y81fbJsxfKdF6
B/VovYNsvTPTx1GyKfcFuN7WLTDnz4PqR4GTvOSZYFso5h08Gg7tVtuqB7uj
wOZZr4Yr4Vd3WHNc6hPmuISuhMy76pQAQSIfd31JTwQ3l+xqU/JcGqz5rsQJ
813rz1yfb9pcCx8dz++4Nh4Cnas2SCUuIfytu2iGb1MNbOrVkJC3DYXyCOH9
XmsIPixqm7+gJweOzUoU7k9JA+p0y1z3Aoo9fwVJE/z/mj7vdveqp3D3R0en
rlY5tFumxVXPIfX6X+bN9KbxbujMewbzL8QsyxLwg7plkasnHyQ6LjlxVPNe
JVjUVc4cHvTAjwquK4cukPfFv84x8Xk5ODyBMyXcVUTP88sOtjHBiTW3pjxh
bk2nQqAn/uVT+LTv7utmqgJOrThvt/3bf+bNwJQ1z1bHmjezFrIUbP2eDfr7
FzmF9OTg7lIznfQkCsQvdBw4VxALJsHvdoVS+aiuUbFrAeF1u+Z4bjLeXg3z
8nV4r+g9hSlbFIaiSL4XsfxfmuDfMGD0XZPYczD2DdEP2VsHdUsMNh9/9xlK
WfZXJ9gvS3xtcOJTMHiF+/u7Li5CueHy/C15pD4KD1wUjQnE2ELrs33mT5HT
IWbOrAcUMH0vvlprWQ9uw5s+vD1YD69OL/Hpn8IE3X+Z0zu4a6r/8NLnYHrg
uaAcwYM/yc4RXaZMOMeynzzBfrsvd431+Rj0UV0oRnmV4pqlKxNWE93tsE2o
kQpMwQdJe4MepZfgNW/OxEDye+WsDamNY/VQ9oVjXM4lC1RmqprOaWHCpL99
g8Id9P+jdrD7CP3FQes+NMdjrEDGaT5uRCNB++Vns4jOMmyPixnLgPkJEl8+
6hWBVE1r1lTCf8JofY0XaH2N3ix9rcrKx3UT8tFoGuNc38o6aF2j9aBwVjCo
9Nqe5uQjepw1l/jzEz2XOJ31vDNEtq3SmpILC+b5+q5f/RRchC3LTp0j8Wwn
WbpdrpDwJS7JJ03lsEp+S7Da7n/yXU9lW1kBuN7UFnNrT0cdBr/gb8JPtrD8
j37637lHc0W+ZpeuLPCPP2+9YlEavrAaUdMhuJfMmoc0ZM1D1rPioT2B2e9Z
Fg8Jg0zXgkflYOBwg1PfjIIB8QvL88ZTIFr/2/4nI1UgzF9sy72HAu/A/LJt
ZekQpeys357CwGFvkRnz6v/r32CCf067tN+pM1LwZ9X23Qf7K9HwQGtQC9HF
2Sx7Vr4gOz7vjJevFtNKB5E/r0ayk2tg5tQtTlMWkvtUtr3XcoYBo36XDOZ6
VEPjVvmAWWIUdLVfeNk8hYGW8b9zhGc8wzPyeZuGgeQ1a86TNXeKCqz8Dc8u
PPzicCJ2/n729fvRCjybLdoua/gffMNc1vwnG0806efFWvp5gf282+h7xkL6
nqGJdc+KgTY5B7Uy8bJE6uCc+CpMDpu1PmY78cPynzfBvzb93rGefu/Ifu8n
WfY5E+wF6XjATDoegB0P++g4xPrVf+MQVVlxuICON1xGxxs6s+LNiTXXenHC
XCsrL3ABnRfIzosHLPsLE+zj6XzEJDofUZWVjy+M6+Y94E7Dl5ni3BwX8nA0
KCl+VS7Roay5WZkJc7OedL6DE53vwM73OtoPVNF+YIzlZyeNM2hF4wyOsXBG
h8YT8KPxBNh4krDITzN3rjl8DJv32VWrFOrcpUKzQiloofENWfiGLSx8O0vj
KhrSuIr1LFzl09C3SI4Jw5Z8o9xb37LhEMddubsvyHMdf3g7/H0Gnu534olz
y4GWawm8H7MpeG1wxXWLQi1ahcQyc2Iq0CQvwq/dmwnRN7j4xtTL8eMFbfG+
jqfYkhrz6z0XeV+LTtwRfp2GJg0fYsq3FwJ/j2rfW3LPs62fcCUWl+OcBwc2
znjpDYf6zl0IIPpo9rnST3WqFcg7tf6D6q9y9DDkT7SjmNBnYuEuGPEUB94/
6TM/WIaW20usRoUomMdt8nDF7Wq0zNtxaOYmL5SMWvVdgOSLHV2vcSpdr7GS
Va85Fv+t12hB12tk1+v9NE/AlzRPQDZPWEHzASyk+QB2sfgAi5+gJ81PkM1P
fGh+gpOs//ITZPOTVTQvQkGaFyGbF92m+RVOofkVsvnVCM3D4SzNw4HNw0tZ
85/FrPlPti72H3V1/TF6CbdpLZCJNcgAoVWJsXJER2xnzc1ydP/v3CxXyd86
Agl0HQF2HVneKJTovbARD05W1h34jJgxbcWVqyQOIfmO0+9zwfg7KVNo+VgW
yPEWyBxtoUCO7f/D//o3fzk6LV4vC0cHI0wGjj+AVlUH62VvCZ6w7V/+r312
eKt+xPbn+EzT2cIzoQK37OTyfCvHhCbFtqc7uerRv8t5O69cKS7i+n4jIZ4J
iwVrIEwvD6tOx8349MIYZygw0z83EF3JmgfWZc0DX2bNA3PMufKOa2oFjkcY
eF9P2oOZCw+kWllR8PBf7CcfTe5X7qrEXcupI0WfClBOPvaHC8FnHyUvz+vS
ZXg5VykizjoP83d9UNlL8HZGGMXhtKYSe6t92nfuu4n9M1SUPYwpKGfNIUdM
mEMWNx5enFVfiYyq15vryq3xtW5N/yXyezprPnkxaz7ZgTWf7Gxt85VLJx/r
HO36xd6notWy8H3niS5wkxi6ZumXgoWtPKl3SlxRMPNtyqvPFMR1bLq8rrEe
j47MsJx9MxW1ZMtvzetnQjbL/8oJ888aqRaFFu8aMKfFhuM3ZxaeX6iCGnlM
yP2XeelTPRwj0tLheFmuIKf18VU8zM1vKkLi2cSmdrKaig2OTj30TCbwDlzK
G9KwGyc6i9Z9WEDrPrzM0n3HWHPX9RPmrj/RehOHaL2JbL1ZyZrHFmHNY7P3
mzxoHQrLaB0KbB26kNa5IE/rXGDr3FxaR2MiraPxMktHV7D8S0zwv5/+TgVb
6e9UwP5OtdZn1rrok8nYUDaclpgYh1TWcbQkuFFE6yPwp/URsPVRAGu+ffGE
+fbvzBNRQ0urcWuOVF61Vz5uONJZXzePgrIJ52F/1zru/ePMzlXpuNB/aIGk
Rgoe7d819dVL4n9PQsLY8mwU0Fb3v2SQjsdNvCt0CQ9/IBL+1vdHBX6Osbqz
JiELY6Uut+sqkXOy5ti3TZhjXzpnUtCtGQUIzQo1HAKR6Fd3T2hpGQURLHvd
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
HHyWGO3jlMwBmVtOdo3HKZDRF+Nr2B2ON3tEjcM2pqFAe4+2CMl37ls+8R1D
1rj78naDQrsEjJT6YM5H4tDy/uYyxcZyON0q0cKpngXHeVYeXqRFAadWf9B5
W6Kfz/hkvF6eBSuHf4Yf1yE4/OBvHxbmm/3twyK7D2tG93lhJd3nRXaf90XO
oQ31l8pgU/cCkXe1DHjzRvia4x0KrlUZKQ0olYE4tZhr2D0VZLZ7vKy5T3CM
7iNDf+ffPjLcYvWR8+k+NYTQfWpg96l5xzefiusvBoG59U5jiVHQrzjauyma
gstGk9Y112YRPb1hu3OBH4Tsmqy1jNznWboPDrvpPjiw++AU3WcHDbrPDsas
PvukSyohi+MYsG6kdI/wez8INrK0etpDwdF4r5O9B5LhRN6cXdEBFuh4fqXe
o0EKqug+PljRfXxg9/Fn03MCsJGeEwD2nMD1lWntHMIe0Bskx2P/0h0FFoTm
BJL4+XPkw+36qP24+v3ayTe4QvDAPSmL37/J36XnGWA9Pc8A7HkG7zoTNTXu
BKQ2iTOTvhD9uINfBgmefKTnIuA+PRcB7LmIWHqOAriO/Z2jAPYchdyaublf
p9WA7JHLnGmzEoBH4dIuv3UEnxNVc4R3PoMlIqf0bu6OBINHy4oaFClYc0fo
/rLEclg2YvJU+pk5CC2iilVuEXyu+9Juq1gG32bv6jKwtkPLU/lfv/qSuA19
/3vhnUyoXqf3mNEcgeXaI57WrylYf8Uu0f9dKhQr7D86eicV8+6qZpcSnp+g
mP3omWsM8Ck+4G3sjMOA7jcSe/qJvivmytz/5BGmHkv6cD0oFe1llp7Q/Wdu
eZuQ2SPHaIzt5fqzWbAQrxVPFdMtJHWz3tvb1z8I32T+9hCZmgpd+0IFkwg+
W7aot5/echeuyO6aPG1uATxcEmGLzwg+N3AXLb9jitNcPypcnZYDKpyW0unk
PB4zHs8UfZmKHNzpG4rehKPH1l1K/SQ+Vz1Y27hc8g74K+/pfna8GE5vgDBZ
wkNGloWFaZa6QOcaw+xvPSWgPKZVoBBJePj3tqsHXD0wsViG8TW+GNZYhsRt
SiHxVlEoakT03sbwgiONb4tgnvHj61OIny0ihZMKPjFwysPTydUjmSBte6nj
WiUFP/g6c0ZlsnF9eWO81IMUyBTIiJ9Ozm+qoNQ2olOAHK1rJTRE3MDRRjN0
mNjbHRVer6iL6Lz18/N35YYYVr3ARbKEgrm5+uvf2hbi9Hyzj31fvdH/ZLxE
Zim5B5MLLmZ7A/GJ+G0qlisJoVO34g+T8AfvLEqkPAgWcrpLKgVnwY6OyXMa
yHtUeXWrRj0yGCf3/6iKP5UC5m0fG93/2QsoXjxwen0hng8w5z8WEICn8/0f
LSG8zvya8/IsK2/gtj3bqaaZDwfGpl6rrSb4LPbcuHyVN+w0+DW0j6cImjV2
pvoTvXzBdLmSvGEuhvbHjD8teoJTxY5bHCN10I7re7VIdw7WHAxOHNYJwdkH
yjfWPP9Hjwjitfq7cODj7ecLr+XBO/PHLy8R+5INJ/bCxhvI3RhnGmmbC2t7
xefVkrr5ybZq++izXDw1Z/6jq7cjUS2nmFlIzvN7Pn9TlUkuCvt4GB6FKOwx
4x26WkPB3vTMoVbvILTPZDw825IN17ma3wk0U/Dys4iz8JJITLeOtolqSYd4
x1CBBqJDfXZO7RYsy8LVXXr7eXZE45Hvx1VFCJ6/LVnL9DqThcGyWYHTw6Nx
bvvIxVHy+xKGkBDPjVS0bn/18K1SPKgpJ3Nt6yL8Nq5l25+edNxw5vDzlE4v
2BHp2PD5nzmNngqrIIVMbOVRnHnnVQzOXCD2R/4VBduGnlgmFGZgca24aJ5o
DLZPuzu2k7yv6cevOlcXpeGhGekeNevvwLGlObyqBN8+rDyy6vb6NPTNb573
J/QKHmmwS+ghdXZmwDW1O1Qaep6T+Rm7NxbltzvK8JPn0vls1c03Pwc/vy9U
1TCJwoMDO92yyT2rt0utKzEn+eki+nn5bjs8K2IYZjNAQXXHgE4LIxvfHpzv
6uwShfLlTSXV5H3NL3u1Rs47Fl5dnbXbS5ABN5wrezeS593G2n9Zy9p/yWLN
rzJiWu8bxjrCCn1bnz2KDGi3mb3XkuS103xrnX0difiOr+JX6XJnXCk0w0+B
1KMzokE74wQjILb9MvPCjhyQJ1S9gPzdLSz/Gyb45ysO7uHq8oYrhZt1X+9m
AHreyNlFdJzkv5zHyUte1isiBsu2xvKLn3iE7cVVl9W+ER47kuUmSu7r3f00
c2ffAPyQLlQrT+ovV80mWx71R7ACD7688iEVNIq5V1aS8+9h7fWcnrDX08Yf
xXvg9TXUgp2e1y1TYPKGYsFeko9yLHudCfYDf3ZUD1vFYfcL6Tax7BAMEJHT
jCV1Ssp4U2lXXxR2DQae2346FE3UI87PI+c5uKIomSlkhTmBc10PiaRAyP4G
UXuKvHfWPpHMhH2iR/6XrjT1B+B2cb+yb3si4KiF+mr8TvgGy37LBPvIcN9p
VY5hOPS9u/BUezgq+ylUmRNel3pKfegPTygyQrKmnouPwMpI4y3l5HfuP4vC
Q3p90fy2WUeqdzik48auMqILlrP2mLay9pgiWHtMxufUNn39445zrH6eGh/x
hHVcUfNVRv9rv3mC/fJdQ1uWSIVi9sMf+9Z/isO37juBh9xPcfeuoOBHj3F8
qecnuch4lNM+9TGE/H7Lu/79qlwPvDMjYuh5vTvMkeN0tyf+T7H2p+5P2J+S
++rgk1d8B0+Ou3o5MW2g58P72rvjJF9Y9ncn2Ne371g13SgCjQ5Q+yI3J+IK
vyqFlSRfqrweu428iMEeabvLe2enoqTFjIqVRNdH8IutwiFNHOhZW+2+ygq+
SV+IbiT+F7L2th6y9rbOsObM1yl2nXNNTca+3YkhxctTsEFYWnMy0VNaliMG
bisy4M2UD6uf/A4FIds1PL8IH04bGMfRZwmwP2o45HZXCujsaQ5a3/WfuXHY
MGFPbUuD9afVG52BOX319KYeTdihu6BSmpxnEes8jhPOY2qp4Vl8LgMMBt7D
ZYso2F56uM2E+BHgf5j8cHc6WBj8iblSEAkqt2U+vyfn2W908HLYTyeI5A46
+kHDAG9P01yxmfg/wNpHe8zaR+NnzdsfOT34a3CrI4z4m6rW9rujkuWJ8cNj
/7W3m2B/KaOwgYszE0buWI5udYuFbaUAegQ/c0av+jUUZcAdU4dd13pjQO2Q
rmgY4QPeuWYvX15xh0fzjjuvSvTEHCr7yCUSDzNZe3DSE/bg1vEx9XQCHwOn
+KZxw1WBmGBft4xB9DsPy15+gv1DlbuerxblQNmk6aoyzvFgIVboH0Lqzjse
W73sVznAYAZf/N0WB5zRaiENz/7RX5OFBGf7w8WzM3zGYiIwqzHAo4PkozZr
/27vhP27U5NNVkv4+YGhcLUFY3ISLhQ31XKm/ms/cV/PfiH4JC7Kg008prOu
PIiGoQrZHQeJTtz+QkXH2z0fmi8qGHZMj4L9G7VnSj2lwGT7b9EVL1ygbmrn
172WKbjCrc1zDck7f9benxxr74/jI733FyWc71FRbwYrpGdXilQxUE115Ohz
grc/Bel9wBkT9gHtG144zBXOh/oBz9SL1yLAQ/Rbbw3Ry8KB0aMD9QUwkvkl
d/JIOCy+6HnydzE555XxWwEDDnjTMJxS+paGC457WN/9SME8of/f/8xc5U3e
m/xRaa6rdkp4Fs5SXyFuS3TEKpY9zwR7tTMak7atQViEhjZrnMPg4poMjmTC
Wy6mBDspCgZj9q3rD1Ov5OBtubCKDsI3RFn7jNUT9hlzlnDwfJvEgAoP4UCt
11EgLPQyyJ7UlxfyjlJVuZngYbz5kPuvYMh/JjXeRfKlMcrzruDZQlgUNFw0
dcQOzLILGE/IeZyHRNTUL6TCpqL2wATDRNijp8B1m9zzlcwlvMEeDDg8aDw5
8lsyuKc7LT9Pnouf46CY5MlCyLTeW6dx+AYoLXaxmllOdBbD6Og0U4ScP1tb
/QKNoVGx9tU3cp+DeyaV6xZnwaolBSX3uJJh9YD+C4daUjd5H1CMkRx42hKb
dPJcCjTwf1auJ3yv8PZGmQpSd0MVU2IlzTwxdY7H4iDCl1qmXNdctCwb7k9J
kVd+HoLnZAPWriV5t7FffPWDyhxYa7hJ70FIGnjvb1vKT/h8ZNKOSW1LiuCr
QOey25ZJ8Np04KwS4c+Rt6bVzuCLhc1rRVccbULM4nobeZ/o6zBTgStbFgXC
HNtzh4IWF6HB3csPefMp0OuqzFW5XwRqJ+93muxKgAjOGWsGkigInxTLGzWp
GHgYSt/Md8XDjowytej4f3jg9AyR849AQuRd0rLGIpRjPO0pzSL6Lt1OTzDL
Bv5Ey1TZ/SzGqN9rwiKIH43u5GvHPYtBl+fHjAr+JFDizzVcRHRroj3jW/LM
UrAyPc9YS4XD9wd53fbBhP/0XehuX+AKV3Osve2uFeOlL7YJTgwKhBTePRwt
8AVdkxsKCz3yUed9yZ5Aku9812429tuUwtr1rx5XjIRBjmPkttIACmYFHFW0
euEB56Reqsw/U4i1Kgu0ssn9f4/YPDfS1xc6FI5M7WSmQVJLb/oQqSMnWPuM
kRP2GR/TegeYXH/1DrD1zga75LchO0ohwddSXdndC069mGR4MJSCmgumcp5O
j+B4ZssF+750ENk3FvkPL5rE2os8MWEv8tbitwe32HrDKX7xqj3zSB34maN0
gfDYaNa+ZPqEfcnW9cafqg8UgfwZx/3t2x5jmLYt//xc4kd64I+vZB5Max7Z
NEsmBW+/WfJ8HonPuSul4hS148BKoLbO6Xw6dMuqV80m+RLG8p82wb965w6P
P0WxYPVrdmIC5MDynCta4SSew1n2GRPslyjNbQrkyoLwH32MXJ50rK5QrL9P
8q5g8uncgUdJQGkcmVxXX4yHpo59f0Dup33SHp9T4XGwYfbx2/uX5IFF6+95
z/+Zf15M74EeZe2BLmHtXfJV3kmqlkyB543SEYU78mCZ9vyXo0UUcDTT+6Fh
E/ZDy9XGA4+ujIcm1xO6Ev6luFC290WRJwWbm/uE8s3CYVmz792y7FJ0Eue2
2PTPv0/VNqn8flcOiAxtTA1MSofYXI8c/jziv4X2HzrB/8YmFxVO3zy4LvY2
90hTJrgOrbM1J+e88y/23QuWWll6REGx6OU1r3iKsf9R6fzvJC8STEBzfGks
cF/lvxiaXoSmwTXUKPGzNjVywVhtPji6OZ89cysdJEY3eN5PpSCbtffaM2Hv
9duvP43UkyI43jkcUJkdC7sVe+zWExwoYtl3T7BXPimWFnczhdRxy0Fb2UK8
ak/KagaJn1N9G0SYqVAgW3Un8ncOvlX/IXqDxI9Yisrb6hGEY9HFb25zBUDf
R33rtQXsfdsk1nyM43/mZDQVPilp/UqFwFe6oRyyOaiR3cNXS+LcVG+1PbRn
Y7U+H0P9XBas2z0jsJHg0l1aX4Mfra+Bra81WPkYPiEfp9asWehQVgjjL3Z+
Uti2Bxx3CAgHk7xWYe35vp2w5yv6rbnWqzYb118R+aBjlw0Vctkqj9OIfvQx
yI5vyEIhh2VnHiZlA3Pw7mqRf/ZZjsW3OVVmQFuaYpu8MwMdpRdtTyJ8Q5vl
/+ME/ze2imbdmpoFzzLuVpx8m46T+sJMzcnzctTS+8WRE/aLlQq1rEUEElHo
wO2m4d0I/LecfqmR+x888vW47JJUXC53xNf9YQnEHtp4i9+XArd7jfpayYmw
1mOJq9TCYhz8uhrrY4j/+v9/f7ngwY2Dix7EwPDMhTyPS0txdrrMWxkvEp8s
+9gJ9mPjY1Wbo1NQyXF9joJFKazg90iXdKPA4OW2SzwP49Fw98JAfpdSOL04
NaGD5FG4Wson0cNJsP/lpJhFiaWoPa127hJ3CjhZe9PHWXvT7PzddZ55Yodk
MgwPhNffLS7BY5necRIk74pZ+9RFE/apr9DPi6vp5wX2856j7xmb6HsG9j03
b70U2P85FXLvq9SutCrASrc3/bvJfZax/OdP8F9Lv3dYRb93ZL/3KpZ97gT7
H6p/4wHf0fEA7Hj4UP03DjG54m8cIjsOJeh4Awk63pAdb3ysPfETE/bEWXkB
mXReIDsvFv2L/Ww6H1GWzkfsZ+Vj5lT7sxLaWXB651xmoXEm3vSRUNpMeILV
v+yhu9L5joV0vgM731NpP2hB+wG2n080zqAJjTPIxpkzNJ7gZRpPwIyFJ4nT
Ro8xAyJQZ8Uh5c9KxWDQoDFLjODeAhrf0JnGN9zEwrdFNK7ifRpXkY2rj9fB
VsMFIfgIPDt59Eqh32KkUf8xwQEOSXOjjjiUd4+eV9NUCAWc14PGswn++6j4
yMblYJx8t7H8ugxc4JvYef+ff2dGQlp2iRQDbQROHTQZzsHzSk7NX0kd+Xj1
6tyFe5LweKPlxScni8H+5PL+9kjCQ1YMG0YkJ+PV0IApikYIswzDvsgRHiJw
BmOlo5Mw7JP2dpmGHKSGfqhYEb596w3zaGRZIv76kLfm6PcsjHhe6bG8jvBV
lzb58eNZ+EKw8NhKtXTQsTN17CHv8Qpdr1GQrtfArtevhf/Wa7xF12t8z6rX
q2iegHo0T0A2T2ih+QCa0XwA2HxAguYnmE/zE2Tzk/M0P0FNmp8gm5+E07wI
22hehGxetJjmV7ia5lfI5lcNNA/HVJqHI5uHs/ep90zYp04VlJpyONcbMwyW
cwmtKQD7z1b3mkl+ybH20Dsm7KGb0nUEY+k6AidYdeTdlD8ZshdLUdXppPSN
jREoxh3Z8pScR/ycxLewmQ9xAZZ07ysqhsRDe8+uI/GpxPLfNXHPve9L5PGy
3XB52EFwbmcZHPeXn67qQcFpln33BPtpyk8NJg0V4x7Zfu/Vp5KwRfuXlUMI
4XUuli/+j64vD6vp+/5HCKHQYEjGDBVlKvMqSYlSlISQKcrUoJDQIBHRXJrn
ebjN82pSaZ4VqVBEdCsNKPw259zv5/c+z+Pf+5zn3H3W3nvttV5rr9dLUjUP
uUs9zCJXRmPBFhWfncRf8dtop5SH2GOk2UjnFbsC2HLTxWCvHxvW0/31Coz+
esUUC7fi+WGoXuevHrk8E+b41UXrkrxSln5+K+N5mcwnzmcP5OKMI54tB6Ni
kGvVyKA02S9StbpCS5IzcZlqvcuZyQk43D9x4AwZ/9h7X7aZnonCRb9vCnxt
TwUNM64Lt6vZ4EX39QOjrz80lcu0fkEMLhYPdm58nAKO3WVOlbVkX9D9/k2M
fn/lQts7e1+ko3lVaJDj9gRcEuDjsJGs533sUeGqpDS08+gJDMuJw9iGgdHP
f3icXkunKuakY19qzl1rE3e4l5vspFbPhrn0+00Y778ZGztw5zri3pk/Akf6
DqDytTshL8j7RejnVRnPu6h1m7ME0rBjqBjFhONQzlF8+Crx23xvucT5PySg
tay75Y4J8XjyTePp+8QfLqPyPvSm8j7k5H2aNI/BQ5rHgIOTvKLyTfzh9Tff
RE6+uZjmN3Cn+Q04OI8llYfidioPRU4eGkfluVhF5bnIyXOPU3k0LqTyaOTk
0Uvo90cx3p9P4VRI41TIwam4l04PmSHtBYYfzWr2bUqDsjXGWw42sUGeyo/w
PJUfASc/Eqf5ImoYfBHaatOUXn/OwT11mm83HgnG5Rfv6pn/f+OJYYwH/D9J
VtQYwtH88Y7mx1NgnsOZz87tbLhdK8b7uMMaLe6fG10bkQi+ATyl+h/Y8KI/
yDNAOhv3CcDzndND0HRIP86K7HcFmhfiJ80L8YzmhVjn0S2mvDMDM+VepY5R
C8PFET5LNpH53UE/P3bbf59/49F/956WFQ4l1Eh2n4mB90NR75f3s+Gulu+x
3IVuOGxkl3p5WQQ0ZY/hXUuel3M6ojw9JwM9Zg0pXBobgaExlqnaZN0W0nwU
PQw+ijtnr7LG9KVirvbI1bkBEWgcsnB+SQ2Jw//x/BbR5Ufrw33xwKiCYpZj
IJT3Gl1hD7Fh6pdm5eNTA7A8Y4/K5hd+4Lrc0uTWMNkvWg8cWl1S8Gd5+upn
XREo/N7/1b0GEhfRPBhZDB6M0iQ5VlZjKj5+87LxuUckLrsYkL6HjKea5sfo
YfBjRKgUakz0eoJXu90OVY51g+YIl0run2zIpPBDbKfwQ+DghzePcLnVfEjB
XN9F/JXBEXikWauhhuzfqn/wb1wwam96EZqEm4dYBXOSQrB08sZnH1+TfJl+
/hPjeV8K58QFFM4JHJzTgcJXUWjqX3wVOfiqCYWj4nkKR0UOjqpI836spXk/
OHWKYxTei28ovBc5eO8u+nlJxvPOc/7izLC66y/OjByc+TdVf8FlVP0FOfWX
vTGyLaYqkTDv4jPPd9wseHEgpGQcec8NCgeDCgoHAw4Oxq/6cYk4tyUkT93p
2xBxGyXsc5uukfdrHhV7PpQWCF5HJA8KPY2DKy9SVneQ96vMWtrY9CMQ2gfj
7DR+hIP4haQSr14S51yZ2CK5xgOeCfh4ZX9+gM7RWjpjyTxeEM+7pJPlBNHK
dz6uX+aHjtEiio0/2HDQOmie5ucgkC2bbf90dzjoKV3i+lPHFxDZ2nRIxg+G
N0V9MzANgZuP7wv8JOtqsSNKf6t5Ap8Pch3g3RWAj5qKp2wh7+FtMlO5rOgG
Obt/xHk+CMA1v7oWyn5nQ2XiXk0boQBItD4mZhIRDCF9qxvzyHsWUfUXoOsv
wKm/9M6cLm268Ql0XDcNbXCIx7ykhlk1ZL/4beh2V9WyhaDbr25kd8XjM5W0
rX7k92qqvgMNVH0HOPWdSqreBNVUvQk49aZO37B59h+c0PEyd87CNyw8flmD
5UHsqUjVufAKVedCTp3rBlXPgkiqngWcepYlVV+DdKq+Bpz62kWqvoZ+VH0N
OfW1eVRdD5uouh5y6np7qfogHKbqg8CpD26l6sgwkaojI6eO/MLm+0GV5iSQ
vK5cmZ0VDlUXlqhJkXX+3u2x5entMZC4xD+K/1ocxPQPfxMm6231YeEt33iT
wGef+d0TaeYgsjSx2+c92S+8pl8cViaD5Yd15ePsIqDNsm1jFjkHNb/mLZBq
TQanG6ueyN0Kh2Om2o3B5Ly4mPauWzsoCcLbFWebypui1txfn6T/9HMJm719
kZkI6ksFi1yPOuKbu8L+huT9hVQdFj5RdVjg1GFbqDovxFN1XuDUeV3jTRPE
D8bBo555bhO3huOp2ZvOGZJzoXf/5NHx6jEw4bXvjbeqLPxupl1V8oePkaoj
gzhVRwZOHbmfqlPDdKpODZw69fceyaExr73gVPj10xk6mbhoQEx4HInP149c
gl1lD+HSluPjLkSkY8W5Wu/PxK+2U3VwUKXq4MCpg1tRdXbIperswKmz52fX
Thn0NUVRc88zLaoZeEnHLegOGc/g9HclMp2OKJaw22DL1xycPuSmG5rPhhNU
HR/uUnV84NTxeah7AgDUPQHg3BMYs+9D4b1vzmgQmHJ/zJVsTL4sKydE4ufN
n13n2u30wsUCxm3OyWm4NytrQ0MjGyZT9xngS+bf+wzAuc8gV+mivnxqKgwm
C6VuagyGhb/cN3eTeblD3YsASepeBHDuRVyk7lFARfPfexTIuUchqntyc5JS
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0., 0.49488850049789845`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], True}, 0}, {{
       Hold[$CellContext`tabNumber$$], 1}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 3}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {21.1, 5.2, 20}}, 0}, {{
       Hold[$CellContext`moSel$$], 3}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 3}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
        0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
        0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
        0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
        0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
        0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
        0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 0.25, {2, 1, {1, 1}} -> 
        0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
        0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 
        0.25, {2, 2, {-1, 1}} -> 0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
        0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
        0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
        0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
        0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 
        0.25, {1, 3, {1, -1}} -> 0.25, {1, 3, {0, 0}} -> 
        0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
        0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 
        0.25, {2, 3, {1, 0}} -> 0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
        0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
        0.24, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
        0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
        0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 
        0.25, {3, 1, {1, -1}} -> 0.25, {3, 2, {-1, 0}} -> 
        0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
        0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
        0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
        0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
        0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
        0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
        0.25, {3, 3, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {
       0.5060000000000002, 1.2400000000000002`}, {1.3679999999999999`, 
       1.4449999999999998`}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {21.1, 5.2, 20}, "numberOfMasses" -> 3, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
         0.8164016736401674, 0.22334728033472817`}, {0.6908368200836819, 
         0.6836401673640167}}, 
        "mPosFirstCell" -> {{0.9, 0.7}, {0.5060000000000002, 
         1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}}, 
        "pointsDataTable" -> CompressedData["
1:eJw9UE1IlGEQ/nZddf1YxIN4EJGCCKEoYusgKjPgQY0k1i4R0kHKOgSJRYjs
QUFJEJEOktqhJTEQQhbqoBGNSIein0Nlaj/YssvKppnrurvKQus7M7sODMPM
877PPPMc7bjddr3AsizOUpNOk2e9HAmanOAoXOiUiMINqf/p4wcOFyoep3xV
PJXrY6A8YZpQHhyX+g6yEv8oIP18jm8T8nu0FqElsQfvFSev6gKdb+eqhTov
xvw/3RcjhQ915nhtrDz961hR/z41h3rLZ5scC15ux77AYrKmfXQxSd8/pS+F
px34xzdXPbgRor6xxuFb62ka2JABTXKbWYWAaXxzs/T00ZsjwW4nBpuYcB2i
mZn459YUnWS2mp9gLfXEjp/5DStTXQ32cgLu3Hzw1w8F2MZsPgsvdJRdrn2x
S4pnwOt+VnXlWhgUdyGeu/qyxePCedln4/O3914/rkyQ4m7srFu7OPIwCoqX
ortfBNN5uS9L4WkWuAN+04V6d4ivbRx24yt5/42+trKACO3J+RHyAy/chSE1
BMwx5kEJ1tvLRuEWBMTAED1huVMRqFhlw5IgdNVpMOLMAxtTwufAFfHzByme
hWA3G5AGxQuR3ZyJ2yh2tXvwrvizRIqXYIvHeeJ+xT6w+vJTZXgA411MIQ==

         "], "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{{
          1, 2, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
           0.5060000000000002, 1.2400000000000002`}, {{
           0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109, 
           0.6525884217028176}}}, {
          1, 3, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
           1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
           0.45043660026690807`}, {0.45043660026690807`, 
           0.7170411692283046}}}}, {{
          2, 1, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
           0.5060000000000002, 1.2400000000000002`}, {{
           0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109, 
           0.6525884217028176}}}, {
          2, 3, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
           1.2400000000000002`}, {1.3679999999999999`, 
           1.4449999999999998`}, {{0.9464696733662902, 
           0.22508849540613599`}, {0.22508849540613599`, 
           0.053530326633709754`}}}}, {{
          3, 1, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
           1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
           0.45043660026690807`}, {0.45043660026690807`, 
           0.7170411692283046}}}, {
          3, 2, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
           1.2400000000000002`}, {1.3679999999999999`, 
           1.4449999999999998`}, {{0.9464696733662902, 
           0.22508849540613599`}, {0.22508849540613599`, 
           0.053530326633709754`}}}}}, {{{
          1, 3, {-1, 0}, 0.25, 0.443449, {0.9, 0.7}, {1.2679999999999998`, 
           0.1449999999999998}, {{
           0.3053879927567766, -0.4605715651630738}, {-0.4605715651630738, 
           0.6946120072432234}}}, {
          1, 2, {-1, 0}, 0.25, 0.8216359999999995, {0.9, 0.7}, {
           0.40600000000000025`, -0.05999999999999983}, {{
           0.29701230228470993`, 0.45694200351493847`}, {0.45694200351493847`,
            0.70298769771529}}}, {
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 2, {-1, 1}, 0.25, 1.9784360000000005`, {0.9, 0.7}, {2.306, 
           0.7400000000000002}, {{0.9991912803851123, 
           0.028426494463303514`}, {0.028426494463303514`, 
           0.0008087196148877297}}}, {
          1, 3, {0, -1}, 0.25, 2.053649, {0.9, 0.7}, {-0.532, 
           0.6449999999999998}, {{0.9985270121622536, 0.03835124697550566}, {
           0.03835124697550566, 0.001472987837746381}}}, {
          1, 3, {1, -1}, 0.25, 3.324248999999999, {0.9, 
           0.7}, {-0.43199999999999994`, 1.9449999999999998`}, {{
           0.533721751890427, -0.49886154737506133`}, {-0.49886154737506133`, 
           0.4662782481095731}}}, {
          1, 2, {1, 0}, 0.25, 3.472036, {0.9, 0.7}, {0.6060000000000002, 
           2.54}, {{
           0.024894903163446426`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365534}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 2, {0, 1}, 0.25, 4.063636000000001, {0.9, 0.7}, {2.406, 2.04}, {{
           0.5581297143740238, 0.49660944041247795`}, {0.49660944041247795`, 
           0.44187028562597636`}}}, {
          1, 3, {-1, -1}, 0.25, 4.1830490000000005`, {0.9, 
           0.7}, {-0.6320000000000001, -0.6550000000000002}, {{
           0.5610797291640619, 0.4962552434838799}, {0.4962552434838799, 
           0.43892027083593815`}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 3, {1, 0}, 0.25, 4.504649, {0.9, 0.7}, {1.468, 2.745}, {{
           0.07162023056624389, 0.2578580484295225}, {0.2578580484295225, 
           0.9283797694337561}}}, {
          1, 3, {-1, 1}, 0.25, 5.203848999999999, {0.9, 0.7}, {
           3.1679999999999997`, 0.9449999999999998}, {{0.9884652686886188, 
           0.10677865556821496`}, {0.10677865556821496`, 
           0.011534731311381241`}}}, {
          1, 2, {0, -1}, 0.25, 5.330035999999998, {0.9, 
           0.7}, {-1.3939999999999997`, 0.44000000000000017`}, {{
           0.9873171588334488, 0.11190168321564802`}, {0.11190168321564802`, 
           0.012682841166551204`}}}, {
          1, 2, {1, -1}, 0.25, 5.895235999999999, {0.9, 
           0.7}, {-1.2939999999999996`, 1.7400000000000002`}, {{
           0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
           0.1834701782931168}}}, {
          1, 3, {0, 1}, 0.25, 7.9944489999999995`, {0.9, 0.7}, {3.268, 
           2.245}, {{0.7014146941208831, 0.45763754325032285`}, {
           0.45763754325032285`, 0.29858530587911697`}}}, {
          1, 2, {-1, -1}, 0.25, 8.164835999999998, {0.9, 
           0.7}, {-1.4939999999999998`, -0.8599999999999999}, {{
           0.7019413494649495, 0.45740539062878915`}, {0.45740539062878915`, 
           0.29805865053505054`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          1, 2, {1, 1}, 0.25, 9.548836000000005, {0.9, 0.7}, {
           2.5060000000000002`, 3.3400000000000003`}, {{0.2701099903695068, 
           0.44401642252521667`}, {0.44401642252521667`, 
           0.7298900096304932}}}, {
          1, 3, {1, 1}, 0.25, 14.185049, {0.9, 0.7}, {3.368, 3.545}, {{
           0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
           0.5706025407455412}}}}, {{
          2, 1, {1, 0}, 0.25, 0.8216359999999995, {0.5060000000000002, 
           1.2400000000000002`}, {1., 2.}, {{0.29701230228470993`, 
           0.45694200351493847`}, {0.45694200351493847`, 
           0.70298769771529}}}, {
          2, 3, {1, -1}, 0.25, 1.3768689999999997`, {0.5060000000000002, 
           1.2400000000000002`}, {-0.43199999999999994`, 
           1.9449999999999998`}, {{
           0.6390179457885975, -0.48028534305006504`}, {-0.48028534305006504`,
            0.36098205421140256`}}}, {
          2, 3, {0, -1}, 0.25, 1.431469000000001, {0.5060000000000002, 
           1.2400000000000002`}, {-0.532, 0.6449999999999998}, {{
           0.7526841307775437, 0.43145188613934365`}, {0.43145188613934365`, 
           0.24731586922245624`}}}, {
          2, 2, {1, 0}, 0.25, 1.6999999999999995`, {0.5060000000000002, 
           1.2400000000000002`}, {0.6060000000000002, 2.54}, {{
           0.005882352941176469, 0.07647058823529411}, {0.07647058823529411, 
           0.9941176470588234}}}, {
          2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.5060000000000002, 
           1.2400000000000002`}, {
           0.40600000000000025`, -0.05999999999999983}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          2, 3, {-1, 0}, 0.25, 1.7796690000000002`, {0.5060000000000002, 
           1.2400000000000002`}, {1.2679999999999998`, 0.1449999999999998}, {{
           0.3262651650391164, -0.4688456111782583}, {-0.4688456111782583, 
           0.6737348349608836}}}, {
          2, 1, {1, -1}, 0.25, 1.9784360000000005`, {0.5060000000000002, 
           1.2400000000000002`}, {-0.8999999999999998, 1.2}, {{
           0.9991912803851123, 0.028426494463303514`}, {0.028426494463303514`,
            0.0008087196148877297}}}, {
          2, 3, {1, 0}, 0.25, 3.1904689999999993`, {0.5060000000000002, 
           1.2400000000000002`}, {1.468, 2.745}, {{0.2900651910424454, 
           0.45379221675559295`}, {0.45379221675559295`, 
           0.7099348089575546}}}, {
          2, 1, {-1, 0}, 0.25, 3.472036000000001, {0.5060000000000002, 
           1.2400000000000002`}, {0.8, -0.6000000000000001}, {{
           0.024894903163446423`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365536}}}, {
          2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
           1.2400000000000002`}, {-1.2939999999999996`, 
           1.7400000000000002`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
           1.2400000000000002`}, {2.306, 0.7400000000000002}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          2, 1, {0, -1}, 0.25, 4.063636000000002, {0.5060000000000002, 
           
           1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.5581297143740237, 0.49660944041247795`}, {
           0.49660944041247795`, 0.44187028562597636`}}}, {
          2, 2, {0, 1}, 0.25, 4.25, {0.5060000000000002, 
           1.2400000000000002`}, {2.406, 2.04}, {{0.8494117647058823, 
           0.3576470588235293}, {0.3576470588235293, 
           0.15058823529411758`}}}, {
          2, 2, {0, -1}, 0.25, 4.25, {0.5060000000000002, 
           1.2400000000000002`}, {-1.3939999999999997`, 
           0.44000000000000017`}, {{0.8494117647058823, 
           0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          2, 3, {-1, -1}, 0.25, 4.886069000000003, {0.5060000000000002, 
           1.2400000000000002`}, {-0.6320000000000001, -0.6550000000000002}, \
{{0.26504824225773316`, 0.4413588919845381}, {0.4413588919845381, 
           0.7349517577422668}}}, {
          2, 1, {0, 1}, 0.25, 5.330035999999998, {0.5060000000000002, 
           1.2400000000000002`}, {2.8, 1.5}, {{0.9873171588334488, 
           0.11190168321564802`}, {0.11190168321564802`, 
           0.012682841166551204`}}}, {
          2, 1, {-1, 1}, 0.25, 5.895235999999999, {0.5060000000000002, 
           1.2400000000000002`}, {2.6999999999999997`, 
           0.19999999999999996`}, {{
           0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
           0.1834701782931168}}}, {
          2, 3, {-1, 1}, 0.25, 7.173268999999998, {0.5060000000000002, 
           1.2400000000000002`}, {3.1679999999999997`, 0.9449999999999998}, {{
           0.9878681532785122, -0.10947449482237473`}, {-0.10947449482237473`,
            0.012131846721487824`}}}, {
          2, 1, {1, 1}, 0.25, 8.164835999999998, {0.5060000000000002, 
           1.2400000000000002`}, {2.9, 2.8}, {{0.7019413494649495, 
           0.45740539062878904`}, {0.45740539062878904`, 
           0.2980586505350505}}}, {
          2, 2, {1, 1}, 0.25, 8.41, {0.5060000000000002, 
           1.2400000000000002`}, {2.5060000000000002`, 
           3.3400000000000003`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          2, 2, {-1, -1}, 0.25, 8.41, {0.5060000000000002, 
           1.2400000000000002`}, {-1.4939999999999998`, -0.8599999999999999}, \
{{0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          2, 3, {0, 1}, 0.25, 8.638668999999997, {0.5060000000000002, 
           1.2400000000000002`}, {3.268, 2.245}, {{0.8830809468449364, 
           0.32132380578535885`}, {0.32132380578535885`, 
           0.1169190531550636}}}, {
          2, 1, {-1, -1}, 0.25, 9.548836000000005, {0.5060000000000002, 
           1.2400000000000002`}, {-1.1, -1.4000000000000001`}, {{
           0.2701099903695068, 0.44401642252521667`}, {0.44401642252521667`, 
           0.7298900096304932}}}, {
          2, 3, {1, 1}, 0.25, 13.504068999999998`, {0.5060000000000002, 
           1.2400000000000002`}, {3.368, 3.545}, {{0.6065611779679146, 
           0.4885127586359341}, {0.4885127586359341, 
           0.3934388220320853}}}}, {{
          3, 1, {1, 0}, 0.25, 0.4434490000000001, {1.3679999999999999`, 
           1.4449999999999998`}, {1., 2.}, {{
           0.3053879927567767, -0.4605715651630739}, {-0.4605715651630739, 
           0.6946120072432233}}}, {
          3, 2, {-1, 1}, 0.25, 1.3768689999999997`, {1.3679999999999999`, 
           1.4449999999999998`}, {2.306, 0.7400000000000002}, {{
           0.6390179457885975, -0.48028534305006504`}, {-0.48028534305006504`,
            0.36098205421140256`}}}, {
          3, 2, {0, 1}, 0.25, 1.4314690000000008`, {1.3679999999999999`, 
           1.4449999999999998`}, {2.406, 2.04}, {{0.7526841307775438, 
           0.43145188613934354`}, {0.43145188613934354`, 
           0.24731586922245613`}}}, {
          3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3679999999999999`, 
           1.4449999999999998`}, {1.468, 2.745}, {{0.005882352941176479, 
           0.07647058823529418}, {0.07647058823529418, 
           0.9941176470588236}}}, {
          3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3679999999999999`, 
           1.4449999999999998`}, {1.2679999999999998`, 0.1449999999999998}, {{
           0.00588235294117648, 0.07647058823529418}, {0.07647058823529418, 
           0.9941176470588234}}}, {
          3, 2, {1, 0}, 0.25, 1.779669, {1.3679999999999999`, 
           1.4449999999999998`}, {0.6060000000000002, 2.54}, {{
           0.32626516503911657`, -0.4688456111782583}, {-0.4688456111782583, 
           0.6737348349608835}}}, {
          3, 1, {0, 1}, 0.25, 2.053649, {1.3679999999999999`, 
           1.4449999999999998`}, {2.8, 1.5}, {{0.9985270121622536, 
           0.03835124697550566}, {0.03835124697550566, 
           0.001472987837746381}}}, {
          3, 2, {-1, 0}, 0.25, 3.1904689999999984`, {1.3679999999999999`, 
           1.4449999999999998`}, {
           0.40600000000000025`, -0.05999999999999983}, {{0.2900651910424454, 
           0.45379221675559295`}, {0.45379221675559295`, 
           0.7099348089575547}}}, {
          3, 1, {-1, 1}, 0.25, 3.324248999999999, {1.3679999999999999`, 
           1.4449999999999998`}, {2.6999999999999997`, 
           0.19999999999999996`}, {{
           0.533721751890427, -0.49886154737506133`}, {-0.49886154737506133`, 
           0.4662782481095731}}}, {
          3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
           1.4449999999999998`}, {-0.43199999999999994`, 
           1.9449999999999998`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          3, 3, {-1, 1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
           1.4449999999999998`}, {3.1679999999999997`, 0.9449999999999998}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          3, 1, {1, 1}, 0.25, 4.1830490000000005`, {1.3679999999999999`, 
           1.4449999999999998`}, {2.9, 2.8}, {{0.5610797291640619, 
           0.4962552434838798}, {0.4962552434838798, 
           0.43892027083593804`}}}, {
          3, 3, {0, 1}, 0.25, 4.25, {1.3679999999999999`, 
           1.4449999999999998`}, {3.268, 2.245}, {{0.8494117647058823, 
           0.35764705882352954`}, {0.35764705882352954`, 
           0.15058823529411774`}}}, {
          3, 3, {0, -1}, 0.25, 4.25, {1.3679999999999999`, 
           1.4449999999999998`}, {-0.532, 0.6449999999999998}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          3, 1, {-1, 0}, 0.25, 4.504648999999999, {1.3679999999999999`, 
           1.4449999999999998`}, {0.8, -0.6000000000000001}, {{
           0.07162023056624386, 0.2578580484295225}, {0.2578580484295225, 
           0.9283797694337562}}}, {
          3, 2, {1, 1}, 0.25, 4.886069000000003, {1.3679999999999999`, 
           1.4449999999999998`}, {2.5060000000000002`, 
           3.3400000000000003`}, {{0.26504824225773316`, 
           0.4413588919845381}, {0.4413588919845381, 0.7349517577422668}}}, {
          3, 1, {1, -1}, 0.25, 5.203848999999999, {1.3679999999999999`, 
           1.4449999999999998`}, {-0.8999999999999998, 1.2}, {{
           0.9884652686886188, 0.10677865556821496`}, {0.10677865556821496`, 
           0.011534731311381241`}}}, {
          3, 2, {1, -1}, 0.25, 7.173268999999998, {1.3679999999999999`, 
           1.4449999999999998`}, {-1.2939999999999996`, 
           1.7400000000000002`}, {{
           0.9878681532785122, -0.10947449482237473`}, {-0.10947449482237473`,
            0.012131846721487824`}}}, {
          3, 1, {0, -1}, 0.25, 7.9944489999999995`, {1.3679999999999999`, 
           1.4449999999999998`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7014146941208831, 0.4576375432503228}, {
           0.4576375432503228, 0.2985853058791169}}}, {
          3, 3, {1, 1}, 0.25, 8.41, {1.3679999999999999`, 
           1.4449999999999998`}, {3.368, 3.545}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          3, 3, {-1, -1}, 0.25, 8.41, {1.3679999999999999`, 
           1.4449999999999998`}, {-0.6320000000000001, -0.6550000000000002}, \
{{0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}, {
          3, 2, {0, -1}, 0.25, 8.638668999999997, {1.3679999999999999`, 
           1.4449999999999998`}, {-1.3939999999999997`, 
           0.44000000000000017`}, {{0.8830809468449364, 0.3213238057853588}, {
           0.3213238057853588, 0.11691905315506354`}}}, {
          3, 2, {-1, -1}, 0.25, 13.504068999999998`, {1.3679999999999999`, 
           1.4449999999999998`}, {-1.4939999999999998`, -0.8599999999999999}, \
{{0.6065611779679146, 0.4885127586359341}, {0.4885127586359341, 
           0.3934388220320853}}}, {
          3, 1, {-1, -1}, 0.25, 14.185049, {1.3679999999999999`, 
           1.4449999999999998`}, {-1.1, -1.4000000000000001`}, {{
           0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
           0.5706025407455412}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        True, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{{
            1, 2, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
             0.5060000000000002, 1.2400000000000002`}, {{
             0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109,
              0.6525884217028176}}}, {
            1, 3, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
             1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
             0.45043660026690807`}, {0.45043660026690807`, 
             0.7170411692283046}}}}, {{
            2, 1, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
             0.5060000000000002, 1.2400000000000002`}, {{
             0.34741157829718244`, -0.4761478484276109}, {-0.4761478484276109,
              0.6525884217028176}}}, {
            2, 3, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
             1.2400000000000002`}, {1.3679999999999999`, 
             1.4449999999999998`}, {{0.9464696733662902, 
             0.22508849540613599`}, {0.22508849540613599`, 
             0.053530326633709754`}}}}, {{
            3, 1, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
             1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952, 
             0.45043660026690807`}, {0.45043660026690807`, 
             0.7170411692283046}}}, {
            3, 2, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
             1.2400000000000002`}, {1.3679999999999999`, 
             1.4449999999999998`}, {{0.9464696733662902, 
             0.22508849540613599`}, {0.22508849540613599`, 
             0.053530326633709754`}}}}}, {{{
            1, 3, {-1, 0}, 0.25, 0.443449, {0.9, 0.7}, {1.2679999999999998`, 
             0.1449999999999998}, {{
             0.3053879927567766, -0.4605715651630738}, {-0.4605715651630738, 
             0.6946120072432234}}}, {
            1, 2, {-1, 0}, 0.25, 0.8216359999999995, {0.9, 0.7}, {
             0.40600000000000025`, -0.05999999999999983}, {{
             0.29701230228470993`, 0.45694200351493847`}, {
             0.45694200351493847`, 0.70298769771529}}}, {
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 2, {-1, 1}, 0.25, 1.9784360000000005`, {0.9, 0.7}, {2.306, 
             0.7400000000000002}, {{0.9991912803851123, 
             0.028426494463303514`}, {0.028426494463303514`, 
             0.0008087196148877297}}}, {
            1, 3, {0, -1}, 0.25, 2.053649, {0.9, 0.7}, {-0.532, 
             0.6449999999999998}, {{0.9985270121622536, 
             0.03835124697550566}, {0.03835124697550566, 
             0.001472987837746381}}}, {
            1, 3, {1, -1}, 0.25, 3.324248999999999, {0.9, 
             0.7}, {-0.43199999999999994`, 1.9449999999999998`}, {{
             0.533721751890427, -0.49886154737506133`}, \
{-0.49886154737506133`, 0.4662782481095731}}}, {
            1, 2, {1, 0}, 0.25, 3.472036, {0.9, 0.7}, {0.6060000000000002, 
             2.54}, {{
             0.024894903163446426`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365534}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 2, {0, 1}, 0.25, 4.063636000000001, {0.9, 0.7}, {2.406, 
             2.04}, {{0.5581297143740238, 0.49660944041247795`}, {
             0.49660944041247795`, 0.44187028562597636`}}}, {
            1, 3, {-1, -1}, 0.25, 4.1830490000000005`, {0.9, 
             0.7}, {-0.6320000000000001, -0.6550000000000002}, {{
             0.5610797291640619, 0.4962552434838799}, {0.4962552434838799, 
             0.43892027083593815`}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 3, {1, 0}, 0.25, 4.504649, {0.9, 0.7}, {1.468, 2.745}, {{
             0.07162023056624389, 0.2578580484295225}, {0.2578580484295225, 
             0.9283797694337561}}}, {
            1, 3, {-1, 1}, 0.25, 5.203848999999999, {0.9, 0.7}, {
             3.1679999999999997`, 0.9449999999999998}, {{0.9884652686886188, 
             0.10677865556821496`}, {0.10677865556821496`, 
             0.011534731311381241`}}}, {
            1, 2, {0, -1}, 0.25, 5.330035999999998, {0.9, 
             0.7}, {-1.3939999999999997`, 0.44000000000000017`}, {{
             0.9873171588334488, 0.11190168321564802`}, {0.11190168321564802`,
              0.012682841166551204`}}}, {
            1, 2, {1, -1}, 0.25, 5.895235999999999, {0.9, 
             0.7}, {-1.2939999999999996`, 1.7400000000000002`}, {{
             0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
             0.1834701782931168}}}, {
            1, 3, {0, 1}, 0.25, 7.9944489999999995`, {0.9, 0.7}, {3.268, 
             2.245}, {{0.7014146941208831, 0.45763754325032285`}, {
             0.45763754325032285`, 0.29858530587911697`}}}, {
            1, 2, {-1, -1}, 0.25, 8.164835999999998, {0.9, 
             0.7}, {-1.4939999999999998`, -0.8599999999999999}, {{
             0.7019413494649495, 0.45740539062878915`}, {0.45740539062878915`,
              0.29805865053505054`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            1, 2, {1, 1}, 0.25, 9.548836000000005, {0.9, 0.7}, {
             2.5060000000000002`, 3.3400000000000003`}, {{0.2701099903695068, 
             0.44401642252521667`}, {0.44401642252521667`, 
             0.7298900096304932}}}, {
            1, 3, {1, 1}, 0.25, 14.185049, {0.9, 0.7}, {3.368, 3.545}, {{
             0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
             0.5706025407455412}}}}, {{
            2, 1, {1, 0}, 0.25, 0.8216359999999995, {0.5060000000000002, 
             1.2400000000000002`}, {1., 2.}, {{0.29701230228470993`, 
             0.45694200351493847`}, {0.45694200351493847`, 
             0.70298769771529}}}, {
            2, 3, {1, -1}, 0.25, 1.3768689999999997`, {0.5060000000000002, 
             1.2400000000000002`}, {-0.43199999999999994`, 
             1.9449999999999998`}, {{
             0.6390179457885975, -0.48028534305006504`}, \
{-0.48028534305006504`, 0.36098205421140256`}}}, {
            2, 3, {0, -1}, 0.25, 1.431469000000001, {0.5060000000000002, 
             1.2400000000000002`}, {-0.532, 0.6449999999999998}, {{
             0.7526841307775437, 0.43145188613934365`}, {0.43145188613934365`,
              0.24731586922245624`}}}, {
            2, 2, {1, 0}, 0.25, 1.6999999999999995`, {0.5060000000000002, 
             1.2400000000000002`}, {0.6060000000000002, 2.54}, {{
             0.005882352941176469, 0.07647058823529411}, {0.07647058823529411,
              0.9941176470588234}}}, {
            2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.5060000000000002, 
             1.2400000000000002`}, {
             0.40600000000000025`, -0.05999999999999983}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            2, 3, {-1, 0}, 0.25, 1.7796690000000002`, {0.5060000000000002, 
             1.2400000000000002`}, {1.2679999999999998`, 
             0.1449999999999998}, {{
             0.3262651650391164, -0.4688456111782583}, {-0.4688456111782583, 
             0.6737348349608836}}}, {
            2, 1, {1, -1}, 0.25, 1.9784360000000005`, {0.5060000000000002, 
             1.2400000000000002`}, {-0.8999999999999998, 1.2}, {{
             0.9991912803851123, 0.028426494463303514`}, {
             0.028426494463303514`, 0.0008087196148877297}}}, {
            2, 3, {1, 0}, 0.25, 3.1904689999999993`, {0.5060000000000002, 
             1.2400000000000002`}, {1.468, 2.745}, {{0.2900651910424454, 
             0.45379221675559295`}, {0.45379221675559295`, 
             0.7099348089575546}}}, {
            2, 1, {-1, 0}, 0.25, 3.472036000000001, {0.5060000000000002, 
             1.2400000000000002`}, {0.8, -0.6000000000000001}, {{
             0.024894903163446423`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365536}}}, {
            2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
             1.2400000000000002`}, {-1.2939999999999996`, 
             1.7400000000000002`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
             1.2400000000000002`}, {2.306, 0.7400000000000002}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            2, 1, {0, -1}, 0.25, 4.063636000000002, {0.5060000000000002, 
             1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.5581297143740237, 0.49660944041247795`}, {
             0.49660944041247795`, 0.44187028562597636`}}}, {
            2, 2, {0, 1}, 0.25, 4.25, {0.5060000000000002, 
             1.2400000000000002`}, {2.406, 2.04}, {{0.8494117647058823, 
             0.3576470588235293}, {0.3576470588235293, 
             0.15058823529411758`}}}, {
            2, 2, {0, -1}, 0.25, 4.25, {0.5060000000000002, 
             1.2400000000000002`}, {-1.3939999999999997`, 
             0.44000000000000017`}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            2, 3, {-1, -1}, 0.25, 4.886069000000003, {0.5060000000000002, 
             1.2400000000000002`}, {-0.6320000000000001, \
-0.6550000000000002}, {{0.26504824225773316`, 0.4413588919845381}, {
             0.4413588919845381, 0.7349517577422668}}}, {
            2, 1, {0, 1}, 0.25, 5.330035999999998, {0.5060000000000002, 
             1.2400000000000002`}, {2.8, 1.5}, {{0.9873171588334488, 
             0.11190168321564802`}, {0.11190168321564802`, 
             0.012682841166551204`}}}, {
            2, 1, {-1, 1}, 0.25, 5.895235999999999, {0.5060000000000002, 
             1.2400000000000002`}, {2.6999999999999997`, 
             0.19999999999999996`}, {{
             0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
             0.1834701782931168}}}, {
            2, 3, {-1, 1}, 0.25, 7.173268999999998, {0.5060000000000002, 
             1.2400000000000002`}, {3.1679999999999997`, 
             0.9449999999999998}, {{
             0.9878681532785122, -0.10947449482237473`}, \
{-0.10947449482237473`, 0.012131846721487824`}}}, {
            2, 1, {1, 1}, 0.25, 8.164835999999998, {0.5060000000000002, 
             1.2400000000000002`}, {2.9, 2.8}, {{0.7019413494649495, 
             0.45740539062878904`}, {0.45740539062878904`, 
             0.2980586505350505}}}, {
            2, 2, {1, 1}, 0.25, 8.41, {0.5060000000000002, 
             1.2400000000000002`}, {2.5060000000000002`, 
             3.3400000000000003`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            2, 2, {-1, -1}, 0.25, 8.41, {0.5060000000000002, 
             1.2400000000000002`}, {-1.4939999999999998`, \
-0.8599999999999999}, {{0.4756242568370987, 0.49940546967895366`}, {
             0.49940546967895366`, 0.5243757431629014}}}, {
            2, 3, {0, 1}, 0.25, 8.638668999999997, {0.5060000000000002, 
             1.2400000000000002`}, {3.268, 2.245}, {{0.8830809468449364, 
             0.32132380578535885`}, {0.32132380578535885`, 
             0.1169190531550636}}}, {
            2, 1, {-1, -1}, 0.25, 9.548836000000005, {0.5060000000000002, 
             1.2400000000000002`}, {-1.1, -1.4000000000000001`}, {{
             0.2701099903695068, 0.44401642252521667`}, {0.44401642252521667`,
              0.7298900096304932}}}, {
            2, 3, {1, 1}, 0.25, 13.504068999999998`, {0.5060000000000002, 
             1.2400000000000002`}, {3.368, 3.545}, {{0.6065611779679146, 
             0.4885127586359341}, {0.4885127586359341, 
             0.3934388220320853}}}}, {{
            3, 1, {1, 0}, 0.25, 0.4434490000000001, {1.3679999999999999`, 
             1.4449999999999998`}, {1., 2.}, {{
             0.3053879927567767, -0.4605715651630739}, {-0.4605715651630739, 
             0.6946120072432233}}}, {
            3, 2, {-1, 1}, 0.25, 1.3768689999999997`, {1.3679999999999999`, 
             1.4449999999999998`}, {2.306, 0.7400000000000002}, {{
             0.6390179457885975, -0.48028534305006504`}, \
{-0.48028534305006504`, 0.36098205421140256`}}}, {
            3, 2, {0, 1}, 0.25, 1.4314690000000008`, {1.3679999999999999`, 
             1.4449999999999998`}, {2.406, 2.04}, {{0.7526841307775438, 
             0.43145188613934354`}, {0.43145188613934354`, 
             0.24731586922245613`}}}, {
            3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3679999999999999`, 
             1.4449999999999998`}, {1.468, 2.745}, {{0.005882352941176479, 
             0.07647058823529418}, {0.07647058823529418, 
             0.9941176470588236}}}, {
            3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3679999999999999`, 
             1.4449999999999998`}, {1.2679999999999998`, 
             0.1449999999999998}, {{0.00588235294117648, 
             0.07647058823529418}, {0.07647058823529418, 
             0.9941176470588234}}}, {
            3, 2, {1, 0}, 0.25, 1.779669, {1.3679999999999999`, 
             1.4449999999999998`}, {0.6060000000000002, 2.54}, {{
             0.32626516503911657`, -0.4688456111782583}, {-0.4688456111782583,
              0.6737348349608835}}}, {
            3, 1, {0, 1}, 0.25, 2.053649, {1.3679999999999999`, 
             1.4449999999999998`}, {2.8, 1.5}, {{0.9985270121622536, 
             0.03835124697550566}, {0.03835124697550566, 
             0.001472987837746381}}}, {
            3, 2, {-1, 0}, 0.25, 3.1904689999999984`, {1.3679999999999999`, 
             1.4449999999999998`}, {
             0.40600000000000025`, -0.05999999999999983}, {{
             0.2900651910424454, 0.45379221675559295`}, {0.45379221675559295`,
              0.7099348089575547}}}, {
            3, 1, {-1, 1}, 0.25, 3.324248999999999, {1.3679999999999999`, 
             1.4449999999999998`}, {2.6999999999999997`, 
             0.19999999999999996`}, {{
             0.533721751890427, -0.49886154737506133`}, \
{-0.49886154737506133`, 0.4662782481095731}}}, {
            3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
             1.4449999999999998`}, {-0.43199999999999994`, 
             1.9449999999999998`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            3, 3, {-1, 1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
             1.4449999999999998`}, {3.1679999999999997`, 
             0.9449999999999998}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            3, 1, {1, 1}, 0.25, 4.1830490000000005`, {1.3679999999999999`, 
             1.4449999999999998`}, {2.9, 2.8}, {{0.5610797291640619, 
             0.4962552434838798}, {0.4962552434838798, 
             0.43892027083593804`}}}, {
            3, 3, {0, 1}, 0.25, 4.25, {1.3679999999999999`, 
             1.4449999999999998`}, {3.268, 2.245}, {{0.8494117647058823, 
             0.35764705882352954`}, {0.35764705882352954`, 
             0.15058823529411774`}}}, {
            3, 3, {0, -1}, 0.25, 4.25, {1.3679999999999999`, 
             1.4449999999999998`}, {-0.532, 0.6449999999999998}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            3, 1, {-1, 0}, 0.25, 4.504648999999999, {1.3679999999999999`, 
             1.4449999999999998`}, {0.8, -0.6000000000000001}, {{
             0.07162023056624386, 0.2578580484295225}, {0.2578580484295225, 
             0.9283797694337562}}}, {
            3, 2, {1, 1}, 0.25, 4.886069000000003, {1.3679999999999999`, 
             1.4449999999999998`}, {2.5060000000000002`, 
             3.3400000000000003`}, {{0.26504824225773316`, 
             0.4413588919845381}, {0.4413588919845381, 
             0.7349517577422668}}}, {
            3, 1, {1, -1}, 0.25, 5.203848999999999, {1.3679999999999999`, 
             1.4449999999999998`}, {-0.8999999999999998, 1.2}, {{
             0.9884652686886188, 0.10677865556821496`}, {0.10677865556821496`,
              0.011534731311381241`}}}, {
            3, 2, {1, -1}, 0.25, 7.173268999999998, {1.3679999999999999`, 
             1.4449999999999998`}, {-1.2939999999999996`, 
             1.7400000000000002`}, {{
             0.9878681532785122, -0.10947449482237473`}, \
{-0.10947449482237473`, 0.012131846721487824`}}}, {
            3, 1, {0, -1}, 0.25, 7.9944489999999995`, {1.3679999999999999`, 
             1.4449999999999998`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7014146941208831, 0.4576375432503228}, {
             0.4576375432503228, 0.2985853058791169}}}, {
            3, 3, {1, 1}, 0.25, 8.41, {1.3679999999999999`, 
             1.4449999999999998`}, {3.368, 3.545}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}, {
            3, 3, {-1, -1}, 0.25, 8.41, {1.3679999999999999`, 
             1.4449999999999998`}, {-0.6320000000000001, \
-0.6550000000000002}, {{0.4756242568370987, 0.49940546967895366`}, {
             0.49940546967895366`, 0.5243757431629014}}}, {
            3, 2, {0, -1}, 0.25, 8.638668999999997, {1.3679999999999999`, 
             1.4449999999999998`}, {-1.3939999999999997`, 
             0.44000000000000017`}, {{0.8830809468449364, 
             0.3213238057853588}, {0.3213238057853588, 
             0.11691905315506354`}}}, {
            3, 2, {-1, -1}, 0.25, 13.504068999999998`, {1.3679999999999999`, 
             1.4449999999999998`}, {-1.4939999999999998`, \
-0.8599999999999999}, {{0.6065611779679146, 0.4885127586359341}, {
             0.4885127586359341, 0.3934388220320853}}}, {
            3, 1, {-1, -1}, 0.25, 14.185049, {1.3679999999999999`, 
             1.4449999999999998`}, {-1.1, -1.4000000000000001`}, {{
             0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
             0.5706025407455412}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.8170832666604735, 8.555796124624313*^-19], {
            Complex[-0.1551466195070449, -0.02928694300950744], 
            Complex[-0.08034259694988509, -0.00047175640050472513`], 
            Complex[0.8375380350719087, 0.], 
            Complex[0.4666355190468595, -0.0004985640370077093], 
            Complex[-0.20310748883587712`, -0.016903168364508586`], 
            Complex[-0.08814336401214015, -0.009492515485614628]}}, {
           Complex[0.5876992109976588, 1.2550461617911596`*^-17], {
            Complex[0.10265545213610033`, 0.01483166503182088], 
            Complex[-0.21926883764259486`, 0.07211151289527805], 
            Complex[-0.44542014763984, 0.0003393634361678888], 
            Complex[0.837302840746496, 0.], 
            Complex[0.14543310652579094`, -0.026179799756868828`], 
            Complex[-0.11853612578393895`, 0.024509848792435757`]}}, {
           Complex[0.46308591274793803`, 9.388726924165144*^-19], {
            Complex[0.5856965084947664, 0.], 
            Complex[0.37149697558513206`, -0.047522142498678935`], 
            Complex[-0.06211177295084582, -0.014137478667721927`], 
            Complex[0.03996101664200798, 0.020361651823961217`], 
            Complex[-0.5801299379883637, 0.03228994210021736], 
            Complex[-0.4156269741507784, -0.016818315292689935`]}}, {
           Complex[0.33746419191058674`, 9.388615370724266*^-18], {
            Complex[0.38146658921800886`, 0.05867346593832412], 
            Complex[-0.5610351649694442, 0.08522274989831861], 
            Complex[0.007921615183111227, 0.031953466545772934`], 
            Complex[-0.040380406555232076`, 0.002172503405046786], 
            Complex[-0.4043648162058401, 0.10588784082140093`], 
            Complex[0.5929376694372075, 0.]}}, {
           Complex[0.2268905294295152, -1.491178032519196*^-17], {
            Complex[0.4247651258483777, 0.14288020541835011`], 
            Complex[0.5343128700236054, 0.], 
            Complex[0.18821994764138578`, 0.0023787190037572736`], 
            Complex[0.1818142885917423, 0.050085365393960156`], 
            Complex[0.4094698788934038, 0.06660749867566884], 
            Complex[0.49505966937432855`, 0.1596433164618535]}}, {
           Complex[0.09769781217756833, 1.0536612858016284`*^-17], {
            Complex[0.5210314594039757, 0.], 
            Complex[-0.43483974904981604`, 0.0582955431607703], 
            Complex[0.24346672484530527`, -0.016758489256039517`], 
            Complex[-0.20360512711838424`, -0.022543132064595378`], 
            Complex[0.49483735325357797`, -0.085690075171752], 
            
            Complex[-0.4183948693713216, 
             0.08521176602931739]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
          "], {21.1, 5.2, 20}, 3, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                 "]], 
                Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                 "]], 
                Polygon[CompressedData["
1:eJwtmQe4FeXVRs+9c2bOAQVEFMFKVUFQQUCwYcPe/WOMURNbojG2iD2JsbfE
WGKJmugfe4siooKKgF0siKigIFbADiiCgJC1nr15nuHOmm/a+cq7372n+5En
HXBia41//Ffnz8FlrTaWv6/D8xu12u/gMfDXcNGs1U6GX4CXwW3gx6s4fzb8
I+dPht+G+xe1Wk/az+f8t+Du8LrwX+Cp8ELOX8T5D8BfwcNp35z2w+Gn4Gm0
f0f7HvCD8BR4AfxXeAbci/PX5/yz4FfhnvAG8Enw8/Aizq/gE+Hn4AVwI9n2
9+HF3O9o+Bn4I3gpfDw8KX9vK+cP5ffs1FKrbUfnPAv/mvaXaJ9L+wrOHw8v
hQ/l+dvR/gy8DP4NvBt8G/wpfCC8LfwsvAI+E94GHsF2TBHn78L+f2j/jPbD
4Z3gifBy+Fh4V/hKtpnsz2K7iv2naf+R9kPg4fBd8Fz4OHh3+O/w+/Dm8Ebw
I/ACeD94GHwf/AV8ALw1fC88Dz4J3hven+2MIt73APZfpH0l7X+GD4QnwT/B
f4D3ha+DP8zxXg9uYZvXGn12ahl9at86p44pY749keMxM8fEfY+Noe8Ppf1J
9qdybCFtR8Hj4VnwkkaM9ws5/2bmHHTfY85Vx9SxfQT+RRlzyLk0Dt7dvoU/
bo058Jsy5pxz7yF4NM+v8b5fwi/bp2WMuWPvO/lux7JNZP9zjq1sxBrx9zmH
fk/bKvDKvL9z7U9sr7M/gP7pS9v3XPN2a8z5X9F2Bttk9n/kWJP2W+BP4E1z
PV0AT4M3grvBf4Pfg/vC3eHJ9jHz9Sr4V/B03wG+ET4afhluga+ED4UP8x5F
8OHsv0t7W9qvgX8Nz877jYJHwuPgRTzvWvgo+DF4IXwB/At4Ctzg/Ivgg+G3
4CZ8MfzzbK/g2+Hfwa/BdfhW+LfwK/l+D8KnwNPy+vvhk+HP4TXhe+AT4E/h
DvA0+FJ4Qq6/K+Bfwh/C7Wm/Dz4JXjXHQ82YwPh+lO2v034hbcvhXvC78OXN
0KcvOfccuD/8ZhXrY294aM732alfm+V4fQzvCQ+Br4FnwVvD/eCz4dfgPnAP
+8N3gHeFB8FvVLH+d4AHwLM4f1XeZxL8R3gJ3B1+Hv4z/C3cpSU0QW1ocv0m
8Fj4r/CPtPeAJ8MXqL/2cRF8HvvLaO9J+2vw+fBPcG94BnwZ/B3365rPPwf+
gPa14NHw6c3QFLVlM7bezZijar99YF/0SjYmvFyF3nzO/mkc2y/1aD58CrwP
/FTqk5qj9tya83t3eDD8b/jb7N8t4alVrI99U8/UzznwCHgL+zPn27nw/8Gj
8vrj4T3gd7j+O/io1Nt+8Lac3w+9fxJeG94OXgseBfeBt4E3hsfCM+BvaqHh
avmd+XzvtzN8DzwT3j/19cGMd7+Ed4T/C3/t2od3gHtwv6Hcf23uPzr1+PO8
fivfF67Rfm/O53lVxIerc70upr0b7U/Cx7o+qohPF+X6e5L2H+B/GnPgL6rQ
7xtSH25M/d4JHgi/Chfc7yb4GON9Gf11CXwI/Dz8fS00RC2ZC3fK9X18zt92
+b4nwt9UoQ935/p9KX/PhfBBqQc+bwx8Rq7v1eBHUn/m5f3Hw2elXrWBH875
OD31y/l5WjM0VW1Vw9XyDXn+VrR3o3/HwIPhHeGt4UnwOmwbFKEPZ5bhWYxl
9slFcGe4I/yGMRBeG17fWMfWlf1Dyogtxpg32HaDH0g/JXfxGUV4oOeriJHr
FqEhask5GR9W4Vgn2lZ3TbPfYOvYjJgxOJ9vLOkDb1HEGriqDA3aPt/X++mp
huf9X69Cw35WxBxU2/R4vpvvOKoK/zMxn78q26acP6wID6OXWYtzBtJf69Bf
j9LWGx4GD4bvgFeB+8F1+G74JraFXP8d283sl7T3oX0RfAtcwBu3RPs/1RJ4
ODyI65+BB8Lbw1vCE9Q73vcV3vdx3ufnvE/HRvizTWl/ivalqXfzud+N8IIy
9GsOfC28yDGFl8C3Gg/sE7jB9XfB9XyfjvCD8GrwZnAH+AG4Pbwh3Aa+F+4E
D4CXc7//h2tV6Gcr7XfCHfL6L2n/Rz5vU/gL+Dr46tSHgfDG8HOOH9eO4Jxh
nHst7e/WYgwcC+eYc02PcG4ZGqPWuCanVzEnnBsdc/ycb535+wHH/uH4+c7w
Gmxrs13CsXdqMYecS2Mzvuv/9oLX8Dew/wrHRhp74bap5xeX4RFPLkKj1Co9
eO8iYtxZuT58zuXsX1GGBqvFetYPq/AsGxbh6fUyehq9jTHx0jJi1otFxDxj
2U0ZX40pxhbvOb0Wa9Bn6Tn+UoTm6zVc493pz61bYu0bU42tXuO1PnNGxotd
Mkaczd+yJWLHz+DzivA4Y3J9Dc/1c30ZGnhZERqoNhrDjeXGhIfK8CB6ET3M
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                 "]], 
                Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
               "]]}, {
              Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
               1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
               1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
               1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
               1334}], 
              
              Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149,
                1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 
               1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 
               1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
              
              Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150,
                1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 
               1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 
               1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
              
              Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
               1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
               1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
               1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
              
              Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
               1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
               1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
               1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
               1339}], 
              
              Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
               1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
               1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
               1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
               1340}], 
              
              Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
               1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
               1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
               1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
              
              Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
               1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
               1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
               1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
              
              Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
               1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
               1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
               1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
              
              Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
               1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
               1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
               1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
              
              Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165,
                1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 
               1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 
               1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
              
              Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
               1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
               1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
               1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
               1348}], 
              
              Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
               1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
               1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
               1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
              
              Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
               1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
               1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
               1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
              
              Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
               1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
               1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
               1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
               1102}], 
              
              Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
               2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
               2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
               2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
               1594}], 
              
              Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409,
                1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 
               1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 
               1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
              
              Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410,
                2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 
               1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 
               1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
              
              Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
               2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
               2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
               2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
              
              Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
               2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
               2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
               2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
               1599}], 
              
              Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
               2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
               2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
               2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
               1600}], 
              
              Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
               2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
               2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
               2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
              
              Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
               2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
               2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
               2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
              
              Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
               2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
               1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
               1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
              
              Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
               2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
               2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
               2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
              
              Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425,
                1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 
               1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 
               1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
              
              Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
               2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
               2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
               2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
               1608}], 
              
              Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
               1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
               1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
               1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
              
              Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
               1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
               1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
               1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
              Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
               1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
               1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
               1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
               1362}]}, {
              
              Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599,
                594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 
               1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 
               560, 557, 1940, 556, 1941, 553, 581}], 
              
              Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566,
                563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 
               1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 
               526, 1922, 521, 520, 1918, 515, 554}], 
              
              Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
               1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
               358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371,
                1836, 374, 1837, 375, 377}], 
              
              Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
               1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
               386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405,
                410, 1856, 411, 414}], 
              
              Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847,
                396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 
               1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 
               440, 442, 1876, 446, 1877, 448, 451}], 
              
              Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435,
                1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 
               407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385,
                383, 379, 1823, 417}], 
              
              Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866,
                433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 
               1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471,
                1892, 474, 1893, 475, 477}], 
              
              Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886,
                465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 
               1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 
               504, 1911, 505, 510, 1914, 511, 514}], 
              
              Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903,
                496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 
               1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 
               540, 1933, 542, 546, 1936, 548, 551}], 
              
              Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535,
                1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 
               509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489,
                485, 1896, 483, 1897, 479, 517}], 
              
              Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636,
                1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 
               1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 
               590, 1960, 586, 584, 580, 1938, 618}], 
              
              Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666,
                663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 
               1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 
               627, 1983, 622, 621, 1979, 616, 654}], 
              
              Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962,
                597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 
               619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641,
                1993, 643, 647, 1997, 649, 577}], 
              
              Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
               2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
               2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
               2000, 656, 2001, 653, 679}], 
              
              Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
               2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694,
                2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 
               678, 1998, 702}], 
              
              Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974,
                969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 
               2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 
               935, 932, 2154, 931, 2155, 928, 956}], 
              
              Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941,
                938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 
               2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 
               901, 2136, 896, 895, 2132, 890, 929}], 
              
              Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
               2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
               733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746,
                2050, 749, 2051, 750, 752}], 
              
              Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
               2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
               761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780,
                785, 2070, 786, 789}], 
              
              Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061,
                771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 
               2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 
               815, 817, 2090, 821, 2091, 823, 826}], 
              
              Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810,
                2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 
               782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760,
                758, 754, 2037, 792}], 
              
              Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080,
                808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 
               2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846,
                2106, 849, 2107, 850, 852}], 
              
              Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100,
                840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 
               2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 
               879, 2125, 880, 885, 2128, 886, 889}], 
              
              Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117,
                871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 
               2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 
               915, 2147, 917, 921, 2150, 923, 926}], 
              
              Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910,
                2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 
               884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864,
                860, 2110, 858, 2111, 854, 892}], 
              
              Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203,
                1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989,
                985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 
               967, 965, 2174, 961, 959, 955, 2152, 993}], 
              
              Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221,
                1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 
               1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 
               1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
              
              Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176,
                972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 
               994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206,
                1016, 2207, 1018, 1022, 2211, 1024, 952}], 
              
              Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
               1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
               1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
               1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
              
              Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
               1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
               1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
               2231, 1060, 1057, 2229, 1056, 1053, 2212, 
               1077}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0., 0.49488850049789845`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
          0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
          0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
          0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
          0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
          0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
          0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
          0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
          0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
          0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
          0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
          0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
          0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
          0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
          0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
          0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
          0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
          0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
          0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
          0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
          0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
          0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
          0.24, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
          0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
          0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
          0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
          0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
          0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
          0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
          0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
          0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
          0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
          0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
          0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 
          0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
        3, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$19800, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        3, $CellContext`omegaIndex$$ = 
        3, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {21.1, 5.2, 20}, "numberOfMasses" -> 3, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
           0.8164016736401674, 0.22334728033472817`}, {0.6908368200836819, 
           0.6836401673640167}}, 
          "mPosFirstCell" -> {{0.9, 0.7}, {0.5060000000000002, 
           1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}}, 
          "pointsDataTable" -> CompressedData["
1:eJw9UE1IlGEQ/nZddf1YxIN4EJGCCKEoYusgKjPgQY0k1i4R0kHKOgSJRYjs
QUFJEJEOktqhJTEQQhbqoBGNSIein0Nlaj/YssvKppnrurvKQus7M7sODMPM
877PPPMc7bjddr3AsizOUpNOk2e9HAmanOAoXOiUiMINqf/p4wcOFyoep3xV
PJXrY6A8YZpQHhyX+g6yEv8oIP18jm8T8nu0FqElsQfvFSev6gKdb+eqhTov
xvw/3RcjhQ915nhtrDz961hR/z41h3rLZ5scC15ux77AYrKmfXQxSd8/pS+F
px34xzdXPbgRor6xxuFb62ka2JABTXKbWYWAaXxzs/T00ZsjwW4nBpuYcB2i
mZn459YUnWS2mp9gLfXEjp/5DStTXQ32cgLu3Hzw1w8F2MZsPgsvdJRdrn2x
S4pnwOt+VnXlWhgUdyGeu/qyxePCedln4/O3914/rkyQ4m7srFu7OPIwCoqX
ortfBNN5uS9L4WkWuAN+04V6d4ivbRx24yt5/42+trKACO3J+RHyAy/chSE1
BMwx5kEJ1tvLRuEWBMTAED1huVMRqFhlw5IgdNVpMOLMAxtTwufAFfHzByme
hWA3G5AGxQuR3ZyJ2yh2tXvwrvizRIqXYIvHeeJ+xT6w+vJTZXgA411MIQ==

           "], "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {
         0., -0.45999999999999996`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         21.1, 5.2, 20}, $CellContext`rawNumberOfMasses$$ = 
        3, $CellContext`scale$$ = 0.2, $CellContext`tabNumber$$ = 
        1, $CellContext`tauSliderValue$$ = 5, $CellContext`tick$$ = 
        True, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {
         0.5060000000000002, 1.2400000000000002`}, {1.3679999999999999`, 
         1.4449999999999998`}}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         Switch[$CellContext`tabNumber$$, $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], $CellContext`freqTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
            Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
          Blank[], 
          LocatorPane[
           Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                 Dimensions[#]] < 3, 
               
               Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
               If[First[
                  Dimensions[#]] > 7, 
                Take[#, 7], #]]; 
            Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
               First[
                 Dimensions[$CellContext`rawArrayOfMasses$$]]; 
              If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                  $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                
                While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                 Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                 Part[
                  Part[$CellContext`kArray$$, All, 1], All, 1]]; 
              If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                
                While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                 Part[$CellContext`u$$, 1], 
                 
                 Part[$CellContext`u$$, 
                  1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 1], 
               Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                 Part[$CellContext`u$$, 2], 
                 
                 Part[$CellContext`u$$, 
                  2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 2], 
               Part[$CellContext`u$$, 2]]; {
               Part[$CellContext`u$$, 1], 
               
               Part[$CellContext`u$$, 
                2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
             If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
             If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
             If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
             If[$CellContext`omegaIndex$$ > 
               2 $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
             ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
              2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
           $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
           LocatorAutoCreate -> True, ContinuousAction -> False]]]), 
      "Specifications" :> {
        TabView[{"dynamics" -> Column[{
             Dynamic[
              Row[{
                OverVector["q"], " = ", 
                
                Module[{$CellContext`qm$}, $CellContext`qm$ = 
                  ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                 Slider2D[
                   
                   Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False,
                    ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
                " 2 \[Pi] ", 
                Dynamic[
                 NumberForm[
                  MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
             Row[{
               Text["time, normalized to one period, t/T = "], 
               Dynamic[
                
                N[($CellContext`tauSliderValue$$ - 
                  1)/$CellContext`dynMeshSize$$]]}], 
             Row[{
               Dynamic[
                Manipulator[
                 
                 Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {
                 1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                 ContinuousAction -> True, Appearance -> "Open", 
                 AppearanceElements -> {
                  "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                   "FasterSlowerButtons", "DirectionButton"}]]}], 
             Row[{
               Text["oscillation scale factor:"]}], 
             Row[{" " Manipulator[
                 
                 Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], 
               Dynamic[
                NumberForm[$CellContext`scale$$, {3, 2}]]}], 
             Row[{
               Text["Angular frequency \[Omega](q), selection:"], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
          "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
          Column[{
             Row[{
               Text["number of mesh intervals "], 
               Manipulator[
                
                Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                2, 30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[$CellContext`freqMeshSize$$]}], 
             LocatorPane[
              Dynamic[$CellContext`qPlaneLoc$$], 
              Dynamic[
               (Graphics[{
                 Lighter[Gray], 
                 Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                 Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
              ContinuousAction -> False]}], "parameters" -> Grid[{{
              Row[{
                Text["mass: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                  Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                   ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {0.25, 
                  Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
              Text["coupling to neighbouring: "], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ > 1, 
                SetterBar[
                 
                 Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  Range[$CellContext`rawNumberOfMasses$$]]], 
                $CellContext`massLabel[1]]]}, {
              Row[{
                Text["horizontal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 1], FontColor -> RGBColor[
                   Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
                OverVector["a"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
              Row[{
                Text["vertical: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 2], FontColor -> RGBColor[0, 
                   Rational[2, 3], 0]], " || ", 
                OverVector["b"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 3], FontColor -> 
                 RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
                " || (", 
                OverVector["b"], " + ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 4], FontColor -> RGBColor[0, 
                   Rational[2, 3], 
                   Rational[2, 3]]], " || (", 
                OverVector["b"], " - ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Text["coupling from "], 
                  Dynamic[
                   $CellContext`massLabel[$CellContext`m1Sel$$]], 
                  Text[" to: "]}]]], 
              Dynamic[
               Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
                Dynamic[
                 $CellContext`massLabel[
                  First[
                   Delete[
                    Range[2], $CellContext`m1Sel$$]]]], 
                Blank[], 
                Dynamic[
                 SetterBar[
                  
                  Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   DeleteCases[
                    
                    Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  $CellContext`kLable[5], ": "}]]], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Dynamic[
                   Manipulator[
                    
                    Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}]], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
         Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
         ImageSize -> {250, 350}], {{$CellContext`tick$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {0., -0.45999999999999996`}}, 0, 
         ControlType -> None}, {{$CellContext`tauSliderValue$$, 5}, 0, 
         ControlType -> None}, {{$CellContext`omegaIndex$$, 3}, 0, 
         ControlType -> None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 12}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$19800, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.8170832666604735, 8.555796124624313*^-19], {
             Complex[-0.1551466195070449, -0.02928694300950744], 
             Complex[-0.08034259694988509, -0.00047175640050472513`], 
             Complex[0.8375380350719087, 0.], 
             Complex[0.4666355190468595, -0.0004985640370077093], 
             Complex[-0.20310748883587712`, -0.016903168364508586`], 
             Complex[-0.08814336401214015, -0.009492515485614628]}}, {
            Complex[0.5876992109976588, 1.2550461617911596`*^-17], {
             Complex[0.10265545213610033`, 0.01483166503182088], 
             Complex[-0.21926883764259486`, 0.07211151289527805], 
             Complex[-0.44542014763984, 0.0003393634361678888], 
             Complex[0.837302840746496, 0.], 
             Complex[0.14543310652579094`, -0.026179799756868828`], 
             Complex[-0.11853612578393895`, 0.024509848792435757`]}}, {
            Complex[0.46308591274793803`, 9.388726924165144*^-19], {
             Complex[0.5856965084947664, 0.], 
             Complex[0.37149697558513206`, -0.047522142498678935`], 
             Complex[-0.06211177295084582, -0.014137478667721927`], 
             Complex[0.03996101664200798, 0.020361651823961217`], 
             Complex[-0.5801299379883637, 0.03228994210021736], 
             Complex[-0.4156269741507784, -0.016818315292689935`]}}, {
            Complex[0.33746419191058674`, 9.388615370724266*^-18], {
             Complex[0.38146658921800886`, 0.05867346593832412], 
             Complex[-0.5610351649694442, 0.08522274989831861], 
             Complex[0.007921615183111227, 0.031953466545772934`], 
             Complex[-0.040380406555232076`, 0.002172503405046786], 
             Complex[-0.4043648162058401, 0.10588784082140093`], 
             Complex[0.5929376694372075, 0.]}}, {
            Complex[0.2268905294295152, -1.491178032519196*^-17], {
             Complex[0.4247651258483777, 0.14288020541835011`], 
             Complex[0.5343128700236054, 0.], 
             Complex[0.18821994764138578`, 0.0023787190037572736`], 
             Complex[0.1818142885917423, 0.050085365393960156`], 
             Complex[0.4094698788934038, 0.06660749867566884], 
             Complex[0.49505966937432855`, 0.1596433164618535]}}, {
            Complex[0.09769781217756833, 1.0536612858016284`*^-17], {
             Complex[0.5210314594039757, 0.], 
             Complex[-0.43483974904981604`, 0.0582955431607703], 
             Complex[0.24346672484530527`, -0.016758489256039517`], 
             Complex[-0.20360512711838424`, -0.022543132064595378`], 
             Complex[0.49483735325357797`, -0.085690075171752], 
             Complex[-0.4183948693713216, 0.08521176602931739]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
           "], {21.1, 5.2, 20}, 3, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                  "]], 
                 Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                  "]], 
                 Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                  "]], 
                 Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
                "]]}, {
               
               Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
                1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
                1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
                1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
                1334}], 
               
               Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 
                1149, 1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 
                1210, 1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 
                1268, 1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
               
               Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 
                1150, 1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 
                1211, 1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 
                1269, 1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
               
               Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
                1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
                1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
                1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
               
               Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
                1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
                1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
                1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
                1339}], 
               
               Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
                1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
                1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
                1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
                1340}], 
               
               Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
                1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
                1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
                1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
               
               Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
                1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
                1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
                1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
               
               Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
                1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
                1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
                1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
               
               Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
                1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
                1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
                1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
               
               Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 
                1165, 1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 
                1224, 1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 
                1283, 1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
               
               Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
                1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
                1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
                1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
                1348}], 
               
               Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
                1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
                1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
                1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
               
               Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
                1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
                1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
                1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
               
               Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
                1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
                1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
                1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
                1102}], 
               
               Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
                2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
                2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
                2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
                1594}], 
               
               Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 
                1409, 1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 
                1470, 1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 
                1528, 1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
               
               Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 
                1410, 2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 
                1471, 1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 
                1529, 1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
               
               Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
                2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
                2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
                2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
               
               Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
                2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
                2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
                2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
                1599}], 
               
               Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
                2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
                2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
                2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
                1600}], 
               
               Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
                2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
                2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
                2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
               
               Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
                2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
                2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
                2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
               
               Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
                2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
                1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
                1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
               Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
                2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
                2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
                2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
               
               Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 
                1425, 1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 
                1484, 1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 
                1543, 1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
               
               Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
                2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
                2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
                2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
                1608}], 
               
               Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
                1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
                1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
                1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
               
               Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
                1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
                1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
                1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
               
               Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
                1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
                1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
                1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
                1362}]}, {
               
               Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 
                599, 594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 
                573, 1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 
                1943, 560, 557, 1940, 556, 1941, 553, 581}], 
               
               Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 
                566, 563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 
                545, 1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 
                1921, 526, 1922, 521, 520, 1918, 515, 554}], 
               
               Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346,
                 1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
                358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 
                371, 1836, 374, 1837, 375, 377}], 
               
               Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365,
                 1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
                386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 
                405, 410, 1856, 411, 414}], 
               
               Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 
                1847, 396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 
                418, 1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 
                1871, 440, 442, 1876, 446, 1877, 448, 451}], 
               
               Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 
                435, 1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 
                409, 407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 
                1844, 385, 383, 379, 1823, 417}], 
               
               Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 
                1866, 433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 
                455, 1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 
                470, 471, 1892, 474, 1893, 475, 477}], 
               
               Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 
                1886, 465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 
                481, 1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 
                1910, 504, 1911, 505, 510, 1914, 511, 514}], 
               
               Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 
                1903, 496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 
                518, 1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 
                1932, 540, 1933, 542, 546, 1936, 548, 551}], 
               
               Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 
                535, 1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 
                1894, 509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 
                491, 489, 485, 1896, 483, 1897, 479, 517}], 
               
               Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 
                636, 1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 
                610, 1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 
                592, 590, 1960, 586, 584, 580, 1938, 618}], 
               
               Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 
                666, 663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 
                646, 1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 
                1982, 627, 1983, 622, 621, 1979, 616, 654}], 
               
               Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 
                1962, 597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 
                1977, 619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 
                1992, 641, 1993, 643, 647, 1997, 649, 577}], 
               
               Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688,
                 2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
                2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
                2000, 656, 2001, 653, 679}], 
               
               Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707,
                 2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 
                694, 2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 
                681, 678, 1998, 702}], 
               
               Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 
                974, 969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 
                948, 2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 
                2157, 935, 932, 2154, 931, 2155, 928, 956}], 
               
               Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 
                941, 938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 
                920, 2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 
                2135, 901, 2136, 896, 895, 2132, 890, 929}], 
               
               Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721,
                 2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
                733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 
                746, 2050, 749, 2051, 750, 752}], 
               
               Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740,
                 2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
                761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 
                780, 785, 2070, 786, 789}], 
               
               Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 
                2061, 771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 
                793, 2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 
                2085, 815, 817, 2090, 821, 2091, 823, 826}], 
               
               Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 
                810, 2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 
                784, 782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 
                2058, 760, 758, 754, 2037, 792}], 
               
               Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 
                2080, 808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 
                830, 2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 
                845, 846, 2106, 849, 2107, 850, 852}], 
               
               Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 
                2100, 840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 
                856, 2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 
                2124, 879, 2125, 880, 885, 2128, 886, 889}], 
               
               Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 
                2117, 871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 
                893, 2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 
                2146, 915, 2147, 917, 921, 2150, 923, 926}], 
               
               Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 
                910, 2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 
                2108, 884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 
                866, 864, 860, 2110, 858, 2111, 854, 892}], 
               
               Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 
                2203, 1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 
                2192, 989, 985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 
                971, 2179, 967, 965, 2174, 961, 959, 955, 2152, 993}], 
               
               Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 
                2221, 1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 
                2213, 1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 
                2200, 1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 
                1029}], 
               
               Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 
                2176, 972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 
                2191, 994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 
                1012, 2206, 1016, 2207, 1018, 1022, 2211, 1024, 952}], 
               
               Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
                1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
                1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
                1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
               
               Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
                1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
                1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
                2231, 1060, 1057, 2229, 1056, 1053, 2212, 
                1077}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
HHyWGO3jlMwBmVtOdo3HKZDRF+Nr2B2ON3tEjcM2pqFAe4+2CMl37ls+8R1D
1rj78naDQrsEjJT6YM5H4tDy/uYyxcZyON0q0cKpngXHeVYeXqRFAadWf9B5
W6Kfz/hkvF6eBSuHf4Yf1yE4/OBvHxbmm/3twyK7D2tG93lhJd3nRXaf90XO
oQ31l8pgU/cCkXe1DHjzRvia4x0KrlUZKQ0olYE4tZhr2D0VZLZ7vKy5T3CM
7iNDf+ffPjLcYvWR8+k+NYTQfWpg96l5xzefiusvBoG59U5jiVHQrzjauyma
gstGk9Y112YRPb1hu3OBH4Tsmqy1jNznWboPDrvpPjiw++AU3WcHDbrPDsas
PvukSyohi+MYsG6kdI/wez8INrK0etpDwdF4r5O9B5LhRN6cXdEBFuh4fqXe
o0EKqug+PljRfXxg9/Fn03MCsJGeEwD2nMD1lWntHMIe0Bskx2P/0h0FFoTm
BJL4+XPkw+36qP24+v3ayTe4QvDAPSmL37/J36XnGWA9Pc8A7HkG7zoTNTXu
BKQ2iTOTvhD9uINfBgmefKTnIuA+PRcB7LmIWHqOAriO/Z2jAPYchdyaublf
p9WA7JHLnGmzEoBH4dIuv3UEnxNVc4R3PoMlIqf0bu6OBINHy4oaFClYc0fo
/rLEclg2YvJU+pk5CC2iilVuEXyu+9Juq1gG32bv6jKwtkPLU/lfv/qSuA19
/3vhnUyoXqf3mNEcgeXaI57WrylYf8Uu0f9dKhQr7D86eicV8+6qZpcSnp+g
mP3omWsM8Ck+4G3sjMOA7jcSe/qJvivmytz/5BGmHkv6cD0oFe1llp7Q/Wdu
eZuQ2SPHaIzt5fqzWbAQrxVPFdMtJHWz3tvb1z8I32T+9hCZmgpd+0IFkwg+
W7aot5/echeuyO6aPG1uATxcEmGLzwg+N3AXLb9jitNcPypcnZYDKpyW0unk
PB4zHs8UfZmKHNzpG4rehKPH1l1K/SQ+Vz1Y27hc8g74K+/pfna8GE5vgDBZ
wkNGloWFaZa6QOcaw+xvPSWgPKZVoBBJePj3tqsHXD0wsViG8TW+GNZYhsRt
SiHxVlEoakT03sbwgiONb4tgnvHj61OIny0ihZMKPjFwysPTydUjmSBte6nj
WiUFP/g6c0ZlsnF9eWO81IMUyBTIiJ9Ozm+qoNQ2olOAHK1rJTRE3MDRRjN0
mNjbHRVer6iL6Lz18/N35YYYVr3ARbKEgrm5+uvf2hbi9Hyzj31fvdH/ZLxE
Zim5B5MLLmZ7A/GJ+G0qlisJoVO34g+T8AfvLEqkPAgWcrpLKgVnwY6OyXMa
yHtUeXWrRj0yGCf3/6iKP5UC5m0fG93/2QsoXjxwen0hng8w5z8WEICn8/0f
LSG8zvya8/IsK2/gtj3bqaaZDwfGpl6rrSb4LPbcuHyVN+w0+DW0j6cImjV2
pvoTvXzBdLmSvGEuhvbHjD8teoJTxY5bHCN10I7re7VIdw7WHAxOHNYJwdkH
yjfWPP9Hjwjitfq7cODj7ecLr+XBO/PHLy8R+5INJ/bCxhvI3RhnGmmbC2t7
xefVkrr5ybZq++izXDw1Z/6jq7cjUS2nmFlIzvN7Pn9TlUkuCvt4GB6FKOwx
4x26WkPB3vTMoVbvILTPZDw825IN17ma3wk0U/Dys4iz8JJITLeOtolqSYd4
x1CBBqJDfXZO7RYsy8LVXXr7eXZE45Hvx1VFCJ6/LVnL9DqThcGyWYHTw6Nx
bvvIxVHy+xKGkBDPjVS0bn/18K1SPKgpJ3Nt6yL8Nq5l25+edNxw5vDzlE4v
2BHp2PD5nzmNngqrIIVMbOVRnHnnVQzOXCD2R/4VBduGnlgmFGZgca24aJ5o
DLZPuzu2k7yv6cevOlcXpeGhGekeNevvwLGlObyqBN8+rDyy6vb6NPTNb573
J/QKHmmwS+ghdXZmwDW1O1Qaep6T+Rm7NxbltzvK8JPn0vls1c03Pwc/vy9U
1TCJwoMDO92yyT2rt0utKzEn+eki+nn5bjs8K2IYZjNAQXXHgE4LIxvfHpzv
6uwShfLlTSXV5H3NL3u1Rs47Fl5dnbXbS5ABN5wrezeS593G2n9Zy9p/yWLN
rzJiWu8bxjrCCn1bnz2KDGi3mb3XkuS103xrnX0difiOr+JX6XJnXCk0w0+B
1KMzokE74wQjILb9MvPCjhyQJ1S9gPzdLSz/Gyb45ysO7uHq8oYrhZt1X+9m
AHreyNlFdJzkv5zHyUte1isiBsu2xvKLn3iE7cVVl9W+ER47kuUmSu7r3f00
c2ffAPyQLlQrT+ovV80mWx71R7ACD7688iEVNIq5V1aS8+9h7fWcnrDX08Yf
xXvg9TXUgp2e1y1TYPKGYsFeko9yLHudCfYDf3ZUD1vFYfcL6Tax7BAMEJHT
jCV1Ssp4U2lXXxR2DQae2346FE3UI87PI+c5uKIomSlkhTmBc10PiaRAyP4G
UXuKvHfWPpHMhH2iR/6XrjT1B+B2cb+yb3si4KiF+mr8TvgGy37LBPvIcN9p
VY5hOPS9u/BUezgq+ylUmRNel3pKfegPTygyQrKmnouPwMpI4y3l5HfuP4vC
Q3p90fy2WUeqdzik48auMqILlrP2mLay9pgiWHtMxufUNn39445zrH6eGh/x
hHVcUfNVRv9rv3mC/fJdQ1uWSIVi9sMf+9Z/isO37juBh9xPcfeuoOBHj3F8
qecnuch4lNM+9TGE/H7Lu/79qlwPvDMjYuh5vTvMkeN0tyf+T7H2p+5P2J+S
++rgk1d8B0+Ou3o5MW2g58P72rvjJF9Y9ncn2Ne371g13SgCjQ5Q+yI3J+IK
vyqFlSRfqrweu428iMEeabvLe2enoqTFjIqVRNdH8IutwiFNHOhZW+2+ygq+
SV+IbiT+F7L2th6y9rbOsObM1yl2nXNNTca+3YkhxctTsEFYWnMy0VNaliMG
bisy4M2UD6uf/A4FIds1PL8IH04bGMfRZwmwP2o45HZXCujsaQ5a3/WfuXHY
MGFPbUuD9afVG52BOX319KYeTdihu6BSmpxnEes8jhPOY2qp4Vl8LgMMBt7D
ZYso2F56uM2E+BHgf5j8cHc6WBj8iblSEAkqt2U+vyfn2W908HLYTyeI5A46
+kHDAG9P01yxmfg/wNpHe8zaR+NnzdsfOT34a3CrI4z4m6rW9rujkuWJ8cNj
/7W3m2B/KaOwgYszE0buWI5udYuFbaUAegQ/c0av+jUUZcAdU4dd13pjQO2Q
rmgY4QPeuWYvX15xh0fzjjuvSvTEHCr7yCUSDzNZe3DSE/bg1vEx9XQCHwOn
+KZxw1WBmGBft4xB9DsPy15+gv1DlbuerxblQNmk6aoyzvFgIVboH0Lqzjse
W73sVznAYAZf/N0WB5zRaiENz/7RX5OFBGf7w8WzM3zGYiIwqzHAo4PkozZr
/27vhP27U5NNVkv4+YGhcLUFY3ISLhQ31XKm/ms/cV/PfiH4JC7Kg008prOu
PIiGoQrZHQeJTtz+QkXH2z0fmi8qGHZMj4L9G7VnSj2lwGT7b9EVL1ygbmrn
172WKbjCrc1zDck7f9benxxr74/jI733FyWc71FRbwYrpGdXilQxUE115Ohz
grc/Bel9wBkT9gHtG144zBXOh/oBz9SL1yLAQ/Rbbw3Ry8KB0aMD9QUwkvkl
d/JIOCy+6HnydzE555XxWwEDDnjTMJxS+paGC457WN/9SME8of/f/8xc5U3e
m/xRaa6rdkp4Fs5SXyFuS3TEKpY9zwR7tTMak7atQViEhjZrnMPg4poMjmTC
Wy6mBDspCgZj9q3rD1Ov5OBtubCKDsI3RFn7jNUT9hlzlnDwfJvEgAoP4UCt
11EgLPQyyJ7UlxfyjlJVuZngYbz5kPuvYMh/JjXeRfKlMcrzruDZQlgUNFw0
dcQOzLILGE/IeZyHRNTUL6TCpqL2wATDRNijp8B1m9zzlcwlvMEeDDg8aDw5
8lsyuKc7LT9Pnouf46CY5MlCyLTeW6dx+AYoLXaxmllOdBbD6Og0U4ScP1tb
/QKNoVGx9tU3cp+DeyaV6xZnwaolBSX3uJJh9YD+C4daUjd5H1CMkRx42hKb
dPJcCjTwf1auJ3yv8PZGmQpSd0MVU2IlzTwxdY7H4iDCl1qmXNdctCwb7k9J
kVd+HoLnZAPWriV5t7FffPWDyhxYa7hJ70FIGnjvb1vKT/h8ZNKOSW1LiuCr
QOey25ZJ8Np04KwS4c+Rt6bVzuCLhc1rRVccbULM4nobeZ/o6zBTgStbFgXC
HNtzh4IWF6HB3csPefMp0OuqzFW5XwRqJ+93muxKgAjOGWsGkigInxTLGzWp
GHgYSt/Md8XDjowytej4f3jg9AyR849AQuRd0rLGIpRjPO0pzSL6Lt1OTzDL
Bv5Ey1TZ/SzGqN9rwiKIH43u5GvHPYtBl+fHjAr+JFDizzVcRHRroj3jW/LM
UrAyPc9YS4XD9wd53fbBhP/0XehuX+AKV3Osve2uFeOlL7YJTgwKhBTePRwt
8AVdkxsKCz3yUed9yZ5Aku9812429tuUwtr1rx5XjIRBjmPkttIACmYFHFW0
euEB56Reqsw/U4i1Kgu0ssn9f4/YPDfS1xc6FI5M7WSmQVJLb/oQqSMnWPuM
kRP2GR/TegeYXH/1DrD1zga75LchO0ohwddSXdndC069mGR4MJSCmgumcp5O
j+B4ZssF+750ENk3FvkPL5rE2os8MWEv8tbitwe32HrDKX7xqj3zSB34maN0
gfDYaNa+ZPqEfcnW9cafqg8UgfwZx/3t2x5jmLYt//xc4kd64I+vZB5Max7Z
NEsmBW+/WfJ8HonPuSul4hS148BKoLbO6Xw6dMuqV80m+RLG8p82wb965w6P
P0WxYPVrdmIC5MDynCta4SSew1n2GRPslyjNbQrkyoLwH32MXJ50rK5QrL9P
8q5g8uncgUdJQGkcmVxXX4yHpo59f0Dup33SHp9T4XGwYfbx2/uX5IFF6+95
z/+Zf15M74EeZe2BLmHtXfJV3kmqlkyB543SEYU78mCZ9vyXo0UUcDTT+6Fh
E/ZDy9XGA4+ujIcm1xO6Ev6luFC290WRJwWbm/uE8s3CYVmz792y7FJ0Eue2
2PTPv0/VNqn8flcOiAxtTA1MSofYXI8c/jziv4X2HzrB/8YmFxVO3zy4LvY2
90hTJrgOrbM1J+e88y/23QuWWll6REGx6OU1r3iKsf9R6fzvJC8STEBzfGks
cF/lvxiaXoSmwTXUKPGzNjVywVhtPji6OZ89cysdJEY3eN5PpSCbtffaM2Hv
9duvP43UkyI43jkcUJkdC7sVe+zWExwoYtl3T7BXPimWFnczhdRxy0Fb2UK8
ak/KagaJn1N9G0SYqVAgW3Un8ncOvlX/IXqDxI9Yisrb6hGEY9HFb25zBUDf
R33rtQXsfdsk1nyM43/mZDQVPilp/UqFwFe6oRyyOaiR3cNXS+LcVG+1PbRn
Y7U+H0P9XBas2z0jsJHg0l1aX4Mfra+Bra81WPkYPiEfp9asWehQVgjjL3Z+
Uti2Bxx3CAgHk7xWYe35vp2w5yv6rbnWqzYb118R+aBjlw0Vctkqj9OIfvQx
yI5vyEIhh2VnHiZlA3Pw7mqRf/ZZjsW3OVVmQFuaYpu8MwMdpRdtTyJ8Q5vl
/+ME/ze2imbdmpoFzzLuVpx8m46T+sJMzcnzctTS+8WRE/aLlQq1rEUEElHo
wO2m4d0I/LecfqmR+x888vW47JJUXC53xNf9YQnEHtp4i9+XArd7jfpayYmw
1mOJq9TCYhz8uhrrY4j/+v9/f7ngwY2Dix7EwPDMhTyPS0txdrrMWxkvEp8s
+9gJ9mPjY1Wbo1NQyXF9joJFKazg90iXdKPA4OW2SzwP49Fw98JAfpdSOL04
NaGD5FG4Wson0cNJsP/lpJhFiaWoPa127hJ3CjhZe9PHWXvT7PzddZ55Yodk
MgwPhNffLS7BY5necRIk74pZ+9RFE/apr9DPi6vp5wX2856j7xmb6HsG9j03
b70U2P85FXLvq9SutCrASrc3/bvJfZax/OdP8F9Lv3dYRb93ZL/3KpZ97gT7
H6p/4wHf0fEA7Hj4UP03DjG54m8cIjsOJeh4Awk63pAdb3ysPfETE/bEWXkB
mXReIDsvFv2L/Ww6H1GWzkfsZ+Vj5lT7sxLaWXB651xmoXEm3vSRUNpMeILV
v+yhu9L5joV0vgM731NpP2hB+wG2n080zqAJjTPIxpkzNJ7gZRpPwIyFJ4nT
Ro8xAyJQZ8Uh5c9KxWDQoDFLjODeAhrf0JnGN9zEwrdFNK7ifRpXkY2rj9fB
VsMFIfgIPDt59Eqh32KkUf8xwQEOSXOjjjiUd4+eV9NUCAWc14PGswn++6j4
yMblYJx8t7H8ugxc4JvYef+ff2dGQlp2iRQDbQROHTQZzsHzSk7NX0kd+Xj1
6tyFe5LweKPlxScni8H+5PL+9kjCQ1YMG0YkJ+PV0IApikYIswzDvsgRHiJw
BmOlo5Mw7JP2dpmGHKSGfqhYEb596w3zaGRZIv76kLfm6PcsjHhe6bG8jvBV
lzb58eNZ+EKw8NhKtXTQsTN17CHv8Qpdr1GQrtfArtevhf/Wa7xF12t8z6rX
q2iegHo0T0A2T2ih+QCa0XwA2HxAguYnmE/zE2Tzk/M0P0FNmp8gm5+E07wI
22hehGxetJjmV7ia5lfI5lcNNA/HVJqHI5uHs/ep90zYp04VlJpyONcbMwyW
cwmtKQD7z1b3mkl+ybH20Dsm7KGb0nUEY+k6AidYdeTdlD8ZshdLUdXppPSN
jREoxh3Z8pScR/ycxLewmQ9xAZZ07ysqhsRDe8+uI/GpxPLfNXHPve9L5PGy
3XB52EFwbmcZHPeXn67qQcFpln33BPtpyk8NJg0V4x7Zfu/Vp5KwRfuXlUMI
4XUuli/+j64vD6vp+/5HCKHQYEjGDBVlKvMqSYlSlISQKcrUoJDQIBHRXJrn
ebjN82pSaZ4VqVBEdCsNKPw259zv5/c+z+Pf+5zn3H3W3nvttV5rr9dLUjUP
uUs9zCJXRmPBFhWfncRf8dtop5SH2GOk2UjnFbsC2HLTxWCvHxvW0/31Coz+
esUUC7fi+WGoXuevHrk8E+b41UXrkrxSln5+K+N5mcwnzmcP5OKMI54tB6Ni
kGvVyKA02S9StbpCS5IzcZlqvcuZyQk43D9x4AwZ/9h7X7aZnonCRb9vCnxt
TwUNM64Lt6vZ4EX39QOjrz80lcu0fkEMLhYPdm58nAKO3WVOlbVkX9D9/k2M
fn/lQts7e1+ko3lVaJDj9gRcEuDjsJGs533sUeGqpDS08+gJDMuJw9iGgdHP
f3icXkunKuakY19qzl1rE3e4l5vspFbPhrn0+00Y778ZGztw5zri3pk/Akf6
DqDytTshL8j7RejnVRnPu6h1m7ME0rBjqBjFhONQzlF8+Crx23xvucT5PySg
tay75Y4J8XjyTePp+8QfLqPyPvSm8j7k5H2aNI/BQ5rHgIOTvKLyTfzh9Tff
RE6+uZjmN3Cn+Q04OI8llYfidioPRU4eGkfluVhF5bnIyXOPU3k0LqTyaOTk
0Uvo90cx3p9P4VRI41TIwam4l04PmSHtBYYfzWr2bUqDsjXGWw42sUGeyo/w
PJUfASc/Eqf5ImoYfBHaatOUXn/OwT11mm83HgnG5Rfv6pn/f+OJYYwH/D9J
VtQYwtH88Y7mx1NgnsOZz87tbLhdK8b7uMMaLe6fG10bkQi+ATyl+h/Y8KI/
yDNAOhv3CcDzndND0HRIP86K7HcFmhfiJ80L8YzmhVjn0S2mvDMDM+VepY5R
C8PFET5LNpH53UE/P3bbf59/49F/956WFQ4l1Eh2n4mB90NR75f3s+Gulu+x
3IVuOGxkl3p5WQQ0ZY/hXUuel3M6ojw9JwM9Zg0pXBobgaExlqnaZN0W0nwU
PQw+ijtnr7LG9KVirvbI1bkBEWgcsnB+SQ2Jw//x/BbR5Ufrw33xwKiCYpZj
IJT3Gl1hD7Fh6pdm5eNTA7A8Y4/K5hd+4Lrc0uTWMNkvWg8cWl1S8Gd5+upn
XREo/N7/1b0GEhfRPBhZDB6M0iQ5VlZjKj5+87LxuUckLrsYkL6HjKea5sfo
YfBjRKgUakz0eoJXu90OVY51g+YIl0run2zIpPBDbKfwQ+DghzePcLnVfEjB
XN9F/JXBEXikWauhhuzfqn/wb1wwam96EZqEm4dYBXOSQrB08sZnH1+TfJl+
/hPjeV8K58QFFM4JHJzTgcJXUWjqX3wVOfiqCYWj4nkKR0UOjqpI836spXk/
OHWKYxTei28ovBc5eO8u+nlJxvPOc/7izLC66y/OjByc+TdVf8FlVP0FOfWX
vTGyLaYqkTDv4jPPd9wseHEgpGQcec8NCgeDCgoHAw4Oxq/6cYk4tyUkT93p
2xBxGyXsc5uukfdrHhV7PpQWCF5HJA8KPY2DKy9SVneQ96vMWtrY9CMQ2gfj
7DR+hIP4haQSr14S51yZ2CK5xgOeCfh4ZX9+gM7RWjpjyTxeEM+7pJPlBNHK
dz6uX+aHjtEiio0/2HDQOmie5ucgkC2bbf90dzjoKV3i+lPHFxDZ2nRIxg+G
N0V9MzANgZuP7wv8JOtqsSNKf6t5Ap8Pch3g3RWAj5qKp2wh7+FtMlO5rOgG
Obt/xHk+CMA1v7oWyn5nQ2XiXk0boQBItD4mZhIRDCF9qxvzyHsWUfUXoOsv
wKm/9M6cLm268Ql0XDcNbXCIx7ykhlk1ZL/4beh2V9WyhaDbr25kd8XjM5W0
rX7k92qqvgMNVH0HOPWdSqreBNVUvQk49aZO37B59h+c0PEyd87CNyw8flmD
5UHsqUjVufAKVedCTp3rBlXPgkiqngWcepYlVV+DdKq+Bpz62kWqvoZ+VH0N
OfW1eVRdD5uouh5y6np7qfogHKbqg8CpD26l6sgwkaojI6eO/MLm+0GV5iSQ
vK5cmZ0VDlUXlqhJkXX+3u2x5entMZC4xD+K/1ocxPQPfxMm6231YeEt33iT
wGef+d0TaeYgsjSx2+c92S+8pl8cViaD5Yd15ePsIqDNsm1jFjkHNb/mLZBq
TQanG6ueyN0Kh2Om2o3B5Ly4mPauWzsoCcLbFWebypui1txfn6T/9HMJm719
kZkI6ksFi1yPOuKbu8L+huT9hVQdFj5RdVjg1GFbqDovxFN1XuDUeV3jTRPE
D8bBo555bhO3huOp2ZvOGZJzoXf/5NHx6jEw4bXvjbeqLPxupl1V8oePkaoj
gzhVRwZOHbmfqlPDdKpODZw69fceyaExr73gVPj10xk6mbhoQEx4HInP149c
gl1lD+HSluPjLkSkY8W5Wu/PxK+2U3VwUKXq4MCpg1tRdXbIperswKmz52fX
Thn0NUVRc88zLaoZeEnHLegOGc/g9HclMp2OKJaw22DL1xycPuSmG5rPhhNU
HR/uUnV84NTxeah7AgDUPQHg3BMYs+9D4b1vzmgQmHJ/zJVsTL4sKydE4ufN
n13n2u30wsUCxm3OyWm4NytrQ0MjGyZT9xngS+bf+wzAuc8gV+mivnxqKgwm
C6VuagyGhb/cN3eTeblD3YsASepeBHDuRVyk7lFARfPfexTIuUchqntyc5JS
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
X7GnAnRL38jWGSoEqx69iNmJ9vOkv7mPlkMNmOzOcjBw8YHxYaHSr9DPtbE3
lom9sQnYG5sqwA8riOOOWPEjb7klBzRrXo6YO5oPZM5GOqajvPcKntOQIeY0
4pRnD7+0rAchJ3659JNoDpj5wOtuR3X3xtEYJYeRUKA012z59mkdlI0MZixA
77XvBi8U/zUWAxjayaIirhyoZHosRYuN3vuYq1UjuFra96pC+F5vYf73MOZ/
P2Be1RrzwmkEL8wF3D323DrQvffkltoDvjCb7SV5B63nVf64ehPzPlBJn57/
QqgcOMx1933pW/6gFmwX9i4N8EwScuLR+eM0ehk+Q3EYiOdGJIi5kRh+0kbG
+hKwodHLyoLPhguHa/X1K1B+LsB/OiLAf3oV88g6BI/cirnmdwTXDAX4T5c0
Zj43FmEDZlhU5NpV5cBg3NDgdAk6Xz9nuqWxyoGhwm0j295yIBEW8HoCxYlj
Zbywp1AmsHl6bdMSp3qoqFG9XzpjFOQK8Ja+4kt2W5rVghFmRxbrYxE4vCpk
3priUcAwo7jpqwQ3/aHmaEzcpiIQPecZ1KVYDQdf9iu3sL/5Rrdg3yjtN8xN
PNI/p5OrH5RyyDgpOPq//cA+aYqP1iL46O3cC0lrWyqgH09+YuGaCrDpUmFq
Cdq3XZr+69ubKkBrQ+PYbCYLxmrqyo6hPMQa89Q3CJ76gFaR2A/NBXDjuYou
5VsckJ9kpNeCzsVIWs/mKXYpDI79tDKsvwpkd0ZYZaF6c3WG1EIJi1Kw+HNN
nZRlJTwr/15tHK1f79iOSfvpXLD5aPd105k6aNR618z3HnrvYP+mOfZvKmP/
JgNz3HoEx52F/ZvG2L9pj/2bYpjvtib47jHMd48TfPdSap1wPrVOQK+zNzn+
Y9x0Hrw9T7l30VAdUPV13L0BrXN9aunpUNUioC7n5OIoz4HKafyTV/NQnD/l
ZE/xy8AWNYNOZ5MquLx5I//L/1XWpvYZPqH2GdD7XIe5cjuCK99FPS/gTT0v
SD+vCwJ4858wl6pJcKnS2I9pi/2Ywzh+ijFXbk9w5cK1X+MQXqbiENBxWE3F
M5yi4hnS8Wwty5p0CsqEsd+1VYe61oFKo238dLQPYQ9bato+VMFN4wpRInvK
oZ5UN3cbOl9mDu48S42HcCJiqJ7DLYf6i1W2QrSeQeydtCG8k6uwX/IO9kuO
Yb9kYXhgpFJSCTTIH7w0218JWCe2xnehz7HqKag3Op8LW49L+3y8UQa5Cnyd
SXRfZaz7el/Bf1L3FaTvq8fUvQc7qXsP0PeeP+bH5Ql+PBXPI3UL8EIyCS8k
V0nVQu2WN/Ru89P6o+0RsNMZsp1JHgXifuoFw53R0JEzENJTxAFRqnrPRSpH
wcQO073eBfWwyGvPvRrjHMjw77XQTP02pyROzCmlOcq0PbiXCO0jhTXbrtWB
M8KLjuug9Q/7UzxyJsEjL1vuF3tGoxaeut23tNn7AZwAZdc7UJwIEz5EG+xD
TMac8naCU+7FnPITglNuxryzCcE7m2IfYiDhQzwfcH6DbUwNXKNpPvbm4xlw
T0y3fZaH8jdnsSAR8XJYyXwjJteXBa5Kul9yRnXElaLoZzucKyBTI4Dh7lkI
myP/5a3dNArk8HxUGDEfZSKAj96OeepMgqfeT+UhUJvKQyCdh1zAfLEBwRfj
eU6oRsxf0b5CBuEr/H/ewDxizipshZuviEI4UN6cm8CbKwf3Q3n3rXpQntBA
cdnvCS47ZTJMqAuwoe5ikzf/iM6Cq9mB8r+g+8El2S9BbDYCFjvZHL09mwvW
Rjltk0B1zZ2f/a56OIZCpqELZ2Z+MbCNWSZ06D3KYzHfPUHw3VqmMtVKz1F9
fSBrVa1uDhw6ezt4N8qTDbC/72+Evy8E8+CNBA/+Cfv7PhP+Pk/MidcQnHg0
5sRPEZx4+uDI23bvBGjdF/v9VtMkEPeX+ttwVDdJxfy5NmDzQ7jlwjXtNZM5
sHFeyOIcVKc3LMhLNHQtg3WOdp89hLOhR35k0/wu9PmYNx8lePNhqh6B6lQ9
Auh6ZDXm0AMJDp1L1UGwiaqDIF0HdQrggiVXUB49HcKjR/vsfiO48hcepXlO
oVlA6vzUwUS3BygfTV2kjb43WZ6h8/epWCAiX3dvn95leDL9uJUMWudNk9cv
10XFgyuy0hnrdiRB/QEV9y60P+6/28ZJce8C0w08qyXofMmINhT0o/iRFOCt
e4G9dcWEt24I++l+x366euynM6LqZaBG1cuArpdT5OWc2PUX4W8Kw4yGKHSe
XAMfu6B6XIKq38F0x9f6HdD1+zPMiT8mOPFtVH8AjlH9AUj3BxZlfO0PwEdU
fwDS/YF92Ct3CHvl6D6D09y67Z/ulgG+0BPPzlcsIJ9uUSiM7o3CkKWc+sOl
wEzWzKChZTeQeJOYI4vqRyOqfwLkqf4JoPsnWSsOxi+wLgCz4Tf55p75cMxY
+6Ukei/ECPCyjRD+NWXsXyuk+kJAkeoLAbov5GDVEyN01hc8/VVV2x/VdwbD
shbJ6LzYUH0noEj1nQDdd2p50OfcmnoTyq806WTIsWFK07tNr9HnLMIetEHs
QaP7Wv7HOHvFD1SCp3uHz0XYZkNRyXO8Xej3X+34d9Sf+nmAfafVLUWcDf8Y
iNFgofvtNPaUDRCessETfGasmSdo36/eMd5bAz97xV38C72v7w4ETe9XDAFb
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0., 0.49488850049789845`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, True}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {21.1, 5.2, 20}}, 0, 
         ControlType -> None}, {{$CellContext`moSel$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
           0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
           0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
           0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
           0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
           0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
           0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
           0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
           0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
           0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
           0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
           0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
           0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
           0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
           0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
           0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
           0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
           0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
           0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
           0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
           0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
           0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
           0.24, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
           0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
           0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
           0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
           0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
           0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
           0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
           0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
           0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
           0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
           0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
           0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 0.25}}, 0, 
         ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {
          0.5060000000000002, 1.2400000000000002`}, {1.3679999999999999`, 
          1.4449999999999998`}}}, 0, ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {21.1, 5.2, 20}, "numberOfMasses" -> 3, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 
            0.4602510460251046}, {0.8164016736401674, 0.22334728033472817`}, {
            0.6908368200836819, 0.6836401673640167}}, 
           "mPosFirstCell" -> {{0.9, 0.7}, {0.5060000000000002, 
            1.2400000000000002`}, {1.3679999999999999`, 1.4449999999999998`}},
            "pointsDataTable" -> CompressedData["
1:eJw9UE1IlGEQ/nZddf1YxIN4EJGCCKEoYusgKjPgQY0k1i4R0kHKOgSJRYjs
QUFJEJEOktqhJTEQQhbqoBGNSIein0Nlaj/YssvKppnrurvKQus7M7sODMPM
877PPPMc7bjddr3AsizOUpNOk2e9HAmanOAoXOiUiMINqf/p4wcOFyoep3xV
PJXrY6A8YZpQHhyX+g6yEv8oIP18jm8T8nu0FqElsQfvFSev6gKdb+eqhTov
xvw/3RcjhQ915nhtrDz961hR/z41h3rLZ5scC15ux77AYrKmfXQxSd8/pS+F
px34xzdXPbgRor6xxuFb62ka2JABTXKbWYWAaXxzs/T00ZsjwW4nBpuYcB2i
mZn459YUnWS2mp9gLfXEjp/5DStTXQ32cgLu3Hzw1w8F2MZsPgsvdJRdrn2x
S4pnwOt+VnXlWhgUdyGeu/qyxePCedln4/O3914/rkyQ4m7srFu7OPIwCoqX
ortfBNN5uS9L4WkWuAN+04V6d4ivbRx24yt5/42+trKACO3J+RHyAy/chSE1
BMwx5kEJ1tvLRuEWBMTAED1huVMRqFhlw5IgdNVpMOLMAxtTwufAFfHzByme
hWA3G5AGxQuR3ZyJ2yh2tXvwrvizRIqXYIvHeeJ+xT6w+vJTZXgA411MIQ==

            "], "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{{
             1, 2, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
              0.5060000000000002, 1.2400000000000002`}, {{
              0.34741157829718244`, -0.4761478484276109}, \
{-0.4761478484276109, 0.6525884217028176}}}, {
             1, 3, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
              1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952,
               0.45043660026690807`}, {0.45043660026690807`, 
              0.7170411692283046}}}}, {{
             2, 1, {0, 0}, 0.25, 0.4468360000000001, {0.9, 0.7}, {
              0.5060000000000002, 1.2400000000000002`}, {{
              0.34741157829718244`, -0.4761478484276109}, \
{-0.4761478484276109, 0.6525884217028176}}}, {
             2, 3, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
              1.2400000000000002`}, {1.3679999999999999`, 
              1.4449999999999998`}, {{0.9464696733662902, 
              0.22508849540613599`}, {0.22508849540613599`, 
              0.053530326633709754`}}}}, {{
             3, 1, {0, 0}, 0.25, 0.7740489999999998, {0.9, 0.7}, {
              1.3679999999999999`, 1.4449999999999998`}, {{0.2829588307716952,
               0.45043660026690807`}, {0.45043660026690807`, 
              0.7170411692283046}}}, {
             3, 2, {0, 0}, 0.24, 0.7850689999999992, {0.5060000000000002, 
              1.2400000000000002`}, {1.3679999999999999`, 
              1.4449999999999998`}, {{0.9464696733662902, 
              0.22508849540613599`}, {0.22508849540613599`, 
              0.053530326633709754`}}}}}, {{{
             1, 3, {-1, 0}, 0.25, 0.443449, {0.9, 0.7}, {1.2679999999999998`, 
              0.1449999999999998}, {{
              0.3053879927567766, -0.4605715651630738}, {-0.4605715651630738, 
              0.6946120072432234}}}, {
             1, 2, {-1, 0}, 0.25, 0.8216359999999995, {0.9, 0.7}, {
              0.40600000000000025`, -0.05999999999999983}, {{
              0.29701230228470993`, 0.45694200351493847`}, {
              0.45694200351493847`, 0.70298769771529}}}, {
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 2, {-1, 1}, 0.25, 1.9784360000000005`, {0.9, 0.7}, {2.306, 
              0.7400000000000002}, {{0.9991912803851123, 
              0.028426494463303514`}, {0.028426494463303514`, 
              0.0008087196148877297}}}, {
             1, 3, {0, -1}, 0.25, 2.053649, {0.9, 0.7}, {-0.532, 
              0.6449999999999998}, {{0.9985270121622536, 
              0.03835124697550566}, {0.03835124697550566, 
              0.001472987837746381}}}, {
             1, 3, {1, -1}, 0.25, 3.324248999999999, {0.9, 
              0.7}, {-0.43199999999999994`, 1.9449999999999998`}, {{
              0.533721751890427, -0.49886154737506133`}, \
{-0.49886154737506133`, 0.4662782481095731}}}, {
             1, 2, {1, 0}, 0.25, 3.472036, {0.9, 0.7}, {0.6060000000000002, 
              2.54}, {{
              0.024894903163446426`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365534}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 2, {0, 1}, 0.25, 4.063636000000001, {0.9, 0.7}, {2.406, 
              2.04}, {{0.5581297143740238, 0.49660944041247795`}, {
              0.49660944041247795`, 0.44187028562597636`}}}, {
             1, 3, {-1, -1}, 0.25, 4.1830490000000005`, {0.9, 
              0.7}, {-0.6320000000000001, -0.6550000000000002}, {{
              0.5610797291640619, 0.4962552434838799}, {0.4962552434838799, 
              0.43892027083593815`}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 3, {1, 0}, 0.25, 4.504649, {0.9, 0.7}, {1.468, 2.745}, {{
              0.07162023056624389, 0.2578580484295225}, {0.2578580484295225, 
              0.9283797694337561}}}, {
             1, 3, {-1, 1}, 0.25, 5.203848999999999, {0.9, 0.7}, {
              3.1679999999999997`, 0.9449999999999998}, {{0.9884652686886188, 
              0.10677865556821496`}, {0.10677865556821496`, 
              0.011534731311381241`}}}, {
             1, 2, {0, -1}, 0.25, 5.330035999999998, {0.9, 
              0.7}, {-1.3939999999999997`, 0.44000000000000017`}, {{
              0.9873171588334488, 0.11190168321564802`}, {
              0.11190168321564802`, 0.012682841166551204`}}}, {
             1, 2, {1, -1}, 0.25, 5.895235999999999, {0.9, 
              0.7}, {-1.2939999999999996`, 1.7400000000000002`}, {{
              0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
              0.1834701782931168}}}, {
             1, 3, {0, 1}, 0.25, 7.9944489999999995`, {0.9, 0.7}, {3.268, 
              2.245}, {{0.7014146941208831, 0.45763754325032285`}, {
              0.45763754325032285`, 0.29858530587911697`}}}, {
             1, 2, {-1, -1}, 0.25, 8.164835999999998, {0.9, 
              0.7}, {-1.4939999999999998`, -0.8599999999999999}, {{
              0.7019413494649495, 0.45740539062878915`}, {
              0.45740539062878915`, 0.29805865053505054`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             1, 2, {1, 1}, 0.25, 9.548836000000005, {0.9, 0.7}, {
              2.5060000000000002`, 3.3400000000000003`}, {{0.2701099903695068,
               0.44401642252521667`}, {0.44401642252521667`, 
              0.7298900096304932}}}, {
             1, 3, {1, 1}, 0.25, 14.185049, {0.9, 0.7}, {3.368, 3.545}, {{
              0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
              0.5706025407455412}}}}, {{
             2, 1, {1, 0}, 0.25, 0.8216359999999995, {0.5060000000000002, 
              1.2400000000000002`}, {1., 2.}, {{0.29701230228470993`, 
              0.45694200351493847`}, {0.45694200351493847`, 
              0.70298769771529}}}, {
             2, 3, {1, -1}, 0.25, 1.3768689999999997`, {0.5060000000000002, 
              1.2400000000000002`}, {-0.43199999999999994`, 
              1.9449999999999998`}, {{
              0.6390179457885975, -0.48028534305006504`}, \
{-0.48028534305006504`, 0.36098205421140256`}}}, {
             2, 3, {0, -1}, 0.25, 1.431469000000001, {0.5060000000000002, 
              1.2400000000000002`}, {-0.532, 0.6449999999999998}, {{
              0.7526841307775437, 0.43145188613934365`}, {
              0.43145188613934365`, 0.24731586922245624`}}}, {
             2, 2, {1, 0}, 0.25, 1.6999999999999995`, {0.5060000000000002, 
              1.2400000000000002`}, {0.6060000000000002, 2.54}, {{
              0.005882352941176469, 0.07647058823529411}, {
              0.07647058823529411, 0.9941176470588234}}}, {
             2, 2, {-1, 0}, 0.25, 1.7000000000000002`, {0.5060000000000002, 
              1.2400000000000002`}, {
              0.40600000000000025`, -0.05999999999999983}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             2, 3, {-1, 0}, 0.25, 1.7796690000000002`, {0.5060000000000002, 
              1.2400000000000002`}, {1.2679999999999998`, 
              0.1449999999999998}, {{
              0.3262651650391164, -0.4688456111782583}, {-0.4688456111782583, 
              0.6737348349608836}}}, {
             2, 1, {1, -1}, 0.25, 1.9784360000000005`, {0.5060000000000002, 
              1.2400000000000002`}, {-0.8999999999999998, 1.2}, {{
              0.9991912803851123, 0.028426494463303514`}, {
              0.028426494463303514`, 0.0008087196148877297}}}, {
             2, 3, {1, 0}, 0.25, 3.1904689999999993`, {0.5060000000000002, 
              1.2400000000000002`}, {1.468, 2.745}, {{0.2900651910424454, 
              0.45379221675559295`}, {0.45379221675559295`, 
              0.7099348089575546}}}, {
             2, 1, {-1, 0}, 0.25, 3.472036000000001, {0.5060000000000002, 
              1.2400000000000002`}, {0.8, -0.6000000000000001}, {{
              0.024894903163446423`, -0.15580483612497095`}, \
{-0.15580483612497095`, 0.9751050968365536}}}, {
             2, 2, {1, -1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
              1.2400000000000002`}, {-1.2939999999999996`, 
              1.7400000000000002`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             2, 2, {-1, 1}, 0.25, 3.4899999999999993`, {0.5060000000000002, 
              1.2400000000000002`}, {2.306, 0.7400000000000002}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             2, 1, {0, -1}, 0.25, 4.063636000000002, {0.5060000000000002, 
              1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.5581297143740237, 0.49660944041247795`}, {
              0.49660944041247795`, 0.44187028562597636`}}}, {
             2, 2, {0, 1}, 0.25, 4.25, {0.5060000000000002, 
              1.2400000000000002`}, {2.406, 2.04}, {{0.8494117647058823, 
              0.3576470588235293}, {0.3576470588235293, 
              0.15058823529411758`}}}, {
             2, 2, {0, -1}, 0.25, 4.25, {0.5060000000000002, 
              1.2400000000000002`}, {-1.3939999999999997`, 
              0.44000000000000017`}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             2, 3, {-1, -1}, 0.25, 4.886069000000003, {0.5060000000000002, 
              1.2400000000000002`}, {-0.6320000000000001, \
-0.6550000000000002}, {{0.26504824225773316`, 0.4413588919845381}, {
              0.4413588919845381, 0.7349517577422668}}}, {
             2, 1, {0, 1}, 0.25, 5.330035999999998, {0.5060000000000002, 
              1.2400000000000002`}, {2.8, 1.5}, {{0.9873171588334488, 
              0.11190168321564802`}, {0.11190168321564802`, 
              0.012682841166551204`}}}, {
             2, 1, {-1, 1}, 0.25, 5.895235999999999, {0.5060000000000002, 
              1.2400000000000002`}, {2.6999999999999997`, 
              0.19999999999999996`}, {{
              0.816529821706883, -0.3870515107452866}, {-0.3870515107452866, 
              0.1834701782931168}}}, {
             2, 3, {-1, 1}, 0.25, 7.173268999999998, {0.5060000000000002, 
              1.2400000000000002`}, {3.1679999999999997`, 
              0.9449999999999998}, {{
              0.9878681532785122, -0.10947449482237473`}, \
{-0.10947449482237473`, 0.012131846721487824`}}}, {
             2, 1, {1, 1}, 0.25, 8.164835999999998, {0.5060000000000002, 
              1.2400000000000002`}, {2.9, 2.8}, {{0.7019413494649495, 
              0.45740539062878904`}, {0.45740539062878904`, 
              0.2980586505350505}}}, {
             2, 2, {1, 1}, 0.25, 8.41, {0.5060000000000002, 
              1.2400000000000002`}, {2.5060000000000002`, 
              3.3400000000000003`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             2, 2, {-1, -1}, 0.25, 8.41, {0.5060000000000002, 
              1.2400000000000002`}, {-1.4939999999999998`, \
-0.8599999999999999}, {{0.4756242568370987, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629014}}}, {
             2, 3, {0, 1}, 0.25, 8.638668999999997, {0.5060000000000002, 
              1.2400000000000002`}, {3.268, 2.245}, {{0.8830809468449364, 
              0.32132380578535885`}, {0.32132380578535885`, 
              0.1169190531550636}}}, {
             2, 1, {-1, -1}, 0.25, 9.548836000000005, {0.5060000000000002, 
              1.2400000000000002`}, {-1.1, -1.4000000000000001`}, {{
              0.2701099903695068, 0.44401642252521667`}, {
              0.44401642252521667`, 0.7298900096304932}}}, {
             2, 3, {1, 1}, 0.25, 13.504068999999998`, {0.5060000000000002, 
              1.2400000000000002`}, {3.368, 3.545}, {{0.6065611779679146, 
              0.4885127586359341}, {0.4885127586359341, 
              0.3934388220320853}}}}, {{
             3, 1, {1, 0}, 0.25, 0.4434490000000001, {1.3679999999999999`, 
              1.4449999999999998`}, {1., 2.}, {{
              0.3053879927567767, -0.4605715651630739}, {-0.4605715651630739, 
              0.6946120072432233}}}, {
             3, 2, {-1, 1}, 0.25, 1.3768689999999997`, {1.3679999999999999`, 
              1.4449999999999998`}, {2.306, 0.7400000000000002}, {{
              0.6390179457885975, -0.48028534305006504`}, \
{-0.48028534305006504`, 0.36098205421140256`}}}, {
             3, 2, {0, 1}, 0.25, 1.4314690000000008`, {1.3679999999999999`, 
              1.4449999999999998`}, {2.406, 2.04}, {{0.7526841307775438, 
              0.43145188613934354`}, {0.43145188613934354`, 
              0.24731586922245613`}}}, {
             3, 3, {1, 0}, 0.25, 1.7000000000000006`, {1.3679999999999999`, 
              1.4449999999999998`}, {1.468, 2.745}, {{0.005882352941176479, 
              0.07647058823529418}, {0.07647058823529418, 
              0.9941176470588236}}}, {
             3, 3, {-1, 0}, 0.25, 1.7000000000000002`, {1.3679999999999999`, 
              1.4449999999999998`}, {1.2679999999999998`, 
              0.1449999999999998}, {{0.00588235294117648, 
              0.07647058823529418}, {0.07647058823529418, 
              0.9941176470588234}}}, {
             3, 2, {1, 0}, 0.25, 1.779669, {1.3679999999999999`, 
              1.4449999999999998`}, {0.6060000000000002, 2.54}, {{
              0.32626516503911657`, -0.4688456111782583}, \
{-0.4688456111782583, 0.6737348349608835}}}, {
             3, 1, {0, 1}, 0.25, 2.053649, {1.3679999999999999`, 
              1.4449999999999998`}, {2.8, 1.5}, {{0.9985270121622536, 
              0.03835124697550566}, {0.03835124697550566, 
              0.001472987837746381}}}, {
             3, 2, {-1, 0}, 0.25, 3.1904689999999984`, {1.3679999999999999`, 
              1.4449999999999998`}, {
              0.40600000000000025`, -0.05999999999999983}, {{
              0.2900651910424454, 0.45379221675559295`}, {
              0.45379221675559295`, 0.7099348089575547}}}, {
             3, 1, {-1, 1}, 0.25, 3.324248999999999, {1.3679999999999999`, 
              1.4449999999999998`}, {2.6999999999999997`, 
              0.19999999999999996`}, {{
              0.533721751890427, -0.49886154737506133`}, \
{-0.49886154737506133`, 0.4662782481095731}}}, {
             3, 3, {1, -1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
              1.4449999999999998`}, {-0.43199999999999994`, 
              1.9449999999999998`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             3, 3, {-1, 1}, 0.25, 3.4899999999999993`, {1.3679999999999999`, 
              1.4449999999999998`}, {3.1679999999999997`, 
              0.9449999999999998}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             3, 1, {1, 1}, 0.25, 4.1830490000000005`, {1.3679999999999999`, 
              1.4449999999999998`}, {2.9, 2.8}, {{0.5610797291640619, 
              0.4962552434838798}, {0.4962552434838798, 
              0.43892027083593804`}}}, {
             3, 3, {0, 1}, 0.25, 4.25, {1.3679999999999999`, 
              1.4449999999999998`}, {3.268, 2.245}, {{0.8494117647058823, 
              0.35764705882352954`}, {0.35764705882352954`, 
              0.15058823529411774`}}}, {
             3, 3, {0, -1}, 0.25, 4.25, {1.3679999999999999`, 
              1.4449999999999998`}, {-0.532, 0.6449999999999998}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             3, 1, {-1, 0}, 0.25, 4.504648999999999, {1.3679999999999999`, 
              1.4449999999999998`}, {0.8, -0.6000000000000001}, {{
              0.07162023056624386, 0.2578580484295225}, {0.2578580484295225, 
              0.9283797694337562}}}, {
             3, 2, {1, 1}, 0.25, 4.886069000000003, {1.3679999999999999`, 
              1.4449999999999998`}, {2.5060000000000002`, 
              3.3400000000000003`}, {{0.26504824225773316`, 
              0.4413588919845381}, {0.4413588919845381, 
              0.7349517577422668}}}, {
             3, 1, {1, -1}, 0.25, 5.203848999999999, {1.3679999999999999`, 
              1.4449999999999998`}, {-0.8999999999999998, 1.2}, {{
              0.9884652686886188, 0.10677865556821496`}, {
              0.10677865556821496`, 0.011534731311381241`}}}, {
             3, 2, {1, -1}, 0.25, 7.173268999999998, {1.3679999999999999`, 
              1.4449999999999998`}, {-1.2939999999999996`, 
              1.7400000000000002`}, {{
              0.9878681532785122, -0.10947449482237473`}, \
{-0.10947449482237473`, 0.012131846721487824`}}}, {
             3, 1, {0, -1}, 0.25, 7.9944489999999995`, {1.3679999999999999`, 
              1.4449999999999998`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7014146941208831, 0.4576375432503228}, {
              0.4576375432503228, 0.2985853058791169}}}, {
             3, 3, {1, 1}, 0.25, 8.41, {1.3679999999999999`, 
              1.4449999999999998`}, {3.368, 3.545}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}, {
             3, 3, {-1, -1}, 0.25, 8.41, {1.3679999999999999`, 
              1.4449999999999998`}, {-0.6320000000000001, \
-0.6550000000000002}, {{0.4756242568370987, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629014}}}, {
             3, 2, {0, -1}, 0.25, 8.638668999999997, {1.3679999999999999`, 
              1.4449999999999998`}, {-1.3939999999999997`, 
              0.44000000000000017`}, {{0.8830809468449364, 
              0.3213238057853588}, {0.3213238057853588, 
              0.11691905315506354`}}}, {
             3, 2, {-1, -1}, 0.25, 13.504068999999998`, {1.3679999999999999`, 
              1.4449999999999998`}, {-1.4939999999999998`, \
-0.8599999999999999}, {{0.6065611779679146, 0.4885127586359341}, {
              0.4885127586359341, 0.3934388220320853}}}, {
             3, 1, {-1, -1}, 0.25, 14.185049, {1.3679999999999999`, 
              1.4449999999999998`}, {-1.1, -1.4000000000000001`}, {{
              0.4293974592544587, 0.4949901829736365}, {0.4949901829736365, 
              0.5706025407455412}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left, 
        SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{907., {288., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$144]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$144]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$144 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->312349039],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{}}, {{{
       1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
        0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
        0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 16, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyVfQd0VlUWdURAVBgRUVEHHcCOIiidwA1VinRBmkoRQem9g4BSRFQcFXAE
G4QAAgqxAJEXINRQQkkooSgGW+gDtlB+17D3eevuR37/nzVrudZZb3bed867
79179j7nlOjcp0XXPDExMQeujYm5+q//tij+0ZebFuVLbjIj8/fzPXKCyv+u
8c8WffY72uvck9x21MXfgoKnzm0/8OVes1ddOmfFhTfPBgm9N2QUrZZh9nJu
8h2jS50Onp7U7jtXZ5fz8bODD/rv7r+j5g7ByQpGDFnS7o9eaWZv9r/rM4MH
X+qyIetqtacGczIWlX7z0dAeg3/La/b87+n6O/R6d7r+HSn/fmKX4rsHi/4x
fM26dLPHXr4ft7BUj5ij94a/94nL9+92t9xXc26R0D9lL/9e13nf4T6d2maq
f9y8kcu2jT+Wqf503Ut9/e7iPZninxw3rsPwR2dXz3QJf2wZU/j3PBaX/eu/
f77tub1mZ1yafl596+kTGWZnXH5q0viNi2+mm51xeWNIytS1/0wX/OxgV0rL
U1X/3C04WcFPJ4vdetPD4fWMy+i91U/WTFd7ajCz4+sxLa/eY3bGpW/vZYVr
zNyr17vucUlXn3liv+K7jmNHXrMgNfQD4+IGZ333z4wDZmdcOoy76dBP9Q+a
nXF5Y8/mLw/dcVD9467K/le37549oP50Sx6v8Ub7qP/d6LMzXthwZp+7mP57
/adqxVhcOiw+fmfDNXvMzrhU7JJaakah0M64LCn7drEvSoV2xiVf1xN7C0zb
I/jZwbEj++9f0Xyv4GQFy26tvfSnHuH9MC51fk3vdHzrfrGnBifv6/T2uPoH
zM64PNrO3fXerIN6vXu+w/gyZd4+pPju/K1/xk/Le9jsjMv2g1N6nDwQXs+4
dN2Rkm97idDOuNT9oG6D/x47oP5x3xz5rcHvL2aqP93d10+fVW1PxP/uzifn
fdlsyF4X/1yDu2NvywkYl5L1bm3/eOs9ZmdcFjVY9sWrY0M74zL0wz96TGkR
4jAulUu/NenEhH2Cnx2UW3XHoQ4X9wtOVlBvQPMeH712wOyMS75hL9zV7s+D
Yk8NZt3cLKVKkcNmZ1z+seznymcXHtbrXeelj8w697naM13T66v9+Wqp0M64
9Pl65Dvnix4yO+OyZeVnN324KLxPxqXOjknnOpbMVP+4dqOvafntgn3qTzfu
xj+3tBsQ8b+7u8Tb17aasQfvt3MWl3f2tZzUcXpoZ1yqPdhk4bnme81ucVk+
5eENH+0zO+PS7p1en5Yvmyn42UHrXyvnZC47IDhZwaNT39lT8ORBszMuc1sM
b15z2SGxpwbfzZnwwndZoZ1xeW9isY8+GBW53jUoXqvayqkRfHfNdcXXba4W
3g/jkl1myuw1yfvNzrjEZe3JuaVD+HsZl1f/6LR9mIv4x80f3vPVrqMj/nQz
pvWbfV+RiP9d1rGuJy7+moF1dMricnrR6jEHv9lrdsYl7bly7fpt22d2xqXp
n4MXvHVDptntPXbk+YOu7AHBzw4mP9an8NCTBwQnK/it+ulq15c8aHbGZct3
X7Vtk3hA7KnBcz/2aH5gYfh3GZeer9d4dfID+/V612HfpOrde+xVfPdt6Sl5
i64P/cC4ZB3K06D15HSzMy6vn6leaOPe3WZnXE4NPFn10Jzd6h+3ouEdXW5M
3a3+dKOffeq+yXHp6n8348Kys4fezHDN/hevoxaX5svrTmxcfb/ZGZf1zR6s
0PbuTLMzLh+Pfe3o2dWhnXH52TV5sOvBTMHPDn5IHNrg1eaKkxUEywqUWntD
+HcZl8YFHzuzpeResacG/epdne9fX6SbnXEZ1+lcSpc7d+n1rse5x3fdfSJN
8V3+PFPPFu+83eyMS/ln7u8+/8g2szMuAz44uGnQsvB6xqX0lOQ+4z9PU/+4
Mu817/dz0k71p9vd4pvyg7alq/9dozElH5zdjb833eKyslmxnOlPZJqdcXlq
9Kit5SaGdsZlR/EmU7+6LbQzLke++rhy3h/2CX528PKfJ6oG3+4RnKzgX/nP
JRcqkm52xiXu+W+6jJuxQ+ypQecGB5tm9Eo1O+My6OZb8rxeOkWvdwuujs3e
NSVZ8V2Vk63GHblntdkZl4NPf7zntqYhDuPS8sZGn5z5aIvZGZfNJS5Uv6H9
TvWP+0eVaZk1t6erP92gw3d88/hLEf+77stSNvdrtd/x9zAub5VpkjOoc6bZ
GZeVRXp1/un98HrG5abrp3X8Imev2RmXE38OvL788AzBzw5m37S1YrNSuwQn
K+jT/qmdb9y1zeyMy6e3b5waszFF7KnB5mojRp2o8IXZc/vHuOj1jIviMy79
5H4Yl1ly/4zLcfm9jIv6h3FRfzIu9D/i5RgXxot2xkXi6xgXeR4c45LqPz/O
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
O003Zf0SeT3jlerPhbd4dfH6Z5q+K2C/BX8OWmJsD9T75/F0nmF/RV7POHKu
PfF5/8noO8HrGd9v0VeB+PT/GfSj4PWMbxb6Rfjz17Ld67ifPJ5e9K/3JPpm
8HrinwJ+K9wn/TMAfTn8OW5n3QrgNP2b+NLO/ooyR8z6ZDbLxf8XxD+H4J9m
4k/28bj8HJpeKGC/F17P54H9QJrJ72UfEuKYTgN9aXg9n4ex6NOSI/5/Df7n
9XweeqDfC/F5/yXQV4fX8/fmRx8b2hn38uh70w44tu9C/x9ez/sZiD48tDPu
7C9EO+PLfoC0M44Zfr8j+13sYyPzyILvPP+H/hzv+TP0A/sUwb/UtwQn0M+q
mfzeGt7vTbc4Pos+S7QzXgPR36mh+Gew5590+10L0Ldqwf/+rUjiffZDfzBe
z3ixH1dD8XMZz8/pFkf2B6Od99MG/cRoJw77oXW5b3Dn+wavSeLv3Yl+a7ye
cSyMvmq0M45+XzibUxb4fcNsrlng9yuLiaEfenp90mJiGJd5Xn+2mBje52qv
L5xlFWOL1Tr2y4xTs2N3vfvlP25puTmJftC/y7ikCQ79v1j+Lv3cX+6T+B8I
Pv18QvxAfxb1+p7FxGi/MpkvFmxGvGQeWfCkH1/Tpez3nwdHf1bBc2XzyJiP
wvPpz1NLjB2K57wW7Py94/x1ZzqK5/z14ujPmlhfxKF//PdquqOf/fdY+Hf5
/iQO/cl+Wc0E/3vB1+uJQ/+zL1azXOxtxD+j4B+ZO2Z91WROWSDvT4vXY3gP
n/d5ZOtDxesZx2vwPm8pfivpv/8tvj3xXiU+7+d1//tiv2s8vkd4/5j/+T3l
9Yx7f3zvaGfcG+P7SBzG5Rf/e233H0gfLf7eg/73OnI/T/9fn4fo36Uf6J92
2F/58+bCvlW8fz4Pfp+o0M5+4y3FP7L/sfie8vdjFhfZB9pzcgT7tJY+rxpw
X31R/PYd/HZRfi/7k/vz4MK+6LTbusb+Fvtwu5+TOBfwesadfexb5+J/Xs+4
/4F9uD9vLtvJvt1w8mCfz/vh76qL844/n+6s4/wC2hkvmZtg/pS++haXOJx3
LuXye58U/5zy5wtYXK7z5xrY/T+O+4/3+ccg1Z/TYfHiefCqDN9vk/x5BxZH
niuJz/vs5c8Zsd81B+dT2hmvcjjPzvV0AmF/Hn8+XbaTeSIWxzY4R/tz6866
wf78FIsX++20zuV3ydy0QOaGRPyZkIsfEuR3NcfvapWLH2z+GuLYFXmSCz5f
Zn1m/Llykfk19rvYz4c4vE/2k+H1jFc+f16P3afM/bG4lPfnB1lcKiBPxb/L
38U+MP48u7CfzFMSL5nXY3bOUVogfmC+ReasBbX9fF3Enxdz8c88nz+yviu8
nvGVPKr9XubxiMO/2wb5Z38OXZgXpZ1xPIk8KnF4n+yjwusZxzp+njaOcVyE
vC5xeP+dkG/359xlO+aNF0q8BiNevJ5xZ/6Z+PTDC8j/+/Pyzrol6LtCO+PL
PicJufg/IRd/Joh/asI/zS/n+Q2nC/igBPGD8C/hc4v7Jw7/bgb4Jn9uXWJs
H/AjtDOOM8GzEIf3uQB8Fq9nHEf7PI7F8WfwQcTh/T8EHs2fi5ftyDfRbrwG
+Cni8Pf+FzydP0cv7JdCO+PFvijEoR9Wgh+knX6I9/lEi4vwdObn3fAzcYw3
BI/ZQvyZ4POD5p8H4B/a6c+RPk9qfjjl85X2u5bjdy0QPwsPa79X+FO7f/Kw
4KEsLh19/tfuU/hc+7sfghcmDuOV0HtDRtFqGXY98TsJvuVRcf0CiW9zxJfX
017o1LntB77cG+G1yacrry3z+4yf6oZ5f8prcz6j8tpj/LmBxk91xJxB5bXT
oR9QXlvmFSYzvpxvqLz2MOgWlNeWOYnGv3CuovLaE6CXUF5b5jMaP5Xpz3M0
HkrmPxoP9aw/L9L4phsxX1J57dnQeyivPc+fy2lxlPmYkXgpr93fn/tpcdmD
uCivPQ96G+W1Zb6n+e2CP2/U/Mw5ocprV4ZeSHltzhtVXvtnf86p+YdzS5XX
bgy9k/LanH+qvHZLf76q/S7OUVVeOxZ6LeW1qZtSXrszngfltanjUl57B/Rm
ymtTV6a89g5/nqzZqXNTXnsp9HvKaw/25/Pa8yBzci2OVRFH5bWL+/N/LS4y
n9f8KfN8zf9F/PnC5h+ZC2y/i3OEldf+yJ9fbL9X5hHb/XN+sfLaf/rzkXO9
T/5d6leV157pz182fJm/bNdTr6u89kR/vrPZqR9WXpu/V3lt9iVTXpt6WuW1
6R/ltanjVV6bumLltTl3W3lt6pyV12a/KeW12e9LeW326VJem32llNdmvyzl
tafj7yqvzfoC5bUVn9dzHrry2qyDiPDasCuvTV268trU1SuvzboA5bXZj0t5
bfbjUl6b/a+U1+a8e+W1WdegvPYs1KEorx2gjkZ57aaoG1Je+z7U4yivzT5O
ymsXQX2T8tpNBF+vV16b9VzKa9OuvPYQ1BMpr90f9UfKaz/n9ZUKedI01Nkp
r/0H6rCU117q9XcKedUJqAeM8NqoR1NeexXqDZXXTkSdnfLaX6IuUnntq9C/
SHntW1Evqbx2OuoZlddmHyHltdmfR3lt4iuvfRp1o8prrweO8tqTJb60d0K9
qvLa2xAv5bVfgf+V146Bf5TXToQ/lddmPbLy2qxXVV77OH6v8to/oW5aee3W
qCNWXvsb+F957c9Qj6y8dn/UfSuvnQf9f5TXboK6bOW1x6M+XXntT1Enrrx2
YdSnK6/NfjXKaxfz6/Htd7GOW3ntoZ7/Q3/+4Pkz9APr6OFf47XZv0V57RHe
7w157VXoA6C89rPoP6C89nzPPyGvfQJ9FZTXZh8V5bX/hT4PymsX9Pwc8tp3
oH+F8tqvoN+F8tr3oM+G8tpF0Q9Eee0e6PuhvPYbXt+SkNf2+9uEvPYCr59G
yGuv9vp4hLx2Hq9/SMhr5/X6lvDfX3F5p2rJ/nUnRXjtz+XvMi6FBYf+LyB/
l37W+yT+YsGnn38WP9CfF73+QiGvzb4cymuXQLyU157ox9fy87f6z4Pl52/D
c6W89jE8n8prd8Jzrrz2j/66szx8sr9eLN8+GutLee0R/rq2PHw/7z0W/bvK
a7MfmvLawwWf17P/g/La7NumvDb7OSiv3Q3+UV67kP8+tHgl+O9Pi1cjvIeV
174J31Pltfk+V15b3v8W38/xXlVee4X/fbHfxe+R8trsk6C89gl875TXro7v
o/Laqf732u4/Ufo88Peyj4Hy2txfKa/d13sewr/LfYLy2kuxv1JeexD6Kiiv
7fcxCO3DYFde+5S//4nEV3ntlf4+0J4T7tOU126MfbXy2twHKq/N/aTy2tyX
Kq/N/a3y2vfiXKC89p/YJyuvvcPfV1vcuQ9XXnuAv283HO7zldd+H+cd5bXZ
X1d57cF+X1/zp/R9tbhcxHlHeW3pH2v+kf63FpfA77tr989+v8prv+P3kbZ4
8TyovPYgvx+vxZF9myO8tt8H237XazifKq9dBedZ5bWlX7fdTwW/37XF8Vec
o5XXHu7397Z4sa+48tp7/L7TFkfpa23+lH7a5ofefh9v+11p+F3Ka1fx+3Vb
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
bxiv13ptXm95SOx/eL3mtebI/pn14Lxe813WRxr+6YJ9Gq/XfNccORewXph2
+o1103PkvMD+eNJnOKiF+mK/33WWY5896XscdEPd8Rw5XzBvxuvpN/YtnCPn
DubT/L7iYT3ynFzyadZnGH5jXbb1Y2dfStRZ+/23E2PLo075vJxfTiMvd17O
L/WQl5N+vFbPe17ONUuQr5N+v0Fb1PnmlseLF56U9dHn5RzE/F688KSdUf/r
98E+6z5DnXK88Kcvoi74vJynmCeMl/PUQOQJ4+U8NQt5wng5T41DnjBezlPH
/iZPGJ9LnjA+lzxhfC55Qj1PXefrKCL1I3qe4lwAPU+xXkbPUzrXXutK9Dyl
8+W1TkfPUzoXXutN9Dylc95Vh/93+UzGnfPZc8tz6nlK549rnlPPUxdlbjif
f50PrvUsep7Sed9ah/L/my/V85TOoWZ8dd40f6/OleZ7YJLMj9a6AD1P6Txo
rcvQ81SczHfWugw9T+m8Zq3L0POUzju284XMKba8qMwppt90HrHlhWTuMP2m
84Xpt0UyR5h+Gyxzfukfnc9LP2xAHlXPUzrHlr83ZvjlfKyep0rJXEitU9Dz
1B0yp5K/d6HMjVX9v56nUmQOLJ+T+2WOp/XRkjme9MOV56gmxv7vONX5g8h5
6ha53vKTgs/fu+GKc2ZDPb+ep4rCP3qeulXmZqreW89TOgeT958kcyFN5yPz
HDV/ruepH2V+ourh9TwVM9Cfk6i6dz1PDdU5bvhdV55jmBjLOYZ6noqVuX58
PovK/D7+Xp3Tx+dzuczjsz51MnePcdT5etaPUeboqT5cz1MDZS6e6eGvOLcu
MTInjnHnnDg9T+l8N/qnkcxxo390Xhv9w7lsep7SeWr0w0CZm0Y/cD6anqeu
PI8sMbaNzP+y/LzM7eLv1bld/L06n8t0KTKHi79X521ZnyWZq2V9L2V+lvIp
ep7SeVjKs+h5SudbKc+i5ymdY0W/cR+o5ymd66S6Vj1P6Zwm1bvqeaq6zF1S
Hayep3SOEv2m85KUx9HzlM4/ot+WyZwj+o3zjPQ8pXN/LN8oc3/oN53vQ7/p
HB/6Tef10G+xMpeHftP5O8or6XlqkMzTUX2snqd0Po7yU3qe0jk19JvOo6Hf
dO4M/aNzZ1RfqucpnRfD39VJ5sIoP/V/AICheCM=
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
            "]], 
           Polygon[CompressedData["
1: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

            "]], 
           Polygon[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJxNmXn8lmMWxn/vr+ftfp6SpchWSPumRptUJCQmyxSRMBRCZFeJlPZV+04i
2UIkTNqQZGzDhDEMYzAYW9aImO/1uc7nM/PHec/1nvs8576fezn3Oeep1//y
XoMrKyoqNvFTBd6kXFHxUamiojH856yi4lXwDviP0N/AP8FbQteDW8NXp4qK
SnSXFhUVTfl/EfIm8AzZ2+AyfDfoXfAu8Ea0XS778CV5RUUNZMt49sHkfm4F
74rs9ZLbfop+f4H/Cn0A/k0y6DHwm/DXoFfAr8Mfhh4ArxROtrMOvgp6HnwH
vA1t54EPjfHL5tPw+6B/gtfDR+Zu/yPjWZnc/23gh+B3ovMgvAXj+xJcDd6Q
/0Pj3d+A/gJ+C/4u9BT4H5lJeF7y+J8Dvw1flMxnYf9f8L8i/wj+WeZ5+xL+
JDo5/cxD50P+/xn5xxoT8ifAM+F/gqqicyc6LWKNtFbN9R7gZvBE+9aS9T7h
/zvgpmWvk9ZLfWgeftC4sHMr8/AG8keQ/R3Zxnivf2aezw/g78eYNfYRufs5
m2eXJrfPBc/MPWcTwMcgH4B+e/i9yNaCV8D/A70I3gJvBw0Ct4Wvh+4Gj0b/
1VhrrfkCbD4LvjV57SW/G/ws+BnwC1oH6FHwK5mfXQd+GX4YdCO4I3x+7vbp
jG1trNE6+O+g4TGGtsl75ij4nmXvk1rws2gbC/6j+oTu0V6SDehp8Cb447FX
12S2K/sb4Rsyr93T8eyfwJvjfR+PNX0RvCre5eUY/0taf+ilwPdDd4Dvg8/I
zcfzLovhK5Ev0ZmAVsQ8z8o9J7ckn5f14Eczk/Cc5DHfBX4MPjs3n1R4vjRv
nXVWY11uy0zCSzUWaF7ghbnP6EyeXa13Rv4EfGryfExGPkbjQD4Z/nXmNd0W
djSfd2luoIfi2eege2Ou9Oyd8HHYeV7nRHsA3gm6BnwE/NvYG99k9lk6Fz15
7ovM/kF9tWQtvwI3h9+PrXrwLegsKex3bst9vj5E55lk3yU/uSnZv20D7w7f
A/oYXLPsM/uCxp/cti32zO08uxd8ObY3QP3A/0anNvzNktvqQp+C/6wzgs7+
/L+D55ZCnyB/Pln2LbiO2gr73MeTn31LawdeXNh3rwBvhg7U+Ub2RLLOlpDL
zmvwfWh/H7x32T5RvvFOvTvP9NCzuf34u+H3VmF7mfyD/B86Q+GX8NyV4AHy
O8nr/uD/7THh8cl7YDn45uR11d6Ym7zfVoOnh1zrPiF5D68L3649rD4n0s/E
ZJ05yJYl+8Vphc+X9qTO09zcZ25qYaz9Nin57GmPjU32g5/LP4CfjDOoZ+ep
r9ifm2PvjUuW63zfUthX6zx+mtmmzvUsdPol+4bLw5d+pzMB/h6+ueT/vdA5
TfOGfBw6vcEXg1+DJjCmKshORTYa/dPhpybzQbSfGeexL3wL/69A/zvaT4b+
gOwiZGdrjOick9nOVSX3cUbyGekB78P/G0oeRxdoBLgr/PM4Izori3PfS/Ox
+ZX8UdxNxyWfs/ORV6f/f8Q83IT+FeCjaf89dG3J+0F3k+IExQsb0GlF7LEP
/MjMOt0yv/eByCeW/S6TkZ8Hv1Bt4GPgOzPv4Qp07ip89nTXVyn7PlJcsiR5
nrX/FybfC8uTz7z8zGL5j4gNdHa2Z767df9ti3d/OOIH9XN7xCo6Ixt0NpNj
JPkHxQlbwLfDT+DZYeDj4T0yxzzHwY/SvATurv0bOprP98JHjcXWKK01dsaA
f4/sQvq9lP4PYk4W675GPknvibxn5nmW3knh306E95ce+ufBV+rcgr/C5rmK
7bQW8BOS5/tM7LST7wD31Z7RfSe74Drwy9A/EL5f5rtbevuHXO17Q/3kP+VD
AkvWiv97wftgp2bmO1T/D0XeC1xfvlF7X74RXpf/J4IbK5bJjMvw4Yx/D/hp
2Nkt9PWcbJ5SclsN6FzwrprvzHtmMDyDBoITfBfte3D1zO+oczFQd7rmIMaQ
Q6eHfkl6MYbx0ALwBTorme/9s3j2MKiexsHYfiGIPkHvrv0Sz8rGRMZ/Kfxq
dA6Od28gf6xzGvMgeTfwbiE/ClwDvjNsyvZlmfeGbNXWudM4Fa/R1h38Pfwn
qC94B3xf+QLwQfCf+X98yCcwnovkCxjPATq7Jb/DxdDIktu2V/Fc/VjF9oUl
U78ngQ9IbpO8SXJfR4IL+CWxtwdmHpPG9h38m6oVFYdrTtCpCXUGV9GZ1dpq
/6Oze8zDHqHTE7w/vDLWUeu5q3wKeD+9OzZbg3eRjwk/eU3meewW8gt0F4Kv
hV+h+wN8Jbxa8tzuo/WCDgF/i7082eb34F+gluCv4VWRdwTvBB/L80O0dvBK
7QPwz8gn5e7/usL9XiW/pjiCtuPQ2TP6OiLmSn11jbXWe3WK+VG/XWJ9NX/t
oXZQW+jYwD9Wtb7m8CtwU/Bn8OH0OQ18fWbd7v+n31x+G35m8lzpvpbNNvKr
JdvRO/4G/xxqAv4PvD784Oi/beA2gY+JMf0bvUbwj6saa8w74N+yrn1iDwxh
TFPB1+keSOZDCs9N+9L/3rWhzkhQ/einQfB2Qe1D9il9dIj5vxFbU7F5TZwd
+aJfqzgeXgJepDsT31cdf3gDfHVu/qJiJZ65HvwC+Eb05qI/Un4Ancbo75Ib
j0PnVXRugu+FfAR8VOa4dwz8cXTqIs/gV9NWE3wVfDRUG3xz2Xf1vuAr4ZdD
B4fOct2xJce9E6D7wZPlX2jbDj4Z/ih290P/t+TnDoXaVHr8DeA57au0D9F9
nnFeCy8q/X8IVAt8XYx5XLzjz8nv8RL6j/HsSPDL4FFl3x36/1Due+Mp5J+g
fzZ4I/gceFbp//dg6z5sjtP68n+n/IDiX/Qvhm/WuYDvjf6F8Edytz+LfAp4
ovwr+G/J7/s+fBKyGSW3naQ4m2f/AO8DVYJPg/eCSiG/BEqV7m8qVA98Gfxm
nl+KndHwQck2tU/60rYnOmeWHY9rb5yldUneM8PgU3hmUazFA7nn83P5IdU4
wFO0popf0bkB/mJyHeUB+Xz4Z9rTyh2T5+Qb+NDkeoXi4aMUu4G7lh1ra/zH
w6dn9l23aC/Q7wnI1mDzXnB38BOF7cxSbKFzFHGs2pQ/KI94E35P7nv/XfDU
3HWMm8DtVWcBd4B3irzjcHiXyC86w8fq/ou9/XqybBV93aU6ifZF4Ttxjvyq
fKHiVsbfMeZwhOISdO7ObfsRxRvwr3We4e8kxyofJeNjlMug0ybyKfVxIvRb
yTnaKclx73js1ef/9/ID8GX8PwT+IM+2Ul5V8v+esWe0dxrF/Cjen4b+HN15
6Bf8/6Lk+a0X66V1u46+btX8o/tUcm50d2Gs8b8CPyByLuVeK3Kf0SfRaV12
Xqn8cr+Y27oxhrdjPxxUdp6l3GxDxJbK9ZQn6t2fS8779tXZKmxHNTH9n5t5
v+kdVCNQrWAK+isLr+urms/Mcel78LbMQf1K+wz5i7aB12B/OvpvFJY1CL0Z
ZfsZtd0S/mpa2fd+j7jL2oW+nptM2z6Vjk3HFK4RjAwfVS/81DWF7+ABirvo
9zBkBym+Cx9bLXdesFBzhO56rSny2vDqufurE/odwAcqP809rtfRfxLcHHlN
+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
            "]], 
           Polygon[CompressedData["
1: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
1DzQ+dGYj02uKVBbQIPpkVxTobaChnJ14fN5o/BTrK/C+SHaCfnr+sKaUSk3
h4fLzynMnVcH1+X+G+TWvNC+qEFRi0JDu6XwGmTtboi1yRqH68BBWftjk/V8
ODhcHE0KbYrxVsl3v9pbnFUa87YqrplRO0PzXR3rAZ0ejWWD8PvJ3AnOAndh
z8CdngruTM0jBR+8ufCYdXLX0Pgu6jXwqX80lsz85rTcNbOPk/cQ3AoOxt6i
BlA9+Cd8lByRvckeJReB88DVNgYXgt/1jfz8nsL1J2qDaPbUc6gXUltBg6N+
cFNhfv5nZj2Re4DLwbm4N3JicuPzc9c3P0nWN3uFHgt/RdulBrgs+NvJufvA
p+GHvUMf+CxZI8A+JfRZ8kG0IDSB1YX5Nto5GvIS4V+TuR8aCFoI+VuXmK93
kzVdtN0i+OV84Z8iH7gxme93C368vDD/7B78+a7CGghayJm565VopGil7P8V
yZol2iU12TuTNdItEX/vFV4kXJZbQ304+R7grj1Db6a+UR71ih6RLzSO/PPF
5BootVA0efJR5oxcBA7MXJLPUrtAE38zec2dHvPNWrwr+Vl/zqyXosdQ56Km
8FtyPn5Z8PGvkvUbalVoxKtCD0IrRB8qRb6OdowGtTb0lnmhn1BbYX7+yLxm
yO2eT47V9SP+oOGST1ADRNuF/w+NfH9lYU5CbORM5GxkTVE7rx76C/rMVcLV
hL9NzvfRntGjHgl9YGbcP1om+gTaKHpRHnrZuNwaKGsHfWJU6A8PFtYv0JLR
N/5MfucDoz9rgXzqjPj++yPfOiv0su+S9Ta0XvS1Rwu/c2IXMYy1wPr4K3NM
JjZTz6TWQ82H2iT1H2pB1AuoZRHPds7dH+2beLF95J+L4rx8JfIxatXkrOSu
n2XOL4kJ9K2ZO1YQvypzzz+15YeSc2fuj1hbI7f2zv6nPgqn4PcCHwbXuC3i
Ge+Qd8keInZ/n3lvET/Lc1+zPPbHL5lzLnIv1iBrcVM8D79/QP+nXojevzD5
7P9a9neZOQz3R84Pt7kv4vH34V8U5wN9VibHKGLVf+M84J7oyzU3Fo6/1XLX
FFh/aOJtYg/+NznmUBuqFXol+XbbiFe3F9Zb5smewHmRmcNx1tfLzO34fQHc
AQ7RLTOfODL4LrVx+AhaNTXdCYU5Fly3SmbuBUeGK3eJ6+EPXYI/jy9cf0Nb
R8+mHtUiObcipyC3gJPC7esG94dPnJZZQ4d/wGnhtlfG/fN7AOoR6I1j1Rpn
rgVT30LPRx8ocmsWaBfoH3tFfr6UWmp8P/lXrWT9aJns2zLrUeh35wSfYm6o
MVBrQB9DP4NTw/+3y8y18+Tc8OgYD32e2gIaPnp8neA75Kzk4+TX5NrkkOSD
8BVqKdTgT0rO78mFyYmrBh85MfIFchf00DmZ9ddBwW9OzlxD4rcU1ISoDaFh
oWX9VOncnfwUvf/XSuci5CTkv02TuRc5cRPZn1U69ydfRR+AHx2fmaPCVb+u
tPZAjkN+Dz/smLlm3D34Us/gt/w2hflhrsl5f680P+wb/XsFn+yf+Z3ybrfE
86NpoFd8V2ltoX1cT/2CZyHf3CVZD56VWd/mt0/on9fHemF9NEzOpTpH/31y
/16B+EW9nT3H3oNTws0WFz4r4fBwefTz4fF+qM29EOcDGhZaFr83alju30jx
e4/XkrkpGi1a7Z2Fz8auoZ2hrw8LfslvG+Dz1NrZA4cKP5t89nL+kDugZ/0v
c3z657dQyeM1yn3WcqagNVED4KypKBzrqRFQK+A3Afw2gJoY+thPyVwBTQ1t
jd9o8FsNaobo0cMjllAf5vde/L4DrkCMrRHP1DnOd551UO7fWlFTPirm5ODc
NXLm6qvgD2jonN2vRnxHo0SrpL5wcaxfapXENLjBAbljHb/34Lc1/AaD+jX1
AX6rcpPwBcm/d4DL8k55t9Q3Rkc+Qn6D3k4t9J8aW2H9h7XfM9Y79Y9rM+fX
1IIvL5y7bw2thHoKtUvqMQ8XzscviHjIb6XIafpGf3IdahrcG5o52jlzDr/u
mPtd/B+f5RY4
            "]], 
           Polygon[CompressedData["
1:eJwt1nnwTlUcx/EHz6/nxyA0ZC+llESlshXZKsuUkF2ylEhF2ZdsZe+X5WcX
ilYtdlqsiWqaaadtIkv7ahQRen3nPn+8Z87nfb7nLufec+6t0uuhtg8WTKVS
echBk0wqNbBAKnVFOpWqjkdzU6me3AyurXwHbpero5h28cj6Kssj1Z4rl0Bn
7jKuLFpqny6USp3BcDWfcMe4C53wAuyWG+N64+qgl75rI2eSdrj6aCbXx6Xa
1XCXvppybfTULsWVxCjnqMq15crLlXCdPIJPaRdA6+jjRnMV5IroxtXgbsUj
2p24rugkj1dXV7seBui7kWuOh7Vrc9dgnJqiuMyETnZfk1BArqKuTfb6SqOW
3BETuDYxf3hc3aVcu5hLuQrqyj3QW7sPhuprJTfFIO1aXE2MNfY97qe4J+cs
h6e5KzPJPcW9XYAxXBqVXd/jah7DJnmJunfUfaTmQyzgSqGGujlqZuNN+Vi8
G9qDkKvvJ3kYlhk7yriRMTfyaZTXP0TdYKwz9mS8C1x/uR/+lO/HbGMfiHGY
qm4N7tF/L85Rf0TN9+gqd8NJ9V/Lv6Oo/ru5HnjNuONcGa6X3BO/yP+gNHeX
3B0/yq+q7azdBYX0HeQy3IXarbgZ2Cz/xRfn7pP7Yi3Xj5vlGvq53vswhXuQ
y+eGyIMxjRvKLeWGxXOLWvm5eIccpx6O6vuQO4Az2oW5llil5rO47lg/cjV8
IO/F8Xjmck2sVPdxrBHtOnFf+vZkkmcSz6YNdzteVjeKe0b/tJhjzOBewq36
W+Qk54pz9o7nq39QOnk34x39AifiHVd3DZ417jnuVzW/YZe+RfJ0foI8ETO5
vtxc7i15C1ZzU7mF2Kl9kDuCJWryude5w/IPWCnPwWbugHwIT8uT1XaPdR/7
UqwdbjH3XTo5Xhx3QbyP2KP9BbcPi9RM59ZwO+KaMZ8bzz3LzZPnIo+7Obum
28sd0V7ugzyuS+xr6BD7Ep7gOsh3oq3cAoO5bnKP2DviXcHG7LV8jcVyZ0zM
nqMdJjnvDG4dt0p+CbO4O2Pf4VrLrfBYzHH2mjfJb+CJTDKvMb9L4vgxN/I4
PKW9FPP0DZLrxb1oN+KaoKXcCA/EfibfFM/POaZljxfPbXuM5/K49dxr8quY
zY3Irv0477J47lzDTLI/xj55Q7xHXJ14t7gGckPcIu+PfYK7xTt1M15U9y33
H9dUboIXuH1cQ+1G+Fnf+/Ku2BO0i3PFsEzdkLhf7hHHfxj3ZJLrW86NjTnB
Q/LbOMJlYn/B63J/DNc/IuY4nrO8CWn9OXifWyE/6TzzY39MJ2s71vgf8R20
3vqo643VaibHHqM/X90cDI9nlkmOE8fLjf00vj2xHuL9jPdP38C4B+yO9ch9
ioWO93KsQe1/08l7He/3NhzUPsWdjGeSSdZcrL1eck90l99FFee7CF/p2yxf
jDu0y6gpF9+u2DOc5xL3MUrdSJzgzqICN0IejvXZdbTW2JXGrYj5innBBm6d
vDbuWd1SnNE+i0/0vRhrI9ZMrLN0su/H/l9GXS3nWOj4C7BVXp5dv3G//8Xe
Ed+JeCbcN/L+mH95LFZys2O9xFowdgUudpyqOKxvp5otKCmXwl5ujfwd2snt
c5L9Lfa5Z2K+4l8lnfwMrcsk4+M4heSC2CAfjW+XdvWcZO+OPfxXFHEfnbiO
eMV1lMVV3GJ5EbbF/wcqcmPk0XG83OR7Ft+1BnJ9PM+VRk118+V52CIfVpfD
NZZvwpeZ5PsY38nmcjN8Ix+Kd5e7Ub4Bn8vVUNh9FcFtzlUpniP2af/NHcNT
zlEIU4yZmpN8++IbWIy7XHs6Ny3WhFwCV3Cz5Jl4I/79UJ17Us6LtSWfF/8h
3Fw5H2/lJt+p+F6VkUtjeW7yLYxvYln5fOyQy/FXGztAXoLtchFU4ybKE2L+
1W2N52nscffwT+yf8Szjv05/xZxkncR6KRz/WMaO5R7FKa4gV4kbL4/DRnlm
ds+OPXYj8rn/AYcda4M=
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0bkuBEAcB+Bx3+yue61jeQQ6UVkvIKEShYKOSmhEywsIClcI2UUrQiJ6
KuLYuEK01KLg25DMb76ZYmb+M5McmxqczAshTEt/fggn7C0I4YIjfOQcP7jG
H54xYlFS3otD6OAb2/nKNr6wlc9M8JEtfGCcWTbznk28ZSNv2MBr1vOKdayV
mERzxeb2V8On4TmfuMFLzvOUo8ywj6tMcJHf7jjLLCd4zGEuc4Az7OEwuxj7
Oy6YBluEwtw7FIWghXWd8sImS7jFUm6zjDss5y4ruMdKplnFDKu5zxoeMMJD
Rtkp3bm/cXiKSxziEcd5xxl+cYFxBa4wZZ7+/89fYnk2PQ==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0UkuRFEUgOFbCiEGLIBoSlOdpkrf9yMxETYgGEkZYQXCxJwNCJbAAkRY
AmNCqlKim+F7Mfjz5eYNzrnvtq7vrBRiIYRdleMhPDg8V4ZQZG1VCD9Ms74i
hCW2cJs5zqmnJoRZZjnDDKeZ4hSTnGQnJ9jBcSY4xjaOsoUjbOYwmzjERg5y
QP3Kq1XHdmhggb92XGaJWT6yjvd8cZdr3vKS5zzlIY+4xX0ucovtXGOcC+xX
mxLRN3Xoqdp9ov/ErmgGk3xlikWmWWKGZWb5xm6+s4cf7OUn+/jFHL+Z57xW
o/l22YzO3OMGD3nAE57xgje8iuZ4x7vY/3v+AVqaNL8=
          "]]}, {
         Line[{2, 19, 36, 582, 53, 599, 70, 632, 87, 665, 104, 698, 121, 731, 
          138, 764, 155, 797, 172, 830, 189, 863, 206, 896, 223, 929, 240, 
          962, 257, 274}], 
         Line[{3, 20, 37, 584, 54, 603, 71, 636, 88, 669, 105, 702, 122, 735, 
          139, 768, 156, 801, 173, 834, 190, 867, 207, 900, 224, 933, 241, 
          966, 258, 275}], 
         Line[{1438, 1437, 1457, 1461, 1483, 587, 1503, 2097, 2246, 1522, 643,
           1539, 2266, 1542, 1560, 2279, 1564, 1580, 2289, 1583, 1598, 775, 
          1612, 808, 1630, 2317, 1633, 1653, 2329, 1656, 1670, 2141, 2339, 
          1689, 2149, 2352, 1708, 2365, 1711, 1727, 1730, 1747}], 
         Line[{1439, 1440, 1458, 1465, 1484, 589, 1504, 614, 1523, 647, 1540, 
          2268, 1545, 1561, 2281, 1567, 1581, 2118, 2291, 1599, 779, 1613, 
          812, 1631, 2319, 1637, 1654, 2137, 2331, 1671, 2341, 1676, 1690, 
          2354, 1695, 1709, 2367, 1714, 1728, 1733, 1748}], 
         Line[{1441, 1443, 1460, 1469, 1486, 591, 1506, 618, 1524, 2104, 2259,
           1541, 2270, 1549, 1563, 2283, 1571, 1582, 2293, 1589, 1600, 2124, 
          2302, 1614, 816, 1632, 2133, 2321, 1655, 2332, 1661, 1673, 2343, 
          1680, 1691, 2356, 1698, 1710, 2369, 1717, 1729, 1736, 1750}], 
         Line[{1442, 1446, 1462, 1473, 1487, 2095, 2241, 1507, 2099, 2250, 
          1525, 2105, 2261, 1543, 2110, 2272, 1565, 2284, 1574, 1584, 2119, 
          2295, 1601, 2125, 2303, 1615, 2130, 2311, 1634, 2323, 1644, 1657, 
          2138, 2334, 1674, 2345, 1683, 1692, 2152, 2358, 1712, 2371, 1720, 
          1731, 1739, 1751}], 
         Line[{1444, 1449, 1464, 1477, 1489, 2096, 2243, 1508, 2100, 2253, 
          1526, 2106, 2263, 1544, 2274, 1556, 1566, 2114, 2285, 1585, 2296, 
          1595, 1602, 2126, 2305, 1616, 2131, 2314, 1636, 2325, 1648, 1658, 
          2335, 1667, 1675, 2145, 2347, 1694, 2360, 1703, 1713, 2373, 1724, 
          1732, 1742, 1753}], 
         Line[{1445, 1455, 1466, 1481, 1490, 600, 1509, 1521, 2254, 1527, 666,
           1546, 2276, 2111, 1568, 2286, 2115, 1586, 2297, 2120, 1603, 798, 
          1617, 1629, 2315, 1638, 2326, 2134, 1659, 2336, 2139, 1677, 2349, 
          2147, 1696, 1707, 2362, 1715, 2375, 2160, 1734, 1745, 1754}], 
         Line[{1447, 1456, 1468, 1482, 1492, 1502, 2244, 1511, 2255, 2101, 
          1529, 2264, 2107, 1548, 2277, 2112, 1570, 1579, 2287, 1588, 2298, 
          2121, 1605, 2306, 2127, 1619, 835, 1640, 1652, 2327, 1660, 2337, 
          2140, 1679, 1688, 2350, 1697, 2363, 2154, 1716, 2376, 2161, 1735, 
          1746, 1756}], 
         Line[{1448, 1459, 1470, 1485, 1493, 1505, 2245, 1512, 2256, 2102, 
          1530, 2265, 2108, 1550, 1562, 2278, 1572, 2288, 2116, 1590, 2299, 
          2122, 1606, 2307, 2128, 1620, 2316, 2132, 1641, 2328, 2135, 1662, 
          1672, 2338, 1681, 2351, 2148, 1699, 2364, 2155, 1718, 2377, 2162, 
          1737, 1749, 1757}], 
         Line[{1450, 1463, 1472, 1488, 1495, 2247, 2098, 1514, 2257, 2103, 
          1532, 2267, 2109, 1552, 2280, 2113, 1573, 2290, 2117, 1592, 2300, 
          2123, 1607, 2308, 2129, 1622, 1635, 2318, 1643, 2330, 2136, 1664, 
          2340, 2142, 1682, 1693, 2353, 1700, 2366, 2156, 1719, 2378, 2163, 
          1738, 1752, 1759}], 
         Line[{1451, 1467, 1474, 1491, 1496, 1510, 2248, 1515, 1528, 2258, 
          1533, 1547, 2269, 1553, 1569, 2282, 1575, 1587, 2292, 1593, 1604, 
          2301, 1608, 1618, 2309, 1623, 1639, 2320, 1645, 880, 1665, 1678, 
          2342, 1684, 2355, 2150, 1701, 2368, 2157, 1721, 2379, 2164, 1740, 
          1755, 1760}], 
         Line[{1452, 1471, 1476, 1494, 1498, 1513, 2249, 1517, 1531, 2260, 
          1535, 1551, 2271, 1555, 719, 1576, 1591, 2294, 1594, 785, 1609, 
          1621, 2310, 1625, 1642, 2322, 1647, 1663, 2333, 1666, 2344, 2143, 
          1685, 2357, 2151, 1702, 2370, 2158, 1723, 2380, 2165, 1741, 1758, 
          1762}], 
         Line[{1453, 1475, 1478, 1497, 1499, 1516, 2251, 1518, 1534, 2262, 
          1536, 1554, 2273, 1557, 723, 1577, 756, 1596, 789, 1610, 1624, 2312,
           1626, 1646, 2324, 1649, 888, 1668, 2346, 2144, 1686, 2359, 2153, 
          1704, 1722, 2372, 1725, 2381, 2166, 1743, 1761, 1763}], 
         Line[{1454, 1479, 1480, 1500, 1501, 1519, 2242, 1520, 1537, 2252, 
          1538, 1558, 2275, 1559, 727, 1578, 760, 1597, 793, 1611, 1627, 2304,
           1628, 1650, 2313, 1651, 892, 1669, 2348, 2146, 1687, 1705, 2361, 
          1706, 2374, 2159, 1726, 2382, 2167, 1744, 1764, 1765}], 
         Line[{291, 308, 325, 1011, 342, 1028, 359, 1061, 376, 1094, 393, 
          1127, 410, 1160, 427, 1193, 444, 1226, 461, 1259, 478, 1292, 495, 
          1325, 512, 1358, 529, 1391, 546, 563}], 
         Line[{292, 309, 326, 1013, 343, 1032, 360, 1065, 377, 1098, 394, 
          1131, 411, 1164, 428, 1197, 445, 1230, 462, 1263, 479, 1296, 496, 
          1329, 513, 1362, 530, 1395, 547, 564}], 
         Line[{1767, 1766, 1786, 1790, 1812, 1016, 1832, 2170, 2388, 1851, 
          1072, 1868, 2408, 1871, 1889, 2421, 1893, 1909, 2431, 1912, 1927, 
          1204, 1941, 1237, 1959, 2459, 1962, 1982, 2471, 1985, 1999, 2214, 
          2481, 2018, 2222, 2494, 2037, 2507, 2040, 2056, 2059, 2076}], 
         Line[{1768, 1769, 1787, 1794, 1813, 1018, 1833, 1043, 1852, 1076, 
          1869, 2410, 1874, 1890, 2423, 1896, 1910, 2191, 2433, 1928, 1208, 
          1942, 1241, 1960, 2461, 1966, 1983, 2210, 2473, 2000, 2483, 2005, 
          2019, 2496, 2024, 2038, 2509, 2043, 2057, 2062, 2077}], 
         Line[{1770, 1772, 1789, 1798, 1815, 1020, 1835, 1047, 1853, 2177, 
          2401, 1870, 2412, 1878, 1892, 2425, 1900, 1911, 2435, 1918, 1929, 
          2197, 2444, 1943, 1245, 1961, 2206, 2463, 1984, 2474, 1990, 2002, 
          2485, 2009, 2020, 2498, 2027, 2039, 2511, 2046, 2058, 2065, 2079}], 
         Line[{1771, 1775, 1791, 1802, 1816, 2168, 2383, 1836, 2172, 2392, 
          1854, 2178, 2403, 1872, 2183, 2414, 1894, 2426, 1903, 1913, 2192, 
          2437, 1930, 2198, 2445, 1944, 2203, 2453, 1963, 2465, 1973, 1986, 
          2211, 2476, 2003, 2487, 2012, 2021, 2225, 2500, 2041, 2513, 2049, 
          2060, 2068, 2080}], 
         Line[{1773, 1778, 1793, 1806, 1818, 2169, 2385, 1837, 2173, 2395, 
          1855, 2179, 2405, 1873, 2416, 1885, 1895, 2187, 2427, 1914, 2438, 
          1924, 1931, 2199, 2447, 1945, 2204, 2456, 1965, 2467, 1977, 1987, 
          2477, 1996, 2004, 2218, 2489, 2023, 2502, 2032, 2042, 2515, 2053, 
          2061, 2071, 2082}], 
         Line[{1774, 1784, 1795, 1810, 1819, 1029, 1838, 1850, 2396, 1856, 
          1095, 1875, 2418, 2184, 1897, 2428, 2188, 1915, 2439, 2193, 1932, 
          1227, 1946, 1958, 2457, 1967, 2468, 2207, 1988, 2478, 2212, 2006, 
          2491, 2220, 2025, 2036, 2504, 2044, 2517, 2233, 2063, 2074, 2083}], 
         Line[{1776, 1785, 1797, 1811, 1821, 1831, 2386, 1840, 2397, 2174, 
          1858, 2406, 2180, 1877, 2419, 2185, 1899, 1908, 2429, 1917, 2440, 
          2194, 1934, 2448, 2200, 1948, 1264, 1969, 1981, 2469, 1989, 2479, 
          2213, 2008, 2017, 2492, 2026, 2505, 2227, 2045, 2518, 2234, 2064, 
          2075, 2085}], 
         Line[{1777, 1788, 1799, 1814, 1822, 1834, 2387, 1841, 2398, 2175, 
          1859, 2407, 2181, 1879, 1891, 2420, 1901, 2430, 2189, 1919, 2441, 
          2195, 1935, 2449, 2201, 1949, 2458, 2205, 1970, 2470, 2208, 1991, 
          2001, 2480, 2010, 2493, 2221, 2028, 2506, 2228, 2047, 2519, 2235, 
          2066, 2078, 2086}], 
         Line[{1779, 1792, 1801, 1817, 1824, 2389, 2171, 1843, 2399, 2176, 
          1861, 2409, 2182, 1881, 2422, 2186, 1902, 2432, 2190, 1921, 2442, 
          2196, 1936, 2450, 2202, 1951, 1964, 2460, 1972, 2472, 2209, 1993, 
          2482, 2215, 2011, 2022, 2495, 2029, 2508, 2229, 2048, 2520, 2236, 
          2067, 2081, 2088}], 
         Line[{1780, 1796, 1803, 1820, 1825, 1839, 2390, 1844, 1857, 2400, 
          1862, 1876, 2411, 1882, 1898, 2424, 1904, 1916, 2434, 1922, 1933, 
          2443, 1937, 1947, 2451, 1952, 1968, 2462, 1974, 1309, 1994, 2007, 
          2484, 2013, 2497, 2223, 2030, 2510, 2230, 2050, 2521, 2237, 2069, 
          2084, 2089}], 
         Line[{1781, 1800, 1805, 1823, 1827, 1842, 2391, 1846, 1860, 2402, 
          1864, 1880, 2413, 1884, 1148, 1905, 1920, 2436, 1923, 1214, 1938, 
          1950, 2452, 1954, 1971, 2464, 1976, 1992, 2475, 1995, 2486, 2216, 
          2014, 2499, 2224, 2031, 2512, 2231, 2052, 2522, 2238, 2070, 2087, 
          2091}], 
         Line[{1782, 1804, 1807, 1826, 1828, 1845, 2393, 1847, 1863, 2404, 
          1865, 1883, 2415, 1886, 1152, 1906, 1185, 1925, 1218, 1939, 1953, 
          2454, 1955, 1975, 2466, 1978, 1317, 1997, 2488, 2217, 2015, 2501, 
          2226, 2033, 2051, 2514, 2054, 2523, 2239, 2072, 2090, 2092}], 
         Line[{1783, 1808, 1809, 1829, 1830, 1848, 2384, 1849, 1866, 2394, 
          1867, 1887, 2417, 1888, 1156, 1907, 1189, 1926, 1222, 1940, 1956, 
          2446, 1957, 1979, 2455, 1980, 1321, 1998, 2490, 2219, 2016, 2034, 
          2503, 2035, 2516, 2232, 2055, 2524, 2240, 2073, 2093, 2094}]}, {
         Line[{579, 2313, 859, 856, 855, 2324, 852, 2322, 851, 848, 2320, 847,
           844, 843, 2318, 840, 839, 2316, 836, 835, 832, 831, 2315, 825, 
          2314, 824, 821, 820, 2311, 817, 816, 813, 812, 809, 808, 805, 804, 
          801, 800, 797, 795, 829}], 
         Line[{580, 2304, 826, 823, 2312, 822, 819, 2310, 818, 815, 2309, 814,
           811, 810, 2308, 807, 806, 2307, 803, 802, 2306, 799, 798, 792, 
          2305, 791, 788, 2303, 787, 784, 783, 2302, 780, 779, 776, 775, 772, 
          771, 768, 767, 764, 762, 796}], 
         Line[{18, 19, 20, 21, 1457, 22, 1458, 23, 1460, 24, 1462, 25, 1464, 
          26, 1466, 27, 1468, 28, 1470, 29, 1472, 30, 1474, 31, 1476, 32, 
          1478, 33, 1480, 34}], 
         Line[{35, 36, 37, 38, 1483, 39, 1484, 40, 1486, 41, 1487, 42, 1489, 
          43, 1490, 44, 1492, 45, 1493, 46, 1495, 47, 1496, 48, 1498, 49, 
          1499, 50, 1501, 51}], 
         Line[{598, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 
          592, 593, 2241, 594, 2243, 595, 596, 600, 601, 2244, 604, 605, 2245,
           608, 609, 2247, 612, 613, 616, 2248, 617, 620, 2249, 621, 624, 
          2251, 625, 628, 2242, 629}], 
         Line[{631, 597, 599, 602, 603, 606, 607, 2246, 610, 611, 614, 615, 
          618, 619, 2250, 622, 623, 626, 2253, 627, 2254, 633, 634, 2255, 637,
           638, 2256, 641, 642, 2257, 645, 646, 2258, 649, 650, 653, 2260, 
          654, 657, 2262, 658, 661, 2252, 662}], 
         Line[{664, 630, 632, 635, 636, 639, 640, 643, 644, 647, 648, 2259, 
          651, 652, 655, 2261, 656, 659, 2263, 660, 666, 667, 2264, 670, 671, 
          2265, 674, 675, 2267, 678, 679, 682, 2269, 683, 686, 2271, 687, 690,
           2273, 691, 2275, 694, 695}], 
         Line[{697, 663, 665, 668, 669, 672, 673, 2266, 676, 677, 2268, 680, 
          681, 2270, 684, 685, 2272, 688, 689, 2274, 692, 693, 2276, 699, 700,
           2277, 703, 704, 2278, 707, 708, 2280, 711, 712, 2282, 715, 716, 
          719, 720, 723, 724, 727, 728}], 
         Line[{730, 696, 698, 701, 702, 705, 706, 2279, 709, 710, 2281, 713, 
          714, 2283, 717, 718, 2284, 721, 722, 2285, 725, 726, 2286, 732, 733,
           2287, 736, 737, 2288, 740, 741, 2290, 744, 745, 2292, 748, 749, 
          2294, 752, 753, 756, 757, 760, 761}], 
         Line[{763, 729, 731, 734, 735, 738, 739, 2289, 742, 743, 2291, 746, 
          747, 2293, 750, 751, 754, 2295, 755, 2296, 758, 759, 2297, 765, 766,
           2298, 769, 770, 2299, 773, 774, 2300, 777, 778, 781, 2301, 782, 
          785, 786, 789, 790, 793, 794}], 
         Line[{827, 892, 889, 888, 885, 884, 2333, 881, 880, 877, 876, 2330, 
          873, 872, 2328, 869, 868, 2327, 865, 864, 2326, 858, 857, 2325, 854,
           853, 2323, 850, 849, 2321, 846, 845, 2319, 842, 841, 2317, 838, 
          837, 834, 833, 830, 828, 862}], 
         Line[{860, 925, 2348, 922, 921, 2346, 918, 917, 2344, 914, 913, 2342,
           910, 909, 2340, 906, 905, 2338, 902, 901, 2337, 898, 897, 2336, 
          891, 890, 2335, 887, 886, 2334, 883, 882, 2332, 879, 878, 2331, 875,
           874, 2329, 871, 870, 867, 866, 863, 861, 895}], 
         Line[{893, 958, 2361, 955, 954, 2359, 951, 950, 2357, 947, 946, 2355,
           943, 942, 2353, 939, 938, 2351, 935, 934, 2350, 931, 930, 2349, 
          924, 923, 2347, 920, 919, 2345, 916, 915, 2343, 912, 911, 2341, 908,
           907, 2339, 904, 903, 900, 899, 896, 894, 928}], 
         Line[{926, 991, 2374, 988, 987, 2372, 984, 983, 2370, 980, 979, 2368,
           976, 975, 2366, 972, 971, 2364, 968, 967, 2363, 964, 963, 2362, 
          957, 956, 2360, 953, 952, 2358, 949, 948, 2356, 945, 944, 2354, 941,
           940, 2352, 937, 936, 933, 932, 929, 927, 961}], 
         Line[{959, 1007, 2382, 1006, 1005, 2381, 1004, 1003, 2380, 1002, 
          1001, 2379, 1000, 999, 2378, 998, 997, 2377, 996, 995, 2376, 994, 
          993, 2375, 990, 989, 2373, 986, 985, 2371, 982, 981, 2369, 978, 977,
           2367, 974, 973, 2365, 970, 969, 966, 965, 962, 960, 992}], 
         Line[{1008, 2455, 1288, 1285, 1284, 2466, 1281, 2464, 1280, 1277, 
          2462, 1276, 1273, 1272, 2460, 1269, 1268, 2458, 1265, 1264, 1261, 
          1260, 2457, 1254, 2456, 1253, 1250, 1249, 2453, 1246, 1245, 1242, 
          1241, 1238, 1237, 1234, 1233, 1230, 1229, 1226, 1224, 1258}], 
         Line[{1009, 2446, 1255, 1252, 2454, 1251, 1248, 2452, 1247, 1244, 
          2451, 1243, 1240, 1239, 2450, 1236, 1235, 2449, 1232, 1231, 2448, 
          1228, 1227, 1221, 2447, 1220, 1217, 2445, 1216, 1213, 1212, 2444, 
          1209, 1208, 1205, 1204, 1201, 1200, 1197, 1196, 1193, 1191, 1225}], 
         Line[{307, 308, 309, 310, 1786, 311, 1787, 312, 1789, 313, 1791, 314,
           1793, 315, 1795, 316, 1797, 317, 1799, 318, 1801, 319, 1803, 320, 
          1805, 321, 1807, 322, 1809, 323}], 
         Line[{324, 325, 326, 327, 1812, 328, 1813, 329, 1815, 330, 1816, 331,
           1818, 332, 1819, 333, 1821, 334, 1822, 335, 1824, 336, 1825, 337, 
          1827, 338, 1828, 339, 1830, 340}], 
         Line[{1027, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 
          1019, 1020, 1021, 1022, 2383, 1023, 2385, 1024, 1025, 1029, 1030, 
          2386, 1033, 1034, 2387, 1037, 1038, 2389, 1041, 1042, 1045, 2390, 
          1046, 1049, 2391, 1050, 1053, 2393, 1054, 1057, 2384, 1058}], 
         Line[{1060, 1026, 1028, 1031, 1032, 1035, 1036, 2388, 1039, 1040, 
          1043, 1044, 1047, 1048, 2392, 1051, 1052, 1055, 2395, 1056, 2396, 
          1062, 1063, 2397, 1066, 1067, 2398, 1070, 1071, 2399, 1074, 1075, 
          2400, 1078, 1079, 1082, 2402, 1083, 1086, 2404, 1087, 1090, 2394, 
          1091}], 
         Line[{1093, 1059, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 
          1077, 2401, 1080, 1081, 1084, 2403, 1085, 1088, 2405, 1089, 1095, 
          1096, 2406, 1099, 1100, 2407, 1103, 1104, 2409, 1107, 1108, 1111, 
          2411, 1112, 1115, 2413, 1116, 1119, 2415, 1120, 2417, 1123, 1124}], 
         Line[{1126, 1092, 1094, 1097, 1098, 1101, 1102, 2408, 1105, 1106, 
          2410, 1109, 1110, 2412, 1113, 1114, 2414, 1117, 1118, 2416, 1121, 
          1122, 2418, 1128, 1129, 2419, 1132, 1133, 2420, 1136, 1137, 2422, 
          1140, 1141, 2424, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157}], 
         Line[{1159, 1125, 1127, 1130, 1131, 1134, 1135, 2421, 1138, 1139, 
          2423, 1142, 1143, 2425, 1146, 1147, 2426, 1150, 1151, 2427, 1154, 
          1155, 2428, 1161, 1162, 2429, 1165, 1166, 2430, 1169, 1170, 2432, 
          1173, 1174, 2434, 1177, 1178, 2436, 1181, 1182, 1185, 1186, 1189, 
          1190}], 
         Line[{1192, 1158, 1160, 1163, 1164, 1167, 1168, 2431, 1171, 1172, 
          2433, 1175, 1176, 2435, 1179, 1180, 1183, 2437, 1184, 2438, 1187, 
          1188, 2439, 1194, 1195, 2440, 1198, 1199, 2441, 1202, 1203, 2442, 
          1206, 1207, 1210, 2443, 1211, 1214, 1215, 1218, 1219, 1222, 1223}], 
         Line[{1256, 1321, 1318, 1317, 1314, 1313, 2475, 1310, 1309, 1306, 
          1305, 2472, 1302, 1301, 2470, 1298, 1297, 2469, 1294, 1293, 2468, 
          1287, 1286, 2467, 1283, 1282, 2465, 1279, 1278, 2463, 1275, 1274, 
          2461, 1271, 1270, 2459, 1267, 1266, 1263, 1262, 1259, 1257, 1291}], 
         Line[{1289, 1354, 2490, 1351, 1350, 2488, 1347, 1346, 2486, 1343, 
          1342, 2484, 1339, 1338, 2482, 1335, 1334, 2480, 1331, 1330, 2479, 
          1327, 1326, 2478, 1320, 1319, 2477, 1316, 1315, 2476, 1312, 1311, 
          2474, 1308, 1307, 2473, 1304, 1303, 2471, 1300, 1299, 1296, 1295, 
          1292, 1290, 1324}], 
         Line[{1322, 1387, 2503, 1384, 1383, 2501, 1380, 1379, 2499, 1376, 
          1375, 2497, 1372, 1371, 2495, 1368, 1367, 2493, 1364, 1363, 2492, 
          1360, 1359, 2491, 1353, 1352, 2489, 1349, 1348, 2487, 1345, 1344, 
          2485, 1341, 1340, 2483, 1337, 1336, 2481, 1333, 1332, 1329, 1328, 
          1325, 1323, 1357}], 
         Line[{1355, 1420, 2516, 1417, 1416, 2514, 1413, 1412, 2512, 1409, 
          1408, 2510, 1405, 1404, 2508, 1401, 1400, 2506, 1397, 1396, 2505, 
          1393, 1392, 2504, 1386, 1385, 2502, 1382, 1381, 2500, 1378, 1377, 
          2498, 1374, 1373, 2496, 1370, 1369, 2494, 1366, 1365, 1362, 1361, 
          1358, 1356, 1390}], 
         Line[{1388, 1436, 2524, 1435, 1434, 2523, 1433, 1432, 2522, 1431, 
          1430, 2521, 1429, 1428, 2520, 1427, 1426, 2519, 1425, 1424, 2518, 
          1423, 1422, 2517, 1419, 1418, 2515, 1415, 1414, 2513, 1411, 1410, 
          2511, 1407, 1406, 2509, 1403, 1402, 2507, 1399, 1398, 1395, 1394, 
          1391, 1389, 1421}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
+6L8vk1F+WCCKB/cTuVjJcoT24jyRLk8qfyRyh/l8qf6AqovkOuL6hfURP2C
XL/0PUB78T2A/D10tUw/+HZjFtRVK5ozYt5NKLK4X4VS//NreqlLybxkWPHP
j4Ubs2/AysoTyasflMEbvVf1Nd+5Yf9hTp8uJeRA50kBn0YckuZRH4o92phn
4NxbTl1G7rwEe+xmpQ08rpC/f1wrvn+Qv39n0V7QTbQXlNvLe9G+8KtoXyi3
L2qPOEa0R5TbY+Ze14p6G69hwtpJU/u0KMCpsc4RQ/eVwdDZDTodcsrFrwZv
1i21zsPfX3t8MKoog0zRP+A70T+g3D8YiP4Eg0R/gnJ/MkT0P0j9D8r9D/VX
QP0VyP0V9W9A/RvI/dtX0R8C9Ycg94d9Rf8JzqL/hErqP4NyzV50tvXH8NIv
l3XcMqHexpPl+yIV8NttY6bqiRyceXXs8OjjcdAZ5n+LtpXmyaI/xz5n/+3P
Ue7Pqf/HMtH/Yzvq/z3EeIHdxHiB8nhB4wsGivEF5fGFxiP8LcYjlMcjezF+
obcYv1Aevzr3TNjy6F4eHtYaOrN1cjIu2GLWLkRaNyX7qRx5n5iBhhbb9Rcc
SsDSMPOC09L7mm/+dvNmYiAunO/jXPfuUvy2zvPkBKk8y69POr7o3TT4M6Hz
iTm/POH7/WOrekjzq3divAYar0Eer2l8BxrfQR7fk05dGed91xdGur/Qntg6
A4r3m5+fdUkBc4sNjh5ShOIb0/ruU5pGw7SG5R4zpXlyj5DV7jl7EO8vz6k/
qG0IvOuy5o6X1L62eFUVnWudi4t3/nTcdqYPPjB6Fd79oNQep+zVnfDyKjZJ
m2b5sHcgOq4zfpM+WBrfA0ftPtL+Jp7ID9s4Y2EMnvEyGxRVUgaxjYsqQ2cU
4a5lv0Yu35+IzwaNGnnof+v6inN/dNvewnqjrdwKbyJ6BZm0iF5fBrPFfAzn
ifkYyvOxSDF/ww1i/oby/O2rmO9hhpjvoTzfyxbzQ5wi5ocozw8Htn2p/22/
K1rGPHmkL5Xn06yxFZrSvD3CQmN6rQcnwBmcnE02x8C5Gc1iPkvrILcdrdsv
bRAEdWonaU6Ji4X6kQGeetK6foeY30IzMb8FeX7rIebDcFDMh0GeDzu3HjRk
17JgPOC9ukGrmV7Q1HHOCYNvCqjUDGveplEsjjhb1fTRygDUrXPc4aJUL6C5
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
7eSMdT7OdgiY5AnRXrZ5PaR5i/PRiMw7o45j3YqUfo6zTkJqzCenTn+l8my3
7eiUeTY4LOr65KhzdlBx0mlbgTTPXF9vfl7U9V1Qd4vqgZKrq3CQ0V9flOK3
pnyZ8y3pOFjUVltxYs1BPD8/aX+0pHM69EztX2dPw51P/RtkVrjhk9iDMztI
f1dz59Mex7cEgKmPXeDmZf7YRctQZ77Un+yZODGv7x1PaKv3olmG0Xn0q7C5
miSt3ye3H5d40fA0/Jj8vdnxwGgsA5+3bz5K37lTzNq4B7ZYd/26na0SE9Ak
raDRypcK2GTe+Be880Df/QaK0gWp+CVjQvPPUnt8v252rauuifClWHfl7b7+
MGLUmnm20rzCsI35iNPSOvaM6yiDBttDweKxqeKypFMccSVkfaMI+LU8+rWV
bihELZljkC/NAzfve7MqLzoI1DVjR6VVh4DOwYTYJ9K6YwPunVV7+jnIqqf1
+x/VEPg51XFhmlQvxz+PjNmvEgpX980/0O5AEJQ5VZtWSb8PeHvt09s1IXDP
aLfW8OpzMMfcvHV96fcWt/1O1h4VCsPPGtcKuuQNZxbGut+Uvv/xK23Lr+2J
gfdRK3J2h3tC6zPDfNWl78GiclSvIwtjYEn4ku1el45A0Pojebuk8gn/9nXn
lJQEuORe0sFs4hZQicrqM1d6r9XHvgyZ6JQEfedENLjd8ABaVi2a9PCxAq4t
HvHcZXYS+H88HDY37RyGror9ZSn1M0bw+9fTU1Ew3nR8stX3GIyZfe6TrvT7
Va29bqsvdoXFtfa2+BWQhkf+6aawkdbd15tZzIrV9MRfAyZahSsyceY5lWk7
pfVdtzjvVXpGAZgYs1E7TScbnz85WvzeRyqHMW936K1Mho4tevTbsMAdMrbq
drSQ/u6GcbWMJ69JhpA1a93StfxgttGd0NPSemSdQ52zrSJSYPKb67fb2QTC
gTWas3SkfvK75yf7HnHJ8LjDak1noxBwNd1b55AUn1zeYGL3hRdhwZ4ei3e2
CIV2aS1WuErfQ0Rmu7Nv7qfCX787wx+MC4WRzWeczstUQOZ3100Gt1NB77RG
rwG+wVBxtvGXh1L/+etPHdeJr1LhSY8n2TdNA2Du48ha16V19OrPmmt+pSL8
Ltqt9b7aH9LXte0Ze0laD+7rqnX6TwZYq60JLFp8Fj5MvjndP05aT5X2tX4N
mXBhQPDmP42sYf7xDlojpHHq6JROWi2+pUKfLW+OPDrqholbJpWsldYLtZZ4
LbRpHw4Ln44Jna2Wjtr79ZNe/U/fK/OQqttwqLPDKejCy0z8rBVT7h+lgKil
Y3Ljp/mhw8/c4yNsc7F7d7XkuzulfsYGrN7dPIZb9Jbm9CzOwtlBhzvWk+YV
mX3q7Rjuagdb8cZTrSfp2OdJkKK1NN7hSJNW1l0TIHfrteo8q7Ngt3jt7J7P
FdDyueqEHdJ69nmdcru2ncPAufeR58PuSeudfTtmVy66BJkF9zulzg+FH8PM
rL/kSuPFgMVzYw+nwZ3qnP1e+lHQbUZW7x/SuHNg+QDNpLAM6BU0pX27VtHg
tzLoxmdpPpOQ3+z7ebss6DzqVcpelSjYUzbogZo0X1pRqp563+QyqG7Q7XF9
WST8+hTx2umoND/ftOF5cLccGNbUus4ImxCwTBsaUVuaZ647ZVr5ZJ20Hnwe
YLcCg2HO9MFzuxxQgOl40z6vUy7DMu/Rf3obHYO80KH6mq4KqG6Y2NylAKE4
eeS4Q79Ooe2h87lPpXlRUI8BP48Oi4abI9aPVfFJQ0t7v2/rkqVx079FE3V/
D3B4/C65fVIuttF9abzIXgH2thPbv3zrB8v++q94YpWLjedN6lwulb/L+l/D
+hiGwLC/HU1drmbikLhYu17npfGisdqDL7uSYLvdnpLxfxNQRbHreh1pHmJw
yjdD4XsJ0sYe9ugbEIsbl4x9Mf2i1L/1jXq3bagHTD7cMiNKMwqcjy9eYiH1
J/37xunFrzkACUcNzi8pjYeSrjF/h0jzgQcNM6+ddzgPYcWqqh13xcOJD3VW
NpTmz6scPHtMfhwFW3IOtiiS+oPOIwJfTfnfeaoDW9q67IyH4Mvji25Js5/f
C8cObiytp0K/Oapn90So1a7BeT3VBJh82W+wgfT8U77a7Gn6KAP0k+PKfEri
YWjkvN1tpXZtrvWnTk/XbKi1+edBC8M4OOytcOl9WJq3N59xrLRdPuChoqD6
j6Kg9sDxKdOlefjxbXYrX+7MhomTSy1d5kejpW15gvMJaf3uZL9ijkYCPA4L
t+nomol1TFYmTnaTnsehx7ULt8Jh/5kOps0u5OLb7NqHW9kqYND4/gU/HyRC
yPfFJV+c0/Dhr6cWBiEKSMkwMx7cPAXiuoZvsk3JwIFB83o2c1HAgvoRHnmz
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
3yKfyB3mE6lvIHwia5lPRFm8C/ksFjKfRSHVS39WLzr0+8Xs9+XkT5nH9HPI
n7KL/CmH6HxLb9KxZDoXyN/RnPk7RpKf5RL5WdqSn8WQ4hksHkM6LZjOBfKJ
3GQ+ESvyxbhwXwzFT7H4FOYrySBfiSnFm7L4etLxYDqW5LtpR74be/LdzFCi
o2ImfCt6zLeygvl3ZJ2LzL+jT/6dvTOETk+mk0D+FzfyvzjR+a5LpGPOdBaT
D+gD8wFtJb/Mc+aX2UbxaBZXpiP7iZ4xP9Fe0hnGdGaRH6cf8+Nok85TpmNL
vqT2zJfE/S+t6LzfOvIrBTO/kj35YloxX8wV8gENIB+QBvmACik+hMVlf01b
pjOG/DX1yV9zhPw110lnONNxJZ/Rb8uaPiMn8uPsZH4cOb6bxU+Tzl+mc4z8
SqHMr3RUib4b+X2OMr/PcSW+p2zyPSH5nozI9xROOgeYzhXyDQ1mvqEs8kn1
Yz4pOd6fxencKfgxn9E3igexeCbp9GU648iHVb9WTR/WD9IJZzoR5GOyIh+T
Pp2DNSSdOrX+bz/X3n41/VwXSMeG+aHmkR9qGvmhrtD52/Gkk9G3pk5f8oVN
Jl9YEPnC7Ml/lEX+I3l896L2Ysfai0qW8CW9YL6k+Uqe5z75s1Yxf9Y38jc9
YzqGc4W/yY35mx6Qzhqm04B8Xn7M53WTdE4xnafkkypJrOmTUqbTg/xir8kv
do38Yl9IpzbzWx0jv1Ue+a2CyW8l67xiOm7kO+vPfGenSOcm822NJN+WK/Nt
nSKdvkznEPnXljP/miHpuDOdLeT/Ok3+ryd0ft6BdKYynQbkgzMiH5wO+eAW
kF+sgvxih+h8/kIWd6B4HdKZxnRKyU/Xlvx0H8lPt4R0fjCdgeRH8yM/2h3y
C4wxFf67TuS/60z+O1Py5XVkcWPyf9kx/9cOai8ZrL00JF9Yf+YLG6TkedzJ
H9eT/HEDye/QmXxkbuQju0W+D12Kn2ZxWacL0zlNPjsF+exkn8UI0gliOsHk
U7tJPjU/8qHIvjwVw201fHlb5HjPmnHZ73aXdM6Szl7yu00lv1s++d02yzov
a/r+npDvT498fzfJ9yf75kyZzlvyzaWQb86RfHOR5BPcQj7BePIJ+lB8K4vL
/rt0ptON/HcG5L/7S36f46Szm+ncLxM+xH+YD7EH6QDT+Ug+vi/k49Mhn1Fj
8jMeZjovyM8YQ37G1eTfOUG+P/IxwR/yMZG/CU4zP+A7JTrbyRc5hnyRoeQb
+rtQ+O/Smf9uPrWXfay9LCVfnjr58paTj0x+Hmf2nPnkTzRm/sQVpNOc6dQh
f1808/c1JT9jOvMzqlP8Mo+TTjzTWUc+wXDmE6xPOleYzj494ZdUJb/kVvJL
2pJOFNOJJ7/hE/Ib/iC/Yf8+QqcR8132JN/lDvJdWpHv0oH8iXWZP/Gokngk
+TTdyadpRz7NFIqfZvFjSvyPKgOE/3Eh8z+mkd+zLfk9l5O/L5viWixeW4nO
ZOajNCFfZC7ptGd+UlPyk9ZjftKppFMdVtOPWevffebcUeL/5FHyvvNM0lFj
OvnkS/UnX+pk8jnK/kc38j/K8TJqL7GsvZiRL1KVfJEtSV88RxY9z8n/9sF7
kD+0Ujw/mtLzzyGdusxfWUD+ynbMX6lLOlVMZzn5TLXIZ3qQfKaFSnya3ZlP
8xb5NNeRTifSOUA6LcivOo/8qlnkV9VR4vdUnSH8niuZ37OdEt/rYfK9FpLv
VZd8r3Vn/N++0SPkG9Un32gX8o0eYf5ZWceG/LNJzD/7inymq5jP9CXFbVh8
vRIfbjPy4SYzH24J6VgxnVTysfqQj/U19ZNNSCeR6awjP682+Xnl/hNJZyXp
lJDOUfLDniA/bDX1z2tIpx3T0SZf8B3mCz5C/tOJ5D+Vx5FMai/OrL18J19q
EvOlHqfn8aLnkceLN8yfK4+bP0knhenMIH+rK/O3viOdb0ynO/l8x5PPVx6v
j5Ef9gLzw8rxKBbXUaKTTX7hi+QXnkZ+YRclOl/Ib7uY+W1l33EK0xlOvuMf
zHf8g3TmMx1b8u2qGNb07cr+5W9MJ4/8y5/JvyzP9zbLOktr6riQ//cu8/9m
kc5HpjOVfNDJzAftRn5hDfILy/Ne2UesxeJjSSeS6ViRn3ot81MTvwJ1mR95
KPmRg5kfeQLpmDMd2WfqQD5TeR19n/y/wPy/sl/biLWXAeQL/km+YBPyBVuS
D/oP80FbUFxlWs34WNL5ynRakr/4B/mLS8lfLPus/zL93eSzPks+68e0TtQi
nQqms5Z8yrVmCZ/yQ/IpE28EfZlOV/JrnyS/9kLya8t+Z5WVNf3OGeR3/pha
0++cRv7uyeTvfk/+7ksUn8Ti+aSjynzTu8k37UC+aXfyTaeQzjims5z840sX
1PSPyz7rDcxnHU/x7Sw+n3QymA9d5Zrwob9nPnRZZzfTOU4+blXm475JvvU8
5lt/QvErLC7rNGI6i8gPvoT5wd+Qzi2mM4p8vreZz/cU+a/9mP/6ObUXA9Ze
fpAvuzX5svuQL9ucnseCPU8C+dN3M3/6YPJx72Q+bkOKH2ZxlcfCz/6K+dmJ
a4QvWNyYdCKYTjr5xNuTT/we5Rspr4iFTKeI/PKbmV+e8p/YlfnNn5LffCvz
m1N+FdcxnQ3kux/FfPfDyZ+ezPzpoyiexuIGpDOb6awl//4h5t83IJ1MpuOv
xP++h/z+lbWE378B+f0dKV7N4i7kl/+H/PJq5Jc/RfGjPE46tWrX1NlCPIGG
jCdwknSOMJ2F5MffTn78LrR/YUc6TZjOX/JZZzCfdSL538uY/30LtZciai/N
qL1cJV/8e+aLN6fnWc34AC+ID1CrY00+gC/56CczH30wxSew+BXS2cB0xhwX
nAF74gzI+1ARpDOD6XQhn34r5tOPOSW4BF2JS/CXuATNiVfQj8Ubkq/fh/n6
m1Lcn8XXk44x02lE3AMbxj1oqUTnFHEDjjJuQAPiJDgxToIGxV1Z3Jl0HJlO
tzjBH5jD+ANdSOcU02lMHIYkzmEgHROmk0EcAyvGMZB5DilMh/adYS7jORgS
96DcvCb3wJziv1lc1pnFdLaTz/0T87m7EWdAk3EGIqi93GXtReYSdGS/P0bP
04fxGTyJzxDB+Ay+pKPNdIhviW+Ib2BIfANP4jl0ZTyHsxTvxeJHSOc901lG
nIRE4iSYEichmHT6Mh0N4kUUES9iGvEiDhJXoTtxFZoTV8Gd4t0Yb6EW8SUe
M75EfSXciSOk05np6xG3YTJxG8qJ29CQdF4xnVTiVyxm/IqZpNOL6fgR/0Gb
8R/SlehcJw7GKMbB2EK8iHDiRcwkXsROiieweD7p9GU67Yin0YfxNPaRTjbj
UVwlHsUn4lG0IR6FRgMxLjxn48Je4gx4M86AMv6DFfE6vhCvI4Z4HXeICxHP
uBCdiIPxhjgYU4mD0ZXiZSx+l3QSmU4h8SUCGF+iG+l8ZjqdibORR5wNmXMb
QTp+TKeQOBU/iFOhS5yKbqRTyHQeEq+jBeN13CGdUqbzvbvgXbjr1eRdPCCd
5kwnjrgfcYz7UU06D5lOd+Jm5DJuRizpxDCdQOKHlDJ+SG/Suc90XIi/4Uj8
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
5Xyiiv8xJw2M8OekATcnzWecg/tcUfK5HsBTR8g5t+TzviCf9y3e/2l5/zOW
jvztyNQFgewmM6tenr4rkLxgUqWlS/677+PR7/P3a3TZHnnWBNrMunD16TkZ
gY77mh672umKFxtxrsSdjFVe18HDT7XNTglMja4+qv7RK94gnv/f8vwzeHwn
efxivt+r8v1eOdAmT+NXNnmjkooWiq+3PjAsokOtSb//OzkAH1dG+LiycI7n
hHMsavB6I+HXFgm/tpznLyLPPx6eq2WFYJ7rIHxWY/isp+Gz5sNnPRgQzGfN
gsNKEA7r4yifLyspfNlNeKVVwiuth1caKrzSUYMzKgwvs0x4mRpwQ2eEG/qT
v2/U+15eNwLOZTmcy3f0iukne5XhPlw/eTR8yo1vg/kU9gh7ucLXzIHLiBMu
I/9Kn6c4JDxFdC2fmygm3MRUuJJewpXkC/N5hL7CI5RumlSiadK2yOzpSzKn
L5n2MJ8Jhy+4x/56xynEwBdUFL6gvMEXjIOPyC98xEn6/MOkz6970t2+dWtv
uOvnt9J+Pn3yL6RPHnLJf91IXncCr+v2UNeVnrm1N3kMvfcNh4N7771kP6/r
IfP/c2C39Gz30B/uJv3hXfSoS0uPOpFe9DjpRXejTztY+rQp9Es7Vgjul26j
J1xbesIf0QvtJL3QKvRd46Xv6vZUbpW+6wT6wKOlD1zR2DuZQH8yXPqTG+iF
1pNeaAn6sc9IP7ao0QsNGHsJv6IfW1v6sRnGnsEa9CGvSR+yhrH/zvUeixl7
6zZKv3E5PcYs6TE+Ty8xXXqJ0+n7tZK+XxJ9v+HS95tHr2+Q0es7KL0+1987
Jv29SPp7laW/l4+9ZiNkr1lXelz9pMc1mfn4LZmPn6LnMPjT4J5DUWNeP4P5
dabMr//C8xeQPV89mOfWk3luf+aznWU+u4r57HKZz77KHLahzGHnM1/eL/Pl
Lcwra8q88oaxR+ZJY87o5onzZZ44nblhXZkbZvC6deV1hxj7ONw8q5/MfVYa
+yDw3HpNZb7m9hqkylwmlXlKtsxTVhle/S3MldbIXKkO84hNMo/IPBU39ey0
hMgukZm/NvhlwcO/a7MMv3pr5gufGF50nS9kGvOR84YPXD3eA8nzuxp+7Dbk
8+Hiow4jT54meXJIXv91m8vrOk/yXMmZnR84n+TALvfOkNx7iPhjXQ7J/D1Q
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
86ljRr+0sTGf6sl86rbMp/4DSnCzMA==
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.49523678159929424`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
     "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
     "mPosFirstCell" -> {{0.9, 0.7}}, 
     "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
      0.7, -1.9000000000000001`}, {2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
      0.8, -0.6000000000000001}, {2.6999999999999997`, 
      0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, {
      0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
      2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
    10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 2, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 
    0.8}, {0.9, 0.7}}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       TabView[{"dynamics" -> Column[{
            Dynamic[
             Row[{
               OverVector["q"], " = ", 
               
               Module[{$CellContext`qm$}, $CellContext`qm$ = 
                 ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                Slider2D[
                  
                  Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False, 
                  ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
               " 2 \[Pi] ", 
               Dynamic[
                NumberForm[
                 MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
            Row[{
              Text["time, normalized to one period, t/T = "], 
              Dynamic[
               
               N[($CellContext`tauSliderValue$$ - 
                 1)/$CellContext`dynMeshSize$$]]}], 
            Row[{
              Dynamic[
               Manipulator[
                
                Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {
                1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                ContinuousAction -> True, Appearance -> "Open", 
                AppearanceElements -> {
                 "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                  "FasterSlowerButtons", "DirectionButton"}]]}], 
            Row[{
              Text["oscillation scale factor:"]}], 
            Row[{" " Manipulator[
                
                Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], 
              Dynamic[
               NumberForm[$CellContext`scale$$, {3, 2}]]}], 
            Row[{
              Text["Angular frequency \[Omega](q), selection:"], 
              Dynamic[
               SetterBar[
                
                Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = \
#; $CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
         "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
         Column[{
            Row[{
              Text["number of mesh intervals "], 
              Manipulator[
               
               Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                   EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {2,
                30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[$CellContext`freqMeshSize$$]}], 
            LocatorPane[
             Dynamic[$CellContext`qPlaneLoc$$], 
             Dynamic[
              (Graphics[{
                Lighter[Gray], 
                Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], 
                   Part[#, 2]}, {-Part[#, 1], 
                   Part[#, 2]}}], Black, 
                Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                   Part[#, 1]}, {-Part[#, 2], 
                   Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
               ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
             ContinuousAction -> False]}], "parameters" -> Grid[{{
             Row[{
               Text["mass: "], 
               Dynamic[
                If[$CellContext`rawNumberOfMasses$$ > 1, 
                 SetterBar[
                  
                  Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   Range[$CellContext`rawNumberOfMasses$$]]], 
                 $CellContext`massLabel[1]]]}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                 Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                  ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {0.25, 
                 Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
             Text["coupling to neighbouring: "], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 1, 
               SetterBar[
                
                Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 Range[$CellContext`rawNumberOfMasses$$]]], 
               $CellContext`massLabel[1]]]}, {
             Row[{
               Text["horizontal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 1], FontColor -> RGBColor[
                  Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
               OverVector["a"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
             Row[{
               Text["vertical: "], 
               Style[
                Subscript[
                 Style["k", Italic], 2], FontColor -> RGBColor[0, 
                  Rational[2, 3], 0]], " || ", 
               OverVector["b"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 3], FontColor -> 
                RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
               " || (", 
               OverVector["b"], " + ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 4], FontColor -> RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], " || (", 
               OverVector["b"], " - ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Text["coupling from "], 
                 Dynamic[
                  $CellContext`massLabel[$CellContext`m1Sel$$]], 
                 Text[" to: "]}]]], 
             Dynamic[
              Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]], 
               Blank[], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  DeleteCases[
                   
                   Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 $CellContext`kLable[5], ": "}]]], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Dynamic[
                  Manipulator[
                   
                   Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}]], " ", 
                 Dynamic[
                  NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
        Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], ImageSize -> {250, 350}]],
       Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.709857394019914, 1.7138642998702553`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 16}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyVfQd0VlUWdURAVBgRUVEHHcCOIiidwA1VinRBmkoRQem9g4BSRFQcFXAE
G4QAAgqxAJEXINRQQkkooSgGW+gDtlB+17D3eevuR37/nzVrudZZb3bed867
79179j7nlOjcp0XXPDExMQeujYm5+q//tij+0ZebFuVLbjIj8/fzPXKCyv+u
8c8WffY72uvck9x21MXfgoKnzm0/8OVes1ddOmfFhTfPBgm9N2QUrZZh9nJu
8h2jS50Onp7U7jtXZ5fz8bODD/rv7r+j5g7ByQpGDFnS7o9eaWZv9r/rM4MH
X+qyIetqtacGczIWlX7z0dAeg3/La/b87+n6O/R6d7r+HSn/fmKX4rsHi/4x
fM26dLPHXr4ft7BUj5ij94a/94nL9+92t9xXc26R0D9lL/9e13nf4T6d2maq
f9y8kcu2jT+Wqf503Ut9/e7iPZninxw3rsPwR2dXz3QJf2wZU/j3PBaX/eu/
f77tub1mZ1yafl596+kTGWZnXH5q0viNi2+mm51xeWNIytS1/0wX/OxgV0rL
U1X/3C04WcFPJ4vdetPD4fWMy+i91U/WTFd7ajCz4+sxLa/eY3bGpW/vZYVr
zNyr17vucUlXn3liv+K7jmNHXrMgNfQD4+IGZ333z4wDZmdcOoy76dBP9Q+a
nXF5Y8/mLw/dcVD9467K/le37549oP50Sx6v8Ub7qP/d6LMzXthwZp+7mP57
/adqxVhcOiw+fmfDNXvMzrhU7JJaakah0M64LCn7drEvSoV2xiVf1xN7C0zb
I/jZwbEj++9f0Xyv4GQFy26tvfSnHuH9MC51fk3vdHzrfrGnBifv6/T2uPoH
zM64PNrO3fXerIN6vXu+w/gyZd4+pPju/K1/xk/Le9jsjMv2g1N6nDwQXs+4
dN2Rkm97idDOuNT9oG6D/x47oP5x3xz5rcHvL2aqP93d10+fVW1PxP/uzifn
fdlsyF4X/1yDu2NvywkYl5L1bm3/eOs9ZmdcFjVY9sWrY0M74zL0wz96TGkR
4jAulUu/NenEhH2Cnx2UW3XHoQ4X9wtOVlBvQPMeH712wOyMS75hL9zV7s+D
Yk8NZt3cLKVKkcNmZ1z+seznymcXHtbrXeelj8w697naM13T66v9+Wqp0M64
9Pl65Dvnix4yO+OyZeVnN324KLxPxqXOjknnOpbMVP+4dqOvafntgn3qTzfu
xj+3tBsQ8b+7u8Tb17aasQfvt3MWl3f2tZzUcXpoZ1yqPdhk4bnme81ucVk+
5eENH+0zO+PS7p1en5Yvmyn42UHrXyvnZC47IDhZwaNT39lT8ORBszMuc1sM
b15z2SGxpwbfzZnwwndZoZ1xeW9isY8+GBW53jUoXqvayqkRfHfNdcXXba4W
3g/jkl1myuw1yfvNzrjEZe3JuaVD+HsZl1f/6LR9mIv4x80f3vPVrqMj/nQz
pvWbfV+RiP9d1rGuJy7+moF1dMricnrR6jEHv9lrdsYl7bly7fpt22d2xqXp
n4MXvHVDptntPXbk+YOu7AHBzw4mP9an8NCTBwQnK/it+ulq15c8aHbGZct3
X7Vtk3hA7KnBcz/2aH5gYfh3GZeer9d4dfID+/V612HfpOrde+xVfPdt6Sl5
i64P/cC4ZB3K06D15HSzMy6vn6leaOPe3WZnXE4NPFn10Jzd6h+3ouEdXW5M
3a3+dKOffeq+yXHp6n8348Kys4fezHDN/hevoxaX5svrTmxcfb/ZGZf1zR6s
0PbuTLMzLh+Pfe3o2dWhnXH52TV5sOvBTMHPDn5IHNrg1eaKkxUEywqUWntD
+HcZl8YFHzuzpeResacG/epdne9fX6SbnXEZ1+lcSpc7d+n1rse5x3fdfSJN
8V3+PFPPFu+83eyMS/ln7u8+/8g2szMuAz44uGnQsvB6xqX0lOQ+4z9PU/+4
Mu817/dz0k71p9vd4pvyg7alq/9dozElH5zdjb833eKyslmxnOlPZJqdcXlq
9Kit5SaGdsZlR/EmU7+6LbQzLke++rhy3h/2CX528PKfJ6oG3+4RnKzgX/nP
JRcqkm52xiXu+W+6jJuxQ+ypQecGB5tm9Eo1O+My6OZb8rxeOkWvdwuujs3e
NSVZ8V2Vk63GHblntdkZl4NPf7zntqYhDuPS8sZGn5z5aIvZGZfNJS5Uv6H9
TvWP+0eVaZk1t6erP92gw3d88/hLEf+77stSNvdrtd/x9zAub5VpkjOoc6bZ
GZeVRXp1/un98HrG5abrp3X8Imev2RmXE38OvL788AzBzw5m37S1YrNSuwQn
K+jT/qmdb9y1zeyMy6e3b5waszFF7KnB5mojRp2o8IXZc/vHuOj1jIviMy79
5H4Yl1ly/4zLcfm9jIv6h3FRfzIu9D/i5RgXxot2xkXi6xgXeR4c45LqPz/O
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
O003Zf0SeT3jlerPhbd4dfH6Z5q+K2C/BX8OWmJsD9T75/F0nmF/RV7POHKu
PfF5/8noO8HrGd9v0VeB+PT/GfSj4PWMbxb6Rfjz17Ld67ifPJ5e9K/3JPpm
8HrinwJ+K9wn/TMAfTn8OW5n3QrgNP2b+NLO/ooyR8z6ZDbLxf8XxD+H4J9m
4k/28bj8HJpeKGC/F17P54H9QJrJ72UfEuKYTgN9aXg9n4ex6NOSI/5/Df7n
9XweeqDfC/F5/yXQV4fX8/fmRx8b2hn38uh70w44tu9C/x9ez/sZiD48tDPu
7C9EO+PLfoC0M44Zfr8j+13sYyPzyILvPP+H/hzv+TP0A/sUwb/UtwQn0M+q
mfzeGt7vTbc4Pos+S7QzXgPR36mh+Gew5590+10L0Ldqwf/+rUjiffZDfzBe
z3ixH1dD8XMZz8/pFkf2B6Od99MG/cRoJw77oXW5b3Dn+wavSeLv3Yl+a7ye
cSyMvmq0M45+XzibUxb4fcNsrlng9yuLiaEfenp90mJiGJd5Xn+2mBje52qv
L5xlFWOL1Tr2y4xTs2N3vfvlP25puTmJftC/y7ikCQ79v1j+Lv3cX+6T+B8I
Pv18QvxAfxb1+p7FxGi/MpkvFmxGvGQeWfCkH1/Tpez3nwdHf1bBc2XzyJiP
wvPpz1NLjB2K57wW7Py94/x1ZzqK5/z14ujPmlhfxKF//PdquqOf/fdY+Hf5
/iQO/cl+Wc0E/3vB1+uJQ/+zL1azXOxtxD+j4B+ZO2Z91WROWSDvT4vXY3gP
n/d5ZOtDxesZx2vwPm8pfivpv/8tvj3xXiU+7+d1//tiv2s8vkd4/5j/+T3l
9Yx7f3zvaGfcG+P7SBzG5Rf/e233H0gfLf7eg/73OnI/T/9fn4fo36Uf6J92
2F/58+bCvlW8fz4Pfp+o0M5+4y3FP7L/sfie8vdjFhfZB9pzcgT7tJY+rxpw
X31R/PYd/HZRfi/7k/vz4MK+6LTbusb+Fvtwu5+TOBfwesadfexb5+J/Xs+4
/4F9uD9vLtvJvt1w8mCfz/vh76qL844/n+6s4/wC2hkvmZtg/pS++haXOJx3
LuXye58U/5zy5wtYXK7z5xrY/T+O+4/3+ccg1Z/TYfHiefCqDN9vk/x5BxZH
niuJz/vs5c8Zsd81B+dT2hmvcjjPzvV0AmF/Hn8+XbaTeSIWxzY4R/tz6866
wf78FIsX++20zuV3ydy0QOaGRPyZkIsfEuR3NcfvapWLH2z+GuLYFXmSCz5f
Zn1m/Llykfk19rvYz4c4vE/2k+H1jFc+f16P3afM/bG4lPfnB1lcKiBPxb/L
38U+MP48u7CfzFMSL5nXY3bOUVogfmC+ReasBbX9fF3Enxdz8c88nz+yviu8
nvGVPKr9XubxiMO/2wb5Z38OXZgXpZ1xPIk8KnF4n+yjwusZxzp+njaOcVyE
vC5xeP+dkG/359xlO+aNF0q8BiNevJ5xZ/6Z+PTDC8j/+/Pyzrol6LtCO+PL
PicJufg/IRd/Joh/asI/zS/n+Q2nC/igBPGD8C/hc4v7Jw7/bgb4Jn9uXWJs
H/AjtDOOM8GzEIf3uQB8Fq9nHEf7PI7F8WfwQcTh/T8EHs2fi5ftyDfRbrwG
+Cni8Pf+FzydP0cv7JdCO+PFvijEoR9Wgh+knX6I9/lEi4vwdObn3fAzcYw3
BI/ZQvyZ4POD5p8H4B/a6c+RPk9qfjjl85X2u5bjdy0QPwsPa79X+FO7f/Kw
4KEsLh19/tfuU/hc+7sfghcmDuOV0HtDRtFqGXY98TsJvuVRcf0CiW9zxJfX
017o1LntB77cG+G1yacrry3z+4yf6oZ5f8prcz6j8tpj/LmBxk91xJxB5bXT
oR9QXlvmFSYzvpxvqLz2MOgWlNeWOYnGv3CuovLaE6CXUF5b5jMaP5Xpz3M0
HkrmPxoP9aw/L9L4phsxX1J57dnQeyivPc+fy2lxlPmYkXgpr93fn/tpcdmD
uCivPQ96G+W1Zb6n+e2CP2/U/Mw5ocprV4ZeSHltzhtVXvtnf86p+YdzS5XX
bgy9k/LanH+qvHZLf76q/S7OUVVeOxZ6LeW1qZtSXrszngfltanjUl57B/Rm
ymtTV6a89g5/nqzZqXNTXnsp9HvKaw/25/Pa8yBzci2OVRFH5bWL+/N/LS4y
n9f8KfN8zf9F/PnC5h+ZC2y/i3OEldf+yJ9fbL9X5hHb/XN+sfLaf/rzkXO9
T/5d6leV157pz182fJm/bNdTr6u89kR/vrPZqR9WXpu/V3lt9iVTXpt6WuW1
6R/ltanjVV6bumLltTl3W3lt6pyV12a/KeW12e9LeW326VJem32llNdmvyzl
tafj7yqvzfoC5bUVn9dzHrry2qyDiPDasCuvTV268trU1SuvzboA5bXZj0t5
bfbjUl6b/a+U1+a8e+W1WdegvPYs1KEorx2gjkZ57aaoG1Je+z7U4yivzT5O
ymsXQX2T8tpNBF+vV16b9VzKa9OuvPYQ1BMpr90f9UfKaz/n9ZUKedI01Nkp
r/0H6rCU117q9XcKedUJqAeM8NqoR1NeexXqDZXXTkSdnfLaX6IuUnntq9C/
SHntW1Evqbx2OuoZlddmHyHltdmfR3lt4iuvfRp1o8prrweO8tqTJb60d0K9
qvLa2xAv5bVfgf+V146Bf5TXToQ/lddmPbLy2qxXVV77OH6v8to/oW5aee3W
qCNWXvsb+F957c9Qj6y8dn/UfSuvnQf9f5TXboK6bOW1x6M+XXntT1Enrrx2
YdSnK6/NfjXKaxfz6/Htd7GOW3ntoZ7/Q3/+4Pkz9APr6OFf47XZv0V57RHe
7w157VXoA6C89rPoP6C89nzPPyGvfQJ9FZTXZh8V5bX/hT4PymsX9Pwc8tp3
oH+F8tqvoN+F8tr3oM+G8tpF0Q9Eee0e6PuhvPYbXt+SkNf2+9uEvPYCr59G
yGuv9vp4hLx2Hq9/SMhr5/X6lvDfX3F5p2rJ/nUnRXjtz+XvMi6FBYf+LyB/
l37W+yT+YsGnn38WP9CfF73+QiGvzb4cymuXQLyU157ox9fy87f6z4Pl52/D
c6W89jE8n8prd8Jzrrz2j/66szx8sr9eLN8+GutLee0R/rq2PHw/7z0W/bvK
a7MfmvLawwWf17P/g/La7NumvDb7OSiv3Q3+UV67kP8+tHgl+O9Pi1cjvIeV
174J31Pltfk+V15b3v8W38/xXlVee4X/fbHfxe+R8trsk6C89gl875TXro7v
o/Laqf732u4/Ufo88Peyj4Hy2txfKa/d13sewr/LfYLy2kuxv1JeexD6Kiiv
7fcxCO3DYFde+5S//4nEV3ntlf4+0J4T7tOU126MfbXy2twHKq/N/aTy2tyX
Kq/N/a3y2vfiXKC89p/YJyuvvcPfV1vcuQ9XXnuAv283HO7zldd+H+cd5bXZ
X1d57cF+X1/zp/R9tbhcxHlHeW3pH2v+kf63FpfA77tr989+v8prv+P3kbZ4
8TyovPYgvx+vxZF9myO8tt8H237XazifKq9dBedZ5bWlX7fdTwW/37XF8Vec
o5XXHu7397Z4sa+48tp7/L7TFkfpa23+lH7a5ofefh9v+11p+F3Ka1fx+3Vb
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
bxiv13ptXm95SOx/eL3mtebI/pn14Lxe813WRxr+6YJ9Gq/XfNccORewXph2
+o1103PkvMD+eNJnOKiF+mK/33WWY5896XscdEPd8Rw5XzBvxuvpN/YtnCPn
DubT/L7iYT3ynFzyadZnGH5jXbb1Y2dfStRZ+/23E2PLo075vJxfTiMvd17O
L/WQl5N+vFbPe17ONUuQr5N+v0Fb1PnmlseLF56U9dHn5RzE/F688KSdUf/r
98E+6z5DnXK88Kcvoi74vJynmCeMl/PUQOQJ4+U8NQt5wng5T41DnjBezlPH
/iZPGJ9LnjA+lzxhfC55Qj1PXefrKCL1I3qe4lwAPU+xXkbPUzrXXutK9Dyl
8+W1TkfPUzoXXutN9Dylc95Vh/93+UzGnfPZc8tz6nlK549rnlPPUxdlbjif
f50PrvUsep7Sed9ah/L/my/V85TOoWZ8dd40f6/OleZ7YJLMj9a6AD1P6Txo
rcvQ81SczHfWugw9T+m8Zq3L0POUzju284XMKba8qMwppt90HrHlhWTuMP2m
84Xpt0UyR5h+Gyxzfukfnc9LP2xAHlXPUzrHlr83ZvjlfKyep0rJXEitU9Dz
1B0yp5K/d6HMjVX9v56nUmQOLJ+T+2WOp/XRkjme9MOV56gmxv7vONX5g8h5
6ha53vKTgs/fu+GKc2ZDPb+ep4rCP3qeulXmZqreW89TOgeT958kcyFN5yPz
HDV/ruepH2V+ourh9TwVM9Cfk6i6dz1PDdU5bvhdV55jmBjLOYZ6noqVuX58
PovK/D7+Xp3Tx+dzuczjsz51MnePcdT5etaPUeboqT5cz1MDZS6e6eGvOLcu
MTInjnHnnDg9T+l8N/qnkcxxo390Xhv9w7lsep7SeWr0w0CZm0Y/cD6anqeu
PI8sMbaNzP+y/LzM7eLv1bld/L06n8t0KTKHi79X521ZnyWZq2V9L2V+lvIp
ep7SeVjKs+h5SudbKc+i5ymdY0W/cR+o5ymd66S6Vj1P6Zwm1bvqeaq6zF1S
Hayep3SOEv2m85KUx9HzlM4/ot+WyZwj+o3zjPQ8pXN/LN8oc3/oN53vQ7/p
HB/6Tef10G+xMpeHftP5O8or6XlqkMzTUX2snqd0Po7yU3qe0jk19JvOo6Hf
dO4M/aNzZ1RfqucpnRfD39VJ5sIoP/V/AICheCM=
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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

               "]], 
              Polygon[CompressedData["
1:eJwt1nm0TWUYx/Hj3hxXEpXVvBpYaRCKDNFgKmO4ZqKuqcg8VkqSsprMU4NS
hqRQZFZhpSRDIRoMJWSmWkmK9HnWPn98131/3/28e797n3c/+17boVeTnlmp
VGok8uOpdCq1xt+u2alUF7TMSaUWcKe4L+U1eIRrwb3DlZJvQi7Xk2tp3Aqz
HGsjL8Vp42+5Leihrh1eMn4Zmxwbnk6Icbc4Px6TP8VZ7k35J/Qy7x5uHJcl
50NdrguWGC/FPscmq2kd64k5WMUN5G7BU8bH3fAfqK3mfe4zNaux37G35Hdx
1Hg5twxd1T3PvWD8YnbyfOI51cGEzDMogybyPJzkPpE/xky5bTp5HvFc7kdf
uSbGcv9ZxxnUcY3buWe5c9UURi25En5z/HcMcOyGdLLGWOs0NVPR0dxF3D/c
enkdunGz4hkaD8ZOxybFb4Yjxou5RXhYXTluKLfTNXagJrecO8N9r+Y79OSu
4/rFPlCzBtW5Odyf3Dw1H2JKPBNs5ybKE/BgTvLsh3CbzduEknJpDOa+ktfi
armG2q3G29DLsau4ztxs55mDX7hXuVfiXuL5xvq4UXI1jMr8vsdQQa6ceaYH
5QO4JyfZH7FPXjF3EsbJq5DO57ryViyMfYEC3I/yD1gitzf/dePJUeccL3EN
uCJy0ezk+rGOGThs/BE3Hw+pqZ3ZL/H7FkR9bi53glsoL4jfU16Mf7lv5K/R
Xd1KLr+1bI53Js4pV8/cb1z3Ityn7g1urvEHsWbHxsojMUYei7XcUPl17DUe
H/eP0fJODaAc18dz6o/j8kR+B/eamleR5xr9uU7GneM5OdZFboy3jStwldFU
3QruHGveKG+INaWT9cS6Rsoj8IC617g93Oh4ftEX5EFYHT1Ebo3e6WT/xj5u
K7+BDuY2R268e5jnWJ6ai7HI+hejefQKeT0KW8shdQfR37y78KGaeWinrkD0
Dcw0bhz3EL0oeoHnUJ17Ud0I/Cv/jReyEhfHDsuPx54xbmFe8/jd5KLowM1U
9w7udM2vuPOs5UD0HPTjUlxTfz5QMx8XypeiGzdDno60fH7swXj35am4w9x/
XLsx94w8FBW5a9T15j6Wl+NurjjXh1spr0A17kdzb4l+L3fHQfledeNjSdaW
H/XUNYs9zV0vl0Rjbq/aqlwv8/riNu4ydd25WfK7KCh/jSLu95h5RzFQ3RVc
D3Vz1MxGYfkLFFT3i5rd8ZurK8X97PjurGTtcQ/38ofkw1lJ/4g+Uj76mnw0
9m6sU64ffcK4knNVid4bPc2aczO/x3soFN87nOu6e9XsQR/nr8gNU7dPzV7U
4mrEe8SdlP9CVfkujOD2y7+irDwAK7l68X1Ce3lZ9ETjHdnJtyW+MV1jnxrX
4WqjmWucx+VxU5zrzbgGt5rLsb5d0cfjuyJ/E3uLWyEfx6PqbuaeNPcL8z7H
lfHs3e+NsZ/l3Fifuu+5slxnuUusW96FtvEeoHR8r/MnvS163BPOPwjD5LqY
yJWVy8U+j++T2prRa8ydgHyxlzGdK6GmOBrlJD06evVw+Tm05UZw22LvykPj
N+KOOV+N6BHONQb/ySdQn3tZHoXb1T1h7udc++hLaMG1TCf/lzSIa8b3Ta4X
vYMrL1dEK7kd7jauhmmO5cqXx/vr3Kuzkncs3rX4vyH+f2gY/TV6nvyXtTSI
fqVuHKpk9sZorpiaS9CQ6xh7MDtZS6wp/mdqwt+WnfTJ6JeN4hsV/w9lJfcW
9/in8z/Nf2ncI/pIrFnNhnj//eZH5MMYwG1Xe2vUmdsbR+Ty8b9PVvJexvu5
hzud2ffDuedQSc1a5yvkfL861z705a7l1jm+Hh3VX5BOvsHxLV7ILUAx+ZDz
VcvsoU4oZ+5Zrgn3vjwXRdSd4hrF/0vxrsY3Wd00/mDUueZ76MTtVpcXzx1l
HNsq/x49VR4UfTPexei55m4x7hfrxWB5CPrH88DS6EdyG+ccGO9FdtKTozff
ynWI+0Jl7qfofVxTuRlKcZu4Munk/8SN3AaUkP8HTCB7mQ==
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJxNmXn8lmMWxn/vr+ftfp6SpchWSPumRptUJCQmyxSRMBRCZFeJlPZV+04i
2UIkTNqQZGzDhDEMYzAYW9aImO/1uc7nM/PHec/1nvs8576fezn3Oeep1//y
XoMrKyoqNvFTBd6kXFHxUamiojH856yi4lXwDviP0N/AP8FbQteDW8NXp4qK
SnSXFhUVTfl/EfIm8AzZ2+AyfDfoXfAu8Ea0XS778CV5RUUNZMt49sHkfm4F
74rs9ZLbfop+f4H/Cn0A/k0y6DHwm/DXoFfAr8Mfhh4ArxROtrMOvgp6HnwH
vA1t54EPjfHL5tPw+6B/gtfDR+Zu/yPjWZnc/23gh+B3ovMgvAXj+xJcDd6Q
/0Pj3d+A/gJ+C/4u9BT4H5lJeF7y+J8Dvw1flMxnYf9f8L8i/wj+WeZ5+xL+
JDo5/cxD50P+/xn5xxoT8ifAM+F/gqqicyc6LWKNtFbN9R7gZvBE+9aS9T7h
/zvgpmWvk9ZLfWgeftC4sHMr8/AG8keQ/R3Zxnivf2aezw/g78eYNfYRufs5
m2eXJrfPBc/MPWcTwMcgH4B+e/i9yNaCV8D/A70I3gJvBw0Ct4Wvh+4Gj0b/
1VhrrfkCbD4LvjV57SW/G/ws+BnwC1oH6FHwK5mfXQd+GX4YdCO4I3x+7vbp
jG1trNE6+O+g4TGGtsl75ij4nmXvk1rws2gbC/6j+oTu0V6SDehp8Cb447FX
12S2K/sb4Rsyr93T8eyfwJvjfR+PNX0RvCre5eUY/0taf+ilwPdDd4Dvg8/I
zcfzLovhK5Ev0ZmAVsQ8z8o9J7ckn5f14Eczk/Cc5DHfBX4MPjs3n1R4vjRv
nXVWY11uy0zCSzUWaF7ghbnP6EyeXa13Rv4EfGryfExGPkbjQD4Z/nXmNd0W
djSfd2luoIfi2eege2Ou9Oyd8HHYeV7nRHsA3gm6BnwE/NvYG99k9lk6Fz15
7ovM/kF9tWQtvwI3h9+PrXrwLegsKex3bst9vj5E55lk3yU/uSnZv20D7w7f
A/oYXLPsM/uCxp/cti32zO08uxd8ObY3QP3A/0anNvzNktvqQp+C/6wzgs7+
/L+D55ZCnyB/Pln2LbiO2gr73MeTn31LawdeXNh3rwBvhg7U+Ub2RLLOlpDL
zmvwfWh/H7x32T5RvvFOvTvP9NCzuf34u+H3VmF7mfyD/B86Q+GX8NyV4AHy
O8nr/uD/7THh8cl7YDn45uR11d6Ym7zfVoOnh1zrPiF5D68L3649rD4n0s/E
ZJ05yJYl+8Vphc+X9qTO09zcZ25qYaz9Nin57GmPjU32g5/LP4CfjDOoZ+ep
r9ifm2PvjUuW63zfUthX6zx+mtmmzvUsdPol+4bLw5d+pzMB/h6+ueT/vdA5
TfOGfBw6vcEXg1+DJjCmKshORTYa/dPhpybzQbSfGeexL3wL/69A/zvaT4b+
gOwiZGdrjOick9nOVSX3cUbyGekB78P/G0oeRxdoBLgr/PM4Izori3PfS/Ox
+ZX8UdxNxyWfs/ORV6f/f8Q83IT+FeCjaf89dG3J+0F3k+IExQsb0GlF7LEP
/MjMOt0yv/eByCeW/S6TkZ8Hv1Bt4GPgOzPv4Qp07ip89nTXVyn7PlJcsiR5
nrX/FybfC8uTz7z8zGL5j4gNdHa2Z767df9ti3d/OOIH9XN7xCo6Ixt0NpNj
JPkHxQlbwLfDT+DZYeDj4T0yxzzHwY/SvATurv0bOprP98JHjcXWKK01dsaA
f4/sQvq9lP4PYk4W675GPknvibxn5nmW3knh306E95ce+ufBV+rcgr/C5rmK
7bQW8BOS5/tM7LST7wD31Z7RfSe74Drwy9A/EL5f5rtbevuHXO17Q/3kP+VD
AkvWiv97wftgp2bmO1T/D0XeC1xfvlF7X74RXpf/J4IbK5bJjMvw4Yx/D/hp
2Nkt9PWcbJ5SclsN6FzwrprvzHtmMDyDBoITfBfte3D1zO+oczFQd7rmIMaQ
Q6eHfkl6MYbx0ALwBTorme/9s3j2MKiexsHYfiGIPkHvrv0Sz8rGRMZ/Kfxq
dA6Od28gf6xzGvMgeTfwbiE/ClwDvjNsyvZlmfeGbNXWudM4Fa/R1h38Pfwn
qC94B3xf+QLwQfCf+X98yCcwnovkCxjPATq7Jb/DxdDIktu2V/Fc/VjF9oUl
U78ngQ9IbpO8SXJfR4IL+CWxtwdmHpPG9h38m6oVFYdrTtCpCXUGV9GZ1dpq
/6Oze8zDHqHTE7w/vDLWUeu5q3wKeD+9OzZbg3eRjwk/eU3meewW8gt0F4Kv
hV+h+wN8Jbxa8tzuo/WCDgF/i7082eb34F+gluCv4VWRdwTvBB/L80O0dvBK
7QPwz8gn5e7/usL9XiW/pjiCtuPQ2TP6OiLmSn11jbXWe3WK+VG/XWJ9NX/t
oXZQW+jYwD9Wtb7m8CtwU/Bn8OH0OQ18fWbd7v+n31x+G35m8lzpvpbNNvKr
JdvRO/4G/xxqAv4PvD784Oi/beA2gY+JMf0bvUbwj6saa8w74N+yrn1iDwxh
TFPB1+keSOZDCs9N+9L/3rWhzkhQ/einQfB2Qe1D9il9dIj5vxFbU7F5TZwd
+aJfqzgeXgJepDsT31cdf3gDfHVu/qJiJZ65HvwC+Eb05qI/Un4Ancbo75Ib
j0PnVXRugu+FfAR8VOa4dwz8cXTqIs/gV9NWE3wVfDRUG3xz2Xf1vuAr4ZdD
B4fOct2xJce9E6D7wZPlX2jbDj4Z/ih290P/t+TnDoXaVHr8DeA57au0D9F9
nnFeCy8q/X8IVAt8XYx5XLzjz8nv8RL6j/HsSPDL4FFl3x36/1Due+Mp5J+g
fzZ4I/gceFbp//dg6z5sjtP68n+n/IDiX/Qvhm/WuYDvjf6F8Edytz+LfAp4
ovwr+G/J7/s+fBKyGSW3naQ4m2f/AO8DVYJPg/eCSiG/BEqV7m8qVA98Gfxm
nl+KndHwQck2tU/60rYnOmeWHY9rb5yldUneM8PgU3hmUazFA7nn83P5IdU4
wFO0popf0bkB/mJyHeUB+Xz4Z9rTyh2T5+Qb+NDkeoXi4aMUu4G7lh1ra/zH
w6dn9l23aC/Q7wnI1mDzXnB38BOF7cxSbKFzFHGs2pQ/KI94E35P7nv/XfDU
3HWMm8DtVWcBd4B3irzjcHiXyC86w8fq/ou9/XqybBV93aU6ifZF4Ttxjvyq
fKHiVsbfMeZwhOISdO7ObfsRxRvwr3We4e8kxyofJeNjlMug0ybyKfVxIvRb
yTnaKclx73js1ef/9/ID8GX8PwT+IM+2Ul5V8v+esWe0dxrF/Cjen4b+HN15
6Bf8/6Lk+a0X66V1u46+btX8o/tUcm50d2Gs8b8CPyByLuVeK3Kf0SfRaV12
Xqn8cr+Y27oxhrdjPxxUdp6l3GxDxJbK9ZQn6t2fS8779tXZKmxHNTH9n5t5
v+kdVCNQrWAK+isLr+urms/Mcel78LbMQf1K+wz5i7aB12B/OvpvFJY1CL0Z
ZfsZtd0S/mpa2fd+j7jL2oW+nptM2z6Vjk3HFK4RjAwfVS/81DWF7+ABirvo
9zBkBym+Cx9bLXdesFBzhO56rSny2vDqufurE/odwAcqP809rtfRfxLcHHlN
+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
               "]], 
              Polygon[CompressedData["
1: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
1DzQ+dGYj02uKVBbQIPpkVxTobaChnJ14fN5o/BTrK/C+SHaCfnr+sKaUSk3
h4fLzynMnVcH1+X+G+TWvNC+qEFRi0JDu6XwGmTtboi1yRqH68BBWftjk/V8
ODhcHE0KbYrxVsl3v9pbnFUa87YqrplRO0PzXR3rAZ0ejWWD8PvJ3AnOAndh
z8CdngruTM0jBR+8ufCYdXLX0Pgu6jXwqX80lsz85rTcNbOPk/cQ3AoOxt6i
BlA9+Cd8lByRvckeJReB88DVNgYXgt/1jfz8nsL1J2qDaPbUc6gXUltBg6N+
cFNhfv5nZj2Re4DLwbm4N3JicuPzc9c3P0nWN3uFHgt/RdulBrgs+NvJufvA
p+GHvUMf+CxZI8A+JfRZ8kG0IDSB1YX5Nto5GvIS4V+TuR8aCFoI+VuXmK93
kzVdtN0i+OV84Z8iH7gxme93C368vDD/7B78+a7CGghayJm565VopGil7P8V
yZol2iU12TuTNdItEX/vFV4kXJZbQ304+R7grj1Db6a+UR71ih6RLzSO/PPF
5BootVA0efJR5oxcBA7MXJLPUrtAE38zec2dHvPNWrwr+Vl/zqyXosdQ56Km
8FtyPn5Z8PGvkvUbalVoxKtCD0IrRB8qRb6OdowGtTb0lnmhn1BbYX7+yLxm
yO2eT47V9SP+oOGST1ADRNuF/w+NfH9lYU5CbORM5GxkTVE7rx76C/rMVcLV
hL9NzvfRntGjHgl9YGbcP1om+gTaKHpRHnrZuNwaKGsHfWJU6A8PFtYv0JLR
N/5MfucDoz9rgXzqjPj++yPfOiv0su+S9Ta0XvS1Rwu/c2IXMYy1wPr4K3NM
JjZTz6TWQ82H2iT1H2pB1AuoZRHPds7dH+2beLF95J+L4rx8JfIxatXkrOSu
n2XOL4kJ9K2ZO1YQvypzzz+15YeSc2fuj1hbI7f2zv6nPgqn4PcCHwbXuC3i
Ge+Qd8keInZ/n3lvET/Lc1+zPPbHL5lzLnIv1iBrcVM8D79/QP+nXojevzD5
7P9a9neZOQz3R84Pt7kv4vH34V8U5wN9VibHKGLVf+M84J7oyzU3Fo6/1XLX
FFh/aOJtYg/+NznmUBuqFXol+XbbiFe3F9Zb5smewHmRmcNx1tfLzO34fQHc
AQ7RLTOfODL4LrVx+AhaNTXdCYU5Fly3SmbuBUeGK3eJ6+EPXYI/jy9cf0Nb
R8+mHtUiObcipyC3gJPC7esG94dPnJZZQ4d/wGnhtlfG/fN7AOoR6I1j1Rpn
rgVT30LPRx8ocmsWaBfoH3tFfr6UWmp8P/lXrWT9aJns2zLrUeh35wSfYm6o
MVBrQB9DP4NTw/+3y8y18+Tc8OgYD32e2gIaPnp8neA75Kzk4+TX5NrkkOSD
8BVqKdTgT0rO78mFyYmrBh85MfIFchf00DmZ9ddBwW9OzlxD4rcU1ISoDaFh
oWX9VOncnfwUvf/XSuci5CTkv02TuRc5cRPZn1U69ydfRR+AHx2fmaPCVb+u
tPZAjkN+Dz/smLlm3D34Us/gt/w2hflhrsl5f680P+wb/XsFn+yf+Z3ybrfE
86NpoFd8V2ltoX1cT/2CZyHf3CVZD56VWd/mt0/on9fHemF9NEzOpTpH/31y
/16B+EW9nT3H3oNTws0WFz4r4fBwefTz4fF+qM29EOcDGhZaFr83alju30jx
e4/XkrkpGi1a7Z2Fz8auoZ2hrw8LfslvG+Dz1NrZA4cKP5t89nL+kDugZ/0v
c3z657dQyeM1yn3WcqagNVED4KypKBzrqRFQK+A3Afw2gJoY+thPyVwBTQ1t
jd9o8FsNaobo0cMjllAf5vde/L4DrkCMrRHP1DnOd551UO7fWlFTPirm5ODc
NXLm6qvgD2jonN2vRnxHo0SrpL5wcaxfapXENLjBAbljHb/34Lc1/AaD+jX1
AX6rcpPwBcm/d4DL8k55t9Q3Rkc+Qn6D3k4t9J8aW2H9h7XfM9Y79Y9rM+fX
1IIvL5y7bw2thHoKtUvqMQ8XzscviHjIb6XIafpGf3IdahrcG5o52jlzDr/u
mPtd/B+f5RY4
               "]], 
              Polygon[CompressedData["
1:eJwt1nnwTlUcx/EHz6/nxyA0ZC+llESlshXZKsuUkF2ylEhF2ZdsZe+X5WcX
ilYtdlqsiWqaaadtIkv7ahQRen3nPn+8Z87nfb7nLufec+6t0uuhtg8WTKVS
echBk0wqNbBAKnVFOpWqjkdzU6me3AyurXwHbpero5h28cj6Kssj1Z4rl0Bn
7jKuLFpqny6USp3BcDWfcMe4C53wAuyWG+N64+qgl75rI2eSdrj6aCbXx6Xa
1XCXvppybfTULsWVxCjnqMq15crLlXCdPIJPaRdA6+jjRnMV5IroxtXgbsUj
2p24rugkj1dXV7seBui7kWuOh7Vrc9dgnJqiuMyETnZfk1BArqKuTfb6SqOW
3BETuDYxf3hc3aVcu5hLuQrqyj3QW7sPhuprJTfFIO1aXE2MNfY97qe4J+cs
h6e5KzPJPcW9XYAxXBqVXd/jah7DJnmJunfUfaTmQyzgSqGGujlqZuNN+Vi8
G9qDkKvvJ3kYlhk7yriRMTfyaZTXP0TdYKwz9mS8C1x/uR/+lO/HbGMfiHGY
qm4N7tF/L85Rf0TN9+gqd8NJ9V/Lv6Oo/ru5HnjNuONcGa6X3BO/yP+gNHeX
3B0/yq+q7azdBYX0HeQy3IXarbgZ2Cz/xRfn7pP7Yi3Xj5vlGvq53vswhXuQ
y+eGyIMxjRvKLeWGxXOLWvm5eIccpx6O6vuQO4Az2oW5llil5rO47lg/cjV8
IO/F8Xjmck2sVPdxrBHtOnFf+vZkkmcSz6YNdzteVjeKe0b/tJhjzOBewq36
W+Qk54pz9o7nq39QOnk34x39AifiHVd3DZ417jnuVzW/YZe+RfJ0foI8ETO5
vtxc7i15C1ZzU7mF2Kl9kDuCJWryude5w/IPWCnPwWbugHwIT8uT1XaPdR/7
UqwdbjH3XTo5Xhx3QbyP2KP9BbcPi9RM59ZwO+KaMZ8bzz3LzZPnIo+7Obum
28sd0V7ugzyuS+xr6BD7Ep7gOsh3oq3cAoO5bnKP2DviXcHG7LV8jcVyZ0zM
nqMdJjnvDG4dt0p+CbO4O2Pf4VrLrfBYzHH2mjfJb+CJTDKvMb9L4vgxN/I4
PKW9FPP0DZLrxb1oN+KaoKXcCA/EfibfFM/POaZljxfPbXuM5/K49dxr8quY
zY3Irv0477J47lzDTLI/xj55Q7xHXJ14t7gGckPcIu+PfYK7xTt1M15U9y33
H9dUboIXuH1cQ+1G+Fnf+/Ku2BO0i3PFsEzdkLhf7hHHfxj3ZJLrW86NjTnB
Q/LbOMJlYn/B63J/DNc/IuY4nrO8CWn9OXifWyE/6TzzY39MJ2s71vgf8R20
3vqo643VaibHHqM/X90cDI9nlkmOE8fLjf00vj2xHuL9jPdP38C4B+yO9ch9
ioWO93KsQe1/08l7He/3NhzUPsWdjGeSSdZcrL1eck90l99FFee7CF/p2yxf
jDu0y6gpF9+u2DOc5xL3MUrdSJzgzqICN0IejvXZdbTW2JXGrYj5innBBm6d
vDbuWd1SnNE+i0/0vRhrI9ZMrLN0su/H/l9GXS3nWOj4C7BVXp5dv3G//8Xe
Ed+JeCbcN/L+mH95LFZys2O9xFowdgUudpyqOKxvp5otKCmXwl5ujfwd2snt
c5L9Lfa5Z2K+4l8lnfwMrcsk4+M4heSC2CAfjW+XdvWcZO+OPfxXFHEfnbiO
eMV1lMVV3GJ5EbbF/wcqcmPk0XG83OR7Ft+1BnJ9PM+VRk118+V52CIfVpfD
NZZvwpeZ5PsY38nmcjN8Ix+Kd5e7Ub4Bn8vVUNh9FcFtzlUpniP2af/NHcNT
zlEIU4yZmpN8++IbWIy7XHs6Ny3WhFwCV3Cz5Jl4I/79UJ17Us6LtSWfF/8h
3Fw5H2/lJt+p+F6VkUtjeW7yLYxvYln5fOyQy/FXGztAXoLtchFU4ybKE2L+
1W2N52nscffwT+yf8Szjv05/xZxkncR6KRz/WMaO5R7FKa4gV4kbL4/DRnlm
ds+OPXYj8rn/AYcda4M=
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0bkuBEAcB+Bx3+yue61jeQQ6UVkvIKEShYKOSmhEywsIClcI2UUrQiJ6
KuLYuEK01KLg25DMb76ZYmb+M5McmxqczAshTEt/fggn7C0I4YIjfOQcP7jG
H54xYlFS3otD6OAb2/nKNr6wlc9M8JEtfGCcWTbznk28ZSNv2MBr1vOKdayV
mERzxeb2V8On4TmfuMFLzvOUo8ywj6tMcJHf7jjLLCd4zGEuc4Az7OEwuxj7
Oy6YBluEwtw7FIWghXWd8sImS7jFUm6zjDss5y4ruMdKplnFDKu5zxoeMMJD
Rtkp3bm/cXiKSxziEcd5xxl+cYFxBa4wZZ7+/89fYnk2PQ==
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0UkuRFEUgOFbCiEGLIBoSlOdpkrf9yMxETYgGEkZYQXCxJwNCJbAAkRY
AmNCqlKim+F7Mfjz5eYNzrnvtq7vrBRiIYRdleMhPDg8V4ZQZG1VCD9Ms74i
hCW2cJs5zqmnJoRZZjnDDKeZ4hSTnGQnJ9jBcSY4xjaOsoUjbOYwmzjERg5y
QP3Kq1XHdmhggb92XGaJWT6yjvd8cZdr3vKS5zzlIY+4xX0ucovtXGOcC+xX
mxLRN3Xoqdp9ov/ErmgGk3xlikWmWWKGZWb5xm6+s4cf7OUn+/jFHL+Z57xW
o/l22YzO3OMGD3nAE57xgje8iuZ4x7vY/3v+AVqaNL8=
             "]]}, {
            
            Line[{2, 19, 36, 582, 53, 599, 70, 632, 87, 665, 104, 698, 121, 
             731, 138, 764, 155, 797, 172, 830, 189, 863, 206, 896, 223, 929, 
             240, 962, 257, 274}], 
            
            Line[{3, 20, 37, 584, 54, 603, 71, 636, 88, 669, 105, 702, 122, 
             735, 139, 768, 156, 801, 173, 834, 190, 867, 207, 900, 224, 933, 
             241, 966, 258, 275}], 
            
            Line[{1438, 1437, 1457, 1461, 1483, 587, 1503, 2097, 2246, 1522, 
             643, 1539, 2266, 1542, 1560, 2279, 1564, 1580, 2289, 1583, 1598, 
             775, 1612, 808, 1630, 2317, 1633, 1653, 2329, 1656, 1670, 2141, 
             2339, 1689, 2149, 2352, 1708, 2365, 1711, 1727, 1730, 1747}], 
            
            Line[{1439, 1440, 1458, 1465, 1484, 589, 1504, 614, 1523, 647, 
             1540, 2268, 1545, 1561, 2281, 1567, 1581, 2118, 2291, 1599, 779, 
             1613, 812, 1631, 2319, 1637, 1654, 2137, 2331, 1671, 2341, 1676, 
             1690, 2354, 1695, 1709, 2367, 1714, 1728, 1733, 1748}], 
            
            Line[{1441, 1443, 1460, 1469, 1486, 591, 1506, 618, 1524, 2104, 
             2259, 1541, 2270, 1549, 1563, 2283, 1571, 1582, 2293, 1589, 1600,
              2124, 2302, 1614, 816, 1632, 2133, 2321, 1655, 2332, 1661, 1673,
              2343, 1680, 1691, 2356, 1698, 1710, 2369, 1717, 1729, 1736, 
             1750}], 
            
            Line[{1442, 1446, 1462, 1473, 1487, 2095, 2241, 1507, 2099, 2250, 
             1525, 2105, 2261, 1543, 2110, 2272, 1565, 2284, 1574, 1584, 2119,
              2295, 1601, 2125, 2303, 1615, 2130, 2311, 1634, 2323, 1644, 
             1657, 2138, 2334, 1674, 2345, 1683, 1692, 2152, 2358, 1712, 2371,
              1720, 1731, 1739, 1751}], 
            
            Line[{1444, 1449, 1464, 1477, 1489, 2096, 2243, 1508, 2100, 2253, 
             1526, 2106, 2263, 1544, 2274, 1556, 1566, 2114, 2285, 1585, 2296,
              1595, 1602, 2126, 2305, 1616, 2131, 2314, 1636, 2325, 1648, 
             1658, 2335, 1667, 1675, 2145, 2347, 1694, 2360, 1703, 1713, 2373,
              1724, 1732, 1742, 1753}], 
            
            Line[{1445, 1455, 1466, 1481, 1490, 600, 1509, 1521, 2254, 1527, 
             666, 1546, 2276, 2111, 1568, 2286, 2115, 1586, 2297, 2120, 1603, 
             798, 1617, 1629, 2315, 1638, 2326, 2134, 1659, 2336, 2139, 1677, 
             2349, 2147, 1696, 1707, 2362, 1715, 2375, 2160, 1734, 1745, 
             1754}], 
            
            Line[{1447, 1456, 1468, 1482, 1492, 1502, 2244, 1511, 2255, 2101, 
             1529, 2264, 2107, 1548, 2277, 2112, 1570, 1579, 2287, 1588, 2298,
              2121, 1605, 2306, 2127, 1619, 835, 1640, 1652, 2327, 1660, 2337,
              2140, 1679, 1688, 2350, 1697, 2363, 2154, 1716, 2376, 2161, 
             1735, 1746, 1756}], 
            
            Line[{1448, 1459, 1470, 1485, 1493, 1505, 2245, 1512, 2256, 2102, 
             1530, 2265, 2108, 1550, 1562, 2278, 1572, 2288, 2116, 1590, 2299,
              2122, 1606, 2307, 2128, 1620, 2316, 2132, 1641, 2328, 2135, 
             1662, 1672, 2338, 1681, 2351, 2148, 1699, 2364, 2155, 1718, 2377,
              2162, 1737, 1749, 1757}], 
            
            Line[{1450, 1463, 1472, 1488, 1495, 2247, 2098, 1514, 2257, 2103, 
             1532, 2267, 2109, 1552, 2280, 2113, 1573, 2290, 2117, 1592, 2300,
              2123, 1607, 2308, 2129, 1622, 1635, 2318, 1643, 2330, 2136, 
             1664, 2340, 2142, 1682, 1693, 2353, 1700, 2366, 2156, 1719, 2378,
              2163, 1738, 1752, 1759}], 
            
            Line[{1451, 1467, 1474, 1491, 1496, 1510, 2248, 1515, 1528, 2258, 
             1533, 1547, 2269, 1553, 1569, 2282, 1575, 1587, 2292, 1593, 1604,
              2301, 1608, 1618, 2309, 1623, 1639, 2320, 1645, 880, 1665, 1678,
              2342, 1684, 2355, 2150, 1701, 2368, 2157, 1721, 2379, 2164, 
             1740, 1755, 1760}], 
            
            Line[{1452, 1471, 1476, 1494, 1498, 1513, 2249, 1517, 1531, 2260, 
             1535, 1551, 2271, 1555, 719, 1576, 1591, 2294, 1594, 785, 1609, 
             1621, 2310, 1625, 1642, 2322, 1647, 1663, 2333, 1666, 2344, 2143,
              1685, 2357, 2151, 1702, 2370, 2158, 1723, 2380, 2165, 1741, 
             1758, 1762}], 
            
            Line[{1453, 1475, 1478, 1497, 1499, 1516, 2251, 1518, 1534, 2262, 
             1536, 1554, 2273, 1557, 723, 1577, 756, 1596, 789, 1610, 1624, 
             2312, 1626, 1646, 2324, 1649, 888, 1668, 2346, 2144, 1686, 2359, 
             2153, 1704, 1722, 2372, 1725, 2381, 2166, 1743, 1761, 1763}], 
            
            Line[{1454, 1479, 1480, 1500, 1501, 1519, 2242, 1520, 1537, 2252, 
             1538, 1558, 2275, 1559, 727, 1578, 760, 1597, 793, 1611, 1627, 
             2304, 1628, 1650, 2313, 1651, 892, 1669, 2348, 2146, 1687, 1705, 
             2361, 1706, 2374, 2159, 1726, 2382, 2167, 1744, 1764, 1765}], 
            
            Line[{291, 308, 325, 1011, 342, 1028, 359, 1061, 376, 1094, 393, 
             1127, 410, 1160, 427, 1193, 444, 1226, 461, 1259, 478, 1292, 495,
              1325, 512, 1358, 529, 1391, 546, 563}], 
            
            Line[{292, 309, 326, 1013, 343, 1032, 360, 1065, 377, 1098, 394, 
             1131, 411, 1164, 428, 1197, 445, 1230, 462, 1263, 479, 1296, 496,
              1329, 513, 1362, 530, 1395, 547, 564}], 
            
            Line[{1767, 1766, 1786, 1790, 1812, 1016, 1832, 2170, 2388, 1851, 
             1072, 1868, 2408, 1871, 1889, 2421, 1893, 1909, 2431, 1912, 1927,
              1204, 1941, 1237, 1959, 2459, 1962, 1982, 2471, 1985, 1999, 
             2214, 2481, 2018, 2222, 2494, 2037, 2507, 2040, 2056, 2059, 
             2076}], 
            
            Line[{1768, 1769, 1787, 1794, 1813, 1018, 1833, 1043, 1852, 1076, 
             1869, 2410, 1874, 1890, 2423, 1896, 1910, 2191, 2433, 1928, 1208,
              1942, 1241, 1960, 2461, 1966, 1983, 2210, 2473, 2000, 2483, 
             2005, 2019, 2496, 2024, 2038, 2509, 2043, 2057, 2062, 2077}], 
            
            Line[{1770, 1772, 1789, 1798, 1815, 1020, 1835, 1047, 1853, 2177, 
             2401, 1870, 2412, 1878, 1892, 2425, 1900, 1911, 2435, 1918, 1929,
              2197, 2444, 1943, 1245, 1961, 2206, 2463, 1984, 2474, 1990, 
             2002, 2485, 2009, 2020, 2498, 2027, 2039, 2511, 2046, 2058, 2065,
              2079}], 
            
            Line[{1771, 1775, 1791, 1802, 1816, 2168, 2383, 1836, 2172, 2392, 
             1854, 2178, 2403, 1872, 2183, 2414, 1894, 2426, 1903, 1913, 2192,
              2437, 1930, 2198, 2445, 1944, 2203, 2453, 1963, 2465, 1973, 
             1986, 2211, 2476, 2003, 2487, 2012, 2021, 2225, 2500, 2041, 2513,
              2049, 2060, 2068, 2080}], 
            
            Line[{1773, 1778, 1793, 1806, 1818, 2169, 2385, 1837, 2173, 2395, 
             1855, 2179, 2405, 1873, 2416, 1885, 1895, 2187, 2427, 1914, 2438,
              1924, 1931, 2199, 2447, 1945, 2204, 2456, 1965, 2467, 1977, 
             1987, 2477, 1996, 2004, 2218, 2489, 2023, 2502, 2032, 2042, 2515,
              2053, 2061, 2071, 2082}], 
            
            Line[{1774, 1784, 1795, 1810, 1819, 1029, 1838, 1850, 2396, 1856, 
             1095, 1875, 2418, 2184, 1897, 2428, 2188, 1915, 2439, 2193, 1932,
              1227, 1946, 1958, 2457, 1967, 2468, 2207, 1988, 2478, 2212, 
             2006, 2491, 2220, 2025, 2036, 2504, 2044, 2517, 2233, 2063, 2074,
              2083}], 
            
            Line[{1776, 1785, 1797, 1811, 1821, 1831, 2386, 1840, 2397, 2174, 
             1858, 2406, 2180, 1877, 2419, 2185, 1899, 1908, 2429, 1917, 2440,
              2194, 1934, 2448, 2200, 1948, 1264, 1969, 1981, 2469, 1989, 
             2479, 2213, 2008, 2017, 2492, 2026, 2505, 2227, 2045, 2518, 2234,
              2064, 2075, 2085}], 
            
            Line[{1777, 1788, 1799, 1814, 1822, 1834, 2387, 1841, 2398, 2175, 
             1859, 2407, 2181, 1879, 1891, 2420, 1901, 2430, 2189, 1919, 2441,
              2195, 1935, 2449, 2201, 1949, 2458, 2205, 1970, 2470, 2208, 
             1991, 2001, 2480, 2010, 2493, 2221, 2028, 2506, 2228, 2047, 2519,
              2235, 2066, 2078, 2086}], 
            
            Line[{1779, 1792, 1801, 1817, 1824, 2389, 2171, 1843, 2399, 2176, 
             1861, 2409, 2182, 1881, 2422, 2186, 1902, 2432, 2190, 1921, 2442,
              2196, 1936, 2450, 2202, 1951, 1964, 2460, 1972, 2472, 2209, 
             1993, 2482, 2215, 2011, 2022, 2495, 2029, 2508, 2229, 2048, 2520,
              2236, 2067, 2081, 2088}], 
            
            Line[{1780, 1796, 1803, 1820, 1825, 1839, 2390, 1844, 1857, 2400, 
             1862, 1876, 2411, 1882, 1898, 2424, 1904, 1916, 2434, 1922, 1933,
              2443, 1937, 1947, 2451, 1952, 1968, 2462, 1974, 1309, 1994, 
             2007, 2484, 2013, 2497, 2223, 2030, 2510, 2230, 2050, 2521, 2237,
              2069, 2084, 2089}], 
            
            Line[{1781, 1800, 1805, 1823, 1827, 1842, 2391, 1846, 1860, 2402, 
             1864, 1880, 2413, 1884, 1148, 1905, 1920, 2436, 1923, 1214, 1938,
              1950, 2452, 1954, 1971, 2464, 1976, 1992, 2475, 1995, 2486, 
             2216, 2014, 2499, 2224, 2031, 2512, 2231, 2052, 2522, 2238, 2070,
              2087, 2091}], 
            
            Line[{1782, 1804, 1807, 1826, 1828, 1845, 2393, 1847, 1863, 2404, 
             1865, 1883, 2415, 1886, 1152, 1906, 1185, 1925, 1218, 1939, 1953,
              2454, 1955, 1975, 2466, 1978, 1317, 1997, 2488, 2217, 2015, 
             2501, 2226, 2033, 2051, 2514, 2054, 2523, 2239, 2072, 2090, 
             2092}], 
            
            Line[{1783, 1808, 1809, 1829, 1830, 1848, 2384, 1849, 1866, 2394, 
             1867, 1887, 2417, 1888, 1156, 1907, 1189, 1926, 1222, 1940, 1956,
              2446, 1957, 1979, 2455, 1980, 1321, 1998, 2490, 2219, 2016, 
             2034, 2503, 2035, 2516, 2232, 2055, 2524, 2240, 2073, 2093, 
             2094}]}, {
            
            Line[{579, 2313, 859, 856, 855, 2324, 852, 2322, 851, 848, 2320, 
             847, 844, 843, 2318, 840, 839, 2316, 836, 835, 832, 831, 2315, 
             825, 2314, 824, 821, 820, 2311, 817, 816, 813, 812, 809, 808, 
             805, 804, 801, 800, 797, 795, 829}], 
            
            Line[{580, 2304, 826, 823, 2312, 822, 819, 2310, 818, 815, 2309, 
             814, 811, 810, 2308, 807, 806, 2307, 803, 802, 2306, 799, 798, 
             792, 2305, 791, 788, 2303, 787, 784, 783, 2302, 780, 779, 776, 
             775, 772, 771, 768, 767, 764, 762, 796}], 
            
            Line[{18, 19, 20, 21, 1457, 22, 1458, 23, 1460, 24, 1462, 25, 
             1464, 26, 1466, 27, 1468, 28, 1470, 29, 1472, 30, 1474, 31, 1476,
              32, 1478, 33, 1480, 34}], 
            
            Line[{35, 36, 37, 38, 1483, 39, 1484, 40, 1486, 41, 1487, 42, 
             1489, 43, 1490, 44, 1492, 45, 1493, 46, 1495, 47, 1496, 48, 1498,
              49, 1499, 50, 1501, 51}], 
            
            Line[{598, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 
             592, 593, 2241, 594, 2243, 595, 596, 600, 601, 2244, 604, 605, 
             2245, 608, 609, 2247, 612, 613, 616, 2248, 617, 620, 2249, 621, 
             624, 2251, 625, 628, 2242, 629}], 
            
            Line[{631, 597, 599, 602, 603, 606, 607, 2246, 610, 611, 614, 615,
              618, 619, 2250, 622, 623, 626, 2253, 627, 2254, 633, 634, 2255, 
             637, 638, 2256, 641, 642, 2257, 645, 646, 2258, 649, 650, 653, 
             2260, 654, 657, 2262, 658, 661, 2252, 662}], 
            
            Line[{664, 630, 632, 635, 636, 639, 640, 643, 644, 647, 648, 2259,
              651, 652, 655, 2261, 656, 659, 2263, 660, 666, 667, 2264, 670, 
             671, 2265, 674, 675, 2267, 678, 679, 682, 2269, 683, 686, 2271, 
             687, 690, 2273, 691, 2275, 694, 695}], 
            
            Line[{697, 663, 665, 668, 669, 672, 673, 2266, 676, 677, 2268, 
             680, 681, 2270, 684, 685, 2272, 688, 689, 2274, 692, 693, 2276, 
             699, 700, 2277, 703, 704, 2278, 707, 708, 2280, 711, 712, 2282, 
             715, 716, 719, 720, 723, 724, 727, 728}], 
            
            Line[{730, 696, 698, 701, 702, 705, 706, 2279, 709, 710, 2281, 
             713, 714, 2283, 717, 718, 2284, 721, 722, 2285, 725, 726, 2286, 
             732, 733, 2287, 736, 737, 2288, 740, 741, 2290, 744, 745, 2292, 
             748, 749, 2294, 752, 753, 756, 757, 760, 761}], 
            
            Line[{763, 729, 731, 734, 735, 738, 739, 2289, 742, 743, 2291, 
             746, 747, 2293, 750, 751, 754, 2295, 755, 2296, 758, 759, 2297, 
             765, 766, 2298, 769, 770, 2299, 773, 774, 2300, 777, 778, 781, 
             2301, 782, 785, 786, 789, 790, 793, 794}], 
            
            Line[{827, 892, 889, 888, 885, 884, 2333, 881, 880, 877, 876, 
             2330, 873, 872, 2328, 869, 868, 2327, 865, 864, 2326, 858, 857, 
             2325, 854, 853, 2323, 850, 849, 2321, 846, 845, 2319, 842, 841, 
             2317, 838, 837, 834, 833, 830, 828, 862}], 
            
            Line[{860, 925, 2348, 922, 921, 2346, 918, 917, 2344, 914, 913, 
             2342, 910, 909, 2340, 906, 905, 2338, 902, 901, 2337, 898, 897, 
             2336, 891, 890, 2335, 887, 886, 2334, 883, 882, 2332, 879, 878, 
             2331, 875, 874, 2329, 871, 870, 867, 866, 863, 861, 895}], 
            
            Line[{893, 958, 2361, 955, 954, 2359, 951, 950, 2357, 947, 946, 
             2355, 943, 942, 2353, 939, 938, 2351, 935, 934, 2350, 931, 930, 
             2349, 924, 923, 2347, 920, 919, 2345, 916, 915, 2343, 912, 911, 
             2341, 908, 907, 2339, 904, 903, 900, 899, 896, 894, 928}], 
            
            Line[{926, 991, 2374, 988, 987, 2372, 984, 983, 2370, 980, 979, 
             2368, 976, 975, 2366, 972, 971, 2364, 968, 967, 2363, 964, 963, 
             2362, 957, 956, 2360, 953, 952, 2358, 949, 948, 2356, 945, 944, 
             2354, 941, 940, 2352, 937, 936, 933, 932, 929, 927, 961}], 
            
            Line[{959, 1007, 2382, 1006, 1005, 2381, 1004, 1003, 2380, 1002, 
             1001, 2379, 1000, 999, 2378, 998, 997, 2377, 996, 995, 2376, 994,
              993, 2375, 990, 989, 2373, 986, 985, 2371, 982, 981, 2369, 978, 
             977, 2367, 974, 973, 2365, 970, 969, 966, 965, 962, 960, 992}], 
            
            Line[{1008, 2455, 1288, 1285, 1284, 2466, 1281, 2464, 1280, 1277, 
             2462, 1276, 1273, 1272, 2460, 1269, 1268, 2458, 1265, 1264, 1261,
              1260, 2457, 1254, 2456, 1253, 1250, 1249, 2453, 1246, 1245, 
             1242, 1241, 1238, 1237, 1234, 1233, 1230, 1229, 1226, 1224, 
             1258}], 
            
            Line[{1009, 2446, 1255, 1252, 2454, 1251, 1248, 2452, 1247, 1244, 
             2451, 1243, 1240, 1239, 2450, 1236, 1235, 2449, 1232, 1231, 2448,
              1228, 1227, 1221, 2447, 1220, 1217, 2445, 1216, 1213, 1212, 
             2444, 1209, 1208, 1205, 1204, 1201, 1200, 1197, 1196, 1193, 1191,
              1225}], 
            
            Line[{307, 308, 309, 310, 1786, 311, 1787, 312, 1789, 313, 1791, 
             314, 1793, 315, 1795, 316, 1797, 317, 1799, 318, 1801, 319, 1803,
              320, 1805, 321, 1807, 322, 1809, 323}], 
            
            Line[{324, 325, 326, 327, 1812, 328, 1813, 329, 1815, 330, 1816, 
             331, 1818, 332, 1819, 333, 1821, 334, 1822, 335, 1824, 336, 1825,
              337, 1827, 338, 1828, 339, 1830, 340}], 
            
            Line[{1027, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 
             1019, 1020, 1021, 1022, 2383, 1023, 2385, 1024, 1025, 1029, 1030,
              2386, 1033, 1034, 2387, 1037, 1038, 2389, 1041, 1042, 1045, 
             2390, 1046, 1049, 2391, 1050, 1053, 2393, 1054, 1057, 2384, 
             1058}], 
            
            Line[{1060, 1026, 1028, 1031, 1032, 1035, 1036, 2388, 1039, 1040, 
             1043, 1044, 1047, 1048, 2392, 1051, 1052, 1055, 2395, 1056, 2396,
              1062, 1063, 2397, 1066, 1067, 2398, 1070, 1071, 2399, 1074, 
             1075, 2400, 1078, 1079, 1082, 2402, 1083, 1086, 2404, 1087, 1090,
              2394, 1091}], 
            
            Line[{1093, 1059, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 
             1077, 2401, 1080, 1081, 1084, 2403, 1085, 1088, 2405, 1089, 1095,
              1096, 2406, 1099, 1100, 2407, 1103, 1104, 2409, 1107, 1108, 
             1111, 2411, 1112, 1115, 2413, 1116, 1119, 2415, 1120, 2417, 1123,
              1124}], 
            
            Line[{1126, 1092, 1094, 1097, 1098, 1101, 1102, 2408, 1105, 1106, 
             2410, 1109, 1110, 2412, 1113, 1114, 2414, 1117, 1118, 2416, 1121,
              1122, 2418, 1128, 1129, 2419, 1132, 1133, 2420, 1136, 1137, 
             2422, 1140, 1141, 2424, 1144, 1145, 1148, 1149, 1152, 1153, 1156,
              1157}], 
            
            Line[{1159, 1125, 1127, 1130, 1131, 1134, 1135, 2421, 1138, 1139, 
             2423, 1142, 1143, 2425, 1146, 1147, 2426, 1150, 1151, 2427, 1154,
              1155, 2428, 1161, 1162, 2429, 1165, 1166, 2430, 1169, 1170, 
             2432, 1173, 1174, 2434, 1177, 1178, 2436, 1181, 1182, 1185, 1186,
              1189, 1190}], 
            
            Line[{1192, 1158, 1160, 1163, 1164, 1167, 1168, 2431, 1171, 1172, 
             2433, 1175, 1176, 2435, 1179, 1180, 1183, 2437, 1184, 2438, 1187,
              1188, 2439, 1194, 1195, 2440, 1198, 1199, 2441, 1202, 1203, 
             2442, 1206, 1207, 1210, 2443, 1211, 1214, 1215, 1218, 1219, 1222,
              1223}], 
            
            Line[{1256, 1321, 1318, 1317, 1314, 1313, 2475, 1310, 1309, 1306, 
             1305, 2472, 1302, 1301, 2470, 1298, 1297, 2469, 1294, 1293, 2468,
              1287, 1286, 2467, 1283, 1282, 2465, 1279, 1278, 2463, 1275, 
             1274, 2461, 1271, 1270, 2459, 1267, 1266, 1263, 1262, 1259, 1257,
              1291}], 
            
            Line[{1289, 1354, 2490, 1351, 1350, 2488, 1347, 1346, 2486, 1343, 
             1342, 2484, 1339, 1338, 2482, 1335, 1334, 2480, 1331, 1330, 2479,
              1327, 1326, 2478, 1320, 1319, 2477, 1316, 1315, 2476, 1312, 
             1311, 2474, 1308, 1307, 2473, 1304, 1303, 2471, 1300, 1299, 1296,
              1295, 1292, 1290, 1324}], 
            
            Line[{1322, 1387, 2503, 1384, 1383, 2501, 1380, 1379, 2499, 1376, 
             1375, 2497, 1372, 1371, 2495, 1368, 1367, 2493, 1364, 1363, 2492,
              1360, 1359, 2491, 1353, 1352, 2489, 1349, 1348, 2487, 1345, 
             1344, 2485, 1341, 1340, 2483, 1337, 1336, 2481, 1333, 1332, 1329,
              1328, 1325, 1323, 1357}], 
            
            Line[{1355, 1420, 2516, 1417, 1416, 2514, 1413, 1412, 2512, 1409, 
             1408, 2510, 1405, 1404, 2508, 1401, 1400, 2506, 1397, 1396, 2505,
              1393, 1392, 2504, 1386, 1385, 2502, 1382, 1381, 2500, 1378, 
             1377, 2498, 1374, 1373, 2496, 1370, 1369, 2494, 1366, 1365, 1362,
              1361, 1358, 1356, 1390}], 
            
            Line[{1388, 1436, 2524, 1435, 1434, 2523, 1433, 1432, 2522, 1431, 
             1430, 2521, 1429, 1428, 2520, 1427, 1426, 2519, 1425, 1424, 2518,
              1423, 1422, 2517, 1419, 1418, 2515, 1415, 1414, 2513, 1411, 
             1410, 2511, 1407, 1406, 2509, 1403, 1402, 2507, 1399, 1398, 1395,
              1394, 1391, 1389, 1421}]}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1: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
+6L8vk1F+WCCKB/cTuVjJcoT24jyRLk8qfyRyh/l8qf6AqovkOuL6hfURP2C
XL/0PUB78T2A/D10tUw/+HZjFtRVK5ozYt5NKLK4X4VS//NreqlLybxkWPHP
j4Ubs2/AysoTyasflMEbvVf1Nd+5Yf9hTp8uJeRA50kBn0YckuZRH4o92phn
4NxbTl1G7rwEe+xmpQ08rpC/f1wrvn+Qv39n0V7QTbQXlNvLe9G+8KtoXyi3
L2qPOEa0R5TbY+Ze14p6G69hwtpJU/u0KMCpsc4RQ/eVwdDZDTodcsrFrwZv
1i21zsPfX3t8MKoog0zRP+A70T+g3D8YiP4Eg0R/gnJ/MkT0P0j9D8r9D/VX
QP0VyP0V9W9A/RvI/dtX0R8C9Ycg94d9Rf8JzqL/hErqP4NyzV50tvXH8NIv
l3XcMqHexpPl+yIV8NttY6bqiRyceXXs8OjjcdAZ5n+LtpXmyaI/xz5n/+3P
Ue7Pqf/HMtH/Yzvq/z3EeIHdxHiB8nhB4wsGivEF5fGFxiP8LcYjlMcjezF+
obcYv1Aevzr3TNjy6F4eHtYaOrN1cjIu2GLWLkRaNyX7qRx5n5iBhhbb9Rcc
SsDSMPOC09L7mm/+dvNmYiAunO/jXPfuUvy2zvPkBKk8y69POr7o3TT4M6Hz
iTm/POH7/WOrekjzq3divAYar0Eer2l8BxrfQR7fk05dGed91xdGur/Qntg6
A4r3m5+fdUkBc4sNjh5ShOIb0/ruU5pGw7SG5R4zpXlyj5DV7jl7EO8vz6k/
qG0IvOuy5o6X1L62eFUVnWudi4t3/nTcdqYPPjB6Fd79oNQep+zVnfDyKjZJ
m2b5sHcgOq4zfpM+WBrfA0ftPtL+Jp7ID9s4Y2EMnvEyGxRVUgaxjYsqQ2cU
4a5lv0Yu35+IzwaNGnnof+v6inN/dNvewnqjrdwKbyJ6BZm0iF5fBrPFfAzn
ifkYyvOxSDF/ww1i/oby/O2rmO9hhpjvoTzfyxbzQ5wi5ocozw8Htn2p/22/
K1rGPHmkL5Xn06yxFZrSvD3CQmN6rQcnwBmcnE02x8C5Gc1iPkvrILcdrdsv
bRAEdWonaU6Ji4X6kQGeetK6foeY30IzMb8FeX7rIebDcFDMh0GeDzu3HjRk
17JgPOC9ukGrmV7Q1HHOCYNvCqjUDGveplEsjjhb1fTRygDUrXPc4aJUL6C5
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
7eSMdT7OdgiY5AnRXrZ5PaR5i/PRiMw7o45j3YqUfo6zTkJqzCenTn+l8my3
7eiUeTY4LOr65KhzdlBx0mlbgTTPXF9vfl7U9V1Qd4vqgZKrq3CQ0V9flOK3
pnyZ8y3pOFjUVltxYs1BPD8/aX+0pHM69EztX2dPw51P/RtkVrjhk9iDMztI
f1dz59Mex7cEgKmPXeDmZf7YRctQZ77Un+yZODGv7x1PaKv3olmG0Xn0q7C5
miSt3ye3H5d40fA0/Jj8vdnxwGgsA5+3bz5K37lTzNq4B7ZYd/26na0SE9Ak
raDRypcK2GTe+Be880Df/QaK0gWp+CVjQvPPUnt8v252rauuifClWHfl7b7+
MGLUmnm20rzCsI35iNPSOvaM6yiDBttDweKxqeKypFMccSVkfaMI+LU8+rWV
bihELZljkC/NAzfve7MqLzoI1DVjR6VVh4DOwYTYJ9K6YwPunVV7+jnIqqf1
+x/VEPg51XFhmlQvxz+PjNmvEgpX980/0O5AEJQ5VZtWSb8PeHvt09s1IXDP
aLfW8OpzMMfcvHV96fcWt/1O1h4VCsPPGtcKuuQNZxbGut+Uvv/xK23Lr+2J
gfdRK3J2h3tC6zPDfNWl78GiclSvIwtjYEn4ku1el45A0Pojebuk8gn/9nXn
lJQEuORe0sFs4hZQicrqM1d6r9XHvgyZ6JQEfedENLjd8ABaVi2a9PCxAq4t
HvHcZXYS+H88HDY37RyGror9ZSn1M0bw+9fTU1Ew3nR8stX3GIyZfe6TrvT7
Va29bqsvdoXFtfa2+BWQhkf+6aawkdbd15tZzIrV9MRfAyZahSsyceY5lWk7
pfVdtzjvVXpGAZgYs1E7TScbnz85WvzeRyqHMW936K1Mho4tevTbsMAdMrbq
drSQ/u6GcbWMJ69JhpA1a93StfxgttGd0NPSemSdQ52zrSJSYPKb67fb2QTC
gTWas3SkfvK75yf7HnHJ8LjDak1noxBwNd1b55AUn1zeYGL3hRdhwZ4ei3e2
CIV2aS1WuErfQ0Rmu7Nv7qfCX787wx+MC4WRzWeczstUQOZ3100Gt1NB77RG
rwG+wVBxtvGXh1L/+etPHdeJr1LhSY8n2TdNA2Du48ha16V19OrPmmt+pSL8
Ltqt9b7aH9LXte0Ze0laD+7rqnX6TwZYq60JLFp8Fj5MvjndP05aT5X2tX4N
mXBhQPDmP42sYf7xDlojpHHq6JROWi2+pUKfLW+OPDrqholbJpWsldYLtZZ4
LbRpHw4Ln44Jna2Wjtr79ZNe/U/fK/OQqttwqLPDKejCy0z8rBVT7h+lgKil
Y3Ljp/mhw8/c4yNsc7F7d7XkuzulfsYGrN7dPIZb9Jbm9CzOwtlBhzvWk+YV
mX3q7Rjuagdb8cZTrSfp2OdJkKK1NN7hSJNW1l0TIHfrteo8q7Ngt3jt7J7P
FdDyueqEHdJ69nmdcru2ncPAufeR58PuSeudfTtmVy66BJkF9zulzg+FH8PM
rL/kSuPFgMVzYw+nwZ3qnP1e+lHQbUZW7x/SuHNg+QDNpLAM6BU0pX27VtHg
tzLoxmdpPpOQ3+z7ebss6DzqVcpelSjYUzbogZo0X1pRqp563+QyqG7Q7XF9
WST8+hTx2umoND/ftOF5cLccGNbUus4ImxCwTBsaUVuaZ647ZVr5ZJ20Hnwe
YLcCg2HO9MFzuxxQgOl40z6vUy7DMu/Rf3obHYO80KH6mq4KqG6Y2NylAKE4
eeS4Q79Ooe2h87lPpXlRUI8BP48Oi4abI9aPVfFJQ0t7v2/rkqVx079FE3V/
D3B4/C65fVIuttF9abzIXgH2thPbv3zrB8v++q94YpWLjedN6lwulb/L+l/D
+hiGwLC/HU1drmbikLhYu17npfGisdqDL7uSYLvdnpLxfxNQRbHreh1pHmJw
yjdD4XsJ0sYe9ugbEIsbl4x9Mf2i1L/1jXq3bagHTD7cMiNKMwqcjy9eYiH1
J/37xunFrzkACUcNzi8pjYeSrjF/h0jzgQcNM6+ddzgPYcWqqh13xcOJD3VW
NpTmz6scPHtMfhwFW3IOtiiS+oPOIwJfTfnfeaoDW9q67IyH4Mvji25Js5/f
C8cObiytp0K/Oapn90So1a7BeT3VBJh82W+wgfT8U77a7Gn6KAP0k+PKfEri
YWjkvN1tpXZtrvWnTk/XbKi1+edBC8M4OOytcOl9WJq3N59xrLRdPuChoqD6
j6Kg9sDxKdOlefjxbXYrX+7MhomTSy1d5kejpW15gvMJaf3uZL9ijkYCPA4L
t+nomol1TFYmTnaTnsehx7ULt8Jh/5kOps0u5OLb7NqHW9kqYND4/gU/HyRC
yPfFJV+c0/Dhr6cWBiEKSMkwMx7cPAXiuoZvsk3JwIFB83o2c1HAgvoRHnmz
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
3yKfyB3mE6lvIHwia5lPRFm8C/ksFjKfRSHVS39WLzr0+8Xs9+XkT5nH9HPI
n7KL/CmH6HxLb9KxZDoXyN/RnPk7RpKf5RL5WdqSn8WQ4hksHkM6LZjOBfKJ
3GQ+ESvyxbhwXwzFT7H4FOYrySBfiSnFm7L4etLxYDqW5LtpR74be/LdzFCi
o2ImfCt6zLeygvl3ZJ2LzL+jT/6dvTOETk+mk0D+FzfyvzjR+a5LpGPOdBaT
D+gD8wFtJb/Mc+aX2UbxaBZXpiP7iZ4xP9Fe0hnGdGaRH6cf8+Nok85TpmNL
vqT2zJfE/S+t6LzfOvIrBTO/kj35YloxX8wV8gENIB+QBvmACik+hMVlf01b
pjOG/DX1yV9zhPw110lnONNxJZ/Rb8uaPiMn8uPsZH4cOb6bxU+Tzl+mc4z8
SqHMr3RUib4b+X2OMr/PcSW+p2zyPSH5nozI9xROOgeYzhXyDQ1mvqEs8kn1
Yz4pOd6fxencKfgxn9E3igexeCbp9GU648iHVb9WTR/WD9IJZzoR5GOyIh+T
Pp2DNSSdOrX+bz/X3n41/VwXSMeG+aHmkR9qGvmhrtD52/Gkk9G3pk5f8oVN
Jl9YEPnC7Ml/lEX+I3l896L2Ysfai0qW8CW9YL6k+Uqe5z75s1Yxf9Y38jc9
YzqGc4W/yY35mx6Qzhqm04B8Xn7M53WTdE4xnafkkypJrOmTUqbTg/xir8kv
do38Yl9IpzbzWx0jv1Ue+a2CyW8l67xiOm7kO+vPfGenSOcm822NJN+WK/Nt
nSKdvkznEPnXljP/miHpuDOdLeT/Ok3+ryd0ft6BdKYynQbkgzMiH5wO+eAW
kF+sgvxih+h8/kIWd6B4HdKZxnRKyU/Xlvx0H8lPt4R0fjCdgeRH8yM/2h3y
C4wxFf67TuS/60z+O1Py5XVkcWPyf9kx/9cOai8ZrL00JF9Yf+YLG6TkedzJ
H9eT/HEDye/QmXxkbuQju0W+D12Kn2ZxWacL0zlNPjsF+exkn8UI0gliOsHk
U7tJPjU/8qHIvjwVw201fHlb5HjPmnHZ73aXdM6Szl7yu00lv1s++d02yzov
a/r+npDvT498fzfJ9yf75kyZzlvyzaWQb86RfHOR5BPcQj7BePIJ+lB8K4vL
/rt0ptON/HcG5L/7S36f46Szm+ncLxM+xH+YD7EH6QDT+Ug+vi/k49Mhn1Fj
8jMeZjovyM8YQ37G1eTfOUG+P/IxwR/yMZG/CU4zP+A7JTrbyRc5hnyRoeQb
+rtQ+O/Smf9uPrWXfay9LCVfnjr58paTj0x+Hmf2nPnkTzRm/sQVpNOc6dQh
f1808/c1JT9jOvMzqlP8Mo+TTjzTWUc+wXDmE6xPOleYzj494ZdUJb/kVvJL
2pJOFNOJJ7/hE/Ib/iC/Yf8+QqcR8132JN/lDvJdWpHv0oH8iXWZP/Gokngk
+TTdyadpRz7NFIqfZvFjSvyPKgOE/3Eh8z+mkd+zLfk9l5O/L5viWixeW4nO
ZOajNCFfZC7ptGd+UlPyk9ZjftKppFMdVtOPWevffebcUeL/5FHyvvNM0lFj
OvnkS/UnX+pk8jnK/kc38j/K8TJqL7GsvZiRL1KVfJEtSV88RxY9z8n/9sF7
kD+0Ujw/mtLzzyGdusxfWUD+ynbMX6lLOlVMZzn5TLXIZ3qQfKaFSnya3ZlP
8xb5NNeRTifSOUA6LcivOo/8qlnkV9VR4vdUnSH8niuZ37OdEt/rYfK9FpLv
VZd8r3Vn/N++0SPkG9Un32gX8o0eYf5ZWceG/LNJzD/7inymq5jP9CXFbVh8
vRIfbjPy4SYzH24J6VgxnVTysfqQj/U19ZNNSCeR6awjP682+Xnl/hNJZyXp
lJDOUfLDniA/bDX1z2tIpx3T0SZf8B3mCz5C/tOJ5D+Vx5FMai/OrL18J19q
EvOlHqfn8aLnkceLN8yfK4+bP0knhenMIH+rK/O3viOdb0ynO/l8x5PPVx6v
j5Ef9gLzw8rxKBbXUaKTTX7hi+QXnkZ+YRclOl/Ib7uY+W1l33EK0xlOvuMf
zHf8g3TmMx1b8u2qGNb07cr+5W9MJ4/8y5/JvyzP9zbLOktr6riQ//cu8/9m
kc5HpjOVfNDJzAftRn5hDfILy/Ne2UesxeJjSSeS6ViRn3ot81MTvwJ1mR95
KPmRg5kfeQLpmDMd2WfqQD5TeR19n/y/wPy/sl/biLWXAeQL/km+YBPyBVuS
D/oP80FbUFxlWs34WNL5ynRakr/4B/mLS8lfLPus/zL93eSzPks+68e0TtQi
nQqms5Z8yrVmCZ/yQ/IpE28EfZlOV/JrnyS/9kLya8t+Z5WVNf3OGeR3/pha
0++cRv7uyeTvfk/+7ksUn8Ti+aSjynzTu8k37UC+aXfyTaeQzjims5z840sX
1PSPyz7rDcxnHU/x7Sw+n3QymA9d5Zrwob9nPnRZZzfTOU4+blXm475JvvU8
5lt/QvErLC7rNGI6i8gPvoT5wd+Qzi2mM4p8vreZz/cU+a/9mP/6ObUXA9Ze
fpAvuzX5svuQL9ucnseCPU8C+dN3M3/6YPJx72Q+bkOKH2ZxlcfCz/6K+dmJ
a4QvWNyYdCKYTjr5xNuTT/we5Rspr4iFTKeI/PKbmV+e8p/YlfnNn5LffCvz
m1N+FdcxnQ3kux/FfPfDyZ+ezPzpoyiexuIGpDOb6awl//4h5t83IJ1MpuOv
xP++h/z+lbWE378B+f0dKV7N4i7kl/+H/PJq5Jc/RfGjPE46tWrX1NlCPIGG
jCdwknSOMJ2F5MffTn78LrR/YUc6TZjOX/JZZzCfdSL538uY/30LtZciai/N
qL1cJV/8e+aLN6fnWc34AC+ID1CrY00+gC/56CczH30wxSew+BXS2cB0xhwX
nAF74gzI+1ARpDOD6XQhn34r5tOPOSW4BF2JS/CXuATNiVfQj8Ubkq/fh/n6
m1Lcn8XXk44x02lE3AMbxj1oqUTnFHEDjjJuQAPiJDgxToIGxV1Z3Jl0HJlO
tzjBH5jD+ANdSOcU02lMHIYkzmEgHROmk0EcAyvGMZB5DilMh/adYS7jORgS
96DcvCb3wJziv1lc1pnFdLaTz/0T87m7EWdAk3EGIqi93GXtReYSdGS/P0bP
04fxGTyJzxDB+Ay+pKPNdIhviW+Ib2BIfANP4jl0ZTyHsxTvxeJHSOc901lG
nIRE4iSYEichmHT6Mh0N4kUUES9iGvEiDhJXoTtxFZoTV8Gd4t0Yb6EW8SUe
M75EfSXciSOk05np6xG3YTJxG8qJ29CQdF4xnVTiVyxm/IqZpNOL6fgR/0Gb
8R/SlehcJw7GKMbB2EK8iHDiRcwkXsROiieweD7p9GU67Yin0YfxNPaRTjbj
UVwlHsUn4lG0IR6FRgMxLjxn48Je4gx4M86AMv6DFfE6vhCvI4Z4HXeICxHP
uBCdiIPxhjgYU4mD0ZXiZSx+l3QSmU4h8SUCGF+iG+l8ZjqdibORR5wNmXMb
QTp+TKeQOBU/iFOhS5yKbqRTyHQeEq+jBeN13CGdUqbzvbvgXbjr1eRdPCCd
5kwnjrgfcYz7UU06D5lOd+Jm5DJuRizpxDCdQOKHlDJ+SG/Suc90XIi/4Uj8
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
5Xyiiv8xJw2M8OekATcnzWecg/tcUfK5HsBTR8g5t+TzviCf9y3e/2l5/zOW
jvztyNQFgewmM6tenr4rkLxgUqWlS/677+PR7/P3a3TZHnnWBNrMunD16TkZ
gY77mh672umKFxtxrsSdjFVe18HDT7XNTglMja4+qv7RK94gnv/f8vwzeHwn
efxivt+r8v1eOdAmT+NXNnmjkooWiq+3PjAsokOtSb//OzkAH1dG+LiycI7n
hHMsavB6I+HXFgm/tpznLyLPPx6eq2WFYJ7rIHxWY/isp+Gz5sNnPRgQzGfN
gsNKEA7r4yifLyspfNlNeKVVwiuth1caKrzSUYMzKgwvs0x4mRpwQ2eEG/qT
v2/U+15eNwLOZTmcy3f0iukne5XhPlw/eTR8yo1vg/kU9gh7ucLXzIHLiBMu
I/9Kn6c4JDxFdC2fmygm3MRUuJJewpXkC/N5hL7CI5RumlSiadK2yOzpSzKn
L5n2MJ8Jhy+4x/56xynEwBdUFL6gvMEXjIOPyC98xEn6/MOkz6970t2+dWtv
uOvnt9J+Pn3yL6RPHnLJf91IXncCr+v2UNeVnrm1N3kMvfcNh4N7771kP6/r
IfP/c2C39Gz30B/uJv3hXfSoS0uPOpFe9DjpRXejTztY+rQp9Es7Vgjul26j
J1xbesIf0QvtJL3QKvRd46Xv6vZUbpW+6wT6wKOlD1zR2DuZQH8yXPqTG+iF
1pNeaAn6sc9IP7ao0QsNGHsJv6IfW1v6sRnGnsEa9CGvSR+yhrH/zvUeixl7
6zZKv3E5PcYs6TE+Ty8xXXqJ0+n7tZK+XxJ9v+HS95tHr2+Q0es7KL0+1987
Jv29SPp7laW/l4+9ZiNkr1lXelz9pMc1mfn4LZmPn6LnMPjT4J5DUWNeP4P5
dabMr//C8xeQPV89mOfWk3luf+aznWU+u4r57HKZz77KHLahzGHnM1/eL/Pl
Lcwra8q88oaxR+ZJY87o5onzZZ44nblhXZkbZvC6deV1hxj7ONw8q5/MfVYa
+yDw3HpNZb7m9hqkylwmlXlKtsxTVhle/S3MldbIXKkO84hNMo/IPBU39ey0
hMgukZm/NvhlwcO/a7MMv3pr5gufGF50nS9kGvOR84YPXD3eA8nzuxp+7Dbk
8+Hiow4jT54meXJIXv91m8vrOk/yXMmZnR84n+TALvfOkNx7iPhjXQ7J/D1Q
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
86ljRr+0sTGf6sl86rbMp/4DSnCzMA==
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0., 0.49523678159929424`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 2}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 1}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
        "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {30, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
         0.5439330543933054, -0.04184100418410042}}, 
        "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
        "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
        "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
        "mPosFirstCell" -> {{0.9, 0.7}}, 
        "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
         0.7, -1.9000000000000001`}, {
         2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
         0.8, -0.6000000000000001}, {2.6999999999999997`, 
         0.19999999999999996`}, {-0.9999999999999999, -0.10000000000000009`}, \
{0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {1., 2.}, {2.9, 
         2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, "lineTable" -> {{
           Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
           Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
           Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
           Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
           Line[{{-3., -39.}, {3., 39.}}], 
           Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
           Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
           Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
           Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
           Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
           Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
           Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
           
           Line[{{-10.3, -38.300000000000004`}, {
            4.8999999999999995`, -31.900000000000002`}}], 
           Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
           Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
           
           Line[{{-10., -34.400000000000006`}, {
            5.199999999999999, -28.000000000000004`}}], 
           Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
           Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
           Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
           Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
           Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
           Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
           Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
           Line[{{-9.2, -24.}, {6., -17.6}}], 
           Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
           Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
           Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
           Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
           Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
           Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
           Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
           Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
           
           Line[{{-8.299999999999999, -12.3}, {
            6.8999999999999995`, -5.8999999999999995`}}], 
           Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
           Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
           Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
           
           Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
            7.3, -0.7000000000000002}}], 
           
           Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
            0.6000000000000001}}], 
           Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
           
           Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
            5.800000000000001}}], 
           
           Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
            7.1000000000000005`}}], 
           Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
           Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
           Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
           
           Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
            8.299999999999999, 12.3}}], 
           Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
           Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
           Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
           Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
           Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
           Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
           Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
           Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
           Line[{{-6., 17.6}, {9.2, 24.}}], 
           Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
           Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
           Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
           Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
           Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
           Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
           Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
           
           Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
            34.400000000000006`}}], 
           Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
           Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
           
           Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
            38.300000000000004`}}], 
           Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
           Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
           Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{}}, {{{
          1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
           0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
           0.9941176470588234}}}, {
          1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
           0.8, -0.6000000000000001}, {{0.005882352941176467, 
           0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
          1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
           0.7}, {-0.8999999999999998, 1.2}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
           2.6999999999999997`, 0.19999999999999996`}, {{
           0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`,
            0.07163323782234958}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
           0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629013}}}, {
          1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
           0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
           0.49940546967895366`}, {0.49940546967895366`, 
           0.5243757431629014}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {{{}}, {{{
            1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
             0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
             0.8, -0.6000000000000001}, {{0.005882352941176467, 
             0.0764705882352941}, {0.0764705882352941, 
             0.9941176470588234}}}, {
            1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
             0.7}, {-0.8999999999999998, 1.2}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
             2.6999999999999997`, 0.19999999999999996`}, {{
             0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
             0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`,
              0.5243757431629013}}}, {
            1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
             0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
             0.49940546967895366`}, {0.49940546967895366`, 
             0.5243757431629014}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 16, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyVfQd0VlUWdURAVBgRUVEHHcCOIiidwA1VinRBmkoRQem9g4BSRFQcFXAE
G4QAAgqxAJEXINRQQkkooSgGW+gDtlB+17D3eevuR37/nzVrudZZb3bed867
79179j7nlOjcp0XXPDExMQeujYm5+q//tij+0ZebFuVLbjIj8/fzPXKCyv+u
8c8WffY72uvck9x21MXfgoKnzm0/8OVes1ddOmfFhTfPBgm9N2QUrZZh9nJu
8h2jS50Onp7U7jtXZ5fz8bODD/rv7r+j5g7ByQpGDFnS7o9eaWZv9r/rM4MH
X+qyIetqtacGczIWlX7z0dAeg3/La/b87+n6O/R6d7r+HSn/fmKX4rsHi/4x
fM26dLPHXr4ft7BUj5ij94a/94nL9+92t9xXc26R0D9lL/9e13nf4T6d2maq
f9y8kcu2jT+Wqf503Ut9/e7iPZninxw3rsPwR2dXz3QJf2wZU/j3PBaX/eu/
f77tub1mZ1yafl596+kTGWZnXH5q0viNi2+mm51xeWNIytS1/0wX/OxgV0rL
U1X/3C04WcFPJ4vdetPD4fWMy+i91U/WTFd7ajCz4+sxLa/eY3bGpW/vZYVr
zNyr17vucUlXn3liv+K7jmNHXrMgNfQD4+IGZ333z4wDZmdcOoy76dBP9Q+a
nXF5Y8/mLw/dcVD9467K/le37549oP50Sx6v8Ub7qP/d6LMzXthwZp+7mP57
/adqxVhcOiw+fmfDNXvMzrhU7JJaakah0M64LCn7drEvSoV2xiVf1xN7C0zb
I/jZwbEj++9f0Xyv4GQFy26tvfSnHuH9MC51fk3vdHzrfrGnBifv6/T2uPoH
zM64PNrO3fXerIN6vXu+w/gyZd4+pPju/K1/xk/Le9jsjMv2g1N6nDwQXs+4
dN2Rkm97idDOuNT9oG6D/x47oP5x3xz5rcHvL2aqP93d10+fVW1PxP/uzifn
fdlsyF4X/1yDu2NvywkYl5L1bm3/eOs9ZmdcFjVY9sWrY0M74zL0wz96TGkR
4jAulUu/NenEhH2Cnx2UW3XHoQ4X9wtOVlBvQPMeH712wOyMS75hL9zV7s+D
Yk8NZt3cLKVKkcNmZ1z+seznymcXHtbrXeelj8w697naM13T66v9+Wqp0M64
9Pl65Dvnix4yO+OyZeVnN324KLxPxqXOjknnOpbMVP+4dqOvafntgn3qTzfu
xj+3tBsQ8b+7u8Tb17aasQfvt3MWl3f2tZzUcXpoZ1yqPdhk4bnme81ucVk+
5eENH+0zO+PS7p1en5Yvmyn42UHrXyvnZC47IDhZwaNT39lT8ORBszMuc1sM
b15z2SGxpwbfzZnwwndZoZ1xeW9isY8+GBW53jUoXqvayqkRfHfNdcXXba4W
3g/jkl1myuw1yfvNzrjEZe3JuaVD+HsZl1f/6LR9mIv4x80f3vPVrqMj/nQz
pvWbfV+RiP9d1rGuJy7+moF1dMricnrR6jEHv9lrdsYl7bly7fpt22d2xqXp
n4MXvHVDptntPXbk+YOu7AHBzw4mP9an8NCTBwQnK/it+ulq15c8aHbGZct3
X7Vtk3hA7KnBcz/2aH5gYfh3GZeer9d4dfID+/V612HfpOrde+xVfPdt6Sl5
i64P/cC4ZB3K06D15HSzMy6vn6leaOPe3WZnXE4NPFn10Jzd6h+3ouEdXW5M
3a3+dKOffeq+yXHp6n8348Kys4fezHDN/hevoxaX5svrTmxcfb/ZGZf1zR6s
0PbuTLMzLh+Pfe3o2dWhnXH52TV5sOvBTMHPDn5IHNrg1eaKkxUEywqUWntD
+HcZl8YFHzuzpeResacG/epdne9fX6SbnXEZ1+lcSpc7d+n1rse5x3fdfSJN
8V3+PFPPFu+83eyMS/ln7u8+/8g2szMuAz44uGnQsvB6xqX0lOQ+4z9PU/+4
Mu817/dz0k71p9vd4pvyg7alq/9dozElH5zdjb833eKyslmxnOlPZJqdcXlq
9Kit5SaGdsZlR/EmU7+6LbQzLke++rhy3h/2CX528PKfJ6oG3+4RnKzgX/nP
JRcqkm52xiXu+W+6jJuxQ+ypQecGB5tm9Eo1O+My6OZb8rxeOkWvdwuujs3e
NSVZ8V2Vk63GHblntdkZl4NPf7zntqYhDuPS8sZGn5z5aIvZGZfNJS5Uv6H9
TvWP+0eVaZk1t6erP92gw3d88/hLEf+77stSNvdrtd/x9zAub5VpkjOoc6bZ
GZeVRXp1/un98HrG5abrp3X8Imev2RmXE38OvL788AzBzw5m37S1YrNSuwQn
K+jT/qmdb9y1zeyMy6e3b5waszFF7KnB5mojRp2o8IXZc/vHuOj1jIviMy79
5H4Yl1ly/4zLcfm9jIv6h3FRfzIu9D/i5RgXxot2xkXi6xgXeR4c45LqPz/O
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
O003Zf0SeT3jlerPhbd4dfH6Z5q+K2C/BX8OWmJsD9T75/F0nmF/RV7POHKu
PfF5/8noO8HrGd9v0VeB+PT/GfSj4PWMbxb6Rfjz17Ld67ifPJ5e9K/3JPpm
8HrinwJ+K9wn/TMAfTn8OW5n3QrgNP2b+NLO/ooyR8z6ZDbLxf8XxD+H4J9m
4k/28bj8HJpeKGC/F17P54H9QJrJ72UfEuKYTgN9aXg9n4ex6NOSI/5/Df7n
9XweeqDfC/F5/yXQV4fX8/fmRx8b2hn38uh70w44tu9C/x9ez/sZiD48tDPu
7C9EO+PLfoC0M44Zfr8j+13sYyPzyILvPP+H/hzv+TP0A/sUwb/UtwQn0M+q
mfzeGt7vTbc4Pos+S7QzXgPR36mh+Gew5590+10L0Ldqwf/+rUjiffZDfzBe
z3ixH1dD8XMZz8/pFkf2B6Od99MG/cRoJw77oXW5b3Dn+wavSeLv3Yl+a7ye
cSyMvmq0M45+XzibUxb4fcNsrlng9yuLiaEfenp90mJiGJd5Xn+2mBje52qv
L5xlFWOL1Tr2y4xTs2N3vfvlP25puTmJftC/y7ikCQ79v1j+Lv3cX+6T+B8I
Pv18QvxAfxb1+p7FxGi/MpkvFmxGvGQeWfCkH1/Tpez3nwdHf1bBc2XzyJiP
wvPpz1NLjB2K57wW7Py94/x1ZzqK5/z14ujPmlhfxKF//PdquqOf/fdY+Hf5
/iQO/cl+Wc0E/3vB1+uJQ/+zL1azXOxtxD+j4B+ZO2Z91WROWSDvT4vXY3gP
n/d5ZOtDxesZx2vwPm8pfivpv/8tvj3xXiU+7+d1//tiv2s8vkd4/5j/+T3l
9Yx7f3zvaGfcG+P7SBzG5Rf/e233H0gfLf7eg/73OnI/T/9fn4fo36Uf6J92
2F/58+bCvlW8fz4Pfp+o0M5+4y3FP7L/sfie8vdjFhfZB9pzcgT7tJY+rxpw
X31R/PYd/HZRfi/7k/vz4MK+6LTbusb+Fvtwu5+TOBfwesadfexb5+J/Xs+4
/4F9uD9vLtvJvt1w8mCfz/vh76qL844/n+6s4/wC2hkvmZtg/pS++haXOJx3
LuXye58U/5zy5wtYXK7z5xrY/T+O+4/3+ccg1Z/TYfHiefCqDN9vk/x5BxZH
niuJz/vs5c8Zsd81B+dT2hmvcjjPzvV0AmF/Hn8+XbaTeSIWxzY4R/tz6866
wf78FIsX++20zuV3ydy0QOaGRPyZkIsfEuR3NcfvapWLH2z+GuLYFXmSCz5f
Zn1m/Llykfk19rvYz4c4vE/2k+H1jFc+f16P3afM/bG4lPfnB1lcKiBPxb/L
38U+MP48u7CfzFMSL5nXY3bOUVogfmC+ReasBbX9fF3Enxdz8c88nz+yviu8
nvGVPKr9XubxiMO/2wb5Z38OXZgXpZ1xPIk8KnF4n+yjwusZxzp+njaOcVyE
vC5xeP+dkG/359xlO+aNF0q8BiNevJ5xZ/6Z+PTDC8j/+/Pyzrol6LtCO+PL
PicJufg/IRd/Joh/asI/zS/n+Q2nC/igBPGD8C/hc4v7Jw7/bgb4Jn9uXWJs
H/AjtDOOM8GzEIf3uQB8Fq9nHEf7PI7F8WfwQcTh/T8EHs2fi5ftyDfRbrwG
+Cni8Pf+FzydP0cv7JdCO+PFvijEoR9Wgh+knX6I9/lEi4vwdObn3fAzcYw3
BI/ZQvyZ4POD5p8H4B/a6c+RPk9qfjjl85X2u5bjdy0QPwsPa79X+FO7f/Kw
4KEsLh19/tfuU/hc+7sfghcmDuOV0HtDRtFqGXY98TsJvuVRcf0CiW9zxJfX
017o1LntB77cG+G1yacrry3z+4yf6oZ5f8prcz6j8tpj/LmBxk91xJxB5bXT
oR9QXlvmFSYzvpxvqLz2MOgWlNeWOYnGv3CuovLaE6CXUF5b5jMaP5Xpz3M0
HkrmPxoP9aw/L9L4phsxX1J57dnQeyivPc+fy2lxlPmYkXgpr93fn/tpcdmD
uCivPQ96G+W1Zb6n+e2CP2/U/Mw5ocprV4ZeSHltzhtVXvtnf86p+YdzS5XX
bgy9k/LanH+qvHZLf76q/S7OUVVeOxZ6LeW1qZtSXrszngfltanjUl57B/Rm
ymtTV6a89g5/nqzZqXNTXnsp9HvKaw/25/Pa8yBzci2OVRFH5bWL+/N/LS4y
n9f8KfN8zf9F/PnC5h+ZC2y/i3OEldf+yJ9fbL9X5hHb/XN+sfLaf/rzkXO9
T/5d6leV157pz182fJm/bNdTr6u89kR/vrPZqR9WXpu/V3lt9iVTXpt6WuW1
6R/ltanjVV6bumLltTl3W3lt6pyV12a/KeW12e9LeW326VJem32llNdmvyzl
tafj7yqvzfoC5bUVn9dzHrry2qyDiPDasCuvTV268trU1SuvzboA5bXZj0t5
bfbjUl6b/a+U1+a8e+W1WdegvPYs1KEorx2gjkZ57aaoG1Je+z7U4yivzT5O
ymsXQX2T8tpNBF+vV16b9VzKa9OuvPYQ1BMpr90f9UfKaz/n9ZUKedI01Nkp
r/0H6rCU117q9XcKedUJqAeM8NqoR1NeexXqDZXXTkSdnfLaX6IuUnntq9C/
SHntW1Evqbx2OuoZlddmHyHltdmfR3lt4iuvfRp1o8prrweO8tqTJb60d0K9
qvLa2xAv5bVfgf+V146Bf5TXToQ/lddmPbLy2qxXVV77OH6v8to/oW5aee3W
qCNWXvsb+F957c9Qj6y8dn/UfSuvnQf9f5TXboK6bOW1x6M+XXntT1Enrrx2
YdSnK6/NfjXKaxfz6/Htd7GOW3ntoZ7/Q3/+4Pkz9APr6OFf47XZv0V57RHe
7w157VXoA6C89rPoP6C89nzPPyGvfQJ9FZTXZh8V5bX/hT4PymsX9Pwc8tp3
oH+F8tqvoN+F8tr3oM+G8tpF0Q9Eee0e6PuhvPYbXt+SkNf2+9uEvPYCr59G
yGuv9vp4hLx2Hq9/SMhr5/X6lvDfX3F5p2rJ/nUnRXjtz+XvMi6FBYf+LyB/
l37W+yT+YsGnn38WP9CfF73+QiGvzb4cymuXQLyU157ox9fy87f6z4Pl52/D
c6W89jE8n8prd8Jzrrz2j/66szx8sr9eLN8+GutLee0R/rq2PHw/7z0W/bvK
a7MfmvLawwWf17P/g/La7NumvDb7OSiv3Q3+UV67kP8+tHgl+O9Pi1cjvIeV
174J31Pltfk+V15b3v8W38/xXlVee4X/fbHfxe+R8trsk6C89gl875TXro7v
o/Laqf732u4/Ufo88Peyj4Hy2txfKa/d13sewr/LfYLy2kuxv1JeexD6Kiiv
7fcxCO3DYFde+5S//4nEV3ntlf4+0J4T7tOU126MfbXy2twHKq/N/aTy2tyX
Kq/N/a3y2vfiXKC89p/YJyuvvcPfV1vcuQ9XXnuAv283HO7zldd+H+cd5bXZ
X1d57cF+X1/zp/R9tbhcxHlHeW3pH2v+kf63FpfA77tr989+v8prv+P3kbZ4
8TyovPYgvx+vxZF9myO8tt8H237XazifKq9dBedZ5bWlX7fdTwW/37XF8Vec
o5XXHu7397Z4sa+48tp7/L7TFkfpa23+lH7a5ofefh9v+11p+F3Ka1fx+3Vb
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
bxiv13ptXm95SOx/eL3mtebI/pn14Lxe813WRxr+6YJ9Gq/XfNccORewXph2
+o1103PkvMD+eNJnOKiF+mK/33WWY5896XscdEPd8Rw5XzBvxuvpN/YtnCPn
DubT/L7iYT3ynFzyadZnGH5jXbb1Y2dfStRZ+/23E2PLo075vJxfTiMvd17O
L/WQl5N+vFbPe17ONUuQr5N+v0Fb1PnmlseLF56U9dHn5RzE/F688KSdUf/r
98E+6z5DnXK88Kcvoi74vJynmCeMl/PUQOQJ4+U8NQt5wng5T41DnjBezlPH
/iZPGJ9LnjA+lzxhfC55Qj1PXefrKCL1I3qe4lwAPU+xXkbPUzrXXutK9Dyl
8+W1TkfPUzoXXutN9Dylc95Vh/93+UzGnfPZc8tz6nlK549rnlPPUxdlbjif
f50PrvUsep7Sed9ah/L/my/V85TOoWZ8dd40f6/OleZ7YJLMj9a6AD1P6Txo
rcvQ81SczHfWugw9T+m8Zq3L0POUzju284XMKba8qMwppt90HrHlhWTuMP2m
84Xpt0UyR5h+Gyxzfukfnc9LP2xAHlXPUzrHlr83ZvjlfKyep0rJXEitU9Dz
1B0yp5K/d6HMjVX9v56nUmQOLJ+T+2WOp/XRkjme9MOV56gmxv7vONX5g8h5
6ha53vKTgs/fu+GKc2ZDPb+ep4rCP3qeulXmZqreW89TOgeT958kcyFN5yPz
HDV/ruepH2V+ourh9TwVM9Cfk6i6dz1PDdU5bvhdV55jmBjLOYZ6noqVuX58
PovK/D7+Xp3Tx+dzuczjsz51MnePcdT5etaPUeboqT5cz1MDZS6e6eGvOLcu
MTInjnHnnDg9T+l8N/qnkcxxo390Xhv9w7lsep7SeWr0w0CZm0Y/cD6anqeu
PI8sMbaNzP+y/LzM7eLv1bld/L06n8t0KTKHi79X521ZnyWZq2V9L2V+lvIp
ep7SeVjKs+h5SudbKc+i5ymdY0W/cR+o5ymd66S6Vj1P6Zwm1bvqeaq6zF1S
Hayep3SOEv2m85KUx9HzlM4/ot+WyZwj+o3zjPQ8pXN/LN8oc3/oN53vQ7/p
HB/6Tef10G+xMpeHftP5O8or6XlqkMzTUX2snqd0Po7yU3qe0jk19JvOo6Hf
dO4M/aNzZ1RfqucpnRfD39VJ5sIoP/V/AICheCM=
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1: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

                 "]], 
                Polygon[CompressedData["
1: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
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1:eJxNmXn8lmMWxn/vr+ftfp6SpchWSPumRptUJCQmyxSRMBRCZFeJlPZV+04i
2UIkTNqQZGzDhDEMYzAYW9aImO/1uc7nM/PHec/1nvs8576fezn3Oeep1//y
XoMrKyoqNvFTBd6kXFHxUamiojH856yi4lXwDviP0N/AP8FbQteDW8NXp4qK
SnSXFhUVTfl/EfIm8AzZ2+AyfDfoXfAu8Ea0XS778CV5RUUNZMt49sHkfm4F
74rs9ZLbfop+f4H/Cn0A/k0y6DHwm/DXoFfAr8Mfhh4ArxROtrMOvgp6HnwH
vA1t54EPjfHL5tPw+6B/gtfDR+Zu/yPjWZnc/23gh+B3ovMgvAXj+xJcDd6Q
/0Pj3d+A/gJ+C/4u9BT4H5lJeF7y+J8Dvw1flMxnYf9f8L8i/wj+WeZ5+xL+
JDo5/cxD50P+/xn5xxoT8ifAM+F/gqqicyc6LWKNtFbN9R7gZvBE+9aS9T7h
/zvgpmWvk9ZLfWgeftC4sHMr8/AG8keQ/R3Zxnivf2aezw/g78eYNfYRufs5
m2eXJrfPBc/MPWcTwMcgH4B+e/i9yNaCV8D/A70I3gJvBw0Ct4Wvh+4Gj0b/
1VhrrfkCbD4LvjV57SW/G/ws+BnwC1oH6FHwK5mfXQd+GX4YdCO4I3x+7vbp
jG1trNE6+O+g4TGGtsl75ij4nmXvk1rws2gbC/6j+oTu0V6SDehp8Cb447FX
12S2K/sb4Rsyr93T8eyfwJvjfR+PNX0RvCre5eUY/0taf+ilwPdDd4Dvg8/I
zcfzLovhK5Ev0ZmAVsQ8z8o9J7ckn5f14Eczk/Cc5DHfBX4MPjs3n1R4vjRv
nXVWY11uy0zCSzUWaF7ghbnP6EyeXa13Rv4EfGryfExGPkbjQD4Z/nXmNd0W
djSfd2luoIfi2eege2Ou9Oyd8HHYeV7nRHsA3gm6BnwE/NvYG99k9lk6Fz15
7ovM/kF9tWQtvwI3h9+PrXrwLegsKex3bst9vj5E55lk3yU/uSnZv20D7w7f
A/oYXLPsM/uCxp/cti32zO08uxd8ObY3QP3A/0anNvzNktvqQp+C/6wzgs7+
/L+D55ZCnyB/Pln2LbiO2gr73MeTn31LawdeXNh3rwBvhg7U+Ub2RLLOlpDL
zmvwfWh/H7x32T5RvvFOvTvP9NCzuf34u+H3VmF7mfyD/B86Q+GX8NyV4AHy
O8nr/uD/7THh8cl7YDn45uR11d6Ym7zfVoOnh1zrPiF5D68L3649rD4n0s/E
ZJ05yJYl+8Vphc+X9qTO09zcZ25qYaz9Nin57GmPjU32g5/LP4CfjDOoZ+ep
r9ifm2PvjUuW63zfUthX6zx+mtmmzvUsdPol+4bLw5d+pzMB/h6+ueT/vdA5
TfOGfBw6vcEXg1+DJjCmKshORTYa/dPhpybzQbSfGeexL3wL/69A/zvaT4b+
gOwiZGdrjOick9nOVSX3cUbyGekB78P/G0oeRxdoBLgr/PM4Izori3PfS/Ox
+ZX8UdxNxyWfs/ORV6f/f8Q83IT+FeCjaf89dG3J+0F3k+IExQsb0GlF7LEP
/MjMOt0yv/eByCeW/S6TkZ8Hv1Bt4GPgOzPv4Qp07ip89nTXVyn7PlJcsiR5
nrX/FybfC8uTz7z8zGL5j4gNdHa2Z767df9ti3d/OOIH9XN7xCo6Ixt0NpNj
JPkHxQlbwLfDT+DZYeDj4T0yxzzHwY/SvATurv0bOprP98JHjcXWKK01dsaA
f4/sQvq9lP4PYk4W675GPknvibxn5nmW3knh306E95ce+ufBV+rcgr/C5rmK
7bQW8BOS5/tM7LST7wD31Z7RfSe74Drwy9A/EL5f5rtbevuHXO17Q/3kP+VD
AkvWiv97wftgp2bmO1T/D0XeC1xfvlF7X74RXpf/J4IbK5bJjMvw4Yx/D/hp
2Nkt9PWcbJ5SclsN6FzwrprvzHtmMDyDBoITfBfte3D1zO+oczFQd7rmIMaQ
Q6eHfkl6MYbx0ALwBTorme/9s3j2MKiexsHYfiGIPkHvrv0Sz8rGRMZ/Kfxq
dA6Od28gf6xzGvMgeTfwbiE/ClwDvjNsyvZlmfeGbNXWudM4Fa/R1h38Pfwn
qC94B3xf+QLwQfCf+X98yCcwnovkCxjPATq7Jb/DxdDIktu2V/Fc/VjF9oUl
U78ngQ9IbpO8SXJfR4IL+CWxtwdmHpPG9h38m6oVFYdrTtCpCXUGV9GZ1dpq
/6Oze8zDHqHTE7w/vDLWUeu5q3wKeD+9OzZbg3eRjwk/eU3meewW8gt0F4Kv
hV+h+wN8Jbxa8tzuo/WCDgF/i7082eb34F+gluCv4VWRdwTvBB/L80O0dvBK
7QPwz8gn5e7/usL9XiW/pjiCtuPQ2TP6OiLmSn11jbXWe3WK+VG/XWJ9NX/t
oXZQW+jYwD9Wtb7m8CtwU/Bn8OH0OQ18fWbd7v+n31x+G35m8lzpvpbNNvKr
JdvRO/4G/xxqAv4PvD784Oi/beA2gY+JMf0bvUbwj6saa8w74N+yrn1iDwxh
TFPB1+keSOZDCs9N+9L/3rWhzkhQ/einQfB2Qe1D9il9dIj5vxFbU7F5TZwd
+aJfqzgeXgJepDsT31cdf3gDfHVu/qJiJZ65HvwC+Eb05qI/Un4Ancbo75Ib
j0PnVXRugu+FfAR8VOa4dwz8cXTqIs/gV9NWE3wVfDRUG3xz2Xf1vuAr4ZdD
B4fOct2xJce9E6D7wZPlX2jbDj4Z/ih290P/t+TnDoXaVHr8DeA57au0D9F9
nnFeCy8q/X8IVAt8XYx5XLzjz8nv8RL6j/HsSPDL4FFl3x36/1Due+Mp5J+g
fzZ4I/gceFbp//dg6z5sjtP68n+n/IDiX/Qvhm/WuYDvjf6F8Edytz+LfAp4
ovwr+G/J7/s+fBKyGSW3naQ4m2f/AO8DVYJPg/eCSiG/BEqV7m8qVA98Gfxm
nl+KndHwQck2tU/60rYnOmeWHY9rb5yldUneM8PgU3hmUazFA7nn83P5IdU4
wFO0popf0bkB/mJyHeUB+Xz4Z9rTyh2T5+Qb+NDkeoXi4aMUu4G7lh1ra/zH
w6dn9l23aC/Q7wnI1mDzXnB38BOF7cxSbKFzFHGs2pQ/KI94E35P7nv/XfDU
3HWMm8DtVWcBd4B3irzjcHiXyC86w8fq/ou9/XqybBV93aU6ifZF4Ttxjvyq
fKHiVsbfMeZwhOISdO7ObfsRxRvwr3We4e8kxyofJeNjlMug0ybyKfVxIvRb
yTnaKclx73js1ef/9/ID8GX8PwT+IM+2Ul5V8v+esWe0dxrF/Cjen4b+HN15
6Bf8/6Lk+a0X66V1u46+btX8o/tUcm50d2Gs8b8CPyByLuVeK3Kf0SfRaV12
Xqn8cr+Y27oxhrdjPxxUdp6l3GxDxJbK9ZQn6t2fS8779tXZKmxHNTH9n5t5
v+kdVCNQrWAK+isLr+urms/Mcel78LbMQf1K+wz5i7aB12B/OvpvFJY1CL0Z
ZfsZtd0S/mpa2fd+j7jL2oW+nptM2z6Vjk3HFK4RjAwfVS/81DWF7+ABirvo
9zBkBym+Cx9bLXdesFBzhO56rSny2vDqufurE/odwAcqP809rtfRfxLcHHlN
+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
                 "]], 
                Polygon[CompressedData["
1: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
1DzQ+dGYj02uKVBbQIPpkVxTobaChnJ14fN5o/BTrK/C+SHaCfnr+sKaUSk3
h4fLzynMnVcH1+X+G+TWvNC+qEFRi0JDu6XwGmTtboi1yRqH68BBWftjk/V8
ODhcHE0KbYrxVsl3v9pbnFUa87YqrplRO0PzXR3rAZ0ejWWD8PvJ3AnOAndh
z8CdngruTM0jBR+8ufCYdXLX0Pgu6jXwqX80lsz85rTcNbOPk/cQ3AoOxt6i
BlA9+Cd8lByRvckeJReB88DVNgYXgt/1jfz8nsL1J2qDaPbUc6gXUltBg6N+
cFNhfv5nZj2Re4DLwbm4N3JicuPzc9c3P0nWN3uFHgt/RdulBrgs+NvJufvA
p+GHvUMf+CxZI8A+JfRZ8kG0IDSB1YX5Nto5GvIS4V+TuR8aCFoI+VuXmK93
kzVdtN0i+OV84Z8iH7gxme93C368vDD/7B78+a7CGghayJm565VopGil7P8V
yZol2iU12TuTNdItEX/vFV4kXJZbQ304+R7grj1Db6a+UR71ih6RLzSO/PPF
5BootVA0efJR5oxcBA7MXJLPUrtAE38zec2dHvPNWrwr+Vl/zqyXosdQ56Km
8FtyPn5Z8PGvkvUbalVoxKtCD0IrRB8qRb6OdowGtTb0lnmhn1BbYX7+yLxm
yO2eT47V9SP+oOGST1ADRNuF/w+NfH9lYU5CbORM5GxkTVE7rx76C/rMVcLV
hL9NzvfRntGjHgl9YGbcP1om+gTaKHpRHnrZuNwaKGsHfWJU6A8PFtYv0JLR
N/5MfucDoz9rgXzqjPj++yPfOiv0su+S9Ta0XvS1Rwu/c2IXMYy1wPr4K3NM
JjZTz6TWQ82H2iT1H2pB1AuoZRHPds7dH+2beLF95J+L4rx8JfIxatXkrOSu
n2XOL4kJ9K2ZO1YQvypzzz+15YeSc2fuj1hbI7f2zv6nPgqn4PcCHwbXuC3i
Ge+Qd8keInZ/n3lvET/Lc1+zPPbHL5lzLnIv1iBrcVM8D79/QP+nXojevzD5
7P9a9neZOQz3R84Pt7kv4vH34V8U5wN9VibHKGLVf+M84J7oyzU3Fo6/1XLX
FFh/aOJtYg/+NznmUBuqFXol+XbbiFe3F9Zb5smewHmRmcNx1tfLzO34fQHc
AQ7RLTOfODL4LrVx+AhaNTXdCYU5Fly3SmbuBUeGK3eJ6+EPXYI/jy9cf0Nb
R8+mHtUiObcipyC3gJPC7esG94dPnJZZQ4d/wGnhtlfG/fN7AOoR6I1j1Rpn
rgVT30LPRx8ocmsWaBfoH3tFfr6UWmp8P/lXrWT9aJns2zLrUeh35wSfYm6o
MVBrQB9DP4NTw/+3y8y18+Tc8OgYD32e2gIaPnp8neA75Kzk4+TX5NrkkOSD
8BVqKdTgT0rO78mFyYmrBh85MfIFchf00DmZ9ddBwW9OzlxD4rcU1ISoDaFh
oWX9VOncnfwUvf/XSuci5CTkv02TuRc5cRPZn1U69ydfRR+AHx2fmaPCVb+u
tPZAjkN+Dz/smLlm3D34Us/gt/w2hflhrsl5f680P+wb/XsFn+yf+Z3ybrfE
86NpoFd8V2ltoX1cT/2CZyHf3CVZD56VWd/mt0/on9fHemF9NEzOpTpH/31y
/16B+EW9nT3H3oNTws0WFz4r4fBwefTz4fF+qM29EOcDGhZaFr83alju30jx
e4/XkrkpGi1a7Z2Fz8auoZ2hrw8LfslvG+Dz1NrZA4cKP5t89nL+kDugZ/0v
c3z657dQyeM1yn3WcqagNVED4KypKBzrqRFQK+A3Afw2gJoY+thPyVwBTQ1t
jd9o8FsNaobo0cMjllAf5vde/L4DrkCMrRHP1DnOd551UO7fWlFTPirm5ODc
NXLm6qvgD2jonN2vRnxHo0SrpL5wcaxfapXENLjBAbljHb/34Lc1/AaD+jX1
AX6rcpPwBcm/d4DL8k55t9Q3Rkc+Qn6D3k4t9J8aW2H9h7XfM9Y79Y9rM+fX
1IIvL5y7bw2thHoKtUvqMQ8XzscviHjIb6XIafpGf3IdahrcG5o52jlzDr/u
mPtd/B+f5RY4
                 "]], 
                Polygon[CompressedData["
1:eJwt1nnwTlUcx/EHz6/nxyA0ZC+llESlshXZKsuUkF2ylEhF2ZdsZe+X5WcX
ilYtdlqsiWqaaadtIkv7ahQRen3nPn+8Z87nfb7nLufec+6t0uuhtg8WTKVS
echBk0wqNbBAKnVFOpWqjkdzU6me3AyurXwHbpero5h28cj6Kssj1Z4rl0Bn
7jKuLFpqny6USp3BcDWfcMe4C53wAuyWG+N64+qgl75rI2eSdrj6aCbXx6Xa
1XCXvppybfTULsWVxCjnqMq15crLlXCdPIJPaRdA6+jjRnMV5IroxtXgbsUj
2p24rugkj1dXV7seBui7kWuOh7Vrc9dgnJqiuMyETnZfk1BArqKuTfb6SqOW
3BETuDYxf3hc3aVcu5hLuQrqyj3QW7sPhuprJTfFIO1aXE2MNfY97qe4J+cs
h6e5KzPJPcW9XYAxXBqVXd/jah7DJnmJunfUfaTmQyzgSqGGujlqZuNN+Vi8
G9qDkKvvJ3kYlhk7yriRMTfyaZTXP0TdYKwz9mS8C1x/uR/+lO/HbGMfiHGY
qm4N7tF/L85Rf0TN9+gqd8NJ9V/Lv6Oo/ru5HnjNuONcGa6X3BO/yP+gNHeX
3B0/yq+q7azdBYX0HeQy3IXarbgZ2Cz/xRfn7pP7Yi3Xj5vlGvq53vswhXuQ
y+eGyIMxjRvKLeWGxXOLWvm5eIccpx6O6vuQO4Az2oW5llil5rO47lg/cjV8
IO/F8Xjmck2sVPdxrBHtOnFf+vZkkmcSz6YNdzteVjeKe0b/tJhjzOBewq36
W+Qk54pz9o7nq39QOnk34x39AifiHVd3DZ417jnuVzW/YZe+RfJ0foI8ETO5
vtxc7i15C1ZzU7mF2Kl9kDuCJWryude5w/IPWCnPwWbugHwIT8uT1XaPdR/7
UqwdbjH3XTo5Xhx3QbyP2KP9BbcPi9RM59ZwO+KaMZ8bzz3LzZPnIo+7Obum
28sd0V7ugzyuS+xr6BD7Ep7gOsh3oq3cAoO5bnKP2DviXcHG7LV8jcVyZ0zM
nqMdJjnvDG4dt0p+CbO4O2Pf4VrLrfBYzHH2mjfJb+CJTDKvMb9L4vgxN/I4
PKW9FPP0DZLrxb1oN+KaoKXcCA/EfibfFM/POaZljxfPbXuM5/K49dxr8quY
zY3Irv0477J47lzDTLI/xj55Q7xHXJ14t7gGckPcIu+PfYK7xTt1M15U9y33
H9dUboIXuH1cQ+1G+Fnf+/Ku2BO0i3PFsEzdkLhf7hHHfxj3ZJLrW86NjTnB
Q/LbOMJlYn/B63J/DNc/IuY4nrO8CWn9OXifWyE/6TzzY39MJ2s71vgf8R20
3vqo643VaibHHqM/X90cDI9nlkmOE8fLjf00vj2xHuL9jPdP38C4B+yO9ch9
ioWO93KsQe1/08l7He/3NhzUPsWdjGeSSdZcrL1eck90l99FFee7CF/p2yxf
jDu0y6gpF9+u2DOc5xL3MUrdSJzgzqICN0IejvXZdbTW2JXGrYj5innBBm6d
vDbuWd1SnNE+i0/0vRhrI9ZMrLN0su/H/l9GXS3nWOj4C7BVXp5dv3G//8Xe
Ed+JeCbcN/L+mH95LFZys2O9xFowdgUudpyqOKxvp5otKCmXwl5ujfwd2snt
c5L9Lfa5Z2K+4l8lnfwMrcsk4+M4heSC2CAfjW+XdvWcZO+OPfxXFHEfnbiO
eMV1lMVV3GJ5EbbF/wcqcmPk0XG83OR7Ft+1BnJ9PM+VRk118+V52CIfVpfD
NZZvwpeZ5PsY38nmcjN8Ix+Kd5e7Ub4Bn8vVUNh9FcFtzlUpniP2af/NHcNT
zlEIU4yZmpN8++IbWIy7XHs6Ny3WhFwCV3Cz5Jl4I/79UJ17Us6LtSWfF/8h
3Fw5H2/lJt+p+F6VkUtjeW7yLYxvYln5fOyQy/FXGztAXoLtchFU4ybKE2L+
1W2N52nscffwT+yf8Szjv05/xZxkncR6KRz/WMaO5R7FKa4gV4kbL4/DRnlm
ds+OPXYj8rn/AYcda4M=
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0bkuBEAcB+Bx3+yue61jeQQ6UVkvIKEShYKOSmhEywsIClcI2UUrQiJ6
KuLYuEK01KLg25DMb76ZYmb+M5McmxqczAshTEt/fggn7C0I4YIjfOQcP7jG
H54xYlFS3otD6OAb2/nKNr6wlc9M8JEtfGCcWTbznk28ZSNv2MBr1vOKdayV
mERzxeb2V8On4TmfuMFLzvOUo8ywj6tMcJHf7jjLLCd4zGEuc4Az7OEwuxj7
Oy6YBluEwtw7FIWghXWd8sImS7jFUm6zjDss5y4ruMdKplnFDKu5zxoeMMJD
Rtkp3bm/cXiKSxziEcd5xxl+cYFxBa4wZZ7+/89fYnk2PQ==
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0UkuRFEUgOFbCiEGLIBoSlOdpkrf9yMxETYgGEkZYQXCxJwNCJbAAkRY
AmNCqlKim+F7Mfjz5eYNzrnvtq7vrBRiIYRdleMhPDg8V4ZQZG1VCD9Ms74i
hCW2cJs5zqmnJoRZZjnDDKeZ4hSTnGQnJ9jBcSY4xjaOsoUjbOYwmzjERg5y
QP3Kq1XHdmhggb92XGaJWT6yjvd8cZdr3vKS5zzlIY+4xX0ucovtXGOcC+xX
mxLRN3Xoqdp9ov/ErmgGk3xlikWmWWKGZWb5xm6+s4cf7OUn+/jFHL+Z57xW
o/l22YzO3OMGD3nAE57xgje8iuZ4x7vY/3v+AVqaNL8=
               "]]}, {
              
              Line[{2, 19, 36, 582, 53, 599, 70, 632, 87, 665, 104, 698, 121, 
               731, 138, 764, 155, 797, 172, 830, 189, 863, 206, 896, 223, 
               929, 240, 962, 257, 274}], 
              
              Line[{3, 20, 37, 584, 54, 603, 71, 636, 88, 669, 105, 702, 122, 
               735, 139, 768, 156, 801, 173, 834, 190, 867, 207, 900, 224, 
               933, 241, 966, 258, 275}], 
              
              Line[{1438, 1437, 1457, 1461, 1483, 587, 1503, 2097, 2246, 1522,
                643, 1539, 2266, 1542, 1560, 2279, 1564, 1580, 2289, 1583, 
               1598, 775, 1612, 808, 1630, 2317, 1633, 1653, 2329, 1656, 1670,
                2141, 2339, 1689, 2149, 2352, 1708, 2365, 1711, 1727, 1730, 
               1747}], 
              
              Line[{1439, 1440, 1458, 1465, 1484, 589, 1504, 614, 1523, 647, 
               1540, 2268, 1545, 1561, 2281, 1567, 1581, 2118, 2291, 1599, 
               779, 1613, 812, 1631, 2319, 1637, 1654, 2137, 2331, 1671, 2341,
                1676, 1690, 2354, 1695, 1709, 2367, 1714, 1728, 1733, 1748}], 
              
              Line[{1441, 1443, 1460, 1469, 1486, 591, 1506, 618, 1524, 2104, 
               2259, 1541, 2270, 1549, 1563, 2283, 1571, 1582, 2293, 1589, 
               1600, 2124, 2302, 1614, 816, 1632, 2133, 2321, 1655, 2332, 
               1661, 1673, 2343, 1680, 1691, 2356, 1698, 1710, 2369, 1717, 
               1729, 1736, 1750}], 
              
              Line[{1442, 1446, 1462, 1473, 1487, 2095, 2241, 1507, 2099, 
               2250, 1525, 2105, 2261, 1543, 2110, 2272, 1565, 2284, 1574, 
               1584, 2119, 2295, 1601, 2125, 2303, 1615, 2130, 2311, 1634, 
               2323, 1644, 1657, 2138, 2334, 1674, 2345, 1683, 1692, 2152, 
               2358, 1712, 2371, 1720, 1731, 1739, 1751}], 
              
              Line[{1444, 1449, 1464, 1477, 1489, 2096, 2243, 1508, 2100, 
               2253, 1526, 2106, 2263, 1544, 2274, 1556, 1566, 2114, 2285, 
               1585, 2296, 1595, 1602, 2126, 2305, 1616, 2131, 2314, 1636, 
               2325, 1648, 1658, 2335, 1667, 1675, 2145, 2347, 1694, 2360, 
               1703, 1713, 2373, 1724, 1732, 1742, 1753}], 
              
              Line[{1445, 1455, 1466, 1481, 1490, 600, 1509, 1521, 2254, 1527,
                666, 1546, 2276, 2111, 1568, 2286, 2115, 1586, 2297, 2120, 
               1603, 798, 1617, 1629, 2315, 1638, 2326, 2134, 1659, 2336, 
               2139, 1677, 2349, 2147, 1696, 1707, 2362, 1715, 2375, 2160, 
               1734, 1745, 1754}], 
              
              Line[{1447, 1456, 1468, 1482, 1492, 1502, 2244, 1511, 2255, 
               2101, 1529, 2264, 2107, 1548, 2277, 2112, 1570, 1579, 2287, 
               1588, 2298, 2121, 1605, 2306, 2127, 1619, 835, 1640, 1652, 
               2327, 1660, 2337, 2140, 1679, 1688, 2350, 1697, 2363, 2154, 
               1716, 2376, 2161, 1735, 1746, 1756}], 
              
              Line[{1448, 1459, 1470, 1485, 1493, 1505, 2245, 1512, 2256, 
               2102, 1530, 2265, 2108, 1550, 1562, 2278, 1572, 2288, 2116, 
               1590, 2299, 2122, 1606, 2307, 2128, 1620, 2316, 2132, 1641, 
               2328, 2135, 1662, 1672, 2338, 1681, 2351, 2148, 1699, 2364, 
               2155, 1718, 2377, 2162, 1737, 1749, 1757}], 
              
              Line[{1450, 1463, 1472, 1488, 1495, 2247, 2098, 1514, 2257, 
               2103, 1532, 2267, 2109, 1552, 2280, 2113, 1573, 2290, 2117, 
               1592, 2300, 2123, 1607, 2308, 2129, 1622, 1635, 2318, 1643, 
               2330, 2136, 1664, 2340, 2142, 1682, 1693, 2353, 1700, 2366, 
               2156, 1719, 2378, 2163, 1738, 1752, 1759}], 
              
              Line[{1451, 1467, 1474, 1491, 1496, 1510, 2248, 1515, 1528, 
               2258, 1533, 1547, 2269, 1553, 1569, 2282, 1575, 1587, 2292, 
               1593, 1604, 2301, 1608, 1618, 2309, 1623, 1639, 2320, 1645, 
               880, 1665, 1678, 2342, 1684, 2355, 2150, 1701, 2368, 2157, 
               1721, 2379, 2164, 1740, 1755, 1760}], 
              
              Line[{1452, 1471, 1476, 1494, 1498, 1513, 2249, 1517, 1531, 
               2260, 1535, 1551, 2271, 1555, 719, 1576, 1591, 2294, 1594, 785,
                1609, 1621, 2310, 1625, 1642, 2322, 1647, 1663, 2333, 1666, 
               2344, 2143, 1685, 2357, 2151, 1702, 2370, 2158, 1723, 2380, 
               2165, 1741, 1758, 1762}], 
              
              Line[{1453, 1475, 1478, 1497, 1499, 1516, 2251, 1518, 1534, 
               2262, 1536, 1554, 2273, 1557, 723, 1577, 756, 1596, 789, 1610, 
               1624, 2312, 1626, 1646, 2324, 1649, 888, 1668, 2346, 2144, 
               1686, 2359, 2153, 1704, 1722, 2372, 1725, 2381, 2166, 1743, 
               1761, 1763}], 
              
              Line[{1454, 1479, 1480, 1500, 1501, 1519, 2242, 1520, 1537, 
               2252, 1538, 1558, 2275, 1559, 727, 1578, 760, 1597, 793, 1611, 
               1627, 2304, 1628, 1650, 2313, 1651, 892, 1669, 2348, 2146, 
               1687, 1705, 2361, 1706, 2374, 2159, 1726, 2382, 2167, 1744, 
               1764, 1765}], 
              
              Line[{291, 308, 325, 1011, 342, 1028, 359, 1061, 376, 1094, 393,
                1127, 410, 1160, 427, 1193, 444, 1226, 461, 1259, 478, 1292, 
               495, 1325, 512, 1358, 529, 1391, 546, 563}], 
              
              Line[{292, 309, 326, 1013, 343, 1032, 360, 1065, 377, 1098, 394,
                1131, 411, 1164, 428, 1197, 445, 1230, 462, 1263, 479, 1296, 
               496, 1329, 513, 1362, 530, 1395, 547, 564}], 
              
              Line[{1767, 1766, 1786, 1790, 1812, 1016, 1832, 2170, 2388, 
               1851, 1072, 1868, 2408, 1871, 1889, 2421, 1893, 1909, 2431, 
               1912, 1927, 1204, 1941, 1237, 1959, 2459, 1962, 1982, 2471, 
               1985, 1999, 2214, 2481, 2018, 2222, 2494, 2037, 2507, 2040, 
               2056, 2059, 2076}], 
              
              Line[{1768, 1769, 1787, 1794, 1813, 1018, 1833, 1043, 1852, 
               1076, 1869, 2410, 1874, 1890, 2423, 1896, 1910, 2191, 2433, 
               1928, 1208, 1942, 1241, 1960, 2461, 1966, 1983, 2210, 2473, 
               2000, 2483, 2005, 2019, 2496, 2024, 2038, 2509, 2043, 2057, 
               2062, 2077}], 
              
              Line[{1770, 1772, 1789, 1798, 1815, 1020, 1835, 1047, 1853, 
               2177, 2401, 1870, 2412, 1878, 1892, 2425, 1900, 1911, 2435, 
               1918, 1929, 2197, 2444, 1943, 1245, 1961, 2206, 2463, 1984, 
               2474, 1990, 2002, 2485, 2009, 2020, 2498, 2027, 2039, 2511, 
               2046, 2058, 2065, 2079}], 
              
              Line[{1771, 1775, 1791, 1802, 1816, 2168, 2383, 1836, 2172, 
               2392, 1854, 2178, 2403, 1872, 2183, 2414, 1894, 2426, 1903, 
               1913, 2192, 2437, 1930, 2198, 2445, 1944, 2203, 2453, 1963, 
               2465, 1973, 1986, 2211, 2476, 2003, 2487, 2012, 2021, 2225, 
               2500, 2041, 2513, 2049, 2060, 2068, 2080}], 
              
              Line[{1773, 1778, 1793, 1806, 1818, 2169, 2385, 1837, 2173, 
               2395, 1855, 2179, 2405, 1873, 2416, 1885, 1895, 2187, 2427, 
               1914, 2438, 1924, 1931, 2199, 2447, 1945, 2204, 2456, 1965, 
               2467, 1977, 1987, 2477, 1996, 2004, 2218, 2489, 2023, 2502, 
               2032, 2042, 2515, 2053, 2061, 2071, 2082}], 
              
              Line[{1774, 1784, 1795, 1810, 1819, 1029, 1838, 1850, 2396, 
               1856, 1095, 1875, 2418, 2184, 1897, 2428, 2188, 1915, 2439, 
               2193, 1932, 1227, 1946, 1958, 2457, 1967, 2468, 2207, 1988, 
               2478, 2212, 2006, 2491, 2220, 2025, 2036, 2504, 2044, 2517, 
               2233, 2063, 2074, 2083}], 
              
              Line[{1776, 1785, 1797, 1811, 1821, 1831, 2386, 1840, 2397, 
               2174, 1858, 2406, 2180, 1877, 2419, 2185, 1899, 1908, 2429, 
               1917, 2440, 2194, 1934, 2448, 2200, 1948, 1264, 1969, 1981, 
               2469, 1989, 2479, 2213, 2008, 2017, 2492, 2026, 2505, 2227, 
               2045, 2518, 2234, 2064, 2075, 2085}], 
              
              Line[{1777, 1788, 1799, 1814, 1822, 1834, 2387, 1841, 2398, 
               2175, 1859, 2407, 2181, 1879, 1891, 2420, 1901, 2430, 2189, 
               1919, 2441, 2195, 1935, 2449, 2201, 1949, 2458, 2205, 1970, 
               2470, 2208, 1991, 2001, 2480, 2010, 2493, 2221, 2028, 2506, 
               2228, 2047, 2519, 2235, 2066, 2078, 2086}], 
              
              Line[{1779, 1792, 1801, 1817, 1824, 2389, 2171, 1843, 2399, 
               2176, 1861, 2409, 2182, 1881, 2422, 2186, 1902, 2432, 2190, 
               1921, 2442, 2196, 1936, 2450, 2202, 1951, 1964, 2460, 1972, 
               2472, 2209, 1993, 2482, 2215, 2011, 2022, 2495, 2029, 2508, 
               2229, 2048, 2520, 2236, 2067, 2081, 2088}], 
              
              Line[{1780, 1796, 1803, 1820, 1825, 1839, 2390, 1844, 1857, 
               2400, 1862, 1876, 2411, 1882, 1898, 2424, 1904, 1916, 2434, 
               1922, 1933, 2443, 1937, 1947, 2451, 1952, 1968, 2462, 1974, 
               1309, 1994, 2007, 2484, 2013, 2497, 2223, 2030, 2510, 2230, 
               2050, 2521, 2237, 2069, 2084, 2089}], 
              
              Line[{1781, 1800, 1805, 1823, 1827, 1842, 2391, 1846, 1860, 
               2402, 1864, 1880, 2413, 1884, 1148, 1905, 1920, 2436, 1923, 
               1214, 1938, 1950, 2452, 1954, 1971, 2464, 1976, 1992, 2475, 
               1995, 2486, 2216, 2014, 2499, 2224, 2031, 2512, 2231, 2052, 
               2522, 2238, 2070, 2087, 2091}], 
              
              Line[{1782, 1804, 1807, 1826, 1828, 1845, 2393, 1847, 1863, 
               2404, 1865, 1883, 2415, 1886, 1152, 1906, 1185, 1925, 1218, 
               1939, 1953, 2454, 1955, 1975, 2466, 1978, 1317, 1997, 2488, 
               2217, 2015, 2501, 2226, 2033, 2051, 2514, 2054, 2523, 2239, 
               2072, 2090, 2092}], 
              
              Line[{1783, 1808, 1809, 1829, 1830, 1848, 2384, 1849, 1866, 
               2394, 1867, 1887, 2417, 1888, 1156, 1907, 1189, 1926, 1222, 
               1940, 1956, 2446, 1957, 1979, 2455, 1980, 1321, 1998, 2490, 
               2219, 2016, 2034, 2503, 2035, 2516, 2232, 2055, 2524, 2240, 
               2073, 2093, 2094}]}, {
              
              Line[{579, 2313, 859, 856, 855, 2324, 852, 2322, 851, 848, 2320,
                847, 844, 843, 2318, 840, 839, 2316, 836, 835, 832, 831, 2315,
                825, 2314, 824, 821, 820, 2311, 817, 816, 813, 812, 809, 808, 
               805, 804, 801, 800, 797, 795, 829}], 
              
              Line[{580, 2304, 826, 823, 2312, 822, 819, 2310, 818, 815, 2309,
                814, 811, 810, 2308, 807, 806, 2307, 803, 802, 2306, 799, 798,
                792, 2305, 791, 788, 2303, 787, 784, 783, 2302, 780, 779, 776,
                775, 772, 771, 768, 767, 764, 762, 796}], 
              
              Line[{18, 19, 20, 21, 1457, 22, 1458, 23, 1460, 24, 1462, 25, 
               1464, 26, 1466, 27, 1468, 28, 1470, 29, 1472, 30, 1474, 31, 
               1476, 32, 1478, 33, 1480, 34}], 
              
              Line[{35, 36, 37, 38, 1483, 39, 1484, 40, 1486, 41, 1487, 42, 
               1489, 43, 1490, 44, 1492, 45, 1493, 46, 1495, 47, 1496, 48, 
               1498, 49, 1499, 50, 1501, 51}], 
              
              Line[{598, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 
               591, 592, 593, 2241, 594, 2243, 595, 596, 600, 601, 2244, 604, 
               605, 2245, 608, 609, 2247, 612, 613, 616, 2248, 617, 620, 2249,
                621, 624, 2251, 625, 628, 2242, 629}], 
              
              Line[{631, 597, 599, 602, 603, 606, 607, 2246, 610, 611, 614, 
               615, 618, 619, 2250, 622, 623, 626, 2253, 627, 2254, 633, 634, 
               2255, 637, 638, 2256, 641, 642, 2257, 645, 646, 2258, 649, 650,
                653, 2260, 654, 657, 2262, 658, 661, 2252, 662}], 
              
              Line[{664, 630, 632, 635, 636, 639, 640, 643, 644, 647, 648, 
               2259, 651, 652, 655, 2261, 656, 659, 2263, 660, 666, 667, 2264,
                670, 671, 2265, 674, 675, 2267, 678, 679, 682, 2269, 683, 686,
                2271, 687, 690, 2273, 691, 2275, 694, 695}], 
              
              Line[{697, 663, 665, 668, 669, 672, 673, 2266, 676, 677, 2268, 
               680, 681, 2270, 684, 685, 2272, 688, 689, 2274, 692, 693, 2276,
                699, 700, 2277, 703, 704, 2278, 707, 708, 2280, 711, 712, 
               2282, 715, 716, 719, 720, 723, 724, 727, 728}], 
              Line[{730, 696, 698, 701, 702, 705, 706, 2279, 709, 710, 2281, 
               713, 714, 2283, 717, 718, 2284, 721, 722, 2285, 725, 726, 2286,
                732, 733, 2287, 736, 737, 2288, 740, 741, 2290, 744, 745, 
               2292, 748, 749, 2294, 752, 753, 756, 757, 760, 761}], 
              
              Line[{763, 729, 731, 734, 735, 738, 739, 2289, 742, 743, 2291, 
               746, 747, 2293, 750, 751, 754, 2295, 755, 2296, 758, 759, 2297,
                765, 766, 2298, 769, 770, 2299, 773, 774, 2300, 777, 778, 781,
                2301, 782, 785, 786, 789, 790, 793, 794}], 
              
              Line[{827, 892, 889, 888, 885, 884, 2333, 881, 880, 877, 876, 
               2330, 873, 872, 2328, 869, 868, 2327, 865, 864, 2326, 858, 857,
                2325, 854, 853, 2323, 850, 849, 2321, 846, 845, 2319, 842, 
               841, 2317, 838, 837, 834, 833, 830, 828, 862}], 
              
              Line[{860, 925, 2348, 922, 921, 2346, 918, 917, 2344, 914, 913, 
               2342, 910, 909, 2340, 906, 905, 2338, 902, 901, 2337, 898, 897,
                2336, 891, 890, 2335, 887, 886, 2334, 883, 882, 2332, 879, 
               878, 2331, 875, 874, 2329, 871, 870, 867, 866, 863, 861, 895}], 
              
              Line[{893, 958, 2361, 955, 954, 2359, 951, 950, 2357, 947, 946, 
               2355, 943, 942, 2353, 939, 938, 2351, 935, 934, 2350, 931, 930,
                2349, 924, 923, 2347, 920, 919, 2345, 916, 915, 2343, 912, 
               911, 2341, 908, 907, 2339, 904, 903, 900, 899, 896, 894, 928}], 
              
              Line[{926, 991, 2374, 988, 987, 2372, 984, 983, 2370, 980, 979, 
               2368, 976, 975, 2366, 972, 971, 2364, 968, 967, 2363, 964, 963,
                2362, 957, 956, 2360, 953, 952, 2358, 949, 948, 2356, 945, 
               944, 2354, 941, 940, 2352, 937, 936, 933, 932, 929, 927, 961}], 
              
              Line[{959, 1007, 2382, 1006, 1005, 2381, 1004, 1003, 2380, 1002,
                1001, 2379, 1000, 999, 2378, 998, 997, 2377, 996, 995, 2376, 
               994, 993, 2375, 990, 989, 2373, 986, 985, 2371, 982, 981, 2369,
                978, 977, 2367, 974, 973, 2365, 970, 969, 966, 965, 962, 960, 
               992}], 
              
              Line[{1008, 2455, 1288, 1285, 1284, 2466, 1281, 2464, 1280, 
               1277, 2462, 1276, 1273, 1272, 2460, 1269, 1268, 2458, 1265, 
               1264, 1261, 1260, 2457, 1254, 2456, 1253, 1250, 1249, 2453, 
               1246, 1245, 1242, 1241, 1238, 1237, 1234, 1233, 1230, 1229, 
               1226, 1224, 1258}], 
              
              Line[{1009, 2446, 1255, 1252, 2454, 1251, 1248, 2452, 1247, 
               1244, 2451, 1243, 1240, 1239, 2450, 1236, 1235, 2449, 1232, 
               1231, 2448, 1228, 1227, 1221, 2447, 1220, 1217, 2445, 1216, 
               1213, 1212, 2444, 1209, 1208, 1205, 1204, 1201, 1200, 1197, 
               1196, 1193, 1191, 1225}], 
              
              Line[{307, 308, 309, 310, 1786, 311, 1787, 312, 1789, 313, 1791,
                314, 1793, 315, 1795, 316, 1797, 317, 1799, 318, 1801, 319, 
               1803, 320, 1805, 321, 1807, 322, 1809, 323}], 
              
              Line[{324, 325, 326, 327, 1812, 328, 1813, 329, 1815, 330, 1816,
                331, 1818, 332, 1819, 333, 1821, 334, 1822, 335, 1824, 336, 
               1825, 337, 1827, 338, 1828, 339, 1830, 340}], 
              
              Line[{1027, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 
               1018, 1019, 1020, 1021, 1022, 2383, 1023, 2385, 1024, 1025, 
               1029, 1030, 2386, 1033, 1034, 2387, 1037, 1038, 2389, 1041, 
               1042, 1045, 2390, 1046, 1049, 2391, 1050, 1053, 2393, 1054, 
               1057, 2384, 1058}], 
              
              Line[{1060, 1026, 1028, 1031, 1032, 1035, 1036, 2388, 1039, 
               1040, 1043, 1044, 1047, 1048, 2392, 1051, 1052, 1055, 2395, 
               1056, 2396, 1062, 1063, 2397, 1066, 1067, 2398, 1070, 1071, 
               2399, 1074, 1075, 2400, 1078, 1079, 1082, 2402, 1083, 1086, 
               2404, 1087, 1090, 2394, 1091}], 
              
              Line[{1093, 1059, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 
               1076, 1077, 2401, 1080, 1081, 1084, 2403, 1085, 1088, 2405, 
               1089, 1095, 1096, 2406, 1099, 1100, 2407, 1103, 1104, 2409, 
               1107, 1108, 1111, 2411, 1112, 1115, 2413, 1116, 1119, 2415, 
               1120, 2417, 1123, 1124}], 
              
              Line[{1126, 1092, 1094, 1097, 1098, 1101, 1102, 2408, 1105, 
               1106, 2410, 1109, 1110, 2412, 1113, 1114, 2414, 1117, 1118, 
               2416, 1121, 1122, 2418, 1128, 1129, 2419, 1132, 1133, 2420, 
               1136, 1137, 2422, 1140, 1141, 2424, 1144, 1145, 1148, 1149, 
               1152, 1153, 1156, 1157}], 
              
              Line[{1159, 1125, 1127, 1130, 1131, 1134, 1135, 2421, 1138, 
               1139, 2423, 1142, 1143, 2425, 1146, 1147, 2426, 1150, 1151, 
               2427, 1154, 1155, 2428, 1161, 1162, 2429, 1165, 1166, 2430, 
               1169, 1170, 2432, 1173, 1174, 2434, 1177, 1178, 2436, 1181, 
               1182, 1185, 1186, 1189, 1190}], 
              
              Line[{1192, 1158, 1160, 1163, 1164, 1167, 1168, 2431, 1171, 
               1172, 2433, 1175, 1176, 2435, 1179, 1180, 1183, 2437, 1184, 
               2438, 1187, 1188, 2439, 1194, 1195, 2440, 1198, 1199, 2441, 
               1202, 1203, 2442, 1206, 1207, 1210, 2443, 1211, 1214, 1215, 
               1218, 1219, 1222, 1223}], 
              
              Line[{1256, 1321, 1318, 1317, 1314, 1313, 2475, 1310, 1309, 
               1306, 1305, 2472, 1302, 1301, 2470, 1298, 1297, 2469, 1294, 
               1293, 2468, 1287, 1286, 2467, 1283, 1282, 2465, 1279, 1278, 
               2463, 1275, 1274, 2461, 1271, 1270, 2459, 1267, 1266, 1263, 
               1262, 1259, 1257, 1291}], 
              
              Line[{1289, 1354, 2490, 1351, 1350, 2488, 1347, 1346, 2486, 
               1343, 1342, 2484, 1339, 1338, 2482, 1335, 1334, 2480, 1331, 
               1330, 2479, 1327, 1326, 2478, 1320, 1319, 2477, 1316, 1315, 
               2476, 1312, 1311, 2474, 1308, 1307, 2473, 1304, 1303, 2471, 
               1300, 1299, 1296, 1295, 1292, 1290, 1324}], 
              
              Line[{1322, 1387, 2503, 1384, 1383, 2501, 1380, 1379, 2499, 
               1376, 1375, 2497, 1372, 1371, 2495, 1368, 1367, 2493, 1364, 
               1363, 2492, 1360, 1359, 2491, 1353, 1352, 2489, 1349, 1348, 
               2487, 1345, 1344, 2485, 1341, 1340, 2483, 1337, 1336, 2481, 
               1333, 1332, 1329, 1328, 1325, 1323, 1357}], 
              
              Line[{1355, 1420, 2516, 1417, 1416, 2514, 1413, 1412, 2512, 
               1409, 1408, 2510, 1405, 1404, 2508, 1401, 1400, 2506, 1397, 
               1396, 2505, 1393, 1392, 2504, 1386, 1385, 2502, 1382, 1381, 
               2500, 1378, 1377, 2498, 1374, 1373, 2496, 1370, 1369, 2494, 
               1366, 1365, 1362, 1361, 1358, 1356, 1390}], 
              Line[{1388, 1436, 2524, 1435, 1434, 2523, 1433, 1432, 2522, 
               1431, 1430, 2521, 1429, 1428, 2520, 1427, 1426, 2519, 1425, 
               1424, 2518, 1423, 1422, 2517, 1419, 1418, 2515, 1415, 1414, 
               2513, 1411, 1410, 2511, 1407, 1406, 2509, 1403, 1402, 2507, 
               1399, 1398, 1395, 1394, 1391, 1389, 
               1421}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
+6L8vk1F+WCCKB/cTuVjJcoT24jyRLk8qfyRyh/l8qf6AqovkOuL6hfURP2C
XL/0PUB78T2A/D10tUw/+HZjFtRVK5ozYt5NKLK4X4VS//NreqlLybxkWPHP
j4Ubs2/AysoTyasflMEbvVf1Nd+5Yf9hTp8uJeRA50kBn0YckuZRH4o92phn
4NxbTl1G7rwEe+xmpQ08rpC/f1wrvn+Qv39n0V7QTbQXlNvLe9G+8KtoXyi3
L2qPOEa0R5TbY+Ze14p6G69hwtpJU/u0KMCpsc4RQ/eVwdDZDTodcsrFrwZv
1i21zsPfX3t8MKoog0zRP+A70T+g3D8YiP4Eg0R/gnJ/MkT0P0j9D8r9D/VX
QP0VyP0V9W9A/RvI/dtX0R8C9Ycg94d9Rf8JzqL/hErqP4NyzV50tvXH8NIv
l3XcMqHexpPl+yIV8NttY6bqiRyceXXs8OjjcdAZ5n+LtpXmyaI/xz5n/+3P
Ue7Pqf/HMtH/Yzvq/z3EeIHdxHiB8nhB4wsGivEF5fGFxiP8LcYjlMcjezF+
obcYv1Aevzr3TNjy6F4eHtYaOrN1cjIu2GLWLkRaNyX7qRx5n5iBhhbb9Rcc
SsDSMPOC09L7mm/+dvNmYiAunO/jXPfuUvy2zvPkBKk8y69POr7o3TT4M6Hz
iTm/POH7/WOrekjzq3divAYar0Eer2l8BxrfQR7fk05dGed91xdGur/Qntg6
A4r3m5+fdUkBc4sNjh5ShOIb0/ruU5pGw7SG5R4zpXlyj5DV7jl7EO8vz6k/
qG0IvOuy5o6X1L62eFUVnWudi4t3/nTcdqYPPjB6Fd79oNQep+zVnfDyKjZJ
m2b5sHcgOq4zfpM+WBrfA0ftPtL+Jp7ID9s4Y2EMnvEyGxRVUgaxjYsqQ2cU
4a5lv0Yu35+IzwaNGnnof+v6inN/dNvewnqjrdwKbyJ6BZm0iF5fBrPFfAzn
ifkYyvOxSDF/ww1i/oby/O2rmO9hhpjvoTzfyxbzQ5wi5ocozw8Htn2p/22/
K1rGPHmkL5Xn06yxFZrSvD3CQmN6rQcnwBmcnE02x8C5Gc1iPkvrILcdrdsv
bRAEdWonaU6Ji4X6kQGeetK6foeY30IzMb8FeX7rIebDcFDMh0GeDzu3HjRk
17JgPOC9ukGrmV7Q1HHOCYNvCqjUDGveplEsjjhb1fTRygDUrXPc4aJUL6C5
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
7eSMdT7OdgiY5AnRXrZ5PaR5i/PRiMw7o45j3YqUfo6zTkJqzCenTn+l8my3
7eiUeTY4LOr65KhzdlBx0mlbgTTPXF9vfl7U9V1Qd4vqgZKrq3CQ0V9flOK3
pnyZ8y3pOFjUVltxYs1BPD8/aX+0pHM69EztX2dPw51P/RtkVrjhk9iDMztI
f1dz59Mex7cEgKmPXeDmZf7YRctQZ77Un+yZODGv7x1PaKv3olmG0Xn0q7C5
miSt3ye3H5d40fA0/Jj8vdnxwGgsA5+3bz5K37lTzNq4B7ZYd/26na0SE9Ak
raDRypcK2GTe+Be880Df/QaK0gWp+CVjQvPPUnt8v252rauuifClWHfl7b7+
MGLUmnm20rzCsI35iNPSOvaM6yiDBttDweKxqeKypFMccSVkfaMI+LU8+rWV
bihELZljkC/NAzfve7MqLzoI1DVjR6VVh4DOwYTYJ9K6YwPunVV7+jnIqqf1
+x/VEPg51XFhmlQvxz+PjNmvEgpX980/0O5AEJQ5VZtWSb8PeHvt09s1IXDP
aLfW8OpzMMfcvHV96fcWt/1O1h4VCsPPGtcKuuQNZxbGut+Uvv/xK23Lr+2J
gfdRK3J2h3tC6zPDfNWl78GiclSvIwtjYEn4ku1el45A0Pojebuk8gn/9nXn
lJQEuORe0sFs4hZQicrqM1d6r9XHvgyZ6JQEfedENLjd8ABaVi2a9PCxAq4t
HvHcZXYS+H88HDY37RyGror9ZSn1M0bw+9fTU1Ew3nR8stX3GIyZfe6TrvT7
Va29bqsvdoXFtfa2+BWQhkf+6aawkdbd15tZzIrV9MRfAyZahSsyceY5lWk7
pfVdtzjvVXpGAZgYs1E7TScbnz85WvzeRyqHMW936K1Mho4tevTbsMAdMrbq
drSQ/u6GcbWMJ69JhpA1a93StfxgttGd0NPSemSdQ52zrSJSYPKb67fb2QTC
gTWas3SkfvK75yf7HnHJ8LjDak1noxBwNd1b55AUn1zeYGL3hRdhwZ4ei3e2
CIV2aS1WuErfQ0Rmu7Nv7qfCX787wx+MC4WRzWeczstUQOZ3100Gt1NB77RG
rwG+wVBxtvGXh1L/+etPHdeJr1LhSY8n2TdNA2Du48ha16V19OrPmmt+pSL8
Ltqt9b7aH9LXte0Ze0laD+7rqnX6TwZYq60JLFp8Fj5MvjndP05aT5X2tX4N
mXBhQPDmP42sYf7xDlojpHHq6JROWi2+pUKfLW+OPDrqholbJpWsldYLtZZ4
LbRpHw4Ln44Jna2Wjtr79ZNe/U/fK/OQqttwqLPDKejCy0z8rBVT7h+lgKil
Y3Ljp/mhw8/c4yNsc7F7d7XkuzulfsYGrN7dPIZb9Jbm9CzOwtlBhzvWk+YV
mX3q7Rjuagdb8cZTrSfp2OdJkKK1NN7hSJNW1l0TIHfrteo8q7Ngt3jt7J7P
FdDyueqEHdJ69nmdcru2ncPAufeR58PuSeudfTtmVy66BJkF9zulzg+FH8PM
rL/kSuPFgMVzYw+nwZ3qnP1e+lHQbUZW7x/SuHNg+QDNpLAM6BU0pX27VtHg
tzLoxmdpPpOQ3+z7ebss6DzqVcpelSjYUzbogZo0X1pRqp563+QyqG7Q7XF9
WST8+hTx2umoND/ftOF5cLccGNbUus4ImxCwTBsaUVuaZ647ZVr5ZJ20Hnwe
YLcCg2HO9MFzuxxQgOl40z6vUy7DMu/Rf3obHYO80KH6mq4KqG6Y2NylAKE4
eeS4Q79Ooe2h87lPpXlRUI8BP48Oi4abI9aPVfFJQ0t7v2/rkqVx079FE3V/
D3B4/C65fVIuttF9abzIXgH2thPbv3zrB8v++q94YpWLjedN6lwulb/L+l/D
+hiGwLC/HU1drmbikLhYu17npfGisdqDL7uSYLvdnpLxfxNQRbHreh1pHmJw
yjdD4XsJ0sYe9ugbEIsbl4x9Mf2i1L/1jXq3bagHTD7cMiNKMwqcjy9eYiH1
J/37xunFrzkACUcNzi8pjYeSrjF/h0jzgQcNM6+ddzgPYcWqqh13xcOJD3VW
NpTmz6scPHtMfhwFW3IOtiiS+oPOIwJfTfnfeaoDW9q67IyH4Mvji25Js5/f
C8cObiytp0K/Oapn90So1a7BeT3VBJh82W+wgfT8U77a7Gn6KAP0k+PKfEri
YWjkvN1tpXZtrvWnTk/XbKi1+edBC8M4OOytcOl9WJq3N59xrLRdPuChoqD6
j6Kg9sDxKdOlefjxbXYrX+7MhomTSy1d5kejpW15gvMJaf3uZL9ijkYCPA4L
t+nomol1TFYmTnaTnsehx7ULt8Jh/5kOps0u5OLb7NqHW9kqYND4/gU/HyRC
yPfFJV+c0/Dhr6cWBiEKSMkwMx7cPAXiuoZvsk3JwIFB83o2c1HAgvoRHnmz
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
3yKfyB3mE6lvIHwia5lPRFm8C/ksFjKfRSHVS39WLzr0+8Xs9+XkT5nH9HPI
n7KL/CmH6HxLb9KxZDoXyN/RnPk7RpKf5RL5WdqSn8WQ4hksHkM6LZjOBfKJ
3GQ+ESvyxbhwXwzFT7H4FOYrySBfiSnFm7L4etLxYDqW5LtpR74be/LdzFCi
o2ImfCt6zLeygvl3ZJ2LzL+jT/6dvTOETk+mk0D+FzfyvzjR+a5LpGPOdBaT
D+gD8wFtJb/Mc+aX2UbxaBZXpiP7iZ4xP9Fe0hnGdGaRH6cf8+Nok85TpmNL
vqT2zJfE/S+t6LzfOvIrBTO/kj35YloxX8wV8gENIB+QBvmACik+hMVlf01b
pjOG/DX1yV9zhPw110lnONNxJZ/Rb8uaPiMn8uPsZH4cOb6bxU+Tzl+mc4z8
SqHMr3RUib4b+X2OMr/PcSW+p2zyPSH5nozI9xROOgeYzhXyDQ1mvqEs8kn1
Yz4pOd6fxencKfgxn9E3igexeCbp9GU648iHVb9WTR/WD9IJZzoR5GOyIh+T
Pp2DNSSdOrX+bz/X3n41/VwXSMeG+aHmkR9qGvmhrtD52/Gkk9G3pk5f8oVN
Jl9YEPnC7Ml/lEX+I3l896L2Ysfai0qW8CW9YL6k+Uqe5z75s1Yxf9Y38jc9
YzqGc4W/yY35mx6Qzhqm04B8Xn7M53WTdE4xnafkkypJrOmTUqbTg/xir8kv
do38Yl9IpzbzWx0jv1Ue+a2CyW8l67xiOm7kO+vPfGenSOcm822NJN+WK/Nt
nSKdvkznEPnXljP/miHpuDOdLeT/Ok3+ryd0ft6BdKYynQbkgzMiH5wO+eAW
kF+sgvxih+h8/kIWd6B4HdKZxnRKyU/Xlvx0H8lPt4R0fjCdgeRH8yM/2h3y
C4wxFf67TuS/60z+O1Py5XVkcWPyf9kx/9cOai8ZrL00JF9Yf+YLG6TkedzJ
H9eT/HEDye/QmXxkbuQju0W+D12Kn2ZxWacL0zlNPjsF+exkn8UI0gliOsHk
U7tJPjU/8qHIvjwVw201fHlb5HjPmnHZ73aXdM6Szl7yu00lv1s++d02yzov
a/r+npDvT498fzfJ9yf75kyZzlvyzaWQb86RfHOR5BPcQj7BePIJ+lB8K4vL
/rt0ptON/HcG5L/7S36f46Szm+ncLxM+xH+YD7EH6QDT+Ug+vi/k49Mhn1Fj
8jMeZjovyM8YQ37G1eTfOUG+P/IxwR/yMZG/CU4zP+A7JTrbyRc5hnyRoeQb
+rtQ+O/Smf9uPrWXfay9LCVfnjr58paTj0x+Hmf2nPnkTzRm/sQVpNOc6dQh
f1808/c1JT9jOvMzqlP8Mo+TTjzTWUc+wXDmE6xPOleYzj494ZdUJb/kVvJL
2pJOFNOJJ7/hE/Ib/iC/Yf8+QqcR8132JN/lDvJdWpHv0oH8iXWZP/Gokngk
+TTdyadpRz7NFIqfZvFjSvyPKgOE/3Eh8z+mkd+zLfk9l5O/L5viWixeW4nO
ZOajNCFfZC7ptGd+UlPyk9ZjftKppFMdVtOPWevffebcUeL/5FHyvvNM0lFj
OvnkS/UnX+pk8jnK/kc38j/K8TJqL7GsvZiRL1KVfJEtSV88RxY9z8n/9sF7
kD+0Ujw/mtLzzyGdusxfWUD+ynbMX6lLOlVMZzn5TLXIZ3qQfKaFSnya3ZlP
8xb5NNeRTifSOUA6LcivOo/8qlnkV9VR4vdUnSH8niuZ37OdEt/rYfK9FpLv
VZd8r3Vn/N++0SPkG9Un32gX8o0eYf5ZWceG/LNJzD/7inymq5jP9CXFbVh8
vRIfbjPy4SYzH24J6VgxnVTysfqQj/U19ZNNSCeR6awjP682+Xnl/hNJZyXp
lJDOUfLDniA/bDX1z2tIpx3T0SZf8B3mCz5C/tOJ5D+Vx5FMai/OrL18J19q
EvOlHqfn8aLnkceLN8yfK4+bP0knhenMIH+rK/O3viOdb0ynO/l8x5PPVx6v
j5Ef9gLzw8rxKBbXUaKTTX7hi+QXnkZ+YRclOl/Ib7uY+W1l33EK0xlOvuMf
zHf8g3TmMx1b8u2qGNb07cr+5W9MJ4/8y5/JvyzP9zbLOktr6riQ//cu8/9m
kc5HpjOVfNDJzAftRn5hDfILy/Ne2UesxeJjSSeS6ViRn3ot81MTvwJ1mR95
KPmRg5kfeQLpmDMd2WfqQD5TeR19n/y/wPy/sl/biLWXAeQL/km+YBPyBVuS
D/oP80FbUFxlWs34WNL5ynRakr/4B/mLS8lfLPus/zL93eSzPks+68e0TtQi
nQqms5Z8yrVmCZ/yQ/IpE28EfZlOV/JrnyS/9kLya8t+Z5WVNf3OGeR3/pha
0++cRv7uyeTvfk/+7ksUn8Ti+aSjynzTu8k37UC+aXfyTaeQzjims5z840sX
1PSPyz7rDcxnHU/x7Sw+n3QymA9d5Zrwob9nPnRZZzfTOU4+blXm475JvvU8
5lt/QvErLC7rNGI6i8gPvoT5wd+Qzi2mM4p8vreZz/cU+a/9mP/6ObUXA9Ze
fpAvuzX5svuQL9ucnseCPU8C+dN3M3/6YPJx72Q+bkOKH2ZxlcfCz/6K+dmJ
a4QvWNyYdCKYTjr5xNuTT/we5Rspr4iFTKeI/PKbmV+e8p/YlfnNn5LffCvz
m1N+FdcxnQ3kux/FfPfDyZ+ezPzpoyiexuIGpDOb6awl//4h5t83IJ1MpuOv
xP++h/z+lbWE378B+f0dKV7N4i7kl/+H/PJq5Jc/RfGjPE46tWrX1NlCPIGG
jCdwknSOMJ2F5MffTn78LrR/YUc6TZjOX/JZZzCfdSL538uY/30LtZciai/N
qL1cJV/8e+aLN6fnWc34AC+ID1CrY00+gC/56CczH30wxSew+BXS2cB0xhwX
nAF74gzI+1ARpDOD6XQhn34r5tOPOSW4BF2JS/CXuATNiVfQj8Ubkq/fh/n6
m1Lcn8XXk44x02lE3AMbxj1oqUTnFHEDjjJuQAPiJDgxToIGxV1Z3Jl0HJlO
tzjBH5jD+ANdSOcU02lMHIYkzmEgHROmk0EcAyvGMZB5DilMh/adYS7jORgS
96DcvCb3wJziv1lc1pnFdLaTz/0T87m7EWdAk3EGIqi93GXtReYSdGS/P0bP
04fxGTyJzxDB+Ay+pKPNdIhviW+Ib2BIfANP4jl0ZTyHsxTvxeJHSOc901lG
nIRE4iSYEichmHT6Mh0N4kUUES9iGvEiDhJXoTtxFZoTV8Gd4t0Yb6EW8SUe
M75EfSXciSOk05np6xG3YTJxG8qJ29CQdF4xnVTiVyxm/IqZpNOL6fgR/0Gb
8R/SlehcJw7GKMbB2EK8iHDiRcwkXsROiieweD7p9GU67Yin0YfxNPaRTjbj
UVwlHsUn4lG0IR6FRgMxLjxn48Je4gx4M86AMv6DFfE6vhCvI4Z4HXeICxHP
uBCdiIPxhjgYU4mD0ZXiZSx+l3QSmU4h8SUCGF+iG+l8ZjqdibORR5wNmXMb
QTp+TKeQOBU/iFOhS5yKbqRTyHQeEq+jBeN13CGdUqbzvbvgXbjr1eRdPCCd
5kwnjrgfcYz7UU06D5lOd+Jm5DJuRizpxDCdQOKHlDJ+SG/Suc90XIi/4Uj8
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
5Xyiiv8xJw2M8OekATcnzWecg/tcUfK5HsBTR8g5t+TzviCf9y3e/2l5/zOW
jvztyNQFgewmM6tenr4rkLxgUqWlS/677+PR7/P3a3TZHnnWBNrMunD16TkZ
gY77mh672umKFxtxrsSdjFVe18HDT7XNTglMja4+qv7RK94gnv/f8vwzeHwn
efxivt+r8v1eOdAmT+NXNnmjkooWiq+3PjAsokOtSb//OzkAH1dG+LiycI7n
hHMsavB6I+HXFgm/tpznLyLPPx6eq2WFYJ7rIHxWY/isp+Gz5sNnPRgQzGfN
gsNKEA7r4yifLyspfNlNeKVVwiuth1caKrzSUYMzKgwvs0x4mRpwQ2eEG/qT
v2/U+15eNwLOZTmcy3f0iukne5XhPlw/eTR8yo1vg/kU9gh7ucLXzIHLiBMu
I/9Kn6c4JDxFdC2fmygm3MRUuJJewpXkC/N5hL7CI5RumlSiadK2yOzpSzKn
L5n2MJ8Jhy+4x/56xynEwBdUFL6gvMEXjIOPyC98xEn6/MOkz6970t2+dWtv
uOvnt9J+Pn3yL6RPHnLJf91IXncCr+v2UNeVnrm1N3kMvfcNh4N7771kP6/r
IfP/c2C39Gz30B/uJv3hXfSoS0uPOpFe9DjpRXejTztY+rQp9Es7Vgjul26j
J1xbesIf0QvtJL3QKvRd46Xv6vZUbpW+6wT6wKOlD1zR2DuZQH8yXPqTG+iF
1pNeaAn6sc9IP7ao0QsNGHsJv6IfW1v6sRnGnsEa9CGvSR+yhrH/zvUeixl7
6zZKv3E5PcYs6TE+Ty8xXXqJ0+n7tZK+XxJ9v+HS95tHr2+Q0es7KL0+1987
Jv29SPp7laW/l4+9ZiNkr1lXelz9pMc1mfn4LZmPn6LnMPjT4J5DUWNeP4P5
dabMr//C8xeQPV89mOfWk3luf+aznWU+u4r57HKZz77KHLahzGHnM1/eL/Pl
Lcwra8q88oaxR+ZJY87o5onzZZ44nblhXZkbZvC6deV1hxj7ONw8q5/MfVYa
+yDw3HpNZb7m9hqkylwmlXlKtsxTVhle/S3MldbIXKkO84hNMo/IPBU39ey0
hMgukZm/NvhlwcO/a7MMv3pr5gufGF50nS9kGvOR84YPXD3eA8nzuxp+7Dbk
8+Hiow4jT54meXJIXv91m8vrOk/yXMmZnR84n+TALvfOkNx7iPhjXQ7J/D1Q
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
86ljRr+0sTGf6sl86rbMp/4DSnCzMA==
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0., 0.49523678159929424`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
          "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{0.07669649888473705, 
           0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {30, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
           0.5439330543933054, -0.04184100418410042}}, 
          "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
          "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
          "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}}, 
          "mPosFirstCell" -> {{0.9, 0.7}}, 
          "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
           0.7, -1.9000000000000001`}, {
           2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
           0.8, -0.6000000000000001}, {2.6999999999999997`, 
           0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
           1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
          "lineTable" -> {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             
             Line[{{-4.6, 35.8}, {10.6, 
              42.2}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.709857394019914, 
         1.7138642998702553`}, $CellContext`qPlaneLoc$$ = \
{{-2.709857394019914, -1.7138642998702553`}, {2.709857394019914, 
         1.7138642998702553`}}, $CellContext`rawArrayOfMasses$$ = {
         10}, $CellContext`rawNumberOfMasses$$ = 1, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 2, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         Switch[$CellContext`tabNumber$$, $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], $CellContext`freqTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
            Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
          Blank[], 
          LocatorPane[
           Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                 Dimensions[#]] < 3, 
               
               Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
               If[First[
                  Dimensions[#]] > 7, 
                Take[#, 7], #]]; 
            Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
               First[
                 Dimensions[$CellContext`rawArrayOfMasses$$]]; 
              If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                  $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                
                While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                 Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                 Part[
                  Part[$CellContext`kArray$$, All, 1], All, 1]]; 
              If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                
                While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                 Part[$CellContext`u$$, 1], 
                 
                 Part[$CellContext`u$$, 
                  1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 1], 
               Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                 Part[$CellContext`u$$, 2], 
                 
                 Part[$CellContext`u$$, 
                  2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 2], 
               Part[$CellContext`u$$, 2]]; {
               Part[$CellContext`u$$, 1], 
               
               Part[$CellContext`u$$, 
                2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
             If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
             If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
             If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
             If[$CellContext`omegaIndex$$ > 
               2 $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
             ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
              2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
           $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
           LocatorAutoCreate -> True, ContinuousAction -> False]]]), 
      "Specifications" :> {
        TabView[{"dynamics" -> Column[{
             Dynamic[
              Row[{
                OverVector["q"], " = ", 
                
                Module[{$CellContext`qm$}, $CellContext`qm$ = 
                  ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                 Slider2D[
                   
                   Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False,
                    ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
                " 2 \[Pi] ", 
                Dynamic[
                 NumberForm[
                  MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
             Row[{
               Text["time, normalized to one period, t/T = "], 
               Dynamic[
                N[($CellContext`tauSliderValue$$ - 
                  1)/$CellContext`dynMeshSize$$]]}], 
             Row[{
               Dynamic[
                Manipulator[
                 
                 Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {
                 1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                 ContinuousAction -> True, Appearance -> "Open", 
                 AppearanceElements -> {
                  "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                   "FasterSlowerButtons", "DirectionButton"}]]}], 
             Row[{
               Text["oscillation scale factor:"]}], 
             Row[{" " Manipulator[
                 
                 Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], 
               Dynamic[
                NumberForm[$CellContext`scale$$, {3, 2}]]}], 
             Row[{
               Text["Angular frequency \[Omega](q), selection:"], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
          "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
          Column[{
             Row[{
               Text["number of mesh intervals "], 
               Manipulator[
                
                Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                2, 30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[$CellContext`freqMeshSize$$]}], 
             LocatorPane[
              Dynamic[$CellContext`qPlaneLoc$$], 
              Dynamic[
               (Graphics[{
                 Lighter[Gray], 
                 Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                 Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
              ContinuousAction -> False]}], "parameters" -> Grid[{{
              Row[{
                Text["mass: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                  Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                   ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {0.25, 
                  Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
              Text["coupling to neighbouring: "], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ > 1, 
                SetterBar[
                 
                 Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  Range[$CellContext`rawNumberOfMasses$$]]], 
                $CellContext`massLabel[1]]]}, {
              Row[{
                Text["horizontal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 1], FontColor -> RGBColor[
                   Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
                OverVector["a"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
              Row[{
                Text["vertical: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 2], FontColor -> RGBColor[0, 
                   Rational[2, 3], 0]], " || ", 
                OverVector["b"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 3], FontColor -> 
                 RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
                " || (", 
                OverVector["b"], " + ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 4], FontColor -> RGBColor[0, 
                   Rational[2, 3], 
                   Rational[2, 3]]], " || (", 
                OverVector["b"], " - ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Text["coupling from "], 
                  Dynamic[
                   $CellContext`massLabel[$CellContext`m1Sel$$]], 
                  Text[" to: "]}]]], 
              Dynamic[
               Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
                Dynamic[
                 $CellContext`massLabel[
                  First[
                   Delete[
                    Range[2], $CellContext`m1Sel$$]]]], 
                Blank[], 
                Dynamic[
                 SetterBar[
                  
                  Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   DeleteCases[
                    
                    Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  $CellContext`kLable[5], ": "}]]], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Dynamic[
                   Manipulator[
                    
                    Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}]], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
         Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
         ImageSize -> {250, 350}], {{$CellContext`tick$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 1.7138642998702553`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.709857394019914, 
          1.7138642998702553`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 16}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyVfQd0VlUWdURAVBgRUVEHHcCOIiidwA1VinRBmkoRQem9g4BSRFQcFXAE
G4QAAgqxAJEXINRQQkkooSgGW+gDtlB+17D3eevuR37/nzVrudZZb3bed867
79179j7nlOjcp0XXPDExMQeujYm5+q//tij+0ZebFuVLbjIj8/fzPXKCyv+u
8c8WffY72uvck9x21MXfgoKnzm0/8OVes1ddOmfFhTfPBgm9N2QUrZZh9nJu
8h2jS50Onp7U7jtXZ5fz8bODD/rv7r+j5g7ByQpGDFnS7o9eaWZv9r/rM4MH
X+qyIetqtacGczIWlX7z0dAeg3/La/b87+n6O/R6d7r+HSn/fmKX4rsHi/4x
fM26dLPHXr4ft7BUj5ij94a/94nL9+92t9xXc26R0D9lL/9e13nf4T6d2maq
f9y8kcu2jT+Wqf503Ut9/e7iPZninxw3rsPwR2dXz3QJf2wZU/j3PBaX/eu/
f77tub1mZ1yafl596+kTGWZnXH5q0viNi2+mm51xeWNIytS1/0wX/OxgV0rL
U1X/3C04WcFPJ4vdetPD4fWMy+i91U/WTFd7ajCz4+sxLa/eY3bGpW/vZYVr
zNyr17vucUlXn3liv+K7jmNHXrMgNfQD4+IGZ333z4wDZmdcOoy76dBP9Q+a
nXF5Y8/mLw/dcVD9467K/le37549oP50Sx6v8Ub7qP/d6LMzXthwZp+7mP57
/adqxVhcOiw+fmfDNXvMzrhU7JJaakah0M64LCn7drEvSoV2xiVf1xN7C0zb
I/jZwbEj++9f0Xyv4GQFy26tvfSnHuH9MC51fk3vdHzrfrGnBifv6/T2uPoH
zM64PNrO3fXerIN6vXu+w/gyZd4+pPju/K1/xk/Le9jsjMv2g1N6nDwQXs+4
dN2Rkm97idDOuNT9oG6D/x47oP5x3xz5rcHvL2aqP93d10+fVW1PxP/uzifn
fdlsyF4X/1yDu2NvywkYl5L1bm3/eOs9ZmdcFjVY9sWrY0M74zL0wz96TGkR
4jAulUu/NenEhH2Cnx2UW3XHoQ4X9wtOVlBvQPMeH712wOyMS75hL9zV7s+D
Yk8NZt3cLKVKkcNmZ1z+seznymcXHtbrXeelj8w697naM13T66v9+Wqp0M64
9Pl65Dvnix4yO+OyZeVnN324KLxPxqXOjknnOpbMVP+4dqOvafntgn3qTzfu
xj+3tBsQ8b+7u8Tb17aasQfvt3MWl3f2tZzUcXpoZ1yqPdhk4bnme81ucVk+
5eENH+0zO+PS7p1en5Yvmyn42UHrXyvnZC47IDhZwaNT39lT8ORBszMuc1sM
b15z2SGxpwbfzZnwwndZoZ1xeW9isY8+GBW53jUoXqvayqkRfHfNdcXXba4W
3g/jkl1myuw1yfvNzrjEZe3JuaVD+HsZl1f/6LR9mIv4x80f3vPVrqMj/nQz
pvWbfV+RiP9d1rGuJy7+moF1dMricnrR6jEHv9lrdsYl7bly7fpt22d2xqXp
n4MXvHVDptntPXbk+YOu7AHBzw4mP9an8NCTBwQnK/it+ulq15c8aHbGZct3
X7Vtk3hA7KnBcz/2aH5gYfh3GZeer9d4dfID+/V612HfpOrde+xVfPdt6Sl5
i64P/cC4ZB3K06D15HSzMy6vn6leaOPe3WZnXE4NPFn10Jzd6h+3ouEdXW5M
3a3+dKOffeq+yXHp6n8348Kys4fezHDN/hevoxaX5svrTmxcfb/ZGZf1zR6s
0PbuTLMzLh+Pfe3o2dWhnXH52TV5sOvBTMHPDn5IHNrg1eaKkxUEywqUWntD
+HcZl8YFHzuzpeResacG/epdne9fX6SbnXEZ1+lcSpc7d+n1rse5x3fdfSJN
8V3+PFPPFu+83eyMS/ln7u8+/8g2szMuAz44uGnQsvB6xqX0lOQ+4z9PU/+4
Mu817/dz0k71p9vd4pvyg7alq/9dozElH5zdjb833eKyslmxnOlPZJqdcXlq
9Kit5SaGdsZlR/EmU7+6LbQzLke++rhy3h/2CX528PKfJ6oG3+4RnKzgX/nP
JRcqkm52xiXu+W+6jJuxQ+ypQecGB5tm9Eo1O+My6OZb8rxeOkWvdwuujs3e
NSVZ8V2Vk63GHblntdkZl4NPf7zntqYhDuPS8sZGn5z5aIvZGZfNJS5Uv6H9
TvWP+0eVaZk1t6erP92gw3d88/hLEf+77stSNvdrtd/x9zAub5VpkjOoc6bZ
GZeVRXp1/un98HrG5abrp3X8Imev2RmXE38OvL788AzBzw5m37S1YrNSuwQn
K+jT/qmdb9y1zeyMy6e3b5waszFF7KnB5mojRp2o8IXZc/vHuOj1jIviMy79
5H4Yl1ly/4zLcfm9jIv6h3FRfzIu9D/i5RgXxot2xkXi6xgXeR4c45LqPz/O
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
O003Zf0SeT3jlerPhbd4dfH6Z5q+K2C/BX8OWmJsD9T75/F0nmF/RV7POHKu
PfF5/8noO8HrGd9v0VeB+PT/GfSj4PWMbxb6Rfjz17Ld67ifPJ5e9K/3JPpm
8HrinwJ+K9wn/TMAfTn8OW5n3QrgNP2b+NLO/ooyR8z6ZDbLxf8XxD+H4J9m
4k/28bj8HJpeKGC/F17P54H9QJrJ72UfEuKYTgN9aXg9n4ex6NOSI/5/Df7n
9XweeqDfC/F5/yXQV4fX8/fmRx8b2hn38uh70w44tu9C/x9ez/sZiD48tDPu
7C9EO+PLfoC0M44Zfr8j+13sYyPzyILvPP+H/hzv+TP0A/sUwb/UtwQn0M+q
mfzeGt7vTbc4Pos+S7QzXgPR36mh+Gew5590+10L0Ldqwf/+rUjiffZDfzBe
z3ixH1dD8XMZz8/pFkf2B6Od99MG/cRoJw77oXW5b3Dn+wavSeLv3Yl+a7ye
cSyMvmq0M45+XzibUxb4fcNsrlng9yuLiaEfenp90mJiGJd5Xn+2mBje52qv
L5xlFWOL1Tr2y4xTs2N3vfvlP25puTmJftC/y7ikCQ79v1j+Lv3cX+6T+B8I
Pv18QvxAfxb1+p7FxGi/MpkvFmxGvGQeWfCkH1/Tpez3nwdHf1bBc2XzyJiP
wvPpz1NLjB2K57wW7Py94/x1ZzqK5/z14ujPmlhfxKF//PdquqOf/fdY+Hf5
/iQO/cl+Wc0E/3vB1+uJQ/+zL1azXOxtxD+j4B+ZO2Z91WROWSDvT4vXY3gP
n/d5ZOtDxesZx2vwPm8pfivpv/8tvj3xXiU+7+d1//tiv2s8vkd4/5j/+T3l
9Yx7f3zvaGfcG+P7SBzG5Rf/e233H0gfLf7eg/73OnI/T/9fn4fo36Uf6J92
2F/58+bCvlW8fz4Pfp+o0M5+4y3FP7L/sfie8vdjFhfZB9pzcgT7tJY+rxpw
X31R/PYd/HZRfi/7k/vz4MK+6LTbusb+Fvtwu5+TOBfwesadfexb5+J/Xs+4
/4F9uD9vLtvJvt1w8mCfz/vh76qL844/n+6s4/wC2hkvmZtg/pS++haXOJx3
LuXye58U/5zy5wtYXK7z5xrY/T+O+4/3+ccg1Z/TYfHiefCqDN9vk/x5BxZH
niuJz/vs5c8Zsd81B+dT2hmvcjjPzvV0AmF/Hn8+XbaTeSIWxzY4R/tz6866
wf78FIsX++20zuV3ydy0QOaGRPyZkIsfEuR3NcfvapWLH2z+GuLYFXmSCz5f
Zn1m/Llykfk19rvYz4c4vE/2k+H1jFc+f16P3afM/bG4lPfnB1lcKiBPxb/L
38U+MP48u7CfzFMSL5nXY3bOUVogfmC+ReasBbX9fF3Enxdz8c88nz+yviu8
nvGVPKr9XubxiMO/2wb5Z38OXZgXpZ1xPIk8KnF4n+yjwusZxzp+njaOcVyE
vC5xeP+dkG/359xlO+aNF0q8BiNevJ5xZ/6Z+PTDC8j/+/Pyzrol6LtCO+PL
PicJufg/IRd/Joh/asI/zS/n+Q2nC/igBPGD8C/hc4v7Jw7/bgb4Jn9uXWJs
H/AjtDOOM8GzEIf3uQB8Fq9nHEf7PI7F8WfwQcTh/T8EHs2fi5ftyDfRbrwG
+Cni8Pf+FzydP0cv7JdCO+PFvijEoR9Wgh+knX6I9/lEi4vwdObn3fAzcYw3
BI/ZQvyZ4POD5p8H4B/a6c+RPk9qfjjl85X2u5bjdy0QPwsPa79X+FO7f/Kw
4KEsLh19/tfuU/hc+7sfghcmDuOV0HtDRtFqGXY98TsJvuVRcf0CiW9zxJfX
017o1LntB77cG+G1yacrry3z+4yf6oZ5f8prcz6j8tpj/LmBxk91xJxB5bXT
oR9QXlvmFSYzvpxvqLz2MOgWlNeWOYnGv3CuovLaE6CXUF5b5jMaP5Xpz3M0
HkrmPxoP9aw/L9L4phsxX1J57dnQeyivPc+fy2lxlPmYkXgpr93fn/tpcdmD
uCivPQ96G+W1Zb6n+e2CP2/U/Mw5ocprV4ZeSHltzhtVXvtnf86p+YdzS5XX
bgy9k/LanH+qvHZLf76q/S7OUVVeOxZ6LeW1qZtSXrszngfltanjUl57B/Rm
ymtTV6a89g5/nqzZqXNTXnsp9HvKaw/25/Pa8yBzci2OVRFH5bWL+/N/LS4y
n9f8KfN8zf9F/PnC5h+ZC2y/i3OEldf+yJ9fbL9X5hHb/XN+sfLaf/rzkXO9
T/5d6leV157pz182fJm/bNdTr6u89kR/vrPZqR9WXpu/V3lt9iVTXpt6WuW1
6R/ltanjVV6bumLltTl3W3lt6pyV12a/KeW12e9LeW326VJem32llNdmvyzl
tafj7yqvzfoC5bUVn9dzHrry2qyDiPDasCuvTV268trU1SuvzboA5bXZj0t5
bfbjUl6b/a+U1+a8e+W1WdegvPYs1KEorx2gjkZ57aaoG1Je+z7U4yivzT5O
ymsXQX2T8tpNBF+vV16b9VzKa9OuvPYQ1BMpr90f9UfKaz/n9ZUKedI01Nkp
r/0H6rCU117q9XcKedUJqAeM8NqoR1NeexXqDZXXTkSdnfLaX6IuUnntq9C/
SHntW1Evqbx2OuoZlddmHyHltdmfR3lt4iuvfRp1o8prrweO8tqTJb60d0K9
qvLa2xAv5bVfgf+V146Bf5TXToQ/lddmPbLy2qxXVV77OH6v8to/oW5aee3W
qCNWXvsb+F957c9Qj6y8dn/UfSuvnQf9f5TXboK6bOW1x6M+XXntT1Enrrx2
YdSnK6/NfjXKaxfz6/Htd7GOW3ntoZ7/Q3/+4Pkz9APr6OFf47XZv0V57RHe
7w157VXoA6C89rPoP6C89nzPPyGvfQJ9FZTXZh8V5bX/hT4PymsX9Pwc8tp3
oH+F8tqvoN+F8tr3oM+G8tpF0Q9Eee0e6PuhvPYbXt+SkNf2+9uEvPYCr59G
yGuv9vp4hLx2Hq9/SMhr5/X6lvDfX3F5p2rJ/nUnRXjtz+XvMi6FBYf+LyB/
l37W+yT+YsGnn38WP9CfF73+QiGvzb4cymuXQLyU157ox9fy87f6z4Pl52/D
c6W89jE8n8prd8Jzrrz2j/66szx8sr9eLN8+GutLee0R/rq2PHw/7z0W/bvK
a7MfmvLawwWf17P/g/La7NumvDb7OSiv3Q3+UV67kP8+tHgl+O9Pi1cjvIeV
174J31Pltfk+V15b3v8W38/xXlVee4X/fbHfxe+R8trsk6C89gl875TXro7v
o/Laqf732u4/Ufo88Peyj4Hy2txfKa/d13sewr/LfYLy2kuxv1JeexD6Kiiv
7fcxCO3DYFde+5S//4nEV3ntlf4+0J4T7tOU126MfbXy2twHKq/N/aTy2tyX
Kq/N/a3y2vfiXKC89p/YJyuvvcPfV1vcuQ9XXnuAv283HO7zldd+H+cd5bXZ
X1d57cF+X1/zp/R9tbhcxHlHeW3pH2v+kf63FpfA77tr989+v8prv+P3kbZ4
8TyovPYgvx+vxZF9myO8tt8H237XazifKq9dBedZ5bWlX7fdTwW/37XF8Vec
o5XXHu7397Z4sa+48tp7/L7TFkfpa23+lH7a5ofefh9v+11p+F3Ka1fx+3Vb
HL9HnkR5bdZTK68t/dXtdzFvo7w2652V1y7o95O3+3zS70tvcanu97e3uDBP
pbw265SV12Z/fuW1pf+82RNRB628NvMtymtLvi7iT+W16R/ltVshD6y89p1+
HtV+L/N4ymsfQ/5ZeW3mRZXXZh5Vee1LyHsrry15WuPFmNdVXnsg8u3Ka7Pu
WHltxkt5bdb/Kq+9EPl/5bUPoC5Yee16qMNVXruVn/83f2b7vIP5h7yA8trf
gg9SXlv4F7t/8hfKa+8H36S8NvkR5bXJsyivvR58lvLawuNYHPeBD1JeOx94
NOW1WeervPZU8FPKa78Ink55bdbzKq/Nul3lte8HP6i8dhWfT7S4CE9nft4H
Pyuv3Rk8pvLawg+af66Cf5QvftnnSUM9g89X2u8i76m89kM+D2u/t7L8Xr1/
5bWv8/nfXO+Tf7cHeGHlta+td7rVpok7I7y24vP6ArheeW3GV3ntuecOV/nq
mV1uvvAIeaGPIh+hdY7MkzPuVaCDmpdL/dongk/9lfW9Bz71abTT/w2h98O+
1/IkBaAPpJ1/V+ZaRurLsF+y+9kKXaL1G8f9dIWek3beD3WhlySvSB0p7Vo3
xPwe/+5GTw8Z5gNfhq64peTHekGf3ELyeBWhi24kecie0NO2kfzVcOixn5S8
Uyx07y0lv3QYOvmGkn/jHOoXG7W/ZsoDG5L4u5agLqDpsZQmx1JWJfHv7ps8
a+/kWQn479dJ/F3bvPqCxCTeD+fOX86bLUiy/ADqC1q131+1zRPLYxnfHrDX
lbxHBfyuepL3+AR6/oaSx+Dc8EaSx+C87yfk3M053e3l79bC320k53HOs24i
52XWSfH8yN9VSXTvdl6DDvmCnEdYf3dBzlnUD+N5tv3wW9BR8xzB+/8ezzPP
Wfy7M6GnpZ1++xbrl/tz08lAJ8xzq+pCm8u5gPMuaTf9JPSuxKc/6+P9wOtV
Bxsv+0zqSOflogtdIOeIutDHzpX9M+cbzpX9M+cSLpRzBPWxc2U/Rl3oBdk3
Ug95QfaHf6d7PC/7QM6buyD7Pc6JuyD7N+oS58m+iP0Q5sm+iH0V5sn+Z8zf
6Pri5fvLOWjzZJ/DeWfzZD9Dnd48+d5Rp6ffNc7b0u8a+xrpd43nIP2u8bys
3zXi63dN5xnRbzzv63eNc3n0u3a/3xfRvmvsU6ffNZ1Hw/vROTK8H85V0e9a
HuSR9LuWgXyUftd+9fIh4XetDfKK+l1bivykftfIT+l37Rfk0/S71hX5WP2u
kU/R79o/kSfX79pR5Jn1u0ZeQL9r1T6/6a//TY9814p6/EL4XbseOPpdIx+k
3zXa9bt2C36XftcOIJ+v3zX2tdbvGvtR63etL/LJ+l3j3AT9ri1CHPW7Rp5U
v2uNJe9Nf76APKR+18i/63eN+UP9rpG/1u9aXjzP+l1rh3yafte4fvW7xjyh
fteYF9LvGnUj+l1jH0X9rn2A94N+19gXUb9rzCPpd415If2uMT+m3zXmhfS7
xr55+l1j3k+/a+yDp981vm/1uxaXS96jmfRV0/yGfteYx9DvGvuD6XftI5z3
9bs2Bed9/a6N+ptzvX7XHsS5Ur9r1A/rd43ndP2u8RyXkMt5jXbt12Fz95gn
R70M7fy97FtCu/YtkTlrAfdpCbmc+/x5jmG/FJnjaf1PiK99P/y5jWGfE5vH
J/0Q/u5cybizLiy38ybtet6kXc+bMkfSsQ6O39kr99OI9hWJyeV86s/pC/uB
/P+eW2nn7zqCfb7MRbL+Hryev/cHnGdlTlPwI+pMY0TX9AbOFzJPKliNOlaZ
Y+hOo96T19MPTXE+ihE90kr0x7C5SPDDQJx/bY4enpOX0B/Dn8+VGDsB527a
6be+OK/RTr8VRn2xzM0JWE/N6+m3WJzjZI5PMAHnaH9uV7YbgTpof55OVsD6
Zdq1H4XNweF5E+dZf+5SWJftzzNKdYk4F9Nu9ek4z17+/9s8lOAU6vd5PX/v
98gb8Hrr74c+AP48pmzXDnX6vJ6/dwDO9bzeeGTU+/N6+sHvS5Bi+pbdXp4h
xfZvnf+ng/nM5uzQD2lyPf2wUPDtXOD1PUiJ9FXgnAj+roPwD+28/4rws81n
kfp6m1uB3zUH8aKd98++HLTz/tnHg3bNY/hzT7Id+4fQrn0J2Oef93811oU/
3ySsN+f1Widucwfwu9jnxJ+7EfaBoV3zJ9Jn3voD8Hr+3lVSR8/ncyreV/6c
i7CO3u8/nxUcwvtQ5sJYHXdudfr+nIuwjt76zMMPbfHeztF9MvI//ryAVNcJ
7/8c2T9vxndE+o0Hk/DdyZF9Nb9T0v88iMV3jXb6gd9B4mgdOq+3Pmz4nlr/
cPzeOvj+0s7fOx3fa9r5ew/j+047f+/H2D9IH+mgFvYbfj/zLFcW+Sjpax2w
bxiv13ptXm95SOx/eL3mtebI/pn14Lxe813WRxr+6YJ9Gq/XfNccORewXph2
+o1103PkvMD+eNJnOKiF+mK/33WWY5896XscdEPd8Rw5XzBvxuvpN/YtnCPn
DubT/L7iYT3ynFzyadZnGH5jXbb1Y2dfStRZ+/23E2PLo075vJxfTiMvd17O
L/WQl5N+vFbPe17ONUuQr5N+v0Fb1PnmlseLF56U9dHn5RzE/F688KSdUf/r
98E+6z5DnXK88Kcvoi74vJynmCeMl/PUQOQJ4+U8NQt5wng5T41DnjBezlPH
/iZPGJ9LnjA+lzxhfC55Qj1PXefrKCL1I3qe4lwAPU+xXkbPUzrXXutK9Dyl
8+W1TkfPUzoXXutN9Dylc95Vh/93+UzGnfPZc8tz6nlK549rnlPPUxdlbjif
f50PrvUsep7Sed9ah/L/my/V85TOoWZ8dd40f6/OleZ7YJLMj9a6AD1P6Txo
rcvQ81SczHfWugw9T+m8Zq3L0POUzju284XMKba8qMwppt90HrHlhWTuMP2m
84Xpt0UyR5h+Gyxzfukfnc9LP2xAHlXPUzrHlr83ZvjlfKyep0rJXEitU9Dz
1B0yp5K/d6HMjVX9v56nUmQOLJ+T+2WOp/XRkjme9MOV56gmxv7vONX5g8h5
6ha53vKTgs/fu+GKc2ZDPb+ep4rCP3qeulXmZqreW89TOgeT958kcyFN5yPz
HDV/ruepH2V+ourh9TwVM9Cfk6i6dz1PDdU5bvhdV55jmBjLOYZ6noqVuX58
PovK/D7+Xp3Tx+dzuczjsz51MnePcdT5etaPUeboqT5cz1MDZS6e6eGvOLcu
MTInjnHnnDg9T+l8N/qnkcxxo390Xhv9w7lsep7SeWr0w0CZm0Y/cD6anqeu
PI8sMbaNzP+y/LzM7eLv1bld/L06n8t0KTKHi79X521ZnyWZq2V9L2V+lvIp
ep7SeVjKs+h5SudbKc+i5ymdY0W/cR+o5ymd66S6Vj1P6Zwm1bvqeaq6zF1S
Hayep3SOEv2m85KUx9HzlM4/ot+WyZwj+o3zjPQ8pXN/LN8oc3/oN53vQ7/p
HB/6Tef10G+xMpeHftP5O8or6XlqkMzTUX2snqd0Po7yU3qe0jk19JvOo6Hf
dO4M/aNzZ1RfqucpnRfD39VJ5sIoP/V/AICheCM=
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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

                  "]], 
                 Polygon[CompressedData["
1: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
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJxNmXn8lmMWxn/vr+ftfp6SpchWSPumRptUJCQmyxSRMBRCZFeJlPZV+04i
2UIkTNqQZGzDhDEMYzAYW9aImO/1uc7nM/PHec/1nvs8576fezn3Oeep1//y
XoMrKyoqNvFTBd6kXFHxUamiojH856yi4lXwDviP0N/AP8FbQteDW8NXp4qK
SnSXFhUVTfl/EfIm8AzZ2+AyfDfoXfAu8Ea0XS778CV5RUUNZMt49sHkfm4F
74rs9ZLbfop+f4H/Cn0A/k0y6DHwm/DXoFfAr8Mfhh4ArxROtrMOvgp6HnwH
vA1t54EPjfHL5tPw+6B/gtfDR+Zu/yPjWZnc/23gh+B3ovMgvAXj+xJcDd6Q
/0Pj3d+A/gJ+C/4u9BT4H5lJeF7y+J8Dvw1flMxnYf9f8L8i/wj+WeZ5+xL+
JDo5/cxD50P+/xn5xxoT8ifAM+F/gqqicyc6LWKNtFbN9R7gZvBE+9aS9T7h
/zvgpmWvk9ZLfWgeftC4sHMr8/AG8keQ/R3Zxnivf2aezw/g78eYNfYRufs5
m2eXJrfPBc/MPWcTwMcgH4B+e/i9yNaCV8D/A70I3gJvBw0Ct4Wvh+4Gj0b/
1VhrrfkCbD4LvjV57SW/G/ws+BnwC1oH6FHwK5mfXQd+GX4YdCO4I3x+7vbp
jG1trNE6+O+g4TGGtsl75ij4nmXvk1rws2gbC/6j+oTu0V6SDehp8Cb447FX
12S2K/sb4Rsyr93T8eyfwJvjfR+PNX0RvCre5eUY/0taf+ilwPdDd4Dvg8/I
zcfzLovhK5Ev0ZmAVsQ8z8o9J7ckn5f14Eczk/Cc5DHfBX4MPjs3n1R4vjRv
nXVWY11uy0zCSzUWaF7ghbnP6EyeXa13Rv4EfGryfExGPkbjQD4Z/nXmNd0W
djSfd2luoIfi2eege2Ou9Oyd8HHYeV7nRHsA3gm6BnwE/NvYG99k9lk6Fz15
7ovM/kF9tWQtvwI3h9+PrXrwLegsKex3bst9vj5E55lk3yU/uSnZv20D7w7f
A/oYXLPsM/uCxp/cti32zO08uxd8ObY3QP3A/0anNvzNktvqQp+C/6wzgs7+
/L+D55ZCnyB/Pln2LbiO2gr73MeTn31LawdeXNh3rwBvhg7U+Ub2RLLOlpDL
zmvwfWh/H7x32T5RvvFOvTvP9NCzuf34u+H3VmF7mfyD/B86Q+GX8NyV4AHy
O8nr/uD/7THh8cl7YDn45uR11d6Ym7zfVoOnh1zrPiF5D68L3649rD4n0s/E
ZJ05yJYl+8Vphc+X9qTO09zcZ25qYaz9Nin57GmPjU32g5/LP4CfjDOoZ+ep
r9ifm2PvjUuW63zfUthX6zx+mtmmzvUsdPol+4bLw5d+pzMB/h6+ueT/vdA5
TfOGfBw6vcEXg1+DJjCmKshORTYa/dPhpybzQbSfGeexL3wL/69A/zvaT4b+
gOwiZGdrjOick9nOVSX3cUbyGekB78P/G0oeRxdoBLgr/PM4Izori3PfS/Ox
+ZX8UdxNxyWfs/ORV6f/f8Q83IT+FeCjaf89dG3J+0F3k+IExQsb0GlF7LEP
/MjMOt0yv/eByCeW/S6TkZ8Hv1Bt4GPgOzPv4Qp07ip89nTXVyn7PlJcsiR5
nrX/FybfC8uTz7z8zGL5j4gNdHa2Z767df9ti3d/OOIH9XN7xCo6Ixt0NpNj
JPkHxQlbwLfDT+DZYeDj4T0yxzzHwY/SvATurv0bOprP98JHjcXWKK01dsaA
f4/sQvq9lP4PYk4W675GPknvibxn5nmW3knh306E95ce+ufBV+rcgr/C5rmK
7bQW8BOS5/tM7LST7wD31Z7RfSe74Drwy9A/EL5f5rtbevuHXO17Q/3kP+VD
AkvWiv97wftgp2bmO1T/D0XeC1xfvlF7X74RXpf/J4IbK5bJjMvw4Yx/D/hp
2Nkt9PWcbJ5SclsN6FzwrprvzHtmMDyDBoITfBfte3D1zO+oczFQd7rmIMaQ
Q6eHfkl6MYbx0ALwBTorme/9s3j2MKiexsHYfiGIPkHvrv0Sz8rGRMZ/Kfxq
dA6Od28gf6xzGvMgeTfwbiE/ClwDvjNsyvZlmfeGbNXWudM4Fa/R1h38Pfwn
qC94B3xf+QLwQfCf+X98yCcwnovkCxjPATq7Jb/DxdDIktu2V/Fc/VjF9oUl
U78ngQ9IbpO8SXJfR4IL+CWxtwdmHpPG9h38m6oVFYdrTtCpCXUGV9GZ1dpq
/6Oze8zDHqHTE7w/vDLWUeu5q3wKeD+9OzZbg3eRjwk/eU3meewW8gt0F4Kv
hV+h+wN8Jbxa8tzuo/WCDgF/i7082eb34F+gluCv4VWRdwTvBB/L80O0dvBK
7QPwz8gn5e7/usL9XiW/pjiCtuPQ2TP6OiLmSn11jbXWe3WK+VG/XWJ9NX/t
oXZQW+jYwD9Wtb7m8CtwU/Bn8OH0OQ18fWbd7v+n31x+G35m8lzpvpbNNvKr
JdvRO/4G/xxqAv4PvD784Oi/beA2gY+JMf0bvUbwj6saa8w74N+yrn1iDwxh
TFPB1+keSOZDCs9N+9L/3rWhzkhQ/einQfB2Qe1D9il9dIj5vxFbU7F5TZwd
+aJfqzgeXgJepDsT31cdf3gDfHVu/qJiJZ65HvwC+Eb05qI/Un4Ancbo75Ib
j0PnVXRugu+FfAR8VOa4dwz8cXTqIs/gV9NWE3wVfDRUG3xz2Xf1vuAr4ZdD
B4fOct2xJce9E6D7wZPlX2jbDj4Z/ih290P/t+TnDoXaVHr8DeA57au0D9F9
nnFeCy8q/X8IVAt8XYx5XLzjz8nv8RL6j/HsSPDL4FFl3x36/1Due+Mp5J+g
fzZ4I/gceFbp//dg6z5sjtP68n+n/IDiX/Qvhm/WuYDvjf6F8Edytz+LfAp4
ovwr+G/J7/s+fBKyGSW3naQ4m2f/AO8DVYJPg/eCSiG/BEqV7m8qVA98Gfxm
nl+KndHwQck2tU/60rYnOmeWHY9rb5yldUneM8PgU3hmUazFA7nn83P5IdU4
wFO0popf0bkB/mJyHeUB+Xz4Z9rTyh2T5+Qb+NDkeoXi4aMUu4G7lh1ra/zH
w6dn9l23aC/Q7wnI1mDzXnB38BOF7cxSbKFzFHGs2pQ/KI94E35P7nv/XfDU
3HWMm8DtVWcBd4B3irzjcHiXyC86w8fq/ou9/XqybBV93aU6ifZF4Ttxjvyq
fKHiVsbfMeZwhOISdO7ObfsRxRvwr3We4e8kxyofJeNjlMug0ybyKfVxIvRb
yTnaKclx73js1ef/9/ID8GX8PwT+IM+2Ul5V8v+esWe0dxrF/Cjen4b+HN15
6Bf8/6Lk+a0X66V1u46+btX8o/tUcm50d2Gs8b8CPyByLuVeK3Kf0SfRaV12
Xqn8cr+Y27oxhrdjPxxUdp6l3GxDxJbK9ZQn6t2fS8779tXZKmxHNTH9n5t5
v+kdVCNQrWAK+isLr+urms/Mcel78LbMQf1K+wz5i7aB12B/OvpvFJY1CL0Z
ZfsZtd0S/mpa2fd+j7jL2oW+nptM2z6Vjk3HFK4RjAwfVS/81DWF7+ABirvo
9zBkBym+Cx9bLXdesFBzhO56rSny2vDqufurE/odwAcqP809rtfRfxLcHHlN
+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
                  "]], 
                 Polygon[CompressedData["
1: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
1DzQ+dGYj02uKVBbQIPpkVxTobaChnJ14fN5o/BTrK/C+SHaCfnr+sKaUSk3
h4fLzynMnVcH1+X+G+TWvNC+qEFRi0JDu6XwGmTtboi1yRqH68BBWftjk/V8
ODhcHE0KbYrxVsl3v9pbnFUa87YqrplRO0PzXR3rAZ0ejWWD8PvJ3AnOAndh
z8CdngruTM0jBR+8ufCYdXLX0Pgu6jXwqX80lsz85rTcNbOPk/cQ3AoOxt6i
BlA9+Cd8lByRvckeJReB88DVNgYXgt/1jfz8nsL1J2qDaPbUc6gXUltBg6N+
cFNhfv5nZj2Re4DLwbm4N3JicuPzc9c3P0nWN3uFHgt/RdulBrgs+NvJufvA
p+GHvUMf+CxZI8A+JfRZ8kG0IDSB1YX5Nto5GvIS4V+TuR8aCFoI+VuXmK93
kzVdtN0i+OV84Z8iH7gxme93C368vDD/7B78+a7CGghayJm565VopGil7P8V
yZol2iU12TuTNdItEX/vFV4kXJZbQ304+R7grj1Db6a+UR71ih6RLzSO/PPF
5BootVA0efJR5oxcBA7MXJLPUrtAE38zec2dHvPNWrwr+Vl/zqyXosdQ56Km
8FtyPn5Z8PGvkvUbalVoxKtCD0IrRB8qRb6OdowGtTb0lnmhn1BbYX7+yLxm
yO2eT47V9SP+oOGST1ADRNuF/w+NfH9lYU5CbORM5GxkTVE7rx76C/rMVcLV
hL9NzvfRntGjHgl9YGbcP1om+gTaKHpRHnrZuNwaKGsHfWJU6A8PFtYv0JLR
N/5MfucDoz9rgXzqjPj++yPfOiv0su+S9Ta0XvS1Rwu/c2IXMYy1wPr4K3NM
JjZTz6TWQ82H2iT1H2pB1AuoZRHPds7dH+2beLF95J+L4rx8JfIxatXkrOSu
n2XOL4kJ9K2ZO1YQvypzzz+15YeSc2fuj1hbI7f2zv6nPgqn4PcCHwbXuC3i
Ge+Qd8keInZ/n3lvET/Lc1+zPPbHL5lzLnIv1iBrcVM8D79/QP+nXojevzD5
7P9a9neZOQz3R84Pt7kv4vH34V8U5wN9VibHKGLVf+M84J7oyzU3Fo6/1XLX
FFh/aOJtYg/+NznmUBuqFXol+XbbiFe3F9Zb5smewHmRmcNx1tfLzO34fQHc
AQ7RLTOfODL4LrVx+AhaNTXdCYU5Fly3SmbuBUeGK3eJ6+EPXYI/jy9cf0Nb
R8+mHtUiObcipyC3gJPC7esG94dPnJZZQ4d/wGnhtlfG/fN7AOoR6I1j1Rpn
rgVT30LPRx8ocmsWaBfoH3tFfr6UWmp8P/lXrWT9aJns2zLrUeh35wSfYm6o
MVBrQB9DP4NTw/+3y8y18+Tc8OgYD32e2gIaPnp8neA75Kzk4+TX5NrkkOSD
8BVqKdTgT0rO78mFyYmrBh85MfIFchf00DmZ9ddBwW9OzlxD4rcU1ISoDaFh
oWX9VOncnfwUvf/XSuci5CTkv02TuRc5cRPZn1U69ydfRR+AHx2fmaPCVb+u
tPZAjkN+Dz/smLlm3D34Us/gt/w2hflhrsl5f680P+wb/XsFn+yf+Z3ybrfE
86NpoFd8V2ltoX1cT/2CZyHf3CVZD56VWd/mt0/on9fHemF9NEzOpTpH/31y
/16B+EW9nT3H3oNTws0WFz4r4fBwefTz4fF+qM29EOcDGhZaFr83alju30jx
e4/XkrkpGi1a7Z2Fz8auoZ2hrw8LfslvG+Dz1NrZA4cKP5t89nL+kDugZ/0v
c3z657dQyeM1yn3WcqagNVED4KypKBzrqRFQK+A3Afw2gJoY+thPyVwBTQ1t
jd9o8FsNaobo0cMjllAf5vde/L4DrkCMrRHP1DnOd551UO7fWlFTPirm5ODc
NXLm6qvgD2jonN2vRnxHo0SrpL5wcaxfapXENLjBAbljHb/34Lc1/AaD+jX1
AX6rcpPwBcm/d4DL8k55t9Q3Rkc+Qn6D3k4t9J8aW2H9h7XfM9Y79Y9rM+fX
1IIvL5y7bw2thHoKtUvqMQ8XzscviHjIb6XIafpGf3IdahrcG5o52jlzDr/u
mPtd/B+f5RY4
                  "]], 
                 Polygon[CompressedData["
1:eJwt1nnwTlUcx/EHz6/nxyA0ZC+llESlshXZKsuUkF2ylEhF2ZdsZe+X5WcX
ilYtdlqsiWqaaadtIkv7ahQRen3nPn+8Z87nfb7nLufec+6t0uuhtg8WTKVS
echBk0wqNbBAKnVFOpWqjkdzU6me3AyurXwHbpero5h28cj6Kssj1Z4rl0Bn
7jKuLFpqny6USp3BcDWfcMe4C53wAuyWG+N64+qgl75rI2eSdrj6aCbXx6Xa
1XCXvppybfTULsWVxCjnqMq15crLlXCdPIJPaRdA6+jjRnMV5IroxtXgbsUj
2p24rugkj1dXV7seBui7kWuOh7Vrc9dgnJqiuMyETnZfk1BArqKuTfb6SqOW
3BETuDYxf3hc3aVcu5hLuQrqyj3QW7sPhuprJTfFIO1aXE2MNfY97qe4J+cs
h6e5KzPJPcW9XYAxXBqVXd/jah7DJnmJunfUfaTmQyzgSqGGujlqZuNN+Vi8
G9qDkKvvJ3kYlhk7yriRMTfyaZTXP0TdYKwz9mS8C1x/uR/+lO/HbGMfiHGY
qm4N7tF/L85Rf0TN9+gqd8NJ9V/Lv6Oo/ru5HnjNuONcGa6X3BO/yP+gNHeX
3B0/yq+q7azdBYX0HeQy3IXarbgZ2Cz/xRfn7pP7Yi3Xj5vlGvq53vswhXuQ
y+eGyIMxjRvKLeWGxXOLWvm5eIccpx6O6vuQO4Az2oW5llil5rO47lg/cjV8
IO/F8Xjmck2sVPdxrBHtOnFf+vZkkmcSz6YNdzteVjeKe0b/tJhjzOBewq36
W+Qk54pz9o7nq39QOnk34x39AifiHVd3DZ417jnuVzW/YZe+RfJ0foI8ETO5
vtxc7i15C1ZzU7mF2Kl9kDuCJWryude5w/IPWCnPwWbugHwIT8uT1XaPdR/7
UqwdbjH3XTo5Xhx3QbyP2KP9BbcPi9RM59ZwO+KaMZ8bzz3LzZPnIo+7Obum
28sd0V7ugzyuS+xr6BD7Ep7gOsh3oq3cAoO5bnKP2DviXcHG7LV8jcVyZ0zM
nqMdJjnvDG4dt0p+CbO4O2Pf4VrLrfBYzHH2mjfJb+CJTDKvMb9L4vgxN/I4
PKW9FPP0DZLrxb1oN+KaoKXcCA/EfibfFM/POaZljxfPbXuM5/K49dxr8quY
zY3Irv0477J47lzDTLI/xj55Q7xHXJ14t7gGckPcIu+PfYK7xTt1M15U9y33
H9dUboIXuH1cQ+1G+Fnf+/Ku2BO0i3PFsEzdkLhf7hHHfxj3ZJLrW86NjTnB
Q/LbOMJlYn/B63J/DNc/IuY4nrO8CWn9OXifWyE/6TzzY39MJ2s71vgf8R20
3vqo643VaibHHqM/X90cDI9nlkmOE8fLjf00vj2xHuL9jPdP38C4B+yO9ch9
ioWO93KsQe1/08l7He/3NhzUPsWdjGeSSdZcrL1eck90l99FFee7CF/p2yxf
jDu0y6gpF9+u2DOc5xL3MUrdSJzgzqICN0IejvXZdbTW2JXGrYj5innBBm6d
vDbuWd1SnNE+i0/0vRhrI9ZMrLN0su/H/l9GXS3nWOj4C7BVXp5dv3G//8Xe
Ed+JeCbcN/L+mH95LFZys2O9xFowdgUudpyqOKxvp5otKCmXwl5ujfwd2snt
c5L9Lfa5Z2K+4l8lnfwMrcsk4+M4heSC2CAfjW+XdvWcZO+OPfxXFHEfnbiO
eMV1lMVV3GJ5EbbF/wcqcmPk0XG83OR7Ft+1BnJ9PM+VRk118+V52CIfVpfD
NZZvwpeZ5PsY38nmcjN8Ix+Kd5e7Ub4Bn8vVUNh9FcFtzlUpniP2af/NHcNT
zlEIU4yZmpN8++IbWIy7XHs6Ny3WhFwCV3Cz5Jl4I/79UJ17Us6LtSWfF/8h
3Fw5H2/lJt+p+F6VkUtjeW7yLYxvYln5fOyQy/FXGztAXoLtchFU4ybKE2L+
1W2N52nscffwT+yf8Szjv05/xZxkncR6KRz/WMaO5R7FKa4gV4kbL4/DRnlm
ds+OPXYj8rn/AYcda4M=
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0bkuBEAcB+Bx3+yue61jeQQ6UVkvIKEShYKOSmhEywsIClcI2UUrQiJ6
KuLYuEK01KLg25DMb76ZYmb+M5McmxqczAshTEt/fggn7C0I4YIjfOQcP7jG
H54xYlFS3otD6OAb2/nKNr6wlc9M8JEtfGCcWTbznk28ZSNv2MBr1vOKdayV
mERzxeb2V8On4TmfuMFLzvOUo8ywj6tMcJHf7jjLLCd4zGEuc4Az7OEwuxj7
Oy6YBluEwtw7FIWghXWd8sImS7jFUm6zjDss5y4ruMdKplnFDKu5zxoeMMJD
Rtkp3bm/cXiKSxziEcd5xxl+cYFxBa4wZZ7+/89fYnk2PQ==
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0UkuRFEUgOFbCiEGLIBoSlOdpkrf9yMxETYgGEkZYQXCxJwNCJbAAkRY
AmNCqlKim+F7Mfjz5eYNzrnvtq7vrBRiIYRdleMhPDg8V4ZQZG1VCD9Ms74i
hCW2cJs5zqmnJoRZZjnDDKeZ4hSTnGQnJ9jBcSY4xjaOsoUjbOYwmzjERg5y
QP3Kq1XHdmhggb92XGaJWT6yjvd8cZdr3vKS5zzlIY+4xX0ucovtXGOcC+xX
mxLRN3Xoqdp9ov/ErmgGk3xlikWmWWKGZWb5xm6+s4cf7OUn+/jFHL+Z57xW
o/l22YzO3OMGD3nAE57xgje8iuZ4x7vY/3v+AVqaNL8=
                "]]}, {
               Line[{2, 19, 36, 582, 53, 599, 70, 632, 87, 665, 104, 698, 121,
                 731, 138, 764, 155, 797, 172, 830, 189, 863, 206, 896, 223, 
                929, 240, 962, 257, 274}], 
               
               Line[{3, 20, 37, 584, 54, 603, 71, 636, 88, 669, 105, 702, 122,
                 735, 139, 768, 156, 801, 173, 834, 190, 867, 207, 900, 224, 
                933, 241, 966, 258, 275}], 
               
               Line[{1438, 1437, 1457, 1461, 1483, 587, 1503, 2097, 2246, 
                1522, 643, 1539, 2266, 1542, 1560, 2279, 1564, 1580, 2289, 
                1583, 1598, 775, 1612, 808, 1630, 2317, 1633, 1653, 2329, 
                1656, 1670, 2141, 2339, 1689, 2149, 2352, 1708, 2365, 1711, 
                1727, 1730, 1747}], 
               
               Line[{1439, 1440, 1458, 1465, 1484, 589, 1504, 614, 1523, 647, 
                1540, 2268, 1545, 1561, 2281, 1567, 1581, 2118, 2291, 1599, 
                779, 1613, 812, 1631, 2319, 1637, 1654, 2137, 2331, 1671, 
                2341, 1676, 1690, 2354, 1695, 1709, 2367, 1714, 1728, 1733, 
                1748}], 
               
               Line[{1441, 1443, 1460, 1469, 1486, 591, 1506, 618, 1524, 2104,
                 2259, 1541, 2270, 1549, 1563, 2283, 1571, 1582, 2293, 1589, 
                1600, 2124, 2302, 1614, 816, 1632, 2133, 2321, 1655, 2332, 
                1661, 1673, 2343, 1680, 1691, 2356, 1698, 1710, 2369, 1717, 
                1729, 1736, 1750}], 
               
               Line[{1442, 1446, 1462, 1473, 1487, 2095, 2241, 1507, 2099, 
                2250, 1525, 2105, 2261, 1543, 2110, 2272, 1565, 2284, 1574, 
                1584, 2119, 2295, 1601, 2125, 2303, 1615, 2130, 2311, 1634, 
                2323, 1644, 1657, 2138, 2334, 1674, 2345, 1683, 1692, 2152, 
                2358, 1712, 2371, 1720, 1731, 1739, 1751}], 
               
               Line[{1444, 1449, 1464, 1477, 1489, 2096, 2243, 1508, 2100, 
                2253, 1526, 2106, 2263, 1544, 2274, 1556, 1566, 2114, 2285, 
                1585, 2296, 1595, 1602, 2126, 2305, 1616, 2131, 2314, 1636, 
                2325, 1648, 1658, 2335, 1667, 1675, 2145, 2347, 1694, 2360, 
                1703, 1713, 2373, 1724, 1732, 1742, 1753}], 
               
               Line[{1445, 1455, 1466, 1481, 1490, 600, 1509, 1521, 2254, 
                1527, 666, 1546, 2276, 2111, 1568, 2286, 2115, 1586, 2297, 
                2120, 1603, 798, 1617, 1629, 2315, 1638, 2326, 2134, 1659, 
                2336, 2139, 1677, 2349, 2147, 1696, 1707, 2362, 1715, 2375, 
                2160, 1734, 1745, 1754}], 
               
               Line[{1447, 1456, 1468, 1482, 1492, 1502, 2244, 1511, 2255, 
                2101, 1529, 2264, 2107, 1548, 2277, 2112, 1570, 1579, 2287, 
                1588, 2298, 2121, 1605, 2306, 2127, 1619, 835, 1640, 1652, 
                2327, 1660, 2337, 2140, 1679, 1688, 2350, 1697, 2363, 2154, 
                1716, 2376, 2161, 1735, 1746, 1756}], 
               
               Line[{1448, 1459, 1470, 1485, 1493, 1505, 2245, 1512, 2256, 
                2102, 1530, 2265, 2108, 1550, 1562, 2278, 1572, 2288, 2116, 
                1590, 2299, 2122, 1606, 2307, 2128, 1620, 2316, 2132, 1641, 
                2328, 2135, 1662, 1672, 2338, 1681, 2351, 2148, 1699, 2364, 
                2155, 1718, 2377, 2162, 1737, 1749, 1757}], 
               
               Line[{1450, 1463, 1472, 1488, 1495, 2247, 2098, 1514, 2257, 
                2103, 1532, 2267, 2109, 1552, 2280, 2113, 1573, 2290, 2117, 
                1592, 2300, 2123, 1607, 2308, 2129, 1622, 1635, 2318, 1643, 
                2330, 2136, 1664, 2340, 2142, 1682, 1693, 2353, 1700, 2366, 
                2156, 1719, 2378, 2163, 1738, 1752, 1759}], 
               
               Line[{1451, 1467, 1474, 1491, 1496, 1510, 2248, 1515, 1528, 
                2258, 1533, 1547, 2269, 1553, 1569, 2282, 1575, 1587, 2292, 
                1593, 1604, 2301, 1608, 1618, 2309, 1623, 1639, 2320, 1645, 
                880, 1665, 1678, 2342, 1684, 2355, 2150, 1701, 2368, 2157, 
                1721, 2379, 2164, 1740, 1755, 1760}], 
               
               Line[{1452, 1471, 1476, 1494, 1498, 1513, 2249, 1517, 1531, 
                2260, 1535, 1551, 2271, 1555, 719, 1576, 1591, 2294, 1594, 
                785, 1609, 1621, 2310, 1625, 1642, 2322, 1647, 1663, 2333, 
                1666, 2344, 2143, 1685, 2357, 2151, 1702, 2370, 2158, 1723, 
                2380, 2165, 1741, 1758, 1762}], 
               
               Line[{1453, 1475, 1478, 1497, 1499, 1516, 2251, 1518, 1534, 
                2262, 1536, 1554, 2273, 1557, 723, 1577, 756, 1596, 789, 1610,
                 1624, 2312, 1626, 1646, 2324, 1649, 888, 1668, 2346, 2144, 
                1686, 2359, 2153, 1704, 1722, 2372, 1725, 2381, 2166, 1743, 
                1761, 1763}], 
               
               Line[{1454, 1479, 1480, 1500, 1501, 1519, 2242, 1520, 1537, 
                2252, 1538, 1558, 2275, 1559, 727, 1578, 760, 1597, 793, 1611,
                 1627, 2304, 1628, 1650, 2313, 1651, 892, 1669, 2348, 2146, 
                1687, 1705, 2361, 1706, 2374, 2159, 1726, 2382, 2167, 1744, 
                1764, 1765}], 
               
               Line[{291, 308, 325, 1011, 342, 1028, 359, 1061, 376, 1094, 
                393, 1127, 410, 1160, 427, 1193, 444, 1226, 461, 1259, 478, 
                1292, 495, 1325, 512, 1358, 529, 1391, 546, 563}], 
               
               Line[{292, 309, 326, 1013, 343, 1032, 360, 1065, 377, 1098, 
                394, 1131, 411, 1164, 428, 1197, 445, 1230, 462, 1263, 479, 
                1296, 496, 1329, 513, 1362, 530, 1395, 547, 564}], 
               
               Line[{1767, 1766, 1786, 1790, 1812, 1016, 1832, 2170, 2388, 
                1851, 1072, 1868, 2408, 1871, 1889, 2421, 1893, 1909, 2431, 
                1912, 1927, 1204, 1941, 1237, 1959, 2459, 1962, 1982, 2471, 
                1985, 1999, 2214, 2481, 2018, 2222, 2494, 2037, 2507, 2040, 
                2056, 2059, 2076}], 
               
               Line[{1768, 1769, 1787, 1794, 1813, 1018, 1833, 1043, 1852, 
                1076, 1869, 2410, 1874, 1890, 2423, 1896, 1910, 2191, 2433, 
                1928, 1208, 1942, 1241, 1960, 2461, 1966, 1983, 2210, 2473, 
                2000, 2483, 2005, 2019, 2496, 2024, 2038, 2509, 2043, 2057, 
                2062, 2077}], 
               
               Line[{1770, 1772, 1789, 1798, 1815, 1020, 1835, 1047, 1853, 
                2177, 2401, 1870, 2412, 1878, 1892, 2425, 1900, 1911, 2435, 
                1918, 1929, 2197, 2444, 1943, 1245, 1961, 2206, 2463, 1984, 
                2474, 1990, 2002, 2485, 2009, 2020, 2498, 2027, 2039, 2511, 
                2046, 2058, 2065, 2079}], 
               
               Line[{1771, 1775, 1791, 1802, 1816, 2168, 2383, 1836, 2172, 
                2392, 1854, 2178, 2403, 1872, 2183, 2414, 1894, 2426, 1903, 
                1913, 2192, 2437, 1930, 2198, 2445, 1944, 2203, 2453, 1963, 
                2465, 1973, 1986, 2211, 2476, 2003, 2487, 2012, 2021, 2225, 
                2500, 2041, 2513, 2049, 2060, 2068, 2080}], 
               
               Line[{1773, 1778, 1793, 1806, 1818, 2169, 2385, 1837, 2173, 
                2395, 1855, 2179, 2405, 1873, 2416, 1885, 1895, 2187, 2427, 
                1914, 2438, 1924, 1931, 2199, 2447, 1945, 2204, 2456, 1965, 
                2467, 1977, 1987, 2477, 1996, 2004, 2218, 2489, 2023, 2502, 
                2032, 2042, 2515, 2053, 2061, 2071, 2082}], 
               
               Line[{1774, 1784, 1795, 1810, 1819, 1029, 1838, 1850, 2396, 
                1856, 1095, 1875, 2418, 2184, 1897, 2428, 2188, 1915, 2439, 
                2193, 1932, 1227, 1946, 1958, 2457, 1967, 2468, 2207, 1988, 
                2478, 2212, 2006, 2491, 2220, 2025, 2036, 2504, 2044, 2517, 
                2233, 2063, 2074, 2083}], 
               
               Line[{1776, 1785, 1797, 1811, 1821, 1831, 2386, 1840, 2397, 
                2174, 1858, 2406, 2180, 1877, 2419, 2185, 1899, 1908, 2429, 
                1917, 2440, 2194, 1934, 2448, 2200, 1948, 1264, 1969, 1981, 
                2469, 1989, 2479, 2213, 2008, 2017, 2492, 2026, 2505, 2227, 
                2045, 2518, 2234, 2064, 2075, 2085}], 
               
               Line[{1777, 1788, 1799, 1814, 1822, 1834, 2387, 1841, 2398, 
                2175, 1859, 2407, 2181, 1879, 1891, 2420, 1901, 2430, 2189, 
                1919, 2441, 2195, 1935, 2449, 2201, 1949, 2458, 2205, 1970, 
                2470, 2208, 1991, 2001, 2480, 2010, 2493, 2221, 2028, 2506, 
                2228, 2047, 2519, 2235, 2066, 2078, 2086}], 
               
               Line[{1779, 1792, 1801, 1817, 1824, 2389, 2171, 1843, 2399, 
                2176, 1861, 2409, 2182, 1881, 2422, 2186, 1902, 2432, 2190, 
                1921, 2442, 2196, 1936, 2450, 2202, 1951, 1964, 2460, 1972, 
                2472, 2209, 1993, 2482, 2215, 2011, 2022, 2495, 2029, 2508, 
                2229, 2048, 2520, 2236, 2067, 2081, 2088}], 
               
               Line[{1780, 1796, 1803, 1820, 1825, 1839, 2390, 1844, 1857, 
                2400, 1862, 1876, 2411, 1882, 1898, 2424, 1904, 1916, 2434, 
                1922, 1933, 2443, 1937, 1947, 2451, 1952, 1968, 2462, 1974, 
                1309, 1994, 2007, 2484, 2013, 2497, 2223, 2030, 2510, 2230, 
                2050, 2521, 2237, 2069, 2084, 2089}], 
               
               Line[{1781, 1800, 1805, 1823, 1827, 1842, 2391, 1846, 1860, 
                2402, 1864, 1880, 2413, 1884, 1148, 1905, 1920, 2436, 1923, 
                1214, 1938, 1950, 2452, 1954, 1971, 2464, 1976, 1992, 2475, 
                1995, 2486, 2216, 2014, 2499, 2224, 2031, 2512, 2231, 2052, 
                2522, 2238, 2070, 2087, 2091}], 
               
               Line[{1782, 1804, 1807, 1826, 1828, 1845, 2393, 1847, 1863, 
                2404, 1865, 1883, 2415, 1886, 1152, 1906, 1185, 1925, 1218, 
                1939, 1953, 2454, 1955, 1975, 2466, 1978, 1317, 1997, 2488, 
                2217, 2015, 2501, 2226, 2033, 2051, 2514, 2054, 2523, 2239, 
                2072, 2090, 2092}], 
               
               Line[{1783, 1808, 1809, 1829, 1830, 1848, 2384, 1849, 1866, 
                2394, 1867, 1887, 2417, 1888, 1156, 1907, 1189, 1926, 1222, 
                1940, 1956, 2446, 1957, 1979, 2455, 1980, 1321, 1998, 2490, 
                2219, 2016, 2034, 2503, 2035, 2516, 2232, 2055, 2524, 2240, 
                2073, 2093, 2094}]}, {
               
               Line[{579, 2313, 859, 856, 855, 2324, 852, 2322, 851, 848, 
                2320, 847, 844, 843, 2318, 840, 839, 2316, 836, 835, 832, 831,
                 2315, 825, 2314, 824, 821, 820, 2311, 817, 816, 813, 812, 
                809, 808, 805, 804, 801, 800, 797, 795, 829}], 
               
               Line[{580, 2304, 826, 823, 2312, 822, 819, 2310, 818, 815, 
                2309, 814, 811, 810, 2308, 807, 806, 2307, 803, 802, 2306, 
                799, 798, 792, 2305, 791, 788, 2303, 787, 784, 783, 2302, 780,
                 779, 776, 775, 772, 771, 768, 767, 764, 762, 796}], 
               
               Line[{18, 19, 20, 21, 1457, 22, 1458, 23, 1460, 24, 1462, 25, 
                1464, 26, 1466, 27, 1468, 28, 1470, 29, 1472, 30, 1474, 31, 
                1476, 32, 1478, 33, 1480, 34}], 
               
               Line[{35, 36, 37, 38, 1483, 39, 1484, 40, 1486, 41, 1487, 42, 
                1489, 43, 1490, 44, 1492, 45, 1493, 46, 1495, 47, 1496, 48, 
                1498, 49, 1499, 50, 1501, 51}], 
               
               Line[{598, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 
                591, 592, 593, 2241, 594, 2243, 595, 596, 600, 601, 2244, 604,
                 605, 2245, 608, 609, 2247, 612, 613, 616, 2248, 617, 620, 
                2249, 621, 624, 2251, 625, 628, 2242, 629}], 
               
               Line[{631, 597, 599, 602, 603, 606, 607, 2246, 610, 611, 614, 
                615, 618, 619, 2250, 622, 623, 626, 2253, 627, 2254, 633, 634,
                 2255, 637, 638, 2256, 641, 642, 2257, 645, 646, 2258, 649, 
                650, 653, 2260, 654, 657, 2262, 658, 661, 2252, 662}], 
               
               Line[{664, 630, 632, 635, 636, 639, 640, 643, 644, 647, 648, 
                2259, 651, 652, 655, 2261, 656, 659, 2263, 660, 666, 667, 
                2264, 670, 671, 2265, 674, 675, 2267, 678, 679, 682, 2269, 
                683, 686, 2271, 687, 690, 2273, 691, 2275, 694, 695}], 
               
               Line[{697, 663, 665, 668, 669, 672, 673, 2266, 676, 677, 2268, 
                680, 681, 2270, 684, 685, 2272, 688, 689, 2274, 692, 693, 
                2276, 699, 700, 2277, 703, 704, 2278, 707, 708, 2280, 711, 
                712, 2282, 715, 716, 719, 720, 723, 724, 727, 728}], 
               
               Line[{730, 696, 698, 701, 702, 705, 706, 2279, 709, 710, 2281, 
                713, 714, 2283, 717, 718, 2284, 721, 722, 2285, 725, 726, 
                2286, 732, 733, 2287, 736, 737, 2288, 740, 741, 2290, 744, 
                745, 2292, 748, 749, 2294, 752, 753, 756, 757, 760, 761}], 
               
               Line[{763, 729, 731, 734, 735, 738, 739, 2289, 742, 743, 2291, 
                746, 747, 2293, 750, 751, 754, 2295, 755, 2296, 758, 759, 
                2297, 765, 766, 2298, 769, 770, 2299, 773, 774, 2300, 777, 
                778, 781, 2301, 782, 785, 786, 789, 790, 793, 794}], 
               
               Line[{827, 892, 889, 888, 885, 884, 2333, 881, 880, 877, 876, 
                2330, 873, 872, 2328, 869, 868, 2327, 865, 864, 2326, 858, 
                857, 2325, 854, 853, 2323, 850, 849, 2321, 846, 845, 2319, 
                842, 841, 2317, 838, 837, 834, 833, 830, 828, 862}], 
               
               Line[{860, 925, 2348, 922, 921, 2346, 918, 917, 2344, 914, 913,
                 2342, 910, 909, 2340, 906, 905, 2338, 902, 901, 2337, 898, 
                897, 2336, 891, 890, 2335, 887, 886, 2334, 883, 882, 2332, 
                879, 878, 2331, 875, 874, 2329, 871, 870, 867, 866, 863, 861, 
                895}], 
               
               Line[{893, 958, 2361, 955, 954, 2359, 951, 950, 2357, 947, 946,
                 2355, 943, 942, 2353, 939, 938, 2351, 935, 934, 2350, 931, 
                930, 2349, 924, 923, 2347, 920, 919, 2345, 916, 915, 2343, 
                912, 911, 2341, 908, 907, 2339, 904, 903, 900, 899, 896, 894, 
                928}], 
               
               Line[{926, 991, 2374, 988, 987, 2372, 984, 983, 2370, 980, 979,
                 2368, 976, 975, 2366, 972, 971, 2364, 968, 967, 2363, 964, 
                963, 2362, 957, 956, 2360, 953, 952, 2358, 949, 948, 2356, 
                945, 944, 2354, 941, 940, 2352, 937, 936, 933, 932, 929, 927, 
                961}], 
               
               Line[{959, 1007, 2382, 1006, 1005, 2381, 1004, 1003, 2380, 
                1002, 1001, 2379, 1000, 999, 2378, 998, 997, 2377, 996, 995, 
                2376, 994, 993, 2375, 990, 989, 2373, 986, 985, 2371, 982, 
                981, 2369, 978, 977, 2367, 974, 973, 2365, 970, 969, 966, 965,
                 962, 960, 992}], 
               
               Line[{1008, 2455, 1288, 1285, 1284, 2466, 1281, 2464, 1280, 
                1277, 2462, 1276, 1273, 1272, 2460, 1269, 1268, 2458, 1265, 
                1264, 1261, 1260, 2457, 1254, 2456, 1253, 1250, 1249, 2453, 
                1246, 1245, 1242, 1241, 1238, 1237, 1234, 1233, 1230, 1229, 
                1226, 1224, 1258}], 
               
               Line[{1009, 2446, 1255, 1252, 2454, 1251, 1248, 2452, 1247, 
                1244, 2451, 1243, 1240, 1239, 2450, 1236, 1235, 2449, 1232, 
                1231, 2448, 1228, 1227, 1221, 2447, 1220, 1217, 2445, 1216, 
                1213, 1212, 2444, 1209, 1208, 1205, 1204, 1201, 1200, 1197, 
                1196, 1193, 1191, 1225}], 
               
               Line[{307, 308, 309, 310, 1786, 311, 1787, 312, 1789, 313, 
                1791, 314, 1793, 315, 1795, 316, 1797, 317, 1799, 318, 1801, 
                319, 1803, 320, 1805, 321, 1807, 322, 1809, 323}], 
               
               Line[{324, 325, 326, 327, 1812, 328, 1813, 329, 1815, 330, 
                1816, 331, 1818, 332, 1819, 333, 1821, 334, 1822, 335, 1824, 
                336, 1825, 337, 1827, 338, 1828, 339, 1830, 340}], 
               
               Line[{1027, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 
                1018, 1019, 1020, 1021, 1022, 2383, 1023, 2385, 1024, 1025, 
                1029, 1030, 2386, 1033, 1034, 2387, 1037, 1038, 2389, 1041, 
                1042, 1045, 2390, 1046, 1049, 2391, 1050, 1053, 2393, 1054, 
                1057, 2384, 1058}], 
               
               Line[{1060, 1026, 1028, 1031, 1032, 1035, 1036, 2388, 1039, 
                1040, 1043, 1044, 1047, 1048, 2392, 1051, 1052, 1055, 2395, 
                1056, 2396, 1062, 1063, 2397, 1066, 1067, 2398, 1070, 1071, 
                2399, 1074, 1075, 2400, 1078, 1079, 1082, 2402, 1083, 1086, 
                2404, 1087, 1090, 2394, 1091}], 
               
               Line[{1093, 1059, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 
                1076, 1077, 2401, 1080, 1081, 1084, 2403, 1085, 1088, 2405, 
                1089, 1095, 1096, 2406, 1099, 1100, 2407, 1103, 1104, 2409, 
                1107, 1108, 1111, 2411, 1112, 1115, 2413, 1116, 1119, 2415, 
                1120, 2417, 1123, 1124}], 
               
               Line[{1126, 1092, 1094, 1097, 1098, 1101, 1102, 2408, 1105, 
                1106, 2410, 1109, 1110, 2412, 1113, 1114, 2414, 1117, 1118, 
                2416, 1121, 1122, 2418, 1128, 1129, 2419, 1132, 1133, 2420, 
                1136, 1137, 2422, 1140, 1141, 2424, 1144, 1145, 1148, 1149, 
                1152, 1153, 1156, 1157}], 
               
               Line[{1159, 1125, 1127, 1130, 1131, 1134, 1135, 2421, 1138, 
                1139, 2423, 1142, 1143, 2425, 1146, 1147, 2426, 1150, 1151, 
                2427, 1154, 1155, 2428, 1161, 1162, 2429, 1165, 1166, 2430, 
                1169, 1170, 2432, 1173, 1174, 2434, 1177, 1178, 2436, 1181, 
                1182, 1185, 1186, 1189, 1190}], 
               
               Line[{1192, 1158, 1160, 1163, 1164, 1167, 1168, 2431, 1171, 
                1172, 2433, 1175, 1176, 2435, 1179, 1180, 1183, 2437, 1184, 
                2438, 1187, 1188, 2439, 1194, 1195, 2440, 1198, 1199, 2441, 
                1202, 1203, 2442, 1206, 1207, 1210, 2443, 1211, 1214, 1215, 
                1218, 1219, 1222, 1223}], 
               
               Line[{1256, 1321, 1318, 1317, 1314, 1313, 2475, 1310, 1309, 
                1306, 1305, 2472, 1302, 1301, 2470, 1298, 1297, 2469, 1294, 
                1293, 2468, 1287, 1286, 2467, 1283, 1282, 2465, 1279, 1278, 
                2463, 1275, 1274, 2461, 1271, 1270, 2459, 1267, 1266, 1263, 
                1262, 1259, 1257, 1291}], 
               
               Line[{1289, 1354, 2490, 1351, 1350, 2488, 1347, 1346, 2486, 
                1343, 1342, 2484, 1339, 1338, 2482, 1335, 1334, 2480, 1331, 
                1330, 2479, 1327, 1326, 2478, 1320, 1319, 2477, 1316, 1315, 
                2476, 1312, 1311, 2474, 1308, 1307, 2473, 1304, 1303, 2471, 
                1300, 1299, 1296, 1295, 1292, 1290, 1324}], 
               Line[{1322, 1387, 2503, 1384, 1383, 2501, 1380, 1379, 2499, 
                1376, 1375, 2497, 1372, 1371, 2495, 1368, 1367, 2493, 1364, 
                1363, 2492, 1360, 1359, 2491, 1353, 1352, 2489, 1349, 1348, 
                2487, 1345, 1344, 2485, 1341, 1340, 2483, 1337, 1336, 2481, 
                1333, 1332, 1329, 1328, 1325, 1323, 1357}], 
               
               Line[{1355, 1420, 2516, 1417, 1416, 2514, 1413, 1412, 2512, 
                1409, 1408, 2510, 1405, 1404, 2508, 1401, 1400, 2506, 1397, 
                1396, 2505, 1393, 1392, 2504, 1386, 1385, 2502, 1382, 1381, 
                2500, 1378, 1377, 2498, 1374, 1373, 2496, 1370, 1369, 2494, 
                1366, 1365, 1362, 1361, 1358, 1356, 1390}], 
               
               Line[{1388, 1436, 2524, 1435, 1434, 2523, 1433, 1432, 2522, 
                1431, 1430, 2521, 1429, 1428, 2520, 1427, 1426, 2519, 1425, 
                1424, 2518, 1423, 1422, 2517, 1419, 1418, 2515, 1415, 1414, 
                2513, 1411, 1410, 2511, 1407, 1406, 2509, 1403, 1402, 2507, 
                1399, 1398, 1395, 1394, 1391, 1389, 
                1421}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
+6L8vk1F+WCCKB/cTuVjJcoT24jyRLk8qfyRyh/l8qf6AqovkOuL6hfURP2C
XL/0PUB78T2A/D10tUw/+HZjFtRVK5ozYt5NKLK4X4VS//NreqlLybxkWPHP
j4Ubs2/AysoTyasflMEbvVf1Nd+5Yf9hTp8uJeRA50kBn0YckuZRH4o92phn
4NxbTl1G7rwEe+xmpQ08rpC/f1wrvn+Qv39n0V7QTbQXlNvLe9G+8KtoXyi3
L2qPOEa0R5TbY+Ze14p6G69hwtpJU/u0KMCpsc4RQ/eVwdDZDTodcsrFrwZv
1i21zsPfX3t8MKoog0zRP+A70T+g3D8YiP4Eg0R/gnJ/MkT0P0j9D8r9D/VX
QP0VyP0V9W9A/RvI/dtX0R8C9Ycg94d9Rf8JzqL/hErqP4NyzV50tvXH8NIv
l3XcMqHexpPl+yIV8NttY6bqiRyceXXs8OjjcdAZ5n+LtpXmyaI/xz5n/+3P
Ue7Pqf/HMtH/Yzvq/z3EeIHdxHiB8nhB4wsGivEF5fGFxiP8LcYjlMcjezF+
obcYv1Aevzr3TNjy6F4eHtYaOrN1cjIu2GLWLkRaNyX7qRx5n5iBhhbb9Rcc
SsDSMPOC09L7mm/+dvNmYiAunO/jXPfuUvy2zvPkBKk8y69POr7o3TT4M6Hz
iTm/POH7/WOrekjzq3divAYar0Eer2l8BxrfQR7fk05dGed91xdGur/Qntg6
A4r3m5+fdUkBc4sNjh5ShOIb0/ruU5pGw7SG5R4zpXlyj5DV7jl7EO8vz6k/
qG0IvOuy5o6X1L62eFUVnWudi4t3/nTcdqYPPjB6Fd79oNQep+zVnfDyKjZJ
m2b5sHcgOq4zfpM+WBrfA0ftPtL+Jp7ID9s4Y2EMnvEyGxRVUgaxjYsqQ2cU
4a5lv0Yu35+IzwaNGnnof+v6inN/dNvewnqjrdwKbyJ6BZm0iF5fBrPFfAzn
ifkYyvOxSDF/ww1i/oby/O2rmO9hhpjvoTzfyxbzQ5wi5ocozw8Htn2p/22/
K1rGPHmkL5Xn06yxFZrSvD3CQmN6rQcnwBmcnE02x8C5Gc1iPkvrILcdrdsv
bRAEdWonaU6Ji4X6kQGeetK6foeY30IzMb8FeX7rIebDcFDMh0GeDzu3HjRk
17JgPOC9ukGrmV7Q1HHOCYNvCqjUDGveplEsjjhb1fTRygDUrXPc4aJUL6C5
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
7eSMdT7OdgiY5AnRXrZ5PaR5i/PRiMw7o45j3YqUfo6zTkJqzCenTn+l8my3
7eiUeTY4LOr65KhzdlBx0mlbgTTPXF9vfl7U9V1Qd4vqgZKrq3CQ0V9flOK3
pnyZ8y3pOFjUVltxYs1BPD8/aX+0pHM69EztX2dPw51P/RtkVrjhk9iDMztI
f1dz59Mex7cEgKmPXeDmZf7YRctQZ77Un+yZODGv7x1PaKv3olmG0Xn0q7C5
miSt3ye3H5d40fA0/Jj8vdnxwGgsA5+3bz5K37lTzNq4B7ZYd/26na0SE9Ak
raDRypcK2GTe+Be880Df/QaK0gWp+CVjQvPPUnt8v252rauuifClWHfl7b7+
MGLUmnm20rzCsI35iNPSOvaM6yiDBttDweKxqeKypFMccSVkfaMI+LU8+rWV
bihELZljkC/NAzfve7MqLzoI1DVjR6VVh4DOwYTYJ9K6YwPunVV7+jnIqqf1
+x/VEPg51XFhmlQvxz+PjNmvEgpX980/0O5AEJQ5VZtWSb8PeHvt09s1IXDP
aLfW8OpzMMfcvHV96fcWt/1O1h4VCsPPGtcKuuQNZxbGut+Uvv/xK23Lr+2J
gfdRK3J2h3tC6zPDfNWl78GiclSvIwtjYEn4ku1el45A0Pojebuk8gn/9nXn
lJQEuORe0sFs4hZQicrqM1d6r9XHvgyZ6JQEfedENLjd8ABaVi2a9PCxAq4t
HvHcZXYS+H88HDY37RyGror9ZSn1M0bw+9fTU1Ew3nR8stX3GIyZfe6TrvT7
Va29bqsvdoXFtfa2+BWQhkf+6aawkdbd15tZzIrV9MRfAyZahSsyceY5lWk7
pfVdtzjvVXpGAZgYs1E7TScbnz85WvzeRyqHMW936K1Mho4tevTbsMAdMrbq
drSQ/u6GcbWMJ69JhpA1a93StfxgttGd0NPSemSdQ52zrSJSYPKb67fb2QTC
gTWas3SkfvK75yf7HnHJ8LjDak1noxBwNd1b55AUn1zeYGL3hRdhwZ4ei3e2
CIV2aS1WuErfQ0Rmu7Nv7qfCX787wx+MC4WRzWeczstUQOZ3100Gt1NB77RG
rwG+wVBxtvGXh1L/+etPHdeJr1LhSY8n2TdNA2Du48ha16V19OrPmmt+pSL8
Ltqt9b7aH9LXte0Ze0laD+7rqnX6TwZYq60JLFp8Fj5MvjndP05aT5X2tX4N
mXBhQPDmP42sYf7xDlojpHHq6JROWi2+pUKfLW+OPDrqholbJpWsldYLtZZ4
LbRpHw4Ln44Jna2Wjtr79ZNe/U/fK/OQqttwqLPDKejCy0z8rBVT7h+lgKil
Y3Ljp/mhw8/c4yNsc7F7d7XkuzulfsYGrN7dPIZb9Jbm9CzOwtlBhzvWk+YV
mX3q7Rjuagdb8cZTrSfp2OdJkKK1NN7hSJNW1l0TIHfrteo8q7Ngt3jt7J7P
FdDyueqEHdJ69nmdcru2ncPAufeR58PuSeudfTtmVy66BJkF9zulzg+FH8PM
rL/kSuPFgMVzYw+nwZ3qnP1e+lHQbUZW7x/SuHNg+QDNpLAM6BU0pX27VtHg
tzLoxmdpPpOQ3+z7ebss6DzqVcpelSjYUzbogZo0X1pRqp563+QyqG7Q7XF9
WST8+hTx2umoND/ftOF5cLccGNbUus4ImxCwTBsaUVuaZ647ZVr5ZJ20Hnwe
YLcCg2HO9MFzuxxQgOl40z6vUy7DMu/Rf3obHYO80KH6mq4KqG6Y2NylAKE4
eeS4Q79Ooe2h87lPpXlRUI8BP48Oi4abI9aPVfFJQ0t7v2/rkqVx079FE3V/
D3B4/C65fVIuttF9abzIXgH2thPbv3zrB8v++q94YpWLjedN6lwulb/L+l/D
+hiGwLC/HU1drmbikLhYu17npfGisdqDL7uSYLvdnpLxfxNQRbHreh1pHmJw
yjdD4XsJ0sYe9ugbEIsbl4x9Mf2i1L/1jXq3bagHTD7cMiNKMwqcjy9eYiH1
J/37xunFrzkACUcNzi8pjYeSrjF/h0jzgQcNM6+ddzgPYcWqqh13xcOJD3VW
NpTmz6scPHtMfhwFW3IOtiiS+oPOIwJfTfnfeaoDW9q67IyH4Mvji25Js5/f
C8cObiytp0K/Oapn90So1a7BeT3VBJh82W+wgfT8U77a7Gn6KAP0k+PKfEri
YWjkvN1tpXZtrvWnTk/XbKi1+edBC8M4OOytcOl9WJq3N59xrLRdPuChoqD6
j6Kg9sDxKdOlefjxbXYrX+7MhomTSy1d5kejpW15gvMJaf3uZL9ijkYCPA4L
t+nomol1TFYmTnaTnsehx7ULt8Jh/5kOps0u5OLb7NqHW9kqYND4/gU/HyRC
yPfFJV+c0/Dhr6cWBiEKSMkwMx7cPAXiuoZvsk3JwIFB83o2c1HAgvoRHnmz
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
3yKfyB3mE6lvIHwia5lPRFm8C/ksFjKfRSHVS39WLzr0+8Xs9+XkT5nH9HPI
n7KL/CmH6HxLb9KxZDoXyN/RnPk7RpKf5RL5WdqSn8WQ4hksHkM6LZjOBfKJ
3GQ+ESvyxbhwXwzFT7H4FOYrySBfiSnFm7L4etLxYDqW5LtpR74be/LdzFCi
o2ImfCt6zLeygvl3ZJ2LzL+jT/6dvTOETk+mk0D+FzfyvzjR+a5LpGPOdBaT
D+gD8wFtJb/Mc+aX2UbxaBZXpiP7iZ4xP9Fe0hnGdGaRH6cf8+Nok85TpmNL
vqT2zJfE/S+t6LzfOvIrBTO/kj35YloxX8wV8gENIB+QBvmACik+hMVlf01b
pjOG/DX1yV9zhPw110lnONNxJZ/Rb8uaPiMn8uPsZH4cOb6bxU+Tzl+mc4z8
SqHMr3RUib4b+X2OMr/PcSW+p2zyPSH5nozI9xROOgeYzhXyDQ1mvqEs8kn1
Yz4pOd6fxencKfgxn9E3igexeCbp9GU648iHVb9WTR/WD9IJZzoR5GOyIh+T
Pp2DNSSdOrX+bz/X3n41/VwXSMeG+aHmkR9qGvmhrtD52/Gkk9G3pk5f8oVN
Jl9YEPnC7Ml/lEX+I3l896L2Ysfai0qW8CW9YL6k+Uqe5z75s1Yxf9Y38jc9
YzqGc4W/yY35mx6Qzhqm04B8Xn7M53WTdE4xnafkkypJrOmTUqbTg/xir8kv
do38Yl9IpzbzWx0jv1Ue+a2CyW8l67xiOm7kO+vPfGenSOcm822NJN+WK/Nt
nSKdvkznEPnXljP/miHpuDOdLeT/Ok3+ryd0ft6BdKYynQbkgzMiH5wO+eAW
kF+sgvxih+h8/kIWd6B4HdKZxnRKyU/Xlvx0H8lPt4R0fjCdgeRH8yM/2h3y
C4wxFf67TuS/60z+O1Py5XVkcWPyf9kx/9cOai8ZrL00JF9Yf+YLG6TkedzJ
H9eT/HEDye/QmXxkbuQju0W+D12Kn2ZxWacL0zlNPjsF+exkn8UI0gliOsHk
U7tJPjU/8qHIvjwVw201fHlb5HjPmnHZ73aXdM6Szl7yu00lv1s++d02yzov
a/r+npDvT498fzfJ9yf75kyZzlvyzaWQb86RfHOR5BPcQj7BePIJ+lB8K4vL
/rt0ptON/HcG5L/7S36f46Szm+ncLxM+xH+YD7EH6QDT+Ug+vi/k49Mhn1Fj
8jMeZjovyM8YQ37G1eTfOUG+P/IxwR/yMZG/CU4zP+A7JTrbyRc5hnyRoeQb
+rtQ+O/Smf9uPrWXfay9LCVfnjr58paTj0x+Hmf2nPnkTzRm/sQVpNOc6dQh
f1808/c1JT9jOvMzqlP8Mo+TTjzTWUc+wXDmE6xPOleYzj494ZdUJb/kVvJL
2pJOFNOJJ7/hE/Ib/iC/Yf8+QqcR8132JN/lDvJdWpHv0oH8iXWZP/Gokngk
+TTdyadpRz7NFIqfZvFjSvyPKgOE/3Eh8z+mkd+zLfk9l5O/L5viWixeW4nO
ZOajNCFfZC7ptGd+UlPyk9ZjftKppFMdVtOPWevffebcUeL/5FHyvvNM0lFj
OvnkS/UnX+pk8jnK/kc38j/K8TJqL7GsvZiRL1KVfJEtSV88RxY9z8n/9sF7
kD+0Ujw/mtLzzyGdusxfWUD+ynbMX6lLOlVMZzn5TLXIZ3qQfKaFSnya3ZlP
8xb5NNeRTifSOUA6LcivOo/8qlnkV9VR4vdUnSH8niuZ37OdEt/rYfK9FpLv
VZd8r3Vn/N++0SPkG9Un32gX8o0eYf5ZWceG/LNJzD/7inymq5jP9CXFbVh8
vRIfbjPy4SYzH24J6VgxnVTysfqQj/U19ZNNSCeR6awjP682+Xnl/hNJZyXp
lJDOUfLDniA/bDX1z2tIpx3T0SZf8B3mCz5C/tOJ5D+Vx5FMai/OrL18J19q
EvOlHqfn8aLnkceLN8yfK4+bP0knhenMIH+rK/O3viOdb0ynO/l8x5PPVx6v
j5Ef9gLzw8rxKBbXUaKTTX7hi+QXnkZ+YRclOl/Ib7uY+W1l33EK0xlOvuMf
zHf8g3TmMx1b8u2qGNb07cr+5W9MJ4/8y5/JvyzP9zbLOktr6riQ//cu8/9m
kc5HpjOVfNDJzAftRn5hDfILy/Ne2UesxeJjSSeS6ViRn3ot81MTvwJ1mR95
KPmRg5kfeQLpmDMd2WfqQD5TeR19n/y/wPy/sl/biLWXAeQL/km+YBPyBVuS
D/oP80FbUFxlWs34WNL5ynRakr/4B/mLS8lfLPus/zL93eSzPks+68e0TtQi
nQqms5Z8yrVmCZ/yQ/IpE28EfZlOV/JrnyS/9kLya8t+Z5WVNf3OGeR3/pha
0++cRv7uyeTvfk/+7ksUn8Ti+aSjynzTu8k37UC+aXfyTaeQzjims5z840sX
1PSPyz7rDcxnHU/x7Sw+n3QymA9d5Zrwob9nPnRZZzfTOU4+blXm475JvvU8
5lt/QvErLC7rNGI6i8gPvoT5wd+Qzi2mM4p8vreZz/cU+a/9mP/6ObUXA9Ze
fpAvuzX5svuQL9ucnseCPU8C+dN3M3/6YPJx72Q+bkOKH2ZxlcfCz/6K+dmJ
a4QvWNyYdCKYTjr5xNuTT/we5Rspr4iFTKeI/PKbmV+e8p/YlfnNn5LffCvz
m1N+FdcxnQ3kux/FfPfDyZ+ezPzpoyiexuIGpDOb6awl//4h5t83IJ1MpuOv
xP++h/z+lbWE378B+f0dKV7N4i7kl/+H/PJq5Jc/RfGjPE46tWrX1NlCPIGG
jCdwknSOMJ2F5MffTn78LrR/YUc6TZjOX/JZZzCfdSL538uY/30LtZciai/N
qL1cJV/8e+aLN6fnWc34AC+ID1CrY00+gC/56CczH30wxSew+BXS2cB0xhwX
nAF74gzI+1ARpDOD6XQhn34r5tOPOSW4BF2JS/CXuATNiVfQj8Ubkq/fh/n6
m1Lcn8XXk44x02lE3AMbxj1oqUTnFHEDjjJuQAPiJDgxToIGxV1Z3Jl0HJlO
tzjBH5jD+ANdSOcU02lMHIYkzmEgHROmk0EcAyvGMZB5DilMh/adYS7jORgS
96DcvCb3wJziv1lc1pnFdLaTz/0T87m7EWdAk3EGIqi93GXtReYSdGS/P0bP
04fxGTyJzxDB+Ay+pKPNdIhviW+Ib2BIfANP4jl0ZTyHsxTvxeJHSOc901lG
nIRE4iSYEichmHT6Mh0N4kUUES9iGvEiDhJXoTtxFZoTV8Gd4t0Yb6EW8SUe
M75EfSXciSOk05np6xG3YTJxG8qJ29CQdF4xnVTiVyxm/IqZpNOL6fgR/0Gb
8R/SlehcJw7GKMbB2EK8iHDiRcwkXsROiieweD7p9GU67Yin0YfxNPaRTjbj
UVwlHsUn4lG0IR6FRgMxLjxn48Je4gx4M86AMv6DFfE6vhCvI4Z4HXeICxHP
uBCdiIPxhjgYU4mD0ZXiZSx+l3QSmU4h8SUCGF+iG+l8ZjqdibORR5wNmXMb
QTp+TKeQOBU/iFOhS5yKbqRTyHQeEq+jBeN13CGdUqbzvbvgXbjr1eRdPCCd
5kwnjrgfcYz7UU06D5lOd+Jm5DJuRizpxDCdQOKHlDJ+SG/Suc90XIi/4Uj8
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
5Xyiiv8xJw2M8OekATcnzWecg/tcUfK5HsBTR8g5t+TzviCf9y3e/2l5/zOW
jvztyNQFgewmM6tenr4rkLxgUqWlS/677+PR7/P3a3TZHnnWBNrMunD16TkZ
gY77mh672umKFxtxrsSdjFVe18HDT7XNTglMja4+qv7RK94gnv/f8vwzeHwn
efxivt+r8v1eOdAmT+NXNnmjkooWiq+3PjAsokOtSb//OzkAH1dG+LiycI7n
hHMsavB6I+HXFgm/tpznLyLPPx6eq2WFYJ7rIHxWY/isp+Gz5sNnPRgQzGfN
gsNKEA7r4yifLyspfNlNeKVVwiuth1caKrzSUYMzKgwvs0x4mRpwQ2eEG/qT
v2/U+15eNwLOZTmcy3f0iukne5XhPlw/eTR8yo1vg/kU9gh7ucLXzIHLiBMu
I/9Kn6c4JDxFdC2fmygm3MRUuJJewpXkC/N5hL7CI5RumlSiadK2yOzpSzKn
L5n2MJ8Jhy+4x/56xynEwBdUFL6gvMEXjIOPyC98xEn6/MOkz6970t2+dWtv
uOvnt9J+Pn3yL6RPHnLJf91IXncCr+v2UNeVnrm1N3kMvfcNh4N7771kP6/r
IfP/c2C39Gz30B/uJv3hXfSoS0uPOpFe9DjpRXejTztY+rQp9Es7Vgjul26j
J1xbesIf0QvtJL3QKvRd46Xv6vZUbpW+6wT6wKOlD1zR2DuZQH8yXPqTG+iF
1pNeaAn6sc9IP7ao0QsNGHsJv6IfW1v6sRnGnsEa9CGvSR+yhrH/zvUeixl7
6zZKv3E5PcYs6TE+Ty8xXXqJ0+n7tZK+XxJ9v+HS95tHr2+Q0es7KL0+1987
Jv29SPp7laW/l4+9ZiNkr1lXelz9pMc1mfn4LZmPn6LnMPjT4J5DUWNeP4P5
dabMr//C8xeQPV89mOfWk3luf+aznWU+u4r57HKZz77KHLahzGHnM1/eL/Pl
Lcwra8q88oaxR+ZJY87o5onzZZ44nblhXZkbZvC6deV1hxj7ONw8q5/MfVYa
+yDw3HpNZb7m9hqkylwmlXlKtsxTVhle/S3MldbIXKkO84hNMo/IPBU39ey0
hMgukZm/NvhlwcO/a7MMv3pr5gufGF50nS9kGvOR84YPXD3eA8nzuxp+7Dbk
8+Hiow4jT54meXJIXv91m8vrOk/yXMmZnR84n+TALvfOkNx7iPhjXQ7J/D1Q
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
86ljRr+0sTGf6sl86rbMp/4DSnCzMA==
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0., 0.49523678159929424`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10}, "numberOfMasses" -> 1, 
           "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{0.07669649888473705, 
            0.9970544855015816}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {30, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.33472803347280333`, 
            0.7949790794979079}, {0.5439330543933054, -0.04184100418410042}}, 
           "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
           "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
           "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}},
            "mPosFirstCell" -> {{0.9, 0.7}}, 
           "pointsDataTable" -> {{{-1.2000000000000002`, -2.7}, {
            0.7, -1.9000000000000001`}, {
            2.6, -1.1}, {-1.1, -1.4000000000000001`}, {
            0.8, -0.6000000000000001}, {2.6999999999999997`, 
            0.19999999999999996`}, {-0.9999999999999999, \
-0.10000000000000009`}, {0.9, 0.7}, {2.8, 1.5}, {-0.8999999999999998, 1.2}, {
            1., 2.}, {2.9, 2.8}, {-0.7999999999999999, 2.5}, {1.1, 3.3}}}, 
           "lineTable" -> {{
              Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
              Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
              Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
              Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
              Line[{{-3., -39.}, {3., 39.}}], 
              Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
              Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
              Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
              Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
              Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
              
              Line[{{-10.5, -40.900000000000006`}, {
               4.699999999999999, -34.5}}], 
              
              Line[{{-10.4, -39.6}, {
               4.799999999999999, -33.199999999999996`}}], 
              
              Line[{{-10.3, -38.300000000000004`}, {
               4.8999999999999995`, -31.900000000000002`}}], 
              Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
              Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
              
              Line[{{-10., -34.400000000000006`}, {
               5.199999999999999, -28.000000000000004`}}], 
              
              Line[{{-9.9, -33.1}, {
               5.299999999999999, -26.700000000000003`}}], 
              
              Line[{{-9.8, -31.8}, {
               5.3999999999999995`, -25.400000000000002`}}], 
              Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
              Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
              Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
              Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
              
              Line[{{-9.3, -25.3}, {
               5.8999999999999995`, -18.900000000000002`}}], 
              Line[{{-9.2, -24.}, {6., -17.6}}], 
              Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
              Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
              Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
              
              Line[{{-8.8, -18.8}, {
               6.3999999999999995`, -12.400000000000002`}}], 
              Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
              Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
              Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
              Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
              Line[{{-8.299999999999999, -12.3}, {
               6.8999999999999995`, -5.8999999999999995`}}], 
              Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
              Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
              Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
              
              Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
               7.3, -0.7000000000000002}}], 
              
              Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
               0.6000000000000001}}], 
              Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
              
              Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
               5.800000000000001}}], 
              
              Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
               7.1000000000000005`}}], 
              Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
              Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
              Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
              
              Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
               8.299999999999999, 12.3}}], 
              Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
              Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
              Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
              Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
              
              Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 
               18.8}}], 
              Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
              Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
              Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
              Line[{{-6., 17.6}, {9.2, 24.}}], 
              
              Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 
               25.3}}], 
              Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
              Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
              Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
              Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
              
              Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 
               31.8}}], 
              Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
              
              Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
               34.400000000000006`}}], 
              Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
              Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
              
              Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
               38.300000000000004`}}], 
              Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
              Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
              Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{}}, {{{
             1, 1, {1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
              0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {-1, 0}, 0.25, 1.7000000000000002`, {0.9, 0.7}, {
              0.8, -0.6000000000000001}, {{0.005882352941176467, 
              0.0764705882352941}, {0.0764705882352941, 
              0.9941176470588234}}}, {
             1, 1, {1, -1}, 0.25, 3.4899999999999993`, {0.9, 
              0.7}, {-0.8999999999999998, 1.2}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {-1, 1}, 0.25, 3.4899999999999993`, {0.9, 0.7}, {
              2.6999999999999997`, 0.19999999999999996`}, {{
              0.9283667621776504, -0.25787965616045844`}, \
{-0.25787965616045844`, 0.07163323782234958}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, 1}, 0.25, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
              0.4756242568370988, 0.49940546967895366`}, {
              0.49940546967895366`, 0.5243757431629013}}}, {
             1, 1, {-1, -1}, 0.25, 8.41, {0.9, 
              0.7}, {-1.1, -1.4000000000000001`}, {{0.4756242568370987, 
              0.49940546967895366`}, {0.49940546967895366`, 
              0.5243757431629014}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left, 
        SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{907., {288., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$144]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$144]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$144 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->276958259],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bInitDefaults$$ = 
    False, $CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    True, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 1.105}, {{
        0.5085673025355859, -0.49992659593910754`}, {-0.49992659593910754`, 
        0.4914326974644139}}}, {
       1, 4, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
        1.3650000000000002`}, {{0.07111394909689736, 0.257015087768678}, {
        0.257015087768678, 0.9288860509031026}}}, {
       1, 3, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
        1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
        0.5000000000000003}}}}, {{
       2, 1, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 1.105}, {{
        0.5085673025355859, -0.49992659593910754`}, {-0.49992659593910754`, 
        0.4914326974644139}}}, {
       2, 4, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
        1.3650000000000002`}, {{0.8401195792023005, 0.3664951184439569}, {
        0.3664951184439569, 0.15988042079769943`}}}, {
       2, 3, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
        1.2400000000000002`}, {{0.9802872597830895, 0.13901132360369467`}, {
        0.13901132360369467`, 0.01971274021691052}}}}, {{
       3, 4, {0, 0}, 0.25, 0.1423609999999999, {1.44, 1.2400000000000002`}, {
        1.084, 1.3650000000000002`}, {{
        0.8902438167756618, -0.31258560982291506`}, {-0.31258560982291506`, 
        0.1097561832243382}}}, {
       3, 1, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
        1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
        0.5000000000000003}}}, {
       3, 2, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
        1.2400000000000002`}, {{0.9802872597830895, 0.13901132360369467`}, {
        0.13901132360369467`, 0.01971274021691052}}}}, {{
       4, 3, {0, 0}, 0.25, 0.1423609999999999, {1.44, 1.2400000000000002`}, {
        1.084, 1.3650000000000002`}, {{
        0.8902438167756618, -0.31258560982291506`}, {-0.31258560982291506`, 
        0.1097561832243382}}}, {
       4, 2, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
        1.3650000000000002`}, {{0.8401195792023005, 0.3664951184439569}, {
        0.3664951184439569, 0.15988042079769943`}}}, {
       4, 1, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
        1.3650000000000002`}, {{0.07111394909689736, 0.257015087768678}, {
        0.257015087768678, 0.9288860509031026}}}}}, {{{
       1, 4, {-1, 0}, 0.25, 0.6289999999999998, {0.9, 0.7}, {
        1.4300000000000002`, 0.11000000000000032`}, {{
        0.4465818759936411, -0.49713831478537357`}, {-0.49713831478537357`, 
        0.5534181240063588}}}, {
       1, 2, {-1, 0}, 0.25, 0.7268559999999998, {0.9, 0.7}, {
        0.8340000000000001, -0.1499999999999999}, {{0.0059929339511540025`, 
        0.07718172512849858}, {0.07718172512849858, 0.994007066048846}}}, {
       1, 3, {-1, 0}, 0.25, 1.2962209999999996`, {0.9, 0.7}, {
        1.786, -0.01499999999999968}, {{
        0.6056035197701628, -0.48872067340368647`}, {-0.48872067340368647`, 
        0.3943964802298371}}}, {
       1, 1, {1, 0}, 0.25, 1.6947409999999998`, {0.9, 0.7}, {
        0.5539999999999999, 1.9549999999999998`}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       1, 1, {-1, 0}, 0.25, 1.6947409999999996`, {0.9, 0.7}, {
        1.246, -0.5549999999999999}, {{
        0.07063970246781073, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321893}}}, {
       1, 3, {0, -1}, 0.25, 1.9171999999999996`, {0.9, 
        0.7}, {-0.45999999999999996`, 0.44000000000000017`}, {{
        0.9647402461923639, 0.18443563530148122`}, {0.18443563530148122`, 
        0.03525975380763608}}}, {
       1, 4, {0, -1}, 0.25, 2.9628809999999994`, {0.9, 
        0.7}, {-0.8159999999999998, 0.5650000000000002}, {{0.9938488923449844,
         0.0781874128593081}, {0.0781874128593081, 0.006151107655015489}}}, {
       1, 3, {1, 0}, 0.25, 3.2596610000000004`, {0.9, 0.7}, {
        1.0939999999999999`, 2.495}, {{0.011545985916940423`, 
        0.10683012742736123`}, {0.10683012742736123`, 0.9884540140830596}}}, {
       1, 3, {-1, -1}, 0.25, 3.323420999999998, {0.9, 
        0.7}, {-0.11399999999999988`, -0.8149999999999995}, {{
        0.30937879973677734`, 0.4622375558197412}, {0.4622375558197412, 
        0.6906212002632227}}}, {
       1, 2, {1, 0}, 0.25, 3.330164, {0.9, 0.7}, {0.1419999999999999, 
        2.36}, {{
        0.17253324460897426`, -0.3778432533652998}, {-0.3778432533652998, 
        0.8274667553910258}}}, {
       1, 2, {-1, 1}, 0.25, 3.3660560000000004`, {0.9, 0.7}, {2.734, 
        0.6500000000000001}, {{
        0.9992572910254612, -0.027242565186081178`}, {-0.027242565186081178`, 
        0.0007427089745387426}}}, {
       1, 2, {0, 1}, 0.25, 3.666169, {0.9, 0.7}, {2.388, 1.905}, {{
        0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
        0.3960605744034168}}}, {
       1, 4, {1, 0}, 0.25, 3.712644000000001, {0.9, 0.7}, {0.738, 2.62}, {{
        0.00706881672468462, -0.08377856858885474}, {-0.08377856858885474, 
        0.9929311832753154}}}, {
       1, 4, {-1, -1}, 0.25, 3.8089999999999975`, {0.9, 
        0.7}, {-0.46999999999999975`, -0.6899999999999995}, {{
        0.49275400367550554`, 0.49994749278025735`}, {0.49994749278025735`, 
        0.5072459963244946}}}, {
       1, 3, {1, -1}, 0.25, 3.900461, {0.9, 0.7}, {-0.806, 1.695}, {{
        0.7461774390257973, -0.43519727539898495`}, {-0.43519727539898495`, 
        0.25382256097420286`}}}, {
       1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823,
         0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.25, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {1, -1}, 0.25, 5.251541, {0.9, 0.7}, {-1.346, 
        1.1549999999999998`}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       1, 1, {-1, 1}, 0.25, 5.251541, {0.9, 0.7}, {3.146, 
        0.2450000000000001}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       1, 2, {0, -1}, 0.25, 5.501368999999999, {0.9, 0.7}, {-1.412, 
        0.30499999999999994`}, {{0.9716388775230311, 0.16600231687785352`}, {
        0.16600231687785352`, 0.028361122476968925`}}}, {
       1, 4, {1, -1}, 0.25, 5.506244, {0.9, 0.7}, {-1.162, 1.82}, {{
        0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
        0.22781409614248846`}}}, {
       1, 4, {-1, 1}, 0.25, 5.949000000000001, {0.9, 0.7}, {3.33, 
        0.9100000000000004}, {{0.9925869894099848, 0.08577912254160378}, {
        0.08577912254160378, 0.007413010590015157}}}, {
       1, 4, {0, 1}, 0.25, 6.489281000000001, {0.9, 0.7}, {2.984, 2.165}, {{
        0.6692661328735803, 0.4704773918713028}, {0.4704773918713028, 
        0.33073386712641967`}}}, {
       1, 2, {-1, -1}, 0.25, 6.587655999999997, {0.9, 
        0.7}, {-1.0659999999999998`, -0.9499999999999997}, {{
        0.5867270543574225, 0.49242097644442884`}, {0.49242097644442884`, 
        0.41327294564257755`}}}, {
       1, 1, {1, 1}, 0.25, 6.637940999999998, {0.9, 0.7}, {
        2.4539999999999997`, 2.755}, {{0.3638049810927817, 
        0.4810934595531958}, {0.4810934595531958, 0.6361950189072184}}}, {
       1, 1, {-1, -1}, 0.25, 6.637940999999998, {0.9, 
        0.7}, {-0.6539999999999998, -1.3549999999999998`}, {{
        0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
        0.6361950189072184}}}, {
       1, 2, {1, 1}, 0.25, 7.355764, {0.9, 0.7}, {2.042, 
        3.1599999999999997`}, {{0.177298238497048, 0.3819208990391752}, {
        0.3819208990391752, 0.8227017615029519}}}, {
       1, 3, {0, 1}, 0.25, 7.7492, {0.9, 0.7}, {3.34, 2.04}, {{
        0.7682857585299127, 0.4219274247664275}, {0.4219274247664275, 
        0.23171424147008726`}}}, {
       1, 3, {-1, 1}, 0.25, 7.769021, {0.9, 0.7}, {3.686, 
        0.7850000000000004}, {{0.9990700243956092, 0.030481318045092316`}, {
        0.030481318045092316`, 0.0009299756043908324}}}, {
       1, 2, {1, -1}, 0.25, 7.804563999999999, {0.9, 0.7}, {-1.758, 
        1.5599999999999998`}, {{
        0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
        0.09476506310922683}}}, {
       1, 4, {1, 1}, 0.25, 10.419044, {0.9, 0.7}, {2.638, 3.42}, {{
        0.2899156582888027, 0.45372300951987526`}, {0.45372300951987526`, 
        0.7100843417111973}}}, {
       1, 3, {1, 1}, 0.25, 11.118860999999999`, {0.9, 0.7}, {
        2.9939999999999998`, 3.295}, {{0.39436017771964227`, 
        0.4887128276898146}, {0.4887128276898146, 0.6056398222803576}}}}, {{
       2, 1, {1, 0}, 0.25, 0.7268559999999998, {0.488, 1.105}, {
        0.5539999999999999, 1.9549999999999998`}, {{0.0059929339511540025`, 
        0.07718172512849858}, {0.07718172512849858, 0.994007066048846}}}, {
       2, 3, {0, -1}, 0.25, 1.3409289999999996`, {0.488, 
        1.105}, {-0.45999999999999996`, 0.44000000000000017`}, {{
        0.6702099812890915, 0.47013674847810727`}, {0.47013674847810727`, 
        0.3297900187109085}}}, {
       2, 2, {1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
        0.1419999999999999, 2.36}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       2, 2, {-1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
        0.8340000000000001, -0.1499999999999999}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       2, 4, {-1, 0}, 0.25, 1.8773889999999998`, {0.488, 1.105}, {
        1.4300000000000002`, 0.11000000000000032`}, {{
        0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
        0.5273414300392724}}}, {
       2, 4, {0, -1}, 0.25, 1.9920159999999993`, {0.488, 
        1.105}, {-0.8159999999999998, 0.5650000000000002}, {{
        0.8536156336093687, 0.3534911366173765}, {0.3534911366173765, 
        0.14638436639063135`}}}, {
       2, 3, {1, -1}, 0.25, 2.022536, {0.488, 1.105}, {-0.806, 1.695}, {{
        0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
        0.1721106571156212}}}, {
       2, 3, {1, 0}, 0.25, 2.2993360000000003`, {0.488, 1.105}, {
        1.0939999999999999`, 2.495}, {{0.1597139348055264, 
        0.36634054353082796`}, {0.36634054353082796`, 0.8402860651944737}}}, {
       2, 4, {1, 0}, 0.25, 2.3577250000000003`, {0.488, 1.105}, {0.738, 
        2.62}, {{0.02650860469308337, 0.16064214444008523`}, {
        0.16064214444008523`, 0.9734913953069165}}}, {
       2, 3, {-1, 0}, 0.25, 2.9392039999999993`, {0.488, 1.105}, {
        1.786, -0.01499999999999968}, {{
        0.5732177827738397, -0.49461010532103256`}, {-0.49461010532103256`, 
        0.42678221722616044`}}}, {
       2, 4, {1, -1}, 0.25, 3.2337249999999997`, {0.488, 1.105}, {-1.162, 
        1.82}, {{
        0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
        0.1580916744621142}}}, {
       2, 1, {-1, 0}, 0.25, 3.330164, {0.488, 1.105}, {
        1.246, -0.5549999999999999}, {{
        0.1725332446089742, -0.37784325336529967`}, {-0.37784325336529967`, 
        0.8274667553910258}}}, {
       2, 1, {1, -1}, 0.25, 3.3660560000000004`, {0.488, 1.105}, {-1.346, 
        1.1549999999999998`}, {{
        0.9992572910254612, -0.027242565186081178`}, {-0.027242565186081178`, 
        0.0007427089745387426}}}, {
       2, 1, {0, -1}, 0.25, 3.666169, {0.488, 
        1.105}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
        0.3960605744034168}}}, {
       2, 3, {-1, -1}, 0.25, 4.048803999999998, {0.488, 
        1.105}, {-0.11399999999999988`, -0.8149999999999995}, {{
        0.08950890188806375, 0.28547689638718005`}, {0.28547689638718005`, 
        0.9104910981119363}}}, {
       2, 4, {-1, -1}, 0.25, 4.139788999999998, {0.488, 
        1.105}, {-0.46999999999999975`, -0.6899999999999995}, {{
        0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
        0.7783065755283662}}}, {
       2, 2, {0, 1}, 0.25, 4.25, {0.488, 1.105}, {2.388, 1.905}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 2, {0, -1}, 0.25, 4.25, {0.488, 1.105}, {-1.412, 
        0.30499999999999994`}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       2, 2, {1, -1}, 0.25, 5.251541, {0.488, 1.105}, {-1.758, 
        1.5599999999999998`}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       2, 2, {-1, 1}, 0.25, 5.251541, {0.488, 1.105}, {2.734, 
        0.6500000000000001}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       2, 1, {0, 1}, 0.25, 5.501368999999999, {0.488, 1.105}, {2.8, 1.5}, {{
        0.9716388775230311, 0.16600231687785352`}, {0.16600231687785352`, 
        0.028361122476968925`}}}, {
       2, 1, {1, 1}, 0.25, 6.587655999999999, {0.488, 1.105}, {
        2.4539999999999997`, 2.755}, {{0.5867270543574223, 
        0.4924209764444288}, {0.4924209764444288, 0.4132729456425776}}}, {
       2, 2, {1, 1}, 0.25, 6.637940999999998, {0.488, 1.105}, {2.042, 
        3.1599999999999997`}, {{0.3638049810927817, 0.4810934595531958}, {
        0.4810934595531958, 0.6361950189072184}}}, {
       2, 2, {-1, -1}, 0.25, 6.637940999999998, {0.488, 
        1.105}, {-1.0659999999999998`, -0.9499999999999997}, {{
        0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
        0.6361950189072184}}}, {
       2, 4, {0, 1}, 0.25, 7.353616000000001, {0.488, 1.105}, {2.984, 
        2.165}, {{0.8472044229668777, 0.35979033988176695`}, {
        0.35979033988176695`, 0.15279557703312222`}}}, {
       2, 1, {-1, -1}, 0.25, 7.355764, {0.488, 
        1.105}, {-0.6539999999999998, -1.3549999999999998`}, {{
        0.177298238497048, 0.3819208990391752}, {0.3819208990391752, 
        0.8227017615029519}}}, {
       2, 1, {-1, 1}, 0.25, 7.804563999999999, {0.488, 1.105}, {3.146, 
        0.2450000000000001}, {{
        0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
        0.09476506310922683}}}, {
       2, 4, {-1, 1}, 0.25, 8.114989, {0.488, 1.105}, {3.33, 
        0.9100000000000004}, {{
        0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773, 
        0.004685773449600468}}}, {
       2, 3, {0, 1}, 0.25, 9.008129, {0.488, 1.105}, {3.34, 2.04}, {{
        0.9029515452098876, 0.29602373589454595`}, {0.29602373589454595`, 
        0.09704845479011237}}}, {
       2, 4, {1, 1}, 0.25, 9.981724999999999, {0.488, 1.105}, {2.638, 
        3.42}, {{0.4630963085037907, 0.49863625776105835`}, {
        0.49863625776105835`, 0.5369036914962093}}}, {
       2, 3, {-1, 1}, 0.25, 10.329604, {0.488, 1.105}, {3.686, 
        0.7850000000000004}, {{
        0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245, 
        0.00991325514511493}}}, {
       2, 3, {1, 1}, 0.25, 11.076135999999998`, {0.488, 1.105}, {
        2.9939999999999998`, 3.295}, {{0.5669879820905052, 
        0.49549229081333057`}, {0.49549229081333057`, 
        0.43301201790949484`}}}}, {{
       3, 4, {-1, 0}, 0.25, 1.2769999999999997`, {1.44, 
        1.2400000000000002`}, {1.4300000000000002`, 0.11000000000000032`}, {{
        0.00007830853563038039, 0.008848864526233173}, {0.008848864526233173, 
        0.9999216914643697}}}, {
       3, 1, {1, 0}, 0.25, 1.2962209999999996`, {1.44, 1.2400000000000002`}, {
        0.5539999999999999, 1.9549999999999998`}, {{
        0.6056035197701628, -0.48872067340368647`}, {-0.48872067340368647`, 
        0.3943964802298371}}}, {
       3, 2, {0, 1}, 0.25, 1.3409289999999996`, {1.44, 1.2400000000000002`}, {
        2.388, 1.905}, {{0.6702099812890915, 0.47013674847810727`}, {
        0.47013674847810727`, 0.3297900187109085}}}, {
       3, 3, {1, 0}, 0.25, 1.6947409999999998`, {1.44, 1.2400000000000002`}, {
        1.0939999999999999`, 2.495}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       3, 3, {-1, 0}, 0.25, 1.6947409999999998`, {1.44, 
        1.2400000000000002`}, {1.786, -0.01499999999999968}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       3, 1, {0, 1}, 0.25, 1.9171999999999996`, {1.44, 1.2400000000000002`}, {
        2.8, 1.5}, {{0.9647402461923639, 0.18443563530148122`}, {
        0.18443563530148122`, 0.03525975380763608}}}, {
       3, 2, {-1, 1}, 0.25, 2.022536, {1.44, 1.2400000000000002`}, {2.734, 
        0.6500000000000001}, {{
        0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
        0.1721106571156212}}}, {
       3, 2, {-1, 0}, 0.25, 2.2993360000000003`, {1.44, 
        1.2400000000000002`}, {0.8340000000000001, -0.1499999999999999}, {{
        0.1597139348055264, 0.36634054353082796`}, {0.36634054353082796`, 
        0.8402860651944737}}}, {
       3, 4, {1, 0}, 0.25, 2.3972039999999994`, {1.44, 1.2400000000000002`}, {
        0.738, 2.62}, {{
        0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538, 
        0.794425505714157}}}, {
       3, 2, {1, 0}, 0.25, 2.9392039999999993`, {1.44, 1.2400000000000002`}, {
        0.1419999999999999, 2.36}, {{
        0.5732177827738397, -0.49461010532103256`}, {-0.49461010532103256`, 
        0.42678221722616044`}}}, {
       3, 4, {0, 1}, 0.25, 3.239561, {1.44, 1.2400000000000002`}, {2.984, 
        2.165}, {{0.7358824235752931, 0.44086220324297015`}, {
        0.44086220324297015`, 0.2641175764247068}}}, {
       3, 1, {-1, 0}, 0.25, 3.2596610000000004`, {1.44, 
        1.2400000000000002`}, {1.246, -0.5549999999999999}, {{
        0.011545985916940437`, 0.10683012742736128`}, {0.10683012742736128`, 
        0.9884540140830596}}}, {
       3, 1, {1, 1}, 0.25, 3.323420999999999, {1.44, 1.2400000000000002`}, {
        2.4539999999999997`, 2.755}, {{0.3093787997367773, 
        0.46223755581974113`}, {0.46223755581974113`, 0.6906212002632227}}}, {
       3, 4, {-1, 1}, 0.25, 3.681, {1.44, 1.2400000000000002`}, {3.33, 
        0.9100000000000004}, {{
        0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
        0.029584352078239583`}}}, {
       3, 1, {-1, 1}, 0.25, 3.900461, {1.44, 1.2400000000000002`}, {3.146, 
        0.2450000000000001}, {{
        0.7461774390257973, -0.43519727539898495`}, {-0.43519727539898495`, 
        0.25382256097420286`}}}, {
       3, 2, {1, 1}, 0.25, 4.048803999999998, {1.44, 1.2400000000000002`}, {
        2.042, 3.1599999999999997`}, {{0.08950890188806375, 
        0.28547689638718005`}, {0.28547689638718005`, 0.9104910981119363}}}, {
       3, 3, {0, 1}, 0.25, 4.25, {1.44, 1.2400000000000002`}, {3.34, 2.04}, {{
        0.8494117647058823, 0.3576470588235293}, {0.3576470588235293, 
        0.15058823529411758`}}}, {
       3, 3, {0, -1}, 0.25, 4.25, {1.44, 
        1.2400000000000002`}, {-0.45999999999999996`, 
        0.44000000000000017`}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       3, 3, {1, -1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {-0.806, 
        1.695}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       3, 3, {-1, 1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {3.686, 
        0.7850000000000004}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       3, 4, {0, -1}, 0.25, 5.545160999999999, {1.44, 
        1.2400000000000002`}, {-0.8159999999999998, 0.5650000000000002}, {{
        0.9178337653316107, 0.2746178154250165}, {0.2746178154250165, 
        0.08216623466838927}}}, {
       3, 4, {1, 1}, 0.25, 6.1876039999999985`, {1.44, 1.2400000000000002`}, {
        2.638, 3.42}, {{0.23194826301101365`, 0.4220761380333971}, {
        0.4220761380333971, 0.7680517369889863}}}, {
       3, 3, {1, 1}, 0.25, 6.637940999999998, {1.44, 1.2400000000000002`}, {
        2.9939999999999998`, 3.295}, {{0.3638049810927817, 
        0.4810934595531958}, {0.4810934595531958, 0.6361950189072184}}}, {
       3, 3, {-1, -1}, 0.25, 6.637940999999998, {1.44, 
        1.2400000000000002`}, {-0.11399999999999988`, -0.8149999999999995}, {{
        0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
        0.6361950189072184}}}, {
       3, 4, {1, -1}, 0.25, 7.106803999999999, {1.44, 
        1.2400000000000002`}, {-1.162, 1.82}, {{
        0.9526650798305399, -0.21235424531195737`}, {-0.21235424531195737`, 
        0.04733492016946012}}}, {
       3, 4, {-1, -1}, 0.25, 7.3729999999999976`, {1.44, 
        1.2400000000000002`}, {-0.46999999999999975`, -0.6899999999999995}, {{
        0.49479180794791805`, 0.4999728739997287}, {0.4999728739997287, 
        0.5052081920520819}}}, {
       3, 1, {0, -1}, 0.25, 7.7492, {1.44, 
        1.2400000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7682857585299127, 0.42192742476642753`}, {0.42192742476642753`, 
        0.23171424147008732`}}}, {
       3, 1, {1, -1}, 0.25, 7.769021, {1.44, 1.2400000000000002`}, {-1.346, 
        1.1549999999999998`}, {{0.9990700243956092, 0.030481318045092316`}, {
        0.030481318045092316`, 0.0009299756043908324}}}, {
       3, 2, {0, -1}, 0.25, 9.008129, {1.44, 1.2400000000000002`}, {-1.412, 
        0.30499999999999994`}, {{0.9029515452098876, 0.296023735894546}, {
        0.296023735894546, 0.09704845479011241}}}, {
       3, 2, {1, -1}, 0.25, 10.329604, {1.44, 1.2400000000000002`}, {-1.758, 
        1.5599999999999998`}, {{
        0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245, 
        0.00991325514511493}}}, {
       3, 2, {-1, -1}, 0.25, 11.076135999999998`, {1.44, 
        1.2400000000000002`}, {-1.0659999999999998`, -0.9499999999999997}, {{
        0.5669879820905052, 0.49549229081333057`}, {0.49549229081333057`, 
        0.43301201790949484`}}}, {
       3, 1, {-1, -1}, 0.25, 11.118860999999999`, {1.44, 
        1.2400000000000002`}, {-0.6539999999999998, -1.3549999999999998`}, {{
        0.39436017771964227`, 0.4887128276898146}, {0.4887128276898146, 
        0.6056398222803576}}}}, {{
       4, 1, {1, 0}, 0.25, 0.6289999999999998, {1.084, 1.3650000000000002`}, {
        0.5539999999999999, 1.9549999999999998`}, {{
        0.4465818759936411, -0.49713831478537357`}, {-0.49713831478537357`, 
        0.5534181240063588}}}, {
       4, 3, {1, 0}, 0.25, 1.2769999999999997`, {1.084, 
        1.3650000000000002`}, {1.0939999999999999`, 2.495}, {{
        0.00007830853563038039, 0.008848864526233173}, {0.008848864526233173, 
        0.9999216914643697}}}, {
       4, 4, {1, 0}, 0.25, 1.6947409999999998`, {1.084, 
        1.3650000000000002`}, {0.738, 2.62}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       4, 4, {-1, 0}, 0.25, 1.6947409999999998`, {1.084, 
        1.3650000000000002`}, {1.4300000000000002`, 0.11000000000000032`}, {{
        0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
        0.9293602975321892}}}, {
       4, 2, {1, 0}, 0.25, 1.8773889999999998`, {1.084, 
        1.3650000000000002`}, {0.1419999999999999, 2.36}, {{
        0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
        0.5273414300392724}}}, {
       4, 2, {0, 1}, 0.25, 1.9920159999999993`, {1.084, 
        1.3650000000000002`}, {2.388, 1.905}, {{0.8536156336093687, 
        0.3534911366173765}, {0.3534911366173765, 0.14638436639063135`}}}, {
       4, 2, {-1, 0}, 0.25, 2.3577250000000003`, {1.084, 
        1.3650000000000002`}, {0.8340000000000001, -0.1499999999999999}, {{
        0.02650860469308337, 0.16064214444008523`}, {0.16064214444008523`, 
        0.9734913953069165}}}, {
       4, 3, {-1, 0}, 0.25, 2.3972039999999994`, {1.084, 
        1.3650000000000002`}, {1.786, -0.01499999999999968}, {{
        0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538, 
        0.794425505714157}}}, {
       4, 1, {0, 1}, 0.25, 2.9628809999999994`, {1.084, 
        1.3650000000000002`}, {2.8, 1.5}, {{0.9938488923449844, 
        0.0781874128593081}, {0.0781874128593081, 0.006151107655015489}}}, {
       4, 2, {-1, 1}, 0.25, 3.2337249999999997`, {1.084, 
        1.3650000000000002`}, {2.734, 0.6500000000000001}, {{
        0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
        0.1580916744621142}}}, {
       4, 3, {0, -1}, 0.25, 3.239561, {1.084, 
        1.3650000000000002`}, {-0.45999999999999996`, 
        0.44000000000000017`}, {{0.7358824235752931, 0.44086220324297026`}, {
        0.44086220324297026`, 0.2641175764247069}}}, {
       4, 3, {1, -1}, 0.25, 3.681, {1.084, 1.3650000000000002`}, {-0.806, 
        1.695}, {{
        0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
        0.029584352078239583`}}}, {
       4, 1, {-1, 0}, 0.25, 3.712644000000001, {1.084, 1.3650000000000002`}, {
        1.246, -0.5549999999999999}, {{
        0.00706881672468461, -0.08377856858885468}, {-0.08377856858885468, 
        0.9929311832753154}}}, {
       4, 1, {1, 1}, 0.25, 3.8089999999999984`, {1.084, 
        1.3650000000000002`}, {2.4539999999999997`, 2.755}, {{
        0.4927540036755054, 0.4999474927802573}, {0.4999474927802573, 
        0.5072459963244946}}}, {
       4, 2, {1, 1}, 0.25, 4.139788999999998, {1.084, 1.3650000000000002`}, {
        2.042, 3.1599999999999997`}, {{0.22169342447163368`, 
        0.4153859049338022}, {0.4153859049338022, 0.7783065755283662}}}, {
       4, 4, {0, 1}, 0.25, 4.25, {1.084, 1.3650000000000002`}, {2.984, 
        2.165}, {{0.8494117647058823, 0.3576470588235293}, {
        0.3576470588235293, 0.15058823529411758`}}}, {
       4, 4, {0, -1}, 0.25, 4.25, {1.084, 
        1.3650000000000002`}, {-0.8159999999999998, 0.5650000000000002}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       4, 4, {1, -1}, 0.25, 5.251541, {1.084, 1.3650000000000002`}, {-1.162, 
        1.82}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       4, 4, {-1, 1}, 0.25, 5.251541, {1.084, 1.3650000000000002`}, {3.33, 
        0.9100000000000004}, {{
        0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`, 
        0.039421762107541364`}}}, {
       4, 1, {-1, 1}, 0.25, 5.506244, {1.084, 1.3650000000000002`}, {3.146, 
        0.2450000000000001}, {{
        0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
        0.22781409614248846`}}}, {
       4, 3, {0, 1}, 0.25, 5.5451609999999985`, {1.084, 
        1.3650000000000002`}, {3.34, 2.04}, {{0.9178337653316108, 
        0.2746178154250165}, {0.2746178154250165, 0.08216623466838924}}}, {
       4, 1, {1, -1}, 0.25, 5.949000000000001, {1.084, 
        1.3650000000000002`}, {-1.346, 1.1549999999999998`}, {{
        0.9925869894099848, 0.08577912254160378}, {0.08577912254160378, 
        0.007413010590015157}}}, {
       4, 3, {-1, -1}, 0.25, 6.1876039999999985`, {1.084, 
        1.3650000000000002`}, {-0.11399999999999988`, -0.8149999999999995}, {{
        0.23194826301101365`, 0.4220761380333971}, {0.4220761380333971, 
        0.7680517369889863}}}, {
       4, 1, {0, -1}, 0.25, 6.489281000000002, {1.084, 
        1.3650000000000002`}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.6692661328735803, 0.47047739187130283`}, {0.47047739187130283`, 
        0.3307338671264197}}}, {
       4, 4, {1, 1}, 0.25, 6.637940999999998, {1.084, 1.3650000000000002`}, {
        2.638, 3.42}, {{0.3638049810927817, 0.4810934595531958}, {
        0.4810934595531958, 0.6361950189072184}}}, {
       4, 4, {-1, -1}, 0.25, 6.637940999999998, {1.084, 
        1.3650000000000002`}, {-0.46999999999999975`, -0.6899999999999995}, {{
        0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
        0.6361950189072184}}}, {
       4, 3, {-1, 1}, 0.25, 7.106803999999999, {1.084, 1.3650000000000002`}, {
        3.686, 0.7850000000000004}, {{
        0.9526650798305399, -0.21235424531195737`}, {-0.21235424531195737`, 
        0.04733492016946012}}}, {
       4, 2, {0, -1}, 0.25, 7.353616000000001, {1.084, 
        1.3650000000000002`}, {-1.412, 0.30499999999999994`}, {{
        0.8472044229668777, 0.35979033988176706`}, {0.35979033988176706`, 
        0.15279557703312227`}}}, {
       4, 3, {1, 1}, 0.25, 7.3729999999999976`, {1.084, 
        1.3650000000000002`}, {2.9939999999999998`, 3.295}, {{
        0.49479180794791805`, 0.4999728739997287}, {0.4999728739997287, 
        0.5052081920520819}}}, {
       4, 2, {1, -1}, 0.25, 8.114989, {1.084, 1.3650000000000002`}, {-1.758, 
        1.5599999999999998`}, {{
        0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773, 
        0.004685773449600468}}}, {
       4, 2, {-1, -1}, 0.25, 9.981724999999999, {1.084, 
        1.3650000000000002`}, {-1.0659999999999998`, -0.9499999999999997}, {{
        0.4630963085037907, 0.49863625776105835`}, {0.49863625776105835`, 
        0.5369036914962093}}}, {
       4, 1, {-1, -1}, 0.25, 10.419044, {1.084, 
        1.3650000000000002`}, {-0.6539999999999998, -1.3549999999999998`}, {{
        0.2899156582888027, 0.45372300951987526`}, {0.45372300951987526`, 
        0.7100843417111973}}}}}}, $CellContext`dynamics$$ = {{
      Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
       Complex[0.5861464486009521, -2.825764865181982*^-17], 
       Complex[0.8102051226649282, 0.]}}, {
      Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
       Complex[0.8102051226649281, 0.], 
       Complex[-0.5861464486009522, 
        2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
    14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
     "], {10}, 1, {{
       Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
       Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
       Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
       Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
       Line[{{-3., -39.}, {3., 39.}}], 
       Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
       Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
       Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
       Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
       Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
       Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
       Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
       Line[{{-10.3, -38.300000000000004`}, {
        4.8999999999999995`, -31.900000000000002`}}], 
       Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
       Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
       Line[{{-10., -34.400000000000006`}, {
        5.199999999999999, -28.000000000000004`}}], 
       Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
       Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
       Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
       Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
       Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
       Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
       Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
       Line[{{-9.2, -24.}, {6., -17.6}}], 
       Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
       Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
       Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
       Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
       Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
       Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
       Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
       Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
       Line[{{-8.299999999999999, -12.3}, {
        6.8999999999999995`, -5.8999999999999995`}}], 
       Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
       Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
       Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
       Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
        7.3, -0.7000000000000002}}], 
       Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
        0.6000000000000001}}], 
       Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
       Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
       Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
       Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
        5.800000000000001}}], 
       Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
        7.1000000000000005`}}], 
       Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
       Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
       Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
       Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999, 
        12.3}}], 
       Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
       Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
       Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
       Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
       Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
       Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
       Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
       Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
       Line[{{-6., 17.6}, {9.2, 24.}}], 
       Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
       Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
       Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
       Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
       Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
       Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
       Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
       Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
        34.400000000000006`}}], 
       Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
       Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
       Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
        38.300000000000004`}}], 
       Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
       Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
       Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
    1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtmHUcF0UaxneX/e3ap1ggBmmgIIqIhaRKd0l3t3SDdId0hyBKCSgKIraH
HWe3Z9edep535n2fe+aP+TzPvvvO7OzMO29MqW6Dmw9Koij6I46iImDPNIpK
gkPAR2hn8nJ6HkUdeX868k5g4yyKuoMlkfcAz1U/sHlqeWnkT4FVkG8A29OK
wjuADTOPcT46bcBTkbcF19EqwreAfRinOHw0OI62GVlt9DvR9074LfBpyO+F
14dvBy9Hfwe4jFYOPob3H8JrwZ8E5/F8HXwVuJXnqyOPdSstDXOoz/jt9D+M
2Qs8E3lvcC/tUvg94D5aWfhucD/tCvh94He0m+BfgT/QboR/CzZjzMHgRYx5
T2qdochuo/2I/DbktyLvD78Q3ldrg84AcBDyC7RuYMfU41yCTjP4Sch7gX3C
Gmr9WzLmBK0FOs3hQzVv+DCwGDq3gWtppeArY3/3BHgjcEjsb6nP8tg2sAS8
I6yn1nUa7Tz4ZDApRNEs+KngBbRt2MkLfGsL310IfxF+PPLF8JfgG5FPhj8L
T5FPoe+54C98ewb8JPgk3s+MrDePthD+EFiCd8vgl4CVaZvhN4A7GXMrvDq8
Nu0u+B5kT9BnFfxx8B+MPwz+q+yZ5xXwo+CDice8H7wns+xL5nYnuBb5MfAB
2mr4VYw9Ap3/8t+j0JmKfDLyaeBpvFsKLwcu4P3Z8NlgO60DeK32Fz4Pfj18
aGp5NficsNczwLnBxuaDw9EpA29Nv76p9/RK9FuBf0HeUsi3O8PPCHNYBb6O
zrqwhmvB9bT5OoNgUXTWgG+hkxW8R6/At2WWvwFfCs5Ff7n+mzYJvgJcmXiP
loF3yB9E3let/6PgV/T9RGcU+cfgdub8EdgPeR/ap/CBmb87AZ3fef9q+N4J
Bc9N6xmDd2ae/8kFn0cgugX99fCx8J/hT9F3In03hH3TnlaQHSIfx7daZPZF
xyFvAHbl+TLZVThHJ8KbgFXQvz32OpeDD4Q3hVeAj4p9vsqEM9kE+cVBR+ex
XuZ9OAfZZ7QDzGMHsieDzVzJfErS5miPwI3oXMu7t+k7E70uyF/WfyG/Hvk7
8NdptyJ/GmyE/CDjd0f3K557IX8f3MTz7egf4/1McHjk5508twYXy0fCb9Ze
wp+hT2udBXA/8m6ye+T7tJfIL2Ru7wS7OQs+PfV5HwVORK8F/IhsEJ0cnTHI
ZsOLyz7ge3hXXX4bHIr8e+Y8DHl7+NPw3pnt4QZ01oHdkL+KvC/y8ozRAXkR
cAHvKsO3gm/xvi78XbDAuybwD+BLeHdMfosxBmS2sd7wx+Vf0XkEnJE6jiyU
r6VvX/kNMKHVhP8p/wfvpn8HxzLO8eDU3P8inzwSvg9eH51BvI8Sz+c33p0M
bwM/DTyO1jFy/72pdR5I7SsayrfAf1G8gv879tnQGXkfPBz7f4/GXvMDsjG+
u4K+fRjvsGJc5vGfTe035MN7pPYn8tWDQnwsLd8OHqW1hE9VjKX/y4qlwYco
lnUGXwkx60XwJdo18OdjP0s+G53n4FUjr/UzsffuWXBq6nMkm1T8Vd9lstvY
NvAGOCf1OGvAN2PH3NfAnTzfDF8Nbkgt66Lzmtg/jwIPhrMjv1teZwZ+bcG5
SY3I/nc43/4ZHEPfkZn3ZDR8MPxr2R68f2Z76atznHnPx8I/D//yWWz70X5p
375UnI7c/9fYa/g7OII+/wz2rG9J1gvZO7Ft6b3YcbwB/EBq29d5+SnMU3s+
HP3R8KbIH1SczWxX+1PrSV//I7nyhUGy7eBP5TP1X8op+itfkm/UngW/pT2d
qn3jeWzwe8rfRsDLI+sa8oSmYNvMMWUEvA3ttMi+TvmJYlZ3ZItj7+9SsH3m
+H9d7rxCOcOw1HmF8sB2OsuZc5+mwcdrDbWWWn/ZeBvFLPgU+FXw6ZpX5H/Q
vyjuVc4d8xQfq+aep+Ln1bn9hfZLPqRX5jyuHfKeijvy27lz0TPQ6YRuK9rx
8IbBPyufrQ3fHfzyN/J/9DsFeQuwEfKu8gfIv5W/Spw/SK442yJ1XqX8qmUY
X/lg2dxy5b395WfCempdG2TOc8/LzeU+6iIfHXue2hvlmso564S+yjlL5Jbr
W62R9YOfFTkv1N6WgG+MvafK4y6TjYS4cylnpGb6fzcV1QIPxfbhD8TOd3UG
+2X2NfI5WruWufV6ZI4z0nkIXIp+Jfis1Ossn9oqd/58RDaW2w/Lj+0ANwa/
PT+ca53xXeAL6FYLfmYFz3Xgd6d+lnxT6v/U/yq26rvyMR1z+xT5FvmuLSG+
KF7oW/IxPXKPKb/VIcT8S9CZpGf0VoEVg+0pV60Er8jidEfncvDh1OducuYa
R3nUS6nPsM7yo+B5iWPxBWAXnQd4dXhr+VT54cSx9VJwOeM/D6+gmCo7zyxf
Cr8IbIx+WbCU8mF4AezK8yD5ZOWq6A8AD6H/GuMMkI9K/U467RW7aCPkn/UN
1Q/w79E5K/Gci4IfpNb/ElyNjgq7oyG/6I38xsQ5iHKPa8BdtCXaF7A4c5oX
2Za20/cuZO/Tt0zB7z/IneevQ+dq8PKCc+dPVdeEHGxn4pxHfT9Evj/xmHvB
exPnybuDb1f+8ffwv1Xk9+Gz+G5V+Bp4JbBT5DVVXiT5OuRXJF6fqxLXDmPB
x5BXBntqbonnoflU5DvDQ+46JnHNMkP7hv6QxLnoMHAgbVrk9VKuqLqycW7/
prjcEN5FuQ68Abyz1gd+U+56VfmG8g7VSKpbe6f2n/Kj1dFZHeR6PyV1bL0j
9ZiqI+vllqu+vDnknudozjoPmW17fGr7Fp8S7Fw13I3Bf6p2mITOrtjnV3NV
DVIWPhL5ztj+X/PW/FUr11Xc5J+HyM9ozZBViHx+1sTOqdbHzj/bag/RbwT2
R15PNUPqPOpjcL5yHmTbctuu9mhRZrnG/xbZAt7fHjm/kQ13AveFGN0I+UF0
lmT+1m7Fu7CnzROvs+4BauZeE90r1Mp9J6CYMoG+j4W9kJ9SvFCNvyi1b5S/
L47++OBL5fdbBFtqAj4Vcg/FiVmJ69M5YI3ca6G7CNUckyPXf5szv7+f91vB
2fJpSahTwKcVozOf+0U6R2A7dMqBpRP/7/mqGRL7BNXPd6sWg1fBTrdmrsWK
hfO4HH4Z/OyC67l35VsKPk8f5bZ56Z+J7JSCz3VZ1dmZfdjC3FzfnC9/TisW
cvjaIU/umzivl9+T/5ukWjHk/KoFdBc0F1kJnRN0SibOUZVfLwt+T/Ygu5id
2ed8pFiQOmd+IvWaaA0WB5/ZD/knYPfgo2QT8jnr4VXBi0Ptr9pEtar8SfGw
PqpNX8vDPQPy0gXnjgs0f/h9iWsc+RrdGxwCP0f/cNCR7gjaUPhQcCRtIny0
1ijY6nb5o8x+4pHcXLpHlJ9kzlsfhf+kGI/+2sz7skE+Vr5Q5xReqeCaUDam
OnFP2C/tm3TkIz/Ovb+yvSKhFlZd/2buOxDZ19u57yu2oFMN2ZHEtqF/25v5
DqRO8M+b4NcXbFe6R/mCvrtUHyKvgfyxxHNTDS+57ku+RucksB7yExLXfKof
T0xcKynHO5Q6p1XdNlF1aLAlxc1xwWZUBy2B14HP0VkJdqOYuyL48RnwBbnr
MdUsq4Iff4W+k3PXWuOQf5Pah6ienZL77mN85lppFPIfU+duWludY+V72+A1
+cfOod5UPdI21KSqDZvnrsGU/9ytXCGxv3pPPj3x3dTm3HW0/NvKzD7yQWQP
544r2uuXc9uKYvoT8AmJ75q0F7pD+g7ZwFB7qJbsGuoy1UGDQ32h+8Duuete
5Wk9Q42hWrhu4n+sDx7MnTeofp+X2QdvQVYj8bmrJrvO7M+2I1+Y2ba/S62v
Me4KcvnUHfBmYI/Ivrtd4juWDmGcprIL/VPm/GKafFqwD+2LzrXyqZW562Gd
8dPBw6ntRHukvpLNQGdp5lxmT+D6zoHc9xb6rr7/19T+R/chX4R85u3gT5R/
bZK/ze2zZFfLM9+B/IDOk8HPyH50x6K8Ym3IKxRH3gvxRfWm7gX3hn3XnUnj
xOdX//xi6txD9qmcSuu6Idiy9kJ7onuU8fBeieegfPC+3PfbueIj/eYGHeUc
urfRfeFzufM9yX9LHUeU0z0f/Il8z+O57U054UO571QVX04v+B51HPw/IcfT
nP8F/yN1PqP7NNmv7k57az2DTequTHFBd3h/Q/Y/sw3lLQ==
            "]], 
           Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
            "]], 
           Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
            "]], 
           Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
            "]], 
           Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
          "]]}, {
         Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
          1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209, 
          1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 1687, 
          1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
         Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
          1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658, 
          1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 1983, 
          1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
         Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
          1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660, 
          1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 1982, 
          1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
         Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
          1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213, 
          1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 1694, 
          1991, 1293, 1701, 2008, 1318, 690, 1338}], 
         Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
          1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214, 
          1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 1696, 
          1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
         Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
          1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215, 
          1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 1994, 
          1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
         Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
          1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219, 
          1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 1286, 
          2002, 1300, 1312, 2016, 1325, 703, 1342}], 
         Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
          1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220, 
          1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 1290, 
          2003, 1301, 684, 1326, 2026, 1708, 1343}], 
         Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
          1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
          1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700, 
          1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
         Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
          1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223, 
          1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 1298, 
          2009, 1306, 2022, 1705, 1330, 709, 1346}], 
         Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
          1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243, 
          1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 2012, 
          1309, 696, 1332, 2029, 1711, 1347}], 
         Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
          1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225, 
          1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 1308, 
          2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
         Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
          1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904, 
          1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847, 
          1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
         Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
          1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916, 
          1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857, 
          1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
         Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
          1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928, 
          1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 1634, 
          1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
         Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
          1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469, 
          1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 1791, 
          2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
         Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
          1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762, 
          2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 2197, 
          1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
         Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
          2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764, 
          2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 2196, 
          1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
         Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
          1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473, 
          1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 1798, 
          2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
         Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
          1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474, 
          1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 1800, 
          2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
         Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
          1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475, 
          1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 2208, 
          1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
         Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
          1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479, 
          1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 1546, 
          2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
         Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
          1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480, 
          1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 1550, 
          2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
         Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
          1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
          2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804, 
          1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
         Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
          1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483, 
          1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 1558, 
          2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
         Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
          1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503, 
          2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 2226, 
          1569, 1071, 1592, 2243, 1815, 1607}], 
         Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
          1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485, 
          2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 1568, 
          2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
         Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
          2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118, 
          2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061, 
          1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
         Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
          1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130, 
          2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071, 
          1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
         Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
          2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142, 
          2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 1738, 
          2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
         Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 594,
           1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 572, 
          1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 1940, 
          556, 1941, 553, 581}], 
         Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 563,
           1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 544, 
          539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 521, 
          520, 1918, 515, 554}], 
         Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 1820,
           347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 359, 
          1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 374, 
          1837, 375, 377}], 
         Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 1832,
           368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 387, 
          1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 1856, 
          411, 414}], 
         Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 396,
           1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 422, 
          1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 1876, 
          446, 1877, 448, 451}], 
         Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
          1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
          1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 379,
           1823, 417}], 
         Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 433,
           1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 458, 
          459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 474, 
          1893, 475, 477}], 
         Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 465,
           1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 486, 
          487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 505, 
          510, 1914, 511, 514}], 
         Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 496,
           1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 522, 
          524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 542, 
          546, 1936, 548, 551}], 
         Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
          1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
          507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
          1896, 483, 1897, 479, 517}], 
         Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
          1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
          608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
          586, 584, 580, 1938, 618}], 
         Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 663,
           2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 645, 
          1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 622, 
          621, 1979, 616, 654}], 
         Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 597,
           1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 623, 
          1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 643, 
          647, 1997, 649, 577}], 
         Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 2018,
           687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 669, 
          668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 2001, 
          653, 679}], 
         Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 2027,
           706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 2021, 
          693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 1998, 
          702}], 
         Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 969,
           2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 947, 
          2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 2154, 
          931, 2155, 928, 956}], 
         Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 938,
           2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 919, 
          914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 896, 
          895, 2132, 890, 929}], 
         Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 2034,
           722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 734, 
          2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 749, 
          2051, 750, 752}], 
         Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 2046,
           743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 762, 
          2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 2070, 
          786, 789}], 
         Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 771,
           2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 797, 
          2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 2090, 
          821, 2091, 823, 826}], 
         Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
          2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
          2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 754,
           2037, 792}], 
         Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 808,
           2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 833, 
          834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 849, 
          2107, 850, 852}], 
         Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 840,
           2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 861, 
          862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 880, 
          885, 2128, 886, 889}], 
         Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 871,
           2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 897, 
          899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 917, 
          921, 2150, 923, 926}], 
         Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
          2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
          882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
          2110, 858, 2111, 854, 892}], 
         Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
          1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 985, 
          2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 965, 
          2174, 961, 959, 955, 2152, 993}], 
         Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
          1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026, 
          1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 1003, 
          2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
         Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 972,
           2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 998, 
          2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 2207, 
          1018, 1022, 2211, 1024, 952}], 
         Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
          1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224, 
          1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 1035, 
          1032, 2214, 1031, 2215, 1028, 1054}], 
         Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
          1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237, 
          1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 1057, 
          2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1:eJx0XHk0Vm331iAqzdIkpKhokKSibA0aSEkUkpQKIRVJpEEZyph5SuZ5fMzj
NmXImCRRhlQy9BzRqPC7387zfN/6rN/7/vOu9ay9tvvcZ+9rX9fZe7firKnq
+ckcHBxl3BwcU8j/qVW8715IpILV1yABRf5icPGByOfhFHBf4crXXZ0IXLnX
zji3loDl8inOW/wpaLxn9+LxVl8sfqPeJ3OtCG4aabZ35lBwve5El1ZzEZba
p+9U6UqF6ceCE8IiKLjXn9enb/QMZa76C1dtvg2LHZx5tY9QcE5iWL+mqgE5
57uvklGIxt/Hm8NOtjBBsMThAAezEafwnJcMmpaHIknKuxzPMCH4Snwlx45G
XJtxxH5zaTHGhozcR00m+P4OeFZYWYvBfFqGjbOLEGws5nu9YQKnsfBO6all
KPTHVf3GzzT8cyZTe/AuBSIOm9dtf8nAxHCVRXadj1DXu/yH8ycKustEr/Xp
ucG1SSWL1bbEQ4/HnukWwxR4LVyikTwjBZgP3y2VNQoHzTt34sZ6KZgSHObQ
8TAOml5vyrCVLIS5DzYszsqj4OrJ+KKki0fhwitZjo+FaVAydG+7bw8FSe93
vpyulYWvN0R/3X32JvB+m3U66i0FusUPBO9GPcVBp1VLTGUC0Nx/86sdDsTP
J2GRhLfVOPu9cKezbww2PKmXatpEgU3Pml3L99eh0fU3G2+ez0KxO2Jp278y
gfqaIRT8uha3fBEyChTIww+ujS1ZTCY8e3dkk/Hbp3jxRFV3KabiU9OnUT5m
FAxr7GvVsihCZ3Uh0Vf3EjG8Y4eFTBIFj5Q5BUy2xOMtIwVHLXVnCOEWjAsn
9/B0ZMncO19sQZ7Tc/GxnGQQmJQQ9Imi4Nr1amOutBgwFk9d9c4xG4w17AMy
Gih4m+Re/3gwGowKouY99EwH0aGViXffUPBwzC2RkeSInpta7PcI3od2Stl8
8jgF5q2PVO9yxuJs/hdav/S90P1sL3h/pUDZ4L1RqC0DL/kFFu/QSsekBz/E
3Ij/fZs/ZYh/zcFF+y5Wub7OwIczX2wszKKgbbkkckUW4TstCeewyVmY+Phz
w7gfBSbcj08W3stH3gVWJdov0lF0ym7XtFQK3mhmH1ivkopcSwLFpvVGYkbq
Q66cDxScT48bV6s3xEgTxsulh3yBuVChuHmUAnGbc778sr6gF2Xssu1QBPAu
SJIw+0FBmats8e2mdChOD/SIlMyCCPEj5zhLKbi0LTNoWW4mWDe/s4gryIKP
WZs7tuRTkMkzPGUlHwP0rLapZjzKBpA3tA1+SkGC/OM9738mAI/rO9VZDalw
c8qRvD/tFGTznPfxEgjBehUX6qNCMtqqi1SEDZD4nKegcP9nLNZHP6r+rJOK
02/k+ju/oyBnUiDnEKagn54F18KTOdgqpzGdt5yCA8s6eL/KxOBiK4k9G8Iy
UX3fJdv0ZgpW1XFSSV0e8OeKdmVrYgiq+w9I7h4hcZiy7vFgXzzkaD5atAo9
UUJY2fHgEAVF3PtDOn4Vg4CohElwQzKoxKtWNwZToMTxfkl2fhnUzeXhVS9O
g3b9dFNOawrSfnyI3apfCe6dRfFtL7OB+ZnTSHc3BfaSL13uiZeD4WejqcMx
qbD03acNpy9T8PJEoaaRYjEEOHBFVUolwdmvF+BeFAXlmsemObumQ8ERgbG+
o04w1q3q0PCegtTpQ41bq52guPDqlgU9DhB+tGlKyhg5f459zu6PyWgvKOEo
kcLAp8KRmhtbKRA175+1bn0cJjZuK2jPZGBWmdS74x0UePDG7Cv8Y4v35jJe
+n6KwT2cjk5D38h7LMnM3KeUDpLevf2RPAGQVLp3q1s3BWa7ejtiJpXA8RUc
ntMnJYJ5FHcLhFJwPPlxUZZ3NYypb7hp8CQPZl3t9LWbTcHd+AXX4qc3Qphv
U1GoXRHIve+1MzdmQrLspVOVOo1QdThKkW99FhR2Om5fc58JuiPiYvtVGwCF
1T59L02F5td6szMIvn1hqoe0KtXAi7u+6fYdLmjvJlhnIkWB6clEg/UXi6BT
+OxaYYEI9LpwbsHvDAq6mOuPO4S5wNhAKwR/QKz6/FrvEJJ8VIgs4LX2Qv53
QW3FZvmoZ9q/xb+aAr9lHJzcnaGYNseNZ/3raDwarcVcRt57tv6hknQMgJcX
5S+UmXjB3kb/No/fFEwVkPjkKZkJyjwntx1eEw38Zx4I5rVQsMb+1H2VWeUw
U/PmeMfNcpDPizy4YioFss7OC5yka8HSOlrVaH4ptIQNPH9VxQQ9z5h206Mv
oMjLTyuqrQ4WZDk0z7//GWRPm02fs+AlxNiKJnlNQ3jVn5Iv8uMzzNwsdcG0
oBw+LBpWVKf88IBdAbWVxJvO8pXK3BllYPfbTTTisw9++7Hky2QPCtw2FJVF
Dgfho1jta6YFFbg362Log0sUDKystx+9m4rR53YFr+l+hkf2zhAL2kLB9hkK
j1fPzMf4B+sqnAUrsPTM9Hd8+0kdGagdc0jLxKAbsYF8VUXIvWr4VhrBmYtl
05avLHoCsgHXG+Ruh8KU3VpC+wg+2O26nXK1Iw10kldq1+oXwpEXHB+WJ5Jz
lnRxdhqWQLp2E2PWl6eg8Wjvl50SFDhn3LhYObsKjpQum3NZuQH22hXORWUm
5FOte3eIPYXLpXMdnu2pgdqmE8cFSpig5JcuERvFAK7edQqlg/XAXb3ERucj
Ezj+3/8G2fbIske2fQHtH1n+ke3fjj4PqtDnQfZ5tOnzYzZ9fjzBOr8j/bx4
nn5ePMx63l30/eAa+n6QfT9r6fuEYPo+gX2fUvT9Qwx9/8C+f/H7vs7bWvzg
x3zp2M78cmDcrxnaTd57iX90QV9OBJROGuesO1ANruvfB7fuoECbjgf0oeMB
2PHAQ8cPsuIH2PEjQ8cbsuIN2fF2lo5PLKTjE9nxuR6Z43+oerwRtHCNw+Jy
DI3n8Xxlw4R+jdVfnDLL0T/1VPGxvFIs5z132WopBTPpfEF9Ol+QnS/pdH5h
HZ1fyM4vVj5CFJ2PwM7He3T+Ai+dv8DOXyad7/iNzndg5/vC3p+GquXZyKF/
BkPRHbQYa25cJX83yavQq7ymEt/d/LzoW64XpN/aKjJHjwLbugJrft7neGBK
54fCwGSUtFN7ll3OhAQar5CFV4gsvLpD4xuy8A3Z+NbhXPP6w5I61Gmsc6nQ
LcI2H1P43sSEPpexhQExxShzQMCuvS0Jr+ZceRkaRoG08pvylsFIDH3U+X37
aje4BKFR9iROmgtWm+ltdoSM7oTr+++Fgd6jaOH5pE6J03gOsTSeAxvPTWj8
h+s0/gMb/5GuF5hA1wtk14v99/sC5sukIaPx6ofd92UBXPamvyH80M6tynaX
ZzEaHfw4yW5tCpq+qjvVS3D+qYuPv7VgOaYfENyQHpiJ0751GG09R+pdJb9L
XH4lru7u2fzTOhPte1v7lBQoOEjXR6yh6yN2sOpjAV1PcTldT/Eoq5463izY
LrkwAp25pwy8snCHTo57dWE/KTiyJ9VFYfgEho2tiPtdHwkXcl1KXcjv+ftD
1NSVYuDwDOlvW+7mwA5Xro0/a0l+mb2btuB+Anx4sOmsEzMTtr5b8fpQI6l3
NH+ApzR/gP/wB5pvQAHNN4DNNwJofoLTaX6CbH4SzHeU38kkHVsvl6vJNWQg
/7xf3/9UUMBIytLxYhLelrdS5tjaPDQK/x6wLpPwhLouN1n+TPy2NTJmdnwm
7s1ZVM5XTMFGml+hJs2vkM2vItL+8jGIp/kYsvlYB83f4Nfiv/wN2PxN98Za
Y+tHhWDYI7xJZ2MW3Pm5p9qK6Bq+u1tFvh8uALnaddOMMBM6vd247sdSEHuw
MrqhNB8OlF1+fmZfOhyYpBy4nUF4Js0/4SLNP4HNP6/SfBUEaL4KbL5qSfNb
2Cr5l98im9+GD8xs/rAqCUev3dq+8GcO3vzMy3eN3I/Uzp4CaYzFqtyne19d
zMTTFt/OChE+duH3X76NxjTfRjbfvkHzc9Cl+Tmy+TlF83nwp/k8sPl8Fc3/
wYDm/8Dm/19ovQA7ab0AbL3A0hdwh9YXwNYXjNvatUvFnkFlotkT57BEsEuO
9h7fS+5fQVxG1fgpqNqVtz+ffQ+mizw05XOmYKT4xM4fJQzY92dlnEj6E5zs
9vEs90cKqjV7+VTCnTBfknruPjUe1z/d2NFMzv/z8V89hYO0nkK2nnrpvHL7
6uRIvH6zdrZdWyr+7F2xL5HwvevvwzX4f+yEfp1pC6f1huFhj6k9BgQHNtH6
DkJpfQdsfTeN1oOwitaDwNaDHrR+BD9aPwJbPz6m9SaI0HoT4lh6k6VPgZr5
V58CW5+epfUs8NF6Fth69iatf6Gb1r/I1r82tF6GNFovI1svN1CCU0S2JIGb
+p67p2dWYOvyoDXhRgT3VG4GVHM8Ri4hTpOE7gJcYVf7MraMgk5avyNLvyNb
v/ut8a4YCYvHbZnXH3Z3xMO9Vz8buokODc99U2LqHI0+j7OeFD9MAUXhqh2b
yHsRCqgJ3GJjAEGn+tsW6hRBIN9qt0yiU4DZu/vaxmDoqqq2uPGkHHasXCts
RPDKy26g5nTQE3QIs0/afKUU8nkiEseDKBA8xt9yWL4ApRft6Rs4EwdpFgN3
zpG6kzcoOJASXoKFfwZ891/wwQ8Pdu9hED6vZ2OWmP2zGMdUqYuxNhHYwr/G
Y3sMwb1b2YFnPxdhs8bH/Q2WUbiYX3k1XwoF4wf3eBltLsILk6dxv7eMxXyb
ui3v00i9Ezfpq3xbiIOZHveeL4xHCymvs0nZRJ9aLTkcUpqPt6o8nzqoxeCL
+btD60soWHReu3/R/jyMdt1O5b2Mwfm/hkXiSD6qBTLrQy75oL6/y2XFdamQ
yKGV7NlPgXp6jo5Yz33I8xk4Cc154Lu1ZXisjuAG5cEb6XIPbDlv/gyKLYZm
dd3cXURXhnqaTy85F4pF/HnmIZOKwPxxlRIzl+gX985nlS6Z2Ps6xn9xVCrc
0FDb4FVD/i6UHhy/UIDF+/gPbtExBC1z8UlFVSSPFN5dEpTPx54lW2p21nmj
Gcf+0cXEXjJLlhm0PQvvpOtNcY8Lwh1DuhfGSF3b5Od5Q9o0G/Ulrxjoikfi
5qyxHrcXFHALCKmFdaXjyoi9P52tozAv/tL2cqLHg4YVphddSMMzTwSbjfjI
/TBvdp0gddN9g/Gi0j8pKDxfKW3EIxaVDgxKM4jeEcZvv32aSb3nUsyLfRaJ
QRI5msNNFKxvWFYt/pDw/pEV5kVn06AmoOP8M+Jno7voT1/5ENj2uH6zU1s+
GMldCw0l9zw36fe6jzx3oPPKjyRJ9zS48jvt/TMSnzU9M34u0/bBK8mDIjJE
D066dPaqYx/hY0fGu1tLYtDXrnyIe3849F6K0fQfpGD2t9eNZqIR+HT2LvEp
Yw9gocnwljFSB/1vHFyudy8Az/fpZjuI7QZUzg+UJ/Xi+MfXDCllC5RP1jJx
GLiOazL3rSog+Cx0ZuW5xNV38PC9z0LVln7ofoW7Qp/Yvzt8aq4t0xamaY48
fiAdirlXedqmEj72JHnruHjGXdh7eE+WaWIiuuQW3u7/QoHLhXHXa2edsOpI
HreGfgpuFhfSv8SkoC/B9uY+9Sd41yNm6mWVDHw857t0BrmfZW1Zevt3Z8La
9J8uPKlhYO17Wv1WG9Ed77/wd6Yng0jLFtWu2ATIXNDqp0/u/8AhRltxcBSc
XDnKvFkaC0Vvun8FfaaA1/tt43zrCJA+v1PeRDwa2no61GaS84j1pS1ouhMH
0sY2oXWXIiCc6rtnTc5jeERYKZYzGh6cWcdpIh0EshuTh/xJ/Vomlrm8ZA8D
3LsUrA5d9ANdjqKPVQQ/lRv0a6vWMCD2+I3G8qXXYdmJiixZkhfzS05fH76Z
CYKTsSmr0xylhj64bO8k9XdxwuDkoVQ48MVEx+1HEiZbPJNvIPEWCDPennkY
AsD/c8ekkxk4/mFy52pyD9OFgr8Gc1nj7Lfe14X8C1Hqkov44qf/6Kzbfiuu
BGDtvilinh9KsHfy/Ys3CL41drqc+/guE3onX34Z0RwEhopzrShybzt4NG9X
7MiC8w+mzLp7LgK6nL7bRL8i9dQz0S7TKwfG17ne3GlN7u2kHaOa5NFouq7A
iWmF8FW+yNHgTwLYbAs0lCV5Wv2V4/C6FISlCy6fVnONAfU1XWG3syi42WTS
kNVYBDWhU+6dco0C0amVs/oILpm7VuyqyCqGt3e+nlaKioD6m/caDOIoyO1Z
e5NTqhjWpvYP90yzgrZxNWFbosfPvQre+0U0F1wn5dds2uSHnupdX14RPiam
dYLhfi0Sto0Kvrn+pARj3r3zcSU8c46I/riIiiMsGSnne9NWgj7jQsVTCH7e
9vQSBGUfcJ8O15euL8HL1WnvOOOJrg8MPBU/HAICq3eL2HfnoZe4f2zOM8Lr
Lu5tl3gYC+Vaao8fK8XC48LLc6vIezw79uKazuJo2Jtd+k5RKg0aHX4Ku5L3
GFTRysP5OQMyJn/o336QAcdmX5b9QO5t3FJLc499BlTIrau8jtlwWqjI+yap
F06O+9M2SxSD7rcftl+Gk0E36kBISiQFY2IrAupVS2C+9p/WoCYGBJz5eUbK
mwKj5a/KuPcQ3cvBIb7ncCjM+T4mcfUBOc8NMwe3lEIoknIbspFJwcKpJ/+o
plMQw1//rfBlGtxQc4u+N1aE7l9HUkIJT+afdY/xQT8Fspevi/rzqAynPDE3
sbhPcAncPDvup8EWl7uaTZcL0bffyuoN0aHmDEld6mQeKMR7vTo6IxvvtTWt
T0ggOLA/5uH0q3kQyhV7q9sxEyvvjfbXkPerf76jq0Y4CqP6I+5dmZMJrSen
ZTe/JjruZdxON4FU1Cw0yg8cygFDTs73uqXkva/10Fx3JA4zFdE60jMXFuSf
8m+tpGDGEvf9hU+jUHVgx3zRP0Ww+IHhC91kCpqer35oGKIAEcfv3tx5pBge
h46dRfK8LhmFcjbGXtCrt0f+nHYOOPfpe88l/PDfdL0rbY8se2TbWzT+9Y8x
tH9k+59EnwfU6PMg+zxInx/y6PMj+/wL6OcFDfp5kf28l+j7AU/6fpB9P+L0
fWIufZ/Avk/W/SPQ9w/s+3/jV5QkMSsJb/a5MrkMi0Ch1nVwNeGx69WKBTr1
GQgnigXxQBm8WWbdN/keBVF0PKAlHQ/AjgdW/CArfoAdP6x4Q1a8ITveWPGJ
rPhEdnwuLOp2ZMwsxvakSSNeoSm4qjhgpSeJZ5knZSezJbIx5M3FWTnTsjDr
0Hv10RzCu+h8wWQ6X5CdL8fp/MI9dH4hO7+S6HzEajofkZ2PPnT+ohidv8DO
32A639GZzndg5/vRy8mdXmGXMfxVfWHc8XJQGORukLalYKCp5NPXlGjsEUpp
zm/Oh4vj/D/++S49csZCduxpLu7PMHuuZxIAP66Wz1QnuiabxiucTeMVsvHK
jMY3bKfxDdn45u9/u2GrezHOjdu20HhONM5omn9XkPyeXLh1s90WxMpfUxq6
58ehcl3/t42Ej3Ut/MmlaJ2HAu3udet64/DUpAX2CgTnx/cITZPZmYvP6vWC
DSJikUOIUrEjzytL4zka0niObDyvp/Efp0/5i//Ixn9lul5AE10vgF0vzOPN
xxMiXKBzxqcNcL0I3sp5bJtP9AVcqNOLPBuJ2/qzW90XZ4KF/uc0ecKjnjjn
fjLeloZrG8+benSEgtPb0GkdpP4uturyXBOVifrBRs9H5rmA04gyHw+pX0p0
fcQHdH1Edn1cTNdTDKHrKbLrqfgSbm2Foigc3tHCa/HlMZbJLX9zgdTflNzS
NG/vOOz3sxqYWhyJQvnhTQ9Jfd967tLVO6pPMDek93JMSxQK9um85iD2RcUp
CatKY/GzR/Qm+SexGKnp5atB/u5Omj+gNM0fkM0fFtN8AxVovoFsvvGd5ifg
RPMTYPOT55o+Cdb9R0ApkHvTmhYGjNdI2j/tpWBw5tJ9ynt04eb+aznK5jHw
zNXrSth3wodNbWcO3XDFFTvKI74/CwPVm6GWHr8I36P5Feyi+RWw+dVJmo/B
FJqPAZuPRdH8DYRo/oZs/sZxK0n/NSMaRg9Qc2Y+v40zjeHbT/J3fz5cwtkz
NwIsVV8Zi9g/Qbkzh6Y3fiP80MzmvBNXCBjr6PT77mag9/zvT5YRnilB809k
8U9k808Jmq/iFpqvIpuvbqL5LQrR/BbZ/DZxxYbo2HMZYBc0OvJMIQKcy6cJ
fCQ8Z1a3dzteI3xp/tKiG5akzjb9Fr9L8t2P5ttgSvNtYPNtFj+HzTQ/BzY/
F6f5PGjQfB7YfH4zzf/hEs3/gc3/f9B6AWpovQBsvXCU1hcQSusLZOsLN7Db
F6eYAZ1vPzoIaaTgJaPksBbCQwZP+DLTQ31hepHm6U9bS3Cu3YeGcySvI3/I
cMyTv4hp8st36d0vQpH7/KHXSR61fVu/4Vi+Dd6+KUkpTinEvcppwork3hRp
PQVGtJ5Ctp5qXLDPdtGkfJBcJv1M2D4Ktmbxt7SVEz9UTsfxXQWwsWQazzZG
LJwbrK4fJPrxJ63vgCfrr74Dtr77TetBOEjrQWDrQQdaP8IzWj8CWz+epvUm
9NJ6E9h6M5fWpxBF61Ng61OWngUxWs8iW8/G0voXbtH6F9n6V57Wy9hK62Vk
6+ULIzcFc/cHYNaeR2FRonkotZIhurCegmEs8LYPD4IwRtHkDeey8EKLy/l7
rf/R78DS78jW71GdH7/5SMaD7eFa2c/Ti0BqLbSXk+eNc1BxE/tmhovH5n31
mpkFukVX9CLaCZ48OPfzfL0rUJk1qRt3ZUNso0HlVuIfkg/bHH4fA3vX/raT
Ck4CdV3G9TDi/9ZCL4vecQZyaBkOGq0Oh5R7z1fHENzoC+gekSb1fsrxrec7
pX1BwOD0xjQSh+tT19+LvF6GNacyYs2StXGOqSHDy4fovmZKSfB1OR7mWawc
n/MIzYwNn28k95DJUWYid68ax+9YT9K/EYqbP8x0CJcl9WiruHrEoVp03bS5
dPPeGEze/DFhxnIK4uPjG1X46/GLqnaRsEU6Sq8Kbj1GMaHHY6dnzqIGtPI+
ckhAJRuPzxKPdmxkgqp2e7Dp23oUt3qsqrksD88XKF1+UMeEm7z1Ol/ee8DK
ozYbNs8KBB/PK1Qh0XGr1z+YUnLfAt8cXbNRbF8UiOmq1QgQ/WiqdPl8z50E
yG1y4jovhVD2/ZDk8kyCY3mKicr363GD0A2GkWwBzpb8ePlWDRMOla+Nsb/n
h8+fqrzgUH8MRronJBVHiL6gfL++olKxK2Gp148QKzSW+2CfSuL/ubdHNLpV
4X3R3QbespkY3ffy8AVyD1+/zPl05U0Fns0qvPNHKwONKi4WHz9GAae+qJLP
cDp2R51bVuIXhnnPZu1fTHBjrRvDm5mYjQ89cODX4giM2tYic4e8F6OjNnuD
GktRoeiRwU6hNHyyK+rGmB2pF1sqZI9pFWPQnO6+aXNTcN94vRBvBOGx0o4R
r9SK8X217OMQ0wTUrn3UUB1NgfNMmcGda0ux/+yTrkCfRLRdPNOvhfAiAfda
CztIx2ld61wDc2zRZqHBn9EPFNy72hef9CIRF2kF7DseYgmDY1dMB4kOVfSQ
tpc8UI48LyxjwhJScezVTuP5piQfg9K/996qwH23eoZrSZ2X05cTvaBK6tdD
hg3edMDuqy/fF3lHwqb7ZjfXk/dCnQ2SFZttD7ecdIcM/JLg64OK++8GKYie
HfZ2lUo53uOVXDO2OhOPl0Zra+kR3D7g279gSTlmjc6rUebMxtdW2cuVdSkQ
3ZF07SvJ/xn21pPe1GXA50lHN4WROtja35vwoD8cLh++tGZZMwN2Silv8STx
L5a7PqJLrRRXejL/aC9Pww1BZWc/PqTAcl/3Xb7fsRChH1A5+CYVtBcdGjPr
ouDGz6eNNbt8sIbb/NLP2HsYJ+HSkUzqlyurX/9sQr8+49OqcFdDLzC+PS3K
Xi8FUsxPurqTut9rbLGiwb0Q43f1j/UUJuBXaXmTswT3Rs/sZEbvicWj2Q+7
Tp4IwSUZR31effnvPEDNBP8hj7YaHFyRilKmTbMYgWno8cVnqd1LCnxZ9g0T
7CvNQx4Jns7EGwfmmj3/5ovvHqlaGRA8kbujwX+Bl/DXI62flX1dcTIUZB8i
fEb6mcBFkfkMvK0ezJkQkIG7Dmr57q0juMqaQ/CdMIcw3DDz3dfoLNzcrHgb
czMxSUHwnTnRj/n/Yh+THr5RXiYePaeOBdrY2mLC/Jqy+YT/nHug/VpU2g27
Ak6vkNAPBIWRSKXlf0g880b58N3JRMvuZS8VZmUiX15acG4xBSr/Mv8Qo2y4
ynVKPuY4bmMeZWZi3KVR/QSiE9X+xd6stirMYtQZjs6Jnv3jeRwkV7ipMYdJ
fgmd2LJxazRMbRcdvOyUBupaOu3hJE8ld4Ze4m7JQoa+BpenXhq+5RkvKS4j
da2WnruYevV/5y7i7U7VL5JLx9un4sE6PxV/V9WZBJC6zMGa05gywV75pmnt
OoFY0J83O6X2eRrkOSqX3n9LwVve3UsLH6aC8O7z111XZcMx1+95IkTHnbrW
tXrScCrOm503uLMnBZfuHRrvI3pNizXv8WzCvMd4pbGz/9RwdHww9wLjcxhu
NTYVLiT3f5plXzTBfqWkpuGqy0mwTHuhQKpLNqSK39ZIrKagYIun0ePmOIgN
bRz+vS4DtldMnRLSQvjPlijR+nnu6Bkbqeow8xEKPhxd20byJZc1ZzKHNWfC
7ottzvsqT5nHwWydLTKfN6XB+uUzO76T51W6e1Hly8UkNF70bMHQSQbyF10/
dIHwqF2eOUdmHXuEF62VPF0l7mCPmM5hj7F/5nDouZqnrLmae6w+l8/vY/pr
akOg95rS7+icEHhjV50p/YPEJ+s8Syac503Kda9pQnG4SXBR1AddBtZ+Li1b
S/ieZnBSztXJCRgu8Vn3pG46cij2V6SRe17S5m+q5R0OqV81eLvjwkCltGyS
K7nPfaz5mWrW/Ay7P+h5/EVW3d1E6Lx9scNZNBaOq/BYW5G828+yr5lgP0Ww
eNbkd7443yHr5SHdZOwx9fugw6SgVGbF7tidnlhxfqFM7qQk1HmYfsGS4GdS
11Nti8AUELjv8dwwJx72mZ3clkZwIJE1t+M8YW7H0m9kqlhbHsz/nDDrXFgW
8H2fem0t0e/J/zLnYzVoJSJtFgNZqWeXvG02wGU76kofE97ev3GOvaZhCkgk
xpkPGNjDzMkaJ2LIOVeqaL75lJsLUTF9gl+aMoDrvL2XNNGhtqx5oYsT5oUE
jsVu8BPNh5RGL7/wHZkwu6e2TiyZ1COWvdEEewW+1rPbCE/eNmTuMudJKOwY
uDZrYdU/fUlVceb5p7BVNI4ZmM8AM5+apksWFBheOvz+OSMHRtPyT7j4ZIB4
74C9ItH7L1hzSk8mzCld94t4HyKZCcN7+58kxjNga+aUTUDiv4I1v/RpwvzS
l0H1cAn7cpDS1RAod0uDH4s1pjfrU9DcmDTnyeYqGHU5dFw/MxtWcfulPNlG
wYo/3MtOZjGg3HFD2SylNHgV3u6RRfDhKcv/wAT/+4TjVutPTgEXzidFBaYJ
ME/doVKJ1LUylv2bCfbJmwV5wkPqIaR8Lb9ZUz5cWRT5fRPhOdPhY/wRq2hQ
3qpqPVsmAVbIxG/r7SP1gjV/1Tlh/mqxTKXeQa4oVHuzY6NhRBKOVj28kkX0
45BqbsSCb/FosiFjmdbnVBQ+zDHnH5x8f85E5+ycBlKPa//81M+A+KffV+58
w4QfKwX54qIe4Nl9BWHhewIxUrbtpxnB+RuKoR9D9t4FAWt1Wy5DF3xTJ7np
7T95PeMoY/f5BsifN5tf6GQmXBEuBDnCA/0sdHf/ftUAL3l3ne8MygLJdzq9
Y7lMkPiYZnG9PRzEd6YtaOLVRrUSJennRLdSh/YZykIGmE4VXey5KAy+2e04
GkDq4BBjQGrQrw5q35Y21z9Mg7583Nr9iwlVpVHVJ2fWwWPtNXmbi1LhdcLe
Fa3TKMjRbQ6aKVYEQzbSF4ZbcuBq/89+aS+if81Lsv3LS2FkoW1LnWkmVDUW
L86zIfromUtrWdUzuGSZp3Oo9QZ0/cpTMVakILjRzedKZzF0RR+tfT73AQY9
XJW0iMT5yZoz6z7GVIDqs1SDId1cOCi+39ViHzln1R/7Tv0a6FVvDJ9/tQjk
neVcFjKZcHKcN10gqgh6bihNiV7nilM1+5tsSTwbdYo7OZcXgMQmwy07ywNw
d+P8K15PKfjwjIezJqgBUkr4H182LIdDzNSSxeeY4CUksGnY4jkkndSONNUt
gATRUo5GdyZMPWxw5FjBE8j+nrojQiALr3231PMguoO7seVi4UtzOLVQTafD
MR1/R1muvE14o02TUd+g2wuYXNoWX8RZBGbXr5zbIcWEAJ+PH5bVO6DDSOOB
yCfpGBhffuE5ic8NG4UO/xgPhJVf7CV55/tBvPMR8QRSBw1Y81fbJsxfKdF6
B/VovYNsvTPTx1GyKfcFuN7WLTDnz4PqR4GTvOSZYFso5h08Gg7tVtuqB7uj
wOZZr4Yr4Vd3WHNc6hPmuISuhMy76pQAQSIfd31JTwQ3l+xqU/JcGqz5rsQJ
813rz1yfb9pcCx8dz++4Nh4Cnas2SCUuIfytu2iGb1MNbOrVkJC3DYXyCOH9
XmsIPixqm7+gJweOzUoU7k9JA+p0y1z3Aoo9fwVJE/z/mj7vdveqp3D3R0en
rlY5tFumxVXPIfX6X+bN9KbxbujMewbzL8QsyxLwg7plkasnHyQ6LjlxVPNe
JVjUVc4cHvTAjwquK4cukPfFv84x8Xk5ODyBMyXcVUTP88sOtjHBiTW3pjxh
bk2nQqAn/uVT+LTv7utmqgJOrThvt/3bf+bNwJQ1z1bHmjezFrIUbP2eDfr7
FzmF9OTg7lIznfQkCsQvdBw4VxALJsHvdoVS+aiuUbFrAeF1u+Z4bjLeXg3z
8nV4r+g9hSlbFIaiSL4XsfxfmuDfMGD0XZPYczD2DdEP2VsHdUsMNh9/9xlK
WfZXJ9gvS3xtcOJTMHiF+/u7Li5CueHy/C15pD4KD1wUjQnE2ELrs33mT5HT
IWbOrAcUMH0vvlprWQ9uw5s+vD1YD69OL/Hpn8IE3X+Z0zu4a6r/8NLnYHrg
uaAcwYM/yc4RXaZMOMeynzzBfrsvd431+Rj0UV0oRnmV4pqlKxNWE93tsE2o
kQpMwQdJe4MepZfgNW/OxEDye+WsDamNY/VQ9oVjXM4lC1RmqprOaWHCpL99
g8Id9P+jdrD7CP3FQes+NMdjrEDGaT5uRCNB++Vns4jOMmyPixnLgPkJEl8+
6hWBVE1r1lTCf8JofY0XaH2N3ix9rcrKx3UT8tFoGuNc38o6aF2j9aBwVjCo
9Nqe5uQjepw1l/jzEz2XOJ31vDNEtq3SmpILC+b5+q5f/RRchC3LTp0j8Wwn
WbpdrpDwJS7JJ03lsEp+S7Da7n/yXU9lW1kBuN7UFnNrT0cdBr/gb8JPtrD8
j37637lHc0W+ZpeuLPCPP2+9YlEavrAaUdMhuJfMmoc0ZM1D1rPioT2B2e9Z
Fg8Jg0zXgkflYOBwg1PfjIIB8QvL88ZTIFr/2/4nI1UgzF9sy72HAu/A/LJt
ZekQpeys357CwGFvkRnz6v/r32CCf067tN+pM1LwZ9X23Qf7K9HwQGtQC9HF
2Sx7Vr4gOz7vjJevFtNKB5E/r0ayk2tg5tQtTlMWkvtUtr3XcoYBo36XDOZ6
VEPjVvmAWWIUdLVfeNk8hYGW8b9zhGc8wzPyeZuGgeQ1a86TNXeKCqz8Dc8u
PPzicCJ2/n729fvRCjybLdoua/gffMNc1vwnG0806efFWvp5gf282+h7xkL6
nqGJdc+KgTY5B7Uy8bJE6uCc+CpMDpu1PmY78cPynzfBvzb93rGefu/Ifu8n
WfY5E+wF6XjATDoegB0P++g4xPrVf+MQVVlxuICON1xGxxs6s+LNiTXXenHC
XCsrL3ABnRfIzosHLPsLE+zj6XzEJDofUZWVjy+M6+Y94E7Dl5ni3BwX8nA0
KCl+VS7Roay5WZkJc7OedL6DE53vwM73OtoPVNF+YIzlZyeNM2hF4wyOsXBG
h8YT8KPxBNh4krDITzN3rjl8DJv32VWrFOrcpUKzQiloofENWfiGLSx8O0vj
KhrSuIr1LFzl09C3SI4Jw5Z8o9xb37LhEMddubsvyHMdf3g7/H0Gnu534olz
y4GWawm8H7MpeG1wxXWLQi1ahcQyc2Iq0CQvwq/dmwnRN7j4xtTL8eMFbfG+
jqfYkhrz6z0XeV+LTtwRfp2GJg0fYsq3FwJ/j2rfW3LPs62fcCUWl+OcBwc2
znjpDYf6zl0IIPpo9rnST3WqFcg7tf6D6q9y9DDkT7SjmNBnYuEuGPEUB94/
6TM/WIaW20usRoUomMdt8nDF7Wq0zNtxaOYmL5SMWvVdgOSLHV2vcSpdr7GS
Va85Fv+t12hB12tk1+v9NE/AlzRPQDZPWEHzASyk+QB2sfgAi5+gJ81PkM1P
fGh+gpOs//ITZPOTVTQvQkGaFyGbF92m+RVOofkVsvnVCM3D4SzNw4HNw0tZ
85/FrPlPti72H3V1/TF6CbdpLZCJNcgAoVWJsXJER2xnzc1ydP/v3CxXyd86
Agl0HQF2HVneKJTovbARD05W1h34jJgxbcWVqyQOIfmO0+9zwfg7KVNo+VgW
yPEWyBxtoUCO7f/D//o3fzk6LV4vC0cHI0wGjj+AVlUH62VvCZ6w7V/+r312
eKt+xPbn+EzT2cIzoQK37OTyfCvHhCbFtqc7uerRv8t5O69cKS7i+n4jIZ4J
iwVrIEwvD6tOx8349MIYZygw0z83EF3JmgfWZc0DX2bNA3PMufKOa2oFjkcY
eF9P2oOZCw+kWllR8PBf7CcfTe5X7qrEXcupI0WfClBOPvaHC8FnHyUvz+vS
ZXg5VykizjoP83d9UNlL8HZGGMXhtKYSe6t92nfuu4n9M1SUPYwpKGfNIUdM
mEMWNx5enFVfiYyq15vryq3xtW5N/yXyezprPnkxaz7ZgTWf7Gxt85VLJx/r
HO36xd6notWy8H3niS5wkxi6ZumXgoWtPKl3SlxRMPNtyqvPFMR1bLq8rrEe
j47MsJx9MxW1ZMtvzetnQjbL/8oJ888aqRaFFu8aMKfFhuM3ZxaeX6iCGnlM
yP2XeelTPRwj0tLheFmuIKf18VU8zM1vKkLi2cSmdrKaig2OTj30TCbwDlzK
G9KwGyc6i9Z9WEDrPrzM0n3HWHPX9RPmrj/RehOHaL2JbL1ZyZrHFmHNY7P3
mzxoHQrLaB0KbB26kNa5IE/rXGDr3FxaR2MiraPxMktHV7D8S0zwv5/+TgVb
6e9UwP5OtdZn1rrok8nYUDaclpgYh1TWcbQkuFFE6yPwp/URsPVRAGu+ffGE
+fbvzBNRQ0urcWuOVF61Vz5uONJZXzePgrIJ52F/1zru/ePMzlXpuNB/aIGk
Rgoe7d819dVL4n9PQsLY8mwU0Fb3v2SQjsdNvCt0CQ9/IBL+1vdHBX6Osbqz
JiELY6Uut+sqkXOy5ti3TZhjXzpnUtCtGQUIzQo1HAKR6Fd3T2hpGQURLHvd
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {0., 
       0.49488850049789845`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 
    2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
    0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
    0.25, $CellContext`k5$$ = 
    0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
     0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
     0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 0.25, {1, 1, {1, -1}} -> 
     0.25, {1, 2, {-1, 0}} -> 0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
     0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
     0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
     0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 0.25, {2, 1, {-1, -1}} -> 
     0.25, {2, 1, {-1, 1}} -> 0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
     0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
     0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
     0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 0.25, {2, 2, {1, 1}} -> 
     0.25, {2, 2, {1, -1}} -> 0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
     0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 0.25, {1, 3, {1, 0}} -> 
     0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
     0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
     0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
     0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 0.25, {2, 3, {1, -1}} -> 
     0.25, {2, 3, {0, 0}} -> 0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
     0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 0.25, {3, 1, {1, 0}} -> 
     0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
     0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
     0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
     0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 0.25, {3, 3, {-1, 0}} -> 
     0.25, {3, 3, {0, -1}} -> 0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
     0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
     0.25, {3, 3, {1, -1}} -> 0.25, {1, 4, {-1, 0}} -> 0.25, {1, 4, {0, -1}} -> 
     0.25, {1, 4, {-1, -1}} -> 0.25, {1, 4, {-1, 1}} -> 0.25, {1, 4, {1, 0}} -> 
     0.25, {1, 4, {0, 1}} -> 0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 
     0.25, {1, 4, {0, 0}} -> 0.25, {2, 4, {-1, 0}} -> 0.25, {2, 4, {0, -1}} -> 
     0.25, {2, 4, {-1, -1}} -> 0.25, {2, 4, {-1, 1}} -> 0.25, {2, 4, {1, 0}} -> 
     0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 0.25, {2, 4, {1, -1}} -> 
     0.25, {2, 4, {0, 0}} -> 0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
     0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 0.25, {3, 4, {1, 0}} -> 
     0.25, {3, 4, {0, 1}} -> 0.25, {3, 4, {1, 1}} -> 0.25, {3, 4, {1, -1}} -> 
     0.25, {3, 4, {0, 0}} -> 0.25, {4, 1, {-1, 0}} -> 0.25, {4, 1, {0, -1}} -> 
     0.25, {4, 1, {-1, -1}} -> 0.25, {4, 1, {-1, 1}} -> 0.25, {4, 1, {1, 0}} -> 
     0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 0.25, {4, 1, {1, -1}} -> 
     0.25, {4, 2, {-1, 0}} -> 0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
     0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 0.25, {4, 2, {0, 1}} -> 
     0.25, {4, 2, {1, 1}} -> 0.25, {4, 2, {1, -1}} -> 0.25, {4, 3, {-1, 0}} -> 
     0.25, {4, 3, {0, -1}} -> 0.25, {4, 3, {-1, -1}} -> 0.25, {4, 3, {-1, 1}} -> 
     0.25, {4, 3, {1, 0}} -> 0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
     0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 0.25, {4, 4, {0, -1}} -> 
     0.25, {4, 4, {-1, -1}} -> 0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 
     0.25, {4, 4, {0, 1}} -> 0.25, {4, 4, {1, 1}} -> 0.25, {4, 4, {1, -1}} -> 
     0.25}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
    2, $CellContext`omegaIndex$$ = 
    1, $CellContext`parameterLocatorDependencies$$ = {
    "mScalarArray" -> {10, 20, 20, 20}, "numberOfMasses" -> 4, 
     "latticeBasis" -> {{-0.3460000000000001, 1.255}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3018221844783564`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{-0.2657813057154524, 0.9640333487655856}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {9, 4}, 
     "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 1}, {-1, -1}, {-1,
       0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}, {
      2, -1}, {2, 0}}, 
     "reciprocalBasis" -> {{-0.3006049674970879, 0.7139367978055837}, {
      0.47157404276105663`, 0.13001164844249058`}}, 
     "reciprocalNorms" -> {0.7746412703599106, 0.4891677693151304}, 
     "qMaxVec" -> {4.86721464826032, 3.0735317409066405`}, 
     "mObliqueComponents" -> {{0.22921128771652943`, 0.5154247923946944}, {
      0.642204937436591, 0.3737910043963477}, {0.45241047608311735`, 
      0.8402810656446099}, {0.6486679442377785, 0.6886521624769851}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.488, 1.105}, {1.44, 
      1.2400000000000002`}, {1.084, 1.3650000000000002`}}, 
     "pointsDataTable" -> CompressedData["
1:eJwtU21Ik1EUfufm3OZcIiEhoiYRQolFRUTFOX9sRUQpIiEiIRbijyVSESaD
qIh+ZEU/+pQ+LPpTIhKyxDpjSYRkgUYWpTkdLrXlPtqaOVvvPfceuHt33nvu
Oc/Hfdc2Hq8+atQ0zaQvh74y9OX2Dj+o7B+jqfbVPU6/ybunP7by8fQSxMvq
r/jiKap1lPd1LWYjp2VhKu5ta74WCtAzp18/EVf7MfDxAT81DOyzZ2yw4hFR
Xv8B0hyLdP+WiBc08k7ETzjGMaueZtQ4khB+8mb/9ktxYjjtUQh1wLaGAT/w
OGcaXHnndMRGtI13t+62mXHq4OUbrrxlkvtG3Pr87alX94ahh19Y0cJ1QRK/
490G7zQ3joLsn6BH/N6CdYx3hk5cX2OqdUSoiXH9osDjO0MlvfOwaYuI1/S0
sK5p5/dMfM88AqAnOoIEnV+o8hRdGAOLLFDzI8BwCox4huf9g5oZ0TBFUt8k
XBXjyn3A8P0ZOMgANJR8rPiwUhiieWV/M4bXb9ZHDBOnC3YsEcf7RqCTDdC8
Jxm/AQ+J7arfJOflop0BTZJXwKl4Sbmcz9Nfd4s+MgWaKPd0EtvbkYOlIi2a
A5andYI2sv/fQOr+Bz6zoDHgMR4bVvMfDW+yQXNUzOeXoaBiYp35bAQSzNeI
fN1iWcjt6m24S8jnitJtvh9ZWMP3KQjyPjgQdwgFiQq5X5pGS78uuVtSIPlF
6a7uTltzjuL3SfGaVM9Zkn4nQA4cBOm3TfELwQ/Wc57yuX4aoqMHGnMPRxS/
OEg7sxQ/A0q/o4rfCrD8XUHFz4TS70zFLxul/knFz4J79a/jYv4XxW8V/gc5
QbZN
      "], "lineTable" -> {{
        Line[{{-4.485999999999999, -14.494999999999997`}, {-10.714, 
         8.094999999999999}}], 
        Line[{{-2.5859999999999985`, -13.694999999999999`}, {-8.814, 
         8.894999999999998}}], 
        Line[{{-0.685999999999999, -12.894999999999998`}, {-6.914000000000001,
          9.694999999999999}}], 
        Line[{{
         1.2140000000000009`, -12.094999999999999`}, {-5.014000000000001, 
         10.494999999999997`}}], 
        Line[{{
         3.1140000000000008`, -11.294999999999998`}, {-3.1140000000000008`, 
         11.294999999999998`}}], 
        Line[{{
         5.014000000000001, -10.494999999999997`}, {-1.2140000000000009`, 
         12.094999999999999`}}], 
        Line[{{6.914000000000001, -9.694999999999999}, {0.685999999999999, 
         12.894999999999998`}}], 
        Line[{{8.814, -8.894999999999998}, {2.5859999999999985`, 
         13.694999999999999`}}], 
        Line[{{10.714, -8.094999999999999}, {4.485999999999999, 
         14.494999999999997`}}]}, {
        Line[{{-4.485999999999999, -14.494999999999997`}, {
         10.714, -8.094999999999999}}], 
        Line[{{-4.831999999999999, -13.239999999999998`}, {
         10.368, -6.839999999999999}}], 
        Line[{{-5.177999999999999, -11.985}, {10.022, -5.585}}], 
        Line[{{-5.523999999999999, -10.73}, {9.676, -4.329999999999999}}], 
        Line[{{-5.869999999999999, -9.475}, {9.33, -3.0749999999999993`}}], 
        Line[{{-6.215999999999999, -8.219999999999999}, {
         8.984, -1.8199999999999994`}}], 
        Line[{{-6.561999999999999, -6.965}, {8.638, -0.5649999999999995}}], 
        Line[{{-6.9079999999999995`, -5.71}, {8.292, 0.6900000000000004}}], 
        Line[{{-7.254, -4.455}, {7.946, 1.9450000000000003`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.946, -1.9450000000000003`}, {7.254, 4.455}}], 
        Line[{{-8.292, -0.6900000000000004}, {6.9079999999999995`, 5.71}}], 
        Line[{{-8.638, 0.5649999999999995}, {6.561999999999999, 6.965}}], 
        Line[{{-8.984, 1.8199999999999994`}, {6.215999999999999, 
         8.219999999999999}}], 
        Line[{{-9.33, 3.0749999999999993`}, {5.869999999999999, 9.475}}], 
        Line[{{-9.676, 4.329999999999999}, {5.523999999999999, 10.73}}], 
        Line[{{-10.022, 5.585}, {5.177999999999999, 11.985}}], 
        Line[{{-10.368, 6.839999999999999}, {4.831999999999999, 
         13.239999999999998`}}], 
        Line[{{-10.714, 8.094999999999999}, {4.485999999999999, 
         14.494999999999997`}}]}}}, $CellContext`parametersTab$$ = 
    3, $CellContext`qLoc$$ = {2.43360732413016, 
    1.5367658704533202`}, $CellContext`qPlaneLoc$$ = {{-2.43360732413016, \
-1.5367658704533202`}, {2.43360732413016, 
    1.5367658704533202`}}, $CellContext`rawArrayOfMasses$$ = {10, 20, 20, 
    20}, $CellContext`rawNumberOfMasses$$ = 4, $CellContext`scale$$ = 
    0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
    1, $CellContext`tick$$ = True, $CellContext`u$$ = {{-0.3460000000000001, 
    1.255}, {1.9, 0.8}, {0.9, 0.7}, {0.488, 1.105}, {1.44, 
    1.2400000000000002`}, {1.084, 1.3650000000000002`}}, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       TabView[{"dynamics" -> Column[{
            Dynamic[
             Row[{
               OverVector["q"], " = ", 
               
               Module[{$CellContext`qm$}, $CellContext`qm$ = 
                 ReplaceAll[
                  "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                Slider2D[
                  
                  Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False, 
                  ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
               " 2 \[Pi] ", 
               Dynamic[
                NumberForm[
                 MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
            Row[{
              Text["time, normalized to one period, t/T = "], 
              Dynamic[
               
               N[($CellContext`tauSliderValue$$ - 
                 1)/$CellContext`dynMeshSize$$]]}], 
            Row[{
              Dynamic[
               Manipulator[
                
                Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {
                1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                ContinuousAction -> True, Appearance -> "Open", 
                AppearanceElements -> {
                 "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                  "FasterSlowerButtons", "DirectionButton"}]]}], 
            Row[{
              Text["oscillation scale factor:"]}], 
            Row[{" " Manipulator[
                
                Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], 
              Dynamic[
               NumberForm[$CellContext`scale$$, {3, 2}]]}], 
            Row[{
              Text["Angular frequency \[Omega](q), selection:"], 
              Dynamic[
               SetterBar[
                
                Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = \
#; $CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], 
                Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
         "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
         Column[{
            Row[{
              Text["number of mesh intervals "], 
              Manipulator[
               
               Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                   EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                 True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {2,
                30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
               AppearanceElements -> {"InputField"}], " ", 
              Dynamic[$CellContext`freqMeshSize$$]}], 
            LocatorPane[
             Dynamic[$CellContext`qPlaneLoc$$], 
             Dynamic[
              (Graphics[{
                Lighter[Gray], 
                Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], -Part[#, 2]}, {
                   Part[#, 1], 
                   Part[#, 2]}, {-Part[#, 1], 
                   Part[#, 2]}}], Black, 
                Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                   Part[#, 1]}, {-Part[#, 2], 
                   Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
               ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
             ContinuousAction -> False]}], "parameters" -> Grid[{{
             Row[{
               Text["mass: "], 
               Dynamic[
                If[$CellContext`rawNumberOfMasses$$ > 1, 
                 SetterBar[
                  
                  Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   Range[$CellContext`rawNumberOfMasses$$]]], 
                 $CellContext`massLabel[1]]]}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                 Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                  ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                  Not[$CellContext`tick$$])& ], {0.25, 
                 Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
             Text["coupling to neighbouring: "], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ > 1, 
               SetterBar[
                
                Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                Map[# -> $CellContext`massLabel[#]& , 
                 Range[$CellContext`rawNumberOfMasses$$]]], 
               $CellContext`massLabel[1]]]}, {
             Row[{
               Text["horizontal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 1], FontColor -> RGBColor[
                  Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
               OverVector["a"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
             Row[{
               Text["vertical: "], 
               Style[
                Subscript[
                 Style["k", Italic], 2], FontColor -> RGBColor[0, 
                  Rational[2, 3], 0]], " || ", 
               OverVector["b"], " "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 3], FontColor -> 
                RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
               " || (", 
               OverVector["b"], " + ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
             Row[{
               Text["diagonal: "], 
               Style[
                Subscript[
                 Style["k", Italic], 4], FontColor -> RGBColor[0, 
                  Rational[2, 3], 
                  Rational[2, 3]]], " || (", 
               OverVector["b"], " - ", 
               OverVector["a"], ") "}], 
             Row[{
               Manipulator[
                
                Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 Dynamic[$CellContext`glConstKMin], 
                 Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[
                NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Text["coupling from "], 
                 Dynamic[
                  $CellContext`massLabel[$CellContext`m1Sel$$]], 
                 Text[" to: "]}]]], 
             Dynamic[
              Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
               Dynamic[
                $CellContext`massLabel[
                 First[
                  Delete[
                   Range[2], $CellContext`m1Sel$$]]]], 
               Blank[], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  DeleteCases[
                   
                   Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 $CellContext`kLable[5], ": "}]]], 
             Dynamic[
              If[$CellContext`rawNumberOfMasses$$ == 1, "", 
               Row[{
                 Dynamic[
                  Manipulator[
                   
                   Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                   ContinuousAction -> False, 
                   AppearanceElements -> {"InputField"}]], " ", 
                 Dynamic[
                  NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
        Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], ImageSize -> {250, 350}]],
       Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], True}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {{-2.43360732413016, \
-1.5367658704533202`}, {2.43360732413016, 1.5367658704533202`}}}, 0}, {{
       Hold[$CellContext`qLoc$$], {2.43360732413016, 1.5367658704533202`}}, 
      0}, {{
       Hold[$CellContext`tauSliderValue$$], 1}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.2}, 0}, {{
       Hold[$CellContext`freqMeshSize$$], 12}, 0}, {{
       Hold[$CellContext`dynMeshSize$$], 14}, 0}, {{
       Hold[$CellContext`matrix$$], 
       ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0}, {{
       Hold[$CellContext`dynamics$$], {{
         Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
          Complex[0.5861464486009521, -2.825764865181982*^-17], 
          Complex[0.8102051226649282, 0.]}}, {
         Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
          Complex[0.8102051226649281, 0.], 
          Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
        "], {10}, 1, {{
          Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
          Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
          Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
          Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
          Line[{{-3., -39.}, {3., 39.}}], 
          Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
          Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
          Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
          Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
          Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
          Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
          Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
          
          Line[{{-10.3, -38.300000000000004`}, {
           4.8999999999999995`, -31.900000000000002`}}], 
          Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
          Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
          
          Line[{{-10., -34.400000000000006`}, {
           5.199999999999999, -28.000000000000004`}}], 
          Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
          Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
          Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
          Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
          Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
          Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
          Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
          Line[{{-9.2, -24.}, {6., -17.6}}], 
          Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
          Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
          Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
          Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
          Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
          Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
          Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
          Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
          Line[{{-8.299999999999999, -12.3}, {
           6.8999999999999995`, -5.8999999999999995`}}], 
          Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
          Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
          Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
          
          Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
           7.3, -0.7000000000000002}}], 
          
          Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
           0.6000000000000001}}], 
          Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
          Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
          Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
          
          Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
           5.800000000000001}}], 
          
          Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
           7.1000000000000005`}}], 
          Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
          Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
          Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
          
          Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
           8.299999999999999, 12.3}}], 
          Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
          Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
          Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
          Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
          Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
          Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
          Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
          Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
          Line[{{-6., 17.6}, {9.2, 24.}}], 
          Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
          Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
          Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
          Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
          Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
          Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
          Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
          
          Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
           34.400000000000006`}}], 
          Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
          Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
          
          Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
           38.300000000000004`}}], 
          Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
          Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
          Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0}, {{
       Hold[$CellContext`freqPlot$$], 
       Graphics3D[
        GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
         "], {{{
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
               "]], 
              Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
               "]]}]}, {
            EdgeForm[], 
            GraphicsGroup[{
              Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
               "]], 
              Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
               "]], 
              Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
               "]]}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
             "]]}, {
            GrayLevel[0], 
            Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
             "]]}, {
            
            Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 1823, 
             1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 1897, 1209,
              1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 1938, 1267, 
             1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 1334}], 
            
            Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149, 
             1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 1658,
              1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 1690, 
             1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
            
            Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150, 
             1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 1660,
              1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 1692, 
             1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
            
            Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 1852, 
             1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 1905, 1213,
              1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 1964, 1271, 
             1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
            
            Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 1855, 
             1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 1913, 1214,
              1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 1972, 1272, 
             1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 1339}], 
            
            Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 1838, 
             1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 1894, 1215,
              1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 1971, 1273, 
             1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 1340}], 
            Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 1860, 
             1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 1917, 1219,
              1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 1980, 1277, 
             1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
            
            Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 1864, 
             1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 1920, 1220,
              1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 1984, 1278, 
             1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
            
            Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 1867, 
             1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 1221, 1234, 
             1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 1279, 2005, 1700,
              1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
            
            Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 1873, 
             1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 1929, 1223,
              1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 1990, 1281, 
             1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
            
            Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165, 
             1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 1243,
              1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 1303, 
             2012, 1309, 696, 1332, 2029, 1711, 1347}], 
            
            Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 1878, 
             1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 1937, 1225,
              1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 1974, 1284, 
             1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 1348}], 
            
            Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 1270, 
             1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 1212, 1904,
              1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 1151, 397, 1847,
              1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
            
            Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 1276, 
             1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 1218, 1916,
              1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 1158, 419, 1857,
              1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
            
            Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 1280, 
             1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 1222, 1928,
              1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 1162, 1872, 
             1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 1102}], 
            
            Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 2037, 
             1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 2111, 1469,
              1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 2152, 1527, 
             1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 1594}], 
            
            Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409, 
             1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 1762,
              2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 1794, 
             2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
            
            Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410, 
             2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 1764,
              2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 1796, 
             2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
            
            Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 2066, 
             1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 2119, 1473,
              1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 2178, 1531, 
             1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
            
            Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 2069, 
             1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 2127, 1474,
              1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 2186, 1532, 
             1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 1599}], 
            
            Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 2052, 
             1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 2108, 1475,
              1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 2185, 1533, 
             2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 1600}], 
            
            Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 2074, 
             1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 2131, 1479,
              1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 2194, 1537, 
             1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
            
            Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 2078, 
             1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 2134, 1480,
              1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 2198, 1538, 
             1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
            
            Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 2081, 
             1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 1481, 1494, 
             2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 1539, 2219, 1804,
              1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
            
            Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 2087, 
             1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 2143, 1483,
              1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 2204, 1541, 
             1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
            
            Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425, 
             1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 1503,
              2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 1563, 
             2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
            
            Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 2092, 
             1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 2151, 1485,
              2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 2188, 1544, 
             1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 1608}], 
            
            Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 1530, 
             2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 1472, 2118,
              2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 1411, 772, 2061,
              1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
            
            Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 1536, 
             1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 1478, 2130,
              2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 1418, 794, 2071,
              1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
            
            Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 1540, 
             2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 1482, 2142,
              2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 1422, 2086, 
             1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 1362}]}, {
            
            Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599, 
             594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 1951, 
             572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 560, 557, 
             1940, 556, 1941, 553, 581}], 
            
            Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566, 
             563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 1934, 
             544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 526, 1922, 
             521, 520, 1918, 515, 554}], 
            
            Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
             1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 358, 
             359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371, 1836, 
             374, 1837, 375, 377}], 
            
            Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
             1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 386, 
             387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405, 410, 
             1856, 411, 414}], 
            
            Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847, 
             396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 1859, 
             422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 440, 442, 
             1876, 446, 1877, 448, 451}], 
            
            Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435, 
             1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 407, 
             1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385, 383, 
             379, 1823, 417}], 
            
            Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866, 
             433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 1883, 
             458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471, 1892, 
             474, 1893, 475, 477}], 
            
            Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886, 
             465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 1898, 
             486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 504, 1911, 
             505, 510, 1914, 511, 514}], 
            
            Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903, 
             496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 1919, 
             522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 540, 1933, 
             542, 546, 1936, 548, 551}], 
            
            Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535, 
             1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 509, 
             507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489, 485, 
             1896, 483, 1897, 479, 517}], 
            
            Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636, 
             1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 1971, 
             608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 590, 1960, 
             586, 584, 580, 1938, 618}], 
            
            Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666, 
             663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 1994, 
             645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 627, 1983, 
             622, 621, 1979, 616, 654}], 
            
            Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962, 
             597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 619, 
             623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641, 1993, 
             643, 647, 1997, 649, 577}], 
            
            Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
             2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 2011, 
             669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 2000, 656, 
             2001, 653, 679}], 
            
            Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
             2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694, 
             2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 678, 
             1998, 702}], 
            
            Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974, 
             969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 2165, 
             947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 935, 932, 
             2154, 931, 2155, 928, 956}], 
            
            Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941, 
             938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 2148, 
             919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 901, 2136, 
             896, 895, 2132, 890, 929}], 
            
            Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
             2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 733, 
             734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746, 2050, 
             749, 2051, 750, 752}], 
            
            Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
             2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 761, 
             762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780, 785, 
             2070, 786, 789}], 
            
            Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061, 
             771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 2073, 
             797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 815, 817, 
             2090, 821, 2091, 823, 826}], 
            
            Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810, 
             2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 782, 
             2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760, 758, 
             754, 2037, 792}], 
            
            Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080, 
             808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 2097, 
             833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846, 2106, 
             849, 2107, 850, 852}], 
            
            Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100, 
             840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 2112, 
             861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 879, 2125, 
             880, 885, 2128, 886, 889}], 
            
            Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117, 
             871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 2133, 
             897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 915, 2147, 
             917, 921, 2150, 923, 926}], 
            
            Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910, 
             2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 884, 
             882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864, 860, 
             2110, 858, 2111, 854, 892}], 
            
            Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203, 
             1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989, 
             985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 967, 
             965, 2174, 961, 959, 955, 2152, 993}], 
            
            Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221, 
             1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 1026,
              1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 1008, 
             1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
            
            Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176, 
             972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 994, 
             998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206, 1016, 
             2207, 1018, 1022, 2211, 1024, 952}], 
            
            Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 1066, 
             1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 1048, 2224,
              1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 1036, 2218, 
             1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
            
            Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 1083, 
             1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 1073, 2237,
              1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 2231, 1060, 
             1057, 2229, 1056, 1053, 2212, 1077}]}, {}, {}, {}, {}, {}}}, 
         VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
          "]], {
        Axes -> True, 
         AxesLabel -> {
          "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
         BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
         Method -> {"RotationControl" -> "Globe"}, 
         PlotRange -> {{-2.709857394019914, 
          2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
          0., 0.49488850049789845`}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}}]}, 0}, {{
       Hold[$CellContext`bInitDefaults$$], False}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], True}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 3}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`rawNumberOfMasses$$], 4}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}}}, 0}, {{
       Hold[$CellContext`rawArrayOfMasses$$], {10, 20, 20, 20}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {{1, 1, {-1, 0}} -> 0.25, {1, 1, {0, -1}} -> 
        0.25, {1, 1, {-1, -1}} -> 0.25, {1, 1, {-1, 1}} -> 
        0.25, {1, 1, {1, 0}} -> 0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
        0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
        0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
        0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 0.25, {1, 2, {0, 1}} -> 
        0.25, {1, 2, {1, 1}} -> 0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
        0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
        0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
        0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 0.25, {2, 1, {1, 1}} -> 
        0.25, {2, 1, {1, -1}} -> 0.25, {2, 2, {-1, 0}} -> 
        0.25, {2, 2, {0, -1}} -> 0.25, {2, 2, {-1, -1}} -> 
        0.25, {2, 2, {-1, 1}} -> 0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
        0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
        0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
        0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
        0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 0.25, {1, 3, {1, 1}} -> 
        0.25, {1, 3, {1, -1}} -> 0.25, {1, 3, {0, 0}} -> 
        0.25, {2, 3, {-1, 0}} -> 0.25, {2, 3, {0, -1}} -> 
        0.25, {2, 3, {-1, -1}} -> 0.25, {2, 3, {-1, 1}} -> 
        0.25, {2, 3, {1, 0}} -> 0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
        0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
        0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
        0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
        0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 0.25, {3, 1, {1, 1}} -> 
        0.25, {3, 1, {1, -1}} -> 0.25, {3, 2, {-1, 0}} -> 
        0.25, {3, 2, {0, -1}} -> 0.25, {3, 2, {-1, -1}} -> 
        0.25, {3, 2, {-1, 1}} -> 0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
        0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
        0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
        0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
        0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 0.25, {3, 3, {1, 1}} -> 
        0.25, {3, 3, {1, -1}} -> 0.25, {1, 4, {-1, 0}} -> 
        0.25, {1, 4, {0, -1}} -> 0.25, {1, 4, {-1, -1}} -> 
        0.25, {1, 4, {-1, 1}} -> 0.25, {1, 4, {1, 0}} -> 0.25, {1, 4, {0, 1}} -> 
        0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 0.25, {1, 4, {0, 0}} -> 
        0.25, {2, 4, {-1, 0}} -> 0.25, {2, 4, {0, -1}} -> 
        0.25, {2, 4, {-1, -1}} -> 0.25, {2, 4, {-1, 1}} -> 
        0.25, {2, 4, {1, 0}} -> 0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 
        0.25, {2, 4, {1, -1}} -> 0.25, {2, 4, {0, 0}} -> 
        0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
        0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 
        0.25, {3, 4, {1, 0}} -> 0.25, {3, 4, {0, 1}} -> 0.25, {3, 4, {1, 1}} -> 
        0.25, {3, 4, {1, -1}} -> 0.25, {3, 4, {0, 0}} -> 
        0.25, {4, 1, {-1, 0}} -> 0.25, {4, 1, {0, -1}} -> 
        0.25, {4, 1, {-1, -1}} -> 0.25, {4, 1, {-1, 1}} -> 
        0.25, {4, 1, {1, 0}} -> 0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 
        0.25, {4, 1, {1, -1}} -> 0.25, {4, 2, {-1, 0}} -> 
        0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
        0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 0.25, {4, 2, {0, 1}} -> 
        0.25, {4, 2, {1, 1}} -> 0.25, {4, 2, {1, -1}} -> 
        0.25, {4, 3, {-1, 0}} -> 0.25, {4, 3, {0, -1}} -> 
        0.25, {4, 3, {-1, -1}} -> 0.25, {4, 3, {-1, 1}} -> 
        0.25, {4, 3, {1, 0}} -> 0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
        0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 
        0.25, {4, 4, {0, -1}} -> 0.25, {4, 4, {-1, -1}} -> 
        0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 0.25, {4, 4, {0, 1}} -> 
        0.25, {4, 4, {1, 1}} -> 0.25, {4, 4, {1, -1}} -> 0.25}}, 0}, {{
       Hold[$CellContext`u$$], {{-0.3460000000000001, 1.255}, {1.9, 0.8}, {
       0.9, 0.7}, {0.488, 1.105}, {1.44, 1.2400000000000002`}, {1.084, 
       1.3650000000000002`}}}, 0}, {{
       Hold[$CellContext`parameterLocatorDependencies$$], {
       "mScalarArray" -> {10, 20, 20, 20}, "numberOfMasses" -> 4, 
        "latticeBasis" -> {{-0.3460000000000001, 1.255}, {1.9, 0.8}}, 
        "latticeNorms" -> {1.3018221844783564`, 2.06155281280883}, 
        "latticeUnitVectors" -> {{-0.2657813057154524, 0.9640333487655856}, {
         0.9216353751380655, 0.3880570000581329}}, 
        "numberLatticeLinesToDisplay" -> {9, 4}, 
        "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
         1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1,
          0}, {1, 1}, {2, -1}, {2, 0}}, 
        "reciprocalBasis" -> {{-0.3006049674970879, 0.7139367978055837}, {
         0.47157404276105663`, 0.13001164844249058`}}, 
        "reciprocalNorms" -> {0.7746412703599106, 0.4891677693151304}, 
        "qMaxVec" -> {4.86721464826032, 3.0735317409066405`}, 
        "mObliqueComponents" -> {{0.22921128771652943`, 0.5154247923946944}, {
         0.642204937436591, 0.3737910043963477}, {0.45241047608311735`, 
         0.8402810656446099}, {0.6486679442377785, 0.6886521624769851}}, 
        "mPosFirstCell" -> {{0.9, 0.7}, {0.488, 1.105}, {1.44, 
         1.2400000000000002`}, {1.084, 1.3650000000000002`}}, 
        "pointsDataTable" -> CompressedData["
1:eJwtU21Ik1EUfufm3OZcIiEhoiYRQolFRUTFOX9sRUQpIiEiIRbijyVSESaD
qIh+ZEU/+pQ+LPpTIhKyxDpjSYRkgUYWpTkdLrXlPtqaOVvvPfceuHt33nvu
Oc/Hfdc2Hq8+atQ0zaQvh74y9OX2Dj+o7B+jqfbVPU6/ybunP7by8fQSxMvq
r/jiKap1lPd1LWYjp2VhKu5ta74WCtAzp18/EVf7MfDxAT81DOyzZ2yw4hFR
Xv8B0hyLdP+WiBc08k7ETzjGMaueZtQ4khB+8mb/9ktxYjjtUQh1wLaGAT/w
OGcaXHnndMRGtI13t+62mXHq4OUbrrxlkvtG3Pr87alX94ahh19Y0cJ1QRK/
490G7zQ3joLsn6BH/N6CdYx3hk5cX2OqdUSoiXH9osDjO0MlvfOwaYuI1/S0
sK5p5/dMfM88AqAnOoIEnV+o8hRdGAOLLFDzI8BwCox4huf9g5oZ0TBFUt8k
XBXjyn3A8P0ZOMgANJR8rPiwUhiieWV/M4bXb9ZHDBOnC3YsEcf7RqCTDdC8
Jxm/AQ+J7arfJOflop0BTZJXwKl4Sbmcz9Nfd4s+MgWaKPd0EtvbkYOlIi2a
A5andYI2sv/fQOr+Bz6zoDHgMR4bVvMfDW+yQXNUzOeXoaBiYp35bAQSzNeI
fN1iWcjt6m24S8jnitJtvh9ZWMP3KQjyPjgQdwgFiQq5X5pGS78uuVtSIPlF
6a7uTltzjuL3SfGaVM9Zkn4nQA4cBOm3TfELwQ/Wc57yuX4aoqMHGnMPRxS/
OEg7sxQ/A0q/o4rfCrD8XUHFz4TS70zFLxul/knFz4J79a/jYv4XxW8V/gc5
QbZN
         "], "lineTable" -> {{
           
           Line[{{-4.485999999999999, -14.494999999999997`}, {-10.714, 
            8.094999999999999}}], 
           
           Line[{{-2.5859999999999985`, -13.694999999999999`}, {-8.814, 
            8.894999999999998}}], 
           
           Line[{{-0.685999999999999, -12.894999999999998`}, \
{-6.914000000000001, 9.694999999999999}}], 
           
           Line[{{1.2140000000000009`, -12.094999999999999`}, \
{-5.014000000000001, 10.494999999999997`}}], 
           
           Line[{{3.1140000000000008`, -11.294999999999998`}, \
{-3.1140000000000008`, 11.294999999999998`}}], 
           
           Line[{{5.014000000000001, -10.494999999999997`}, \
{-1.2140000000000009`, 12.094999999999999`}}], 
           
           Line[{{6.914000000000001, -9.694999999999999}, {0.685999999999999, 
            12.894999999999998`}}], 
           
           Line[{{8.814, -8.894999999999998}, {2.5859999999999985`, 
            13.694999999999999`}}], 
           
           Line[{{10.714, -8.094999999999999}, {4.485999999999999, 
            14.494999999999997`}}]}, {
           
           Line[{{-4.485999999999999, -14.494999999999997`}, {
            10.714, -8.094999999999999}}], 
           
           Line[{{-4.831999999999999, -13.239999999999998`}, {
            10.368, -6.839999999999999}}], 
           Line[{{-5.177999999999999, -11.985}, {10.022, -5.585}}], 
           Line[{{-5.523999999999999, -10.73}, {9.676, -4.329999999999999}}], 
           Line[{{-5.869999999999999, -9.475}, {9.33, -3.0749999999999993`}}], 
           
           Line[{{-6.215999999999999, -8.219999999999999}, {
            8.984, -1.8199999999999994`}}], 
           Line[{{-6.561999999999999, -6.965}, {8.638, -0.5649999999999995}}], 
           Line[{{-6.9079999999999995`, -5.71}, {8.292, 0.6900000000000004}}], 
           Line[{{-7.254, -4.455}, {7.946, 1.9450000000000003`}}], 
           Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
           Line[{{-7.946, -1.9450000000000003`}, {7.254, 4.455}}], 
           Line[{{-8.292, -0.6900000000000004}, {6.9079999999999995`, 5.71}}], 
           Line[{{-8.638, 0.5649999999999995}, {6.561999999999999, 6.965}}], 
           
           Line[{{-8.984, 1.8199999999999994`}, {6.215999999999999, 
            8.219999999999999}}], 
           Line[{{-9.33, 3.0749999999999993`}, {5.869999999999999, 9.475}}], 
           Line[{{-9.676, 4.329999999999999}, {5.523999999999999, 10.73}}], 
           Line[{{-10.022, 5.585}, {5.177999999999999, 11.985}}], 
           
           Line[{{-10.368, 6.839999999999999}, {4.831999999999999, 
            13.239999999999998`}}], 
           
           Line[{{-10.714, 8.094999999999999}, {4.485999999999999, 
            14.494999999999997`}}]}}}}, 0}, {{
       Hold[$CellContext`couplingData$$], {{{{
          1, 2, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
           1.105}, {{
           0.5085673025355859, -0.49992659593910754`}, {-0.49992659593910754`,
            0.4914326974644139}}}, {
          1, 4, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
           1.3650000000000002`}, {{0.07111394909689736, 0.257015087768678}, {
           0.257015087768678, 0.9288860509031026}}}, {
          1, 3, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
           1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
           0.5000000000000003}}}}, {{
          2, 1, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
           1.105}, {{
           0.5085673025355859, -0.49992659593910754`}, {-0.49992659593910754`,
            0.4914326974644139}}}, {
          2, 4, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
           1.3650000000000002`}, {{0.8401195792023005, 0.3664951184439569}, {
           0.3664951184439569, 0.15988042079769943`}}}, {
          2, 3, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
           1.2400000000000002`}, {{0.9802872597830895, 
           0.13901132360369467`}, {0.13901132360369467`, 
           0.01971274021691052}}}}, {{
          3, 4, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
           1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
           0.8902438167756618, -0.31258560982291506`}, {-0.31258560982291506`,
            0.1097561832243382}}}, {
          3, 1, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
           1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
           0.5000000000000003}}}, {
          3, 2, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
           1.2400000000000002`}, {{0.9802872597830895, 
           0.13901132360369467`}, {0.13901132360369467`, 
           0.01971274021691052}}}}, {{
          4, 3, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
           1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
           0.8902438167756618, -0.31258560982291506`}, {-0.31258560982291506`,
            0.1097561832243382}}}, {
          4, 2, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
           1.3650000000000002`}, {{0.8401195792023005, 0.3664951184439569}, {
           0.3664951184439569, 0.15988042079769943`}}}, {
          4, 1, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
           1.3650000000000002`}, {{0.07111394909689736, 0.257015087768678}, {
           0.257015087768678, 0.9288860509031026}}}}}, {{{
          1, 4, {-1, 0}, 0.25, 0.6289999999999998, {0.9, 0.7}, {
           1.4300000000000002`, 0.11000000000000032`}, {{
           0.4465818759936411, -0.49713831478537357`}, {-0.49713831478537357`,
            0.5534181240063588}}}, {
          1, 2, {-1, 0}, 0.25, 0.7268559999999998, {0.9, 0.7}, {
           0.8340000000000001, -0.1499999999999999}, {{0.0059929339511540025`,
            0.07718172512849858}, {0.07718172512849858, 
           0.994007066048846}}}, {
          1, 3, {-1, 0}, 0.25, 1.2962209999999996`, {0.9, 0.7}, {
           1.786, -0.01499999999999968}, {{
           0.6056035197701628, -0.48872067340368647`}, {-0.48872067340368647`,
            0.3943964802298371}}}, {
          1, 1, {1, 0}, 0.25, 1.6947409999999998`, {0.9, 0.7}, {
           0.5539999999999999, 1.9549999999999998`}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          1, 1, {-1, 0}, 0.25, 1.6947409999999996`, {0.9, 0.7}, {
           1.246, -0.5549999999999999}, {{
           0.07063970246781073, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321893}}}, {
          1, 3, {0, -1}, 0.25, 1.9171999999999996`, {0.9, 
           0.7}, {-0.45999999999999996`, 0.44000000000000017`}, {{
           0.9647402461923639, 0.18443563530148122`}, {0.18443563530148122`, 
           0.03525975380763608}}}, {
          1, 4, {0, -1}, 0.25, 2.9628809999999994`, {0.9, 
           0.7}, {-0.8159999999999998, 0.5650000000000002}, {{
           0.9938488923449844, 0.0781874128593081}, {0.0781874128593081, 
           0.006151107655015489}}}, {
          1, 3, {1, 0}, 0.25, 3.2596610000000004`, {0.9, 0.7}, {
           1.0939999999999999`, 2.495}, {{0.011545985916940423`, 
           0.10683012742736123`}, {0.10683012742736123`, 
           0.9884540140830596}}}, {
          1, 3, {-1, -1}, 0.25, 3.323420999999998, {0.9, 
           0.7}, {-0.11399999999999988`, -0.8149999999999995}, {{
           0.30937879973677734`, 0.4622375558197412}, {0.4622375558197412, 
           0.6906212002632227}}}, {
          1, 2, {1, 0}, 0.25, 3.330164, {0.9, 0.7}, {0.1419999999999999, 
           2.36}, {{
           0.17253324460897426`, -0.3778432533652998}, {-0.3778432533652998, 
           0.8274667553910258}}}, {
          1, 2, {-1, 1}, 0.25, 3.3660560000000004`, {0.9, 0.7}, {2.734, 
           0.6500000000000001}, {{
           0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
          1, 2, {0, 1}, 0.25, 3.666169, {0.9, 0.7}, {2.388, 1.905}, {{
           0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
           0.3960605744034168}}}, {
          1, 4, {1, 0}, 0.25, 3.712644000000001, {0.9, 0.7}, {0.738, 2.62}, {{
           0.00706881672468462, -0.08377856858885474}, {-0.08377856858885474, 
           0.9929311832753154}}}, {
          1, 4, {-1, -1}, 0.25, 3.8089999999999975`, {0.9, 
           0.7}, {-0.46999999999999975`, -0.6899999999999995}, {{
           0.49275400367550554`, 0.49994749278025735`}, {0.49994749278025735`,
            0.5072459963244946}}}, {
          1, 3, {1, -1}, 0.25, 3.900461, {0.9, 0.7}, {-0.806, 1.695}, {{
           0.7461774390257973, -0.43519727539898495`}, {-0.43519727539898495`,
            0.25382256097420286`}}}, {
          1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {0, -1}, 0.25, 4.25, {0.9, 
           0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          1, 1, {1, -1}, 0.25, 5.251541, {0.9, 0.7}, {-1.346, 
           1.1549999999999998`}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          1, 1, {-1, 1}, 0.25, 5.251541, {0.9, 0.7}, {3.146, 
           0.2450000000000001}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          1, 2, {0, -1}, 0.25, 5.501368999999999, {0.9, 0.7}, {-1.412, 
           0.30499999999999994`}, {{0.9716388775230311, 
           0.16600231687785352`}, {0.16600231687785352`, 
           0.028361122476968925`}}}, {
          1, 4, {1, -1}, 0.25, 5.506244, {0.9, 0.7}, {-1.162, 1.82}, {{
           0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
           0.22781409614248846`}}}, {
          1, 4, {-1, 1}, 0.25, 5.949000000000001, {0.9, 0.7}, {3.33, 
           0.9100000000000004}, {{0.9925869894099848, 0.08577912254160378}, {
           0.08577912254160378, 0.007413010590015157}}}, {
          1, 4, {0, 1}, 0.25, 6.489281000000001, {0.9, 0.7}, {2.984, 
           2.165}, {{0.6692661328735803, 0.4704773918713028}, {
           0.4704773918713028, 0.33073386712641967`}}}, {
          1, 2, {-1, -1}, 0.25, 6.587655999999997, {0.9, 
           0.7}, {-1.0659999999999998`, -0.9499999999999997}, {{
           0.5867270543574225, 0.49242097644442884`}, {0.49242097644442884`, 
           0.41327294564257755`}}}, {
          1, 1, {1, 1}, 0.25, 6.637940999999998, {0.9, 0.7}, {
           2.4539999999999997`, 2.755}, {{0.3638049810927817, 
           0.4810934595531958}, {0.4810934595531958, 0.6361950189072184}}}, {
          1, 1, {-1, -1}, 0.25, 6.637940999999998, {0.9, 
           0.7}, {-0.6539999999999998, -1.3549999999999998`}, {{
           0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
           0.6361950189072184}}}, {
          1, 2, {1, 1}, 0.25, 7.355764, {0.9, 0.7}, {2.042, 
           3.1599999999999997`}, {{0.177298238497048, 0.3819208990391752}, {
           0.3819208990391752, 0.8227017615029519}}}, {
          1, 3, {0, 1}, 0.25, 7.7492, {0.9, 0.7}, {3.34, 2.04}, {{
           0.7682857585299127, 0.4219274247664275}, {0.4219274247664275, 
           0.23171424147008726`}}}, {
          1, 3, {-1, 1}, 0.25, 7.769021, {0.9, 0.7}, {3.686, 
           0.7850000000000004}, {{0.9990700243956092, 
           0.030481318045092316`}, {0.030481318045092316`, 
           0.0009299756043908324}}}, {
          1, 2, {1, -1}, 0.25, 7.804563999999999, {0.9, 0.7}, {-1.758, 
           1.5599999999999998`}, {{
           0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
           0.09476506310922683}}}, {
          1, 4, {1, 1}, 0.25, 10.419044, {0.9, 0.7}, {2.638, 3.42}, {{
           0.2899156582888027, 0.45372300951987526`}, {0.45372300951987526`, 
           0.7100843417111973}}}, {
          1, 3, {1, 1}, 0.25, 11.118860999999999`, {0.9, 0.7}, {
           2.9939999999999998`, 3.295}, {{0.39436017771964227`, 
           0.4887128276898146}, {0.4887128276898146, 
           0.6056398222803576}}}}, {{
          2, 1, {1, 0}, 0.25, 0.7268559999999998, {0.488, 1.105}, {
           0.5539999999999999, 1.9549999999999998`}, {{0.0059929339511540025`,
            0.07718172512849858}, {0.07718172512849858, 0.994007066048846}}},
           {
          2, 3, {0, -1}, 0.25, 1.3409289999999996`, {0.488, 
           1.105}, {-0.45999999999999996`, 0.44000000000000017`}, {{
           0.6702099812890915, 0.47013674847810727`}, {0.47013674847810727`, 
           0.3297900187109085}}}, {
          2, 2, {1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
           0.1419999999999999, 2.36}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          2, 2, {-1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
           0.8340000000000001, -0.1499999999999999}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          2, 4, {-1, 0}, 0.25, 1.8773889999999998`, {0.488, 1.105}, {
           1.4300000000000002`, 0.11000000000000032`}, {{
           0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
           0.5273414300392724}}}, {
          2, 4, {0, -1}, 0.25, 1.9920159999999993`, {0.488, 
           1.105}, {-0.8159999999999998, 0.5650000000000002}, {{
           0.8536156336093687, 0.3534911366173765}, {0.3534911366173765, 
           0.14638436639063135`}}}, {
          2, 3, {1, -1}, 0.25, 2.022536, {0.488, 1.105}, {-0.806, 1.695}, {{
           0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
           0.1721106571156212}}}, {
          2, 3, {1, 0}, 0.25, 2.2993360000000003`, {0.488, 1.105}, {
           1.0939999999999999`, 2.495}, {{0.1597139348055264, 
           0.36634054353082796`}, {0.36634054353082796`, 
           0.8402860651944737}}}, {
          2, 4, {1, 0}, 0.25, 2.3577250000000003`, {0.488, 1.105}, {0.738, 
           2.62}, {{0.02650860469308337, 0.16064214444008523`}, {
           0.16064214444008523`, 0.9734913953069165}}}, {
          2, 3, {-1, 0}, 0.25, 2.9392039999999993`, {0.488, 1.105}, {
           1.786, -0.01499999999999968}, {{
           0.5732177827738397, -0.49461010532103256`}, {-0.49461010532103256`,
            0.42678221722616044`}}}, {
          2, 4, {1, -1}, 0.25, 3.2337249999999997`, {0.488, 1.105}, {-1.162, 
           1.82}, {{
           0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
           0.1580916744621142}}}, {
          2, 1, {-1, 0}, 0.25, 3.330164, {0.488, 1.105}, {
           1.246, -0.5549999999999999}, {{
           0.1725332446089742, -0.37784325336529967`}, {-0.37784325336529967`,
            0.8274667553910258}}}, {
          2, 1, {1, -1}, 0.25, 3.3660560000000004`, {0.488, 1.105}, {-1.346, 
           1.1549999999999998`}, {{
           0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
          2, 1, {0, -1}, 0.25, 3.666169, {0.488, 
           1.105}, {-0.9999999999999999, -0.10000000000000009`}, {{
           0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
           0.3960605744034168}}}, {
          2, 3, {-1, -1}, 0.25, 4.048803999999998, {0.488, 
           1.105}, {-0.11399999999999988`, -0.8149999999999995}, {{
           0.08950890188806375, 0.28547689638718005`}, {0.28547689638718005`, 
           0.9104910981119363}}}, {
          2, 4, {-1, -1}, 0.25, 4.139788999999998, {0.488, 
           1.105}, {-0.46999999999999975`, -0.6899999999999995}, {{
           0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
           0.7783065755283662}}}, {
          2, 2, {0, 1}, 0.25, 4.25, {0.488, 1.105}, {2.388, 1.905}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          2, 2, {0, -1}, 0.25, 4.25, {0.488, 1.105}, {-1.412, 
           0.30499999999999994`}, {{0.8494117647058823, 
           0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          2, 2, {1, -1}, 0.25, 5.251541, {0.488, 1.105}, {-1.758, 
           1.5599999999999998`}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          2, 2, {-1, 1}, 0.25, 5.251541, {0.488, 1.105}, {2.734, 
           0.6500000000000001}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          2, 1, {0, 1}, 0.25, 5.501368999999999, {0.488, 1.105}, {2.8, 
           1.5}, {{0.9716388775230311, 0.16600231687785352`}, {
           0.16600231687785352`, 0.028361122476968925`}}}, {
          2, 1, {1, 1}, 0.25, 6.587655999999999, {0.488, 1.105}, {
           2.4539999999999997`, 2.755}, {{0.5867270543574223, 
           0.4924209764444288}, {0.4924209764444288, 0.4132729456425776}}}, {
          2, 2, {1, 1}, 0.25, 6.637940999999998, {0.488, 1.105}, {2.042, 
           3.1599999999999997`}, {{0.3638049810927817, 0.4810934595531958}, {
           0.4810934595531958, 0.6361950189072184}}}, {
          2, 2, {-1, -1}, 0.25, 6.637940999999998, {0.488, 
           1.105}, {-1.0659999999999998`, -0.9499999999999997}, {{
           0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
           0.6361950189072184}}}, {
          2, 4, {0, 1}, 0.25, 7.353616000000001, {0.488, 1.105}, {2.984, 
           2.165}, {{0.8472044229668777, 0.35979033988176695`}, {
           0.35979033988176695`, 0.15279557703312222`}}}, {
          2, 1, {-1, -1}, 0.25, 7.355764, {0.488, 
           1.105}, {-0.6539999999999998, -1.3549999999999998`}, {{
           0.177298238497048, 0.3819208990391752}, {0.3819208990391752, 
           0.8227017615029519}}}, {
          2, 1, {-1, 1}, 0.25, 7.804563999999999, {0.488, 1.105}, {3.146, 
           0.2450000000000001}, {{
           0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
           0.09476506310922683}}}, {
          2, 4, {-1, 1}, 0.25, 8.114989, {0.488, 1.105}, {3.33, 
           0.9100000000000004}, {{
           0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773, 
           0.004685773449600468}}}, {
          2, 3, {0, 1}, 0.25, 9.008129, {0.488, 1.105}, {3.34, 2.04}, {{
           0.9029515452098876, 0.29602373589454595`}, {0.29602373589454595`, 
           0.09704845479011237}}}, {
          2, 4, {1, 1}, 0.25, 9.981724999999999, {0.488, 1.105}, {2.638, 
           3.42}, {{0.4630963085037907, 0.49863625776105835`}, {
           0.49863625776105835`, 0.5369036914962093}}}, {
          2, 3, {-1, 1}, 0.25, 10.329604, {0.488, 1.105}, {3.686, 
           0.7850000000000004}, {{
           0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245, 
           0.00991325514511493}}}, {
          2, 3, {1, 1}, 0.25, 11.076135999999998`, {0.488, 1.105}, {
           2.9939999999999998`, 3.295}, {{0.5669879820905052, 
           0.49549229081333057`}, {0.49549229081333057`, 
           0.43301201790949484`}}}}, {{
          3, 4, {-1, 0}, 0.25, 1.2769999999999997`, {1.44, 
           1.2400000000000002`}, {1.4300000000000002`, 
           0.11000000000000032`}, {{0.00007830853563038039, 
           0.008848864526233173}, {0.008848864526233173, 
           0.9999216914643697}}}, {
          3, 1, {1, 0}, 0.25, 1.2962209999999996`, {1.44, 
           1.2400000000000002`}, {0.5539999999999999, 1.9549999999999998`}, {{
           0.6056035197701628, -0.48872067340368647`}, {-0.48872067340368647`,
            0.3943964802298371}}}, {
          3, 2, {0, 1}, 0.25, 1.3409289999999996`, {1.44, 
           1.2400000000000002`}, {2.388, 1.905}, {{0.6702099812890915, 
           0.47013674847810727`}, {0.47013674847810727`, 
           0.3297900187109085}}}, {
          3, 3, {1, 0}, 0.25, 1.6947409999999998`, {1.44, 
           1.2400000000000002`}, {1.0939999999999999`, 2.495}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          3, 3, {-1, 0}, 0.25, 1.6947409999999998`, {1.44, 
           1.2400000000000002`}, {1.786, -0.01499999999999968}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          3, 1, {0, 1}, 0.25, 1.9171999999999996`, {1.44, 
           1.2400000000000002`}, {2.8, 1.5}, {{0.9647402461923639, 
           0.18443563530148122`}, {0.18443563530148122`, 
           0.03525975380763608}}}, {
          3, 2, {-1, 1}, 0.25, 2.022536, {1.44, 1.2400000000000002`}, {2.734, 
           0.6500000000000001}, {{
           0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
           0.1721106571156212}}}, {
          3, 2, {-1, 0}, 0.25, 2.2993360000000003`, {1.44, 
           1.2400000000000002`}, {0.8340000000000001, -0.1499999999999999}, {{
           0.1597139348055264, 0.36634054353082796`}, {0.36634054353082796`, 
           0.8402860651944737}}}, {
          3, 4, {1, 0}, 0.25, 2.3972039999999994`, {1.44, 
           1.2400000000000002`}, {0.738, 2.62}, {{
           0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538, 
           0.794425505714157}}}, {
          3, 2, {1, 0}, 0.25, 2.9392039999999993`, {1.44, 
           1.2400000000000002`}, {0.1419999999999999, 2.36}, {{
           0.5732177827738397, -0.49461010532103256`}, {-0.49461010532103256`,
            0.42678221722616044`}}}, {
          3, 4, {0, 1}, 0.25, 3.239561, {1.44, 1.2400000000000002`}, {2.984, 
           2.165}, {{0.7358824235752931, 0.44086220324297015`}, {
           0.44086220324297015`, 0.2641175764247068}}}, {
          3, 1, {-1, 0}, 0.25, 3.2596610000000004`, {1.44, 
           1.2400000000000002`}, {1.246, -0.5549999999999999}, {{
           0.011545985916940437`, 0.10683012742736128`}, {
           0.10683012742736128`, 0.9884540140830596}}}, {
          3, 1, {1, 1}, 0.25, 3.323420999999999, {1.44, 
           1.2400000000000002`}, {2.4539999999999997`, 2.755}, {{
           0.3093787997367773, 0.46223755581974113`}, {0.46223755581974113`, 
           0.6906212002632227}}}, {
          3, 4, {-1, 1}, 0.25, 3.681, {1.44, 1.2400000000000002`}, {3.33, 
           0.9100000000000004}, {{
           0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
           0.029584352078239583`}}}, {
          3, 1, {-1, 1}, 0.25, 3.900461, {1.44, 1.2400000000000002`}, {3.146, 
           0.2450000000000001}, {{
           0.7461774390257973, -0.43519727539898495`}, {-0.43519727539898495`,
            0.25382256097420286`}}}, {
          3, 2, {1, 1}, 0.25, 4.048803999999998, {1.44, 
           1.2400000000000002`}, {2.042, 3.1599999999999997`}, {{
           0.08950890188806375, 0.28547689638718005`}, {0.28547689638718005`, 
           0.9104910981119363}}}, {
          3, 3, {0, 1}, 0.25, 4.25, {1.44, 1.2400000000000002`}, {3.34, 
           2.04}, {{0.8494117647058823, 0.3576470588235293}, {
           0.3576470588235293, 0.15058823529411758`}}}, {
          3, 3, {0, -1}, 0.25, 4.25, {1.44, 
           1.2400000000000002`}, {-0.45999999999999996`, 
           0.44000000000000017`}, {{0.8494117647058823, 
           0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          3, 3, {1, -1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {-0.806,
            1.695}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          3, 3, {-1, 1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {3.686, 
           0.7850000000000004}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          3, 4, {0, -1}, 0.25, 5.545160999999999, {1.44, 
           1.2400000000000002`}, {-0.8159999999999998, 0.5650000000000002}, {{
           0.9178337653316107, 0.2746178154250165}, {0.2746178154250165, 
           0.08216623466838927}}}, {
          3, 4, {1, 1}, 0.25, 6.1876039999999985`, {1.44, 
           1.2400000000000002`}, {2.638, 3.42}, {{0.23194826301101365`, 
           0.4220761380333971}, {0.4220761380333971, 0.7680517369889863}}}, {
          3, 3, {1, 1}, 0.25, 6.637940999999998, {1.44, 
           1.2400000000000002`}, {2.9939999999999998`, 3.295}, {{
           0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
           0.6361950189072184}}}, {
          3, 3, {-1, -1}, 0.25, 6.637940999999998, {1.44, 
           1.2400000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
           0.4810934595531958, 0.6361950189072184}}}, {
          3, 4, {1, -1}, 0.25, 7.106803999999999, {1.44, 
           1.2400000000000002`}, {-1.162, 1.82}, {{
           0.9526650798305399, -0.21235424531195737`}, {-0.21235424531195737`,
            0.04733492016946012}}}, {
          3, 4, {-1, -1}, 0.25, 7.3729999999999976`, {1.44, 
           1.2400000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.49479180794791805`, 0.4999728739997287}, {
           0.4999728739997287, 0.5052081920520819}}}, {
          3, 1, {0, -1}, 0.25, 7.7492, {1.44, 
           1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7682857585299127, 0.42192742476642753`}, {
           0.42192742476642753`, 0.23171424147008732`}}}, {
          3, 1, {1, -1}, 0.25, 7.769021, {1.44, 1.2400000000000002`}, {-1.346,
            1.1549999999999998`}, {{0.9990700243956092, 
           0.030481318045092316`}, {0.030481318045092316`, 
           0.0009299756043908324}}}, {
          3, 2, {0, -1}, 0.25, 9.008129, {1.44, 1.2400000000000002`}, {-1.412,
            0.30499999999999994`}, {{0.9029515452098876, 0.296023735894546}, {
           0.296023735894546, 0.09704845479011241}}}, {
          3, 2, {1, -1}, 0.25, 10.329604, {1.44, 
           1.2400000000000002`}, {-1.758, 1.5599999999999998`}, {{
           0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245, 
           0.00991325514511493}}}, {
          3, 2, {-1, -1}, 0.25, 11.076135999999998`, {1.44, 
           1.2400000000000002`}, {-1.0659999999999998`, -0.9499999999999997}, \
{{0.5669879820905052, 0.49549229081333057`}, {0.49549229081333057`, 
           0.43301201790949484`}}}, {
          3, 1, {-1, -1}, 0.25, 11.118860999999999`, {1.44, 
           1.2400000000000002`}, {-0.6539999999999998, -1.3549999999999998`}, \
{{0.39436017771964227`, 0.4887128276898146}, {0.4887128276898146, 
           0.6056398222803576}}}}, {{
          4, 1, {1, 0}, 0.25, 0.6289999999999998, {1.084, 
           1.3650000000000002`}, {0.5539999999999999, 1.9549999999999998`}, {{
           0.4465818759936411, -0.49713831478537357`}, {-0.49713831478537357`,
            0.5534181240063588}}}, {
          4, 3, {1, 0}, 0.25, 1.2769999999999997`, {1.084, 
           1.3650000000000002`}, {1.0939999999999999`, 2.495}, {{
           0.00007830853563038039, 0.008848864526233173}, {
           0.008848864526233173, 0.9999216914643697}}}, {
          4, 4, {1, 0}, 0.25, 1.6947409999999998`, {1.084, 
           1.3650000000000002`}, {0.738, 2.62}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          4, 4, {-1, 0}, 0.25, 1.6947409999999998`, {1.084, 
           1.3650000000000002`}, {1.4300000000000002`, 
           0.11000000000000032`}, {{
           0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
           0.9293602975321892}}}, {
          4, 2, {1, 0}, 0.25, 1.8773889999999998`, {1.084, 
           1.3650000000000002`}, {0.1419999999999999, 2.36}, {{
           0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
           0.5273414300392724}}}, {
          4, 2, {0, 1}, 0.25, 1.9920159999999993`, {1.084, 
           1.3650000000000002`}, {2.388, 1.905}, {{0.8536156336093687, 
           0.3534911366173765}, {0.3534911366173765, 
           0.14638436639063135`}}}, {
          4, 2, {-1, 0}, 0.25, 2.3577250000000003`, {1.084, 
           1.3650000000000002`}, {0.8340000000000001, -0.1499999999999999}, {{
           0.02650860469308337, 0.16064214444008523`}, {0.16064214444008523`, 
           0.9734913953069165}}}, {
          4, 3, {-1, 0}, 0.25, 2.3972039999999994`, {1.084, 
           1.3650000000000002`}, {1.786, -0.01499999999999968}, {{
           0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538, 
           0.794425505714157}}}, {
          4, 1, {0, 1}, 0.25, 2.9628809999999994`, {1.084, 
           1.3650000000000002`}, {2.8, 1.5}, {{0.9938488923449844, 
           0.0781874128593081}, {0.0781874128593081, 
           0.006151107655015489}}}, {
          4, 2, {-1, 1}, 0.25, 3.2337249999999997`, {1.084, 
           1.3650000000000002`}, {2.734, 0.6500000000000001}, {{
           0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
           0.1580916744621142}}}, {
          4, 3, {0, -1}, 0.25, 3.239561, {1.084, 
           1.3650000000000002`}, {-0.45999999999999996`, 
           0.44000000000000017`}, {{0.7358824235752931, 
           0.44086220324297026`}, {0.44086220324297026`, 
           0.2641175764247069}}}, {
          4, 3, {1, -1}, 0.25, 3.681, {1.084, 1.3650000000000002`}, {-0.806, 
           1.695}, {{
           0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
           0.029584352078239583`}}}, {
          4, 1, {-1, 0}, 0.25, 3.712644000000001, {1.084, 
           1.3650000000000002`}, {1.246, -0.5549999999999999}, {{
           0.00706881672468461, -0.08377856858885468}, {-0.08377856858885468, 
           0.9929311832753154}}}, {
          4, 1, {1, 1}, 0.25, 3.8089999999999984`, {1.084, 
           1.3650000000000002`}, {2.4539999999999997`, 2.755}, {{
           0.4927540036755054, 0.4999474927802573}, {0.4999474927802573, 
           0.5072459963244946}}}, {
          4, 2, {1, 1}, 0.25, 4.139788999999998, {1.084, 
           1.3650000000000002`}, {2.042, 3.1599999999999997`}, {{
           0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
           0.7783065755283662}}}, {
          4, 4, {0, 1}, 0.25, 4.25, {1.084, 1.3650000000000002`}, {2.984, 
           2.165}, {{0.8494117647058823, 0.3576470588235293}, {
           0.3576470588235293, 0.15058823529411758`}}}, {
          4, 4, {0, -1}, 0.25, 4.25, {1.084, 
           1.3650000000000002`}, {-0.8159999999999998, 0.5650000000000002}, {{
           0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
           0.15058823529411766`}}}, {
          4, 4, {1, -1}, 0.25, 5.251541, {1.084, 
           1.3650000000000002`}, {-1.162, 1.82}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          4, 4, {-1, 1}, 0.25, 5.251541, {1.084, 1.3650000000000002`}, {3.33, 
           0.9100000000000004}, {{
           0.9605782378924587, -0.19459621471107236`}, {-0.19459621471107236`,
            0.039421762107541364`}}}, {
          4, 1, {-1, 1}, 0.25, 5.506244, {1.084, 1.3650000000000002`}, {3.146,
            0.2450000000000001}, {{
           0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
           0.22781409614248846`}}}, {
          4, 3, {0, 1}, 0.25, 5.5451609999999985`, {1.084, 
           1.3650000000000002`}, {3.34, 2.04}, {{0.9178337653316108, 
           0.2746178154250165}, {0.2746178154250165, 0.08216623466838924}}}, {
          4, 1, {1, -1}, 0.25, 5.949000000000001, {1.084, 
           1.3650000000000002`}, {-1.346, 1.1549999999999998`}, {{
           0.9925869894099848, 0.08577912254160378}, {0.08577912254160378, 
           0.007413010590015157}}}, {
          4, 3, {-1, -1}, 0.25, 6.1876039999999985`, {1.084, 
           1.3650000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.23194826301101365`, 0.4220761380333971}, {
           0.4220761380333971, 0.7680517369889863}}}, {
          4, 1, {0, -1}, 0.25, 6.489281000000002, {1.084, 
           1.3650000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.6692661328735803, 0.47047739187130283`}, {
           0.47047739187130283`, 0.3307338671264197}}}, {
          4, 4, {1, 1}, 0.25, 6.637940999999998, {1.084, 
           1.3650000000000002`}, {2.638, 3.42}, {{0.3638049810927817, 
           0.4810934595531958}, {0.4810934595531958, 0.6361950189072184}}}, {
          4, 4, {-1, -1}, 0.25, 6.637940999999998, {1.084, 
           1.3650000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
           0.4810934595531958, 0.6361950189072184}}}, {
          4, 3, {-1, 1}, 0.25, 7.106803999999999, {1.084, 
           1.3650000000000002`}, {3.686, 0.7850000000000004}, {{
           0.9526650798305399, -0.21235424531195737`}, {-0.21235424531195737`,
            0.04733492016946012}}}, {
          4, 2, {0, -1}, 0.25, 7.353616000000001, {1.084, 
           1.3650000000000002`}, {-1.412, 0.30499999999999994`}, {{
           0.8472044229668777, 0.35979033988176706`}, {0.35979033988176706`, 
           0.15279557703312227`}}}, {
          4, 3, {1, 1}, 0.25, 7.3729999999999976`, {1.084, 
           1.3650000000000002`}, {2.9939999999999998`, 3.295}, {{
           0.49479180794791805`, 0.4999728739997287}, {0.4999728739997287, 
           0.5052081920520819}}}, {
          4, 2, {1, -1}, 0.25, 8.114989, {1.084, 
           1.3650000000000002`}, {-1.758, 1.5599999999999998`}, {{
           0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773, 
           0.004685773449600468}}}, {
          4, 2, {-1, -1}, 0.25, 9.981724999999999, {1.084, 
           1.3650000000000002`}, {-1.0659999999999998`, -0.9499999999999997}, \
{{0.4630963085037907, 0.49863625776105835`}, {0.49863625776105835`, 
           0.5369036914962093}}}, {
          4, 1, {-1, -1}, 0.25, 10.419044, {1.084, 
           1.3650000000000002`}, {-0.6539999999999998, -1.3549999999999998`}, \
{{0.2899156582888027, 0.45372300951987526`}, {0.45372300951987526`, 
           0.7100843417111973}}}}}}}, 0}, {{
       Hold[$CellContext`glConstSpringColorsByN$$], {{-1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
          Rational[2, 3], 0], {-1, -1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]], {0, 0} -> RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], {1, 0} -> RGBColor[
          Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
          Rational[2, 3], 0], {1, 1} -> 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
        RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]}}, 0}, {{
       Hold[$CellContext`k1$$], 0.25}, 0}, {{
       Hold[$CellContext`k2$$], 0.25}, 0}, {{
       Hold[$CellContext`k3$$], 0.25}, 0}, {{
       Hold[$CellContext`k4$$], 0.25}, 0}, {{
       Hold[$CellContext`k5$$], 0.25}, 0}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bInitDefaults$$ = 
        False, $CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        True, $CellContext`couplingData$$ = {{{{
            1, 2, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
             1.105}, {{
             0.5085673025355859, -0.49992659593910754`}, \
{-0.49992659593910754`, 0.4914326974644139}}}, {
            1, 4, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
             1.3650000000000002`}, {{0.07111394909689736, 
             0.257015087768678}, {0.257015087768678, 0.9288860509031026}}}, {
            1, 3, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
             1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
             0.5000000000000003}}}}, {{
            2, 1, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
             1.105}, {{
             0.5085673025355859, -0.49992659593910754`}, \
{-0.49992659593910754`, 0.4914326974644139}}}, {
            2, 4, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
             1.3650000000000002`}, {{0.8401195792023005, 
             0.3664951184439569}, {0.3664951184439569, 
             0.15988042079769943`}}}, {
            2, 3, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
             1.2400000000000002`}, {{0.9802872597830895, 
             0.13901132360369467`}, {0.13901132360369467`, 
             0.01971274021691052}}}}, {{
            3, 4, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
             1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
             0.8902438167756618, -0.31258560982291506`}, \
{-0.31258560982291506`, 0.1097561832243382}}}, {
            3, 1, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
             1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
             0.5000000000000003}}}, {
            3, 2, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
             1.2400000000000002`}, {{0.9802872597830895, 
             0.13901132360369467`}, {0.13901132360369467`, 
             0.01971274021691052}}}}, {{
            4, 3, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
             1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
             
             0.8902438167756618, -0.31258560982291506`}, \
{-0.31258560982291506`, 0.1097561832243382}}}, {
            4, 2, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
             1.3650000000000002`}, {{0.8401195792023005, 
             0.3664951184439569}, {0.3664951184439569, 
             0.15988042079769943`}}}, {
            4, 1, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
             1.3650000000000002`}, {{0.07111394909689736, 
             0.257015087768678}, {0.257015087768678, 
             0.9288860509031026}}}}}, {{{
            1, 4, {-1, 0}, 0.25, 0.6289999999999998, {0.9, 0.7}, {
             1.4300000000000002`, 0.11000000000000032`}, {{
             0.4465818759936411, -0.49713831478537357`}, \
{-0.49713831478537357`, 0.5534181240063588}}}, {
            1, 2, {-1, 0}, 0.25, 0.7268559999999998, {0.9, 0.7}, {
             0.8340000000000001, -0.1499999999999999}, {{
             0.0059929339511540025`, 0.07718172512849858}, {
             0.07718172512849858, 0.994007066048846}}}, {
            1, 3, {-1, 0}, 0.25, 1.2962209999999996`, {0.9, 0.7}, {
             1.786, -0.01499999999999968}, {{
             0.6056035197701628, -0.48872067340368647`}, \
{-0.48872067340368647`, 0.3943964802298371}}}, {
            1, 1, {1, 0}, 0.25, 1.6947409999999998`, {0.9, 0.7}, {
             0.5539999999999999, 1.9549999999999998`}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            1, 1, {-1, 0}, 0.25, 1.6947409999999996`, {0.9, 0.7}, {
             1.246, -0.5549999999999999}, {{
             0.07063970246781073, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321893}}}, {
            1, 3, {0, -1}, 0.25, 1.9171999999999996`, {0.9, 
             0.7}, {-0.45999999999999996`, 0.44000000000000017`}, {{
             0.9647402461923639, 0.18443563530148122`}, {0.18443563530148122`,
              0.03525975380763608}}}, {
            1, 4, {0, -1}, 0.25, 2.9628809999999994`, {0.9, 
             0.7}, {-0.8159999999999998, 0.5650000000000002}, {{
             0.9938488923449844, 0.0781874128593081}, {0.0781874128593081, 
             0.006151107655015489}}}, {
            1, 3, {1, 0}, 0.25, 3.2596610000000004`, {0.9, 0.7}, {
             1.0939999999999999`, 2.495}, {{0.011545985916940423`, 
             0.10683012742736123`}, {0.10683012742736123`, 
             0.9884540140830596}}}, {
            1, 3, {-1, -1}, 0.25, 3.323420999999998, {0.9, 
             0.7}, {-0.11399999999999988`, -0.8149999999999995}, {{
             0.30937879973677734`, 0.4622375558197412}, {0.4622375558197412, 
             0.6906212002632227}}}, {
            1, 2, {1, 0}, 0.25, 3.330164, {0.9, 0.7}, {0.1419999999999999, 
             2.36}, {{
             0.17253324460897426`, -0.3778432533652998}, {-0.3778432533652998,
              0.8274667553910258}}}, {
            1, 2, {-1, 1}, 0.25, 3.3660560000000004`, {0.9, 0.7}, {2.734, 
             0.6500000000000001}, {{
             0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
            1, 2, {0, 1}, 0.25, 3.666169, {0.9, 0.7}, {2.388, 1.905}, {{
             0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
             0.3960605744034168}}}, {
            1, 4, {1, 0}, 0.25, 3.712644000000001, {0.9, 0.7}, {0.738, 
             2.62}, {{
             0.00706881672468462, -0.08377856858885474}, \
{-0.08377856858885474, 0.9929311832753154}}}, {
            1, 4, {-1, -1}, 0.25, 3.8089999999999975`, {0.9, 
             0.7}, {-0.46999999999999975`, -0.6899999999999995}, {{
             0.49275400367550554`, 0.49994749278025735`}, {
             0.49994749278025735`, 0.5072459963244946}}}, {
            1, 3, {1, -1}, 0.25, 3.900461, {0.9, 0.7}, {-0.806, 1.695}, {{
             0.7461774390257973, -0.43519727539898495`}, \
{-0.43519727539898495`, 0.25382256097420286`}}}, {
            1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {0, -1}, 0.25, 4.25, {0.9, 
             0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            1, 1, {1, -1}, 0.25, 5.251541, {0.9, 0.7}, {-1.346, 
             1.1549999999999998`}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            1, 1, {-1, 1}, 0.25, 5.251541, {0.9, 0.7}, {3.146, 
             0.2450000000000001}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            1, 2, {0, -1}, 0.25, 5.501368999999999, {0.9, 0.7}, {-1.412, 
             0.30499999999999994`}, {{0.9716388775230311, 
             0.16600231687785352`}, {0.16600231687785352`, 
             0.028361122476968925`}}}, {
            1, 4, {1, -1}, 0.25, 5.506244, {0.9, 0.7}, {-1.162, 1.82}, {{
             0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
             0.22781409614248846`}}}, {
            1, 4, {-1, 1}, 0.25, 5.949000000000001, {0.9, 0.7}, {3.33, 
             0.9100000000000004}, {{0.9925869894099848, 
             0.08577912254160378}, {0.08577912254160378, 
             0.007413010590015157}}}, {
            1, 4, {0, 1}, 0.25, 6.489281000000001, {0.9, 0.7}, {2.984, 
             2.165}, {{0.6692661328735803, 0.4704773918713028}, {
             0.4704773918713028, 0.33073386712641967`}}}, {
            1, 2, {-1, -1}, 0.25, 6.587655999999997, {0.9, 
             0.7}, {-1.0659999999999998`, -0.9499999999999997}, {{
             0.5867270543574225, 0.49242097644442884`}, {0.49242097644442884`,
              0.41327294564257755`}}}, {
            1, 1, {1, 1}, 0.25, 6.637940999999998, {0.9, 0.7}, {
             2.4539999999999997`, 2.755}, {{0.3638049810927817, 
             0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            1, 1, {-1, -1}, 0.25, 6.637940999999998, {0.9, 
             0.7}, {-0.6539999999999998, -1.3549999999999998`}, {{
             0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            1, 2, {1, 1}, 0.25, 7.355764, {0.9, 0.7}, {2.042, 
             3.1599999999999997`}, {{0.177298238497048, 0.3819208990391752}, {
             0.3819208990391752, 0.8227017615029519}}}, {
            1, 3, {0, 1}, 0.25, 7.7492, {0.9, 0.7}, {3.34, 2.04}, {{
             0.7682857585299127, 0.4219274247664275}, {0.4219274247664275, 
             0.23171424147008726`}}}, {
            1, 3, {-1, 1}, 0.25, 7.769021, {0.9, 0.7}, {3.686, 
             0.7850000000000004}, {{0.9990700243956092, 
             0.030481318045092316`}, {0.030481318045092316`, 
             0.0009299756043908324}}}, {
            1, 2, {1, -1}, 0.25, 7.804563999999999, {0.9, 0.7}, {-1.758, 
             1.5599999999999998`}, {{
             0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
             0.09476506310922683}}}, {
            1, 4, {1, 1}, 0.25, 10.419044, {0.9, 0.7}, {2.638, 3.42}, {{
             0.2899156582888027, 0.45372300951987526`}, {0.45372300951987526`,
              0.7100843417111973}}}, {
            1, 3, {1, 1}, 0.25, 11.118860999999999`, {0.9, 0.7}, {
             2.9939999999999998`, 3.295}, {{0.39436017771964227`, 
             0.4887128276898146}, {0.4887128276898146, 
             0.6056398222803576}}}}, {{
            2, 1, {1, 0}, 0.25, 0.7268559999999998, {0.488, 1.105}, {
             0.5539999999999999, 1.9549999999999998`}, {{
             0.0059929339511540025`, 0.07718172512849858}, {
             0.07718172512849858, 0.994007066048846}}}, {
            2, 3, {0, -1}, 0.25, 1.3409289999999996`, {0.488, 
             1.105}, {-0.45999999999999996`, 0.44000000000000017`}, {{
             0.6702099812890915, 0.47013674847810727`}, {0.47013674847810727`,
              0.3297900187109085}}}, {
            2, 2, {1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
             0.1419999999999999, 2.36}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            2, 2, {-1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
             0.8340000000000001, -0.1499999999999999}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            2, 4, {-1, 0}, 0.25, 1.8773889999999998`, {0.488, 1.105}, {
             1.4300000000000002`, 0.11000000000000032`}, {{
             0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
             0.5273414300392724}}}, {
            2, 4, {0, -1}, 0.25, 1.9920159999999993`, {0.488, 
             1.105}, {-0.8159999999999998, 0.5650000000000002}, {{
             0.8536156336093687, 0.3534911366173765}, {0.3534911366173765, 
             0.14638436639063135`}}}, {
            2, 3, {1, -1}, 0.25, 2.022536, {0.488, 1.105}, {-0.806, 1.695}, {{
             0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
             0.1721106571156212}}}, {
            2, 3, {1, 0}, 0.25, 2.2993360000000003`, {0.488, 1.105}, {
             1.0939999999999999`, 2.495}, {{0.1597139348055264, 
             0.36634054353082796`}, {0.36634054353082796`, 
             0.8402860651944737}}}, {
            2, 4, {1, 0}, 0.25, 2.3577250000000003`, {0.488, 1.105}, {0.738, 
             2.62}, {{0.02650860469308337, 0.16064214444008523`}, {
             0.16064214444008523`, 0.9734913953069165}}}, {
            2, 3, {-1, 0}, 0.25, 2.9392039999999993`, {0.488, 1.105}, {
             1.786, -0.01499999999999968}, {{
             0.5732177827738397, -0.49461010532103256`}, \
{-0.49461010532103256`, 0.42678221722616044`}}}, {
            2, 4, {1, -1}, 0.25, 3.2337249999999997`, {0.488, 1.105}, {-1.162,
              1.82}, {{
             0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
             0.1580916744621142}}}, {
            2, 1, {-1, 0}, 0.25, 3.330164, {0.488, 1.105}, {
             1.246, -0.5549999999999999}, {{
             0.1725332446089742, -0.37784325336529967`}, \
{-0.37784325336529967`, 0.8274667553910258}}}, {
            2, 1, {1, -1}, 0.25, 3.3660560000000004`, {0.488, 1.105}, {-1.346,
              1.1549999999999998`}, {{
             0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
            2, 1, {0, -1}, 0.25, 3.666169, {0.488, 
             1.105}, {-0.9999999999999999, -0.10000000000000009`}, {{
             0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
             0.3960605744034168}}}, {
            2, 3, {-1, -1}, 0.25, 4.048803999999998, {0.488, 
             1.105}, {-0.11399999999999988`, -0.8149999999999995}, {{
             0.08950890188806375, 0.28547689638718005`}, {
             0.28547689638718005`, 0.9104910981119363}}}, {
            2, 4, {-1, -1}, 0.25, 4.139788999999998, {0.488, 
             1.105}, {-0.46999999999999975`, -0.6899999999999995}, {{
             0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
             0.7783065755283662}}}, {
            2, 2, {0, 1}, 0.25, 4.25, {0.488, 1.105}, {2.388, 1.905}, {{
             0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`,
              0.15058823529411766`}}}, {
            2, 2, {0, -1}, 0.25, 4.25, {0.488, 1.105}, {-1.412, 
             0.30499999999999994`}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            2, 2, {1, -1}, 0.25, 5.251541, {0.488, 1.105}, {-1.758, 
             1.5599999999999998`}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            2, 2, {-1, 1}, 0.25, 5.251541, {0.488, 1.105}, {2.734, 
             0.6500000000000001}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            2, 1, {0, 1}, 0.25, 5.501368999999999, {0.488, 1.105}, {2.8, 
             1.5}, {{0.9716388775230311, 0.16600231687785352`}, {
             0.16600231687785352`, 0.028361122476968925`}}}, {
            2, 1, {1, 1}, 0.25, 6.587655999999999, {0.488, 1.105}, {
             2.4539999999999997`, 2.755}, {{0.5867270543574223, 
             0.4924209764444288}, {0.4924209764444288, 
             0.4132729456425776}}}, {
            2, 2, {1, 1}, 0.25, 6.637940999999998, {0.488, 1.105}, {2.042, 
             3.1599999999999997`}, {{0.3638049810927817, 
             0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            2, 2, {-1, -1}, 0.25, 6.637940999999998, {0.488, 
             1.105}, {-1.0659999999999998`, -0.9499999999999997}, {{
             0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            2, 4, {0, 1}, 0.25, 7.353616000000001, {0.488, 1.105}, {2.984, 
             2.165}, {{0.8472044229668777, 0.35979033988176695`}, {
             0.35979033988176695`, 0.15279557703312222`}}}, {
            2, 1, {-1, -1}, 0.25, 7.355764, {0.488, 
             1.105}, {-0.6539999999999998, -1.3549999999999998`}, {{
             0.177298238497048, 0.3819208990391752}, {0.3819208990391752, 
             0.8227017615029519}}}, {
            2, 1, {-1, 1}, 0.25, 7.804563999999999, {0.488, 1.105}, {3.146, 
             0.2450000000000001}, {{
             0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
             0.09476506310922683}}}, {
            2, 4, {-1, 1}, 0.25, 8.114989, {0.488, 1.105}, {3.33, 
             0.9100000000000004}, {{
             0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773,
              0.004685773449600468}}}, {
            2, 3, {0, 1}, 0.25, 9.008129, {0.488, 1.105}, {3.34, 2.04}, {{
             0.9029515452098876, 0.29602373589454595`}, {0.29602373589454595`,
              0.09704845479011237}}}, {
            2, 4, {1, 1}, 0.25, 9.981724999999999, {0.488, 1.105}, {2.638, 
             3.42}, {{0.4630963085037907, 0.49863625776105835`}, {
             0.49863625776105835`, 0.5369036914962093}}}, {
            2, 3, {-1, 1}, 0.25, 10.329604, {0.488, 1.105}, {3.686, 
             0.7850000000000004}, {{
             0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245,
              0.00991325514511493}}}, {
            2, 3, {1, 1}, 0.25, 11.076135999999998`, {0.488, 1.105}, {
             2.9939999999999998`, 3.295}, {{0.5669879820905052, 
             0.49549229081333057`}, {0.49549229081333057`, 
             0.43301201790949484`}}}}, {{
            3, 4, {-1, 0}, 0.25, 1.2769999999999997`, {1.44, 
             1.2400000000000002`}, {1.4300000000000002`, 
             0.11000000000000032`}, {{0.00007830853563038039, 
             0.008848864526233173}, {0.008848864526233173, 
             0.9999216914643697}}}, {
            3, 1, {1, 0}, 0.25, 1.2962209999999996`, {1.44, 
             1.2400000000000002`}, {0.5539999999999999, 
             1.9549999999999998`}, {{
             0.6056035197701628, -0.48872067340368647`}, \
{-0.48872067340368647`, 0.3943964802298371}}}, {
            3, 2, {0, 1}, 0.25, 1.3409289999999996`, {1.44, 
             1.2400000000000002`}, {2.388, 1.905}, {{0.6702099812890915, 
             0.47013674847810727`}, {0.47013674847810727`, 
             0.3297900187109085}}}, {
            3, 3, {1, 0}, 0.25, 1.6947409999999998`, {1.44, 
             1.2400000000000002`}, {1.0939999999999999`, 2.495}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            3, 3, {-1, 0}, 0.25, 1.6947409999999998`, {1.44, 
             1.2400000000000002`}, {1.786, -0.01499999999999968}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            3, 1, {0, 1}, 0.25, 1.9171999999999996`, {1.44, 
             1.2400000000000002`}, {2.8, 1.5}, {{0.9647402461923639, 
             0.18443563530148122`}, {0.18443563530148122`, 
             0.03525975380763608}}}, {
            3, 2, {-1, 1}, 0.25, 2.022536, {1.44, 1.2400000000000002`}, {
             2.734, 0.6500000000000001}, {{
             0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
             0.1721106571156212}}}, {
            3, 2, {-1, 0}, 0.25, 2.2993360000000003`, {1.44, 
             1.2400000000000002`}, {
             0.8340000000000001, -0.1499999999999999}, {{0.1597139348055264, 
             0.36634054353082796`}, {0.36634054353082796`, 
             0.8402860651944737}}}, {
            3, 4, {1, 0}, 0.25, 2.3972039999999994`, {1.44, 
             1.2400000000000002`}, {0.738, 2.62}, {{
             0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538,
              0.794425505714157}}}, {
            3, 2, {1, 0}, 0.25, 2.9392039999999993`, {1.44, 
             1.2400000000000002`}, {0.1419999999999999, 2.36}, {{
             0.5732177827738397, -0.49461010532103256`}, \
{-0.49461010532103256`, 0.42678221722616044`}}}, {
            3, 4, {0, 1}, 0.25, 3.239561, {1.44, 1.2400000000000002`}, {2.984,
              2.165}, {{0.7358824235752931, 0.44086220324297015`}, {
             0.44086220324297015`, 0.2641175764247068}}}, {
            3, 1, {-1, 0}, 0.25, 3.2596610000000004`, {1.44, 
             1.2400000000000002`}, {1.246, -0.5549999999999999}, {{
             0.011545985916940437`, 0.10683012742736128`}, {
             0.10683012742736128`, 0.9884540140830596}}}, {
            3, 1, {1, 1}, 0.25, 3.323420999999999, {1.44, 
             1.2400000000000002`}, {2.4539999999999997`, 2.755}, {{
             0.3093787997367773, 0.46223755581974113`}, {0.46223755581974113`,
              0.6906212002632227}}}, {
            3, 4, {-1, 1}, 0.25, 3.681, {1.44, 1.2400000000000002`}, {3.33, 
             0.9100000000000004}, {{
             0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
             0.029584352078239583`}}}, {
            3, 1, {-1, 1}, 0.25, 3.900461, {1.44, 1.2400000000000002`}, {
             3.146, 0.2450000000000001}, {{
             0.7461774390257973, -0.43519727539898495`}, \
{-0.43519727539898495`, 0.25382256097420286`}}}, {
            3, 2, {1, 1}, 0.25, 4.048803999999998, {1.44, 
             1.2400000000000002`}, {2.042, 3.1599999999999997`}, {{
             0.08950890188806375, 0.28547689638718005`}, {
             0.28547689638718005`, 0.9104910981119363}}}, {
            3, 3, {0, 1}, 0.25, 4.25, {1.44, 1.2400000000000002`}, {3.34, 
             2.04}, {{0.8494117647058823, 0.3576470588235293}, {
             0.3576470588235293, 0.15058823529411758`}}}, {
            3, 3, {0, -1}, 0.25, 4.25, {1.44, 
             1.2400000000000002`}, {-0.45999999999999996`, 
             0.44000000000000017`}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            3, 3, {1, -1}, 0.25, 5.251541, {1.44, 
             1.2400000000000002`}, {-0.806, 1.695}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            3, 3, {-1, 1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {
             3.686, 0.7850000000000004}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            3, 4, {0, -1}, 0.25, 5.545160999999999, {1.44, 
             1.2400000000000002`}, {-0.8159999999999998, 
             0.5650000000000002}, {{0.9178337653316107, 0.2746178154250165}, {
             0.2746178154250165, 0.08216623466838927}}}, {
            3, 4, {1, 1}, 0.25, 6.1876039999999985`, {1.44, 
             1.2400000000000002`}, {2.638, 3.42}, {{0.23194826301101365`, 
             0.4220761380333971}, {0.4220761380333971, 
             0.7680517369889863}}}, {
            3, 3, {1, 1}, 0.25, 6.637940999999998, {1.44, 
             1.2400000000000002`}, {2.9939999999999998`, 3.295}, {{
             0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            3, 3, {-1, -1}, 0.25, 6.637940999999998, {1.44, 
             1.2400000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
             0.4810934595531958, 0.6361950189072184}}}, {
            3, 4, {1, -1}, 0.25, 7.106803999999999, {1.44, 
             1.2400000000000002`}, {-1.162, 1.82}, {{
             0.9526650798305399, -0.21235424531195737`}, \
{-0.21235424531195737`, 0.04733492016946012}}}, {
            3, 4, {-1, -1}, 0.25, 7.3729999999999976`, {1.44, 
             1.2400000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.49479180794791805`, 0.4999728739997287}, {
             0.4999728739997287, 0.5052081920520819}}}, {
            3, 1, {0, -1}, 0.25, 7.7492, {1.44, 
             1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7682857585299127, 0.42192742476642753`}, {
             0.42192742476642753`, 0.23171424147008732`}}}, {
            3, 1, {1, -1}, 0.25, 7.769021, {1.44, 
             1.2400000000000002`}, {-1.346, 1.1549999999999998`}, {{
             0.9990700243956092, 0.030481318045092316`}, {
             0.030481318045092316`, 0.0009299756043908324}}}, {
            3, 2, {0, -1}, 0.25, 9.008129, {1.44, 
             1.2400000000000002`}, {-1.412, 0.30499999999999994`}, {{
             0.9029515452098876, 0.296023735894546}, {0.296023735894546, 
             0.09704845479011241}}}, {
            3, 2, {1, -1}, 0.25, 10.329604, {1.44, 
             1.2400000000000002`}, {-1.758, 1.5599999999999998`}, {{
             0.9900867448548851, -0.09907059360649245}, {-0.09907059360649245,
              0.00991325514511493}}}, {
            3, 2, {-1, -1}, 0.25, 11.076135999999998`, {1.44, 
             1.2400000000000002`}, {-1.0659999999999998`, \
-0.9499999999999997}, {{0.5669879820905052, 0.49549229081333057`}, {
             0.49549229081333057`, 0.43301201790949484`}}}, {
            3, 1, {-1, -1}, 0.25, 11.118860999999999`, {1.44, 
             1.2400000000000002`}, {-0.6539999999999998, \
-1.3549999999999998`}, {{0.39436017771964227`, 0.4887128276898146}, {
             0.4887128276898146, 0.6056398222803576}}}}, {{
            4, 1, {1, 0}, 0.25, 0.6289999999999998, {1.084, 
             1.3650000000000002`}, {0.5539999999999999, 
             1.9549999999999998`}, {{
             0.4465818759936411, -0.49713831478537357`}, \
{-0.49713831478537357`, 0.5534181240063588}}}, {
            4, 3, {1, 0}, 0.25, 1.2769999999999997`, {1.084, 
             1.3650000000000002`}, {1.0939999999999999`, 2.495}, {{
             0.00007830853563038039, 0.008848864526233173}, {
             0.008848864526233173, 0.9999216914643697}}}, {
            4, 4, {1, 0}, 0.25, 1.6947409999999998`, {1.084, 
             1.3650000000000002`}, {0.738, 2.62}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            4, 4, {-1, 0}, 0.25, 1.6947409999999998`, {1.084, 
             1.3650000000000002`}, {1.4300000000000002`, 
             0.11000000000000032`}, {{
             0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574, 
             0.9293602975321892}}}, {
            4, 2, {1, 0}, 0.25, 1.8773889999999998`, {1.084, 
             1.3650000000000002`}, {0.1419999999999999, 2.36}, {{
             0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
             0.5273414300392724}}}, {
            4, 2, {0, 1}, 0.25, 1.9920159999999993`, {1.084, 
             1.3650000000000002`}, {2.388, 1.905}, {{0.8536156336093687, 
             0.3534911366173765}, {0.3534911366173765, 
             0.14638436639063135`}}}, {
            4, 2, {-1, 0}, 0.25, 2.3577250000000003`, {1.084, 
             1.3650000000000002`}, {
             0.8340000000000001, -0.1499999999999999}, {{0.02650860469308337, 
             0.16064214444008523`}, {0.16064214444008523`, 
             0.9734913953069165}}}, {
            4, 3, {-1, 0}, 0.25, 2.3972039999999994`, {1.084, 
             1.3650000000000002`}, {1.786, -0.01499999999999968}, {{
             0.20557449428584304`, -0.4041208007328538}, {-0.4041208007328538,
              0.794425505714157}}}, {
            4, 1, {0, 1}, 0.25, 2.9628809999999994`, {1.084, 
             1.3650000000000002`}, {2.8, 1.5}, {{0.9938488923449844, 
             0.0781874128593081}, {0.0781874128593081, 
             0.006151107655015489}}}, {
            4, 2, {-1, 1}, 0.25, 3.2337249999999997`, {1.084, 
             1.3650000000000002`}, {2.734, 0.6500000000000001}, {{
             0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
             0.1580916744621142}}}, {
            4, 3, {0, -1}, 0.25, 3.239561, {1.084, 
             1.3650000000000002`}, {-0.45999999999999996`, 
             0.44000000000000017`}, {{0.7358824235752931, 
             0.44086220324297026`}, {0.44086220324297026`, 
             0.2641175764247069}}}, {
            4, 3, {1, -1}, 0.25, 3.681, {1.084, 1.3650000000000002`}, {-0.806,
              1.695}, {{
             0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
             0.029584352078239583`}}}, {
            4, 1, {-1, 0}, 0.25, 3.712644000000001, {1.084, 
             1.3650000000000002`}, {1.246, -0.5549999999999999}, {{
             0.00706881672468461, -0.08377856858885468}, \
{-0.08377856858885468, 0.9929311832753154}}}, {
            4, 1, {1, 1}, 0.25, 3.8089999999999984`, {1.084, 
             1.3650000000000002`}, {2.4539999999999997`, 2.755}, {{
             0.4927540036755054, 0.4999474927802573}, {0.4999474927802573, 
             0.5072459963244946}}}, {
            4, 2, {1, 1}, 0.25, 4.139788999999998, {1.084, 
             1.3650000000000002`}, {2.042, 3.1599999999999997`}, {{
             0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
             0.7783065755283662}}}, {
            4, 4, {0, 1}, 0.25, 4.25, {1.084, 1.3650000000000002`}, {2.984, 
             2.165}, {{0.8494117647058823, 0.3576470588235293}, {
             0.3576470588235293, 0.15058823529411758`}}}, {
            4, 4, {0, -1}, 0.25, 4.25, {1.084, 
             1.3650000000000002`}, {-0.8159999999999998, 
             0.5650000000000002}, {{0.8494117647058823, 
             0.35764705882352943`}, {0.35764705882352943`, 
             0.15058823529411766`}}}, {
            4, 4, {1, -1}, 0.25, 5.251541, {1.084, 
             1.3650000000000002`}, {-1.162, 1.82}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            4, 4, {-1, 1}, 0.25, 5.251541, {1.084, 1.3650000000000002`}, {
             3.33, 0.9100000000000004}, {{
             0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
            4, 1, {-1, 1}, 0.25, 5.506244, {1.084, 1.3650000000000002`}, {
             3.146, 0.2450000000000001}, {{
             0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
             0.22781409614248846`}}}, {
            4, 3, {0, 1}, 0.25, 5.5451609999999985`, {1.084, 
             1.3650000000000002`}, {3.34, 2.04}, {{0.9178337653316108, 
             0.2746178154250165}, {0.2746178154250165, 
             0.08216623466838924}}}, {
            4, 1, {1, -1}, 0.25, 5.949000000000001, {1.084, 
             1.3650000000000002`}, {-1.346, 1.1549999999999998`}, {{
             0.9925869894099848, 0.08577912254160378}, {0.08577912254160378, 
             0.007413010590015157}}}, {
            4, 3, {-1, -1}, 0.25, 6.1876039999999985`, {1.084, 
             1.3650000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.23194826301101365`, 0.4220761380333971}, {
             0.4220761380333971, 0.7680517369889863}}}, {
            4, 1, {0, -1}, 0.25, 6.489281000000002, {1.084, 
             1.3650000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.6692661328735803, 0.47047739187130283`}, {
             0.47047739187130283`, 0.3307338671264197}}}, {
            4, 4, {1, 1}, 0.25, 6.637940999999998, {1.084, 
             1.3650000000000002`}, {2.638, 3.42}, {{0.3638049810927817, 
             0.4810934595531958}, {0.4810934595531958, 
             0.6361950189072184}}}, {
            4, 4, {-1, -1}, 0.25, 6.637940999999998, {1.084, 
             1.3650000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
             0.4810934595531958, 0.6361950189072184}}}, {
            4, 3, {-1, 1}, 0.25, 7.106803999999999, {1.084, 
             1.3650000000000002`}, {3.686, 0.7850000000000004}, {{
             0.9526650798305399, -0.21235424531195737`}, \
{-0.21235424531195737`, 0.04733492016946012}}}, {
            4, 2, {0, -1}, 0.25, 7.353616000000001, {1.084, 
             1.3650000000000002`}, {-1.412, 0.30499999999999994`}, {{
             0.8472044229668777, 0.35979033988176706`}, {0.35979033988176706`,
              0.15279557703312227`}}}, {
            4, 3, {1, 1}, 0.25, 7.3729999999999976`, {1.084, 
             1.3650000000000002`}, {2.9939999999999998`, 3.295}, {{
             0.49479180794791805`, 0.4999728739997287}, {0.4999728739997287, 
             0.5052081920520819}}}, {
            4, 2, {1, -1}, 0.25, 8.114989, {1.084, 
             1.3650000000000002`}, {-1.758, 1.5599999999999998`}, {{
             0.9953142265503996, -0.06829214432699773}, {-0.06829214432699773,
              0.004685773449600468}}}, {
            4, 2, {-1, -1}, 0.25, 9.981724999999999, {1.084, 
             1.3650000000000002`}, {-1.0659999999999998`, \
-0.9499999999999997}, {{0.4630963085037907, 0.49863625776105835`}, {
             0.49863625776105835`, 0.5369036914962093}}}, {
            4, 1, {-1, -1}, 0.25, 10.419044, {1.084, 
             1.3650000000000002`}, {-0.6539999999999998, \
-1.3549999999999998`}, {{0.2899156582888027, 0.45372300951987526`}, {
             0.45372300951987526`, 
             0.7100843417111973}}}}}}, $CellContext`dynamics$$ = {{
           Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
            Complex[0.5861464486009521, -2.825764865181982*^-17], 
            Complex[0.8102051226649282, 0.]}}, {
           Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
            Complex[0.8102051226649281, 0.], 
            
            Complex[-0.5861464486009522, 
             2.8257648651819845`*^-17]}}}, $CellContext`dynMeshSize$$ = 
        14, $CellContext`dynPlot$$ = {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
          "], {10}, 1, {{
            Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
            Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
            Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
            Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
            Line[{{-3., -39.}, {3., 39.}}], 
            Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
            Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
            Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
            Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
            Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
            Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
            Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
            
            Line[{{-10.3, -38.300000000000004`}, {
             4.8999999999999995`, -31.900000000000002`}}], 
            Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
            Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
            
            Line[{{-10., -34.400000000000006`}, {
             5.199999999999999, -28.000000000000004`}}], 
            Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
            Line[{{-9.8, -31.8}, {
             5.3999999999999995`, -25.400000000000002`}}], 
            Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
            Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
            Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
            Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
            
            Line[{{-9.3, -25.3}, {
             5.8999999999999995`, -18.900000000000002`}}], 
            Line[{{-9.2, -24.}, {6., -17.6}}], 
            Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
            Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
            Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
            
            Line[{{-8.8, -18.8}, {
             6.3999999999999995`, -12.400000000000002`}}], 
            Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
            Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
            Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
            Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
            
            Line[{{-8.299999999999999, -12.3}, {
             6.8999999999999995`, -5.8999999999999995`}}], 
            Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
            Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
            Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
            
            Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
             7.3, -0.7000000000000002}}], 
            
            Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
             0.6000000000000001}}], 
            Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
            Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
            Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
            
            Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
             5.800000000000001}}], 
            
            Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
             7.1000000000000005`}}], 
            Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
            Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
            Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
            
            Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
             8.299999999999999, 12.3}}], 
            Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
            Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
            Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
            Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
            Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
            Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
            Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
            Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
            Line[{{-6., 17.6}, {9.2, 24.}}], 
            Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
            Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
            Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
            Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
            Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
            Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
            Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
            
            Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
             34.400000000000006`}}], 
            Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
            Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
            
            Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
             38.300000000000004`}}], 
            Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
            Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
            Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}, $CellContext`dynTab$$ = 
        1, $CellContext`freqMeshSize$$ = 12, $CellContext`freqPlot$$ = 
        Graphics3D[
          GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
           "], {{{
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
                 "]], 
                Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                 "]], 
                Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                 "]]}]}, {
              EdgeForm[], 
              GraphicsGroup[{
                Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                 "]], 
                Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                 "]], 
                Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                 "]]}]}, {}, {}, {}, {}, {}}, {{
              GrayLevel[0], 
              Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
               "]]}, {
              GrayLevel[0], 
              Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
               "]]}, {
              
              Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
               1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
               1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
               1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
               1334}], 
              
              Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 1149,
                1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 1210, 
               1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 1268, 
               1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
              
              Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 1150,
                1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 1211, 
               1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 1269, 
               1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
              
              Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
               1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
               1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
               1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
              
              Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
               1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
               1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
               1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
               1339}], 
              
              Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
               1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
               1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
               1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
               1340}], 
              
              Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
               1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
               1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
               1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
              
              Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
               1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
               1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
               1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
              
              Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
               1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
               1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
               1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
              
              Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
               1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
               1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
               1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
              
              Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 1165,
                1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 1224, 
               1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 1283, 
               1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
              
              Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
               1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
               1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
               1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
               1348}], 
              
              Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
               1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
               1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
               1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
              
              Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
               1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
               1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
               1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
              
              Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
               1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
               1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
               1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
               1102}], 
              
              Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
               2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
               2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
               2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
               1594}], 
              
              Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 1409,
                1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 1470, 
               1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 1528, 
               1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
              
              Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 1410,
                2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 1471, 
               1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 1529, 
               1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
              
              Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
               2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
               2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
               2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
              
              Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
               2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
               2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
               2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
               1599}], 
              
              Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
               2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
               2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
               2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
               1600}], 
              
              Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
               2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
               2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
               2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
              
              Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
               2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
               2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
               2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
              
              Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
               2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
               1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
               1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
              
              Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
               2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
               2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
               2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
              
              Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 1425,
                1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 1484, 
               1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 1543, 
               1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
              
              Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
               2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
               2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
               2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
               1608}], 
              
              Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
               1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
               1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
               1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
              
              Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
               1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
               1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
               1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
              
              Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
               1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
               1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
               1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
               1362}]}, {
              
              Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 599,
                594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 573, 
               1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 1943, 
               560, 557, 1940, 556, 1941, 553, 581}], 
              
              Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 566,
                563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 545, 
               1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 1921, 
               526, 1922, 521, 520, 1918, 515, 554}], 
              
              Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346, 
               1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
               358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 371,
                1836, 374, 1837, 375, 377}], 
              
              Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365, 
               1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
               386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 405,
                410, 1856, 411, 414}], 
              
              Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 1847,
                396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 418, 
               1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 1871, 
               440, 442, 1876, 446, 1877, 448, 451}], 
              
              Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 435,
                1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 409, 
               407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 1844, 385,
                383, 379, 1823, 417}], 
              
              Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 1866,
                433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 455, 
               1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 470, 471,
                1892, 474, 1893, 475, 477}], 
              
              Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 1886,
                465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 481, 
               1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 1910, 
               504, 1911, 505, 510, 1914, 511, 514}], 
              
              Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 1903,
                496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 518, 
               1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 1932, 
               540, 1933, 542, 546, 1936, 548, 551}], 
              
              Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 535,
                1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 1894, 
               509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 491, 489,
                485, 1896, 483, 1897, 479, 517}], 
              
              Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 636,
                1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 610, 
               1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 592, 
               590, 1960, 586, 584, 580, 1938, 618}], 
              
              Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 666,
                663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 646, 
               1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 1982, 
               627, 1983, 622, 621, 1979, 616, 654}], 
              
              Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 1962,
                597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 1977, 
               619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 1992, 641,
                1993, 643, 647, 1997, 649, 577}], 
              
              Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688, 
               2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
               2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
               2000, 656, 2001, 653, 679}], 
              
              Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707, 
               2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 694,
                2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 681, 
               678, 1998, 702}], 
              
              Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 974,
                969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 948, 
               2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 2157, 
               935, 932, 2154, 931, 2155, 928, 956}], 
              
              Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 941,
                938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 920, 
               2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 2135, 
               901, 2136, 896, 895, 2132, 890, 929}], 
              
              Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721, 
               2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
               733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 746,
                2050, 749, 2051, 750, 752}], 
              
              Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740, 
               2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
               761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 780,
                785, 2070, 786, 789}], 
              
              Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 2061,
                771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 793, 
               2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 2085, 
               815, 817, 2090, 821, 2091, 823, 826}], 
              
              Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 810,
                2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 784, 
               782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 2058, 760,
                758, 754, 2037, 792}], 
              
              Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 2080,
                808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 830, 
               2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 845, 846,
                2106, 849, 2107, 850, 852}], 
              
              Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 2100,
                840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 856, 
               2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 2124, 
               879, 2125, 880, 885, 2128, 886, 889}], 
              
              Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 2117,
                871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 893, 
               2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 2146, 
               915, 2147, 917, 921, 2150, 923, 926}], 
              
              Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 910,
                2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 2108, 
               884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 866, 864,
                860, 2110, 858, 2111, 854, 892}], 
              
              Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 2203,
                1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 2192, 989,
                985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 971, 2179, 
               967, 965, 2174, 961, 959, 955, 2152, 993}], 
              
              Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 2221,
                1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 2213, 
               1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 2200, 
               1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 1029}], 
              
              Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 2176,
                972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 2191, 
               994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 1012, 2206,
                1016, 2207, 1018, 1022, 2211, 1024, 952}], 
              
              Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
               1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
               1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
               1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
              
              Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
               1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
               1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
               2231, 1060, 1057, 2229, 1056, 1053, 2212, 
               1077}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
            "]], {
          Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
           BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
           Method -> {"RotationControl" -> "Globe"}, 
           PlotRange -> {{-2.709857394019914, 
            2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
            0., 0.49488850049789845`}}, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02], 
             Scaled[0.02]}}], $CellContext`freqTab$$ = 
        2, $CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
            Rational[2, 3], 0], {-1, -1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], {0, 0} -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], {1, 0} -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
            Rational[2, 3], 0], {1, 1} -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
          RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]}, $CellContext`k1$$ = 0.25, $CellContext`k2$$ = 
        0.25, $CellContext`k3$$ = 0.25, $CellContext`k4$$ = 
        0.25, $CellContext`k5$$ = 
        0.25, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 
          0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
          0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
          0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
          0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
          0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
          0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
          0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
          0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
          0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
          0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
          0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
          0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
          0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
          0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
          0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
          0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
          0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
          0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
          0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
          0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
          0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
          0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
          0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
          0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
          0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
          0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
          0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
          0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
          0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
          0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
          0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
          0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
          0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
          0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
          0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
          0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
          0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 
          0.25, {1, 4, {-1, 0}} -> 0.25, {1, 4, {0, -1}} -> 
          0.25, {1, 4, {-1, -1}} -> 0.25, {1, 4, {-1, 1}} -> 
          0.25, {1, 4, {1, 0}} -> 0.25, {1, 4, {0, 1}} -> 
          0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 
          0.25, {1, 4, {0, 0}} -> 0.25, {2, 4, {-1, 0}} -> 
          0.25, {2, 4, {0, -1}} -> 0.25, {2, 4, {-1, -1}} -> 
          0.25, {2, 4, {-1, 1}} -> 0.25, {2, 4, {1, 0}} -> 
          0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 
          0.25, {2, 4, {1, -1}} -> 0.25, {2, 4, {0, 0}} -> 
          0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
          0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 
          0.25, {3, 4, {1, 0}} -> 0.25, {3, 4, {0, 1}} -> 
          0.25, {3, 4, {1, 1}} -> 0.25, {3, 4, {1, -1}} -> 
          0.25, {3, 4, {0, 0}} -> 0.25, {4, 1, {-1, 0}} -> 
          0.25, {4, 1, {0, -1}} -> 0.25, {4, 1, {-1, -1}} -> 
          0.25, {4, 1, {-1, 1}} -> 0.25, {4, 1, {1, 0}} -> 
          0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 
          0.25, {4, 1, {1, -1}} -> 0.25, {4, 2, {-1, 0}} -> 
          0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
          0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 
          0.25, {4, 2, {0, 1}} -> 0.25, {4, 2, {1, 1}} -> 
          0.25, {4, 2, {1, -1}} -> 0.25, {4, 3, {-1, 0}} -> 
          0.25, {4, 3, {0, -1}} -> 0.25, {4, 3, {-1, -1}} -> 
          0.25, {4, 3, {-1, 1}} -> 0.25, {4, 3, {1, 0}} -> 
          0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
          0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 
          0.25, {4, 4, {0, -1}} -> 0.25, {4, 4, {-1, -1}} -> 
          0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 
          0.25, {4, 4, {0, 1}} -> 0.25, {4, 4, {1, 1}} -> 
          0.25, {4, 4, {1, -1}} -> 0.25}, $CellContext`m1Sel$$ = 
        1, $CellContext`m2Sel$$ = 1, $CellContext`matrix$$ = 
        ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& , \
$CellContext`mLocDefault$$ = {{0.9, 0.7}}, $CellContext`moSel$$ = 
        2, $CellContext`omegaIndex$$ = 
        1, $CellContext`parameterLocatorDependencies$$ = {
         "mScalarArray" -> {10, 20, 20, 20}, "numberOfMasses" -> 4, 
          "latticeBasis" -> {{-0.3460000000000001, 1.255}, {1.9, 0.8}}, 
          "latticeNorms" -> {1.3018221844783564`, 2.06155281280883}, 
          "latticeUnitVectors" -> {{-0.2657813057154524, 
           0.9640333487655856}, {0.9216353751380655, 0.3880570000581329}}, 
          "numberLatticeLinesToDisplay" -> {9, 4}, 
          "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
           1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {
           1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
          "reciprocalBasis" -> {{-0.3006049674970879, 0.7139367978055837}, {
           0.47157404276105663`, 0.13001164844249058`}}, 
          "reciprocalNorms" -> {0.7746412703599106, 0.4891677693151304}, 
          "qMaxVec" -> {4.86721464826032, 3.0735317409066405`}, 
          "mObliqueComponents" -> {{0.22921128771652943`, 
           0.5154247923946944}, {0.642204937436591, 0.3737910043963477}, {
           0.45241047608311735`, 0.8402810656446099}, {0.6486679442377785, 
           0.6886521624769851}}, 
          "mPosFirstCell" -> {{0.9, 0.7}, {0.488, 1.105}, {1.44, 
           1.2400000000000002`}, {1.084, 1.3650000000000002`}}, 
          "pointsDataTable" -> CompressedData["
1:eJwtU21Ik1EUfufm3OZcIiEhoiYRQolFRUTFOX9sRUQpIiEiIRbijyVSESaD
qIh+ZEU/+pQ+LPpTIhKyxDpjSYRkgUYWpTkdLrXlPtqaOVvvPfceuHt33nvu
Oc/Hfdc2Hq8+atQ0zaQvh74y9OX2Dj+o7B+jqfbVPU6/ybunP7by8fQSxMvq
r/jiKap1lPd1LWYjp2VhKu5ta74WCtAzp18/EVf7MfDxAT81DOyzZ2yw4hFR
Xv8B0hyLdP+WiBc08k7ETzjGMaueZtQ4khB+8mb/9ktxYjjtUQh1wLaGAT/w
OGcaXHnndMRGtI13t+62mXHq4OUbrrxlkvtG3Pr87alX94ahh19Y0cJ1QRK/
490G7zQ3joLsn6BH/N6CdYx3hk5cX2OqdUSoiXH9osDjO0MlvfOwaYuI1/S0
sK5p5/dMfM88AqAnOoIEnV+o8hRdGAOLLFDzI8BwCox4huf9g5oZ0TBFUt8k
XBXjyn3A8P0ZOMgANJR8rPiwUhiieWV/M4bXb9ZHDBOnC3YsEcf7RqCTDdC8
Jxm/AQ+J7arfJOflop0BTZJXwKl4Sbmcz9Nfd4s+MgWaKPd0EtvbkYOlIi2a
A5andYI2sv/fQOr+Bz6zoDHgMR4bVvMfDW+yQXNUzOeXoaBiYp35bAQSzNeI
fN1iWcjt6m24S8jnitJtvh9ZWMP3KQjyPjgQdwgFiQq5X5pGS78uuVtSIPlF
6a7uTltzjuL3SfGaVM9Zkn4nQA4cBOm3TfELwQ/Wc57yuX4aoqMHGnMPRxS/
OEg7sxQ/A0q/o4rfCrD8XUHFz4TS70zFLxul/knFz4J79a/jYv4XxW8V/gc5
QbZN
           "], "lineTable" -> {{
             
             Line[{{-4.485999999999999, -14.494999999999997`}, {-10.714, 
              8.094999999999999}}], 
             
             Line[{{-2.5859999999999985`, -13.694999999999999`}, {-8.814, 
              8.894999999999998}}], 
             
             Line[{{-0.685999999999999, -12.894999999999998`}, \
{-6.914000000000001, 9.694999999999999}}], 
             
             Line[{{1.2140000000000009`, -12.094999999999999`}, \
{-5.014000000000001, 10.494999999999997`}}], 
             
             Line[{{3.1140000000000008`, -11.294999999999998`}, \
{-3.1140000000000008`, 11.294999999999998`}}], 
             
             Line[{{5.014000000000001, -10.494999999999997`}, \
{-1.2140000000000009`, 12.094999999999999`}}], 
             
             Line[{{6.914000000000001, -9.694999999999999}, {
              0.685999999999999, 12.894999999999998`}}], 
             
             Line[{{8.814, -8.894999999999998}, {2.5859999999999985`, 
              13.694999999999999`}}], 
             
             Line[{{10.714, -8.094999999999999}, {4.485999999999999, 
              14.494999999999997`}}]}, {
             
             Line[{{-4.485999999999999, -14.494999999999997`}, {
              10.714, -8.094999999999999}}], 
             
             Line[{{-4.831999999999999, -13.239999999999998`}, {
              10.368, -6.839999999999999}}], 
             Line[{{-5.177999999999999, -11.985}, {10.022, -5.585}}], 
             
             Line[{{-5.523999999999999, -10.73}, {
              9.676, -4.329999999999999}}], 
             
             Line[{{-5.869999999999999, -9.475}, {
              9.33, -3.0749999999999993`}}], 
             
             Line[{{-6.215999999999999, -8.219999999999999}, {
              8.984, -1.8199999999999994`}}], 
             
             Line[{{-6.561999999999999, -6.965}, {
              8.638, -0.5649999999999995}}], 
             
             Line[{{-6.9079999999999995`, -5.71}, {8.292, 
              0.6900000000000004}}], 
             Line[{{-7.254, -4.455}, {7.946, 1.9450000000000003`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.946, -1.9450000000000003`}, {7.254, 4.455}}], 
             
             Line[{{-8.292, -0.6900000000000004}, {6.9079999999999995`, 
              5.71}}], 
             Line[{{-8.638, 0.5649999999999995}, {6.561999999999999, 6.965}}], 
             
             Line[{{-8.984, 1.8199999999999994`}, {6.215999999999999, 
              8.219999999999999}}], 
             Line[{{-9.33, 3.0749999999999993`}, {5.869999999999999, 9.475}}], 
             Line[{{-9.676, 4.329999999999999}, {5.523999999999999, 10.73}}], 
             Line[{{-10.022, 5.585}, {5.177999999999999, 11.985}}], 
             
             Line[{{-10.368, 6.839999999999999}, {4.831999999999999, 
              13.239999999999998`}}], 
             
             Line[{{-10.714, 8.094999999999999}, {4.485999999999999, 
              14.494999999999997`}}]}}}, $CellContext`parametersTab$$ = 
        3, $CellContext`qLoc$$ = {2.43360732413016, 
         1.5367658704533202`}, $CellContext`qPlaneLoc$$ = \
{{-2.43360732413016, -1.5367658704533202`}, {2.43360732413016, 
         1.5367658704533202`}}, $CellContext`rawArrayOfMasses$$ = {10, 20, 20,
          20}, $CellContext`rawNumberOfMasses$$ = 4, $CellContext`scale$$ = 
        0.2, $CellContext`tabNumber$$ = 3, $CellContext`tauSliderValue$$ = 
        1, $CellContext`tick$$ = 
        True, $CellContext`u$$ = {{-0.3460000000000001, 1.255}, {1.9, 0.8}, {
         0.9, 0.7}, {0.488, 1.105}, {1.44, 1.2400000000000002`}, {1.084, 
         1.3650000000000002`}}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bInitDefaults$$, $CellContext`u$$ = 
          Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 
            1]; $CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`kArray$$ = \
$CellContext`constructKArray[1]; 
         Module[{$CellContext`n$}, $CellContext`n$ = 2; 
           While[$CellContext`n$ <= $CellContext`rawNumberOfMasses$$, \
$CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`n$]; Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
          ReplaceAll["qMaxVec", $CellContext`parameterLocatorDependencies$$]/
           2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
            $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
            
            Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bInitDefaults$$ = False; Null, Null]; Dynamic[
         Switch[$CellContext`tabNumber$$, $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics[
               $CellContext`matrix$$[$CellContext`qLoc$$]]; \
$CellContext`bRefreshDynamics$$ = False; $CellContext`bRefreshDynPlot$$ = 
             True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`dynamicsGraphicsTable[$CellContext`parameterLocatorDependencies$$\
, 
               
               Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$], \
$CellContext`scale$$, $CellContext`qLoc$$, $CellContext`dynMeshSize$$]; \
$CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynPlot[$CellContext`dynPlot$$, \
$CellContext`tauSliderValue$$], $CellContext`freqTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix[$CellContext`parameterLocatorDependencies$$, \
$CellContext`couplingData$$]; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc[$CellContext`parameterLocatorDependencies$$, \
$CellContext`matrix$$, $CellContext`freqMeshSize$$]; \
$CellContext`bRefreshFreqPlot$$ = False, 
            Null]; $CellContext`showFreqPlot[$CellContext`qPlaneLoc$$, \
$CellContext`freqPlot$$], 
          Blank[], 
          LocatorPane[
           Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                 Dimensions[#]] < 3, 
               
               Flatten[{$CellContext`glConstLocDefault, \
$CellContext`mLocDefault$$}, 1], 
               If[First[
                  Dimensions[#]] > 7, 
                Take[#, 7], #]]; 
            Module[{$CellContext`rm$, $CellContext`km$}, $CellContext`rm$ = 
               First[
                 Dimensions[$CellContext`rawArrayOfMasses$$]]; 
              If[$CellContext`rm$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], \
$CellContext`rawArrayOfMasses$$ = Take[$CellContext`rawArrayOfMasses$$, 
                  $CellContext`nMassesFromLocArray[$CellContext`u$$]], 
                
                While[$CellContext`rm$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 AppendTo[$CellContext`rawArrayOfMasses$$, \
$CellContext`glConstDefaultMass]; 
                 Increment[$CellContext`rm$]]]; $CellContext`km$ = Max[
                 Part[
                  Part[$CellContext`kArray$$, All, 1], All, 1]]; 
              If[$CellContext`km$ > \
$CellContext`nMassesFromLocArray[$CellContext`u$$], $CellContext`kArray$$ = 
                Select[$CellContext`kArray$$, Max[{
                    Part[#, 1], 
                    
                    Part[#, 
                    2]}] <= \
$CellContext`nMassesFromLocArray[$CellContext`u$$]& ], 
                
                While[$CellContext`km$ < \
$CellContext`nMassesFromLocArray[$CellContext`u$$], 
                 Increment[$CellContext`km$]; $CellContext`kArray$$ = \
$CellContext`returnKarrayForAdditionalMassIndex[$CellContext`kArray$$, \
$CellContext`km$]]]]; Part[$CellContext`u$$, 1] = If[Dot[
                 Part[$CellContext`u$$, 1], 
                 
                 Part[$CellContext`u$$, 
                  1]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 1], 
               Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                 Part[$CellContext`u$$, 2], 
                 
                 Part[$CellContext`u$$, 
                  2]] < $CellContext`glConstMinSquaredDistanceFromOrigin, 
               Part[$CellContext`glConstLocDefault, 2], 
               Part[$CellContext`u$$, 2]]; {
               Part[$CellContext`u$$, 1], 
               
               Part[$CellContext`u$$, 
                2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`u$$, $CellContext`glConstMinAngleBetweenLatticeVectors]; \
$CellContext`rawNumberOfMasses$$ = \
$CellContext`nMassesFromLocArray[$CellContext`u$$]; $CellContext`m1Sel$$ = 
             If[$CellContext`m1Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
             If[$CellContext`m2Sel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
             If[$CellContext`moSel$$ > $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`omegaIndex$$ = 
             If[$CellContext`omegaIndex$$ > 
               2 $CellContext`rawNumberOfMasses$$, 
               1, $CellContext`omegaIndex$$]; $CellContext`k1$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
               4]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; \
$CellContext`parameterLocatorDependencies$$ = \
$CellContext`locDependent[$CellContext`u$$, $CellContext`rawNumberOfMasses$$, \
$CellContext`rawArrayOfMasses$$]; $CellContext`qLoc$$ = 
             ReplaceAll[
               "qMaxVec", $CellContext`parameterLocatorDependencies$$]/
              2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
           $CellContext`plotSprings[$CellContext`u$$, \
$CellContext`parameterLocatorDependencies$$, $CellContext`couplingData$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, $CellContext`moSel$$], 
           LocatorAutoCreate -> True, ContinuousAction -> False]]]), 
      "Specifications" :> {
        TabView[{"dynamics" -> Column[{
             Dynamic[
              Row[{
                OverVector["q"], " = ", 
                
                Module[{$CellContext`qm$}, $CellContext`qm$ = 
                  ReplaceAll[
                   "qMaxVec", $CellContext`parameterLocatorDependencies$$]; 
                 Slider2D[
                   
                   Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   ({-#, #}/2& )[$CellContext`qm$], ContinuousAction -> False,
                    ImageSize -> (150 (#/Max[#])& )[$CellContext`qm$]]], 
                " 2 \[Pi] ", 
                Dynamic[
                 NumberForm[
                  MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}]], 
             Row[{
               Text["time, normalized to one period, t/T = "], 
               Dynamic[
                
                N[($CellContext`tauSliderValue$$ - 
                  1)/$CellContext`dynMeshSize$$]]}], 
             Row[{
               Dynamic[
                Manipulator[
                 
                 Dynamic[$CellContext`tauSliderValue$$, \
($CellContext`tauSliderValue$$ = #; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {
                 1, $CellContext`dynMeshSize$$ + 1, 1}, ImageSize -> Tiny, 
                 ContinuousAction -> True, Appearance -> "Open", 
                 AppearanceElements -> {
                  "StepLeftButton", "PlayPauseButton", "StepRightButton", 
                   "FasterSlowerButtons", "DirectionButton"}]]}], 
             Row[{
               Text["oscillation scale factor:"]}], 
             Row[{" " Manipulator[
                 
                 Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = \
$CellContext`checkAgainstRange[#, 0.05, 0.05, 
                    1]; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                 0.05, 1}, ImageSize -> Tiny, ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], 
               Dynamic[
                NumberForm[$CellContext`scale$$, {3, 2}]]}], 
             Row[{
               Text["Angular frequency \[Omega](q), selection:"], 
               Dynamic[
                SetterBar[
                 
                 Dynamic[$CellContext`omegaIndex$$, \
($CellContext`omegaIndex$$ = #; $CellContext`bRefreshDynPlot$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Range[2 $CellContext`rawNumberOfMasses$$]]]}]}], 
          "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
          Column[{
             Row[{
               Text["number of mesh intervals "], 
               Manipulator[
                
                Dynamic[$CellContext`freqMeshSize$$, \
($CellContext`freqMeshSize$$ = $CellContext`checkAgainstRange[#, 12, 2, 30, 
                    EvenQ]; $CellContext`bRefreshFreqPlot$$ = 
                  True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                2, 30, 2}, ImageSize -> Tiny, ContinuousAction -> False, 
                AppearanceElements -> {"InputField"}], " ", 
               Dynamic[$CellContext`freqMeshSize$$]}], 
             LocatorPane[
              Dynamic[$CellContext`qPlaneLoc$$], 
              Dynamic[
               (Graphics[{
                 Lighter[Gray], 
                 Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], -Part[#, 2]}, {
                    Part[#, 1], 
                    Part[#, 2]}, {-Part[#, 1], 
                    Part[#, 2]}}], Black, 
                 Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                    Part[#, 1]}, {-Part[#, 2], 
                    Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
                ReplaceAll[
                "qMaxVec", $CellContext`parameterLocatorDependencies$$]]], 
              ContinuousAction -> False]}], "parameters" -> Grid[{{
              Row[{
                Text["mass: "], 
                Dynamic[
                 If[$CellContext`rawNumberOfMasses$$ > 1, 
                  SetterBar[
                   
                   Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = Part[
                    ReplaceAll[
                    "mScalarArray", \
$CellContext`parameterLocatorDependencies$$], $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    4]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel[$CellContext`rawNumberOfMasses$$, \
$CellContext`moSel$$, $CellContext`m1Sel$$]; $CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                   Map[# -> $CellContext`massLabel[#]& , 
                    Range[$CellContext`rawNumberOfMasses$$]]], 
                  $CellContext`massLabel[1]]]}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`massValue, ($CellContext`massValue = \
$CellContext`checkAgainstRange[#, 0.25, 0.25, $CellContext`glConstMMax]; 
                  Part[$CellContext`rawArrayOfMasses$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`parameterLocatorDependencies$$ = 
                   ReplaceAll[$CellContext`parameterLocatorDependencies$$, (
                    "mScalarArray" -> Blank[]) :> (
                    "mScalarArray" -> $CellContext`rawArrayOfMasses$$)]; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
                   Not[$CellContext`tick$$])& ], {0.25, 
                  Dynamic[$CellContext`glConstMMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`massValue, {2, 1}]]}]}, {
              Text["coupling to neighbouring: "], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ > 1, 
                SetterBar[
                 
                 Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`selectVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1]; $CellContext`k2$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    2]; $CellContext`k3$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
                    3]; $CellContext`k4$$ = \
$CellContext`selectVFromKarray[$CellContext`kArray$$, $CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
                 Map[# -> $CellContext`massLabel[#]& , 
                  Range[$CellContext`rawNumberOfMasses$$]]], 
                $CellContext`massLabel[1]]]}, {
              Row[{
                Text["horizontal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 1], FontColor -> RGBColor[
                   Rational[2, 3], 0.33333333333333337`, 0]], " || ", 
                OverVector["a"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k1$$, {3, 2}]]}]}, {
              Row[{
                Text["vertical: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 2], FontColor -> RGBColor[0, 
                   Rational[2, 3], 0]], " || ", 
                OverVector["b"], " "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k2$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 3], FontColor -> 
                 RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]], 
                " || (", 
                OverVector["b"], " + ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k3$$, {3, 2}]]}]}, {
              Row[{
                Text["diagonal: "], 
                Style[
                 Subscript[
                  Style["k", Italic], 4], FontColor -> RGBColor[0, 
                   Rational[2, 3], 
                   Rational[2, 3]]], " || (", 
                OverVector["b"], " - ", 
                OverVector["a"], ") "}], 
              Row[{
                Manipulator[
                 
                 Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKArrayElements[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
                    4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                   True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                  Dynamic[$CellContext`glConstKMin], 
                  Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                 ContinuousAction -> False, 
                 AppearanceElements -> {"InputField"}], " ", 
                Dynamic[
                 NumberForm[$CellContext`k4$$, {3, 2}]]}]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Text["coupling from "], 
                  Dynamic[
                   $CellContext`massLabel[$CellContext`m1Sel$$]], 
                  Text[" to: "]}]]], 
              Dynamic[
               Switch[$CellContext`rawNumberOfMasses$$, 1, "", 2, 
                Dynamic[
                 $CellContext`massLabel[
                  First[
                   Delete[
                    Range[2], $CellContext`m1Sel$$]]]], 
                Blank[], 
                Dynamic[
                 SetterBar[
                  
                  Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = \
$CellContext`selectOriginVFromKarray[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$]; $CellContext`tick$$ = 
                    Not[$CellContext`tick$$])& ], 
                  Map[# -> $CellContext`massLabel[#]& , 
                   DeleteCases[
                    
                    Range[$CellContext`rawNumberOfMasses$$], \
$CellContext`m1Sel$$]]]]]]}, {
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  $CellContext`kLable[5], ": "}]]], 
              Dynamic[
               If[$CellContext`rawNumberOfMasses$$ == 1, "", 
                Row[{
                  Dynamic[
                   Manipulator[
                    
                    Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = \
$CellContext`checkAgainstRange[#, $CellContext`glConstKMin, \
$CellContext`glConstKMin, $CellContext`glConstKMax]; $CellContext`kArray$$ = \
$CellContext`returnAlteredKarrayOriginElement[$CellContext`kArray$$, \
$CellContext`m1Sel$$, $CellContext`moSel$$, $CellContext`k5$$]; \
$CellContext`couplingData$$ = \
$CellContext`calculateCouplings[$CellContext`parameterLocatorDependencies$$, \
$CellContext`kArray$$]; $CellContext`bRefreshMatrix$$ = 
                    True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
                    Dynamic[$CellContext`glConstKMin], 
                    Dynamic[$CellContext`glConstKMax]}, ImageSize -> Tiny, 
                    ContinuousAction -> False, 
                    AppearanceElements -> {"InputField"}]], " ", 
                  Dynamic[
                   NumberForm[$CellContext`k5$$, {3, 2}]]}]]]}}]}, 
         Dynamic[$CellContext`tabNumber$$, ($CellContext`tabNumber$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
         ImageSize -> {250, 350}], {{$CellContext`tick$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`qPlaneLoc$$, {{-2.43360732413016, \
-1.5367658704533202`}, {2.43360732413016, 1.5367658704533202`}}}, 0, 
         ControlType -> 
         None}, {{$CellContext`qLoc$$, {2.43360732413016, 
          1.5367658704533202`}}, 0, ControlType -> 
         None}, {{$CellContext`tauSliderValue$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`freqMeshSize$$, 12}, 0, ControlType -> 
         None}, {{$CellContext`dynMeshSize$$, 14}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, 
          ReplaceAll[$CellContext`res$5337, $CellContext`qVec -> #]& }, 0, 
         ControlType -> None}, {{$CellContext`dynamics$$, {{
            Complex[0.4130444789719152, 2.7569151748438447`*^-18], {
             Complex[0.5861464486009521, -2.825764865181982*^-17], 
             Complex[0.8102051226649282, 0.]}}, {
            Complex[0.3140688520221368, 1.8976567723170987`*^-18], {
             Complex[0.8102051226649281, 0.], 
             Complex[-0.5861464486009522, 2.8257648651819845`*^-17]}}}}, 0, 
         ControlType -> None}, {{$CellContext`dynPlot$$, {CompressedData["
1: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
lQcK3tGRmWfk0f/KHaQZ
           "], {10}, 1, {{
             Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
             Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
             Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
             Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
             Line[{{-3., -39.}, {3., 39.}}], 
             Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
             Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
             Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
             Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
             Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
             
             Line[{{-10.5, -40.900000000000006`}, {
              4.699999999999999, -34.5}}], 
             
             Line[{{-10.4, -39.6}, {
              4.799999999999999, -33.199999999999996`}}], 
             Line[{{-10.3, -38.300000000000004`}, {
              4.8999999999999995`, -31.900000000000002`}}], 
             Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
             Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
             
             Line[{{-10., -34.400000000000006`}, {
              5.199999999999999, -28.000000000000004`}}], 
             Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
             
             Line[{{-9.8, -31.8}, {
              5.3999999999999995`, -25.400000000000002`}}], 
             Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
             Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
             Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
             Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
             
             Line[{{-9.3, -25.3}, {
              5.8999999999999995`, -18.900000000000002`}}], 
             Line[{{-9.2, -24.}, {6., -17.6}}], 
             Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
             Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
             Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
             
             Line[{{-8.8, -18.8}, {
              6.3999999999999995`, -12.400000000000002`}}], 
             Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
             Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
             Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
             Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
             
             Line[{{-8.299999999999999, -12.3}, {
              6.8999999999999995`, -5.8999999999999995`}}], 
             Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
             Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
             Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
             
             Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
              7.3, -0.7000000000000002}}], 
             
             Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
              0.6000000000000001}}], 
             Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
             Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
             Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
             
             Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
              5.800000000000001}}], 
             
             Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
              7.1000000000000005`}}], 
             Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
             Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
             Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
             
             Line[{{-6.8999999999999995`, 5.8999999999999995`}, {
              8.299999999999999, 12.3}}], 
             Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
             Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
             Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
             Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
             Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
             Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
             Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
             Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
             Line[{{-6., 17.6}, {9.2, 24.}}], 
             Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
             Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
             Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
             Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
             Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
             Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
             Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
             
             Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
              34.400000000000006`}}], 
             Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
             Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
             Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
              38.300000000000004`}}], 
             Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
             Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
             Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}, 14}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, 
          Graphics3D[
           GraphicsComplex[CompressedData["
1:eJyNvXdUFsnzPYxZURGzYs5xxZwWHVEw55zXhDmBukbMYsIMiopZV8SAAXMY
lJwfHnJUUVHECGYMv/0udXs+U737npd/OKdOn356qqp7qm7d6ao1ad5gu/wm
JiZ+RU1MCvz9f3C1Y9eCzxfy6e+W/OX7rFy1/Z7OVQfPS1Igtx5aYtmPxE9q
h0zvyfs/xQt5a/NOuT96ZKvPj9xJvGgTo+jnyVKPOMQ4RFlHsfHp6hMH+69m
nQ1MblSVHrPXZJTQ5Cb0d9N6ds77nnweo/JrZGRET4sYPr+y+PqaTePttHX2
zVuPEjMk0fpUmSS+fqWzu/Wx/oeThbxr3vMqq7x8PN3eJrPnylXWjl3W8nCn
ZGWeW/IDo3l+obfRP4xJvksShBx621elkPGdfZyQQ29P6k2pMzhfHJsnSzVu
HPv2cwM+Pl2NONDDtEE2lxvV+U0mf7dYq/0u9Lb8YfGiPXcl8fFKj8J+iRaO
KXx+ZVO1nxsOXkgVcujtSIHKB+NiU/n6FY8xpZfeeK/NA73NTimScbO3pB9l
+E6P+hdmJyqVGjQ9fP35dxV6Wxo7p83HmfFCDr11HJ1U8vkaTQ69BWz9Yt9r
WwKbJ0uNbjYsrGvzJDY+Xb1RJKpUxm8pTG5Up08K3lXFPE3IoTevWS2TTUc8
5OOVsetbRXU5x+XpysBqNxyHfNHmgd5qx0RFZtul8vUr3x3XuTUYlSzk0Fuv
eyd+PzhU0o8SW79wmd8N8OePQm+uiUM2TdinyaG3Tje6qi+uJgg59JY41KtG
yzNJbJ4sdfin9rnJV1LY+HR1nIvn6wVKGpMb1eIrpjoseabJobcDGysdO+Io
jVfcLYdWWlovlc+vVDSYF7yoJAs59NblaXxuhbGJfP3KoHHnPV980J4XenO8
n9j86G+SfpSnr+ze/PwUR/p8JfQ2qpRapl/nRCGH3hzPfZz3+lKSkENvZTvX
q/WgYAqbJ0u9dCPguqV7Chufrlaf/NxyQQ0uN6qmB4sc67pOmx96K1ra0e11
+QQ+Xqk55XK/5c6xfH7Fw7/LC6uwaCGH3sI31PtatVU0X79SaPQ5n98WaHLo
LchxRungYTFcP8rsEQ3n9CuCfZci9Ga3fc/v74smCzn0Zmboa/lrryaH3oY2
Xr/MpEwymydL/dL8wglj60Q2Pl1tctB6nZIby+RGNf/ChosPXIoScujNdcWU
mJ1OIXy8MsBl7NbIB/58fqVbzKTCEdMChBx6e9/0vnnyWj5PtuJUJNq56DCj
kENvnZuVn9rwRhzXj5Iw+sn4Cr6JCtYHve1u1j930aRkIYfePt563NPQOEnI
obfPqeEV9k2PZ/NkqYfLhrcdWCeajU9Xr5++0qZYzVAmN6rmYTVmnal1R8j/
6w964+OhNz4/9HboX9eTrfD1Q2+f2PNCb9AP6VOB3qBPyKE3pn8FemP2UqC3
D3r7KtAb8wcFemP+I9bL/A3jFeafmF9h/qxAbx/1/o/1K2y/KNAb21/Qj6Lf
j6+E3vT795XQG9vvQm/sfBB6Y+eJ0Bs7f4Te2Hkl9MbON6E3dh4KvbHzU+iN
nbdCb+x8FnpboT/Phd5w/g/Ne18IvT2j9wXk0NtKer9ADr0NpveRfp4sFe8v
/fh0tTK97/Ryo4r3I+T8fcrGK3j/svmV8fS+hhx6G0Hvd7Z+JZ7iAcihNyuK
H5h+FMQbFJ8IvSE+gRx6Y/GM0BuLf4TeaunjJaE3Fl8JvbF4TOiNxW9Cbyze
E3pj8aHQG4snhd5Y/Cn01kEfrwq9Ib6dmxcPd4HehlE8DDn0NpPiZ8iht7MU
b+vnyVKPUXyuH5+ubqZ4Xi83qj0p/occenOkfIGNVxwov2DzK2GUj0AOvcVS
/sLWrzylfAdy6G0v5UdMP8oYyqco/xJ6Q/4FOfTG8jWhN5bfCb3F6vNBoTeW
Pwq9sXxT6I3lp0JvLJ8VemP5r9Aby5eF3lh+LfTG8nGhN56/Q29j6hft7F1Z
y5eht5j0EsMaWURLef2Q8BOdsp5EsXmy1Bl9lhW6MzlCyuuTzYrZnAj1l/L6
0ZXrOXY64CPl9fX7mVuM9/bh4xX3Oult1857IOX1S7xtYktX95Py+qRRS7b3
+cF/929/W769rnfpICmvv9PY8kvJOiFSXu87qMbLNq9Cpbx+SOagW/08Y6W8
/n5a9VFfBsVIef3cpV2uptWNkvL6DGunW2M2h0l5/XzfFLsEu2Apr/8yKaVK
xeAgKa/P8T1h13eiNF7ZM2vRQZ9pIVJeX3LJZ3f3a6FSXt/3c6p1DdtwKa9/
fbdK36yvEVJe/9b9y5fXwwxSXl91aOK3IuaIf7S8voj5xf5zgmOEHHqb4FQ2
9kCBaCGH3o5fcty5shmfJ0vNMpuzKzErUsrrJ0wa8+TN+ggpr/dbmHb1vH+4
lNc3Sg38YLYunI9Xjl43fZ1xjcvTFbeJF46OH6/ND73ZDb9Qqqo9X0+2UnWK
pYPPYoOU188/d+PA9uWSfpTOlax7JxiMUl5fvtr1m5kemhx6+/n94Lk+P6J4
XqzW/6PpoJEVotg8WWprO99651sZ2Ph0tcfoQ05TQyKY3Kh+KpNWvveccCmv
H1Op6DujXZiU1/9Q/EPP+4RKeX1cG9+jU7dpcujte88H3/dV5PP8HYdkvzk9
o5q2Hujtzx3thkysyp8rV6mdUn6aZbyWz0JviaFng7sujRRy6C3XYvCs0/si
hBx629k0a0OXGuFsniz13bIVk5eMDJXy+ksuPp+WrAuW8vqDsevijkQESnn9
xKMW6/Z1C+DjlfI7zmX8Fe0n5fVOZX4/3KSFJoferBfHrVxzi8+TreR0r+Zk
aamtH3rreq/pov0ORq4fZfJ9n7N2Q7AftbxeWbLCelWtUCGH3gpl1BvknxQk
5fXjnNvNjK8ZwObJUuet9Fpj29RXyuvDauW/fm+Yj5TXdy2bf+iC4nekvH5c
3YoFXWfckPL6Y1f8RkeaXpXy+irmw8Yu8rsn5fUNO207Hz5TWr9ytWLhY44t
wqS8/u3sx+0ddkRy/SjDV41p7zQwSsrrCzwacrmfU5iU128rab9/Q2aQlNc7
VijU88BNPymvP1swdtbqIj5SXn/3wOsKrolXpby+kFv9CQvr/vX/O6/n46E3
Pj/0du5f15Ot8PVDb7vY80Jv0A/P66FPnte/0utf5AvMXiJfaKS3r8gXmD+I
fIH5j1gv8zeRLzD/FPkC82eRL8zX+7/IF9h+EfkC218iX9DvRy2v1+9fLa+3
1u93oTd2Pgi9ddOfJ0Jv7PwRemPnldAbO9+E3th5KPTGzk+htzf681bojZ3P
Qm/f9Oe50BvOf57X433B83q8X3hej/cRz+t/0vuL5/Xx9L7jeT3ejzyvx/uU
5/Vf6P3L83q8r3le34be7zyvRzzA8/pfFD/wvL4CxRs8r0d8wvP6efp4RuiN
xT9CbyxeEnpj8ZXQG4vHhN5Y/Cb0xuI9oTcWHwq9vdTHk0JvLP4UemPxqtAb
4lue11ejeJjn9YifeV7/luJtntf3ofic5/VmFM/zvN6F4n+e13+kfIHn9bmU
X/C83oHyEZ7XI3/heT3yHZ7XIz/ieT3yKZ7XI//ieT3L14TeWH4n9JaozweF
3lj+KPTG8k2hN5afCr2xfFbojeW/Qm/T9fmy0BvLr4XeWD6u4SGUv3t8DVtl
/iW/T+/ABpUde3xTBy8p3qnDyAQh77xu5AHHqx/Vs9+zo49mxAo59GlSyv6T
RXSc0u+f+Z8Jf37Uv1GDI3WSxHjoeYrNN0Oj3do8zZXNVVbWea+W6dDls32U
th7of8PajgPnvtHkPT4t6PCjdqa698HjS47nY9j86Wq0eZnCtWy1+UeneC7+
/uOh+tLf/EVc+1g23qhOdjiVGj4lTsjz9Byq5revd8twRZPDjqZfnqxtqSQo
Pf953ljxvPPbrp01uEay8jP2S88RXU1onV/VTUtuFljwJo49V65qTP9t1rRP
mp7b/7Oey0rK3TsdNuUkiHmg5xe33r7N+hon5B0vn7z1Y+cH1azLETf3+3H8
uZQPSYVHTJ2i6T/PH+KUPQ4L/Ju009YJu8SMvBDSr0e8kI/9R29v1dGeKYtD
KiVwPSsFCh7p3rdqipDnreepUiXrw4dDgSliHthxcHLCuGpNtefKW0+G6he4
99ebxolM/3/HjRWDbUyfafMP7djtxnfv10pgoxPuH3qksvWnq10HldhWeGei
kOfNk6y6VLZwMhkp+aESPqtagTR3bf72j98lOc7OUQ43d9zQ/FIKm9+oZnWv
0KNKL01vlv/IH6jvj74MuzQwhen5k9KidNt97xckC3mfvP2l1HS7EDi9ZJKY
B37lUu+IfaMPKdxPlIkFDjV6+ehv/UzpVdeqcq7al/ZpY7MnFS/fFfUC5B2i
Xq/Xf646c0bNTSnvNft2yFu/ktt+eVKZl6lifvjbLfvWy55HaPNzPgDGt83T
m/q0Qh9b+30C51e7/Md64J+D/JfHni+Xxu2lhJa+1+T6LW098E/TzlMPdSsn
6iBCnkB1B4wfkucn6tAbTY6t7C/qEWorGg/eAvMfZXa15DWLh6SxfZehLN45
vUT5aWlifvjzlZpmlRpFafNDPozqIxjfIW9fqH8UOLtl8gBRN0FeKfgSej1k
KY9nLbr69JDm52Py9qPybJ/9ydgmXD/p6uOZPTb2upzC9JOujqU6DsZ3yjsH
1GcX7nu8ryLqO2pLGg+eBjsfFOPskKLz62nrtMo7f5TW523Vd4OS2XqMapTH
u2AH2zS2Ho3vgfH18s49NWDery5/dXwoxluy8fpz45MyJjx2p+eAJH7eKsfy
FVmxbJu2X7C/PLPPlrhYU5sfctTF2H5R9o4Z4b7wcIJiEvd/8ndqL9p3u78+
/NGqaiLzh1x19fAGpuZ/xjN/0Hg1GD887/2iNPVvusFtAl+PtxXWg9/Fvpv9
Nqjbq5ZJQm5F72WXCk8P3vNK4vpXfvPKTd9u+pDrXzlE9UGM/yPv/ag8qfXH
U/d1mr06AD+n8fhd7Ds/38CaaeeThdyS3uN1m3ru29Q8hfunUqB3/yONTbk/
pCuVqI6J8T3z3u9KzT2Pq05K0fy5LRuP38W+s+h5IsjieIqQ21CccMhL8Tcp
pD0v9lfjkdFJyydL+1GxpnorxrfIey5l276R9k8Spf0uxuv1k67OtRz5x4LT
2np60r6bMKr5h/4OfL/8vb8+lkytuDqJn28K6sIY347eU6lm++/Z/s/5Rn6i
oL6sX49R7Tvkj/KGg5rerCnOsYwr/jhxjbYe7K8KyvslKSEJ/P0i5mfvI2VV
ydujXE5r/t+N8anwu9h3Xm9OWCR5SftIGVWperFX+6V9JPhXI/LiTLU7xVf2
h/yGzUtNYv6Qqz63rvtuV0wCf14l/+utk/yC4sU82F+2nY8N+LNuspB3oPiq
dJEOHo/Ck7k+lfzxo31uOcRz+yo1f/Va3vOrtk7sl9beMf0mbtXmH0nx1Tr7
epUrxfP505XuQa29Kp+JFfJOFF8N3FZ/TqvmsWIe+H/cwlu/rXmRJOQ2FF+9
a7T+0PU+mn/Cz2dXMy4dczeG719lr9XiUtNfx7D1p6sNVrmMGlUyUch7UnxV
9WDdMtZKAj8flKQDTZe779Hm70B++/TK9bEhE/n8RnVzkUrOcy00vVlTfOX1
yn2D7ZNoMQ/88Np228R7xWP5+ay8u1Suerq5Zl/42/nTI/IdPGfkfqKE3Fkc
3qFAvDI2L55Xu9XzGeX487Pq1aBfespm8Kz87vRl/Cu9/nPVNMp32PqV9oOy
kx9PixLzC/6M6eVFOb9r80MOXhPGK3TObyn7WyO7rUlifFvyqy/Ej2L6VBqO
uLj5fVsDt5dS97l9wxYTDGJ+Udfet7fWXw20+Vuz+TF+EMVX7av+6eN7P0GM
b/n/uZ50xWDpkFXHJFLIu1F89eHt8O8FpkWI+eHPJzMXFXW4GC/mh/wo8cQw
vg+d81crL611pE+cGN+O/FYlvhl+F/5fz8y3i21HTT/jKL6yXuJ0st9orp90
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
            "], {{{
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
                  "]], 
                 Polygon[CompressedData["
1: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
FmfWTv8DQ2HsJQ==
                  "]], 
                 Polygon[CompressedData["
1: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
An+zY/pRf53t++8s+Z2Ja4DvqxqD9h9cDfwO
                  "]]}]}, {
               EdgeForm[], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1: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
dktwe3HV7VDeAj6Kzo/RruTXlMspX3s85p7K8X6WDUSfqFx0eIyVQ1PPRXb3
GPUnU+6WrSNbF2xLui8chGxO4hy9elxb5VCbqZsC3p97Tb9DfhftTuT/Xant
v1k8U82jvmz2LupfDj5T32feA+3FTO2D7lHw/sH3osnwa2Sn0W88HTzGPfD7
tL+U5fHMdqbfk1L7lqOi/D34mTp78BPAqZnzwwfgr1BWwz8BO9L2BNrMov7F
4NjeJreOzn1r+Gm54+5SdE6Nc9RaPRznojndr/1XPglOTp3vaY2aUr5FfmDq
/hfAHwenZL6X1M6dZ8rWDoXPzuyTDoGfntu+f0P2LaUDvHnuu61810DwreCc
ZAb1tVPnq3XAYfyfzzpu0X2UNsekXmedd+3/Tbn9QDXlXeCs4LN4NfJHdA+R
DcGnBucb84LXSf7tZPBv1D0FrqDP1qn3qB14czzni4JzbI1lf93RwJR+XgVf
lk2g/zz4e+b84mJ0bsztK3UGx1K2J5777GA/sEZxNXNuNj44DsqeF8L/yJy/
/D0313cu0foF77vuCzqjuksuke+Pfm9R9AM6R8vgd1K3Ff3TwE6p7wLto7+V
7U2JPkp+7xftQ+a76RW511Br9XVwfib+KLgssw8+C50zc9uKbEk5mGKEYkUh
dU6onF73XNnP1uB4pP3VPh9O23PQm0u7sng2ddfXO4TeCmZG/6Cc6EHl5+DU
xPerh+TjUr9XzIz6s6NfUu69gf73imdZZ3ptZj9/fe41Vy5xQdxz+UnlhrL/
JvJNyMdnfnOokrut/Pxc6p+Rb4K/CNalzKf/+qnvehlYLff6aJ3OgU/ILK8E
7095MtqY7mi6u9VCFsBxid9ufox+e1qwLcmmLow5keJm3aJ9sXyyzvi5sU/l
w2nu+4beKORvFWOflg0qBqF/bPC7kmKNYs4Pmd85uivnYY9+o+35wXsiWz1f
/jzze47uaENku+j8pZy6zP7tzzK/U6m/CfTTltIntT/U21Ff2vaAd6b+yEJ8
M8qcE14v/xRzGtnAacrf6G8r7RZGnynfuYi6G9HpEu/9k5DX5P8SxXL4mGB/
Irs+WHn1/++Emf2o7lCnpM7ldN6V18zP/H7TM/oonY8jcs9Zc+8PnpfaVs8F
h6IzGN432Bfpvn+6/B/fGZ44Nium6x56YfCdTu9G1WNMUcy9IjiOD5CfD86R
FNeSzO8GuuvXQL9Jbh80PbPvkg3fAbbSfTm1b5RdyQ/frtwsron842XBZ+RG
sEXU132tGM/X/cH+RX5mebBtzKTdBsZycfC9rSz3XnyKfr/gfR+knBa+qeR3
k1HxvjBU/hM8mjISfja4reQ74XCdXekmthvp6Fvr9W6g84i8N7Id0fZGZJbr
HWVdyfdq3a/7BHPd/c8KvkuOhp8XHGdlM5tLtifZlWxY73LKFUfE2KQzWjd3
/NW9oVPuvFc5+afg9ch2JbazOWXuf260PeX1x+deW9l7Au+R2z6Ue8uWlIcP
p/5Y5Jekzn/axTiiOPdN5tyhMfWtol9qCd4b/Zju7NJRnDpAOVXmGFtPd8nU
cbZx6vOgdTgj5gDyV41y5wZ6N9rOOjSL35ge8zflj02RXZT7fWFV5jcn+ZA2
4Pm5/ZreB24NfifR2bkydWy6Grw197urbOanzHeXY5BNDF439bk4cxwcFeOI
7hEzgm1CtqH9vSbm2Yq/8j86Z32QtY9+Q/cjzV1zbYDssBjrdaf7hfmNTXzP
lB1oHWRjslu9zZ4S/AarO9dLsiv0vkr8lndV7jxeMfcmxenEdyrNRfPrF/NW
zVfz1vuD/MCXwX5Gd8RTpJM7D1ZurHux/PYlwXPXO80JuX2FbGcje9Er2oPe
gf8LIEYb+A==
                  "]], 
                 Polygon[CompressedData["
1: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
c2XESGOla/yyMnKYbvk+5jbGwFOLiIHGRj22vvuFMry3GqVW7cv9OjdifW9T
hEdxPavZO2f/qeVeq3c35/AextzTi/D89+X4OdaO+awqYuaORXgQY6me/sQi
Ysyk1MMeRXhQc7v1Uh/N8V6owkPppdbh/ZYaO9n2yHjaJ2Oq+x7bogoPohdx
zbp2x6SfPIxj2xsfna+cvznt7RoRA42Frpk77D/uMYS2NTnnoWZ4BL2COZC5
kPF4bvoHx1cP9WwRMcnYdK4xyLkDL+Ze49XTesRgY7EapBbtBXdqhMaoNT7T
Z0+Et6pHDBlUhUapVXvDazQi5u+f68P+tg821WNk3xiTjc3GRL2yfmpDtivL
yN0GpP714LrHmuF59kx/dVOOp17KmD67Cg1erx4xTm3u4pimXt3TDE1W69Q8
tVrNa9ZDk9QmNWxxEf2ttl0ETy3C833F8y6Gp8Cd1bQyPJfea37O19uaoYVq
YlWFp1Kf5uR8ergZXkpPtQHtj6hpcF9jShWeR94y+/9+uB08yPdrhKfeK+Od
/vI+Y06u79U5/1/wD0V42qoRGr/U+NwS2m/f9ivCU9rH5kCXF+FBzI3UYP2s
ObPabL76RWvERGNj3ZhQhGaqnXqMR4vIsfQepTGqNfTyqSre1/HSc95eRk1i
cean5q7Hwf/K67+uwtNMUJ9bwuvo4T6CN2gJb6eH+Yrrn8580ZqGtY7na1Hb
aAe3cH4rW72InNTc9FHaj9BL0d6miHzWfLyDMTn1ehLPbw+vaI317Po2f/8y
89NxVeSk5qbm4CeU4bn0WnouvZj5VQ2eUIt8Wg94G7x6S3jD38N3FlFDeL2M
nM7czpxuRhk5n7mfOdn8KuaYc+0hjv2Btj+phXm+uaDr2dzEGL+oihxFNmea
mev75byfuaA508QiPLK5lDmoXlVP+WYZHvf6InJeve+Rzch11UdjoznqLUV4
VL2qnvaufJ56oqe+GV5cC69tDm5ebV5rbn5qM3Jp7/8efHYzvGyn7J+R2W5O
q/d9O/2t/v6IZuTYl2S8N/e2BvcT4/FiLeodPzHen7VG/4+top4yvTVqYM6P
H+B3cv48VkVN6sCMN9OqqKlYWxkFH1RG/eSDHG/rFxeWEfv1pHrTZbR/ks8/
pYwa2CEZ362NWZM6CF5Si1qVOdcJqRfmYt7DeXpB3nuvjEfzaB+d/nZQER7I
9WYOPTT139x6EzURnpJ+/ODUU3Oej/k9ezYj13P9PVyGp9bbup5PKyPnOD/n
o7lIW3hJa/jz88qo0Y0sIkeydmdMOizj4/1l1AD2Tr1Qrx1raynWMF5Jfz05
61nWuqwvvZX1I2ud1rSsbf1X/awiJzQXNCc0V1ye4znamFhGTvRYETUT55/x
cJ/sr3vTDx6d8c/YZ03R2qI1EWsj5phHpD8x97QG2wV+sxa1WWuMXuO51h6t
YR6Z/Wlt8/ucPw/Dj1bhx1+F79dDlZGjmKu8BE+sogZ5XPqj9+Gn4QH18Pj9
q/DAnxURj4w/XTNeGe96Zsxz32O90p+MSL94Q/qdnbK/bobXSD9ujDHWqAGu
TTVH7XmcrXc9c/gq8osd9Ib5PHOadfL9OvDbnoA3ggfD61ZRAx4O79wStWFj
pLFyjawPdKsilnXN/N0YZiwbWA9vsVkV9+oLj2vGOxi7etXj3brn+V5vbOyf
9YfN69F35ksbtURMNDa2yXy2kflWh8wvjInGRvvT2Nk285Xn8v3351iXRtQw
rGXs3hK+RL9sbrwrvJG/pYqah+f1yXfwXfY0J6tCP+9I/zIl9f729N9fVVFT
uCHjg/HRPts5+2OzevzeIZm/yUPq4bN2cC2kvxrGsX30eI3os77pt8zd9ZP9
009YuxlSxXF98jaZs3XI8V6zipyuY45ne+63C8f2Y3/bepzfN+s/ek69p55S
b2nO2jn9Suf0f7671+jDR1RxL+dcl3rkyM7FUel3BqSfWjfHw/nm3PqsjPrG
e/TRFfDXZXit6fDfmuG5jH96Lr3YAWVogZqg1htjJySrFcZ0Y7sx29htDfpZ
+Jv8fqNnUPtdw67lYTkezgnnxlqNmBvD83uHObba5Rp3rQ/K9eKYODZPVFHv
MAYYC/YpQxu8v7HGmGRs+DBr876f2qBG6EXGV1FrsSZrrVwNN3+1xqG2+/ue
yXa9xcj8fe2KyE3Naa1tWFMx1zWG6jXGFRFb55ThrR6Hz4T/WEZt3vzYWo4x
xdhiPqy3078PrcdvVBvMcfV67YvIfX0/Y83qef0PZXjLFfDtal+u/5Xwf4xt
jchdzffN/1eWkRtZE7E2Yr21V9YP9M56FHMTcxK9yypZn/gUvroZnkdv+FwR
XmhJFV7Imq613YVl5DJfwTfArakXX8PXNyOGG8uXZn9b47KWYE3B2pf1ha5F
5Ozm0+p5kV7SWH16Gd7WGoK1hN/m/NND6iWPzPmlB9YLn5LjryfVmxpT9ZbL
WyPW6jHNJfWrek9zVHNVPbHeWA0wl9oytcEap16oTfpNayytud5WaUT+Yl/a
p81G9OlPRdRk7GtrUNaarPFY69G/j8785pMyalKeY1uZ+eDA1PvVG5EvNTK/
aldFzerbIvq4yPzLWtgucM8q1vT7tHdsibXuGHxeRA3JsemY8cOcxdzFMfum
yDlSxpzyw+z6LTHXnFPLitAj55o1Lmtd1phWlFHzb8l8ym8B+gVrqWrMgio0
Z8Oc36s1Yk46N40Zxg7n2Kfpj1fCf4c/Tn89v4zNbw5+a7DNGu7dma84N62x
zStiDlp78/e/l/nXiir88r2Zb00to4Ytt0t/bgw0Fu4Gb1LFmnXt+o3D5/67
GbU7a3jfl/HN5+38ffrlj8vwznpovbY5w0M5X76t4hqv9XvRJc3Q2Jl5f7XX
byDWJKxF+G3Eb1zXFZFf++2rJet/czl2TTM8ufPR+sicKmJsm/QrXbM/ZxdR
E3Ut+812Vs7Hlkbk5J7vPdtW8c3prSLyV79FXZfjo4a0NuKdp2V+8E0ZMX7V
etYoq6gXbJ51C9eL33DezfXg/NcztK/H/He+Xpr3s0+Ww/8DSesGZw==
                  "]], 
                 Polygon[CompressedData["
1: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
pu9De4P2Pw7qGpo=
                  "]]}]}, {}, {}, {}, {}, {}}, {{
               GrayLevel[0], 
               Line[CompressedData["
1:eJwt0ckuBEEcB+DSZuw8ACenmTjb9277NoODCweZiyXBiUTixFXwAIwZjOEl
XIi3kHgUXyeS/vX3S+pQ9a/qLZ1sHjeEEI5kSzllHIWQyKW+x1te8541vnM2
G8IbZ1hnwlhe9WnWOMUXTnJCnvVxPnGMVY5yRCr6MB85xDIH+cAPe96xzive
8IyHPEijz3GHfSwyy0w6h/5rrgF+M88qK9KjX7CLJab3kGRCiNK52JjOSV+Y
91sQRwqLbOISm7nMFWnRV9nKNbaxwKK06+vs4AY7eW7DbpaZ4ye/pF//YczI
YQrMMS/b+q61/f/3+gOXUiik
                "]]}, {
               GrayLevel[0], 
               Line[CompressedData["
1:eJwl0bsvQ2EAxuGv2tpJhEEqZlYJrbr3tHpvEbsds/C3EKv7/ZLYWCVMYtCw
skgMjB4x/PK8Jzkn53w5/UurzZVYCGFZ920hpFxcxUO41oDd4jDjiRBy7GWT
hfYQGsyzzog51ewZVjnNCqc4qbI9wRLHWeQYs5q1R1lghnmmGXHIO0eY4iCT
7OObb3tVp33DJLf54ywbXNeHvcgWs3xkD7t1Z3858yWfucMoGcIu89xjgfss
sqQDu8xDVnjEKms6tus8YYOnbHJOZ/Y8z7nAC3565y27fMsD08zo5e9evnON
39zklhLO+OS5jtj///oFu2gylw==
                "]]}, {
               
               Line[{1090, 1089, 1817, 1107, 1613, 1825, 1130, 1841, 1619, 
                1823, 1148, 1629, 1858, 1168, 1638, 1882, 1192, 1879, 1643, 
                1897, 1209, 1656, 1918, 1227, 1668, 1941, 1251, 1956, 1674, 
                1938, 1267, 1687, 1979, 1287, 2001, 1285, 1313, 1998, 1311, 
                1334}], 
               
               Line[{1091, 1609, 1818, 1108, 357, 1131, 1840, 1621, 1844, 
                1149, 1630, 1863, 1169, 1881, 1170, 1193, 1900, 1645, 1896, 
                1210, 1658, 1922, 1228, 1940, 1229, 1252, 1955, 1676, 1960, 
                1268, 1690, 1983, 1288, 2000, 1289, 1314, 2015, 1315, 1335}], 
               
               Line[{1092, 344, 1110, 1615, 1827, 1132, 1843, 1623, 1848, 
                1150, 1862, 1153, 1172, 1884, 1175, 1194, 1899, 1647, 1906, 
                1211, 1660, 1921, 1231, 1670, 1943, 1253, 1959, 1678, 1965, 
                1269, 1692, 1982, 1291, 2004, 1294, 1316, 2017, 1319, 1336}], 
               
               Line[{1095, 1610, 1820, 1112, 1832, 1116, 1134, 1625, 1851, 
                1852, 1152, 1633, 1870, 1174, 1889, 1178, 1196, 1909, 1650, 
                1905, 1213, 1662, 1931, 1233, 1671, 1948, 1255, 1968, 1681, 
                1964, 1271, 1694, 1991, 1293, 1701, 2008, 1318, 690, 1338}], 
               
               Line[{1096, 1611, 1821, 1114, 1618, 1835, 1135, 1850, 1627, 
                1855, 1154, 1635, 1869, 1176, 1888, 1183, 1197, 1908, 1652, 
                1913, 1214, 1664, 1930, 1235, 1952, 1242, 1256, 1967, 1683, 
                1972, 1272, 1696, 1995, 1295, 2011, 1302, 1320, 2021, 1327, 
                1339}], 
               
               Line[{1097, 1612, 1822, 1115, 1834, 1125, 1136, 1854, 1628, 
                1838, 1155, 1875, 1164, 1177, 1642, 1891, 1198, 1912, 1654, 
                1894, 1215, 1666, 1934, 1236, 1951, 1247, 1257, 1975, 1685, 
                1971, 1273, 1994, 1282, 1296, 2010, 1307, 1321, 2023, 1331, 
                1340}], 
               
               Line[{1099, 1106, 1826, 1119, 1129, 1842, 1139, 1147, 1859, 
                1860, 1159, 1883, 1639, 1181, 1191, 1898, 1201, 1919, 1657, 
                1917, 1219, 1226, 1942, 1240, 1957, 1675, 1260, 1977, 1688, 
                1980, 1277, 1286, 2002, 1300, 1312, 2016, 1325, 703, 1342}], 
               
               Line[{1100, 1109, 1828, 1120, 1845, 1622, 1140, 1861, 1631, 
                1864, 1160, 1171, 1885, 1182, 1901, 1646, 1202, 1923, 1659, 
                1920, 1220, 1230, 1944, 1241, 1958, 1677, 1261, 1981, 1691, 
                1984, 1278, 1290, 2003, 1301, 684, 1326, 2026, 1708, 1343}], 
               
               Line[{1101, 1113, 1830, 1122, 1846, 1624, 1141, 1865, 1632, 
                1867, 1161, 463, 1185, 1902, 1648, 1203, 1924, 1661, 1926, 
                1221, 1234, 1945, 1244, 1961, 1679, 1262, 1985, 1693, 1987, 
                1279, 2005, 1700, 1304, 2018, 1704, 1328, 2027, 1709, 1344}], 
               
               Line[{1103, 1117, 1833, 1124, 1137, 1853, 1143, 1157, 1871, 
                1873, 1163, 1890, 1641, 1187, 1199, 1910, 1205, 1932, 1663, 
                1929, 1223, 1238, 1949, 1246, 1258, 1969, 1264, 1992, 1695, 
                1990, 1281, 1298, 2009, 1306, 2022, 1705, 1330, 709, 1346}], 
               
               Line[{1104, 1121, 1836, 1127, 405, 1145, 1876, 1636, 1874, 
                1165, 1184, 1892, 1189, 1911, 1653, 1206, 1933, 1665, 1935, 
                1224, 1243, 1950, 1248, 1970, 1684, 1265, 1993, 1697, 1996, 
                1283, 1303, 2012, 1309, 696, 1332, 2029, 1711, 1347}], 
               
               Line[{1105, 1126, 1837, 1128, 1144, 1856, 1146, 1877, 1637, 
                1878, 1166, 1188, 1893, 1190, 1914, 1655, 1207, 1936, 1667, 
                1937, 1225, 1953, 1673, 1249, 1973, 1686, 1266, 1997, 1698, 
                1974, 1284, 1308, 2013, 1310, 2024, 1706, 1333, 2030, 1712, 
                1348}], 
               
               Line[{1337, 1322, 2019, 1317, 1297, 2006, 1292, 1274, 1986, 
                1270, 1963, 1962, 1680, 1254, 1237, 1946, 1232, 1216, 1925, 
                1212, 1904, 1903, 1649, 1195, 1886, 1640, 1173, 1156, 1866, 
                1151, 397, 1847, 1133, 1829, 1616, 1111, 1093, 1819, 1094}], 
               
               Line[{1341, 1707, 2025, 1324, 1703, 2014, 1299, 1699, 1999, 
                1276, 1689, 1978, 1976, 1259, 1954, 1250, 1239, 1669, 1939, 
                1218, 1916, 1915, 1208, 1200, 1644, 1895, 1180, 1880, 1167, 
                1158, 419, 1857, 1138, 1620, 1839, 1118, 1614, 1824, 1098}], 
               Line[{1345, 1710, 2028, 1329, 2020, 1323, 1305, 1702, 2007, 
                1280, 1989, 1988, 1275, 1263, 1682, 1966, 1245, 1672, 1947, 
                1222, 1928, 1927, 1217, 1204, 1651, 1907, 1186, 1887, 1179, 
                1162, 1872, 1634, 1868, 1142, 1626, 1849, 1123, 1617, 1831, 
                1102}], 
               
               Line[{1350, 1349, 2031, 1367, 1717, 2039, 1390, 2055, 1723, 
                2037, 1408, 1733, 2072, 1428, 1742, 2096, 1452, 2093, 1747, 
                2111, 1469, 1760, 2132, 1487, 1772, 2155, 1511, 2170, 1778, 
                2152, 1527, 1791, 2193, 1547, 2215, 1545, 1573, 2212, 1571, 
                1594}], 
               
               Line[{1351, 1713, 2032, 1368, 732, 1391, 2054, 1725, 2058, 
                1409, 1734, 2077, 1429, 2095, 1430, 1453, 2114, 1749, 2110, 
                1470, 1762, 2136, 1488, 2154, 1489, 1512, 2169, 1780, 2174, 
                1528, 1794, 2197, 1548, 2214, 1549, 1574, 2229, 1575, 1595}], 
               
               Line[{1352, 719, 1370, 1719, 2041, 1392, 2057, 1727, 2062, 
                1410, 2076, 1413, 1432, 2098, 1435, 1454, 2113, 1751, 2120, 
                1471, 1764, 2135, 1491, 1774, 2157, 1513, 2173, 1782, 2179, 
                1529, 1796, 2196, 1551, 2218, 1554, 1576, 2231, 1579, 1596}], 
               
               Line[{1355, 1714, 2034, 1372, 2046, 1376, 1394, 1729, 2065, 
                2066, 1412, 1737, 2084, 1434, 2103, 1438, 1456, 2123, 1754, 
                2119, 1473, 1766, 2145, 1493, 1775, 2162, 1515, 2182, 1785, 
                2178, 1531, 1798, 2205, 1553, 1805, 2222, 1578, 1065, 1598}], 
               
               Line[{1356, 1715, 2035, 1374, 1722, 2049, 1395, 2064, 1731, 
                2069, 1414, 1739, 2083, 1436, 2102, 1443, 1457, 2122, 1756, 
                2127, 1474, 1768, 2144, 1495, 2166, 1502, 1516, 2181, 1787, 
                2186, 1532, 1800, 2209, 1555, 2225, 1562, 1580, 2235, 1587, 
                1599}], 
               
               Line[{1357, 1716, 2036, 1375, 2048, 1385, 1396, 2068, 1732, 
                2052, 1415, 2089, 1424, 1437, 1746, 2105, 1458, 2126, 1758, 
                2108, 1475, 1770, 2148, 1496, 2165, 1507, 1517, 2189, 1789, 
                2185, 1533, 2208, 1542, 1556, 2224, 1567, 1581, 2237, 1591, 
                1600}], 
               
               Line[{1359, 1366, 2040, 1379, 1389, 2056, 1399, 1407, 2073, 
                2074, 1419, 2097, 1743, 1441, 1451, 2112, 1461, 2133, 1761, 
                2131, 1479, 1486, 2156, 1500, 2171, 1779, 1520, 2191, 1792, 
                2194, 1537, 1546, 2216, 1560, 1572, 2230, 1585, 1078, 1602}], 
               
               Line[{1360, 1369, 2042, 1380, 2059, 1726, 1400, 2075, 1735, 
                2078, 1420, 1431, 2099, 1442, 2115, 1750, 1462, 2137, 1763, 
                2134, 1480, 1490, 2158, 1501, 2172, 1781, 1521, 2195, 1795, 
                2198, 1538, 1550, 2217, 1561, 1059, 1586, 2240, 1812, 1603}], 
               
               Line[{1361, 1373, 2044, 1382, 2060, 1728, 1401, 2079, 1736, 
                2081, 1421, 838, 1445, 2116, 1752, 1463, 2138, 1765, 2140, 
                1481, 1494, 2159, 1504, 2175, 1783, 1522, 2199, 1797, 2201, 
                1539, 2219, 1804, 1564, 2232, 1808, 1588, 2241, 1813, 1604}], 
               
               Line[{1363, 1377, 2047, 1384, 1397, 2067, 1403, 1417, 2085, 
                2087, 1423, 2104, 1745, 1447, 1459, 2124, 1465, 2146, 1767, 
                2143, 1483, 1498, 2163, 1506, 1518, 2183, 1524, 2206, 1799, 
                2204, 1541, 1558, 2223, 1566, 2236, 1809, 1590, 1084, 1606}], 
               
               Line[{1364, 1381, 2050, 1387, 780, 1405, 2090, 1740, 2088, 
                1425, 1444, 2106, 1449, 2125, 1757, 1466, 2147, 1769, 2149, 
                1484, 1503, 2164, 1508, 2184, 1788, 1525, 2207, 1801, 2210, 
                1543, 1563, 2226, 1569, 1071, 1592, 2243, 1815, 1607}], 
               
               Line[{1365, 1386, 2051, 1388, 1404, 2070, 1406, 2091, 1741, 
                2092, 1426, 1448, 2107, 1450, 2128, 1759, 1467, 2150, 1771, 
                2151, 1485, 2167, 1777, 1509, 2187, 1790, 1526, 2211, 1802, 
                2188, 1544, 1568, 2227, 1570, 2238, 1810, 1593, 2244, 1816, 
                1608}], 
               
               Line[{1597, 1582, 2233, 1577, 1557, 2220, 1552, 1534, 2200, 
                1530, 2177, 2176, 1784, 1514, 1497, 2160, 1492, 1476, 2139, 
                1472, 2118, 2117, 1753, 1455, 2100, 1744, 1433, 1416, 2080, 
                1411, 772, 2061, 1393, 2043, 1720, 1371, 1353, 2033, 1354}], 
               
               Line[{1601, 1811, 2239, 1584, 1807, 2228, 1559, 1803, 2213, 
                1536, 1793, 2192, 2190, 1519, 2168, 1510, 1499, 1773, 2153, 
                1478, 2130, 2129, 1468, 1460, 1748, 2109, 1440, 2094, 1427, 
                1418, 794, 2071, 1398, 1724, 2053, 1378, 1718, 2038, 1358}], 
               
               Line[{1605, 1814, 2242, 1589, 2234, 1583, 1565, 1806, 2221, 
                1540, 2203, 2202, 1535, 1523, 1786, 2180, 1505, 1776, 2161, 
                1482, 2142, 2141, 1477, 1464, 1755, 2121, 1446, 2101, 1439, 
                1422, 2086, 1738, 2082, 1402, 1730, 2063, 1383, 1721, 2045, 
                1362}]}, {
               
               Line[{342, 612, 1973, 611, 606, 1970, 605, 1969, 600, 1966, 
                599, 594, 1961, 593, 588, 1958, 587, 1957, 582, 1954, 576, 
                573, 1951, 572, 1952, 569, 568, 1948, 565, 1946, 564, 561, 
                1943, 560, 557, 1940, 556, 1941, 553, 581}], 
               
               Line[{352, 575, 1953, 574, 571, 1950, 570, 1949, 567, 1947, 
                566, 563, 1945, 562, 1944, 559, 558, 1942, 555, 1939, 550, 
                545, 1934, 544, 539, 1930, 538, 1931, 533, 1925, 532, 527, 
                1921, 526, 1922, 521, 520, 1918, 515, 554}], 
               
               Line[{354, 339, 1817, 341, 340, 1818, 343, 344, 345, 1819, 346,
                 1820, 347, 348, 1821, 349, 350, 1822, 351, 1824, 355, 1826, 
                358, 359, 1828, 362, 363, 1830, 366, 1831, 367, 1833, 370, 
                371, 1836, 374, 1837, 375, 377}], 
               
               Line[{380, 353, 1825, 356, 357, 360, 1827, 361, 364, 1829, 365,
                 1832, 368, 369, 1835, 372, 1834, 373, 376, 1839, 381, 1842, 
                386, 387, 1845, 392, 1846, 393, 398, 1849, 399, 1853, 404, 
                405, 410, 1856, 411, 414}], 
               
               Line[{416, 378, 1841, 382, 1840, 384, 388, 1843, 390, 394, 
                1847, 396, 1851, 400, 1850, 402, 406, 1854, 408, 412, 1857, 
                418, 1859, 422, 1861, 424, 428, 1865, 430, 434, 1868, 436, 
                1871, 440, 442, 1876, 446, 1877, 448, 451}], 
               
               Line[{452, 1878, 449, 447, 443, 1874, 441, 1873, 1872, 437, 
                435, 1867, 431, 429, 1864, 425, 423, 1860, 419, 413, 1838, 
                409, 407, 1855, 403, 401, 1852, 397, 395, 1848, 391, 389, 
                1844, 385, 383, 379, 1823, 417}], 
               
               Line[{454, 415, 1858, 420, 421, 1863, 426, 1862, 427, 432, 
                1866, 433, 1870, 438, 1869, 439, 444, 1875, 445, 450, 1880, 
                455, 1883, 458, 459, 1885, 462, 463, 466, 1887, 467, 1890, 
                470, 471, 1892, 474, 1893, 475, 477}], 
               
               Line[{480, 453, 1882, 456, 1881, 457, 460, 1884, 461, 464, 
                1886, 465, 1889, 468, 1888, 469, 472, 1891, 473, 476, 1895, 
                481, 1898, 486, 487, 1901, 492, 1902, 493, 498, 1907, 499, 
                1910, 504, 1911, 505, 510, 1914, 511, 514}], 
               
               Line[{516, 1879, 478, 482, 484, 1900, 488, 1899, 490, 494, 
                1903, 496, 1909, 500, 1908, 502, 506, 1912, 508, 512, 1915, 
                518, 1919, 522, 524, 1923, 528, 1924, 530, 534, 1927, 536, 
                1932, 540, 1933, 542, 546, 1936, 548, 551}], 
               
               Line[{552, 1937, 549, 547, 1935, 543, 541, 537, 1929, 1928, 
                535, 1926, 531, 529, 525, 1920, 523, 519, 1917, 1916, 513, 
                1894, 509, 507, 1913, 503, 501, 497, 1905, 1904, 495, 1906, 
                491, 489, 485, 1896, 483, 1897, 479, 517}], 
               
               Line[{578, 1974, 650, 648, 1996, 644, 642, 638, 1990, 1989, 
                636, 1987, 632, 630, 1984, 626, 624, 1980, 620, 1978, 614, 
                610, 1971, 608, 1972, 604, 602, 598, 1964, 1963, 596, 1965, 
                592, 590, 1960, 586, 584, 580, 1938, 618}], 
               
               Line[{615, 675, 2013, 674, 2012, 671, 670, 2009, 667, 2007, 
                666, 663, 2005, 662, 659, 2003, 658, 2002, 655, 1999, 651, 
                646, 1994, 645, 1995, 640, 639, 1991, 634, 1986, 633, 628, 
                1982, 627, 1983, 622, 621, 1979, 616, 654}], 
               
               Line[{617, 579, 1956, 583, 1955, 585, 589, 1959, 591, 595, 
                1962, 597, 1968, 601, 1967, 603, 607, 609, 1975, 613, 1976, 
                1977, 619, 623, 1981, 625, 629, 1985, 631, 635, 1988, 637, 
                1992, 641, 1993, 643, 647, 1997, 649, 577}], 
               
               Line[{652, 700, 2024, 699, 696, 695, 2022, 692, 2020, 691, 688,
                 2018, 687, 684, 683, 2016, 680, 2014, 676, 673, 2010, 672, 
                2011, 669, 668, 2008, 665, 2006, 664, 661, 2004, 660, 657, 
                2000, 656, 2001, 653, 679}], 
               
               Line[{677, 713, 2030, 712, 2029, 711, 710, 709, 2028, 708, 707,
                 2027, 706, 705, 2026, 704, 703, 2025, 701, 698, 2023, 697, 
                694, 2021, 693, 690, 2019, 689, 686, 2017, 685, 682, 2015, 
                681, 678, 1998, 702}], 
               
               Line[{717, 987, 2187, 986, 981, 2184, 980, 2183, 975, 2180, 
                974, 969, 2175, 968, 963, 2172, 962, 2171, 957, 2168, 951, 
                948, 2165, 947, 2166, 944, 943, 2162, 940, 2160, 939, 936, 
                2157, 935, 932, 2154, 931, 2155, 928, 956}], 
               
               Line[{727, 950, 2167, 949, 946, 2164, 945, 2163, 942, 2161, 
                941, 938, 2159, 937, 2158, 934, 933, 2156, 930, 2153, 925, 
                920, 2148, 919, 914, 2144, 913, 2145, 908, 2139, 907, 902, 
                2135, 901, 2136, 896, 895, 2132, 890, 929}], 
               
               Line[{729, 714, 2031, 716, 715, 2032, 718, 719, 720, 2033, 721,
                 2034, 722, 723, 2035, 724, 725, 2036, 726, 2038, 730, 2040, 
                733, 734, 2042, 737, 738, 2044, 741, 2045, 742, 2047, 745, 
                746, 2050, 749, 2051, 750, 752}], 
               
               Line[{755, 728, 2039, 731, 732, 735, 2041, 736, 739, 2043, 740,
                 2046, 743, 744, 2049, 747, 2048, 748, 751, 2053, 756, 2056, 
                761, 762, 2059, 767, 2060, 768, 773, 2063, 774, 2067, 779, 
                780, 785, 2070, 786, 789}], 
               
               Line[{791, 753, 2055, 757, 2054, 759, 763, 2057, 765, 769, 
                2061, 771, 2065, 775, 2064, 777, 781, 2068, 783, 787, 2071, 
                793, 2073, 797, 2075, 799, 803, 2079, 805, 809, 2082, 811, 
                2085, 815, 817, 2090, 821, 2091, 823, 826}], 
               
               Line[{827, 2092, 824, 822, 818, 2088, 816, 2087, 2086, 812, 
                810, 2081, 806, 804, 2078, 800, 798, 2074, 794, 788, 2052, 
                784, 782, 2069, 778, 776, 2066, 772, 770, 2062, 766, 764, 
                2058, 760, 758, 754, 2037, 792}], 
               
               Line[{829, 790, 2072, 795, 796, 2077, 801, 2076, 802, 807, 
                2080, 808, 2084, 813, 2083, 814, 819, 2089, 820, 825, 2094, 
                830, 2097, 833, 834, 2099, 837, 838, 841, 2101, 842, 2104, 
                845, 846, 2106, 849, 2107, 850, 852}], 
               
               Line[{855, 828, 2096, 831, 2095, 832, 835, 2098, 836, 839, 
                2100, 840, 2103, 843, 2102, 844, 847, 2105, 848, 851, 2109, 
                856, 2112, 861, 862, 2115, 867, 2116, 868, 873, 2121, 874, 
                2124, 879, 2125, 880, 885, 2128, 886, 889}], 
               
               Line[{891, 2093, 853, 857, 859, 2114, 863, 2113, 865, 869, 
                2117, 871, 2123, 875, 2122, 877, 881, 2126, 883, 887, 2129, 
                893, 2133, 897, 899, 2137, 903, 2138, 905, 909, 2141, 911, 
                2146, 915, 2147, 917, 921, 2150, 923, 926}], 
               
               Line[{927, 2151, 924, 922, 2149, 918, 916, 912, 2143, 2142, 
                910, 2140, 906, 904, 900, 2134, 898, 894, 2131, 2130, 888, 
                2108, 884, 882, 2127, 878, 876, 872, 2119, 2118, 870, 2120, 
                866, 864, 860, 2110, 858, 2111, 854, 892}], 
               
               Line[{953, 2188, 1025, 1023, 2210, 1019, 1017, 1013, 2204, 
                2203, 1011, 2201, 1007, 1005, 2198, 1001, 999, 2194, 995, 
                2192, 989, 985, 2185, 983, 2186, 979, 977, 973, 2178, 2177, 
                971, 2179, 967, 965, 2174, 961, 959, 955, 2152, 993}], 
               
               Line[{990, 1050, 2227, 1049, 2226, 1046, 1045, 2223, 1042, 
                2221, 1041, 1038, 2219, 1037, 1034, 2217, 1033, 2216, 1030, 
                2213, 1026, 1021, 2208, 1020, 2209, 1015, 1014, 2205, 1009, 
                2200, 1008, 1003, 2196, 1002, 2197, 997, 996, 2193, 991, 
                1029}], 
               
               Line[{992, 954, 2170, 958, 2169, 960, 964, 2173, 966, 970, 
                2176, 972, 2182, 976, 2181, 978, 982, 984, 2189, 988, 2190, 
                2191, 994, 998, 2195, 1000, 1004, 2199, 1006, 1010, 2202, 
                1012, 2206, 1016, 2207, 1018, 1022, 2211, 1024, 952}], 
               
               Line[{1027, 1075, 2238, 1074, 1071, 1070, 2236, 1067, 2234, 
                1066, 1063, 2232, 1062, 1059, 1058, 2230, 1055, 2228, 1051, 
                1048, 2224, 1047, 2225, 1044, 1043, 2222, 1040, 2220, 1039, 
                1036, 2218, 1035, 1032, 2214, 1031, 2215, 1028, 1054}], 
               
               Line[{1052, 1088, 2244, 1087, 2243, 1086, 1085, 1084, 2242, 
                1083, 1082, 2241, 1081, 1080, 2240, 1079, 1078, 2239, 1076, 
                1073, 2237, 1072, 1069, 2235, 1068, 1065, 2233, 1064, 1061, 
                2231, 1060, 1057, 2229, 1056, 1053, 2212, 
                1077}]}, {}, {}, {}, {}, {}}}, 
            VertexNormals -> CompressedData["
1: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
CfaGgsZK129n46ueoJi9xtmoMCmv9G06watQuxlVujmYy3dP/ihPBqrbnF9T
Tvi54gOvk+HRuVgqm+NgUBCKfCKNux3qKJA/QM/P35swP095Xl1uFxmChyqX
+kz38wEOH/VrCb8oaNhL2wdMsP9s4PToR2wezmkuSjgZn4nURemZMUSPb582
+WTw73yU/cHr+CQyE3+vbHrJEU9wYxeYQLUXun5bsbUuOAwmJ9762k38hLHm
9ndPmNvfUP4jgDfJA+c3907+rRYKp8+nfhj89U9fm57nb2PN829jzfOfquxY
va88Ba0F4iVvO8XhioKyO1oEn5H+fojd9PdDZH8/TPiVXDJ+whduHpGqj9aO
hZa9ms31wwSfWf47Jvj/2LN/H19pHOzc2pnxuSwNNquf4Dv85r/7Be8n2KvS
3zmxjP7OiezvnJX091X8QX9fRfb31S76OypsoL+jAvs7KntPoXzCnoIy/b0X
dOnvvbCc9b3X+1/s3aX+fmcGGfo7MwixvjN70v0XtKT7L8juv0zWPLH+tHY8
2kZN1Uhano5+U7dGfW4lcSL39zsYbqG/gyH7O9gcCe4NvL8iQOPSw+qp98Lg
5Akx81Jyn2I5TKmZ0Sn46/rVlWICmVjcEdo6TPiwMONoZWNPCi5evub06ups
TB8+0mZXQQGYfVoSeiMdXArefAmzZIDA+YKmf+ZzGqQXvN1onwZOC0p5IlYy
wCHvvZkN4VFfvRgqG1Wjcb/Ar64xhww8Ydv88zI5J491tlDc7RjkE3PN/7M/
DT/2LT2uSur7h8Efa+37M0C0zaSG83kauO2X3CNXRYHFzQQdI64cUHgz47Xl
1Szg233y4OpMCtL2hKwtmfsIb704zfdWMQ6dx3t1ZpH3yHT823+BVrr/guz+
i/pHDn/OJ9lQb3Pg7S3fDHAXmJvByCd4eEae76xIDoR7JZ9aMpQO/lqWyZXk
dxu6vwOX6P4OsPs7q+l+E9jQ/SaYwuo3cZn/+hR+NRV21j3nvzueDuUbNc4c
eE6BL93ngvV0nwvYfa4Uup8FB+l+FrD7WW/p/hoE0f01YPfXftP9NThD99eA
3V97QPf14And1wN2X28l3R8EAbo/CBtZ/cFTdB+Z6LS/fWRk95GvH8kQMMmL
wWA7s2ap/Rm4ToknfDZ5XxuXzBJrd0tEhRuvy6oIL+536BBSaCI6V1+Qjzew
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
KsRYTflsNT8Og6a5K70g9mxrPm+iNsSCPVfXGO8Yk4LjU62ELlawwf/G9wnX
/D1hmk5IzV7bfORuEw9aGcaGB1Ibo4qO2sB7bu5NIQdInnHRpDmK5ClPHKqk
1k6wwdnjBK2uTc1Hc5GstLwYNqhWb711gM8KLyT9+MLtiNgfs91zJYkDeUYN
uNzKjaC8eP3EMwE56Mm7eioficem6Wev2XNYG9azVWxrjmbhr6CsAgcynhI5
kx0yo+4Qki43YJ+RgJZPJ2mUkfWmH/5Fr+VONKyZ9yLJ81MejGvrbb4bSPLu
VT7cK01j4ZzU3VJhg3xgycwVE/AmcfiRLNbBx46gq13wNDYqD2JVx146RPKO
dVX7qnxcIvBp59TcrrXZEGSl07yN5JsnaX2TT7S+yVVa3+Q6rReTy9CLmZ+2
TCWGpwS5M/bssch1h/rrSp+7DNjw5WSduv6ESlx8tcnF6aQzpj+/t2d0DsnH
rXt+fdCowe7DQpM+/IjFOnzweW/O/3RkJjB0ZHj0R8qmnK/Fwce/b6Ym5qJG
4jQb16M9kO+vMvO1YzVOSwplp33KxcFQN/Mdvj3wqN93paROGQ7//jhbcW42
Pj9dwto2laxPWl9mDkNfxn5j4uKNK9LwR5fu9dQkf2z0vHGej6y3ZOMj98te
++AtnweL/PY6QVSWRdH6EZIvzL4jWFnjBa9zj7WpEP99vbOv+CeJ0+ZJ6Ju8
Ok++S89qpCw1F8v3bXvw07IHZg7A+kLJh5DYeiZo9rEUqPy17lAH8Q+zTfKD
D4iEoWKq9I39DiEgtHB1wnFyLngqmIl2NT3H90LrBRYNpOHo5Ncf9STJfD2N
Ukk5koW/59RUnio6gDLeOxKdK/43X0OM+aowSHHPUy/FW7eiR60zQrDInHvd
+d3ED9B8Mn40n4wifU8vbemLLFv+CjR84WXZ28xCjYFlT1UF2FC34GfDe/FK
dHRNONR5IA1rsywiub72wOCn+qj+D3k4uNkquo7kK33Oqb0vPdgw5QX4L7/H
wov604pyMq0xYbfXj9PkvOih9W7W0Xo372n+6gV7Q+t924oxfqGX08K5SXgi
6NsKy4NsGMe6VjZbvAA/+6+a3CoXj08ttox2kvz3abTHzTKx+9B5Kv71ZbMY
WNqbdLqCnGuuN3eoOyzIQm9vgZLWk8EIfL4pb4rZYE3r40Qw9HE6vXwHboy/
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
+d/ISYss77RpQOdynnMzRjPAefqXcUfIfky6sGGjtVQGignd3mzFH4hnaj0m
/MFvlWn9aBuGfjRHb3oJo8/dldaPXsHQj86c+a33x8RovNtz4NkiWRZYqPSE
zSDrR0E7NlQpOAXHf1HdlnAlHPkOahjfJe/fovu1a5tZIu4ePqt+3FgH0n/f
XarQ9T9daTFGnfr9dbM3akuTsSg17Qm/bThe2qZS7UL82xmzCSuHQ5JxeLGi
ve3+cHzeXfzreDPxA3TfrjWjb5ejB21P60Gfovne+e0DjdXHesPgy0uaEW5J
cCN/Uc0p8r8jQQpq/P0hUGmWP29KawpkNpy5x3pBnrdS65u4IwrFmlWCxM4+
xqOKU2cZfCX7outF7NJr1rD6lNVHngssqE2q+hL4+Q8fI9XXPI3R1/yWrpt/
YNTNtSZ/7R5ICMc18hMWpvMEYJ7oD4tPf/SjaX3kVIY+MjfdH23I6I8OpvWO
vzL0jgtuC67i2+uMdcpZ5vknnsKhj9sf1Y2w4ck/6u8V/+in3m0oNeS3MADd
2fxhnc/D0ENp0+onxM5fm9Fd3sEB+wZSzSP07OFJtPXzw7/+6ApRfdZXGX3W
o8cqavz9Qv9fYWceTuW2BvDKWJzMTepkO8pODolUkqWUEOmGkhLloMw6zjWU
BtySRIZEGSrTlilj2FibttqOuimETYZODqccQ7k4pHtXfeu7PXc9z37uvx7P
3utZ37vW976v9+cHF1SFnNrJKoR5rGRtS7Q/JtgvPED4hTn9Mwmu+8oA7wnT
S3c6A3jc8rEoQO8XXcyb9xK8uT7mrIcIzvqy5tiLfQFXgAPfx974Zjg8YueY
+vjzN9/uRYITP/eoSoXbUQr2yRq/9BbKBv3vXb3Pou8Vxbz2jPj/8trfD0mG
qrTFAzOFyzPH1BJgRMDm4BOfUB6FvbqPCK+uBua7gwi+m/bqehNeXWND34Oz
stWgeevr83VXssCzDHXlW6heK3G3OSiXXwUGzSdt52WyQOHHqukvf8exwXy6
B8Gn2+H5hL3EfMJ+zI+nEPz4fMyJZxKcOO29nSW48qhcp0iD0d1QfOWhqCM/
lkC5sZWis+j5JmS2S8Q6XIcpXJ5LtmYZPO26c64DnTtZzJubE7z5FJ436CHm
DWjvrSzhvfXBXLkFwZXb9bn1bS8tAqpuHpIsxn0QblG/p7D/m8eWnJf4VXQZ
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
q2wOLmVWwsTOPc5iqH7/D4N0dtE=
             "]], {
           Axes -> True, 
            AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, 
            BoxRatios -> {1, 1, 0.4}, ImageSize -> {380, 380}, 
            Method -> {"RotationControl" -> "Globe"}, 
            PlotRange -> {{-2.709857394019914, 
             2.709857394019914}, {-1.7138642998702553`, 
             1.7138642998702553`}, {0., 0.49488850049789845`}}, 
            PlotRangePadding -> {
              Scaled[0.02], 
              Scaled[0.02], 
              Scaled[0.02]}}]}, 0, ControlType -> 
         None}, {{$CellContext`bInitDefaults$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, True}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`rawNumberOfMasses$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}}}, 0, ControlType -> 
         None}, {{$CellContext`rawArrayOfMasses$$, {10, 20, 20, 20}}, 0, 
         ControlType -> None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {{1, 1, {-1, 0}} -> 
           0.25, {1, 1, {0, -1}} -> 0.25, {1, 1, {-1, -1}} -> 
           0.25, {1, 1, {-1, 1}} -> 0.25, {1, 1, {1, 0}} -> 
           0.25, {1, 1, {0, 1}} -> 0.25, {1, 1, {1, 1}} -> 
           0.25, {1, 1, {1, -1}} -> 0.25, {1, 2, {-1, 0}} -> 
           0.25, {1, 2, {0, -1}} -> 0.25, {1, 2, {-1, -1}} -> 
           0.25, {1, 2, {-1, 1}} -> 0.25, {1, 2, {1, 0}} -> 
           0.25, {1, 2, {0, 1}} -> 0.25, {1, 2, {1, 1}} -> 
           0.25, {1, 2, {1, -1}} -> 0.25, {1, 2, {0, 0}} -> 
           0.25, {2, 1, {-1, 0}} -> 0.25, {2, 1, {0, -1}} -> 
           0.25, {2, 1, {-1, -1}} -> 0.25, {2, 1, {-1, 1}} -> 
           0.25, {2, 1, {1, 0}} -> 0.25, {2, 1, {0, 1}} -> 
           0.25, {2, 1, {1, 1}} -> 0.25, {2, 1, {1, -1}} -> 
           0.25, {2, 2, {-1, 0}} -> 0.25, {2, 2, {0, -1}} -> 
           0.25, {2, 2, {-1, -1}} -> 0.25, {2, 2, {-1, 1}} -> 
           0.25, {2, 2, {1, 0}} -> 0.25, {2, 2, {0, 1}} -> 
           0.25, {2, 2, {1, 1}} -> 0.25, {2, 2, {1, -1}} -> 
           0.25, {1, 3, {-1, 0}} -> 0.25, {1, 3, {0, -1}} -> 
           0.25, {1, 3, {-1, -1}} -> 0.25, {1, 3, {-1, 1}} -> 
           0.25, {1, 3, {1, 0}} -> 0.25, {1, 3, {0, 1}} -> 
           0.25, {1, 3, {1, 1}} -> 0.25, {1, 3, {1, -1}} -> 
           0.25, {1, 3, {0, 0}} -> 0.25, {2, 3, {-1, 0}} -> 
           0.25, {2, 3, {0, -1}} -> 0.25, {2, 3, {-1, -1}} -> 
           0.25, {2, 3, {-1, 1}} -> 0.25, {2, 3, {1, 0}} -> 
           0.25, {2, 3, {0, 1}} -> 0.25, {2, 3, {1, 1}} -> 
           0.25, {2, 3, {1, -1}} -> 0.25, {2, 3, {0, 0}} -> 
           0.25, {3, 1, {-1, 0}} -> 0.25, {3, 1, {0, -1}} -> 
           0.25, {3, 1, {-1, -1}} -> 0.25, {3, 1, {-1, 1}} -> 
           0.25, {3, 1, {1, 0}} -> 0.25, {3, 1, {0, 1}} -> 
           0.25, {3, 1, {1, 1}} -> 0.25, {3, 1, {1, -1}} -> 
           0.25, {3, 2, {-1, 0}} -> 0.25, {3, 2, {0, -1}} -> 
           0.25, {3, 2, {-1, -1}} -> 0.25, {3, 2, {-1, 1}} -> 
           0.25, {3, 2, {1, 0}} -> 0.25, {3, 2, {0, 1}} -> 
           0.25, {3, 2, {1, 1}} -> 0.25, {3, 2, {1, -1}} -> 
           0.25, {3, 3, {-1, 0}} -> 0.25, {3, 3, {0, -1}} -> 
           0.25, {3, 3, {-1, -1}} -> 0.25, {3, 3, {-1, 1}} -> 
           0.25, {3, 3, {1, 0}} -> 0.25, {3, 3, {0, 1}} -> 
           0.25, {3, 3, {1, 1}} -> 0.25, {3, 3, {1, -1}} -> 
           0.25, {1, 4, {-1, 0}} -> 0.25, {1, 4, {0, -1}} -> 
           0.25, {1, 4, {-1, -1}} -> 0.25, {1, 4, {-1, 1}} -> 
           0.25, {1, 4, {1, 0}} -> 0.25, {1, 4, {0, 1}} -> 
           0.25, {1, 4, {1, 1}} -> 0.25, {1, 4, {1, -1}} -> 
           0.25, {1, 4, {0, 0}} -> 0.25, {2, 4, {-1, 0}} -> 
           0.25, {2, 4, {0, -1}} -> 0.25, {2, 4, {-1, -1}} -> 
           0.25, {2, 4, {-1, 1}} -> 0.25, {2, 4, {1, 0}} -> 
           0.25, {2, 4, {0, 1}} -> 0.25, {2, 4, {1, 1}} -> 
           0.25, {2, 4, {1, -1}} -> 0.25, {2, 4, {0, 0}} -> 
           0.25, {3, 4, {-1, 0}} -> 0.25, {3, 4, {0, -1}} -> 
           0.25, {3, 4, {-1, -1}} -> 0.25, {3, 4, {-1, 1}} -> 
           0.25, {3, 4, {1, 0}} -> 0.25, {3, 4, {0, 1}} -> 
           0.25, {3, 4, {1, 1}} -> 0.25, {3, 4, {1, -1}} -> 
           0.25, {3, 4, {0, 0}} -> 0.25, {4, 1, {-1, 0}} -> 
           0.25, {4, 1, {0, -1}} -> 0.25, {4, 1, {-1, -1}} -> 
           0.25, {4, 1, {-1, 1}} -> 0.25, {4, 1, {1, 0}} -> 
           0.25, {4, 1, {0, 1}} -> 0.25, {4, 1, {1, 1}} -> 
           0.25, {4, 1, {1, -1}} -> 0.25, {4, 2, {-1, 0}} -> 
           0.25, {4, 2, {0, -1}} -> 0.25, {4, 2, {-1, -1}} -> 
           0.25, {4, 2, {-1, 1}} -> 0.25, {4, 2, {1, 0}} -> 
           0.25, {4, 2, {0, 1}} -> 0.25, {4, 2, {1, 1}} -> 
           0.25, {4, 2, {1, -1}} -> 0.25, {4, 3, {-1, 0}} -> 
           0.25, {4, 3, {0, -1}} -> 0.25, {4, 3, {-1, -1}} -> 
           0.25, {4, 3, {-1, 1}} -> 0.25, {4, 3, {1, 0}} -> 
           0.25, {4, 3, {0, 1}} -> 0.25, {4, 3, {1, 1}} -> 
           0.25, {4, 3, {1, -1}} -> 0.25, {4, 4, {-1, 0}} -> 
           0.25, {4, 4, {0, -1}} -> 0.25, {4, 4, {-1, -1}} -> 
           0.25, {4, 4, {-1, 1}} -> 0.25, {4, 4, {1, 0}} -> 
           0.25, {4, 4, {0, 1}} -> 0.25, {4, 4, {1, 1}} -> 
           0.25, {4, 4, {1, -1}} -> 0.25}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {{-0.3460000000000001, 1.255}, {1.9, 
          0.8}, {0.9, 0.7}, {0.488, 1.105}, {1.44, 1.2400000000000002`}, {
          1.084, 1.3650000000000002`}}}, 0, ControlType -> 
         None}, {{$CellContext`parameterLocatorDependencies$$, {
          "mScalarArray" -> {10, 20, 20, 20}, "numberOfMasses" -> 4, 
           "latticeBasis" -> {{-0.3460000000000001, 1.255}, {1.9, 0.8}}, 
           "latticeNorms" -> {1.3018221844783564`, 2.06155281280883}, 
           "latticeUnitVectors" -> {{-0.2657813057154524, 
            0.9640333487655856}, {0.9216353751380655, 0.3880570000581329}}, 
           "numberLatticeLinesToDisplay" -> {9, 4}, 
           "latticeCellOriginIndexes" -> {{-2, -1}, {-2, 0}, {-2, 
            1}, {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {
            1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}}, 
           "reciprocalBasis" -> {{-0.3006049674970879, 0.7139367978055837}, {
            0.47157404276105663`, 0.13001164844249058`}}, 
           "reciprocalNorms" -> {0.7746412703599106, 0.4891677693151304}, 
           "qMaxVec" -> {4.86721464826032, 3.0735317409066405`}, 
           "mObliqueComponents" -> {{0.22921128771652943`, 
            0.5154247923946944}, {0.642204937436591, 0.3737910043963477}, {
            0.45241047608311735`, 0.8402810656446099}, {0.6486679442377785, 
            0.6886521624769851}}, 
           "mPosFirstCell" -> {{0.9, 0.7}, {0.488, 1.105}, {1.44, 
            1.2400000000000002`}, {1.084, 1.3650000000000002`}}, 
           "pointsDataTable" -> CompressedData["
1:eJwtU21Ik1EUfufm3OZcIiEhoiYRQolFRUTFOX9sRUQpIiEiIRbijyVSESaD
qIh+ZEU/+pQ+LPpTIhKyxDpjSYRkgUYWpTkdLrXlPtqaOVvvPfceuHt33nvu
Oc/Hfdc2Hq8+atQ0zaQvh74y9OX2Dj+o7B+jqfbVPU6/ybunP7by8fQSxMvq
r/jiKap1lPd1LWYjp2VhKu5ta74WCtAzp18/EVf7MfDxAT81DOyzZ2yw4hFR
Xv8B0hyLdP+WiBc08k7ETzjGMaueZtQ4khB+8mb/9ktxYjjtUQh1wLaGAT/w
OGcaXHnndMRGtI13t+62mXHq4OUbrrxlkvtG3Pr87alX94ahh19Y0cJ1QRK/
490G7zQ3joLsn6BH/N6CdYx3hk5cX2OqdUSoiXH9osDjO0MlvfOwaYuI1/S0
sK5p5/dMfM88AqAnOoIEnV+o8hRdGAOLLFDzI8BwCox4huf9g5oZ0TBFUt8k
XBXjyn3A8P0ZOMgANJR8rPiwUhiieWV/M4bXb9ZHDBOnC3YsEcf7RqCTDdC8
Jxm/AQ+J7arfJOflop0BTZJXwKl4Sbmcz9Nfd4s+MgWaKPd0EtvbkYOlIi2a
A5andYI2sv/fQOr+Bz6zoDHgMR4bVvMfDW+yQXNUzOeXoaBiYp35bAQSzNeI
fN1iWcjt6m24S8jnitJtvh9ZWMP3KQjyPjgQdwgFiQq5X5pGS78uuVtSIPlF
6a7uTltzjuL3SfGaVM9Zkn4nQA4cBOm3TfELwQ/Wc57yuX4aoqMHGnMPRxS/
OEg7sxQ/A0q/o4rfCrD8XUHFz4TS70zFLxul/knFz4J79a/jYv4XxW8V/gc5
QbZN
            "], "lineTable" -> {{
              
              Line[{{-4.485999999999999, -14.494999999999997`}, {-10.714, 
               8.094999999999999}}], 
              
              Line[{{-2.5859999999999985`, -13.694999999999999`}, {-8.814, 
               8.894999999999998}}], 
              
              Line[{{-0.685999999999999, -12.894999999999998`}, \
{-6.914000000000001, 9.694999999999999}}], 
              
              Line[{{1.2140000000000009`, -12.094999999999999`}, \
{-5.014000000000001, 10.494999999999997`}}], 
              
              Line[{{3.1140000000000008`, -11.294999999999998`}, \
{-3.1140000000000008`, 11.294999999999998`}}], 
              
              Line[{{5.014000000000001, -10.494999999999997`}, \
{-1.2140000000000009`, 12.094999999999999`}}], 
              
              Line[{{6.914000000000001, -9.694999999999999}, {
               0.685999999999999, 12.894999999999998`}}], 
              Line[{{8.814, -8.894999999999998}, {2.5859999999999985`, 
               13.694999999999999`}}], 
              
              Line[{{10.714, -8.094999999999999}, {4.485999999999999, 
               14.494999999999997`}}]}, {
              
              Line[{{-4.485999999999999, -14.494999999999997`}, {
               10.714, -8.094999999999999}}], 
              
              Line[{{-4.831999999999999, -13.239999999999998`}, {
               10.368, -6.839999999999999}}], 
              Line[{{-5.177999999999999, -11.985}, {10.022, -5.585}}], 
              
              Line[{{-5.523999999999999, -10.73}, {
               9.676, -4.329999999999999}}], 
              
              Line[{{-5.869999999999999, -9.475}, {
               9.33, -3.0749999999999993`}}], 
              
              Line[{{-6.215999999999999, -8.219999999999999}, {
               8.984, -1.8199999999999994`}}], 
              
              Line[{{-6.561999999999999, -6.965}, {
               8.638, -0.5649999999999995}}], 
              
              Line[{{-6.9079999999999995`, -5.71}, {8.292, 
               0.6900000000000004}}], 
              Line[{{-7.254, -4.455}, {7.946, 1.9450000000000003`}}], 
              Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
              Line[{{-7.946, -1.9450000000000003`}, {7.254, 4.455}}], 
              
              Line[{{-8.292, -0.6900000000000004}, {6.9079999999999995`, 
               5.71}}], 
              
              Line[{{-8.638, 0.5649999999999995}, {6.561999999999999, 
               6.965}}], 
              
              Line[{{-8.984, 1.8199999999999994`}, {6.215999999999999, 
               8.219999999999999}}], 
              
              Line[{{-9.33, 3.0749999999999993`}, {5.869999999999999, 
               9.475}}], 
              Line[{{-9.676, 4.329999999999999}, {5.523999999999999, 10.73}}], 
              Line[{{-10.022, 5.585}, {5.177999999999999, 11.985}}], 
              
              Line[{{-10.368, 6.839999999999999}, {4.831999999999999, 
               13.239999999999998`}}], 
              
              Line[{{-10.714, 8.094999999999999}, {4.485999999999999, 
               14.494999999999997`}}]}}}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {{{{
             1, 2, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
              1.105}, {{
              0.5085673025355859, -0.49992659593910754`}, \
{-0.49992659593910754`, 0.4914326974644139}}}, {
             1, 4, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
              1.3650000000000002`}, {{0.07111394909689736, 
              0.257015087768678}, {0.257015087768678, 0.9288860509031026}}}, {
             1, 3, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
              1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
              0.5000000000000003}}}}, {{
             2, 1, {0, 0}, 0.25, 0.3337690000000001, {0.9, 0.7}, {0.488, 
              1.105}, {{
              0.5085673025355859, -0.49992659593910754`}, \
{-0.49992659593910754`, 0.4914326974644139}}}, {
             2, 4, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
              1.3650000000000002`}, {{0.8401195792023005, 
              0.3664951184439569}, {0.3664951184439569, 
              0.15988042079769943`}}}, {
             2, 3, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
              1.2400000000000002`}, {{0.9802872597830895, 
              0.13901132360369467`}, {0.13901132360369467`, 
              0.01971274021691052}}}}, {{
             3, 4, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
              1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
              0.8902438167756618, -0.31258560982291506`}, \
{-0.31258560982291506`, 0.1097561832243382}}}, {
             3, 1, {0, 0}, 0.25, 0.5832000000000002, {0.9, 0.7}, {1.44, 
              1.2400000000000002`}, {{0.49999999999999967`, 0.5}, {0.5, 
              0.5000000000000003}}}, {
             3, 2, {0, 0}, 0.25, 0.9245289999999999, {0.488, 1.105}, {1.44, 
              1.2400000000000002`}, {{0.9802872597830895, 
              0.13901132360369467`}, {0.13901132360369467`, 
              0.01971274021691052}}}}, {{
             4, 3, {0, 0}, 0.25, 0.1423609999999999, {1.44, 
              1.2400000000000002`}, {1.084, 1.3650000000000002`}, {{
              0.8902438167756618, -0.31258560982291506`}, \
{-0.31258560982291506`, 0.1097561832243382}}}, {
             4, 2, {0, 0}, 0.25, 0.4228160000000002, {0.488, 1.105}, {1.084, 
              1.3650000000000002`}, {{0.8401195792023005, 
              0.3664951184439569}, {0.3664951184439569, 
              0.15988042079769943`}}}, {
             4, 1, {0, 0}, 0.25, 0.47608100000000037`, {0.9, 0.7}, {1.084, 
              1.3650000000000002`}, {{0.07111394909689736, 
              0.257015087768678}, {0.257015087768678, 
              0.9288860509031026}}}}}, {{{
             1, 4, {-1, 0}, 0.25, 0.6289999999999998, {0.9, 0.7}, {
              1.4300000000000002`, 0.11000000000000032`}, {{
              0.4465818759936411, -0.49713831478537357`}, \
{-0.49713831478537357`, 0.5534181240063588}}}, {
             1, 2, {-1, 0}, 0.25, 0.7268559999999998, {0.9, 0.7}, {
              0.8340000000000001, -0.1499999999999999}, {{
              0.0059929339511540025`, 0.07718172512849858}, {
              0.07718172512849858, 0.994007066048846}}}, {
             1, 3, {-1, 0}, 0.25, 1.2962209999999996`, {0.9, 0.7}, {
              1.786, -0.01499999999999968}, {{
              0.6056035197701628, -0.48872067340368647`}, \
{-0.48872067340368647`, 0.3943964802298371}}}, {
             1, 1, {1, 0}, 0.25, 1.6947409999999998`, {0.9, 0.7}, {
              0.5539999999999999, 1.9549999999999998`}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             1, 1, {-1, 0}, 0.25, 1.6947409999999996`, {0.9, 0.7}, {
              1.246, -0.5549999999999999}, {{
              0.07063970246781073, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321893}}}, {
             1, 3, {0, -1}, 0.25, 1.9171999999999996`, {0.9, 
              0.7}, {-0.45999999999999996`, 0.44000000000000017`}, {{
              0.9647402461923639, 0.18443563530148122`}, {
              0.18443563530148122`, 0.03525975380763608}}}, {
             1, 4, {0, -1}, 0.25, 2.9628809999999994`, {0.9, 
              0.7}, {-0.8159999999999998, 0.5650000000000002}, {{
              0.9938488923449844, 0.0781874128593081}, {0.0781874128593081, 
              0.006151107655015489}}}, {
             1, 3, {1, 0}, 0.25, 3.2596610000000004`, {0.9, 0.7}, {
              1.0939999999999999`, 2.495}, {{0.011545985916940423`, 
              0.10683012742736123`}, {0.10683012742736123`, 
              0.9884540140830596}}}, {
             1, 3, {-1, -1}, 0.25, 3.323420999999998, {0.9, 
              0.7}, {-0.11399999999999988`, -0.8149999999999995}, {{
              0.30937879973677734`, 0.4622375558197412}, {0.4622375558197412, 
              0.6906212002632227}}}, {
             1, 2, {1, 0}, 0.25, 3.330164, {0.9, 0.7}, {0.1419999999999999, 
              2.36}, {{
              
              0.17253324460897426`, -0.3778432533652998}, \
{-0.3778432533652998, 0.8274667553910258}}}, {
             1, 2, {-1, 1}, 0.25, 3.3660560000000004`, {0.9, 0.7}, {2.734, 
              0.6500000000000001}, {{
              0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
             1, 2, {0, 1}, 0.25, 3.666169, {0.9, 0.7}, {2.388, 1.905}, {{
              0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
              0.3960605744034168}}}, {
             1, 4, {1, 0}, 0.25, 3.712644000000001, {0.9, 0.7}, {0.738, 
              2.62}, {{
              0.00706881672468462, -0.08377856858885474}, \
{-0.08377856858885474, 0.9929311832753154}}}, {
             1, 4, {-1, -1}, 0.25, 3.8089999999999975`, {0.9, 
              0.7}, {-0.46999999999999975`, -0.6899999999999995}, {{
              0.49275400367550554`, 0.49994749278025735`}, {
              0.49994749278025735`, 0.5072459963244946}}}, {
             1, 3, {1, -1}, 0.25, 3.900461, {0.9, 0.7}, {-0.806, 1.695}, {{
              0.7461774390257973, -0.43519727539898495`}, \
{-0.43519727539898495`, 0.25382256097420286`}}}, {
             1, 1, {0, 1}, 0.25, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {0, -1}, 0.25, 4.25, {0.9, 
              0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             1, 1, {1, -1}, 0.25, 5.251541, {0.9, 0.7}, {-1.346, 
              1.1549999999999998`}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             1, 1, {-1, 1}, 0.25, 5.251541, {0.9, 0.7}, {3.146, 
              0.2450000000000001}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             1, 2, {0, -1}, 0.25, 5.501368999999999, {0.9, 0.7}, {-1.412, 
              0.30499999999999994`}, {{0.9716388775230311, 
              0.16600231687785352`}, {0.16600231687785352`, 
              0.028361122476968925`}}}, {
             1, 4, {1, -1}, 0.25, 5.506244, {0.9, 0.7}, {-1.162, 1.82}, {{
              0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
              0.22781409614248846`}}}, {
             1, 4, {-1, 1}, 0.25, 5.949000000000001, {0.9, 0.7}, {3.33, 
              0.9100000000000004}, {{0.9925869894099848, 
              0.08577912254160378}, {0.08577912254160378, 
              0.007413010590015157}}}, {
             1, 4, {0, 1}, 0.25, 6.489281000000001, {0.9, 0.7}, {2.984, 
              2.165}, {{0.6692661328735803, 0.4704773918713028}, {
              0.4704773918713028, 0.33073386712641967`}}}, {
             1, 2, {-1, -1}, 0.25, 6.587655999999997, {0.9, 
              0.7}, {-1.0659999999999998`, -0.9499999999999997}, {{
              0.5867270543574225, 0.49242097644442884`}, {
              0.49242097644442884`, 0.41327294564257755`}}}, {
             1, 1, {1, 1}, 0.25, 6.637940999999998, {0.9, 0.7}, {
              2.4539999999999997`, 2.755}, {{0.3638049810927817, 
              0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             1, 1, {-1, -1}, 0.25, 6.637940999999998, {0.9, 
              0.7}, {-0.6539999999999998, -1.3549999999999998`}, {{
              0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             1, 2, {1, 1}, 0.25, 7.355764, {0.9, 0.7}, {2.042, 
              3.1599999999999997`}, {{0.177298238497048, 
              0.3819208990391752}, {0.3819208990391752, 
              0.8227017615029519}}}, {
             1, 3, {0, 1}, 0.25, 7.7492, {0.9, 0.7}, {3.34, 2.04}, {{
              0.7682857585299127, 0.4219274247664275}, {0.4219274247664275, 
              0.23171424147008726`}}}, {
             1, 3, {-1, 1}, 0.25, 7.769021, {0.9, 0.7}, {3.686, 
              0.7850000000000004}, {{0.9990700243956092, 
              0.030481318045092316`}, {0.030481318045092316`, 
              0.0009299756043908324}}}, {
             1, 2, {1, -1}, 0.25, 7.804563999999999, {0.9, 0.7}, {-1.758, 
              1.5599999999999998`}, {{
              0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
              0.09476506310922683}}}, {
             1, 4, {1, 1}, 0.25, 10.419044, {0.9, 0.7}, {2.638, 3.42}, {{
              0.2899156582888027, 0.45372300951987526`}, {
              0.45372300951987526`, 0.7100843417111973}}}, {
             1, 3, {1, 1}, 0.25, 11.118860999999999`, {0.9, 0.7}, {
              2.9939999999999998`, 3.295}, {{0.39436017771964227`, 
              0.4887128276898146}, {0.4887128276898146, 
              0.6056398222803576}}}}, {{
             2, 1, {1, 0}, 0.25, 0.7268559999999998, {0.488, 1.105}, {
              0.5539999999999999, 1.9549999999999998`}, {{
              0.0059929339511540025`, 0.07718172512849858}, {
              0.07718172512849858, 0.994007066048846}}}, {
             2, 3, {0, -1}, 0.25, 1.3409289999999996`, {0.488, 
              1.105}, {-0.45999999999999996`, 0.44000000000000017`}, {{
              0.6702099812890915, 0.47013674847810727`}, {
              0.47013674847810727`, 0.3297900187109085}}}, {
             2, 2, {1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
              0.1419999999999999, 2.36}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             2, 2, {-1, 0}, 0.25, 1.6947409999999998`, {0.488, 1.105}, {
              0.8340000000000001, -0.1499999999999999}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             2, 4, {-1, 0}, 0.25, 1.8773889999999998`, {0.488, 1.105}, {
              1.4300000000000002`, 0.11000000000000032`}, {{
              0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
              0.5273414300392724}}}, {
             2, 4, {0, -1}, 0.25, 1.9920159999999993`, {0.488, 
              1.105}, {-0.8159999999999998, 0.5650000000000002}, {{
              0.8536156336093687, 0.3534911366173765}, {0.3534911366173765, 
              0.14638436639063135`}}}, {
             2, 3, {1, -1}, 0.25, 2.022536, {0.488, 1.105}, {-0.806, 
              1.695}, {{
              0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
              0.1721106571156212}}}, {
             2, 3, {1, 0}, 0.25, 2.2993360000000003`, {0.488, 1.105}, {
              1.0939999999999999`, 2.495}, {{0.1597139348055264, 
              0.36634054353082796`}, {0.36634054353082796`, 
              0.8402860651944737}}}, {
             2, 4, {1, 0}, 0.25, 2.3577250000000003`, {0.488, 1.105}, {0.738, 
              2.62}, {{0.02650860469308337, 0.16064214444008523`}, {
              0.16064214444008523`, 0.9734913953069165}}}, {
             2, 3, {-1, 0}, 0.25, 2.9392039999999993`, {0.488, 1.105}, {
              1.786, -0.01499999999999968}, {{
              0.5732177827738397, -0.49461010532103256`}, \
{-0.49461010532103256`, 0.42678221722616044`}}}, {
             2, 4, {1, -1}, 0.25, 3.2337249999999997`, {0.488, 
              1.105}, {-1.162, 1.82}, {{
              0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
              0.1580916744621142}}}, {
             2, 1, {-1, 0}, 0.25, 3.330164, {0.488, 1.105}, {
              1.246, -0.5549999999999999}, {{
              0.1725332446089742, -0.37784325336529967`}, \
{-0.37784325336529967`, 0.8274667553910258}}}, {
             2, 1, {1, -1}, 0.25, 3.3660560000000004`, {0.488, 
              1.105}, {-1.346, 1.1549999999999998`}, {{
              0.9992572910254612, -0.027242565186081178`}, \
{-0.027242565186081178`, 0.0007427089745387426}}}, {
             2, 1, {0, -1}, 0.25, 3.666169, {0.488, 
              1.105}, {-0.9999999999999999, -0.10000000000000009`}, {{
              0.6039394255965833, 0.4890772902176633}, {0.4890772902176633, 
              0.3960605744034168}}}, {
             2, 3, {-1, -1}, 0.25, 4.048803999999998, {0.488, 
              1.105}, {-0.11399999999999988`, -0.8149999999999995}, {{
              0.08950890188806375, 0.28547689638718005`}, {
              0.28547689638718005`, 0.9104910981119363}}}, {
             2, 4, {-1, -1}, 0.25, 4.139788999999998, {0.488, 
              1.105}, {-0.46999999999999975`, -0.6899999999999995}, {{
              0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
              0.7783065755283662}}}, {
             2, 2, {0, 1}, 0.25, 4.25, {0.488, 1.105}, {2.388, 1.905}, {{
              0.8494117647058823, 0.35764705882352943`}, {
              0.35764705882352943`, 0.15058823529411766`}}}, {
             2, 2, {0, -1}, 0.25, 4.25, {0.488, 1.105}, {-1.412, 
              0.30499999999999994`}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             2, 2, {1, -1}, 0.25, 5.251541, {0.488, 1.105}, {-1.758, 
              1.5599999999999998`}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             2, 2, {-1, 1}, 0.25, 5.251541, {0.488, 1.105}, {2.734, 
              0.6500000000000001}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             2, 1, {0, 1}, 0.25, 5.501368999999999, {0.488, 1.105}, {2.8, 
              1.5}, {{0.9716388775230311, 0.16600231687785352`}, {
              0.16600231687785352`, 0.028361122476968925`}}}, {
             2, 1, {1, 1}, 0.25, 6.587655999999999, {0.488, 1.105}, {
              2.4539999999999997`, 2.755}, {{0.5867270543574223, 
              0.4924209764444288}, {0.4924209764444288, 
              0.4132729456425776}}}, {
             2, 2, {1, 1}, 0.25, 6.637940999999998, {0.488, 1.105}, {2.042, 
              3.1599999999999997`}, {{0.3638049810927817, 
              0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             2, 2, {-1, -1}, 0.25, 6.637940999999998, {0.488, 
              1.105}, {-1.0659999999999998`, -0.9499999999999997}, {{
              0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             2, 4, {0, 1}, 0.25, 7.353616000000001, {0.488, 1.105}, {2.984, 
              2.165}, {{0.8472044229668777, 0.35979033988176695`}, {
              0.35979033988176695`, 0.15279557703312222`}}}, {
             2, 1, {-1, -1}, 0.25, 7.355764, {0.488, 
              1.105}, {-0.6539999999999998, -1.3549999999999998`}, {{
              0.177298238497048, 0.3819208990391752}, {0.3819208990391752, 
              0.8227017615029519}}}, {
             2, 1, {-1, 1}, 0.25, 7.804563999999999, {0.488, 1.105}, {3.146, 
              0.2450000000000001}, {{
              0.9052349368907732, -0.2928901601678197}, {-0.2928901601678197, 
              0.09476506310922683}}}, {
             2, 4, {-1, 1}, 0.25, 8.114989, {0.488, 1.105}, {3.33, 
              0.9100000000000004}, {{
              0.9953142265503996, -0.06829214432699773}, \
{-0.06829214432699773, 0.004685773449600468}}}, {
             2, 3, {0, 1}, 0.25, 9.008129, {0.488, 1.105}, {3.34, 2.04}, {{
              0.9029515452098876, 0.29602373589454595`}, {
              0.29602373589454595`, 0.09704845479011237}}}, {
             2, 4, {1, 1}, 0.25, 9.981724999999999, {0.488, 1.105}, {2.638, 
              3.42}, {{0.4630963085037907, 0.49863625776105835`}, {
              0.49863625776105835`, 0.5369036914962093}}}, {
             2, 3, {-1, 1}, 0.25, 10.329604, {0.488, 1.105}, {3.686, 
              0.7850000000000004}, {{
              0.9900867448548851, -0.09907059360649245}, \
{-0.09907059360649245, 0.00991325514511493}}}, {
             2, 3, {1, 1}, 0.25, 11.076135999999998`, {0.488, 1.105}, {
              2.9939999999999998`, 3.295}, {{0.5669879820905052, 
              0.49549229081333057`}, {0.49549229081333057`, 
              0.43301201790949484`}}}}, {{
             3, 4, {-1, 0}, 0.25, 1.2769999999999997`, {1.44, 
              1.2400000000000002`}, {1.4300000000000002`, 
              0.11000000000000032`}, {{0.00007830853563038039, 
              0.008848864526233173}, {0.008848864526233173, 
              0.9999216914643697}}}, {
             3, 1, {1, 0}, 0.25, 1.2962209999999996`, {1.44, 
              1.2400000000000002`}, {0.5539999999999999, 
              1.9549999999999998`}, {{
              0.6056035197701628, -0.48872067340368647`}, \
{-0.48872067340368647`, 0.3943964802298371}}}, {
             3, 2, {0, 1}, 0.25, 1.3409289999999996`, {1.44, 
              1.2400000000000002`}, {2.388, 1.905}, {{0.6702099812890915, 
              0.47013674847810727`}, {0.47013674847810727`, 
              0.3297900187109085}}}, {
             3, 3, {1, 0}, 0.25, 1.6947409999999998`, {1.44, 
              1.2400000000000002`}, {1.0939999999999999`, 2.495}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             3, 3, {-1, 0}, 0.25, 1.6947409999999998`, {1.44, 
              1.2400000000000002`}, {1.786, -0.01499999999999968}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             3, 1, {0, 1}, 0.25, 1.9171999999999996`, {1.44, 
              1.2400000000000002`}, {2.8, 1.5}, {{0.9647402461923639, 
              0.18443563530148122`}, {0.18443563530148122`, 
              0.03525975380763608}}}, {
             3, 2, {-1, 1}, 0.25, 2.022536, {1.44, 1.2400000000000002`}, {
              2.734, 0.6500000000000001}, {{
              0.8278893428843788, -0.3774765937417183}, {-0.3774765937417183, 
              0.1721106571156212}}}, {
             3, 2, {-1, 0}, 0.25, 2.2993360000000003`, {1.44, 
              1.2400000000000002`}, {
              0.8340000000000001, -0.1499999999999999}, {{0.1597139348055264, 
              0.36634054353082796`}, {0.36634054353082796`, 
              0.8402860651944737}}}, {
             3, 4, {1, 0}, 0.25, 2.3972039999999994`, {1.44, 
              1.2400000000000002`}, {0.738, 2.62}, {{
              0.20557449428584304`, -0.4041208007328538}, \
{-0.4041208007328538, 0.794425505714157}}}, {
             3, 2, {1, 0}, 0.25, 2.9392039999999993`, {1.44, 
              1.2400000000000002`}, {0.1419999999999999, 2.36}, {{
              0.5732177827738397, -0.49461010532103256`}, \
{-0.49461010532103256`, 0.42678221722616044`}}}, {
             3, 4, {0, 1}, 0.25, 3.239561, {1.44, 1.2400000000000002`}, {
              2.984, 2.165}, {{0.7358824235752931, 0.44086220324297015`}, {
              0.44086220324297015`, 0.2641175764247068}}}, {
             3, 1, {-1, 0}, 0.25, 3.2596610000000004`, {1.44, 
              1.2400000000000002`}, {1.246, -0.5549999999999999}, {{
              0.011545985916940437`, 0.10683012742736128`}, {
              0.10683012742736128`, 0.9884540140830596}}}, {
             3, 1, {1, 1}, 0.25, 3.323420999999999, {1.44, 
              1.2400000000000002`}, {2.4539999999999997`, 2.755}, {{
              0.3093787997367773, 0.46223755581974113`}, {
              0.46223755581974113`, 0.6906212002632227}}}, {
             3, 4, {-1, 1}, 0.25, 3.681, {1.44, 1.2400000000000002`}, {3.33, 
              0.9100000000000004}, {{
              0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
              0.029584352078239583`}}}, {
             3, 1, {-1, 1}, 0.25, 3.900461, {1.44, 1.2400000000000002`}, {
              3.146, 0.2450000000000001}, {{
              0.7461774390257973, -0.43519727539898495`}, \
{-0.43519727539898495`, 0.25382256097420286`}}}, {
             3, 2, {1, 1}, 0.25, 4.048803999999998, {1.44, 
              1.2400000000000002`}, {2.042, 3.1599999999999997`}, {{
              0.08950890188806375, 0.28547689638718005`}, {
              0.28547689638718005`, 0.9104910981119363}}}, {
             3, 3, {0, 1}, 0.25, 4.25, {1.44, 1.2400000000000002`}, {3.34, 
              2.04}, {{0.8494117647058823, 0.3576470588235293}, {
              0.3576470588235293, 0.15058823529411758`}}}, {
             3, 3, {0, -1}, 0.25, 4.25, {1.44, 
              1.2400000000000002`}, {-0.45999999999999996`, 
              0.44000000000000017`}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             3, 3, {1, -1}, 0.25, 5.251541, {1.44, 
              1.2400000000000002`}, {-0.806, 1.695}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             3, 3, {-1, 1}, 0.25, 5.251541, {1.44, 1.2400000000000002`}, {
              3.686, 0.7850000000000004}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             3, 4, {0, -1}, 0.25, 5.545160999999999, {1.44, 
              1.2400000000000002`}, {-0.8159999999999998, 
              0.5650000000000002}, {{0.9178337653316107, 
              0.2746178154250165}, {0.2746178154250165, 
              0.08216623466838927}}}, {
             3, 4, {1, 1}, 0.25, 6.1876039999999985`, {1.44, 
              1.2400000000000002`}, {2.638, 3.42}, {{0.23194826301101365`, 
              0.4220761380333971}, {0.4220761380333971, 
              0.7680517369889863}}}, {
             3, 3, {1, 1}, 0.25, 6.637940999999998, {1.44, 
              1.2400000000000002`}, {2.9939999999999998`, 3.295}, {{
              0.3638049810927817, 0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             3, 3, {-1, -1}, 0.25, 6.637940999999998, {1.44, 
              1.2400000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
              0.4810934595531958, 0.6361950189072184}}}, {
             3, 4, {1, -1}, 0.25, 7.106803999999999, {1.44, 
              1.2400000000000002`}, {-1.162, 1.82}, {{
              0.9526650798305399, -0.21235424531195737`}, \
{-0.21235424531195737`, 0.04733492016946012}}}, {
             3, 4, {-1, -1}, 0.25, 7.3729999999999976`, {1.44, 
              1.2400000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.49479180794791805`, 0.4999728739997287}, {
              0.4999728739997287, 0.5052081920520819}}}, {
             3, 1, {0, -1}, 0.25, 7.7492, {1.44, 
              1.2400000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.7682857585299127, 0.42192742476642753`}, {
              0.42192742476642753`, 0.23171424147008732`}}}, {
             3, 1, {1, -1}, 0.25, 7.769021, {1.44, 
              1.2400000000000002`}, {-1.346, 1.1549999999999998`}, {{
              0.9990700243956092, 0.030481318045092316`}, {
              0.030481318045092316`, 0.0009299756043908324}}}, {
             3, 2, {0, -1}, 0.25, 9.008129, {1.44, 
              1.2400000000000002`}, {-1.412, 0.30499999999999994`}, {{
              0.9029515452098876, 0.296023735894546}, {0.296023735894546, 
              0.09704845479011241}}}, {
             3, 2, {1, -1}, 0.25, 10.329604, {1.44, 
              1.2400000000000002`}, {-1.758, 1.5599999999999998`}, {{
              0.9900867448548851, -0.09907059360649245}, \
{-0.09907059360649245, 0.00991325514511493}}}, {
             3, 2, {-1, -1}, 0.25, 11.076135999999998`, {1.44, 
              1.2400000000000002`}, {-1.0659999999999998`, \
-0.9499999999999997}, {{0.5669879820905052, 0.49549229081333057`}, {
              0.49549229081333057`, 0.43301201790949484`}}}, {
             3, 1, {-1, -1}, 0.25, 11.118860999999999`, {1.44, 
              1.2400000000000002`}, {-0.6539999999999998, \
-1.3549999999999998`}, {{0.39436017771964227`, 0.4887128276898146}, {
              0.4887128276898146, 0.6056398222803576}}}}, {{
             4, 1, {1, 0}, 0.25, 0.6289999999999998, {1.084, 
              1.3650000000000002`}, {0.5539999999999999, 
              1.9549999999999998`}, {{
              0.4465818759936411, -0.49713831478537357`}, \
{-0.49713831478537357`, 0.5534181240063588}}}, {
             4, 3, {1, 0}, 0.25, 1.2769999999999997`, {1.084, 
              1.3650000000000002`}, {1.0939999999999999`, 2.495}, {{
              0.00007830853563038039, 0.008848864526233173}, {
              0.008848864526233173, 0.9999216914643697}}}, {
             4, 4, {1, 0}, 0.25, 1.6947409999999998`, {1.084, 
              1.3650000000000002`}, {0.738, 2.62}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             4, 4, {-1, 0}, 0.25, 1.6947409999999998`, {1.084, 
              1.3650000000000002`}, {1.4300000000000002`, 
              0.11000000000000032`}, {{
              0.07063970246781076, -0.2562220421881574}, {-0.2562220421881574,
               0.9293602975321892}}}, {
             4, 2, {1, 0}, 0.25, 1.8773889999999998`, {1.084, 
              1.3650000000000002`}, {0.1419999999999999, 2.36}, {{
              0.47265856996072764`, -0.499251886529643}, {-0.499251886529643, 
              0.5273414300392724}}}, {
             4, 2, {0, 1}, 0.25, 1.9920159999999993`, {1.084, 
              1.3650000000000002`}, {2.388, 1.905}, {{0.8536156336093687, 
              0.3534911366173765}, {0.3534911366173765, 
              0.14638436639063135`}}}, {
             4, 2, {-1, 0}, 0.25, 2.3577250000000003`, {1.084, 
              1.3650000000000002`}, {
              0.8340000000000001, -0.1499999999999999}, {{0.02650860469308337,
               0.16064214444008523`}, {0.16064214444008523`, 
              0.9734913953069165}}}, {
             4, 3, {-1, 0}, 0.25, 2.3972039999999994`, {1.084, 
              1.3650000000000002`}, {1.786, -0.01499999999999968}, {{
              0.20557449428584304`, -0.4041208007328538}, \
{-0.4041208007328538, 0.794425505714157}}}, {
             4, 1, {0, 1}, 0.25, 2.9628809999999994`, {1.084, 
              1.3650000000000002`}, {2.8, 1.5}, {{0.9938488923449844, 
              0.0781874128593081}, {0.0781874128593081, 
              0.006151107655015489}}}, {
             4, 2, {-1, 1}, 0.25, 3.2337249999999997`, {1.084, 
              1.3650000000000002`}, {2.734, 0.6500000000000001}, {{
              0.8419083255378859, -0.3648269410664173}, {-0.3648269410664173, 
              0.1580916744621142}}}, {
             4, 3, {0, -1}, 0.25, 3.239561, {1.084, 
              1.3650000000000002`}, {-0.45999999999999996`, 
              0.44000000000000017`}, {{0.7358824235752931, 
              0.44086220324297026`}, {0.44086220324297026`, 
              0.2641175764247069}}}, {
             4, 3, {1, -1}, 0.25, 3.681, {1.084, 
              1.3650000000000002`}, {-0.806, 1.695}, {{
              0.9704156479217605, -0.1694376528117359}, {-0.1694376528117359, 
              0.029584352078239583`}}}, {
             4, 1, {-1, 0}, 0.25, 3.712644000000001, {1.084, 
              1.3650000000000002`}, {1.246, -0.5549999999999999}, {{
              0.00706881672468461, -0.08377856858885468}, \
{-0.08377856858885468, 0.9929311832753154}}}, {
             4, 1, {1, 1}, 0.25, 3.8089999999999984`, {1.084, 
              1.3650000000000002`}, {2.4539999999999997`, 2.755}, {{
              0.4927540036755054, 0.4999474927802573}, {0.4999474927802573, 
              0.5072459963244946}}}, {
             4, 2, {1, 1}, 0.25, 4.139788999999998, {1.084, 
              1.3650000000000002`}, {2.042, 3.1599999999999997`}, {{
              0.22169342447163368`, 0.4153859049338022}, {0.4153859049338022, 
              0.7783065755283662}}}, {
             4, 4, {0, 1}, 0.25, 4.25, {1.084, 1.3650000000000002`}, {2.984, 
              2.165}, {{0.8494117647058823, 0.3576470588235293}, {
              0.3576470588235293, 0.15058823529411758`}}}, {
             4, 4, {0, -1}, 0.25, 4.25, {1.084, 
              1.3650000000000002`}, {-0.8159999999999998, 
              0.5650000000000002}, {{0.8494117647058823, 
              0.35764705882352943`}, {0.35764705882352943`, 
              0.15058823529411766`}}}, {
             4, 4, {1, -1}, 0.25, 5.251541, {1.084, 
              1.3650000000000002`}, {-1.162, 1.82}, {{
              
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             4, 4, {-1, 1}, 0.25, 5.251541, {1.084, 1.3650000000000002`}, {
              3.33, 0.9100000000000004}, {{
              0.9605782378924587, -0.19459621471107236`}, \
{-0.19459621471107236`, 0.039421762107541364`}}}, {
             4, 1, {-1, 1}, 0.25, 5.506244, {1.084, 1.3650000000000002`}, {
              3.146, 0.2450000000000001}, {{
              0.7721859038575115, -0.4194220234337599}, {-0.4194220234337599, 
              0.22781409614248846`}}}, {
             4, 3, {0, 1}, 0.25, 5.5451609999999985`, {1.084, 
              1.3650000000000002`}, {3.34, 2.04}, {{0.9178337653316108, 
              0.2746178154250165}, {0.2746178154250165, 
              0.08216623466838924}}}, {
             4, 1, {1, -1}, 0.25, 5.949000000000001, {1.084, 
              1.3650000000000002`}, {-1.346, 1.1549999999999998`}, {{
              0.9925869894099848, 0.08577912254160378}, {0.08577912254160378, 
              0.007413010590015157}}}, {
             4, 3, {-1, -1}, 0.25, 6.1876039999999985`, {1.084, 
              1.3650000000000002`}, {-0.11399999999999988`, \
-0.8149999999999995}, {{0.23194826301101365`, 0.4220761380333971}, {
              0.4220761380333971, 0.7680517369889863}}}, {
             4, 1, {0, -1}, 0.25, 6.489281000000002, {1.084, 
              1.3650000000000002`}, {-0.9999999999999999, \
-0.10000000000000009`}, {{0.6692661328735803, 0.47047739187130283`}, {
              0.47047739187130283`, 0.3307338671264197}}}, {
             4, 4, {1, 1}, 0.25, 6.637940999999998, {1.084, 
              1.3650000000000002`}, {2.638, 3.42}, {{0.3638049810927817, 
              0.4810934595531958}, {0.4810934595531958, 
              0.6361950189072184}}}, {
             4, 4, {-1, -1}, 0.25, 6.637940999999998, {1.084, 
              1.3650000000000002`}, {-0.46999999999999975`, \
-0.6899999999999995}, {{0.3638049810927817, 0.4810934595531958}, {
              0.4810934595531958, 0.6361950189072184}}}, {
             4, 3, {-1, 1}, 0.25, 7.106803999999999, {1.084, 
              1.3650000000000002`}, {3.686, 0.7850000000000004}, {{
              0.9526650798305399, -0.21235424531195737`}, \
{-0.21235424531195737`, 0.04733492016946012}}}, {
             4, 2, {0, -1}, 0.25, 7.353616000000001, {1.084, 
              1.3650000000000002`}, {-1.412, 0.30499999999999994`}, {{
              0.8472044229668777, 0.35979033988176706`}, {
              0.35979033988176706`, 0.15279557703312227`}}}, {
             4, 3, {1, 1}, 0.25, 7.3729999999999976`, {1.084, 
              1.3650000000000002`}, {2.9939999999999998`, 3.295}, {{
              0.49479180794791805`, 0.4999728739997287}, {0.4999728739997287, 
              0.5052081920520819}}}, {
             4, 2, {1, -1}, 0.25, 8.114989, {1.084, 
              1.3650000000000002`}, {-1.758, 1.5599999999999998`}, {{
              0.9953142265503996, -0.06829214432699773}, \
{-0.06829214432699773, 0.004685773449600468}}}, {
             4, 2, {-1, -1}, 0.25, 9.981724999999999, {1.084, 
              1.3650000000000002`}, {-1.0659999999999998`, \
-0.9499999999999997}, {{0.4630963085037907, 0.49863625776105835`}, {
              0.49863625776105835`, 0.5369036914962093}}}, {
             4, 1, {-1, -1}, 0.25, 10.419044, {1.084, 
              1.3650000000000002`}, {-0.6539999999999998, \
-1.3549999999999998`}, {{0.2899156582888027, 0.45372300951987526`}, {
              0.45372300951987526`, 0.7100843417111973}}}}}}}, 0, ControlType -> 
         None}, {{$CellContext`glConstSpringColorsByN$$, {{-1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
             Rational[2, 3], 0], {-1, -1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]], {0, 0} -> RGBColor[
             Rational[2, 3], 
             Rational[2, 3], 0], {1, 0} -> RGBColor[
             Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
             Rational[2, 3], 0], {1, 1} -> 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
           RGBColor[0, 
             Rational[2, 3], 
             Rational[2, 3]]}}, 0, ControlType -> 
         None}, {{$CellContext`k1$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k2$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k3$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k4$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`k5$$, 0.25}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left, 
        SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{915., {292., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`glConstLocDefault = {{0.1, 1.3}, {1.9, 
        0.8}}, $CellContext`locDependent[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`numMasses, 
          Blank[Integer]], 
         Pattern[$CellContext`rma, 
          Blank[List]]] := 
       Module[{$CellContext`m, $CellContext`latticeBasis, \
$CellContext`numberLatticeLinesToDisplay, $CellContext`reciprocalBasis, \
$CellContext`mObliqueComponents, $CellContext`mPosFirstCell, \
$CellContext`reciprocalNorms, \
$CellContext`allLatticeCellOriginsInDynPlotRange, $CellContext`cellOrigins}, \
$CellContext`latticeBasis = Take[$CellContext`uLoc, 2]; $CellContext`m = 
          Drop[$CellContext`uLoc, 
            2]; $CellContext`numberLatticeLinesToDisplay = Map[Ceiling[
             Abs[$CellContext`glConstWindowHalfWidth/Part[
               Part[$CellContext`latticeBasis, #], #]]]& , 
            Range[
            2]]; $CellContext`reciprocalBasis = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis]; \
$CellContext`reciprocalNorms = Map[Norm[
             Part[$CellContext`reciprocalBasis, #]]& , 
            Range[2]]; $CellContext`mObliqueComponents = Table[
            Dot[
             Part[$CellContext`m, $CellContext`i], 
             
             Part[$CellContext`reciprocalBasis, $CellContext`j]], \
{$CellContext`i, $CellContext`numMasses}, {$CellContext`j, 
             2}]; $CellContext`mPosFirstCell = 
          Map[Part[$CellContext`m, #] - Dot[
             Floor[
              
              Part[$CellContext`mObliqueComponents, #]], \
$CellContext`latticeBasis]& , 
            
            Range[$CellContext`numMasses]]; \
$CellContext`allLatticeCellOriginsInDynPlotRange = Transpose[
            $CellContext`findLatticeCells[$CellContext`latticeBasis, \
$CellContext`glConstDynPlotRange]]; $CellContext`cellOrigins = 
          Last[$CellContext`allLatticeCellOriginsInDynPlotRange]; {
          "mScalarArray" -> $CellContext`rma, 
           "numberOfMasses" -> $CellContext`numMasses, 
           "latticeBasis" -> $CellContext`latticeBasis, "latticeNorms" -> 
           Map[Norm[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], "latticeUnitVectors" -> Map[Normalize[
              Part[$CellContext`latticeBasis, #]]& , 
             Range[2]], 
           "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay, "latticeCellOriginIndexes" -> 
           First[$CellContext`allLatticeCellOriginsInDynPlotRange], 
           "reciprocalBasis" -> $CellContext`reciprocalBasis, 
           "reciprocalNorms" -> $CellContext`reciprocalNorms, 
           "qMaxVec" -> (2 Pi) $CellContext`reciprocalNorms, 
           "mObliqueComponents" -> $CellContext`mObliqueComponents, 
           "mPosFirstCell" -> $CellContext`mPosFirstCell, "pointsDataTable" -> 
           Map[$CellContext`pointsTable[
              
              Part[$CellContext`mPosFirstCell, #], $CellContext`cellOrigins]& \
, 
             Range[$CellContext`numMasses]], "lineTable" -> 
           Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay, $CellContext`latticeBasis, #]& , 
             Permutations[{1, 2}]]}], 
       TagSet[$CellContext`locDependent, 
        MessageName[$CellContext`locDependent, "usage"], 
        "Locator dependent calculations (i.e. based on the mass positions and \
the unit cell basis vectors)\n\nExample:\n\nld = locDependent[ { {1/2,1}, \
{1,1/2}, {1/2,3} }, 1, {10} ] ;\n"], $CellContext`glConstWindowHalfWidth = 
       3, $CellContext`calcReciprocalBasis[
         Pattern[$CellContext`loc, 
          Blank[List]]] := Inverse[
         Transpose[$CellContext`loc]], 
       TagSet[$CellContext`calcReciprocalBasis, 
        MessageName[$CellContext`calcReciprocalBasis, "usage"], 
        "Return a reciprocal frame basis for a set of vectors.  This doesn't \
include the 2 \[Pi] scaling that is common in solid state physics.  Example, \
displaying the desired Kronicker delta behaviour:\n\nb = {{2,1},{-1/4, 2}} ;\n\
g = calcReciprocalBasis[ b ] ;\n\n\
{g[[1]].loc[[1]],\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].\
loc[[1]],\[IndentingNewLine]g[[2]].loc[[2]]}\n"], \
$CellContext`findLatticeCells[
         Pattern[$CellContext`latticeVectors, 
          Blank[List]], 
         Pattern[$CellContext`limits, 
          Blank[List]]] := 
       Module[{$CellContext`a, $CellContext`b, $CellContext`sol, \
$CellContext`oneSolution}, {$CellContext`a, $CellContext`b} = \
$CellContext`latticeVectors; $CellContext`oneSolution[
            Pattern[$CellContext`o, 
             Blank[]]] := ReplaceAll[{$CellContext`n, $CellContext`m}, 
            Solve[
             Rationalize[
              And[Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {1, 0}] < Part[
                 Part[$CellContext`limits, 1], 2], Part[
                 Part[$CellContext`limits, 1], 1] < 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}], 
               Dot[$CellContext`n $CellContext`a + $CellContext`m \
$CellContext`b + $CellContext`o, {0, 1}] < Part[
                 Part[$CellContext`limits, 1], 
                 2]]], {$CellContext`n, $CellContext`m}, 
             Integers]]; $CellContext`sol = DeleteDuplicates[
            Sort[
             Flatten[
              
              Map[$CellContext`oneSolution[#]& , {{0, 
                0}, $CellContext`a, $CellContext`b, $CellContext`a + \
$CellContext`b}], 1]]]; 
         Map[{#, $CellContext`a Part[#, 1] + $CellContext`b 
             Part[#, 2]}& , $CellContext`sol]], 
       TagSet[$CellContext`findLatticeCells, 
        MessageName[$CellContext`findLatticeCells, "usage"], 
        "All the cell index pairs that lie within a rectangular region.\n\n\
Example: \nModule[{a, b, nAndPoints, cellOrigins, sol},\[IndentingNewLine]a = \
{1/2,2} ;\[IndentingNewLine]b = {2,-1/3} ;\[IndentingNewLine]\
\[IndentingNewLine]nAndPoints = findLatticeCells[{a,b}, {{-3, 5},{-1,6}}]  ;\
\[IndentingNewLine]cellOrigins = (nAndPoints // Transpose // Last) ;\
\[IndentingNewLine]\[IndentingNewLine]Show[{\[IndentingNewLine]ListPlot[\
cellOrigins, PlotStyle\[Rule]{Darker@Red, PointSize[Large]},\
\[IndentingNewLine]Epilog\[Rule] {Darker@Blue,Arrow[{{0,0},a}], Darker@Green, \
Arrow[{{0,0},b}]} \
]\[IndentingNewLine],\[IndentingNewLine]ListPlot[pointsTable[{0.3, 0.5}, \
cellOrigins], PlotStyle\[Rule]{Darker@Purple, PointSize[Medium]} ]\
\[IndentingNewLine]} ]\[IndentingNewLine]]\n"], \
$CellContext`glConstDynPlotRange = {{(-3)/2, 3}, {(-3)/2, 
          3}}, $CellContext`pointsTable[
         Pattern[$CellContext`massPosition, 
          Blank[List]], 
         Pattern[$CellContext`latticeOrigins, 
          Blank[List]]] := 
       Map[# + $CellContext`massPosition& , $CellContext`latticeOrigins], 
       TagSet[$CellContext`pointsTable, 
        MessageName[$CellContext`pointsTable, "usage"], 
        "Adds a position within a cell to a set of vectors to the origins of \
all the cells of interest.  Example in findLatticeCells::usage."], \
$CellContext`calcLineTable[
         Pattern[$CellContext`n, 
          Blank[List]], 
         Pattern[$CellContext`b, 
          Blank[List]], 
         Pattern[$CellContext`i, 
          Blank[List]]] := 
       Module[{$CellContext`first, $CellContext`second}, {$CellContext`first, \
$CellContext`second} = $CellContext`i; Table[
           
           Line[{(-Part[$CellContext`n, $CellContext`first]) 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second], 
             Part[$CellContext`n, $CellContext`first] 
              Part[$CellContext`b, $CellContext`first] + $CellContext`j 
              Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
            Part[$CellContext`n, $CellContext`second], 
            
            Part[$CellContext`n, $CellContext`second]}]], \
$CellContext`constructKArray[
         Pattern[$CellContext`r, 
          Blank[Integer]]] := Flatten[
         Table[
          $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2], $CellContext`constructKArrayElements[
         Pattern[$CellContext`i, 
          Blank[Integer]], 
         Pattern[$CellContext`j, 
          Blank[Integer]]] := 
       Module[{$CellContext`a}, $CellContext`a = Flatten[
            
            Table[{$CellContext`i, $CellContext`j, $CellContext`s 
               Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`n]} -> 
             Part[$CellContext`glConstKDefaults, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
         If[$CellContext`i < $CellContext`j, 
           
           Append[$CellContext`a, {$CellContext`i, $CellContext`j, {0, 0}} -> 
            Part[$CellContext`glConstKDefaults, 
              5]], $CellContext`a]], \
$CellContext`glConstNeighboringCellIndexes = {{1, 0}, {0, 1}, {1, 1}, {
        1, -1}}, $CellContext`glConstKDefaults = {0.25, 0.25, 0.25, 0.25, 
        0.25}, $CellContext`returnKarrayForAdditionalMassIndex[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`nmNew, 
          Blank[Integer]]] := 
       Module[{$CellContext`k2}, $CellContext`k2 = Flatten[
            Map[$CellContext`constructKArrayElements[
              Part[#, 1], 
              Part[#, 2]]& , 
             Select[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew}, {$CellContext`j, $CellContext`nmNew}], 1], 
              Max[#] == $CellContext`nmNew& ]], 2]; 
         Flatten[{$CellContext`kA, $CellContext`k2}, 
           1]], $CellContext`calculateCouplings[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`kA, 
          Blank[List]]] := 
       Module[{$CellContext`t, $CellContext`t1, $CellContext`t2, \
$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses}, \
{$CellContext`r, $CellContext`mp, $CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mPosFirstCell", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`t = 
          Map[Append[#, 
             $CellContext`relativeDifferences[$CellContext`r, $CellContext`mp, 
              First[#]]]& , 
            ReplaceAll[$CellContext`kA, Rule -> List]]; $CellContext`t = 
          Map[Flatten[{
              Part[#, 1], {
               Part[#, 2]}, 
              Part[#, 3]}, 1]& , $CellContext`t]; $CellContext`t1 = Table[
            Sort[
             
             Select[$CellContext`t, And[
              Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
$CellContext`t2 = 
          Select[$CellContext`t, Part[#, 3] == {0, 0}& ]; $CellContext`t2 = 
          Flatten[{$CellContext`t2, 
             Map[Flatten[{{
                 Part[#, 2], 
                 Part[#, 1]}, 
                Drop[#, 2]}, 1]& , $CellContext`t2]}, 1]; $CellContext`t2 = 
          Table[
            Sort[
             Select[$CellContext`t2, Part[#, 1] == $CellContext`i& ], 
             Part[#, 5] < 
             Part[#2, 
               5]& ], {$CellContext`i, $CellContext`numberOfMasses}]; \
{$CellContext`t2, $CellContext`t1}], 
       TagSet[$CellContext`calculateCouplings, 
        MessageName[$CellContext`calculateCouplings, "usage"], 
        "Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions."], \
$CellContext`relativeDifferences[
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mp, 
          Blank[List]], {
          Pattern[$CellContext`mIndex1, 
           Blank[Integer]], 
          Pattern[$CellContext`mIndex2, 
           Blank[Integer]], 
          Pattern[$CellContext`n, 
           Blank[List]]}] := 
       Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther, \
$CellContext`dn}, $CellContext`pOrigin = 
          Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
          Part[$CellContext`mp, $CellContext`mIndex2] + 
           Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
          Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}], 
       TagSet[$CellContext`relativeDifferences, 
        MessageName[$CellContext`relativeDifferences, "usage"], 
        "Example: relativeDifferences[ {aLoc, bLoc}, {mLoc1, mLoc2, ...}, \
kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: (kArray[[1]] /. \
Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, {nIndex1, \
nIndex2}},\n\n is a tuple for the spring constant between m1 in the origin \
cell to m2 in the lattice cell {n1,n2} ;\n"], $CellContext`projOpU[
         Pattern[$CellContext`v, 
          Blank[List]]] := {{
         Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
          Part[$CellContext`v, 2]}, {
         Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
          Part[$CellContext`v, 2]^2}}, $CellContext`dynamicsMatrix[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`cd, 
          Blank[List]]] := 
       Module[{$CellContext`cdFlatAndSorted, $CellContext`r, \
$CellContext`res, $CellContext`epsilon, $CellContext`m, \
$CellContext`mScalarArray, $CellContext`numberOfMasses}, \
$CellContext`cdFlatAndSorted = SplitBy[
            Sort[
             Flatten[$CellContext`cd, 2]], 
            First]; {$CellContext`r, $CellContext`mScalarArray, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "latticeBasis", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`epsilon = 
          Partition[
            IdentityMatrix[2 $CellContext`numberOfMasses], 
            2]; $CellContext`res = Partition[
            Flatten[
             Table[
              Total[
               Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r, 
                 
                 Part[$CellContext`mScalarArray, $CellContext`i], \
$CellContext`epsilon, $CellContext`mScalarArray]& , 
                
                Part[$CellContext`cdFlatAndSorted, $CellContext`i]]], \
{$CellContext`i, $CellContext`numberOfMasses}]], 
            2 $CellContext`numberOfMasses]; 
         ReplaceAll[$CellContext`res, $CellContext`qVec -> #]& ], \
$CellContext`oneTermOfdynamicsMatrix[{
          Pattern[$CellContext`k, 
           Blank[Integer]], 
          Pattern[$CellContext`j, 
           Blank[Integer]], 
          Pattern[$CellContext`mVec, 
           Blank[List]], 
          Pattern[$CellContext`kS, 
           Blank[]], 
          Blank[], 
          Blank[], 
          Blank[], 
          Pattern[$CellContext`proj, 
           Blank[List]]}, 
         Pattern[$CellContext`r, 
          Blank[List]], 
         Pattern[$CellContext`mk, 
          Blank[]], 
         Pattern[$CellContext`epsilon, 
          Blank[List]], 
         Pattern[$CellContext`mA, 
          Blank[List]]] := $CellContext`kS 
        Dot[$CellContext`proj, 
          Part[$CellContext`epsilon, $CellContext`k]/$CellContext`mk - 
          Part[$CellContext`epsilon, $CellContext`j] (E^(I Dot[
               Dot[$CellContext`mVec, $CellContext`r], $CellContext`qVec])/
           Sqrt[$CellContext`mk Part[$CellContext`mA, $CellContext`j]])], 
       TagSet[$CellContext`oneTermOfdynamicsMatrix, 
        MessageName[$CellContext`oneTermOfdynamicsMatrix, "usage"], 
        "\!\(TraditionalForm\`\(grab\\ data\\ \(from : \\ rawArrayOfMasses\), \
\\ parameterLocatorDependencies, \[IndentingNewLine]\(\(couplingData[\([_]\)]\
\)[\([_]\)]\)[\([_]\)]\\  = \\ {k, \\ j, \\ \*OverscriptBox[\(m\), \(\
\[RightVector]\)], \\ \*SubscriptBox[\(K\), \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)], \\ \
\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)], \\ \*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)], \\ \*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\\  + \\ \
\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)], \\ \
\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \
\(\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]}\[IndentingNewLine]\n ex : \
\\ {1, 2, {\(-1\), 0}, 0.5`, 1.`, {0.9`, 0.7`}, {0.30000000000000004`, \
\(-0.10000000000000009`\)}, {{0.36`, 0.48`}, {0.48`, 0.6400000000000001`}}}\
\[IndentingNewLine]\[IndentingNewLine]\n to\\ form\\ equations\\ of\\ the\\ \
\(form : \[IndentingNewLine]\*SuperscriptBox[\(\[Omega]\), \(2\)]\\ \
\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)], \
\(k\)](\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\)\\  = \\ \
\*UnderscriptBox[\(\[Sum]\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], \
k\\  \[NotEqual] \\ \*OverscriptBox[\(m\), \(\[RightVector]\)], \
j\)]\*SubscriptBox[\(K\), \(\*OverscriptBox[\(0\), \(\[RightVector]\)], k; \
\*OverscriptBox[\(m\), \(\[RightVector]\)], j\)] \*SubscriptBox[\(Proj\), \
SubscriptBox[OverscriptBox[\(a\), \(^\)], \(\*OverscriptBox[\(n\), \(\
\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\[RightVector]\)], j\)]]\\ \((\
\*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\
\)], \(k\)] \((\*OverscriptBox[\(q\), \(\[RightVector]\)])\)\), SubscriptBox[\
\(m\), \(k\)]] - \\ \*FractionBox[\(\*SubscriptBox[OverscriptBox[\(\[Epsilon]\
\), \(\[RightVector]\)], \(j\)] \((\*OverscriptBox[\(q\), \
\(\[RightVector]\)])\)\), SqrtBox[\(\*SubscriptBox[\(m\), \(k\)] \
\*SubscriptBox[\(m\), \(j\)]\)]] \*SuperscriptBox[\(e\), \(I\\ \
\((\*SubscriptBox[OverscriptBox[\(r\), \(\[RightVector]\)], OverscriptBox[\(m\
\), \(\[RightVector]\)]]\\  . \\ \*OverscriptBox[\(q\), \(\[RightVector]\)]\\ \
)\)\)])\)\[IndentingNewLine]\n Note\\ that\\ qVec\\ here\\ is\\ intended\\ to\
\\ be\\ an\\ undefined\\ global . \\ \\ Is\\ there\\ a\\ way\\ to\\ do\\ that\
\\ \(\(programatically\)\(?\)\)\)\)"], $CellContext`calcDynamics[
         Pattern[$CellContext`mAtQ, 
          Blank[List]]] := Map[{
          Sqrt[
           Part[#, 1]], 
          Part[#, 2]}& , 
         Transpose[
          Eigensystem[$CellContext`mAtQ]]], 
       TagSet[$CellContext`calcDynamics, 
        MessageName[$CellContext`calcDynamics, "usage"], 
        "a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \(k\)]\),\!\
\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for each of the \
system eigenvalues, when evaluated at qLoc."], \
$CellContext`dynamicsGraphicsTable[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`dynAtOmegaIndex, 
          Blank[List]], 
         Pattern[$CellContext`sc, 
          Blank[]], 
         Pattern[$CellContext`qPoint, 
          Blank[List]], 
         Pattern[$CellContext`dynMesh, 
          Blank[Integer]]] := 
       Module[{$CellContext`pointsDataTable, $CellContext`e, \
$CellContext`omega, $CellContext`lines, $CellContext`nu, $CellContext`a, \
$CellContext`b, $CellContext`mScalarArray, $CellContext`numberOfMasses, \
$CellContext`latticeCellOriginIndexes, $CellContext`mPosFirstCell, \
$CellContext`pointsData}, {{$CellContext`a, $CellContext`b}, \
$CellContext`pointsDataTable, $CellContext`lines, $CellContext`mScalarArray, \
$CellContext`numberOfMasses, $CellContext`latticeCellOriginIndexes, \
$CellContext`mPosFirstCell} = 
          ReplaceAll[{
            "latticeBasis", "pointsDataTable", "lineTable", "mScalarArray", 
             "numberOfMasses", "latticeCellOriginIndexes", 
             "mPosFirstCell"}, $CellContext`ld]; {$CellContext`omega, \
$CellContext`e} = $CellContext`dynAtOmegaIndex; $CellContext`e = 
          Partition[$CellContext`e, 2]; $CellContext`nu = (2 Pi) 
           If[$CellContext`omega == 0, 1, 
             1/$CellContext`omega]; $CellContext`pointsData := Table[
            
            Map[$CellContext`a Part[#, 1] + $CellContext`b Part[#, 2] + 
             Part[$CellContext`mPosFirstCell, $CellContext`k] + \
$CellContext`sc 
              Re[Part[$CellContext`e, $CellContext`k] 
                E^(I (Dot[$CellContext`qPoint, $CellContext`a 
                    Part[#, 1] + $CellContext`b 
                    Part[#, 
                    2]] - $CellContext`nu $CellContext`tau))]& , \
$CellContext`latticeCellOriginIndexes], {$CellContext`k, \
$CellContext`numberOfMasses}, {$CellContext`tau, 0, 1, 
             1/$CellContext`dynMesh}]; {$CellContext`pointsData, \
$CellContext`mScalarArray, $CellContext`numberOfMasses, $CellContext`lines, \
$CellContext`dynMesh}], 
       TagSet[$CellContext`dynamicsGraphicsTable, 
        MessageName[$CellContext`dynamicsGraphicsTable, "usage"], 
        "Calculate a time indexed table of positions for each of the \
masses"], $CellContext`frequencyPlotCalc[
         Pattern[$CellContext`ld, 
          Blank[List]], 
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`meshSz, 
          Blank[Integer]]] := 
       Module[{$CellContext`eigTable2D, $CellContext`eigTable1D, \
$CellContext`qMax, $CellContext`omegaPointList2D, \
$CellContext`omegaPointList1D, $CellContext`range, \
$CellContext`numberOfMasses}, {$CellContext`qMax, \
$CellContext`numberOfMasses} = 
          ReplaceAll[{
            "qMaxVec", 
             "numberOfMasses"}, $CellContext`ld]; $CellContext`eigTable2D = 
          Flatten[
            Re[
             Table[{{$CellContext`qx, $CellContext`qy}, 
               Eigenvalues[
                N[
                 $CellContext`m[{$CellContext`qx, $CellContext`qy}]]]}, \
{$CellContext`qx, -(Part[$CellContext`qMax, 1]/2), Part[$CellContext`qMax, 1]/
               2, Part[$CellContext`qMax, 
                 1]/$CellContext`meshSz}, {$CellContext`qy, -(
                Part[$CellContext`qMax, 2]/2), Part[$CellContext`qMax, 2]/2, 
               Part[$CellContext`qMax, 2]/$CellContext`meshSz}]], 
            1]; $CellContext`omegaPointList2D[
            Pattern[$CellContext`nn, 
             Blank[]]] := Map[Flatten[{
              Part[#, 1], 
              Part[
               Sqrt[
                
                Part[#, 
                 2]], $CellContext`nn]}]& , $CellContext`eigTable2D]; \
$CellContext`range = Range[2 $CellContext`numberOfMasses]; ListPlot3D[
           Map[$CellContext`omegaPointList2D[#]& , $CellContext`range], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`glConstPrimaryDisplaySize, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
             "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]], 
       TagSet[$CellContext`frequencyPlotCalc, 
        MessageName[$CellContext`frequencyPlotCalc, "usage"], 
        "frequencyPlotCalc[ parameterLocatorDependencies, matrix, \
freqMeshSize]"], $CellContext`glConstPrimaryDisplaySize = {380, 
        380}, $CellContext`showDynPlot[{
          Pattern[$CellContext`pointsData, 
           Blank[List]], 
          Pattern[$CellContext`mScalarArray, 
           Blank[List]], 
          Pattern[$CellContext`numberOfMasses, 
           Blank[Integer]], 
          Pattern[$CellContext`lines, 
           Blank[List]], 
          Pattern[$CellContext`dynMesh, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]]] := Show[
         Flatten[{
           Table[
            ListPlot[
             Part[
              Part[$CellContext`pointsData, $CellContext`k], $CellContext`n], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize, PlotStyle -> 
             Directive[
               PointSize[
                Sqrt[
                Part[$CellContext`mScalarArray, \
$CellContext`k]/($CellContext`glConstMMax 350)]], 
               $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`numberOfMasses}], {
            Graphics[{$CellContext`lines}]}}, 1]], 
       TagSet[$CellContext`showDynPlot, 
        MessageName[$CellContext`showDynPlot, "usage"], 
        "showDynPlot[ dynamicsGraphicsTable[ld, dynAtOmegaIndex, sc, qPoint, \
dynMesh ] ]"], $CellContext`glConstMMax = 30, $CellContext`massColors := Part[
         Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
         1]& , $CellContext`showFreqPlot[
         Pattern[$CellContext`qpl, 
          Blank[List]], 
         Pattern[$CellContext`freqPlotData, 
          Blank[]]] := 
       Module[{$CellContext`aa, $CellContext`bb}, {$CellContext`aa, \
$CellContext`bb} = $CellContext`qpl; Show[{$CellContext`freqPlotData, 
            Graphics3D[
             Polygon[{{
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 0}, {
                Part[$CellContext`bb, 1], 
                Part[$CellContext`bb, 2], 23}, {
                Part[$CellContext`aa, 1], 
                Part[$CellContext`aa, 2], 23}}]]}]], 
       TagSet[$CellContext`showFreqPlot, 
        MessageName[$CellContext`showFreqPlot, "usage"], 
        "showFreqPlot[ qPlaneLoc, freqPlot ]"], \
$CellContext`nMassesFromLocArray[
         Pattern[$CellContext`uLoc, 
          Blank[]]] := First[
          Dimensions[$CellContext`uLoc]] - 2, $CellContext`glConstDefaultMass = 
       20, $CellContext`glConstMinSquaredDistanceFromOrigin = 
       0.1, $CellContext`resetLatticeVectorsIfAngleTooSmall[
         Pattern[$CellContext`uLoc, 
          Blank[List]], 
         Pattern[$CellContext`minAngle, 
          Blank[]]] := Module[{$CellContext`t}, $CellContext`t = Abs[
            ArcCos[
             Dot[
              Normalize[
               Part[$CellContext`uLoc, 1]], 
              Normalize[
               Part[$CellContext`uLoc, 2]]]]]; $CellContext`t = 
          If[$CellContext`t > Pi/2, Pi - $CellContext`t, $CellContext`t]; 
         If[$CellContext`t < $CellContext`minAngle, \
$CellContext`glConstLocDefault, {
            Part[$CellContext`uLoc, 1], 
            
            Part[$CellContext`uLoc, 
             2]}]], $CellContext`glConstMinAngleBetweenLatticeVectors = 
       Pi/6, $CellContext`adjustedmoSel[
         Pattern[$CellContext`rNumM, 
          Blank[]], 
         Pattern[$CellContext`mOrigInd, 
          Blank[]], 
         Pattern[$CellContext`m1Ind, 
          Blank[]]] := If[$CellContext`rNumM > 2, 
         If[$CellContext`mOrigInd == $CellContext`m1Ind, 
          First[
           DeleteCases[
            
            Range[$CellContext`rNumM], $CellContext`m1Ind]], \
$CellContext`mOrigInd], 
         First[
          Delete[
           Range[2], $CellContext`m1Ind]]], $CellContext`selectVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]]] := 
       ReplaceAll[{$CellContext`m1Ind, $CellContext`m2Ind, 
          
          Part[$CellContext`glConstNeighboringCellIndexes, $CellContext`ni]}, \
$CellContext`kA], $CellContext`selectOriginVFromKarray[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]]] := ReplaceAll[
         Append[
          Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 
          0}], $CellContext`kA], $CellContext`plotSprings[
         Pattern[$CellContext`uLoc$, 
          Blank[List]], 
         Pattern[$CellContext`ld$, 
          Blank[List]], 
         Pattern[$CellContext`cd$, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind$, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd$, 
          Blank[Integer]]] := 
       Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$, \
$CellContext`scaleLoc$}, $CellContext`latticeBasis$ = 
          Take[$CellContext`uLoc$, 2]; $CellContext`aLoc$ = 
          Part[$CellContext`uLoc$, 1]; $CellContext`bLoc$ = 
          Part[$CellContext`uLoc$, 2]; $CellContext`scaleLoc$ = 
          Dot[$CellContext`aLoc$, $CellContext`aLoc$] + 
           Dot[$CellContext`bLoc$, $CellContext`bLoc$]; {$CellContext`mLoc$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`mScalarArray$, $CellContext`numberOfMasses$} = 
          ReplaceAll[{
            "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
             "numberLatticeLinesToDisplay", "lineTable", "mScalarArray", 
             "numberOfMasses"}, $CellContext`ld$]; $CellContext`pointsList$[
            Pattern[$CellContext`n$, 
             Blank[Integer]]] := {
            $CellContext`massColors[$CellContext`n$], Null, 
            PointSize[
             Sqrt[
             Part[$CellContext`mScalarArray$, \
$CellContext`n$]/($CellContext`glConstMMax 500)]], 
            Map[Point[#]& , 
             Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
            Text[
             $CellContext`massLabel[$CellContext`n$], 
             Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`glConstTextDisplayOffsetHack]}; $CellContext`cOrigin$ = Select[
            Part[
             Part[$CellContext`cd$, 1], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`moInd$}& ]; \
$CellContext`cN$ = Select[
            Part[
             Part[$CellContext`cd$, 2], $CellContext`m1Ind$], 
            Take[#, 2] == {$CellContext`m1Ind$, $CellContext`m2Ind$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
             $CellContext`spScaled[
              Take[#, {6, 7}], 
              Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
             AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
               Part[#, 3], 
               FE`glConstSpringColorsByN$$144]]& , $CellContext`cN$]; 
         If[$CellContext`numberOfMasses$ > 1, 
           AppendTo[$CellContext`g$, 
            Map[ListLinePlot[
              $CellContext`spScaled[
               Take[#, {6, 7}], 
               Part[#, 4]/$CellContext`glConstKMax, $CellContext`scaleLoc$], 
              AspectRatio -> Automatic, PlotStyle -> ReplaceAll[
                Part[#, 3], 
                FE`glConstSpringColorsByN$$144]]& , $CellContext`cOrigin$]], 
           Null]; Show[{
            Graphics[
             Flatten[{{$CellContext`lines$, Blue, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`reciprocalBasis$, #]}]& , 
                 Range[2]], Thick, 
                Arrowheads[0.05], Red, 
                Map[Arrow[{{0, 0}, 
                   Part[$CellContext`latticeBasis$, #]}]& , 
                 Range[2]], 
                Text[
                 OverVector[
                 "a"], $CellContext`aLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack], 
                Text[
                 OverVector[
                 "b"], $CellContext`bLoc$/
                  2 + $CellContext`glConstTextDisplayOffsetHack]}, 
               Map[$CellContext`pointsList$[#]& , 
                Range[$CellContext`numberOfMasses$]]}], 
             PlotRange -> $CellContext`glConstDynPlotRange, 
             ImageSize -> $CellContext`glConstPrimaryDisplaySize], \
$CellContext`g$}]], 
       TagSet[$CellContext`plotSprings, 
        MessageName[$CellContext`plotSprings, "usage"], 
        "Example:\n\nModule[{ld, cd, basisAndMassPoints, kArray},\
\[IndentingNewLine]basisAndMassPoints = { {0.6,1}, {1,-0.4}, {0.3,3} } ;\
\[IndentingNewLine]ld = locDependent[ basisAndMassPoints, 1,{10} ]  ;\
\[IndentingNewLine]kArray = constructKArray[ 1 ] ;\[IndentingNewLine]cd = \
calculateCouplings[ ld, kArray ] \
;\[IndentingNewLine]plotSprings[basisAndMassPoints, ld, cd, 1, 1, 1 ] \
\[IndentingNewLine]]\n"], Attributes[$CellContext`uLoc$] = {Temporary}, 
       Attributes[$CellContext`ld$] = {Temporary}, 
       Attributes[$CellContext`cd$] = {Temporary}, 
       Attributes[$CellContext`m1Ind$] = {Temporary}, 
       Attributes[$CellContext`m2Ind$] = {Temporary}, 
       Attributes[$CellContext`moInd$] = {Temporary}, 
       Attributes[$CellContext`latticeBasis$] = {Temporary}, 
       Attributes[$CellContext`reciprocalBasis$] = {Temporary}, 
       Attributes[$CellContext`pointsDataTable$] = {Temporary}, 
       Attributes[$CellContext`numberLatticeLinesToDisplay$] = {Temporary}, 
       Attributes[$CellContext`lines$] = {Temporary}, 
       Attributes[$CellContext`mScalarArray$] = {Temporary}, 
       Attributes[$CellContext`numberOfMasses$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`massLabel := 
       Style[
         $CellContext`indexLabel["m", #], 
         $CellContext`massColors[#]]& , $CellContext`indexLabel = Subscript[
         Style[#, Italic], #2]& , 
       TagSet[$CellContext`indexLabel, 
        MessageName[$CellContext`indexLabel, "usage"], 
        "\!\(\*SubscriptBox[\(k\), \(i\)]\)(or other character) in italic. \
indexLabel['k', 1]"], 
       Attributes[Subscript] = {
        NHoldRest}, $CellContext`glConstTextDisplayOffsetHack = {0.25, 
        0.25}, $CellContext`spScaled[{
          Pattern[$CellContext`s1, 
           Blank[List]], 
          Pattern[$CellContext`s2, 
           Blank[List]]}, 
         Pattern[$CellContext`scaleKValue, 
          Blank[]], 
         Pattern[$CellContext`referenceSepSquared, 
          Blank[]]] := 
       Module[{$CellContext`ds}, $CellContext`ds = $CellContext`s2 - \
$CellContext`s1; $CellContext`springPoints[{$CellContext`s1, $CellContext`s2}, 
           
           Ceiling[(12 $CellContext`scaleKValue) 
            Sqrt[Dot[$CellContext`ds, \
$CellContext`ds]/$CellContext`referenceSepSquared]]]], \
$CellContext`springPoints[
         Pattern[$CellContext`a12, 
          Blank[List]], 
         Optional[
          Pattern[$CellContext`n, 
           Blank[Integer]], 8], 
         Optional[
          Pattern[$CellContext`h, 
           Blank[]], 0.05], 
         Optional[
          Pattern[$CellContext`f, 
           Blank[]], 0.1]] := 
       Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
          Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
          Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
            Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
          Dot[$CellContext`r, {$CellContext`n1, 0}]; {
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + ($CellContext`t (1 - 
                  2 $CellContext`f)) $CellContext`nd, $CellContext`h 
               Sin[((2 Pi) $CellContext`n) $CellContext`t]}], {$CellContext`t,
              0, 1, 0.01}], 
           
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                 2 $CellContext`f) $CellContext`nd + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
           Table[$CellContext`a1 - $CellContext`r1 + 
            Dot[$CellContext`r, {$CellContext`n1 + ($CellContext`t \
$CellContext`f) $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}]}], 
       TagSet[$CellContext`springPoints, 
        MessageName[$CellContext`springPoints, "usage"], 
        "springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]"], $CellContext`glConstKMax = 
       1, FE`glConstSpringColorsByN$$144 = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}, $CellContext`checkAgainstRange[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`default, 
          Blank[]], 
         Pattern[$CellContext`lowerLimit, 
          Blank[]], 
         Pattern[$CellContext`upperLimit, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`typeFunc, 
           Blank[]], NumberQ]] := 
       Module[{$CellContext`result}, $CellContext`result = If[
            $CellContext`typeFunc[$CellContext`v], $CellContext`v, \
$CellContext`default]; $CellContext`result = 
          If[$CellContext`result <= $CellContext`upperLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result = 
          If[$CellContext`result >= $CellContext`lowerLimit, \
$CellContext`result, $CellContext`default]; $CellContext`result], 
       TagSet[$CellContext`checkAgainstRange, 
        MessageName[$CellContext`checkAgainstRange, "usage"], 
        "This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator."], $CellContext`massValue = 0.25, $CellContext`glConstKMin = 
       0.05, $CellContext`returnAlteredKArrayElements[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`m2Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`ni, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       ReplaceAll[$CellContext`kA, {({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, 
             
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v), ({$CellContext`m1Ind, \
$CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> 
           Blank[]) :> ({$CellContext`m1Ind, $CellContext`m2Ind, -
             Part[$CellContext`glConstNeighboringCellIndexes, \
$CellContext`ni]} -> $CellContext`v)}], $CellContext`kLable = Style[
         $CellContext`indexLabel["k", #], FontColor -> 
         Part[$CellContext`glConstSpringColors, #]]& , 
       TagSet[$CellContext`kLable, 
        MessageName[$CellContext`kLable, "usage"], 
        "SubscriptBox[k,i\\](or other character) in italic and colored by \
spring index. kLable[k]"], $CellContext`glConstSpringColors = {
         RGBColor[2/3, 0.33333333333333337`, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         RGBColor[0, 2/3, 2/3], 
         RGBColor[2/3, 2/3, 0]}, $CellContext`returnAlteredKarrayOriginElement[
         Pattern[$CellContext`kA, 
          Blank[List]], 
         Pattern[$CellContext`m1Ind, 
          Blank[Integer]], 
         Pattern[$CellContext`moInd, 
          Blank[Integer]], 
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Module[{$CellContext`m1oSet}, $CellContext`m1oSet = Append[
            Sort[{$CellContext`m1Ind, $CellContext`moInd}], {0, 0}]; 
         ReplaceAll[$CellContext`kA, ($CellContext`m1oSet -> 
            Blank[]) :> ($CellContext`m1oSet -> $CellContext`v)]], \
$CellContext`glConstSpringColorsByN$$ = {{-1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, -1} -> 
         RGBColor[0, 2/3, 0], {-1, -1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
         RGBColor[0, 2/3, 2/3], {0, 0} -> RGBColor[2/3, 2/3, 0], {1, 0} -> 
         RGBColor[2/3, 0.33333333333333337`, 0], {0, 1} -> 
         RGBColor[0, 2/3, 0], {1, 1} -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
         RGBColor[0, 2/3, 2/3]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->23141229]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "The positions of masses within a two dimensional periodic array of cells, \
can be described by summing the lattice vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["r", "\[RightVector]"], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["n", "1"], ",", " ", 
        SubscriptBox["n", "2"]}], ")"}]}]], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "1"], 
      OverscriptBox["a", "\[RightVector]"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"2", " "}]], 
      OverscriptBox["b", "\[RightVector]"]}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", representing the origin of each of the lattice cell, and a relative \
vector to the position of each of the masses.",
 " ",
 "With ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 " representing the equilibrium position of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 ", the position of that mass is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 "+ ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6008874666091995`*^9, 3.600887466629201*^9}, 
   3.6012090394184523`*^9, {3.601382475199787*^9, 3.601382478123955*^9}},
 CellID->143536934],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["a", "\[RightVector]"], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], "=", " ", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], 
      OverscriptBox["n", "\[RightVector]"]], "+", 
     SubscriptBox[
      OverscriptBox["p", "\[RightVector]"], "k"], " ", "-", " ", 
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], 
      OverscriptBox["m", "\[RightVector]"]], "-", 
     SubscriptBox[
      OverscriptBox["p", "\[RightVector]"], "j"]}]}], TraditionalForm]], 
  "InlineMath"],
 ", with direction ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["a", "^"], 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]], 
  "InlineMath"],
 ", represent the equilibrium separation of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["n", "\[RightVector]"]], TraditionalForm]]],
 " from the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["j", "th"], TraditionalForm]], "InlineMath"],
 " mass in cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], 
    OverscriptBox["m", "\[RightVector]"]], TraditionalForm]]],
 ".",
 " ",
 "If the harmonic coupling between these masses has magnitude ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]]],
 ", then the system of equations describing the vector displacement ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["u", "\[RightVector]"], 
    RowBox[{"n", ",", " ", "k", " "}]], TraditionalForm]]],
 " for the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass in unit cell ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["n", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " from the equilibrium position is given by"
}], "DetailNotes",
 CellChangeTimes->{{3.6008874666091995`*^9, 3.600887467295239*^9}, {
  3.6012090498004904`*^9, 3.601209051237634*^9}},
 CellID->185095190],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["m", "k"], " ", 
    SubscriptBox[
     OverscriptBox[
      OverscriptBox["u", "\[RightVector]"], ".."], 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}]]}], "=", " ", 
   RowBox[{"-", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", 
       RowBox[{"k", " ", "\[NotEqual]", " ", 
        OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
     RowBox[{
      SubscriptBox["K", 
       RowBox[{
        OverscriptBox["n", "\[RightVector]"], ",", 
        RowBox[{"k", ";", 
         OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
      SubscriptBox["Proj", 
       SubscriptBox[
        OverscriptBox["a", "^"], 
        RowBox[{
         OverscriptBox["n", "\[RightVector]"], ",", 
         RowBox[{"k", ";", 
          OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["u", "\[RightVector]"], 
         RowBox[{
          OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}]], "-", " ", 
        SubscriptBox[
         OverscriptBox["u", "\[RightVector]"], 
         RowBox[{
          OverscriptBox["m", "\[RightVector]"], ",", " ", "j"}]]}], ")"}], 
      " "}]}]}]}], TraditionalForm]]]], "DetailNotes",
 CellChangeTimes->{{3.6008875035133104`*^9, 3.6008875050703993`*^9}},
 CellID->413013362],

Cell[TextData[{
 "In general, we have one such equation for each ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["n", "\[RightVector]"], ",", " ", "k"}], TraditionalForm]]],
 " pair.",
 " ",
 "A trial solution of the form: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["u", "\[RightVector]"], 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", " ", "k", " "}]], "(", "t", 
     ")"}], "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
       OverscriptBox["q", "\[RightVector]"], ")"}], 
      SqrtBox[
       SubscriptBox["m", "k"]]], " ", 
     SuperscriptBox["e", 
      RowBox[{"I", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "\[RightVector]"], 
           OverscriptBox["n", "\[RightVector]"]], ".", " ", 
          OverscriptBox["q", "\[RightVector]"]}], " ", "-", " ", 
         RowBox[{"\[Omega]", " ", "t"}]}], ")"}]}]]}]}], TraditionalForm]]],
 " can be used to decouple this system, resulting in a single equation for \
each ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]], "InlineMath"],
 " mass of the form"
}], "DetailNotes",
 CellChangeTimes->{3.601209052017712*^9},
 CellID->160232404],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
     OverscriptBox["q", "\[RightVector]"], ")"}]}], " ", "=", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      OverscriptBox["n", "\[RightVector]"], ",", 
      RowBox[{"k", " ", "\[NotEqual]", " ", 
       OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
    RowBox[{
     SubscriptBox["K", 
      RowBox[{
       OverscriptBox["n", "\[RightVector]"], ",", 
       RowBox[{"k", ";", 
        OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
     SubscriptBox["Proj", 
      SubscriptBox[
       OverscriptBox["a", "^"], 
       RowBox[{
        OverscriptBox["n", "\[RightVector]"], ",", 
        RowBox[{"k", ";", 
         OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
         OverscriptBox["q", "\[RightVector]"], ")"}], 
        SubscriptBox["m", "k"]], "-", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox[
           OverscriptBox["\[Epsilon]", "\[RightVector]"], "j"], "(", 
          OverscriptBox["q", "\[RightVector]"], ")"}], 
         SqrtBox[
          RowBox[{
           SubscriptBox["m", "k"], 
           SubscriptBox["m", "j"]}]]], 
        SuperscriptBox["e", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox[
              OverscriptBox["r", "\[RightVector]"], 
              OverscriptBox["m", "\[RightVector]"]], " ", "-", " ", 
             SubscriptBox[
              OverscriptBox["r", "\[RightVector]"], 
              OverscriptBox["n", "\[RightVector]"]]}], ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}]}]]}]}], ")"}]}]}]}], 
  TraditionalForm]]]], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.5980567961741514`*^9}, {
  3.5991430414266324`*^9, 3.5991431578722925`*^9}, {3.5991432045039597`*^9, 
  3.5991434204693127`*^9}, {3.599995184437109*^9, 3.599995299044664*^9}, {
  3.5999955623567247`*^9, 3.59999570266675*^9}, {3.599995845419915*^9, 
  3.599996134802467*^9}, {3.5999964591490183`*^9, 3.599996636408157*^9}, {
  3.6000782740315385`*^9, 3.6000782764963427`*^9}, {3.6000800168821993`*^9, 
  3.600080195362113*^9}, {3.6000802877454753`*^9, 3.6000802964814906`*^9}, {
  3.600819379450795*^9, 3.6008194857548757`*^9}, {3.6008195456733027`*^9, 
  3.6008197257836046`*^9}, {3.600819776466503*^9, 3.6008198064982214`*^9}, {
  3.600819885519741*^9, 3.6008199013896484`*^9}, {3.6008233445915885`*^9, 
  3.6008233557062244`*^9}, {3.600823461634283*^9, 3.6008234639174137`*^9}},
 CellID->323301769],

Cell[TextData[{
 "This describes all the steady state lattice vibrations, the normal modes, \
that can be modelled by this trial solution. Here ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " is a vector in reciprocal space, effectively parameterizing the angular \
velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", " ", "=", " ", 
    RowBox[{"\[Omega]", "(", 
     OverscriptBox["q", "\[RightVector]"], ")"}]}], TraditionalForm]], 
  "InlineMath"],
 ". The vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    FormBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
           OverscriptBox["q", "\[RightVector]"], ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     TraditionalForm], "k"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ", is an eigenvector of the equations of motion of the system for this \
assumed solution, where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "2"], TraditionalForm]], "InlineMath"],
 " are the eigenvalues of this system. For an N-atom basis, there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", "N"}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " such ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "2"], TraditionalForm]], "InlineMath"],
 " eigenvalues per ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " point, each resulting in a different characteristic motion."
}], "DetailNotes",
 CellChangeTimes->{{3.6008875562233257`*^9, 3.600887556236326*^9}, {
  3.6012090526877794`*^9, 3.6012090538738976`*^9}, {3.6013825361482735`*^9, 
  3.601382742763091*^9}},
 CellID->72937650],

Cell[TextData[{
 "The rank of the resulting eigenvalue problem depends on the number of \
masses per unit cell, but the complexity of the matrix expression depends on \
the number of neighboring interactions that are considered.",
 " ",
 "For example, given lattice vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], ",", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ", diagonals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], "=", 
     RowBox[{
      OverscriptBox["a", "\[RightVector]"], " ", "+", " ", 
      OverscriptBox["b", "\[RightVector]"]}]}], ",", " ", 
    RowBox[{
     OverscriptBox["s", "\[RightVector]"], "=", 
     RowBox[{
      OverscriptBox["a", "\[RightVector]"], " ", "-", " ", 
      OverscriptBox["b", "\[RightVector]"], " "}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", and a one atom basis, where each unit cell contains a single mass coupled \
with harmonic oscillator forces between only nearest neighbors, the normal \
mode solutions follow from the solution of the eigenvalue problem"
}], "DetailNotes",
 CellChangeTimes->{{3.6008875562233257`*^9, 3.600887556623348*^9}, {
   3.6008880360077677`*^9, 3.600888037934878*^9}, 3.601209054354946*^9},
 CellID->69846009],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SuperscriptBox["\[Omega]", "2"], "0"},
         {"0", 
          SuperscriptBox["\[Omega]", "2"]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], " ", 
     OverscriptBox["\[Epsilon]", "\[RightVector]"]}], " ", "=", " ", 
    RowBox[{
     FractionBox["4", "m"], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"1", " "}]], 
        OverscriptBox["a", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["a", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["a", "\[RightVector]"], " ", ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"2", " "}]], 
        OverscriptBox["b", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["b", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["b", "\[RightVector]"], " ", ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", "3"], 
        OverscriptBox["r", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["r", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             OverscriptBox["b", "\[RightVector]"], " ", "+", " ", 
             OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}], 
       " ", "+", " ", 
       RowBox[{
        SubscriptBox["k", "4"], 
        OverscriptBox["s", "^"], " ", 
        SuperscriptBox[
         OverscriptBox["s", "^"], "T"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             OverscriptBox["b", "\[RightVector]"], " ", "-", " ", 
             OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], ".", " ", 
           OverscriptBox["q", "\[RightVector]"]}], "/", "2"}], " ", ")"}]}]}],
       ")"}], 
     OverscriptBox["\[Epsilon]", "\[RightVector]"]}]}], TraditionalForm]], 
  "InlineMath"],
 "   ",
 " "
}], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.598056894559779*^9}, {
   3.598056950150959*^9, 3.5980569832608523`*^9}, {3.598057031767627*^9, 
   3.598057031774627*^9}, {3.598057330464711*^9, 3.598057330604719*^9}, {
   3.5980584907700768`*^9, 3.5980584911520987`*^9}, {3.5991428674046793`*^9, 
   3.5991429352825613`*^9}, 3.5991434894172564`*^9, {3.599143745937928*^9, 
   3.599143747597023*^9}, {3.599144339776894*^9, 3.599144393338958*^9}, {
   3.5999961526324863`*^9, 3.599996166069255*^9}, {3.6000802839234686`*^9, 
   3.6000802840794687`*^9}, {3.600823510848098*^9, 3.6008235167144337`*^9}, {
   3.6012090548449945`*^9, 3.6012090598194923`*^9}, {3.601209092614772*^9, 
   3.6012090941649265`*^9}},
 CellID->508431597],

Cell[TextData[{
 "Controls are provided to display the dynamics associated with each of the \
characteristic angular frequencies ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]]],
 ", for given reciprocal vector values ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 "."
}], "DetailNotes",
 CellID->122369289],

Cell[TextData[{
 "Three tabs are provided in this Demonstration. The primary tab displays the \
dynamics of the solution for particular pair of (",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "(", 
    OverscriptBox["q", "\[RightVector]"], ")"}], TraditionalForm]]],
 ") values. In that tab, selecting run for the time control will animate the \
lattice vibrations. A scaling control is provided to alter the initial \
magnitude of the eigenvectors, tantamount to picking the initial time \
boundary value constraints. Note that it is possible to select physically \
unrealistic scaling factors that allow for collisions that are not modelled \
by this system."
}], "DetailNotes",
 CellChangeTimes->{
  3.601208839708481*^9, {3.6012090601785283`*^9, 3.6012090619407043`*^9}, {
   3.601382813834156*^9, 3.601382893437709*^9}},
 CellID->476930990],

Cell[TextData[{
 "A second tab provides the dispersion relation, the dependence of angular \
velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "(", 
    OverscriptBox["q", "\[RightVector]"], ")"}], TraditionalForm]]],
 " on all ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]], "InlineMath"],
 " points."
}], "DetailNotes",
 CellChangeTimes->{
  3.601209062576768*^9, {3.6013829455216885`*^9, 3.6013829491098933`*^9}},
 CellID->450664638],

Cell[TextData[{
 "Finally, a parameters tab provides controls for the spring constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["n", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]], 
  "InlineMath"],
 ", the primitive unit cell lattice vectors ",
 Cell[BoxData[
  RowBox[{
   OverscriptBox["a", "\[RightVector]"], ",", 
   OverscriptBox["b", "\[RightVector]"]}]], "InlineMath"],
 ", and the positions of the masses ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["p", "\[RightVector]"], "k"], TraditionalForm]]],
 " within each unit cell of the lattice. Additional mass position locators, \
up to five total, may be added or deleted by Alt-clicking on the lattice cell \
in the desired location. For mass locator removal, it is neccessary to adjust \
one of the other locators so that the remove takes effect. Note that it is \
possible to select equilibrium mass positions that are too proximate, leading \
to physically unrealistic dynamics, such as masses passing through each other."
}], "DetailNotes",
 CellChangeTimes->{{3.600966198344832*^9, 3.600966236435011*^9}, {
  3.6012090632078314`*^9, 3.6012090644089513`*^9}, {3.601382988189129*^9, 
  3.6013829971846433`*^9}},
 CellID->557416845],

Cell["\<\
Note that the total number of interactions, even when those interactions are \
restricted to just the neighboring lattice cells, increases fast as \
additional masses per cell are added. For example, with three masses per unit \
cell, considering only the neighboring and origin cells, there are 29 \
interactions possible for each mass. To simplify the physical constants \
dialog, which would get unwieldy if methods to choose from all possible \
couplings, distinct \"spring constant\" selection is only available for a \
subset of the possible interactions. This imposes the following respective \
constraints along the \"horizontal\", \"vertical\", \"NE diagonal\", and \"NW \
diagonal\" directions connecting the masses across the cells\
\>", "DetailNotes",
 CellChangeTimes->{{3.6008880438402157`*^9, 3.600888044919277*^9}, {
  3.6012090650310135`*^9, 3.6012090662031307`*^9}},
 CellID->204245605],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], ")"}]}], ",", "j"}]]}], 
   TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], ")"}]}], ",", "j"}]], "=", " ", 
    SubscriptBox["K", 
     RowBox[{
      OverscriptBox["0", "\[RightVector]"], ",", 
      RowBox[{"k", ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], ")"}]}], ",", "j"}]]}], 
   TraditionalForm]]],
 " ."
}], "DetailNotes",
 CellChangeTimes->{{3.598056792794958*^9, 3.598056894559779*^9}, {
   3.598056950150959*^9, 3.5980569832608523`*^9}, {3.598057031767627*^9, 
   3.598057031774627*^9}, {3.598057330464711*^9, 3.598057446094325*^9}, {
   3.59805756332403*^9, 3.5980575811080475`*^9}, {3.5980576945015335`*^9, 
   3.5980577077462907`*^9}, {3.5980585058849416`*^9, 3.598058539899887*^9}, {
   3.5982726803130836`*^9, 3.598272680323084*^9}, {3.598396857147249*^9, 
   3.598396862212539*^9}, 3.5983970077038608`*^9, {3.5986527341628847`*^9, 
   3.598652736497018*^9}, {3.599142949402369*^9, 3.599142973472746*^9}, {
   3.599144400390361*^9, 3.5991444194934535`*^9}, {3.599144544232588*^9, 
   3.599144772358636*^9}, {3.5991448024383564`*^9, 3.599144812883954*^9}, {
   3.599996318317963*^9, 3.599996379259449*^9}, {3.600076492258809*^9, 
   3.600076523646064*^9}, {3.6000766422374725`*^9, 3.600076689224755*^9}, {
   3.6000767765225077`*^9, 3.6000772270044994`*^9}, {3.6000776433692303`*^9, 
   3.6000781070644455`*^9}, {3.60007816099374*^9, 3.600078188605788*^9}, {
   3.60007853087039*^9, 3.6000790980561857`*^9}, {3.60007913498145*^9, 
   3.6000792378012314`*^9}, {3.6000792689076858`*^9, 3.600079283852512*^9}, {
   3.6000793585454435`*^9, 3.6000793899326982`*^9}, {3.6000794650156302`*^9, 
   3.600079471318041*^9}, {3.600887622755131*^9, 3.6008876400591207`*^9}},
 CellID->325571302],

Cell[TextData[{
 "These are labeled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]], "InlineMath"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]], "InlineMath"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "3"], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "4"], TraditionalForm]], "InlineMath"],
 " in the parameters tab respectively. For example, the first identity above \
is the imposition of an equality constraint on the coupling constants in the \
\"left\" and \"right\" directions separating masses in neighboring \
\"horizontal\" cells (when the lattice is square). Those are the interactions \
directed primarily along the lattice vector directions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    OverscriptBox["a", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 " (primarily since these directions are also adjusted for the positions of \
the masses within the respective cells if different).",
 " ",
 "Similarly, the same coupling constants are used for each of the pairs of \
directions in the that are directed primarily along the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ", \[PlusMinus](",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], " ", "+", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 "), \[PlusMinus](",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["a", "\[RightVector]"], " ", "-", " ", 
    OverscriptBox["b", "\[RightVector]"]}], TraditionalForm]], "InlineMath"],
 ") directions separating the lattice cells."
}], "DetailNotes",
 CellChangeTimes->{{3.6008880598061285`*^9, 3.600888064512398*^9}, {
  3.6012090668131914`*^9, 3.6012090675292635`*^9}},
 CellID->64527093],

Cell[TextData[{
 "When there is when there is more than mass per unit cell, distinct coupling \
constants for the intra-cell interactions between the masses within the \
origin unit cell may be selected (i.e. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     OverscriptBox["0", "\[RightVector]"], ",", 
     RowBox[{"k", ";", 
      OverscriptBox["0", "\[RightVector]"]}], ",", "j"}]], TraditionalForm]]],
 ").",
 " ",
 "These are labeled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "5"], TraditionalForm]], "InlineMath"],
 " in the parameters tab."
}], "DetailNotes",
 CellChangeTimes->{{3.600887684261649*^9, 3.6008876842696495`*^9}, 
   3.6008880700537148`*^9, 3.6012090681853285`*^9},
 CellID->209290908],

Cell["\<\
General theory describing oscillations around lattice equilibrium points can \
be found in:\
\>", "DetailNotes",
 CellID->30163790],

Cell["\<\
Neil W Ashcroft and N David Mermin. Solid State Physics. Holt, Rinehart and \
Winston, New York, 1976. Chapters 21, 22.\
\>", "DetailNotes",
 CellChangeTimes->{3.601209069027413*^9},
 CellID->213153736]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.600887285796858*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.600887286596904*^9},
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6008872914131794`*^9},
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["one atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208909916481*^9}},
 CellID->476564237],

Cell["two atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208912380481*^9}},
 CellID->245358486],

Cell["n atom basis", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.6012089151324806`*^9}},
 CellID->584424833],

Cell["lattice vibration", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.6012089173234806`*^9}},
 CellID->103468090],

Cell["phonon", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208919819481*^9}},
 CellID->21953905],

Cell["reciprocal lattice vector", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208922747481*^9}},
 CellID->733906711],

Cell["angular frequency", "SearchTerms",
 CellChangeTimes->{{3.600887404444644*^9, 3.600887413260148*^9}, {
  3.6012089095264807`*^9, 3.601208922739481*^9}},
 CellID->200946478]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Analysis of Lattice Vibrations in Two Dimensions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
AnalysisOfLatticeVibrationsInTwoDimensions/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
AnalysisOfLatticeVibrationsInTwoDimensions/"]], "RelatedLinks",
 CellChangeTimes->{{3.598398001761718*^9, 3.5983980017637177`*^9}, {
  3.5983985448847823`*^9, 3.598398544890783*^9}},
 CellID->24498121],

Cell[TextData[ButtonBox["Motion of Atoms in Crystal",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/MotionOfAtomsInCrystal/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/MotionOfAtomsInCrystal/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981123320417`*^9}, {3.5983985249356413`*^9, 
   3.5983985249386415`*^9}},
 CellID->28998832],

Cell[TextData[ButtonBox["Normal Modes in a Periodic Square Lattice",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/NormalModesInAPeriodicSquareLattice/\
"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/NormalModesInAPeriodicSquareLattice/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981127470655`*^9}, {3.5983984299812107`*^9, 
   3.598398430938265*^9}, {3.598398474839776*^9, 3.5983984748437767`*^9}},
 CellID->63968418],

Cell[TextData[ButtonBox["Simple Harmonic Motion for a Spring",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/SimpleHarmonicMotionForASpring/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/SimpleHarmonicMotionForASpring/"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.598398001761718*^9, {3.598398067522479*^9, 3.5983980715767107`*^9}, {
   3.5983981123290415`*^9, 3.5983981127470655`*^9}, {3.5983984299812107`*^9, 
   3.5983984299832106`*^9}, {3.5983985017343144`*^9, 3.598398501741315*^9}},
 CellID->611518950]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Peeter Joot",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Peeter+Joot"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Peeter+Joot"]
}], "Author",
 CellChangeTimes->{
  3.600887159561638*^9, {3.601208952954481*^9, 3.601208952959481*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[3743132, 65457, 312, 8, 30, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[3743447, 65467, 719, 17, 30, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[3744169, 65486, 381, 12, 30, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[3744553, 65500, 680, 16, 30, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[3745236, 65518, 844, 21, 30, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[3746083, 65541, 369, 9, 30, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[3746455, 65552, 1464, 31, 30, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[3747922, 65585, 908, 21, 30, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 3753170, 65737},
 {"RotateAndZoomIn3D", 3753282, 65740},
 {"DragLocators", 3753395, 65743},
 {"CreateAndDeleteLocators", 3753514, 65746},
 {"SliderZoom", 3753631, 65749},
 {"GamepadControls", 3753740, 65752},
 {"AutomaticAnimation", 3753856, 65755},
 {"BookmarkAnimation", 3753976, 65758}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 101, 1, 98, "DemoTitle"],
Cell[CellGroupData[{
Cell[705, 27, 60, 1, 365, "InitializationSection",
 InitializationCell->True],
Cell[768, 30, 116995, 2693, 14082, "Input",
 InitializationCell->True,
 CellID->454600298]
}, Open  ]],
Cell[CellGroupData[{
Cell[117800, 2728, 29, 0, 311, "ManipulateSection"],
Cell[CellGroupData[{
Cell[117854, 2732, 87686, 1839, 9713, "Input",
 CellID->106836794],
Cell[205543, 4573, 660649, 11356, 606, "Output",
 CellID->420324208]
}, Open  ]],
Cell[866207, 15932, 106, 2, 32, "Input",
 CellID->73064412]
}, Open  ]],
Cell[CellGroupData[{
Cell[866350, 15939, 36, 0, 228, "ManipulateCaptionSection"],
Cell[866389, 15941, 1155, 18, 106, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[867581, 15964, 28, 0, 229, "ThumbnailSection"],
Cell[867612, 15966, 690201, 11793, 606, "Output",
 CellID->465591972]
}, Open  ]],
Cell[CellGroupData[{
Cell[1557850, 27764, 28, 0, 189, "SnapshotsSection"],
Cell[1557881, 27766, 779742, 13269, 598, "Output",
 CellID->312349039],
Cell[2337626, 41037, 591533, 10188, 598, "Output",
 CellID->276958259],
Cell[2929162, 51227, 785824, 13427, 606, "Output",
 CellID->23141229]
}, Open  ]],
Cell[CellGroupData[{
Cell[3715023, 64659, 26, 0, 452, "DetailsSection"],
Cell[3715052, 64661, 1774, 56, 68, "DetailNotes",
 CellID->143536934],
Cell[3716829, 64719, 2521, 81, 66, "DetailNotes",
 CellID->185095190],
Cell[3719353, 64802, 1466, 42, 50, "DetailNotes",
 CellID->413013362],
Cell[3720822, 64846, 1371, 44, 74, "DetailNotes",
 CellID->160232404],
Cell[3722196, 64892, 2874, 70, 55, "DetailNotes",
 CellID->323301769],
Cell[3725073, 64964, 2355, 64, 76, "DetailNotes",
 CellID->72937650],
Cell[3727431, 65030, 1327, 32, 72, "DetailNotes",
 CellID->69846009],
Cell[3728761, 65064, 3782, 100, 59, "DetailNotes",
 CellID->508431597],
Cell[3732546, 65166, 375, 11, 29, "DetailNotes",
 CellID->122369289],
Cell[3732924, 65179, 958, 21, 68, "DetailNotes",
 CellID->476930990],
Cell[3733885, 65202, 488, 15, 29, "DetailNotes",
 CellID->450664638],
Cell[3734376, 65219, 1332, 30, 96, "DetailNotes",
 CellID->557416845],
Cell[3735711, 65251, 914, 14, 86, "DetailNotes",
 CellID->204245605],
Cell[3736628, 65267, 3421, 94, 38, "DetailNotes",
 CellID->325571302],
Cell[3740052, 65363, 1908, 51, 93, "DetailNotes",
 CellID->64527093],
Cell[3741963, 65416, 733, 21, 58, "DetailNotes",
 CellID->209290908],
Cell[3742699, 65439, 141, 4, 28, "DetailNotes",
 CellID->30163790],
Cell[3742843, 65445, 212, 5, 28, "DetailNotes",
 CellID->213153736]
}, Open  ]],
Cell[CellGroupData[{
Cell[3743092, 65455, 37, 0, 168, "ControlSuggestionsSection"],
Cell[3743132, 65457, 312, 8, 30, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[3743447, 65467, 719, 17, 30, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[3744169, 65486, 381, 12, 30, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[3744553, 65500, 680, 16, 30, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[3745236, 65518, 844, 21, 30, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[3746083, 65541, 369, 9, 30, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[3746455, 65552, 1464, 31, 30, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[3747922, 65585, 908, 21, 30, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3748867, 65611, 30, 0, 208, "SearchTermsSection"],
Cell[3748900, 65613, 174, 3, 28, "SearchTerms",
 CellID->476564237],
Cell[3749077, 65618, 174, 3, 28, "SearchTerms",
 CellID->245358486],
Cell[3749254, 65623, 174, 3, 28, "SearchTerms",
 CellID->584424833],
Cell[3749431, 65628, 179, 3, 28, "SearchTerms",
 CellID->103468090],
Cell[3749613, 65633, 165, 3, 28, "SearchTerms",
 CellID->21953905],
Cell[3749781, 65638, 185, 3, 28, "SearchTerms",
 CellID->733906711],
Cell[3749969, 65643, 177, 3, 28, "SearchTerms",
 CellID->200946478]
}, Open  ]],
Cell[CellGroupData[{
Cell[3750183, 65651, 31, 0, 188, "RelatedLinksSection"],
Cell[3750217, 65653, 468, 10, 28, "RelatedLinks",
 CellID->24498121],
Cell[3750688, 65665, 486, 11, 28, "RelatedLinks",
 CellID->28998832],
Cell[3751177, 65678, 575, 12, 28, "RelatedLinks",
 CellID->63968418],
Cell[3751755, 65692, 564, 12, 28, "RelatedLinks",
 CellID->611518950]
}, Open  ]],
Cell[CellGroupData[{
Cell[3752356, 65709, 25, 0, 188, "AuthorSection"],
Cell[3752384, 65711, 384, 11, 28, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
