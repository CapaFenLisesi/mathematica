(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    524646,       9771]
NotebookOptionsPosition[    524270,       9754]
NotebookOutlinePosition[    524613,       9769]
CellTagsIndexPosition[    524570,       9766]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"TODO", ":", "\[IndentingNewLine]", 
    RowBox[{GridBox[{
       {
        RowBox[{"switch", " ", "back", " ", "to", " ", "demo", " ", 
         RowBox[{"Format", "."}]}]},
       {
        RowBox[{
        "change", " ", "the", " ", "range", " ", "for", " ", "qLoc", " ", 
         "to", " ", "first", " ", 
         RowBox[{"BZ", ".", "  ", "Adjust"}], " ", "the", " ", "defaults", 
         " ", 
         RowBox[{"accordingly", "."}]}]},
       {
        RowBox[{
        "adjust", " ", "the", " ", "defaults", " ", "to", " ", "scale", " ", 
         "back", " ", "the", " ", "spring", " ", "constants", " ", 
         RowBox[{"(", 
          RowBox[{"avoid", " ", "collisions"}], ")"}]}]},
       {
        RowBox[{"add", " ", "note", " ", "to", " ", 
         RowBox[{"details", ":", " ", 
          RowBox[{
          "no", " ", "constraints", " ", "to", " ", "avoid", " ", "physical", 
           " ", "collisions", " ", "if", " ", "spring", " ", "constants", " ",
            "made", " ", "too", " ", 
           RowBox[{"large", "."}]}]}]}]},
       {
        RowBox[{"Recreate", " ", "snapshots", " ", "and", " ", "thumbnails"}]},
       {
        RowBox[{
         RowBox[{"Final", " ", "review"}], ",", " ", 
         RowBox[{"comparing", " ", "to", " ", "last", " ", "submitted", " ", 
          RowBox[{"demo", ".", "  ", "Did"}], " ", "I", " ", "loose", " ", 
          "anything", " ", "in", " ", "this", " ", 
          RowBox[{"rework", "?"}]}]}]}
      },
      GridBoxDividers->{
       "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{True}}, "RowsIndexed" -> {}}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "Nice", " ", "to", " ", "haves"}], ":", 
    "\[IndentingNewLine]", GridBox[{
      {
       RowBox[{
        RowBox[{
        "implement", " ", "a", " ", "min", " ", "separation", " ", "for", " ",
          "the", " ", "equilibrium", " ", "mass", " ", "positions", " ", 
         "too", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "as", " ", "done", " ", "for", " ", "the", " ", "lattice", " ", 
            "vectors"}], ")"}], ".", " ", "\[IndentingNewLine]", 
          "Trickier"}]}], ",", " ", 
        RowBox[{
        "since", " ", "that", " ", "should", " ", "be", " ", "based", " ", 
         "on", " ", "the", " ", "separations", " ", "in", " ", "the", " ", 
         "origin", " ", "cell"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{
        "and", " ", "not", " ", "the", " ", "obsolute", " ", "separations", 
         " ", "of", " ", "the", " ", 
         RowBox[{"locators", "."}]}]}]},
      {
       RowBox[{
       "would", " ", "be", " ", "cool", " ", "to", " ", "make", " ", "qLoc", 
        " ", "a", " ", "pair", " ", "of", " ", "Locators", " ", 
        RowBox[{"that", ":", "\[IndentingNewLine]", " ", 
         RowBox[{
         "trace", " ", "out", " ", "constrained", " ", "positions", " ", 
          "along", " ", "the", " ", "2", " ", "Pi", " ", "scaled", " ", 
          "reciprocal", " ", "lattice", " ", 
          RowBox[{"vectors", ".", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
            "returning", " ", "the", " ", "distance", " ", "from", " ", "the",
              " ", "origin", " ", "of", " ", "each", " ", "of", " ", "those", 
             " ", "locators"}], ")"}]}]}]}]}]},
      {
       RowBox[{"a", " ", "message", " ", "box", " ", "on", " ", "user", " ", 
        RowBox[{"error", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", " ", "when"}], " ", "an", " ", "angle", " ", "or", " ",
           "distance", " ", "from", " ", "origin", " ", "change", " ", "has", 
          " ", "driven", " ", "a", " ", "reset", " ", "of", " ", "the", " ", 
          "lattice", " ", 
          RowBox[{"vectors", ".", "\[IndentingNewLine]", 
           RowBox[{"-", " ", "when"}]}], " ", "too", " ", "many", " ", "of", 
          " ", "the", " ", "locators", " ", "have", " ", "been", " ", 
          "deleted", " ", "and", " ", "a", " ", "forced", " ", "reset", " ", 
          "to", " ", "the", " ", "defaults", " ", 
          RowBox[{"occurs", "."}]}]}]}]},
      {
       RowBox[{
        RowBox[{"Have", " ", "removed", " ", "the", " ", "interactions", " ", 
         RowBox[{"slider", ".", "  ", "\[IndentingNewLine]", "re"}]}], "-", 
        RowBox[{
        "introduce", " ", "as", " ", "approximation", " ", "if", " ", "the", 
         " ", "calculations", " ", "get", " ", "too", " ", "slow", " ", 
         "with", " ", "all", " ", "the", " ", "interactions", " ", 
         RowBox[{"included", ".", "\[IndentingNewLine]", "side"}], " ", 
         "effect", " ", "of", " ", "such", " ", "an", " ", "approximation", 
         " ", "is", " ", "likely", " ", "a", " ", "non"}], "-", 
        RowBox[{"Hermitian", " ", "matrix", " ", 
         RowBox[{"(", 
          RowBox[{"complex", " ", 
           RowBox[{"eigenvalues", "?"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"With", " ", "variable", " ", "locators", " ", "rework"}], 
         ",", " ", "and"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "switch", " ", "to", " ", "Manipulate", " ", "local", " ", 
          "variables", " ", "in", " ", "places", " ", "that", " ", "things", 
          " ", "were", " ", "passed", " ", "around"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
         "some", " ", "of", " ", "the", " ", "usage", " ", "messages", " ", 
          "are", " ", "now", " ", "out", " ", "of", " ", 
          RowBox[{"date", "."}]}]}]}]},
      {
       RowBox[{
       "Can", " ", "the", " ", "frequency", " ", "qPlaneLoc", " ", 
        "LocatorPane", " ", "look", " ", "more", " ", "like", " ", "Slider2D",
         " ", "in", " ", "the", " ", "dynamics", " ", "tab", " ", "for", " ", 
        RowBox[{"consistency", "?"}]}]}
     },
     GridBoxDividers->{
      "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{True}}, "RowsIndexed" -> {}}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tick", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"Grid", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<ld = \>\"", ",", "ld"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<kArray = \>\"", ",", "kArray"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<couplingData = \>\"", ",", "couplingData"}], "}"}]}],
           "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"tabNumber", " ", "\[Equal]", " ", "dynTab"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", " ", 
            RowBox[{"bRefreshMatrix", ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"matrix", " ", "=", " ", "dynamicsMatrix"}], " ", ";", 
               RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
               RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", ";", 
               " ", 
               RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
              ")"}], ","}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", " ", 
            RowBox[{"bRefreshDynamics", ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dynamics", " ", "=", " ", "calcDynamics"}], " ", ";", 
               RowBox[{"bRefreshDynamics", " ", "=", " ", "False"}], " ", ";", 
               RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}]}], ")"}], 
             ","}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", " ", 
            RowBox[{"bRefreshDynPlot", ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dynPlot", " ", "=", " ", "showDynamics"}], " ", ";", 
               RowBox[{"bRefreshDynPlot", " ", "=", " ", "False"}]}], ")"}], 
             ","}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"showDynamics", "[", "tau", "]"}]}], "\[IndentingNewLine]",
           ")"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"tabNumber", " ", "\[Equal]", " ", "freqTab"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{"bRefreshMatrix", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"matrix", " ", "=", " ", "dynamicsMatrix"}], " ", 
                 ";", 
                 RowBox[{"bRefreshMatrix", " ", "=", " ", "False"}], " ", ";", 
                 RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", 
                 ";", " ", 
                 RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}]}], " ", 
                ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"If", "[", " ", 
              RowBox[{"bRefreshFreqPlot", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"freqPlot", " ", "=", " ", "frequencyPlotCalc"}], 
                 " ", ";", 
                 RowBox[{"bRefreshFreqPlot", " ", "=", " ", "False"}]}], " ", 
                ")"}], ","}], "]"}], ";", " ", "\[IndentingNewLine]", 
             "showFreqPlot"}], "\[IndentingNewLine]", ")"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           "couplingLocator"}], "\[IndentingNewLine]", " ", "]"}]}], 
        "]"}]}]}], " ", 
     RowBox[{"(*", 
      RowBox[{"If", ",", "If"}], "*)"}], " ", "\[IndentingNewLine]", ",", " ", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"lastNumMasses", " ", "\[Equal]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TabView", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<dynamics\>\"", " ", "\[Rule]", "  ", 
             RowBox[{"Column", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "dynTab"}], " ", ";", 
               "dynamicsControls"}], " ", "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
            "\"\<\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))\>\
\"", " ", "\[Rule]", "  ", 
             RowBox[{"Row", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "freqTab"}], " ", ";", 
               "freqControls"}], " ", "]"}]}], "\[IndentingNewLine]", ",", 
            " ", 
            RowBox[{"\"\<parameters\>\"", "\[Rule]", 
             RowBox[{"Grid", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "parametersTab"}], " ", 
               ";", 
               RowBox[{"{", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                "massSetter", ",", "m2Setter", ",", "km1", ",", "km2", ",", 
                 "km3", ",", "km4"}], " ", "}"}]}], " ", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", " ", "@", "tabNumber"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"250", ",", "350"}], "}"}]}]}], " ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TabView", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<dynamics\>\"", " ", "\[Rule]", "  ", 
             RowBox[{"Column", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "dynTab"}], " ", ";", 
               "dynamicsControls"}], " ", "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
            "\"\<\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))\>\
\"", " ", "\[Rule]", "  ", 
             RowBox[{"Row", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "freqTab"}], " ", ";", 
               "freqControls"}], " ", "]"}]}], "\[IndentingNewLine]", ",", 
            " ", 
            RowBox[{"\"\<parameters\>\"", "\[Rule]", 
             RowBox[{"Grid", "[", " ", 
              RowBox[{
               RowBox[{"tabNumber", " ", "=", " ", "parametersTab"}], " ", 
               ";", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<mp: \>\"", ",", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<mPosFirstCell\>\"", " ", "/.", " ", "ld"}], 
                    ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<tn: \>\"", ",", " ", "tabNumber"}], "}"}], 
                   ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<u = \>\"", ",", " ", "u"}], "}"}], ","}], 
                  "*)"}], "\[IndentingNewLine]", " ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<cd:\>\"", ",", " ", 
                    RowBox[{
                    RowBox[{"couplingData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}]}], "}"}], ","}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<cd:\>\"", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"couplingData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
                   ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", " ", 
                    RowBox[{"\"\<m1Sel, m2Sel, moSel = \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"m1Sel", ",", " ", "m2Sel", ",", " ", "moSel"}], 
                    "}"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", " ", 
                    RowBox[{
                    "\"\<mScalarArray = \>\"", ",", " ", "mScalarArray"}], 
                    " ", "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<range \[Omega]: \>\"", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"2", "lastNumMasses"}], "]"}]}], "}"}], ","}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<kArray = \>\"", ",", " ", "kArray"}], "}"}], 
                   ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<couplingData = \>\"", ",", " ", "couplingData"}], 
                    "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<k1, k2, k3, k4, k5 = \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "k1", ",", " ", "k2", ",", " ", "k3", ",", " ", "k4", ",",
                     " ", "k5"}], "}"}]}], "}"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<re: \>\"", ",", " ", 
                    RowBox[{"2", " ", "Pi", 
                    RowBox[{"(", 
                    RowBox[{"\"\<reciprocalNorms\>\"", " ", "/.", " ", "ld"}],
                     ")"}]}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<sc: \>\"", ",", " ", 
                    RowBox[{"DeleteDuplicates", "@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", " ", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"nArray", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], " ", "\[Rule]", " ", 
                    RowBox[{"foo", "[", "n", "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"s", ",", " ", 
                    RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", " ", "5"}], "}"}]}], " ", "]"}], ",", 
                    "1"}], "]"}]}]}], " ", "}"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "massSetter", 
                 ",", "m2Setter", ",", "km1", ",", "km2", ",", "km3", ",", 
                 "km4", ",", " ", "km5"}], " ", "}"}]}], " ", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", " ", "@", "tabNumber"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"250", ",", "350"}], "}"}]}]}], " ", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tick", ",", "False"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qPlaneLoc", ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qLoc", ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tau", ",", "0"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"omegaIndex", ",", " ", "1"}], "}"}], ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"scale", ",", " ", "0.4"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"meshSize", ",", "8"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dynamics", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dynPlot", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freqPlot", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bRefreshMatrix", ",", " ", "False"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bRefreshDynamics", ",", " ", "False"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bRefreshDynPlot", ",", " ", "False"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bRefreshFreqPlot", ",", " ", "False"}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tabNumber", ",", "1"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dynTab", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freqTab", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"parametersTab", ",", " ", "3"}], "}"}], ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"minSquaredDistanceFromOrigin", ",", " ", "0.1"}], "}"}], ",",
        " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"minAngleBetweenLatticeVectors", ",", " ", 
         RowBox[{"Pi", "/", "6"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"locDefault", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.1", ",", " ", "1.3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1.9", ",", " ", "0.8"}], "}"}]}], "}"}]}], "}"}], ",", 
       " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"defaultMass", ",", " ", "20"}], "}"}], ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "The", " ", "number", " ", "of", " ", "default", " ", "masses", " ", 
       "are", " ", "coupled", " ", "by", " ", "these", " ", "next", " ", 
       "four", " ", 
       RowBox[{"variables", "."}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lastNumMasses", ",", " ", "3"}], "}"}], ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mLocDefault", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "0.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", " ", "1.2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1.3", ",", " ", "1.4"}], "}"}]}], "}"}]}], "}"}], ",", 
       " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mScalarArray", ",", " ", 
         RowBox[{"{", 
          RowBox[{"20", ",", " ", "20", ",", " ", "20"}], "}"}]}], "}"}], ",",
        " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"moSel", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"pick", " ", "anything", " ", "that", " ", 
       RowBox[{"isn", "'"}], "t", " ", "m1Sel"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m1Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m2Sel", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kArray", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], " ", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ld", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"couplingData", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"springColorsByN", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k1", ",", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k2", ",", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k3", ",", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k4", ",", "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k5", ",", "None"}], "}"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kDefaults", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "0.1", ",", " ", "0.1", ",", " ", "0.1", ",", " ", "0.1", ",", " ", 
           "0.1"}], "}"}]}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kMin", ",", " ", "0.02"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kMax", ",", " ", "0.2"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mMax", ",", " ", "50"}], "}"}], ",", " ", "None"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"windowHalfWidth", ",", " ", "3"}], "}"}], ",", " ", "None"}],
       "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"springColors", ",", 
         RowBox[{"Darker", "@", 
          RowBox[{"{", " ", 
           RowBox[{
           "Orange", ",", "Green", ",", "Purple", ",", "Cyan", ",", 
            "Yellow"}], " ", "}"}]}]}], " ", "}"}], " ", ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"primaryDisplaySize", ",", " ", 
         RowBox[{"{", 
          RowBox[{"380", ",", "380"}], "}"}]}], "}"}], ",", " ", "None"}], 
      "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"textDisOffset", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0.25", ",", " ", "0.25"}], "}"}]}], "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nArray", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], " ", "}"}], ",", " ", 
       "None"}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
      RowBox[{"{", "tick", "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"SaveDefinitions", "\[Rule]", "True"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"SynchronousInitialization", "\[Rule]", "False"}]}], "*)"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"Initialization", " ", "\[RuleDelayed]", " ", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"locDefault", ",", " ", "mLocDefault"}], "}"}], ",", " ", 
           "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"springColorsByN", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"s", " ", 
                RowBox[{
                 RowBox[{"Append", "[", 
                  RowBox[{"nArray", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], " ", "\[Rule]", " ", 
               RowBox[{"springColors", "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"s", ",", " ", 
                RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], 
              ",", " ", 
              RowBox[{"{", 
               RowBox[{"n", ",", " ", "5"}], "}"}]}], " ", "]"}], ",", "1"}], 
           "]"}]}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Based", " ", "on", " ", "a", " ", "ListLinePlot", " ", "version", 
          " ", "posted", " ", 
          RowBox[{"in", ":", " ", 
           ButtonBox[
            RowBox[{
             RowBox[{"http", ":"}], "//", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], 
                "/", "a"}], "/", "37228"}], "/", "10"}]}],
            BaseStyle->"Hyperlink",
            ButtonData->{
              URL["http://mathematica.stackexchange.com/a/37228/10"], None},
            
            ButtonNote->
             "http://mathematica.stackexchange.com/a/37228/10"]}]}], " ", 
         "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", "springPoints", "]"}], " ", ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"springPoints", "::", "usage"}], " ", "=", " ", 
           "\"\<springPoints[ {point1, point2}, numberOfTurns, height, \
fractionToDrawAsLinesAtEnds ].  Example:\n\
\[IndentingNewLine]ListLinePlot[springPoints[{{1,2},{3,5}}], AspectRatio\
\[Rule]Automatic, PlotStyle -> Darker[ Purple ] ]\>\""}], " ", ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"springPoints", "[", " ", 
          RowBox[{"a12_List", ",", " ", 
           RowBox[{"n_Integer:", "8"}], ",", 
           RowBox[{"h_:", ".05"}], ",", " ", 
           RowBox[{"f_:", " ", "0.1"}]}], " ", "]"}], " ", ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "a1", ",", " ", "a2", ",", " ", "n1", ",", " ", "springDiff", ",",
              " ", "nd", ",", " ", "r", ",", " ", "r1"}], " ", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a1", ",", " ", "a2"}], "}"}], " ", "=", " ", "a12"}], 
            " ", ";", "\[IndentingNewLine]", 
            RowBox[{"n1", " ", "=", " ", 
             RowBox[{"Norm", "[", "a1", "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"springDiff", " ", "=", " ", 
             RowBox[{"a2", " ", "-", " ", "a1"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nd", " ", "=", " ", 
             RowBox[{"Norm", "[", "springDiff", "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"r", " ", "=", " ", 
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"ArcTan", " ", "@@", "  ", "springDiff"}], " ", "]"}]}],
             " ", ";", "\[IndentingNewLine]", 
            RowBox[{"r1", " ", "=", " ", 
             RowBox[{"r", " ", ".", " ", 
              RowBox[{"{", 
               RowBox[{"n1", ",", " ", "0"}], "}"}]}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", " ", 
               RowBox[{
                RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
                 RowBox[{"r", " ", ".", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"n1", " ", "+", " ", 
                    RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}]}], ",", " ", 
                    RowBox[{"h", " ", 
                    RowBox[{"Sin", "[", " ", 
                    RowBox[{"2", " ", "Pi", " ", "n", " ", "t"}], "]"}]}]}], 
                   "}"}]}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                 "t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], " ", 
                 "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", " ", 
               RowBox[{
                RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
                 RowBox[{"r", " ", ".", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"n1", " ", "+", " ", 
                    RowBox[{"nd", " ", "f"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"2", "f"}]}], ")"}], " ", "nd"}], " ", "+", " ", 
                    RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
                   "}"}]}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                 "t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], " ", 
                 "}"}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", " ", 
               RowBox[{
                RowBox[{"a1", " ", "-", "r1", " ", "+", " ", 
                 RowBox[{"r", " ", ".", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"n1", " ", "+", 
                    RowBox[{"t", " ", "f", " ", "nd"}]}], ",", " ", "0"}], 
                   "}"}]}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                 "t", ",", " ", "0", ",", " ", "1", ",", " ", "0.01"}], " ", 
                 "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", "indexLabel", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"indexLabel", "::", "usage"}], " ", "=", " ", 
           "\"\<\!\(\*SubscriptBox[\(k\), \(\(i\)\(\\\ \)\)]\)(or other \
character) in italic. indexLabel['k', 1]\>\""}], " ", ";"}], 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"indexLabel", " ", "=", " ", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#1", ",", "Italic"}], "]"}], ",", " ", "#2"}], "]"}], 
          " ", "&"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", "kLable", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"kLable", "::", "usage"}], " ", "=", " ", 
           "\"\<\!\(\*SubscriptBox[\(k\), \(\(i\)\(\\\ \)\)]\)(or other \
character) in italic and colored by spring index. kLable[k]\>\""}], " ", 
          ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"kLable", " ", "=", " ", 
         RowBox[{
          RowBox[{"Style", "[", " ", 
           RowBox[{
            RowBox[{"indexLabel", "[", 
             RowBox[{"\"\<k\>\"", ",", " ", "#"}], "]"}], ",", " ", 
            RowBox[{"FontColor", "\[Rule]", 
             RowBox[{"springColors", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}]}], " ", "]"}], " ", "&"}]}], 
        " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"massColors", " ", ":=", " ", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Darker", "[", 
             RowBox[{"{", " ", 
              RowBox[{
              "Blue", ",", " ", "Green", ",", " ", "Purple", ",", " ", "Red", 
               ",", " ", "Orange"}], " ", "}"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"#", ",", " ", "5"}], "]"}], " ", "+", " ", "1"}], 
             "]"}], " ", "]"}], " ", "&"}], " ", ")"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"massLabel", " ", ":=", " ", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"indexLabel", "[", 
             RowBox[{"\"\<m\>\"", ",", " ", "#"}], "]"}], ",", " ", 
            RowBox[{"massColors", "[", "#", "]"}]}], "]"}], " ", "&"}]}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", "calcLineTable", "]"}], " ", ";"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"calcLineTable", "[", " ", 
          RowBox[{"n_List", ",", " ", "b_List", ",", " ", "i_List"}], " ", 
          "]"}], " ", ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"first", ",", " ", "second"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"first", ",", " ", "second"}], "}"}], " ", "=", " ", 
             "i"}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Line", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"n", "[", 
                    RowBox[{"[", "first", "]"}], "]"}]}], 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"j", " ", 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "second", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"n", "[", 
                    RowBox[{"[", "first", "]"}], "]"}], 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "first", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"j", " ", 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "second", "]"}], "]"}]}]}]}], "}"}], " ", 
               "\[IndentingNewLine]", "]"}], " ", "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", 
                RowBox[{"-", 
                 RowBox[{"n", "[", 
                  RowBox[{"[", "second", "]"}], "]"}]}], ",", " ", 
                RowBox[{"n", "[", 
                 RowBox[{"[", "second", "]"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "calcReciprocalBasis", " ", "]"}], 
          " ", ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"calcReciprocalBasis", "::", "usage"}], " ", "=", " ", 
           "\"\<Return a reciprocal frame basis for a set of vectors.  This \
doesn't include the 2 \[Pi] scaling that is common in solid state physics.  \
Example, displaying the desired Kronicker delta behaviour:\n\nb = \
{{2,1},{-1/4, 2}} ;\ng = calcReciprocalBasis[ b ] ;\n\n{g[[1]].loc[[1]],\
\[IndentingNewLine]g[[1]].loc[[2]],\[IndentingNewLine]g[[2]].loc[[1]],\
\[IndentingNewLine]g[[2]].loc[[2]]}\n\>\""}], " ", ";"}], 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"calcReciprocalBasis", "[", "loc_List", "]"}], " ", ":=", 
         " ", 
         RowBox[{"Inverse", "[", " ", 
          RowBox[{"Transpose", "[", " ", "loc", " ", "]"}], " ", "]"}]}], " ",
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "pointsTable", " ", "]"}], " ", ";"}],
          "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pointsTable", "[", " ", 
          RowBox[{
          "mPosFirstCell_List", ",", " ", "latticeBasis_List", ",", " ", 
           "numberLatticeLinesToDisplay_List"}], " ", "]"}], " ", ":=", " ", 
         RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mPosFirstCell", " ", "+", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], ".", " ", "latticeBasis"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"-", 
              RowBox[{"numberLatticeLinesToDisplay", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"numberLatticeLinesToDisplay", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", 
             RowBox[{"-", 
              RowBox[{"numberLatticeLinesToDisplay", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{"numberLatticeLinesToDisplay", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nMasses", " ", ":=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Dimensions", "[", "u", "]"}], " ", "//", " ", "First"}],
             ")"}], " ", "-", "2"}], ")"}]}], " ", ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"adjustedmoSel", " ", ":=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"lastNumMasses", " ", ">", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{"moSel", " ", "\[Equal]", " ", "m1Sel"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"First", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"Range", "[", "lastNumMasses", "]"}], ",", "m1Sel"}], 
               "]"}], "]"}], ",", " ", "\[IndentingNewLine]", "moSel"}], 
            "]"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"First", "@", 
            RowBox[{"Delete", "[", " ", 
             RowBox[{
              RowBox[{"Range", "[", "2", "]"}], ",", " ", "m1Sel"}], 
             "]"}]}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"constructKArrayElements", "[", " ", 
          RowBox[{"i_Integer", ",", " ", "j_Integer"}], "  ", "]"}], " ", ":=",
          " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"a", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "j", ",", " ", 
                    RowBox[{"s", " ", 
                    RowBox[{"nArray", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}], "}"}], " ", "\[Rule]",
                   " ", 
                  RowBox[{"kDefaults", "[", 
                   RowBox[{"[", "n", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"s", ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "2"}], "}"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", " ", "4"}], "}"}]}], " ", "]"}], ",", " ",
                "1"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", " ", "[", " ", 
             RowBox[{
              RowBox[{"i", " ", "<", " ", "j"}], ",", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"a", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "j", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], " ", "\[Rule]", 
                 " ", 
                 RowBox[{"kDefaults", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}]}], "]"}], ",", " ", "a"}], 
             " ", "]"}]}]}], " ", "\[IndentingNewLine]", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"constructKArray", "[", " ", "r_Integer", " ", "]"}], " ", ":=",
          " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"constructKArrayElements", "[", 
              RowBox[{"i", ",", "j"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "r"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"j", ",", "r"}], "}"}]}], "]"}], ",", " ", "2"}], 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"alterKArrayElements", "[", " ", 
          RowBox[{"ni_Integer", ",", " ", "v_"}], " ", "]"}], " ", ":=", " ", 
         RowBox[{"(", 
          RowBox[{"kArray", " ", "/.", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"m1Sel", ",", "m2Sel", ",", " ", 
                  RowBox[{"nArray", "[", 
                   RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", " ", "_"}], 
               "]"}], " ", "\[RuleDelayed]", " ", 
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"m1Sel", ",", "m2Sel", ",", " ", 
                  RowBox[{"nArray", "[", 
                   RowBox[{"[", "ni", "]"}], "]"}]}], "}"}], ",", " ", "v"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"m1Sel", ",", "m2Sel", ",", " ", 
                  RowBox[{"-", 
                   RowBox[{"nArray", "[", 
                    RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", " ", 
                "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"m1Sel", ",", "m2Sel", ",", " ", 
                  RowBox[{"-", 
                   RowBox[{"nArray", "[", 
                    RowBox[{"[", "ni", "]"}], "]"}]}]}], "}"}], ",", " ", 
                "v"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], " ", 
          ")"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"alterKarrayOriginElement", "[", "v_", "]"}], " ", ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "m1oSet", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"m1oSet", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"{", 
                 RowBox[{"m1Sel", ",", " ", "moSel"}], "}"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"kArray", " ", "/.", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"m1oSet", ",", " ", "_"}], "]"}], " ", 
               "\[RuleDelayed]", " ", 
               RowBox[{"Rule", "[", 
                RowBox[{"m1oSet", ",", " ", "v"}], "]"}]}], ")"}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"To", " ", "refresh", " ", "k1"}], ",", "k2", ",", "k3", 
          ",", 
          RowBox[{
          "k4", " ", "after", " ", "changing", " ", "m1Sel", " ", "or", " ", 
           RowBox[{"m2Sel", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"kArraySelect", "[", " ", "ni_Integer", " ", "]"}], " ", ":=",
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m1Sel", ",", "m2Sel", ",", 
             RowBox[{"nArray", "[", 
              RowBox[{"[", "ni", "]"}], "]"}]}], " ", "}"}], " ", "/.", " ", 
           "kArray"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "To", " ", "refresh", " ", "k5", " ", "after", " ", "changing", " ", 
          "m1Sel", " ", "and", " ", "moSel"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"kArrayOriginSelect", " ", ":=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"{", 
               RowBox[{"m1Sel", ",", " ", "moSel"}], "}"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}], " ", " ", "/.", " ", 
           "kArray"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"growKarray", "[", " ", "nmNew_Integer", " ", "]"}], " ", ":=",
          " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "k2", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"k2", " ", "=", " ", 
             RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"constructKArrayElements", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], 
                 ")"}], "/@", " ", 
                RowBox[{"(", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "nmNew"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "nmNew"}], "}"}]}], "]"}], ",", 
                    " ", "1"}], "]"}], ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", "#", "]"}], " ", "\[Equal]", " ", 
                    "nmNew"}], " ", "&"}]}], "]"}], ")"}]}], ",", " ", "2"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kArray", ",", " ", "k2"}], "}"}], ",", " ", "1"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "resetLatticeVectorsIfAngleTooSmall", "[", "minAngle_", "]"}], " ", ":=",
          " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"t", " ", "=", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"ArcCos", "[", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{"u", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".", " ", 
                RowBox[{"Normalize", "[", 
                 RowBox[{"u", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], 
            " ", ";", "\[IndentingNewLine]", 
            RowBox[{"t", " ", "=", " ", 
             RowBox[{"If", " ", "[", " ", 
              RowBox[{
               RowBox[{"t", " ", ">", " ", 
                RowBox[{"Pi", "/", "2"}]}], ",", " ", 
               RowBox[{"Pi", "-", "t"}], ",", " ", "t"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"t", " ", "<", " ", "minAngle"}], ",", 
              "\[IndentingNewLine]", "locDefault", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"u", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                RowBox[{"u", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "locDependent", " ", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"locDependent", "::", "usage"}], " ", "=", " ", 
           "\"\<Locator dependent calculations (i.e. based on the mass \
positions and the unit cell basis vectors)\n\nExample:\n\n\
locDependent[{1/2,1}, {1,1/2}, {{0.1,0.2} + {1/2,1} + {1,1/2}, {0.3, 0.5} - \
{1/2,1} - {1,1/2}}]\n\nWill see: {0.1,0.2}, {0.3, 0.5} ; as the mPosFirstCell \
values.\n\>\""}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"locDependent", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "m", ",", "latticeBasis", ",", " ", "numberLatticeLinesToDisplay",
              ",", "reciprocalBasis", ",", "mObliqueComponents", ",", " ", 
             "mPosFirstCell", ",", " ", "reciprocalNorms"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"latticeBasis", " ", "=", 
             RowBox[{"Take", "[", 
              RowBox[{"u", ",", " ", "2"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"m", " ", "=", " ", 
             RowBox[{"Drop", "[", 
              RowBox[{"u", ",", " ", "2"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"numberLatticeLinesToDisplay", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Ceiling", "[", "  ", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"windowHalfWidth", "/", " ", 
                   RowBox[{
                    RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], " ", 
                "&"}], " ", "/@", " ", 
               RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"reciprocalBasis", " ", "=", " ", 
             RowBox[{
             "calcReciprocalBasis", "[", " ", "latticeBasis", " ", "]"}]}], 
            " ", ";", "\[IndentingNewLine]", 
            RowBox[{"reciprocalNorms", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"reciprocalBasis", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                " ", 
               RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"mObliqueComponents", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"m", "[", 
                 RowBox[{"[", " ", "i", " ", "]"}], "]"}], " ", ".", " ", 
                RowBox[{"reciprocalBasis", "[", 
                 RowBox[{"[", " ", "j", " ", "]"}], "]"}]}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "lastNumMasses"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"j", ",", " ", "2"}], "}"}]}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"mPosFirstCell", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"mObliqueComponents", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", ".", " ", 
                  "latticeBasis"}]}], " ", ")"}], " ", "&"}], " ", "/@", " ", 
              RowBox[{"Range", "[", "lastNumMasses", "]"}]}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "\"\<latticeBasis\>\"", " ", "\[Rule]", " ", "latticeBasis"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<latticeNorms\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Norm", "[", 
                   RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                  " ", 
                 RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<latticeUnitVectors\>\"", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Normalize", "[", 
                   RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                  " ", 
                 RowBox[{"Range", "[", "2", "]"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
              "\"\<numberLatticeLinesToDisplay\>\"", "\[Rule]", " ", 
               "numberLatticeLinesToDisplay"}], ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<reciprocalBasis\>\"", "\[Rule]", " ", "reciprocalBasis"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<reciprocalNorms\>\"", "\[Rule]", " ", "reciprocalNorms"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<qMaxVec\>\"", " ", "\[Rule]", " ", 
               RowBox[{"(", 
                RowBox[{"2", " ", "Pi", " ", "reciprocalNorms"}], ")"}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<mObliqueComponents\>\"", "\[Rule]", " ", 
               "mObliqueComponents"}], ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<mPosFirstCell\>\"", "\[Rule]", " ", "mPosFirstCell"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"\"\<pointsDataTable\>\"", "\[Rule]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"pointsTable", "[", 
                    RowBox[{
                    RowBox[{"mPosFirstCell", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "latticeBasis", ",", 
                    "numberLatticeLinesToDisplay"}], "]"}], ")"}], " ", "&"}],
                  "/@", " ", 
                 RowBox[{"Range", "[", "lastNumMasses", "]"}]}], ")"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"\"\<lineTable\>\"", " ", "\[Rule]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"calcLineTable", "[", " ", 
                   RowBox[{
                   "numberLatticeLinesToDisplay", ",", " ", "latticeBasis", 
                    ",", " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
                 RowBox[{"Permutations", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ")"}]}]}], 
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "projOp", " ", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"projOp", "::", "usage"}], " ", "=", " ", 
           "\"\<given an input vector \!\(\*OverscriptBox[\(v\), \(\
\[RightVector]\)]\) = {\!\(\*SubscriptBox[\(v\), \(x\)]\), \
\!\(\*SubscriptBox[\(v\), \(y\)]\)}, compute the projection matrix operator \
along the unit vector in that direction.\n\n   projOp[{1, 0}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"1\", \"0\"},
{\"0\", \"0\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{0, 1}] // MatrixForm = \
\!\(\*TagBox[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{\"0\", \"0\"},
{\"0\", \"1\"}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)\[IndentingNewLine]projOp[{a,b}] // MatrixForm = \!\
\(\*Cell[TextData[Cell[BoxData[
RowBox[{\"(\", \"\[NoBreak]\", GridBox[{
{
FractionBox[
SuperscriptBox[\"a\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]},
{
FractionBox[
RowBox[{\"a\", \" \", \"b\"}], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]], 
FractionBox[
SuperscriptBox[\"b\", \"2\"], 
RowBox[{
SuperscriptBox[\"a\", \"2\"], \"+\", 
SuperscriptBox[\"b\", \"2\"]}]]}
},
GridBoxAlignment->{\"Columns\" -> {{Center}}, \"ColumnsIndexed\" -> {}, \
\"Rows\" -> {{Baseline}}, \"RowsIndexed\" -> {}},
GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"ColumnsIndexed\" -> {}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, \"RowsIndexed\" -> {}}], \"\[NoBreak]\", \")\"}]],
CellChangeTimes->{{3.5990911441851797`*^9, 3.599091144641206*^9}, \
3.5990913830438423`*^9, 3.5990915191646276`*^9, 3.599091555028679*^9, \
3.599091735722014*^9, {3.599091916353346*^9, 3.599091928988068*^9}}]]]\)\n\
\>\""}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"projOpU", "[", "v_List", "]"}], " ", ":=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], ",", " ", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], 
              RowBox[{"v", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], 
              RowBox[{"v", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "}"}]}], "}"}]}],
         " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"projOp", "[", "v_List", "]"}], " ", ":=", " ", 
         RowBox[{
          RowBox[{"projOpU", "[", "v", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"v", ".", " ", "v"}], ")"}]}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"ClearAll", "[", " ", "relativeDifferences", " ", "]"}], 
           " ", ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"relativeDifferences", "::", "usage"}], " ", "=", " ", 
            "\"\<Example: relativeDifferences[ {aLoc,bLoc}, {mLoc1, mLoc2, \
...}, kArray[[1]] /. Rule -> List ].\n\nHere, the list of the form: \
(kArray[[1]] /. Rule -> List) // First = {1,1,{-1,0}} = {m1index, m2index, \
{nIndex1, nIndex2}}\>\""}]}], ",", " ", 
          RowBox[{
           RowBox[{
           "is", " ", "a", " ", "tuple", " ", "for", " ", "the", " ", 
            "spring", " ", "constant", " ", "between", " ", "m1", " ", "in", 
            " ", "the", " ", "origin", " ", "cell", " ", "to", " ", "m2", " ",
             "in", " ", "the", " ", "lattice", " ", "cell", " ", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2"}], "}"}]}], " ", ";"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"relativeDifferences", "[", " ", 
          RowBox[{"r_List", ",", "mp_List", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "mIndex1_Integer", ",", " ", "mIndex2_Integer", ",", " ", 
             "n_List"}], "}"}]}], "]"}], " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d", ",", " ", "pOrigin", ",", " ", "pOther"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pOrigin", " ", "=", " ", 
             RowBox[{"mp", "[", 
              RowBox[{"[", " ", "mIndex1", " ", "]"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pOther", " ", "=", " ", 
             RowBox[{
              RowBox[{"mp", "[", 
               RowBox[{"[", " ", "mIndex2", " ", "]"}], "]"}], "+", " ", 
              RowBox[{"n", " ", ".", " ", "r"}]}]}], "  ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"d", " ", "=", " ", 
             RowBox[{"pOther", " ", "-", " ", "pOrigin"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dn", " ", "=", " ", 
             RowBox[{"d", " ", ".", "d"}]}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"dn", ",", " ", "pOrigin", ",", " ", "pOther", ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"projOpU", "[", "d", "]"}], "/", "dn"}], "  ", 
               RowBox[{"(*", 
                RowBox[{"//", " ", "MatrixForm"}], "*)"}], ")"}]}], 
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "calculateCouplings", " ", "]"}], " ",
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"calculateCouplings", "::", "usage"}], " ", "=", " ", 
           "\"\<Returns a pair of sets for each origin m_i coupling:\
\[IndentingNewLine]\nWith:\n\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\) for the position of the \
\!\(\*SuperscriptBox[\(k\), \(th\)]\) mass in the origin cell, \nj for the \
index of the neighbouring cell mass, \n\!\(\*OverscriptBox[\(m\), \(\
\[RightVector]\)]\) for the cell index of the neighbouring cell,\n\nthis \
function returns elements of the form:\[IndentingNewLine]{k, j, \
\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\), \!\(\*SubscriptBox[\(K\), \
\(\*OverscriptBox[\(n\), \(\[RightVector]\)], k; \*OverscriptBox[\(m\), \(\
\[RightVector]\)], j\)]\), \
\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(a\), \(\[RightVector]\)], \
\(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \*OverscriptBox[\(0\), \(\
\[RightVector]\)], k\)], \(2\)]\), \!\(\*SubscriptBox[OverscriptBox[\(p\), \(\
\[RightVector]\)], \(k\)]\), \!\(\*SubscriptBox[OverscriptBox[\(r\), \(\
\[RightVector]\)], OverscriptBox[\(m\), \(\[RightVector]\)]]\) + \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(\[RightVector]\)], \(j\)]\), \
\!\(\*SubscriptBox[\(Proj\), SubscriptBox[OverscriptBox[\(a\), \(\
\[RightVector]\)], \(\*OverscriptBox[\(m\), \(\[RightVector]\)], j; \
\*OverscriptBox[\(0\), \(\[RightVector]\)], k\)]]\)}\n\nThere are two sets of \
lists returned:\nFirst has all the origin cell couplings for that mass.\
\[IndentingNewLine]Second has all the nn couplings for each mass sorted by \
distance from mass.  Can use that to select up to num-interactions.\>\""}], 
          " ", ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"calculateCouplings", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "t", ",", " ", "t1", ",", " ", "t2", ",", " ", "r", ",", " ", 
             "mp"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", ",", " ", "mp"}], "}"}], " ", "=", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<latticeBasis\>\"", ",", " ", "\"\<mPosFirstCell\>\""}], 
               "}"}], " ", "/.", " ", "ld"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"t", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"#", ",", " ", 
                 RowBox[{"relativeDifferences", "[", 
                  RowBox[{"r", ",", " ", "mp", ",", " ", 
                   RowBox[{"First", "[", "#", "]"}]}], "]"}]}], " ", "]"}], 
               "&"}], "/@", " ", 
              RowBox[{"(", 
               RowBox[{"kArray", " ", "/.", " ", 
                RowBox[{"Rule", " ", "\[Rule]", " ", "List"}]}], ")"}]}]}], 
            " ", ";", "\[IndentingNewLine]", 
            RowBox[{"t", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", "1"}], 
                "]"}], " ", "&"}], "/@", " ", "t"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"t1", " ", "=", " ", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Select", "[", " ", 
                   RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "i"}], ")"}], " ", "&&", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "\[NotEqual]", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], ")"}]}], " ", 
                    "&"}]}], "]"}], ")"}], ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
               "\[IndentingNewLine]", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "lastNumMasses"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]",
             "\[IndentingNewLine]", 
            RowBox[{"t2", " ", "=", " ", 
             RowBox[{"Select", "[", " ", 
              RowBox[{"t", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "0"}], "}"}]}], " ", "&"}]}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"the", " ", "rest", " ", "of", " ", "the", " ", 
              RowBox[{"permutations", ":"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"t2", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t2", ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"#", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
                    "1"}], "]"}], " ", "&"}], "/@", " ", "t2"}]}], "}"}], ",",
                " ", "1"}], "]"}]}], "  ", ";", "\[IndentingNewLine]", 
            RowBox[{"t2", " ", "=", " ", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Select", "[", " ", 
                   RowBox[{"t2", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    "i"}], ")"}], " ", "&"}]}], "]"}], ")"}], ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], " ", "<", " ", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], " ", "&"}]}], "]"}], 
               "\[IndentingNewLine]", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "lastNumMasses"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"t2", ",", " ", "t1"}], "}"}]}]}], "\[IndentingNewLine]",
           "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "plotSprings", " ", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plotSprings", "::", "usage"}], " ", "=", " ", 
           "\"\<Example:\n\nModule[{ld},\[IndentingNewLine]ld = \
locDependent[{1/2,1}, {1,1/2}, {{0.1,1.2} + {1/2,1} + {1,1/2}, {1.3, 0.5} - \
{1/2,1} - {1,1/2}}] ;\[IndentingNewLine]plotSprings[{10,20}, ld ] \
\[IndentingNewLine]]\n\>\""}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotSprings", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "aLoc", ",", " ", "bLoc", ",", "mLoc", ",", "pointsList", ",", 
             "latticeBasis", ",", "reciprocalBasis", ",", "pointsDataTable", 
             ",", " ", "numberLatticeLinesToDisplay", ",", " ", "lines", ",", 
             " ", "cOrigin", ",", " ", "cN", ",", " ", "g"}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"latticeBasis", " ", "=", " ", 
             RowBox[{"Take", "[", " ", 
              RowBox[{"u", ",", " ", "2"}], " ", "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"aLoc", " ", "=", " ", 
             RowBox[{"u", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bLoc", " ", "=", " ", 
             RowBox[{"u", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "mLoc", ",", "reciprocalBasis", ",", "pointsDataTable", ",", 
               "numberLatticeLinesToDisplay", ",", " ", "lines"}], "}"}], "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<mPosFirstCell\>\"", ",", "\"\<reciprocalBasis\>\"", ",", 
                "\"\<pointsDataTable\>\"", ",", 
                "\"\<numberLatticeLinesToDisplay\>\"", ",", " ", 
                "\"\<lineTable\>\""}], "}"}], "  ", "/.", " ", "ld"}]}], "  ",
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pointsList", "[", "n_Integer", "]"}], " ", ":=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"massColors", "[", "n", "]"}], ",", 
               "\[IndentingNewLine]", ",", 
               RowBox[{"PointSize", "[", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "/", "mMax"}], "/", 
                  "500"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Point", "[", " ", "#", " ", "]"}], " ", "&"}], " ", 
                "/@", " ", 
                RowBox[{"pointsDataTable", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"massLabel", "[", " ", "n", "]"}], ",", 
                 RowBox[{
                  RowBox[{"mLoc", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], " ", "+", " ", 
                  "textDisOffset"}]}], "]"}]}], "\[IndentingNewLine]", 
              "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"cOrigin", " ", "=", " ", 
             RowBox[{"Select", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"couplingData", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "m1Sel", "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", " ", 
                 RowBox[{"{", 
                  RowBox[{"m1Sel", ",", " ", "moSel"}], "}"}]}], " ", "&"}]}],
               " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{"cN", " ", "=", " ", 
             RowBox[{"Select", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"couplingData", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "m1Sel", "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"#", ",", " ", "2"}], "]"}], " ", "\[Equal]", 
                 RowBox[{"{", 
                  RowBox[{"m1Sel", ",", " ", "m2Sel"}], "}"}]}], "&"}]}], " ",
               "]"}]}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"g", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"springPoints", "[", " ", 
                  RowBox[{"Take", "[", 
                   RowBox[{"#", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}]}], "]"}], " ", "]"}], " ", 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                    "springColorsByN"}], ")"}]}]}], " ", "]"}], " ", "&"}], "/@",
               " ", "cN"}]}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", " ", "[", " ", 
             RowBox[{
              RowBox[{"lastNumMasses", " ", ">", " ", "1"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"g", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"springPoints", "[", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "7"}], "}"}]}], "]"}], " ", "]"}], " ", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ",
                     "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
                    "springColorsByN"}], ")"}]}]}], " ", "]"}], " ", "&"}], "/@",
                  " ", "cOrigin"}]}], "]"}], ","}], " ", "]"}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Show", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"lines", "\[IndentingNewLine]", ",", "Blue", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"reciprocalBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                    RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]",
                     ",", "Thick", ",", 
                    RowBox[{"Arrowheads", "[", "0.05", "]"}], 
                    "\[IndentingNewLine]", ",", "Red", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"latticeBasis", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "&"}], " ", "/@", " ", 
                    RowBox[{"Range", "[", "2", "]"}]}], "\[IndentingNewLine]",
                     ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"aLoc", "/", "2"}], " ", "+", " ", 
                    "textDisOffset"}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"bLoc", "/", "2"}], " ", "+", " ", 
                    "textDisOffset"}]}], "]"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pointsList", "[", "#", "]"}], " ", "&"}], "/@", 
                    " ", 
                    RowBox[{"Range", "[", "lastNumMasses", "]"}]}]}], 
                   "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]",
                  ",", 
                 RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "windowHalfWidth"}], "/", "2"}], ",", " ", 
                    "windowHalfWidth"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "windowHalfWidth"}], "/", "2"}], ",", " ", 
                    "windowHalfWidth"}], "}"}]}], "}"}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "primaryDisplaySize"}]}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               "g"}], "\[IndentingNewLine]", "}"}], " ", "]"}]}]}], " ", 
          "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"couplingLocator", " ", ":=", 
         RowBox[{"LocatorPane", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"u", ",", 
             RowBox[{
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"u", " ", "=", " ", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], "<", "3"}], ",", " ", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Flatten", "[", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"locDefault", ",", " ", "mLocDefault"}], "}"}], 
                    ",", " ", "1"}], "]"}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "cap", " ", "the", " ", "number", " ", "of", " ", 
                    "Locators", " ", "at", " ", "5"}], ",", " ", 
                    RowBox[{
                    "so", " ", "the", " ", "selection", " ", "Pane", " ", 
                    RowBox[{"doesn", "'"}], "t", " ", "start", " ", 
                    "truncating", " ", 
                    RowBox[{"the", " ", "'"}], "to", " ", 
                    RowBox[{"neighbouring", "'"}], " ", "SetterBar"}]}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], " ", "//", " ", 
                    "First"}], ")"}], " ", ">", " ", "7"}], ",", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", "7"}], "]"}], ",", " ", "#"}], "]"}]}], 
                  " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{
                  "This", " ", "assumes", " ", "just", " ", "one", " ", 
                   "added", " ", "at", " ", "a", " ", "time"}], ",", " ", 
                  RowBox[{
                   RowBox[{"but", " ", 
                    RowBox[{"that", "'"}], "s", " ", "probably", " ", 
                    RowBox[{"okay", ".", "  ", "Only"}], " ", "Alt"}], "-", 
                   RowBox[{
                   "click", " ", "delete", " ", "of", " ", "one", " ", "at", 
                    " ", "a", " ", "time", " ", "appears", " ", 
                    RowBox[{"possible", "."}]}]}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"mScalarArray", ",", "kArray"}], "}"}], " ", "=", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{"nMasses", " ", ">", " ", "lastNumMasses"}], ",", 
                   " ", "\[IndentingNewLine]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"mScalarArray", ",", " ", "defaultMass"}], "]"}], 
                    ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"growKarray", "[", "nMasses", "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", " ", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"mScalarArray", ",", " ", "nMasses"}], " ", "]"}],
                     ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"Select", "[", 
                    RowBox[{"kArray", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], " ", 
                    "\[LessEqual]", "  ", "nMasses"}], "&"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "]"}]}], " ", ";", " ", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                  "lattice", " ", "vector", " ", "end", " ", "points", " ", 
                  "to", " ", "be", " ", "too", " ", "close", " ", "to", " ", 
                  "the", " ", "origin"}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"u", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
                 RowBox[{"If", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ".", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "<", " ", 
                    "minSquaredDistanceFromOrigin"}], ",", " ", 
                   RowBox[{"locDefault", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"u", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
                 RowBox[{"If", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ".", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "<", " ", 
                    "minSquaredDistanceFromOrigin"}], ",", " ", 
                   RowBox[{"locDefault", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Don", "'"}], "t", " ", "allow", " ", "the", " ", 
                  "angle", " ", "between", " ", "lattice", " ", "vectors", 
                  " ", "get", " ", "too", " ", "small"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], " ", "=", " ", 
                 RowBox[{
                 "resetLatticeVectorsIfAngleTooSmall", "[", " ", 
                  "minAngleBetweenLatticeVectors", " ", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"lastNumMasses", " ", "=", " ", "nMasses"}], " ", ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "These", " ", "are", " ", "in", " ", "case", " ", "the", " ",
                   "number", " ", "of", " ", "locators", " ", "were", " ", 
                  "changed", " ", "and", " ", "we", " ", "have", " ", "a", 
                  " ", "mass", " ", "selected", " ", "that", " ", "is", " ", 
                  "now", " ", 
                  RowBox[{"invalid", "."}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"m1Sel", " ", "=", " ", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{"m1Sel", " ", ">", "lastNumMasses"}], ",", " ", 
                   "1", ",", " ", "m1Sel"}], "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"m2Sel", " ", "=", " ", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{"m2Sel", " ", ">", "lastNumMasses"}], ",", " ", 
                   "1", ",", " ", "m2Sel"}], "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"moSel", " ", "=", " ", 
                 RowBox[{"If", " ", "[", " ", 
                  RowBox[{
                   RowBox[{"moSel", " ", ">", "lastNumMasses"}], ",", " ", 
                   "1", ",", " ", "moSel"}], " ", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"moSel", " ", "=", " ", "adjustedmoSel"}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Adjust", " ", "these", " ", "for", " ", "Slider", " ", 
                   "display", " ", "in", " ", "case", " ", "m1Sel"}], ",", 
                  " ", "m2Sel", ",", " ", 
                  RowBox[{
                  "or", " ", "moSel", " ", "were", " ", "changed", " ", 
                   "just", " ", 
                   RowBox[{"above", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"k1", " ", "=", " ", 
                 RowBox[{"kArraySelect", "[", "1", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"k2", " ", "=", " ", 
                 RowBox[{"kArraySelect", "[", "2", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"k3", " ", "=", " ", 
                 RowBox[{"kArraySelect", "[", "3", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"k4", " ", "=", " ", 
                 RowBox[{"kArraySelect", "[", "4", "]"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"k5", " ", "=", " ", "kArrayOriginSelect"}], " ", ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"ld", " ", "=", " ", "locDependent"}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Reset", " ", "in", " ", "case", " ", "a"}], ",", 
                  RowBox[{"or", " ", "b", " ", "changed"}], ",", " ", 
                  RowBox[{
                  "and", " ", "the", " ", "last", " ", "selected", " ", 
                   "value", " ", "is", " ", "now", " ", "out", " ", "of", " ", 
                   RowBox[{"range", "."}]}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"qLoc", " ", "=", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], 
                  "/", "2"}]}], " ", ";", "\[IndentingNewLine]", 
                RowBox[{"qPlaneLoc", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"couplingData", " ", "=", " ", "calculateCouplings"}],
                 " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"Why", " ", 
              RowBox[{"doesn", "'"}], "t", " ", "Alt"}], "-", 
             RowBox[{
             "click", " ", "to", " ", "remove", " ", "existing", " ", 
              "Locator", " ", "refresh", " ", "this", " ", 
              RowBox[{"plot", "?", "  ", 
               RowBox[{"Workaround", ":", " ", 
                RowBox[{
                "move", " ", "one", " ", "of", " ", "the", " ", "other", " ", 
                 "locators", " ", "to", " ", "refresh"}]}]}]}]}], " ", "*)"}],
            "\[IndentingNewLine]", "plotSprings", ",", "\[IndentingNewLine]", 
           RowBox[{"LocatorAutoCreate", "\[Rule]", "True"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
          "\[IndentingNewLine]", "]"}]}], "  ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"massSetter", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<mass: \>\"", "]"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"lastNumMasses", " ", ">", " ", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"m1Sel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m1Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"massValue", " ", "=", " ", 
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "1", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "2", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "3", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "4", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"moSel", " ", "=", " ", "adjustedmoSel"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", "kArrayOriginSelect"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", " ", "]"}]}], "&"}], "/@",
                     " ", 
                    RowBox[{"Range", "[", "lastNumMasses", "]"}]}], ")"}]}], 
                  "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
                "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"massValue", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"massValue", " ", "=", " ", "#"}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "m1Sel", "]"}], "]"}], "=", "massValue"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"0.25", ",", 
                  RowBox[{"Dynamic", "@", "mMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
              "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"mScalarArray", "[", 
                  RowBox[{"[", "m1Sel", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"m2Setter", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Text", "[", "\"\<coupling to neighbouring: \>\"", " ", "]"}], ",",
            " ", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"If", " ", "[", " ", 
             RowBox[{
              RowBox[{"lastNumMasses", " ", ">", " ", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"m2Sel", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m2Sel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k1", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "1", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k2", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "2", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k3", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "3", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"k4", " ", "=", " ", 
                    RowBox[{"kArraySelect", "[", "4", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", " ", "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                   " ", 
                  RowBox[{"Range", "[", "lastNumMasses", "]"}]}], ")"}]}], 
               "\[IndentingNewLine]", "]"}], ",", 
              RowBox[{"massLabel", "[", " ", "1", "]"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "}"}]}],
         " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"km1", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<horizontal: \>\""}], ",", 
              RowBox[{"kLable", "[", "1", "]"}], ",", " ", "\"\< || \>\"", 
              ",", " ", 
              RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", 
              "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"k1", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k1", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"alterKArrayElements", "[", " ", 
                    RowBox[{"1", ",", " ", "k1"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "couplingData", " ", "=", " ", "calculateCouplings"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", "kMin"}], ",", 
                  RowBox[{"Dynamic", "@", "kMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
              "\[IndentingNewLine]", "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"k1", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"km2", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<vertical: \>\""}], ",", 
              RowBox[{"kLable", "[", "2", "]"}], ",", " ", "\"\< || \>\"", 
              ",", " ", 
              RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", 
              "\"\< \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"k2", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k2", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"alterKArrayElements", "[", " ", 
                    RowBox[{"2", ",", " ", "k2"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "couplingData", " ", "=", " ", "calculateCouplings"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", "kMin"}], ",", 
                  RowBox[{"Dynamic", "@", "kMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
              "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"k2", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], " ", 
          "\[IndentingNewLine]", "}"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"km3", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
              RowBox[{"kLable", "[", "3", "]"}], ",", " ", "\"\< || (\>\"", 
              ",", "  ", 
              RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
              "\"\< + \>\"", ",", " ", 
              RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
              "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"k3", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k3", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"alterKArrayElements", "[", " ", 
                    RowBox[{"3", ",", " ", "k3"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "couplingData", " ", "=", " ", "calculateCouplings"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", "kMin"}], ",", 
                  RowBox[{"Dynamic", "@", "kMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
              "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"k3", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"km4", " ", ":=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<diagonal: \>\""}], ",", 
              RowBox[{"kLable", "[", "4", "]"}], ",", " ", "\"\< || (\>\"", 
              ",", "  ", 
              RowBox[{"OverVector", "[", "\"\<b\>\"", "]"}], ",", " ", 
              "\"\< - \>\"", ",", " ", 
              RowBox[{"OverVector", "[", "\"\<a\>\"", "]"}], ",", " ", 
              "\"\<) \>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"k4", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k4", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{"alterKArrayElements", "[", " ", 
                    RowBox[{"4", ",", " ", "k4"}], " ", "]"}]}], " ", ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "couplingData", " ", "=", " ", "calculateCouplings"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", "kMin"}], ",", 
                  RowBox[{"Dynamic", "@", "kMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
              "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"k4", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"km5", " ", ":=", " ", 
         RowBox[{"{", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<origin coupling from \>\""}], ",", 
              " ", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"massLabel", "[", " ", "m1Sel", "]"}]}], ",", 
              RowBox[{"Text", "@", "\"\< to \>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"If", " ", "[", " ", 
                RowBox[{
                 RowBox[{"lastNumMasses", " ", ">", " ", "2"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"SetterBar", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"moSel", ",", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"moSel", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"k5", " ", "=", " ", "kArrayOriginSelect"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", " ", "\[Rule]", " ", 
                    RowBox[{"massLabel", "[", " ", "#", "]"}]}], " ", "&"}], "/@",
                     " ", 
                    RowBox[{"(", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "lastNumMasses", "]"}], ",", 
                    "m1Sel"}], "]"}], ")"}]}], ")"}]}], "\[IndentingNewLine]",
                   "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"massLabel", "[", " ", 
                   RowBox[{"First", "@", 
                    RowBox[{"Delete", "[", " ", 
                    RowBox[{
                    RowBox[{"Range", "[", "2", "]"}], ",", " ", "m1Sel"}], 
                    "]"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", ",", " ", "\"\< \>\"", ",", " ", 
              RowBox[{"kLable", "[", "5", "]"}], ",", " ", "\"\<: \>\""}], 
             "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Manipulator", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"k5", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"k5", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"kArray", " ", "=", " ", 
                    RowBox[{
                    "alterKarrayOriginElement", "[", " ", "k5", " ", "]"}]}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{
                    "couplingData", " ", "=", " ", "calculateCouplings"}], 
                    " ", ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshMatrix", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", "kMin"}], ",", 
                  RowBox[{"Dynamic", "@", "kMax"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{",", " ", 
                 RowBox[{"Enabled", " ", "\[Rule]", " ", 
                  RowBox[{"(", 
                   RowBox[{"lastNumMasses", " ", ">", " ", "1"}], ")"}]}]}], 
                "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
              ",", "\"\< \>\"", ",", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"NumberForm", "[", " ", 
                RowBox[{"k5", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"freqControls", " ", ":=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Text", "@", "\"\<mesh size \>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Manipulator", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"meshSize", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"meshSize", "=", "#"}], ";", 
                    RowBox[{"bRefreshFreqPlot", " ", "=", " ", "True"}], " ", 
                    ";", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "30", ",", "2"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                RowBox[{"AppearanceElements", "\[Rule]", 
                 RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "]"}], ",", 
              "\"\< \>\"", ",", " ", 
              RowBox[{"Dynamic", "[", "meshSize", "]"}]}], " ", 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"LocatorPane", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "qPlaneLoc", 
              RowBox[{"(*", 
               RowBox[{",", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"qPlaneLoc", " ", "=", " ", "#"}], ";", " ", 
                  RowBox[{"tick", "=", 
                   RowBox[{
                    RowBox[{"Not", "[", "tick", "]"}], " ", "&"}]}]}], 
                 ")"}]}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Lighter", "@", "Gray"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}], ",", 
                    "\[IndentingNewLine]", "Black", ",", 
                    RowBox[{"Line", "[", "qPlaneLoc", "]"}]}], 
                   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                  " ", 
                  RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    "/", "2"}]}], "\[IndentingNewLine]", ",", 
                  RowBox[{"ImageSize", " ", "\[Rule]", "  ", 
                   RowBox[{"200", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}]}]}], 
                 "\[IndentingNewLine]", "]"}], " ", "&"}], " ", "@", " ", 
               RowBox[{"(", 
                RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}]}], 
              " ", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
        " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dynamicsControls", " ", ":=", "\[IndentingNewLine]", 
         RowBox[{"{", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"OverVector", "[", "\"\<q\>\"", "]"}], ",", 
              "\[IndentingNewLine]", "\"\< = \>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Slider2D", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"qLoc", ",", 
                  RowBox[{
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"qLoc", "=", "#"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"bRefreshDynamics", " ", "=", " ", "True"}], " ", 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0.01", ",", "0.01"}], "}"}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}]}],
                  "}"}], "\[IndentingNewLine]", ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "False"}], 
                "\[IndentingNewLine]", ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"150", " ", 
                    RowBox[{"#", "/", 
                    RowBox[{"Max", "[", "#", "]"}]}]}], " ", "&"}], ")"}], 
                  " ", "@", " ", 
                  RowBox[{"(", 
                   RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], 
                   ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", " ", 
              "\[IndentingNewLine]", "\"\< 2 \[Pi] \>\"", ",", "  ", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"(", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"qLoc", "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi"}], ")"}]}], " ", "//", " ", 
                    "MatrixForm"}], ")"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ")"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"Text", "@", "\"\<time, normalized to one period:\>\""}],
              "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Manipulator", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{"tau", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tau", "=", "#"}], ";", 
                    RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"ContinuousAction", "\[Rule]", "True"}], ",", 
                RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "]"}], 
              "}"}], "\[IndentingNewLine]", ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"200", ",", "60"}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
            "Text", "@", 
             "\"\<Angular frequency \[Omega](q), selection:\>\""}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", 
               RowBox[{"omegaIndex", ",", 
                RowBox[{
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"omegaIndex", "=", "#"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"bRefreshDynPlot", " ", "=", " ", "True"}], " ", 
                   ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"tick", "=", 
                    RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
               "]"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"2", "lastNumMasses"}], "]"}]}], " ", "]"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          FormBox[
           RowBox[{" ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"grab", " ", "data", " ", 
               RowBox[{"from", ":", " ", "mScalarArray"}]}], ",", " ", "ld", 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"couplingData", "[", 
                  RowBox[{"[", "_", "]"}], "]"}], "[", 
                 RowBox[{"[", "_", "]"}], "]"}], "[", 
                RowBox[{"[", "_", "]"}], "]"}], " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"k", ",", " ", "j", ",", " ", 
                 OverscriptBox["m", "\[RightVector]"], ",", " ", 
                 SubscriptBox["K", 
                  RowBox[{
                   OverscriptBox["n", "\[RightVector]"], ",", 
                   RowBox[{"k", ";", 
                    OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], ",", 
                 " ", 
                 SuperscriptBox[
                  SubscriptBox[
                   OverscriptBox["a", "\[RightVector]"], 
                   RowBox[{
                    OverscriptBox["m", "\[RightVector]"], ",", 
                    RowBox[{"j", ";", 
                    OverscriptBox["0", "\[RightVector]"]}], ",", "k"}]], "2"],
                  ",", " ", 
                 SubscriptBox[
                  OverscriptBox["p", "\[RightVector]"], "k"], ",", " ", 
                 RowBox[{
                  SubscriptBox[
                   OverscriptBox["r", "\[RightVector]"], 
                   OverscriptBox["m", "\[RightVector]"]], " ", "+", " ", 
                  SubscriptBox[
                   OverscriptBox["p", "\[RightVector]"], "j"]}], ",", " ", 
                 SubscriptBox["Proj", 
                  SubscriptBox[
                   OverscriptBox["a", "\[RightVector]"], 
                   RowBox[{
                    OverscriptBox["m", "\[RightVector]"], ",", 
                    RowBox[{"j", ";", 
                    OverscriptBox["0", "\[RightVector]"]}], ",", "k"}]]]}], 
                "}"}]}]}], "\[IndentingNewLine]", 
             RowBox[{"ex", ":", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "0.5`", ",", 
                "1.`", ",", 
                RowBox[{"{", 
                 RowBox[{"0.9`", ",", "0.7`"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.30000000000000004`", ",", 
                  RowBox[{"-", "0.10000000000000009`"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0.36`", ",", "0.48`"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0.48`", ",", "0.6400000000000001`"}], "}"}]}], 
                 "}"}]}], "}"}]}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "to", " ", "form", " ", "equations", " ", "of", " ", "the", " ", 
               RowBox[{"form", ":", "\[IndentingNewLine]", 
                RowBox[{
                 SuperscriptBox["\[Omega]", "2"], " ", 
                 RowBox[{
                  SubscriptBox[
                   OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
                  OverscriptBox["q", "\[RightVector]"], ")"}]}]}]}], " ", "=",
               " ", 
              RowBox[{
               UnderscriptBox["\[Sum]", 
                RowBox[{
                 OverscriptBox["0", "\[RightVector]"], ",", 
                 RowBox[{"k", " ", "\[NotEqual]", " ", 
                  OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
               RowBox[{
                SubscriptBox["K", 
                 RowBox[{
                  OverscriptBox["0", "\[RightVector]"], ",", 
                  RowBox[{"k", ";", 
                   OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]], 
                SubscriptBox["Proj", 
                 SubscriptBox[
                  OverscriptBox["a", "^"], 
                  RowBox[{
                   OverscriptBox["n", "\[RightVector]"], ",", 
                   RowBox[{"k", ";", 
                    OverscriptBox["m", "\[RightVector]"]}], ",", "j"}]]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SubscriptBox[
                    OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], "(", 
                    OverscriptBox["q", "\[RightVector]"], ")"}], 
                   SubscriptBox["m", "k"]], "-", " ", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SubscriptBox[
                    OverscriptBox["\[Epsilon]", "\[RightVector]"], "j"], "(", 
                    OverscriptBox["q", "\[RightVector]"], ")"}], 
                    SqrtBox[
                    RowBox[{
                    SubscriptBox["m", "k"], 
                    SubscriptBox["m", "j"]}]]], 
                   SuperscriptBox["e", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox[
                    OverscriptBox["r", "\[RightVector]"], 
                    OverscriptBox["m", "\[RightVector]"]], " ", ".", " ", 
                    OverscriptBox["q", "\[RightVector]"]}], " ", ")"}]}]]}]}],
                  ")"}]}]}]}]}]}],
           TraditionalForm], "\[IndentingNewLine]", "Note", " ", "that", " ", 
          "qVec", " ", "here", " ", "is", " ", "intended", " ", "to", " ", 
          "be", " ", "an", " ", "undefined", " ", 
          RowBox[{"global", "."}]}], "\[IndentingNewLine]", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"oneTermOfdynamicsMatrix", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "k_Integer", ",", " ", "j_Integer", ",", " ", "mVec_List", ",", 
             " ", "kS_", ",", " ", "_", ",", "_", ",", "_", ",", 
             "proj_List"}], "}"}], ",", " ", "r_List", ",", " ", "mk_", ",", 
           " ", "epsilon_List"}], "]"}], " ", ":=", " ", 
         RowBox[{"(", 
          RowBox[{"kS", " ", 
           RowBox[{"proj", "  ", ".", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"epsilon", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "/", "mk"}], " ", "-", " ", 
              RowBox[{
               RowBox[{"epsilon", "[", 
                RowBox[{"[", "j", "]"}], "]"}], 
               RowBox[{
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{"I", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"mVec", " ", ".", " ", "r"}], ")"}], ".", " ", 
                    "qVec"}], ")"}]}], ")"}]}], "/", 
                RowBox[{"Sqrt", "[", " ", 
                 RowBox[{"mk", " ", 
                  RowBox[{"mScalarArray", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}]}]}]}], 
             ")"}]}]}], "  ", ")"}]}], "  ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dynamicsMatrix", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "cd", ",", " ", "r", ",", " ", "res", ",", " ", "epsilon", ",", 
             " ", "m"}], "}"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cd", " ", "=", " ", 
             RowBox[{"SplitBy", "[", " ", 
              RowBox[{
               RowBox[{"Sort", "@", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"couplingData", ",", " ", "2"}], "]"}]}], " ", ",", 
               " ", "First"}], " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{"r", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"\"\<latticeBasis\>\"", " ", "/.", " ", "ld"}], ")"}]}],
             " ", ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"Here", " ", 
                SubscriptBox[
                 OverscriptBox["\[Epsilon]", "\[RightVector]"], "k"], " ", 
                RowBox[{"(", 
                 RowBox[{"=", 
                  RowBox[{"epsilon", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], ")"}], " ", "is", " ", 
                "represented", " ", "as", " ", "a", " ", "2", "x", 
                RowBox[{"(", 
                 RowBox[{"2", "N"}], ")"}], " ", "matrix", " ", "with", " ", 
                "the", " ", "vector", " ", "factored", " ", 
                RowBox[{"out", ".", "  ", "For"}], " ", "example", " ", 
                "with", " ", "N"}], " ", "=", " ", "3"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{
               SubscriptBox[
                OverscriptBox["\[Epsilon]", "\[RightVector]"], "1"], "=", " ", 
               RowBox[{
                RowBox[{
                 TagBox[
                  RowBox[{"(", "\[NoBreak]", GridBox[{
                    {"1", "0", "0", "0", "0", "0"},
                    {"0", "1", "0", "0", "0", "0"}
                    },
                    GridBoxAlignment->{
                    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
                  Function[BoxForm`e$, 
                   MatrixForm[BoxForm`e$]]], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "This", " ", "will", " ", "be", " ", 
                 "pre"}], "-", 
                RowBox[{
                "multiplied", " ", "by", " ", "a", " ", "2", "x2", " ", 
                 "projection", " ", 
                 RowBox[{"matrix", ".", "\[IndentingNewLine]", "The"}], " ", 
                 "whole", " ", "thing", " ", "should", " ", "be", " ", 
                 "logically", " ", "treated", " ", "as", " ", "if", " ", "it",
                  " ", "is", " ", "post"}], "-", 
                RowBox[{
                "multiplied", " ", "by", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", Cell[TextData[Cell[BoxData[
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", GridBox[{
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "1"}]]},
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"1", ",", "2"}]]},
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "1"}]]},
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"2", ",", "2"}]]},
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "1"}]]},
                    {
                    SubscriptBox["\[Epsilon]", 
                    RowBox[{"3", ",", "2"}]]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
                   Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]],
                  
                  CellChangeTimes->{{3.600871330362259*^9, 
                   3.6008713538916054`*^9}}]]]}]}]}]}], "\[IndentingNewLine]",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"epsilon", " ", "=", " ", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", " ", 
                RowBox[{"2", " ", "lastNumMasses"}], " ", "]"}], ",", "2"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"res", " ", "=", " ", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", " ", 
                 RowBox[{
                  RowBox[{"Total", "@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"oneTermOfdynamicsMatrix", "[", 
                    RowBox[{"#", ",", " ", "r", ",", 
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "epsilon"}], 
                    " ", "]"}], " ", "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{"cd", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ")"}]}], ",", 
                  " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "lastNumMasses"}], "}"}]}], "]"}], 
                " ", "//", " ", "Flatten"}], ",", " ", 
               RowBox[{"2", " ", "lastNumMasses"}]}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"res", " ", "/.", " ", 
              RowBox[{"qVec", " ", "\[Rule]", " ", "#"}]}], " ", "&"}]}]}], 
          " ", "\[IndentingNewLine]", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "calcDynamics", " ", "]"}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"calcDynamics", "::", "usage"}], " ", "=", " ", 
           "\"\<a list of 2 N elements {\!\(\*SubscriptBox[\(\[Omega]\), \
\(k\)]\),\!\(\*OverscriptBox[\(\[Epsilon]\), \(\[RightVector]\)]\)}, one for \
each of the system eigenvalues, when evaluated at qLoc\>\""}], " ", ";"}], 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"calcDynamics", " ", ":=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Eigensystem", "[", " ", 
              RowBox[{"matrix", "[", "qLoc", "]"}], " ", "]"}], " ", "//", 
             " ", "Transpose"}], ")"}]}], ")"}]}], "  ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "showDynamics", " ", "]"}], " ", 
          ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"showDynamics", " ", ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "pointsDataTable", ",", "numberLatticeLinesToDisplay", ",", " ", 
             "e", ",", " ", "omega", ",", " ", "points", ",", " ", "lines", 
             ",", " ", "nu", ",", " ", "a", ",", "b"}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a", ",", " ", "b"}], "}"}], ",", "pointsDataTable", 
               ",", "numberLatticeLinesToDisplay", ",", " ", "lines"}], "}"}],
              "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<latticeBasis\>\"", ",", "\"\<pointsDataTable\>\"", ",", 
                "\"\<numberLatticeLinesToDisplay\>\"", ",", " ", 
                "\"\<lineTable\>\""}], "}"}], " ", "/.", " ", "ld"}]}], " ", 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"omega", ",", " ", "e"}], "}"}], " ", "=", " ", 
             RowBox[{"dynamics", "[", 
              RowBox[{"[", "omegaIndex", "]"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"e", " ", "=", " ", 
             RowBox[{"Partition", "[", 
              RowBox[{"e", ",", "2"}], "]"}]}], " ", ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"points", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointsDataTable", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], " ", "+", " ", 
                 RowBox[{"Table", "[", " ", "\[IndentingNewLine]", " ", 
                  RowBox[{
                   RowBox[{"scale", " ", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], " ", 
                    RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"I", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"qLoc", " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "i"}], " ", "+", " ", 
                    RowBox[{"b", " ", "j"}]}], ")"}]}], " ", "-", " ", 
                    RowBox[{"omega", " ", "#"}]}], ")"}]}], ")"}]}]}], " ", 
                    "]"}]}], "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"numberLatticeLinesToDisplay", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"numberLatticeLinesToDisplay", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"numberLatticeLinesToDisplay", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"numberLatticeLinesToDisplay", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
                  "\[IndentingNewLine]", "]"}]}], " ", "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "lastNumMasses"}], "}"}]}], "]"}]}], " ", 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"nu", " ", "=", " ", 
             RowBox[{"2", " ", "Pi", " ", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{"omega", " ", "\[Equal]", " ", "0"}], ",", " ", "1", 
                ",", " ", 
                RowBox[{"1", "/", "omega"}]}], "]"}]}]}], " ", ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Show", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"ListPlot", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"points", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"nu", " ", "#"}], "]"}], "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "windowHalfWidth"}], "/", "2"}], ",", " ", 
                    "windowHalfWidth"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "windowHalfWidth"}], "/", "2"}], ",", " ", 
                    "windowHalfWidth"}], "}"}]}], "}"}]}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "primaryDisplaySize"}], 
                    "\[IndentingNewLine]", ",", " ", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mScalarArray", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "mMax"}], "/", 
                    "500"}], "]"}], "]"}], ",", 
                    RowBox[{"massColors", "[", "k", "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"k", ",", "lastNumMasses"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                  "{", "\[IndentingNewLine]", "lines", "\[IndentingNewLine]", 
                   "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", 
              "&"}], ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ClearAll", "[", " ", "frequencyPlot", " ", "]"}], " ", ";",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"frequencyPlot", "::", "usage"}], " ", "=", " ", 
           "\"\<frequencyPlot[ dynamicsMatrix[{1,0}, {0,1}, 8, { 2 Pi, 2 Pi \
}, 0.5, 0.5, 0.25, 0.25, 1][#] &, ld ]\>\""}], " ", ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"frequencyPlotCalc", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "eigTable2D", ",", " ", "eigTable1D", ",", " ", "qMax", ",", " ", 
             "omegaPointList2D", ",", " ", "omegaPointList1D", ",", " ", 
             "range"}], "}"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"qMax", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}]}], " ",
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"eigTable2D", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"Table", "[", "  ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"qx", ",", " ", "qy"}], "}"}], " ", ",", 
                    RowBox[{"Eigenvalues", "[", " ", 
                    RowBox[{
                    RowBox[{"matrix", "[", " ", 
                    RowBox[{"{", 
                    RowBox[{"qx", ",", " ", "qy"}], "}"}], "  ", "]"}], " ", "//",
                     " ", "N"}], " ", "]"}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"qx", ",", " ", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", " ", "meshSize"}]}], 
                   "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"qy", ",", " ", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "/", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"qMax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", " ", "meshSize"}]}], 
                   "}"}]}], " ", "]"}], " ", "]"}], ",", "1"}], "]"}]}], " ", 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"omegaPointList2D", "[", "nn_", "]"}], " ", ":=", "  ", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "nn", "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@",
               " ", "eigTable2D"}]}], "  ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"range", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", " ", "lastNumMasses"}], ")"}], " ", "//", " ", 
               "Range"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot3D", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"omegaPointList2D", "[", "#", "]"}], " ", "&"}], "/@",
                " ", "range"}], ",", " ", 
              RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}], " ", ",", 
              " ", 
              RowBox[{"ImageSize", "\[Rule]", "primaryDisplaySize"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(q\), \(x\)]\)\>\"", ",", " ", 
                 "\"\<\!\(\*SubscriptBox[\(q\), \(y\)]\)\>\""}], "}"}]}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"showFreqPlot", " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"aa", ",", " ", "bb"}], "}"}], ",", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"aa", ",", " ", "bb"}], "}"}], " ", "=", "  ", 
             "qPlaneLoc"}], " ", ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Show", "[", 
             RowBox[{"{", 
              RowBox[{"freqPlot", ",", "\[IndentingNewLine]", 
               RowBox[{"Graphics3D", "[", " ", 
                RowBox[{"Polygon", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"aa", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"aa", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                   " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"bb", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"bb", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                   "  ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"bb", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"bb", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"aa", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"aa", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}]}], 
                  "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5"}], "}"}], 
         " ", "=", " ", "kDefaults"}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"ld", " ", "=", " ", "locDependent"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kArray", " ", "=", " ", 
         RowBox[{"constructKArray", "[", " ", "1", " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "n", "}"}], ",", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", "2"}], " ", ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"n", "\[LessEqual]", "lastNumMasses"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"kArray", " ", "=", " ", 
                RowBox[{"growKarray", "[", "n", "]"}]}], ")"}], " ", ";", " ", 
              RowBox[{"n", "++"}]}]}], "]"}]}]}], " ", "]"}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"qLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<qMaxVec\>\"", " ", "/.", " ", "ld"}], ")"}], "/", 
          "2"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"qPlaneLoc", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "qLoc"}], ",", "qLoc"}], "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"couplingData", " ", "=", " ", "calculateCouplings"}], " ", 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Dependent", " ", 
           RowBox[{"on", ":", " ", "ld"}]}], ",", "couplingData", ",", " ", 
          "mScalarArray"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"matrix", " ", "=", " ", "dynamicsMatrix"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"dependent", " ", "on", " ", "matrix"}], ",", " ", "qLoc", 
          ","}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dynamics", " ", "=", " ", "calcDynamics"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"dependent", " ", "on", " ", "dynamics"}], ",", " ", 
          "omegaIndex", ","}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dynPlot", " ", "=", " ", "showDynamics"}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"dependent", " ", "on", " ", "matrix"}], ",", " ", 
          "meshSize"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"freqPlot", " ", "=", " ", "frequencyPlotCalc"}], " ", ";"}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.599476680175184*^9, 3.5994767083217936`*^9}, 
   3.599478210767729*^9, {3.599478516648224*^9, 3.599478632719863*^9}, {
   3.599478869549409*^9, 3.5994789116788187`*^9}, {3.59947952345181*^9, 
   3.599479573497672*^9}, {3.599479618420242*^9, 3.599479634174143*^9}, {
   3.599479681978877*^9, 3.599479698216806*^9}, {3.5994797922841864`*^9, 
   3.5994798570498905`*^9}, {3.5994800338430023`*^9, 3.599480037308201*^9}, {
   3.599480165916557*^9, 3.5994801677626624`*^9}, 3.599994026848899*^9, 
   3.599994057062627*^9, {3.600039939788464*^9, 3.600039955407357*^9}, {
   3.60004002573238*^9, 3.600040068902849*^9}, {3.60004010720604*^9, 
   3.6000401151334934`*^9}, {3.60004019357498*^9, 3.6000402162082744`*^9}, {
   3.600040246838026*^9, 3.6000403266875935`*^9}, {3.600040813467436*^9, 
   3.6000408147485085`*^9}, 3.6000408652423973`*^9, {3.6000409426868267`*^9, 
   3.60004094675906*^9}, {3.600042641044967*^9, 3.600042691010825*^9}, {
   3.6000429178147974`*^9, 3.6000430935968513`*^9}, {3.600043132715089*^9, 
   3.6000431594426174`*^9}, {3.6000431901573744`*^9, 
   3.6000431937215786`*^9}, {3.600043227561514*^9, 3.600043227858531*^9}, {
   3.6000432950893764`*^9, 3.6000433474973736`*^9}, {3.600044470166587*^9, 
   3.600044470992634*^9}, {3.6000445182073345`*^9, 3.6000445942946863`*^9}, 
   3.6000454044111385`*^9, {3.6000454498487377`*^9, 3.6000455351646175`*^9}, {
   3.600045572910776*^9, 3.600045655603506*^9}, {3.600045893723126*^9, 
   3.600045930907253*^9}, 3.6000459661712694`*^9, {3.6000460021513276`*^9, 
   3.6000460260176926`*^9}, {3.600046066868029*^9, 3.600046099558899*^9}, {
   3.600046144590475*^9, 3.600046389403477*^9}, {3.6000464258725634`*^9, 
   3.6000464664098816`*^9}, {3.600060720228219*^9, 3.6000608593351755`*^9}, {
   3.600060894396181*^9, 3.6000609550926523`*^9}, {3.600060999320182*^9, 
   3.6000610734744234`*^9}, 3.600061110217525*^9, {3.6000611668887663`*^9, 
   3.6000614015561886`*^9}, {3.6000614342770605`*^9, 3.600061488400156*^9}, {
   3.6000615404481325`*^9, 3.600061690630723*^9}, {3.6000617485520353`*^9, 
   3.600061759621669*^9}, {3.6000617919785194`*^9, 3.6000618514769225`*^9}, {
   3.600061883674764*^9, 3.6000619111453357`*^9}, {3.6000620010684786`*^9, 
   3.600062003602624*^9}, {3.6000620415577946`*^9, 3.600062050510307*^9}, {
   3.6000621298648453`*^9, 3.600062180343733*^9}, 3.600062306094925*^9, {
   3.6000623489283752`*^9, 3.6000625921682878`*^9}, {3.600062637587886*^9, 
   3.6000626475364547`*^9}, {3.600062704261699*^9, 3.600062705116748*^9}, {
   3.600062861579697*^9, 3.600062949000697*^9}, {3.600062981547559*^9, 
   3.600062997929496*^9}, {3.600063608873884*^9, 3.600063687529222*^9}, {
   3.600076408611462*^9, 3.600076409765864*^9}, {3.600125750708497*^9, 
   3.600125850505205*^9}, {3.6001259105796413`*^9, 3.6001260753280644`*^9}, {
   3.6001261250799103`*^9, 3.600126228631833*^9}, {3.600126262137749*^9, 
   3.600126263887849*^9}, {3.6001263202560735`*^9, 3.6001263261844125`*^9}, {
   3.600126480486238*^9, 3.6001265355323863`*^9}, {3.6001266291897435`*^9, 
   3.600126785923708*^9}, {3.6001269046765003`*^9, 3.6001269060895815`*^9}, {
   3.600126953298281*^9, 3.600127182198374*^9}, {3.6001272137181764`*^9, 
   3.6001272321812325`*^9}, {3.6001639510711393`*^9, 3.600164108327134*^9}, {
   3.60016414409418*^9, 3.6001641746039248`*^9}, {3.600164227577955*^9, 
   3.6001642710164394`*^9}, {3.6001643387893157`*^9, 3.600164433608739*^9}, {
   3.600172705309454*^9, 3.600172710112729*^9}, {3.600172784590989*^9, 
   3.600172794344547*^9}, {3.600172876820264*^9, 3.600172911825266*^9}, {
   3.6001729658913584`*^9, 3.600173001422391*^9}, {3.6001730720794325`*^9, 
   3.6001730749305954`*^9}, {3.6001731118637075`*^9, 3.600173151228959*^9}, {
   3.6001732598571725`*^9, 3.600173302509612*^9}, {3.6001733585558176`*^9, 
   3.6001733657832313`*^9}, {3.6001734528532114`*^9, 
   3.6001734850280514`*^9}, {3.600173563904563*^9, 3.600173668366538*^9}, 
   3.6001737281759586`*^9, {3.600173788395403*^9, 3.60017378904044*^9}, {
   3.60017386089955*^9, 3.6001740632991266`*^9}, {3.6001740986521487`*^9, 
   3.600174265155672*^9}, 3.600174295429404*^9, {3.600174337361802*^9, 
   3.600174363052272*^9}, {3.600174434266345*^9, 3.6001744551705403`*^9}, {
   3.6001744883874407`*^9, 3.600174533911044*^9}, {3.6001745694960794`*^9, 
   3.600174603173006*^9}, {3.600174668054717*^9, 3.6001746824215384`*^9}, {
   3.600174762733132*^9, 3.600174768556465*^9}, {3.6001748126269855`*^9, 
   3.6001749398852644`*^9}, {3.600174992042248*^9, 3.60017500501799*^9}, {
   3.6001751821891236`*^9, 3.600175193682781*^9}, {3.6001752847279882`*^9, 
   3.60017538772988*^9}, {3.600175418375633*^9, 3.600175482964327*^9}, 
   3.6001755758816414`*^9, {3.6001757888368216`*^9, 3.600175863242078*^9}, {
   3.6002184485193825`*^9, 3.600218556230543*^9}, {3.600218589269433*^9, 
   3.6002186910712557`*^9}, {3.6002187387759843`*^9, 
   3.6002188316842985`*^9}, {3.600303240685166*^9, 3.6003032451334205`*^9}, {
   3.6003032774692698`*^9, 3.600303286398781*^9}, {3.6003033619251003`*^9, 
   3.6003034422506948`*^9}, {3.600303541714384*^9, 3.600303696076213*^9}, {
   3.6003037326513047`*^9, 3.6003037491852503`*^9}, {3.6003037867654*^9, 
   3.600303832632023*^9}, {3.6003038895802803`*^9, 3.600303897207717*^9}, {
   3.6003039300685964`*^9, 3.600303997783469*^9}, {3.600304051852562*^9, 
   3.600304058058917*^9}, {3.600304183484091*^9, 3.6003041906635017`*^9}, {
   3.6003048351193624`*^9, 3.600304837284486*^9}, {3.6003052361723013`*^9, 
   3.6003052561104417`*^9}, {3.6003052898393707`*^9, 3.600305300120959*^9}, {
   3.6003053690289*^9, 3.600305387361949*^9}, 3.600305496497191*^9, {
   3.6003055631000004`*^9, 3.6003056347460985`*^9}, {3.600305731196615*^9, 
   3.600305748088581*^9}, {3.6003063020562663`*^9, 3.6003063022182755`*^9}, {
   3.6003069665842752`*^9, 3.600306983924267*^9}, {3.6003072842484446`*^9, 
   3.600307333335252*^9}, {3.6003418076312695`*^9, 3.600341809197359*^9}, {
   3.600342069902271*^9, 3.6003420893973856`*^9}, {3.6003421228352985`*^9, 
   3.600342185005854*^9}, {3.600342244779273*^9, 3.6003423863123684`*^9}, {
   3.6003424773465753`*^9, 3.6003425153137465`*^9}, {3.6003467646287937`*^9, 
   3.6003468182628613`*^9}, {3.6003472741709375`*^9, 3.600347276668081*^9}, {
   3.600348225106328*^9, 3.600348387122595*^9}, {3.6003484400276213`*^9, 
   3.6003485752363544`*^9}, {3.600348699940487*^9, 3.600348809727767*^9}, {
   3.600348874319461*^9, 3.6003489284725585`*^9}, {3.6003490251590886`*^9, 
   3.60034905210863*^9}, {3.6003494304362693`*^9, 3.600349533664173*^9}, {
   3.600349567927133*^9, 3.6003496663387623`*^9}, {3.6003497076441245`*^9, 
   3.600349724405083*^9}, {3.6003499881451683`*^9, 3.6003500813164973`*^9}, 
   3.6003501142553816`*^9, {3.6003501642942433`*^9, 3.600350231669097*^9}, {
   3.6003503801545897`*^9, 3.6003504009007764`*^9}, {3.6003506418315573`*^9, 
   3.600350737717041*^9}, {3.600350774944171*^9, 3.6003508016226964`*^9}, {
   3.6003509431867933`*^9, 3.6003510133248053`*^9}, {3.600351052154026*^9, 
   3.6003511795453124`*^9}, {3.6003512167474403`*^9, 
   3.6003512575617747`*^9}, {3.60038105387221*^9, 3.6003810713992124`*^9}, {
   3.6003811545999713`*^9, 3.6003812043698177`*^9}, {3.600381345835909*^9, 
   3.6003813713973713`*^9}, {3.600381439920291*^9, 3.6003814498188567`*^9}, {
   3.600381489688137*^9, 3.600381582769461*^9}, {3.600381649026251*^9, 
   3.6003816939028177`*^9}, {3.6003821742092896`*^9, 3.6003822370898857`*^9}, 
   3.600382383915284*^9, {3.6003824443777423`*^9, 3.6003825016280165`*^9}, {
   3.600382644329179*^9, 3.6003826569358997`*^9}, {3.6003827443148975`*^9, 
   3.600382745713978*^9}, {3.6003827924786525`*^9, 3.6003828579923997`*^9}, {
   3.600382910291391*^9, 3.6003830047777953`*^9}, {3.6003830714446087`*^9, 
   3.6003831339681845`*^9}, {3.6003831777996917`*^9, 3.600383371254757*^9}, {
   3.600383491585639*^9, 3.6003835790776434`*^9}, {3.600383707562992*^9, 
   3.6003837246089673`*^9}, {3.600383907044402*^9, 3.6003839199741416`*^9}, 
   3.600383961180498*^9, {3.600385542245445*^9, 3.600385654511866*^9}, {
   3.600385752910494*^9, 3.6003857570477304`*^9}, {3.600385795982958*^9, 
   3.6003858255166473`*^9}, {3.600385910220492*^9, 3.600385980730525*^9}, {
   3.600386015830532*^9, 3.600386178684847*^9}, {3.6003862908362617`*^9, 
   3.600386577895681*^9}, {3.600386637615096*^9, 3.6003866561991596`*^9}, {
   3.6003869140499077`*^9, 3.600387013595601*^9}, {3.6003870490596294`*^9, 
   3.600387115118408*^9}, {3.600387177131955*^9, 3.6003872318420844`*^9}, {
   3.600387263959921*^9, 3.6003872680041523`*^9}, {3.600387381459642*^9, 
   3.600387400900754*^9}, {3.6003877231381845`*^9, 3.6003878220628433`*^9}, {
   3.6003878563508043`*^9, 3.6003878675214434`*^9}, {3.600387926865837*^9, 
   3.600388051723979*^9}, {3.6003880864119625`*^9, 3.6003881940161176`*^9}, {
   3.600388253702531*^9, 3.600388295394916*^9}, {3.6003883580555*^9, 
   3.6003883864561243`*^9}, {3.6003884284295254`*^9, 3.600388454121995*^9}, {
   3.600388660573803*^9, 3.600388698335963*^9}, {3.600388795510521*^9, 
   3.6003887994747477`*^9}, 3.6003888924000626`*^9, {3.600388925416951*^9, 
   3.6003889655182447`*^9}, {3.600389034292178*^9, 3.600389043365698*^9}, 
   3.600389341418745*^9, {3.6003893965178967`*^9, 3.600389608260008*^9}, {
   3.6003896424009604`*^9, 3.600389675826872*^9}, {3.6003897523912516`*^9, 
   3.6003897705892925`*^9}, {3.600423988359597*^9, 3.600424025264708*^9}, {
   3.600469907903123*^9, 3.600469939610936*^9}, {3.600472720879016*^9, 
   3.600472746487481*^9}, {3.6005084549587374`*^9, 3.6005084779530525`*^9}, {
   3.6005154240123444`*^9, 3.600515453859051*^9}, {3.6005154884220285`*^9, 
   3.6005155210308933`*^9}, 3.600515577112101*^9, 3.6005158046511154`*^9, {
   3.600516161886548*^9, 3.600516178422494*^9}, {3.6005163483602138`*^9, 
   3.600516501156953*^9}, {3.6005166876436195`*^9, 3.60051676334895*^9}, {
   3.6005167965358477`*^9, 3.6005168242244315`*^9}, {3.6005168623386116`*^9, 
   3.6005168627176332`*^9}, {3.6005175465337453`*^9, 3.600517690603986*^9}, {
   3.60051773299341*^9, 3.6005177787540274`*^9}, {3.6005179770673704`*^9, 
   3.600517997552542*^9}, 3.6005180312934723`*^9, {3.600518177121813*^9, 
   3.600518309192367*^9}, {3.6005183689717865`*^9, 3.600518631324792*^9}, {
   3.6005187253611703`*^9, 3.600518736034781*^9}, 3.600518771631817*^9, {
   3.6005188034076347`*^9, 3.600518876214799*^9}, {3.6005189077356014`*^9, 
   3.6005190034350753`*^9}, {3.600519042130289*^9, 3.600519166144382*^9}, {
   3.600519233668244*^9, 3.6005192812479653`*^9}, {3.600519547449191*^9, 
   3.6005196673090467`*^9}, {3.6005197013609943`*^9, 3.60051983502864*^9}, {
   3.60051988049724*^9, 3.6005199508872666`*^9}, {3.6005200390483093`*^9, 
   3.6005200798826447`*^9}, {3.6005201465084553`*^9, 
   3.6005201525047984`*^9}, {3.6005202777399616`*^9, 
   3.6005203585425835`*^9}, {3.6005203952826843`*^9, 
   3.6005205216439123`*^9}, {3.6005205531737156`*^9, 3.60052065290742*^9}, {
   3.6005206880624304`*^9, 3.600520743522603*^9}, {3.600520786550064*^9, 
   3.600520851926803*^9}, {3.6005208865607843`*^9, 3.6005209091470757`*^9}, {
   3.600521192993311*^9, 3.600521221875963*^9}, {3.6005213291000957`*^9, 
   3.600521358127756*^9}, {3.600521391914689*^9, 3.600521487981183*^9}, {
   3.6005215321837115`*^9, 3.6005217540133996`*^9}, {3.600522044369007*^9, 
   3.6005220945948796`*^9}, {3.6005221487349763`*^9, 
   3.6005221491259985`*^9}, {3.600522474537611*^9, 3.6005225434855547`*^9}, {
   3.6005226027689457`*^9, 3.6005226186088514`*^9}, 3.6005226882778363`*^9, {
   3.600522718900588*^9, 3.6005227263280125`*^9}, {3.6005227833612747`*^9, 
   3.600522810603833*^9}, {3.6005228571554956`*^9, 3.600523022647961*^9}, {
   3.6005231949568167`*^9, 3.6005232237344627`*^9}, {3.600523324616233*^9, 
   3.6005235540213537`*^9}, {3.600523708038163*^9, 3.600523708382183*^9}, {
   3.6005237893568144`*^9, 3.6005238910956335`*^9}, {3.6005240429893217`*^9, 
   3.6005240705799*^9}, {3.6005241141603923`*^9, 3.6005243309107895`*^9}, {
   3.600524372773184*^9, 3.6005243736052313`*^9}, {3.6005244152016106`*^9, 
   3.6005244609402266`*^9}, {3.6005245797320213`*^9, 3.600524601925291*^9}, {
   3.6005246385463853`*^9, 3.6005246391624203`*^9}, {3.6005247318007193`*^9, 
   3.600524751202829*^9}, {3.600524844260152*^9, 3.600525147462494*^9}, 
   3.600525262193056*^9, {3.6005253043144655`*^9, 3.6005253489930205`*^9}, {
   3.600525411817614*^9, 3.600525478920452*^9}, {3.600525509504201*^9, 
   3.600525581565323*^9}, {3.6005256119380603`*^9, 3.6005256188174534`*^9}, {
   3.600525763050703*^9, 3.6005257847609453`*^9}, {3.60052581981295*^9, 
   3.6005258256732855`*^9}, {3.6005259631071463`*^9, 
   3.6005259646252327`*^9}, {3.600526022301532*^9, 3.6005260267907887`*^9}, {
   3.6005610832720118`*^9, 3.6005610839640512`*^9}, {3.6005611342049246`*^9, 
   3.600561210293277*^9}, {3.6005612474784036`*^9, 3.6005612962191916`*^9}, {
   3.6005613861013327`*^9, 3.600561406536501*^9}, {3.600561452269117*^9, 
   3.60056147609748*^9}, {3.6005615268303814`*^9, 3.6005615756981764`*^9}, {
   3.600561605943907*^9, 3.600561659029943*^9}, {3.60056168940168*^9, 
   3.600561717386281*^9}, {3.60056179203055*^9, 3.60056183573705*^9}, {
   3.6005619034809246`*^9, 3.60056198032432*^9}, {3.600562015804349*^9, 
   3.600562064331125*^9}, {3.6005621789196787`*^9, 3.600562247108579*^9}, 
   3.6005623017637053`*^9, {3.600562334156558*^9, 3.6005623582579365`*^9}, 
   3.60056366329058*^9, {3.6005637199108186`*^9, 3.6005637395569425`*^9}, 
   3.6005637811223197`*^9, 3.6005638263989096`*^9, {3.6005638636260386`*^9, 
   3.6005638733485947`*^9}, {3.600563910702731*^9, 3.6005639167860794`*^9}, 
   3.6005639584014597`*^9, 3.600592405118178*^9, {3.6005924734900885`*^9, 
   3.600592476457258*^9}, 3.6005925389678335`*^9, {3.600592596508125*^9, 
   3.600592639978611*^9}, {3.6005926786248217`*^9, 3.6005927076944847`*^9}, {
   3.60059278961917*^9, 3.600592803910988*^9}, {3.6005931456625347`*^9, 
   3.6005931705379577`*^9}, {3.6005932331245375`*^9, 3.600593335052367*^9}, {
   3.6005984279836664`*^9, 3.600598445145648*^9}, 3.600599007613819*^9, 
   3.600602073114156*^9, {3.6006418604822645`*^9, 3.600641872084928*^9}, {
   3.6006419393207736`*^9, 3.6006419436190195`*^9}, 3.600641975671853*^9, {
   3.6006420410175905`*^9, 3.6006420481349974`*^9}, {3.6006421017900667`*^9, 
   3.600642108870471*^9}, {3.6006421550231113`*^9, 3.600642179155491*^9}, {
   3.6006422212929015`*^9, 3.6006422229319954`*^9}, {3.6006422677665596`*^9, 
   3.600642270526717*^9}, {3.6006423079738593`*^9, 3.6006423603908577`*^9}, {
   3.6006424006551604`*^9, 3.600642440724452*^9}, {3.600642515216713*^9, 
   3.6006425428222923`*^9}, {3.6006425842026587`*^9, 3.600642620100712*^9}, {
   3.600642719387391*^9, 3.6006427332671847`*^9}, {3.600642802649153*^9, 
   3.600642893726362*^9}, {3.6006429320535545`*^9, 3.6006429392279654`*^9}, {
   3.6006430149432955`*^9, 3.6006431868171263`*^9}, {3.600643251364818*^9, 
   3.6006433020967197`*^9}, {3.600643404116555*^9, 3.600643487580329*^9}, {
   3.6006435326099043`*^9, 3.6006437235808277`*^9}, {3.6006437576067734`*^9, 
   3.600643818698268*^9}, {3.600643852359193*^9, 3.600644079395179*^9}, 
   3.6006441329402413`*^9, {3.600644244543625*^9, 3.6006442475487967`*^9}, {
   3.6006443482515564`*^9, 3.6006443595602036`*^9}, {3.6006444391217537`*^9, 
   3.600644775002965*^9}, {3.600644806959793*^9, 3.600644895967884*^9}, {
   3.6006449722922497`*^9, 3.6006450040010633`*^9}, {3.6006450401441307`*^9, 
   3.600645067861716*^9}, {3.600645106194908*^9, 3.6006451147043953`*^9}, {
   3.600645147258257*^9, 3.6006451689084954`*^9}, {3.600645757418156*^9, 
   3.6006459037425256`*^9}, {3.600646013059778*^9, 3.600646036122097*^9}, {
   3.600646068811967*^9, 3.600646119496866*^9}, 3.6006461600061827`*^9, {
   3.6006462475221887`*^9, 3.6006463552363496`*^9}, {3.6006464088174143`*^9, 
   3.6006464365980034`*^9}, {3.6006465073090477`*^9, 3.600646522301905*^9}, {
   3.600646584879484*^9, 3.600646598514264*^9}, {3.6006466494101753`*^9, 
   3.600646650282225*^9}, {3.6006810633552575`*^9, 3.6006811320991898`*^9}, 
   3.600681180171939*^9, {3.600729418486834*^9, 3.600729545927123*^9}, {
   3.6007296328730965`*^9, 3.6007296421296253`*^9}, {3.6007297044211884`*^9, 
   3.600729707442361*^9}, {3.6007297401382313`*^9, 3.6007297442204647`*^9}, {
   3.6007297985865746`*^9, 3.600729817248642*^9}, {3.6007298635722914`*^9, 
   3.600730121762059*^9}, {3.6007302052938366`*^9, 3.6007302485773125`*^9}, {
   3.6007308196679773`*^9, 3.6007308302945848`*^9}, {3.6007309002255845`*^9, 
   3.6007309173115616`*^9}, {3.6007310306310434`*^9, 3.600731032581155*^9}, {
   3.600731110414607*^9, 3.600731157781316*^9}, {3.6007312057980623`*^9, 
   3.600731247419443*^9}, {3.6007313139662495`*^9, 3.6007314826848993`*^9}, {
   3.6007315391591296`*^9, 3.6007315456134987`*^9}, {3.6007316382597976`*^9, 
   3.60073164058193*^9}, {3.600731766119111*^9, 3.600731868699978*^9}, 
   3.6007320439460015`*^9, {3.6007321902813716`*^9, 3.600732270437956*^9}, {
   3.6007323628402414`*^9, 3.600732625490264*^9}, {3.600732697868404*^9, 
   3.6007327198796625`*^9}, {3.6007327499983854`*^9, 
   3.6007327579328394`*^9}, {3.6007328180142756`*^9, 
   3.6007328452128315`*^9}, {3.6007328906904325`*^9, 
   3.6007328939356184`*^9}, {3.600732935841015*^9, 3.600732936413048*^9}, {
   3.6007329797335253`*^9, 3.600733043596178*^9}, 3.6007330985483217`*^9, {
   3.6007331945858145`*^9, 3.6007332021402464`*^9}, {3.6007332324869823`*^9, 
   3.6007332591685085`*^9}, {3.600733295420582*^9, 3.6007333071932554`*^9}, {
   3.6007333873618402`*^9, 3.6007333905750246`*^9}, 3.600733455485737*^9, {
   3.6007335107428975`*^9, 3.6007335961027803`*^9}, {3.6007338010505023`*^9, 
   3.600733801763543*^9}, {3.600733903336353*^9, 3.6007339329690475`*^9}, {
   3.6007339735933714`*^9, 3.6007339763745303`*^9}, {3.600734070989942*^9, 
   3.6007341749198866`*^9}, {3.6007342425977573`*^9, 
   3.6007342610198107`*^9}, {3.6007355155645666`*^9, 
   3.6007355294263597`*^9}, {3.600735560149117*^9, 3.6007356829541407`*^9}, {
   3.600735772677273*^9, 3.6007358981314487`*^9}, {3.6007359572608304`*^9, 
   3.600736019006362*^9}, {3.600736049268093*^9, 3.6007361400962877`*^9}, {
   3.6007361874019938`*^9, 3.6007363156813307`*^9}, {3.6007363582377653`*^9, 
   3.600736396458951*^9}, {3.600736508578364*^9, 3.600736509197399*^9}, {
   3.600736813583809*^9, 3.600736871559125*^9}, {3.6007369200198975`*^9, 
   3.600736924024126*^9}, {3.6007369963252616`*^9, 3.600737111394843*^9}, {
   3.600737157352472*^9, 3.600737172340329*^9}, {3.600737203544114*^9, 
   3.6007372192550125`*^9}, {3.6007373508355384`*^9, 3.6007373784321165`*^9}, 
   3.600737413733136*^9, {3.600737612748519*^9, 3.6007376305155354`*^9}, {
   3.6007376911720047`*^9, 3.6007376920470543`*^9}, {3.6007377572047815`*^9, 
   3.600737762740098*^9}, {3.6007378555354056`*^9, 3.6007378757645626`*^9}, {
   3.6007379279305463`*^9, 3.6007379873289433`*^9}, {3.600738022877977*^9, 
   3.600738033265571*^9}, {3.6007380652814026`*^9, 3.600738172367527*^9}, {
   3.600738275592431*^9, 3.600738403632755*^9}, {3.6007385610827603`*^9, 
   3.6007387851475763`*^9}, {3.6007388573017035`*^9, 
   3.6007388705504613`*^9}, {3.600739011916547*^9, 3.600739013509638*^9}, {
   3.600739089654993*^9, 3.600739096480384*^9}, {3.600739217842325*^9, 
   3.600739225378756*^9}, {3.6007392680971994`*^9, 3.600739272172433*^9}, {
   3.6007393414073925`*^9, 3.600739373927253*^9}, {3.6007394195278606`*^9, 
   3.6007394673045936`*^9}, {3.600739500072468*^9, 3.6007395331703606`*^9}, {
   3.6007396715992785`*^9, 3.6007396900373335`*^9}, {3.600739804905903*^9, 
   3.60073982985633*^9}, {3.600739952837364*^9, 3.600740016419001*^9}, {
   3.600740081231708*^9, 3.600740094620474*^9}, {3.600771097824686*^9, 
   3.6007711076002455`*^9}, {3.6007711392440553`*^9, 
   3.6007711734700127`*^9}, {3.60077123637261*^9, 3.6007712394657874`*^9}, {
   3.600771350392132*^9, 3.6007714546370945`*^9}, {3.6007714875449767`*^9, 
   3.600771655335574*^9}, {3.6007716868373756`*^9, 3.600771710128708*^9}, {
   3.600771743282604*^9, 3.6007718542559514`*^9}, {3.6007722183017735`*^9, 
   3.600772293903098*^9}, {3.600772456821416*^9, 3.6007726752769113`*^9}, {
   3.600772713836117*^9, 3.60077272718188*^9}, {3.600772764086991*^9, 
   3.600772799269003*^9}, {3.600772832224888*^9, 3.6007728546121683`*^9}, {
   3.6007729004357896`*^9, 3.600772979607318*^9}, {3.600773061393996*^9, 
   3.6007731038084216`*^9}, {3.6007731554983783`*^9, 
   3.6007732025390687`*^9}, {3.6007732363050003`*^9, 3.6007732368900337`*^9}, 
   3.600773268436838*^9, {3.600773298645566*^9, 3.600773364496332*^9}, 
   3.600773477942821*^9, {3.600773508909592*^9, 3.6007735510630035`*^9}, {
   3.6007736153006773`*^9, 3.6007736252852488`*^9}, {3.600773673291994*^9, 
   3.600773739262768*^9}, {3.6007737955039845`*^9, 3.60077381046984*^9}, {
   3.6007738418866377`*^9, 3.6007739690279093`*^9}, {3.600774039509941*^9, 
   3.6007741621659565`*^9}, {3.6007742726012726`*^9, 
   3.6007742826228456`*^9}, {3.600774329779543*^9, 3.600774475079854*^9}, {
   3.6007745105658836`*^9, 3.6007745110669127`*^9}, {3.600774732251563*^9, 
   3.600774754722849*^9}, {3.600774809081958*^9, 3.6007748443949776`*^9}, {
   3.6007749087226567`*^9, 3.6007749090346746`*^9}, {3.60077494584378*^9, 
   3.6007749706441984`*^9}, {3.600775002184003*^9, 3.6007750512308083`*^9}, {
   3.60077514935142*^9, 3.600775230690072*^9}, {3.600775395890521*^9, 
   3.6007754188858366`*^9}, {3.600775480993389*^9, 3.600775510015049*^9}, 
   3.600775583832271*^9, {3.600775636462281*^9, 3.600775683700983*^9}, {
   3.600775732708786*^9, 3.600775733845851*^9}, {3.6007757966884456`*^9, 
   3.6007758080050926`*^9}, {3.6007759511012774`*^9, 3.600776038591282*^9}, {
   3.6007760895051937`*^9, 3.600776116965764*^9}, {3.600776615993307*^9, 
   3.6007766317492085`*^9}, 3.6007766670052247`*^9, {3.6007778807196455`*^9, 
   3.600777911799423*^9}, 3.60077795632497*^9, {3.60077900096672*^9, 
   3.6007792194632173`*^9}, {3.6007793307475824`*^9, 
   3.6007793367829275`*^9}, {3.6007794053578496`*^9, 3.600779407512973*^9}, {
   3.6007794516164956`*^9, 3.600779507341683*^9}, {3.6007796408603196`*^9, 
   3.6007796529120092`*^9}, {3.6007796943403788`*^9, 
   3.6007797058810387`*^9}, {3.600779752216689*^9, 3.600779756762949*^9}, {
   3.6007797932250347`*^9, 3.600779825507881*^9}, {3.6007799011982102`*^9, 
   3.6007799129118805`*^9}, {3.6007799514860864`*^9, 3.600779985887054*^9}, {
   3.6007800167258177`*^9, 3.600780077562298*^9}, 3.600780107767025*^9, {
   3.600782228114302*^9, 3.600782303554617*^9}, {3.6007823536254807`*^9, 
   3.6007823589687867`*^9}, {3.600782411723804*^9, 3.600782464465821*^9}, {
   3.6007825081483192`*^9, 3.600782794928722*^9}, {3.6007829639333887`*^9, 
   3.6007829775171657`*^9}, {3.600783010024025*^9, 3.6007830513033857`*^9}, {
   3.6007831005172005`*^9, 3.6007831259846573`*^9}, {3.6007831683720818`*^9, 
   3.6007831686480975`*^9}, {3.6007832171848736`*^9, 3.600783217935917*^9}, {
   3.6007832872168794`*^9, 3.6007833744788704`*^9}, {3.6007834163592663`*^9, 
   3.600783416930299*^9}, {3.600783481187974*^9, 3.6007835472517524`*^9}, {
   3.6007835803186436`*^9, 3.600783666571577*^9}, {3.6008200252777348`*^9, 
   3.6008200257507615`*^9}, {3.600820433137063*^9, 3.6008204931864977`*^9}, {
   3.6008205391341257`*^9, 3.6008205680037766`*^9}, {3.600820617766623*^9, 
   3.6008207715144167`*^9}, {3.60082083014077*^9, 3.600820896524567*^9}, 
   3.6008211677890825`*^9, {3.6008212007259665`*^9, 3.600821263541559*^9}, {
   3.6008213419600444`*^9, 3.6008214083228407`*^9}, {3.600821449850216*^9, 
   3.6008214564235916`*^9}, {3.6008215345050573`*^9, 3.600821568661011*^9}, {
   3.6008216009898605`*^9, 3.6008216606362715`*^9}, {3.600821705759853*^9, 
   3.6008217829162655`*^9}, {3.6008218503741245`*^9, 3.600821867536106*^9}, {
   3.6008222832558837`*^9, 3.6008225190433702`*^9}, {3.600822565887049*^9, 
   3.6008225707343264`*^9}, {3.6008226458446226`*^9, 
   3.6008226629506006`*^9}, {3.600878730551526*^9, 3.6008787408051124`*^9}, {
   3.6008787996364775`*^9, 3.6008788104980984`*^9}, {3.6008788938708673`*^9, 
   3.6008789228235235`*^9}, {3.6008789755585394`*^9, 
   3.6008789967977543`*^9}, {3.600879053032971*^9, 3.600879054277042*^9}, {
   3.600879085768843*^9, 3.600879201893485*^9}, {3.600879250958291*^9, 
   3.600879255704563*^9}, {3.600879317076073*^9, 3.6008793497449417`*^9}, {
   3.6008795845783734`*^9, 3.6008796775756927`*^9}, {3.6008797582953095`*^9, 
   3.6008797883700294`*^9}, {3.6008798604351516`*^9, 
   3.6008798671365347`*^9}, {3.600879955662598*^9, 3.6008799637270594`*^9}, {
   3.600880027928732*^9, 3.600880223249903*^9}, {3.600880292552867*^9, 
   3.600880309455834*^9}, {3.6008804250284443`*^9, 3.600880446682683*^9}, 
   3.6008804816936855`*^9, {3.6008805745569973`*^9, 3.600880640380762*^9}, {
   3.6008807034403687`*^9, 3.6008808347408786`*^9}, {3.6008809590109863`*^9, 
   3.6008809946840267`*^9}, {3.6008810375734797`*^9, 
   3.6008812044120226`*^9}, {3.6008812841825852`*^9, 3.600881495884694*^9}, 
   3.6008815292546024`*^9, 3.6008816008686986`*^9, {3.600881702870533*^9, 
   3.600881741219726*^9}, {3.6008818242524757`*^9, 3.600881840868426*^9}, {
   3.600881903028981*^9, 3.600881989486926*^9}, {3.60088238747869*^9, 
   3.600882464427091*^9}, {3.600882536513214*^9, 3.6008826022299733`*^9}, {
   3.600882727809156*^9, 3.600882752484567*^9}, {3.6008828290539465`*^9, 
   3.600882908747505*^9}, {3.6008829654887505`*^9, 3.600883003157905*^9}, {
   3.6008830431861944`*^9, 3.6008830481494784`*^9}, {3.60088313804362*^9, 
   3.600883156905699*^9}, {3.6008832733403587`*^9, 3.6008832768535595`*^9}, {
   3.6008833540759764`*^9, 3.600883355932082*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bRefreshDynamics$$ = 
    False, $CellContext`bRefreshDynPlot$$ = 
    False, $CellContext`bRefreshFreqPlot$$ = 
    False, $CellContext`bRefreshMatrix$$ = 
    False, $CellContext`couplingData$$ = {{{{
       1, 2, {0, 0}, 0.1, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{0.5, -0.5}, {-0.5, 
        0.5}}}, {
       1, 3, {0, 0}, 0.1, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
        0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
        0.7538461538461539}}}}, {{
       2, 1, {0, 0}, 0.1, 0.5, {0.9, 0.7}, {0.4, 1.2}, {{0.5, -0.5}, {-0.5, 
        0.5}}}, {
       2, 3, {0, 0}, 0.1, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
        0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
        0.047058823529411736`}}}}, {{
       3, 1, {0, 0}, 0.1, 0.6499999999999999, {0.9, 0.7}, {1.3, 1.4}, {{
        0.24615384615384625`, 0.4307692307692308}, {0.4307692307692308, 
        0.7538461538461539}}}, {
       3, 2, {0, 0}, 0.1, 0.8500000000000001, {0.4, 1.2}, {1.3, 1.4}, {{
        0.9529411764705882, 0.21176470588235285`}, {0.21176470588235285`, 
        0.047058823529411736`}}}}}, {{{
       1, 3, {-1, 0}, 0.1, 0.45000000000000007`, {0.9, 0.7}, {1.2, 
        0.09999999999999987}, {{
        0.19999999999999987`, -0.3999999999999999}, {-0.3999999999999999, 
        0.8}}}, {
       1, 2, {-1, 0}, 0.1, 1., {0.9, 0.7}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.36, 0.48}, {0.48, 
        0.6400000000000001}}}, {
       1, 2, {-1, 1}, 0.1, 1.6899999999999995`, {0.9, 0.7}, {
        2.1999999999999997`, 0.7}, {{0.9999999999999999, 0.}, {0., 0.}}}, {
       1, 1, {1, 0}, 0.1, 1.7000000000000002`, {0.9, 0.7}, {1., 2.}, {{
        0.005882352941176467, 0.0764705882352941}, {0.0764705882352941, 
        0.9941176470588234}}}, {
       1, 1, {-1, 0}, 0.1, 1.7000000000000002`, {0.9, 0.7}, {
        0.8, -0.6000000000000001}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       1, 3, {0, -1}, 0.1, 2.2600000000000002`, {0.9, 
        0.7}, {-0.5999999999999999, 0.5999999999999999}, {{0.9955752212389379,
         0.06637168141592925}, {0.06637168141592925, 
        0.004424778761061955}}}, {
       1, 3, {1, -1}, 0.1, 3.3999999999999995`, {0.9, 
        0.7}, {-0.4999999999999998, 1.9}, {{
        0.5764705882352942, -0.4941176470588236}, {-0.4941176470588236, 
        0.423529411764706}}}, {
       1, 2, {1, 0}, 0.1, 3.4000000000000004`, {0.9, 0.7}, {0.5, 2.5}, {{
        0.047058823529411764`, -0.21176470588235294`}, {-0.21176470588235294`,
         0.9529411764705882}}}, {
       1, 1, {1, -1}, 0.1, 3.4899999999999993`, {0.9, 
        0.7}, {-0.8999999999999998, 1.2}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 1, {-1, 1}, 0.1, 3.4899999999999993`, {0.9, 0.7}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       1, 2, {0, 1}, 0.1, 3.65, {0.9, 0.7}, {2.3, 2.}, {{0.5369863013698629, 
        0.4986301369863013}, {0.4986301369863013, 0.463013698630137}}}, {
       1, 3, {1, 0}, 0.1, 4.25, {0.9, 0.7}, {1.4000000000000001`, 2.7}, {{
        0.05882352941176473, 0.23529411764705888`}, {0.23529411764705888`, 
        0.9411764705882353}}}, {
       1, 1, {0, 1}, 0.1, 4.25, {0.9, 0.7}, {2.8, 1.5}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 1, {0, -1}, 0.1, 4.25, {0.9, 
        0.7}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       1, 3, {-1, -1}, 0.1, 4.520000000000001, {0.9, 
        0.7}, {-0.7, -0.7000000000000002}, {{0.5663716814159291, 
        0.49557522123893794`}, {0.49557522123893794`, 
        0.43362831858407075`}}}, {
       1, 3, {-1, 1}, 0.1, 4.879999999999999, {0.9, 0.7}, {
        3.0999999999999996`, 0.8999999999999999}, {{0.9918032786885246, 
        0.09016393442622948}, {0.09016393442622948, 0.008196721311475407}}}, {
       1, 2, {0, -1}, 0.1, 5.85, {0.9, 0.7}, {-1.5, 0.3999999999999999}, {{
        0.9846153846153846, 0.1230769230769231}, {0.1230769230769231, 
        0.015384615384615389`}}}, {
       1, 2, {1, -1}, 0.1, 6.289999999999999, {0.9, 0.7}, {-1.4, 1.7}, {{
        0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`, 
        0.15898251192368842`}}}, {
       1, 3, {0, 1}, 0.1, 7.540000000000002, {0.9, 0.7}, {3.2, 2.2}, {{
        0.7015915119363394, 0.45755968169761274`}, {0.45755968169761274`, 
        0.2984084880636605}}}, {
       1, 1, {1, 1}, 0.1, 8.409999999999998, {0.9, 0.7}, {2.9, 2.8}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       1, 1, {-1, -1}, 0.1, 8.41, {0.9, 0.7}, {-1.1, -1.4000000000000001`}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       1, 2, {-1, -1}, 0.1, 8.81, {0.9, 0.7}, {-1.6, -0.9000000000000001}, {{
        0.7094211123723042, 0.4540295119182747}, {0.4540295119182747, 
        0.29057888762769585`}}}, {
       1, 2, {1, 1}, 0.1, 9.009999999999998, {0.9, 0.7}, {2.4, 3.3}, {{
        0.24972253052164267`, 0.4328523862375139}, {0.4328523862375139, 
        0.7502774694783573}}}, {
       1, 3, {1, 1}, 0.1, 13.599999999999998`, {0.9, 0.7}, {3.3, 3.5}, {{
        0.423529411764706, 0.4941176470588236}, {0.4941176470588236, 
        0.5764705882352942}}}}, {{
       2, 1, {1, 0}, 0.1, 1., {0.4, 1.2}, {1., 2.}, {{0.36, 0.48}, {0.48, 
        0.6400000000000001}}}, {
       2, 3, {1, -1}, 0.1, 1.2999999999999996`, {0.4, 
        1.2}, {-0.4999999999999998, 1.9}, {{
        0.623076923076923, -0.4846153846153846}, {-0.4846153846153846, 
        0.376923076923077}}}, {
       2, 3, {0, -1}, 0.1, 1.3599999999999999`, {0.4, 
        1.2}, {-0.5999999999999999, 0.5999999999999999}, {{0.7352941176470588,
         0.44117647058823534`}, {0.44117647058823534`, 
        0.2647058823529413}}}, {
       2, 1, {1, -1}, 0.1, 1.6899999999999995`, {0.4, 
        1.2}, {-0.8999999999999998, 1.2}, {{0.9999999999999999, 0.}, {0., 
        0.}}}, {2, 2, {1, 0}, 0.1, 1.7000000000000002`, {0.4, 1.2}, {0.5, 
        2.5}, {{0.005882352941176467, 0.0764705882352941}, {
        0.0764705882352941, 0.9941176470588234}}}, {
       2, 2, {-1, 0}, 0.1, 1.7000000000000002`, {0.4, 1.2}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.005882352941176467, 
        0.0764705882352941}, {0.0764705882352941, 0.9941176470588234}}}, {
       2, 3, {-1, 0}, 0.1, 1.85, {0.4, 1.2}, {1.2, 0.09999999999999987}, {{
        0.34594594594594585`, -0.4756756756756756}, {-0.4756756756756756, 
        0.654054054054054}}}, {
       2, 3, {1, 0}, 0.1, 3.250000000000001, {0.4, 1.2}, {1.4000000000000001`,
         2.7}, {{0.3076923076923076, 0.46153846153846145`}, {
        0.46153846153846145`, 0.6923076923076924}}}, {
       2, 1, {-1, 0}, 0.1, 3.4000000000000004`, {0.4, 1.2}, {
        0.8, -0.6000000000000001}, {{
        0.047058823529411764`, -0.21176470588235294`}, {-0.21176470588235294`,
         0.9529411764705882}}}, {
       2, 2, {1, -1}, 0.1, 3.4899999999999993`, {0.4, 1.2}, {-1.4, 1.7}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 2, {-1, 1}, 0.1, 3.4899999999999993`, {0.4, 1.2}, {
        2.1999999999999997`, 0.7}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       2, 1, {0, -1}, 0.1, 3.65, {0.4, 
        1.2}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.5369863013698629, 0.4986301369863013}, {0.4986301369863013, 
        0.463013698630137}}}, {
       2, 2, {0, 1}, 0.1, 4.25, {0.4, 1.2}, {2.3, 2.}, {{0.8494117647058823, 
        0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 2, {0, -1}, 0.1, 4.25, {0.4, 1.2}, {-1.5, 0.3999999999999999}, {{
        0.8494117647058823, 0.35764705882352943`}, {0.35764705882352943`, 
        0.15058823529411766`}}}, {
       2, 3, {-1, -1}, 0.1, 4.82, {0.4, 1.2}, {-0.7, -0.7000000000000002}, {{
        0.25103734439834025`, 0.4336099585062241}, {0.4336099585062241, 
        0.7489626556016598}}}, {
       2, 1, {0, 1}, 0.1, 5.85, {0.4, 1.2}, {2.8, 1.5}, {{0.9846153846153846, 
        0.1230769230769231}, {0.1230769230769231, 0.015384615384615389`}}}, {
       2, 1, {-1, 1}, 0.1, 6.289999999999999, {0.4, 1.2}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.8410174880763116, -0.36565977742448336`}, {-0.36565977742448336`, 
        0.15898251192368842`}}}, {
       2, 3, {-1, 1}, 0.1, 7.379999999999998, {0.4, 1.2}, {
        3.0999999999999996`, 0.8999999999999999}, {{
        0.9878048780487806, -0.10975609756097565`}, {-0.10975609756097565`, 
        0.01219512195121952}}}, {
       2, 2, {1, 1}, 0.1, 8.409999999999998, {0.4, 1.2}, {2.4, 3.3}, {{
        0.4756242568370988, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629013}}}, {
       2, 2, {-1, -1}, 0.1, 8.41, {0.4, 1.2}, {-1.6, -0.9000000000000001}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       2, 1, {1, 1}, 0.1, 8.809999999999999, {0.4, 1.2}, {2.9, 2.8}, {{
        0.7094211123723043, 0.4540295119182747}, {0.4540295119182747, 
        0.2905788876276958}}}, {
       2, 3, {0, 1}, 0.1, 8.840000000000002, {0.4, 1.2}, {3.2, 2.2}, {{
        0.8868778280542986, 0.3167420814479638}, {0.3167420814479638, 
        0.11312217194570139`}}}, {
       2, 1, {-1, -1}, 0.1, 9.010000000000002, {0.4, 
        1.2}, {-1.1, -1.4000000000000001`}, {{0.24972253052164256`, 
        0.4328523862375138}, {0.4328523862375138, 0.7502774694783573}}}, {
       2, 3, {1, 1}, 0.1, 13.7, {0.4, 1.2}, {3.3, 3.5}, {{0.6138686131386862, 
        0.48686131386861314`}, {0.48686131386861314`, 
        0.3861313868613139}}}}, {{
       3, 1, {1, 0}, 0.1, 0.4500000000000001, {1.3, 1.4}, {1., 2.}, {{
        0.19999999999999998`, -0.39999999999999997`}, {-0.39999999999999997`, 
        0.7999999999999999}}}, {
       3, 2, {-1, 1}, 0.1, 1.2999999999999994`, {1.3, 1.4}, {
        2.1999999999999997`, 0.7}, {{
        0.6230769230769229, -0.48461538461538467`}, {-0.48461538461538467`, 
        0.3769230769230771}}}, {
       3, 2, {0, 1}, 0.1, 1.3599999999999997`, {1.3, 1.4}, {2.3, 2.}, {{
        0.7352941176470587, 0.4411764705882354}, {0.4411764705882354, 
        0.2647058823529413}}}, {
       3, 3, {1, 0}, 0.1, 1.7000000000000006`, {1.3, 1.4}, {
        1.4000000000000001`, 2.7}, {{0.005882352941176479, 
        0.07647058823529418}, {0.07647058823529418, 0.9941176470588236}}}, {
       3, 3, {-1, 0}, 0.1, 1.7000000000000002`, {1.3, 1.4}, {1.2, 
        0.09999999999999987}, {{0.00588235294117648, 0.07647058823529418}, {
        0.07647058823529418, 0.9941176470588234}}}, {
       3, 2, {1, 0}, 0.1, 1.8500000000000003`, {1.3, 1.4}, {0.5, 2.5}, {{
        0.34594594594594597`, -0.47567567567567565`}, {-0.47567567567567565`, 
        0.654054054054054}}}, {
       3, 1, {0, 1}, 0.1, 2.26, {1.3, 1.4}, {2.8, 1.5}, {{0.9955752212389379, 
        0.06637168141592925}, {0.06637168141592925, 0.004424778761061955}}}, {
       3, 2, {-1, 0}, 0.1, 3.25, {1.3, 1.4}, {
        0.30000000000000004`, -0.10000000000000009`}, {{0.3076923076923077, 
        0.46153846153846156`}, {0.46153846153846156`, 0.6923076923076923}}}, {
       3, 1, {-1, 1}, 0.1, 3.399999999999999, {1.3, 1.4}, {
        2.6999999999999997`, 0.19999999999999996`}, {{
        0.576470588235294, -0.4941176470588235}, {-0.4941176470588235, 
        0.423529411764706}}}, {
       3, 3, {1, -1}, 0.1, 3.4899999999999993`, {1.3, 
        1.4}, {-0.4999999999999998, 1.9}, {{
        0.9283667621776504, -0.25787965616045844`}, {-0.25787965616045844`, 
        0.07163323782234958}}}, {
       3, 3, {-1, 1}, 0.1, 3.4899999999999984`, {1.3, 1.4}, {
        3.0999999999999996`, 0.8999999999999999}, {{
        0.9283667621776505, -0.25787965616045855`}, {-0.25787965616045855`, 
        0.07163323782234961}}}, {
       3, 3, {0, 1}, 0.1, 4.250000000000001, {1.3, 1.4}, {3.2, 2.2}, {{
        0.8494117647058822, 0.3576470588235295}, {0.3576470588235295, 
        0.15058823529411772`}}}, {
       3, 3, {0, -1}, 0.1, 4.25, {1.3, 1.4}, {-0.5999999999999999, 
        0.5999999999999999}, {{0.8494117647058823, 0.35764705882352943`}, {
        0.35764705882352943`, 0.15058823529411766`}}}, {
       3, 1, {-1, 0}, 0.1, 4.25, {1.3, 1.4}, {0.8, -0.6000000000000001}, {{
        0.058823529411764705`, 0.23529411764705882`}, {0.23529411764705882`, 
        0.9411764705882353}}}, {
       3, 1, {1, 1}, 0.1, 4.52, {1.3, 1.4}, {2.9, 2.8}, {{0.5663716814159292, 
        0.49557522123893805`}, {0.49557522123893805`, 
        0.43362831858407075`}}}, {
       3, 2, {1, 1}, 0.1, 4.819999999999999, {1.3, 1.4}, {2.4, 3.3}, {{
        0.2510373443983402, 0.4336099585062241}, {0.4336099585062241, 
        0.7489626556016598}}}, {
       3, 1, {1, -1}, 0.1, 4.879999999999999, {1.3, 
        1.4}, {-0.8999999999999998, 1.2}, {{0.9918032786885246, 
        0.09016393442622948}, {0.09016393442622948, 0.008196721311475407}}}, {
       3, 2, {1, -1}, 0.1, 7.380000000000001, {1.3, 1.4}, {-1.4, 1.7}, {{
        0.9878048780487805, -0.10975609756097562`}, {-0.10975609756097562`, 
        0.012195121951219514`}}}, {
       3, 1, {0, -1}, 0.1, 7.539999999999999, {1.3, 
        1.4}, {-0.9999999999999999, -0.10000000000000009`}, {{
        0.7015915119363395, 0.45755968169761274`}, {0.45755968169761274`, 
        0.2984084880636605}}}, {
       3, 3, {1, 1}, 0.1, 8.41, {1.3, 1.4}, {3.3, 3.5}, {{0.4756242568370986, 
        0.49940546967895355`}, {0.49940546967895355`, 0.5243757431629014}}}, {
       3, 3, {-1, -1}, 0.1, 8.41, {1.3, 1.4}, {-0.7, -0.7000000000000002}, {{
        0.4756242568370987, 0.49940546967895366`}, {0.49940546967895366`, 
        0.5243757431629014}}}, {
       3, 2, {0, -1}, 0.1, 8.84, {1.3, 1.4}, {-1.5, 0.3999999999999999}, {{
        0.8868778280542985, 0.3167420814479638}, {0.3167420814479638, 
        0.11312217194570136`}}}, {
       3, 1, {-1, -1}, 0.1, 13.600000000000001`, {1.3, 
        1.4}, {-1.1, -1.4000000000000001`}, {{0.42352941176470593`, 
        0.4941176470588235}, {0.4941176470588235, 0.576470588235294}}}, {
       3, 2, {-1, -1}, 0.1, 13.700000000000001`, {1.3, 
        1.4}, {-1.6, -0.9000000000000001}, {{0.6138686131386862, 
        0.4868613138686131}, {0.4868613138686131, 
        0.38613138686131376`}}}}}}, $CellContext`defaultMass$$ = 
    20, $CellContext`dynamics$$ = {{
      Complex[0.3173617469986553, 3.688617941042188*^-18], {Complex[
      0.35969843718789196`, 0.27226729529245597`], Complex[
      0.42939613494001405`, 0.21288781729829054`], Complex[0.5071905540730446,
       0.], Complex[0.4279448468228231, 0.10819671371855188`], Complex[
      0.11909318993381236`, 0.12363957455304114`], Complex[0.2136602389720742,
       0.1989449215706899]}}, {
      Complex[0.30477423240832624`, -3.753488831533254*^-18], {
      Complex[-0.1663508104058965, 0.10200553685351521`], 
      Complex[-0.07686100923163236, 0.01957838795749223], 
      Complex[-0.24788325643724932`, 0.13468400107483472`], 
      Complex[-0.05818103856355794, 0.05917357729777205], Complex[
      0.746401011138262, 0.], Complex[
      0.5583949543614799, -0.015476477726489857`]}}, {
      Complex[0.28902272137294616`, 8.141610318127003*^-18], {
      Complex[-0.5503032361765722, -0.09678555760476856], 
      Complex[-0.40259754084611826`, -0.19534496965192255`], Complex[
      0.5803795483000135, 0.], Complex[
      0.34689795642963334`, -0.11763688838839424`], Complex[
      0.028775107629997534`, 0.05822178428726829], Complex[
      0.07058910650799555, -0.08565519433798541]}}, {
      Complex[0.25107356402129544`, -1.5185388270754306`*^-18], {Complex[
      0.3959853169630412, -0.2387438153964219], Complex[-0.2992588973542073, 
      0.09746089793223148], Complex[0.3970575936722469, 0.09923763033564945], 
      Complex[-0.3635928122680613, -0.09862989459825361], Complex[
      0.469284853215825, 0.], Complex[-0.38249183710534856`, 
      0.1057534726111319]}}, {
      Complex[0.2245047719177853, 1.3009782028608881`*^-17], {
      Complex[-0.39951648323794076`, 0.0034891496857819746`], Complex[
      0.6091963297015939, 0.], Complex[0.2915629556562667, 
      0.058820730329325645`], 
      Complex[-0.5274691752244992, -0.08824258505358211], Complex[
      0.05664421469028182, 0.1702104910242115], 
      Complex[-0.0486849003497891, -0.24540684473475638`]}}, {
      Complex[0.20240237009395803`, 1.6406296976339348`*^-17], {Complex[
      0.24997128952783934`, 0.10146189357123123`], 
      Complex[-0.2864232747651761, -0.10746811966933241`], Complex[
      0.26484882146360716`, -0.01465807562756806], 
      Complex[-0.47670317747189556`, 0.09439020475013568], 
      Complex[-0.3941325011920187, 0.03806487930552041], Complex[
      0.608545477662516, 0.]}}}, $CellContext`dynPlot$$ = Show[{
      Table[
       ListPlot[
        Part[$CellContext`points$99582, $CellContext`k][$CellContext`nu$99582 \
#], PlotRange -> {{(-$CellContext`windowHalfWidth$$)/
           
           2, $CellContext`windowHalfWidth$$}, \
{(-$CellContext`windowHalfWidth$$)/2, $CellContext`windowHalfWidth$$}}, 
        ImageSize -> $CellContext`primaryDisplaySize$$, PlotStyle -> Directive[
          PointSize[
           
           Sqrt[(Part[$CellContext`mScalarArray$$, \
$CellContext`k]/$CellContext`mMax$$)/500]], 
          $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`lastNumMasses$$}], 
      Graphics[{$CellContext`lines$99582}]}]& , $CellContext`dynTab$$ = 
    1, $CellContext`freqPlot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyEnXV0lEf7/nEvULRYcXlx18AGKBrc3b24uwRrgeLFnRCCFIJTCCyQhCS7
G0h2CVDcLaW4psCv37f3NU/3ut+eX/5oz5kzZ3b8muvDM3Pn7zWsVd8kiRIl
+vrrRImS/vX/Vnk2H476JfmpZquuvv/z+wT7wyzZt21vfsGG9Or7A459Wvza
3nVmsvgPmz027/zx9m0zBiz5/kcrvcV/06/aE/Z5XK4pVnoi+TtS+3GDKf4q
vy1Xg9J/TNtupTf5u3xb/4PDYoLXqPrYfpzdp9qMwDiqT4JtQYkXZT5+FWf7
HPe+Yfs6iUy7eiTrWLhwjMeko11PsjiypAr2UP54e5etqX06bLfS0S5PomEz
u028YNLRrqWb/d1L51/k/LZZ6wMy3Q26ZNLRrguPyrfvn/sS18f28/Wlnlqd
Vf1tV7eu3x+ZEf3wxo52Ha/49YWfrntMOtrV/31r25kRnD/ePnZF/ZMnS140
6WjXwidJO32ecsmko1253xYvdbTmJc5vK/DL7qNh/nEmHe0a8+5zs517VH1s
97Y2+LBsm4frb5tuX3n7xmGPrcV/0++bdmVs025cx0YXTDra9XF3pSSdRsVR
/nj70PZxics0stLRrl+CBid0fWaVj3a1autsPGuBh/Pbpgeei/WfZKWjXY93
pW5fZJqH62Pb5Vs02LNY1d+2oGXz59uOemz4PbSrxLDYV/UuXzDpaNfBlTlP
/BbH+ePtqcav7FxsqpWOdq07lLZu455WOv7KnIiZmbO9ym/j/GhXSiof7frf
9Umwof7SXhvahfYiHe2i/rGhXQ+9+9OGdlH/m9+n8UJ+G42vDe2i+YD62Gj+
oP42zLc2f89P065pMj+RjnY9kPnsnT/ePk7mP9LRriKyXpCOduWR9UX5bfNl
PSLdrC9Zv1QfWz9Z71R/G/YH2U980S7sJ0hHu2j/8UW74rz3K1+0i/Y333/Z
D5HfRvunL9rVyXu/RX1stD+j/jbs57L/m3Zh/0c62kV6Ydo12FtfTLtIj0y7
SL9Mu0jvTLtIH027SE9Nu1h/0a7B1ytHfj/Do3T5YraH4+5FuJUu1/lcsUT3
Q26ly8nabNvdxO5Wuhzefnlkg99UfluqQ5MqHnvtVrrc/uK+B30yq/rYqs0p
eK9aBT4nJNi6vbt36HgV1tkE+6XZcQfWhrqVLk8OnHPtYbBb6fLpp7NKFXO7
lS63HrK9+IotHqXL7zLlrrVO67ht45PGD/pt9ihdfnP4+dyZP6lzgu0/6e5d
LddB1d92/V3uBiU8bqXLo2f8OaPoSbfS5YjZH149Sso6GG9PnzvZgl9GeJQu
56l+4+fqyz1Kl/e+z5Qj3xaV37bGfbB58FaP0uVNlzLsWd9f67LP+iLJYw+p
+tvSF3+QUPSAW+nylmdJPq0srXTQPqrYyJulqrMOxttXlbhf2FNY6ay942i/
LKGJtC4n7LjTwv+RW+ly80Wbvn7hcitdvr7u7ZNnR91Kl8vOvlH0zVFVf1vx
Ard7rvziVrpc9V1YkfYTlA7aP73udPTlO84fb+/RILb44QtupcupXlx/O+C8
W+nyguAM+7u6VH4b50e7ulH5aNf/rk+CDfVnXUZ7WZepf4x+/ebdn0a/qP/N
79N4Gf2i8TX6RfPB6BfNH6NfmG+syxllfrIu22Q+sy5vkfnPurxK1gvrcrCs
L9blvLIeWZdTy/plXcZ6Z10eIfsD6zL2E9Zl2n+Mfr313q+MftH+ZvSL9kOj
X7R/Gv0K9d5vjX7R/mz0C/s56zL2f9Zl0gvTrk7e+mLaRXpk2kX6ZdpFemfa
VdtbH027SE9Nu1h/0a7ctVMU6zjNrXT5baZ8FcpHxyhdTp2kSv/rAdFKlwMv
+C2akD1a6XLS5MMfjcqr8tteejZvWLksRuny3fBDIdkOqfrYns/9o9CW63xO
SLDtyxH6cXEE62yCPXjd4HznM2ld9lSIu5wrt9blxpWXdPrmmNblzzleLch3
1a10uc6Iyr394lV+W6Lee79e+tStdfnLnsRpH6r62DZ0fN49a5yqv61V5ukb
2wzUujxm4MvtS6/EKl1ekChzq25HOX+8vXhSZ6oyN91Kl0dUTHj9Vbxb6XKK
7WnG5vhD5bf92L2kf/kHbqXL4xqn6+RzXp0TbA3aLd0/pInW5cY9/lh/4XWs
0uXJ+ydOqLVP6aD97ZcCNYLcrIPx9hErX2xtdUXprD3z06MNbn2KVbr8ZUW+
jruznVO6/PHurZP9rruULudItmZ2r9LRSpc3tzvlXvIwWunyyslDG8/IrnW5
muuB7dM+pYP2pn92nx4zRevy0O/L+USXOKd0uVzgvexv+riULg9bWS2pT22X
0mXOj3YNp/LRrv9dnwQb6s+6jPayLlP/GP3K5d2fRr+o/83v03gZ/aLxNfpF
88HoF80fo1+Yb6zLTWR+si43lPnMujxe5j/r8g+yXliXU8v6Yl0eKeuRdRnr
l3UZ6511ebTsD6zL2E9Yl2n/sXTZe78y+kX7m9Ev2g+NftH+afSrofd+a/SL
9mejX9jPWZex/7Muk16Ydj321hfTLtIj0y7SL9Mu0jvTrnTe+mjaRXpq2sX6
i3bdKbTyyoqvY5QuF6raJ0/OJeeULmcY0+s/F+Y6lS7X7Ly9xsRfHUqXe1Q5
Prf2cYfS5WsnVq3NftSpdNnV5PG0hGdOpcvbnTWWH8/pUrpcfbTnYYF2LqXL
N89Onzlwd4zS5WNfTm+7Gc354+0BkTVX9mrrUro88cCZHulyuJQuR5wece3p
e6fS5WR/vGoUm9SldLlCzhHz6vq6lC7nbX15645AVX/bugJdQtMMj1a6PPP9
uyJ1cp9Tutyh6/1GwWk5f7w99m3IsvGTXEqX17Z626lxIZfS5S2Tw7p3++hU
utwwS9VjDxO7lC5nalPuaPXSLqXL7R4tiSsy1qV0+T897yer3vGc0uW46fkq
DRnnUrpcdOyNfB+qu5QuP2xxLYdvMpfS5Ygj2+csuuZUulymbnzXgNJOpcul
CvmFdNzqULo8tsPURb97HEqXwwdcan4ksdbla0GBgx9eO6d0eVvvZ4uD5ruU
Lv+5LJ27fQuX0uUsBWetH1TTqXT5+8LtEvwjHEqXL85oNHjsKYfSZc6PdmWg
8tGu/12fBBvqz7qM9rIuU/9Y+uXdn0a/qP/N79N4Gf2i8TX6dc97Phj9ovlj
9AvzjXW5iMxP1uXWMp9Zl9PL/GddbizrhXV5q6wv1uV1sh5Zl92yflmXO8t6
Z12eJfsD6zL2E9Zl2n+MftF+ZfSL9jejX7QfGv2i/dPo11bv/dboF+3PRr+w
n7MuY/9nXSa9MO1yeOuLaRfpkWkX6ZdpF+mdaVdGb3007SI9Ne1i/UW7bvdb
OWdpiEvp8qEqzcZe2ehUurxrTPqeG0tGKV1OUej7WsmXRChdPrk6SZHDf0Qq
XT5ypHKKkF0OpcvHSz/J2yip1uWa/o9v1avK9UmwXTlS5XL28k6ly1tqVZwx
3KF00H4rZda+rXZz/nh76uez0tX4EKV0ucHxHoVa34xSutw2oECv+M8qv23a
9IhGs0c7lC7vSWU/fuVrp9Llt5NLP964T9XfNvNgvVQHKilds8cN+zrJpq5K
B+0N76Y/4puc88fbnybukKT7OKWz9uOJsvRucMWhdPl6xX1+qxo4lC6v9g2u
f/p5lNJlvyqpyuZ8EKV0ufmElUHbcjmULsfZBntSz2SdTbBn/zro2uAPSgft
2760iatXzql02f9i+oozCiqdtTcL3rCn4x2H0uW6G25nbtHaoXQ5aZV9A9Mm
j1C6nKLYvK1tp0coXT46Yv+3hZs7lC5Hdj3R9GIhpWv2oaFT1v1nrEPpcr3s
U5rd3OhQujxobfdT7aYpnbVvubfr1LkkdqW/nI76D6ZyUP///bsJNtST9Rft
Yv2lfjA6lc6734xOUT+b36dxMTpF42h0aqb3uBudonlidArzivX3ssxD1t82
Mm9ZfxvKPGf9XSPrgvUX64j194SsO9bfZ7JOWX+/k3XN+hsr+wDrL/YN1l/a
Z4xO0b5kdIr2MaNTtO8ZnaJ90uhUcu991egU7cNGp7Bvs/5in2f9JV0w7Trp
rSOmXaQ7pl2kU6ZdpGumXXu8ddC0i3TTtIt1Fu2qdD17oVaPopT+lnubov/j
n6OU/o5btPzUiNpnlf7GVog+NWx2iNLfkP7Zsl6/fEzpb5cuX/aEXT2h9Dd8
eL1MOyJOKf19u3Ld69nVQ5X+NlifPWWzwHClvx0XdUgcFxKl9PfA6zm3+w+J
Uvq7dlffjP26RCj9vTypScXCZ88q/U2boe+o5d+o/LYdSfNMHNMuQunvkezJ
+nX5OULp76fH3bZ+TBSp9DfZ3tD9E7ZGKv0ddnxB8aaJlN7ZO7s6B6Zowvnj
7fVLlP9Yen+E0t86Cx90LtskQunvmbF7pyZOqvLbDs8oGthj51mlv10fpvhw
b9xZpb91Fj+/mrKEqr/t+vt6k7ttiVL6O7tYwvjAc2eV/t4Nbdl87cwwpb/L
T/02oenN00p/M3QLHxv04qTS39b9pl56u+u40t/0qdMMKXH5qNLfq2VHvn0c
f0rpb3DLOvY90yKV/pa+nLdZoogopb+Ro/s93NwiQunvgeW9Z/2x+IzS30aj
LsW93/ir0t8nq1ZVKpFkp/LFbZJMS7fmaolarMuc33BCKh/t+t/1+etcIfVn
XUZ7WZepf4x+3fHuT6Nf1P/m92m8jH7R+Br9ovlg9Ivmj9EvzDfW5VsyP1mX
MZ9Zl7vJ/GddPiLrhXU5UtYX67KvrEfWZT9Zv6zL7WW9q39Hlv2BdRn7Cesy
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
v3fYIoYPO9P5N7fiyVfc3+wu+Q/e7sflE08utGDT4P2/uxVPxjtgzJM3N63S
a9JWNR9s/ivyR49cpXiCfdZvZ/ueO6h4gp3nIeZV5pll7gW/jVU8Ge+eMU+u
nWht/Znhip+Yd8OYJydNfj007im396CPaS/x5Hq3nza681iNl3kPjXnyZ78k
kzpEuRVPxvtUzJObNe128dQ15idWfubJIRevV+p/w614Mt5hY55cedv1Xwpe
VfPT5Gee/KLv2CbBd9yKJ3P9MW/PZOz07bjRzLusd9iYJ6dt9fna/+kd82Su
P+b5q/a1fzy9WO0n5n055skf7OEZyyfEKJ6cZOXf74kxT/5uQtPYI39y/kSJ
kJ95cnTF1P+53UnzZNSHefK5akc2ZCmjeTLewWOe3Lf908lzVyqeYL0XRzwZ
esQ8GeuLeXKBqae7+gQpfqLKh3+Z3bZb+7D3qj99uD+xLsIGnHs+cmeM4smf
5J035sk3o4ot/Xq34j+mPsyTfy6SfHPuv+rjzU/i7eZdO+LJruDJd/adjFE8
Obe8R8c8uW7g4HOVD8Qonoz8zJP7xT4aefdHqz7gycOkPsyTs2+KG1jqmxjm
h/YKeK+PeHKJ3Xsnnh/B/Rlvy0X1x7qI9v3QNNemGMWTt8q7fMyTV23wPxpT
M1rxZLwfyDy5avZSpV+XiCZe+o93CIknDxs4feq7cponm/cSiScPH1r6dfEU
micjP/PkkT797wc11jwZ+Zknd5Jzkff8sd5pZJ58PvOtg66jMYonb6H+xHo5
VPOrni0Xuah/jvmgf5gnZwvvFV9qs4vng3m/kXly6Wkrbk+fF6N4MuYn8+Tw
I/dvZf8lWvHkXDSf4fcLt7Wf2xVl1acd1Yd5cpiUj/z8ziTz5CJSPvPkXFR/
rIus0j/Mkz/SfgK/X1L6h/YTWxPaT7Auzsn40n5o8jNPPijjyzwZ9WGeXEXW
C/NkvG/JPBnzmfZ/2//eDxNsAwKK17P3UfPZvNvJPBnrkXky3rdknozymSdj
fTFPdsr+wzy5AZUPnoz9h3ky+od5clbZP5knZ5LzBvPk4rJ/Mk9GfZgn15H9
n3nyWDmfME/+7s2Llf3mxCiePFzOS8yTl4t+MU9GfubJDtEv5slz5PzJPPm0
6C/zZORnngz9ZZ48guqPdZFfzg/Mk3HeZp7sv+DEoH57YhRPTinnbebJdeU8
xjw5leRnntxHzkvMk3H+YZ6cSfwF82S8L8o8Gec95sl4T5V58kjRL+bJeFeW
eTLOt8yT8S4r8+T0jts3/hzjVjw5NfUn1gXO58yT8d4s8+S8u/J1Clnt1jxZ
3oNlnlxF/IXiyZKfeTL8BfNk1Id5clPxR8yT4a+ZJ9v3Pj294YFb82SqP9bF
d+LvmCfjnVvmyV/E3zFPBn9gngx/yjwZ+ZknJxd/yjwZ9WGeXET8O/NkvMfL
PBl+nHky6sM8GZyHeTI4APPk8+J3mCdjvTBPBsdgnjzr1tTE6++pfjDvCTNP
ripchXky8jNPfiVchXnyc+E8zJPBeZgnc30wP38V7sQ8Ge8eM08eI9yJefJE
4WDMkwcJB2OejPKZJ5cVLsc8Ge8tM09eK1yOefJd4Y3Mk8EPmSdjX2WePEN4
EfPk2sI5mScXFy7KPLm5cFTmyUHCXZkng/cyT+4rvJd5MnNj8OQXd8ovffv6
vOLJfRK17FRrVLTiyc9yLbs9eW+04sm7fdLtudQoWvFkvCfMPPnKty16rP3D
qXjy8yUjBw6d61Q8uUvKSs3qDuR0p33Im1qviwxyKp68fHK2/dk7ORVPrvky
5d15M1yKJ+O9VubJ88eMCqpd/rziyR3lfVTmybfepC2TqHuM4sk/7vG8i/jd
pXhyByoHPNltSx7if1n1g+1527MjX193Kp78eemS4T8GuxRPNuUzT+4+5ech
A1yKJ+M9Z+bJA9b/0efBB6fiydMrlJqd9xuX4smF42wT6zR2KZ5syieenGbm
ta67vnUpnox3pJknPx3ZbtG0UlzP17beGdKs29/DpXhyuTQHc61L71I82ZRP
PLli3lzfBn5wKp6M96uZJxd45yzRO9ylePL3zpVx2e4qnmDP/szfvvC0S/Fk
noeYV/lD/1wx79h5xZPxHi/z5FOPex5qs9WleDLeK2ae3LrStQvZv3B7D/qY
9hJPLpI4m/+1JGq8zDvezJPzXbpV7v1cl+LJeGebefK1ra5212wuxZORn3ly
2s2ZEqfI4VI8Ge+HM08uWKVlflsVNT9NfubJp1sOrF4vi0vxZK4/5m255Oef
D07kUjwZ70szT17tSVZ65CC1HlX9Mc+P5znkM2Ch2k/Mu+jMk+87hncZt8Op
eDLewWae/PjmpW4zlnN+691s5skTko9zffPKpXgy6sM8+c7pfH223ItWPBnv
tzNPHjhvxcw7vV3ME6x3zoknQ4+YJ1+U9cU8+evZYyYE1XMxP1Hlw7+E7Po6
Xf1Vqj99uD+xLmqsq318Uyun4sl4n5x58oiRr9/4FXcx/zH1YZ78uVpw57hN
TuIn/3jvnXhy98pXCz0Z5FQ8Ge/SM0/+7uKlrZlnOBVPRn7myUOfZs30aYFV
Hz+qD/Pk1X989k3dysn80HqXnnhyv3w/7E+9jfsz3jaO6o918VPQwUzPjqv9
0Ly3zzy56cFNuzMnOEx9GlN9mCfP7JWz70/vHMRL//F+PvHkVQ1z55+7I1rx
5Kt45594cpLkZ49mXHtO8WS8k888efCGjhs3rohWPBn5mSfjXOQ9f6z4AsyT
e3x+sTjlDpfiydyfWC+JWzfO8mgf988xH/QP82RXQEznoYccPB9M3AHmydXH
hpctsNSpeDLiAjBPPltzxopdqZyKJ4+n+Wz8fq1B4Ueirfq0o/owTz4j5SM/
x0dQ3ydL+cyTuf5YF+gf5sm8n8DvV5P+of3ExvsJ1kVPGV/aD01+5slJZHyZ
J6M+zJP9Zb0wT8b+yTx5iMxn2v9tn/7nfviXn0vh/NzgYDTPZ1ugzGfmyViP
zJPbiH4xT/aV8pknY30xT14g+w/z5NZUPngy9h/myegf5snYP5kn47zBPLmv
7J/Mk1tJfZgn15X9n3ky4lMwTy5aY/W8232diicjjgbz5A+iX8yTkZ95ck/R
L+bJiIvBPBn6yzwZ+ZknDxf9ZZ7M9ce6yCTnB+bJOG8zTx4QkzL9tWZOxZNx
3maejPMY82TE+2CePEDOS8yT4S+YJ+cTf8E8+YbExWCePE7Oe8yTEQeEeXJi
0S/myYiHwjz5VznfMk9GPBHmyZVyVn41Nl71p89W6k/z75JyPmeejDgpzJPr
zkhctlJnl+LJiGPCPDmf+AvmycjPPPmU+AvmyagP8+Sr4o+YJyOeC/PkWivb
bMma36V4Mtcf66Ko+DvmyYjPwjw5r/g75smII8M8+bT4U+bJyM88Gf6UeTLq
wzy5kvh35smII8M8+Rvx48yTUR/mybeF8zBPBgdgnnxb/A7zZKwX5sngGMyT
06+q2+NQapfiyYiDwzw5rXAV5snIzzwZXIV58jThPMyTiwjnYZ7M9TFxXoQ7
MU9GvB7myf2FOzFPBgdjnvxFOBjzZJTPPHm+cDnmyYgTxDwZXI55Mngj82Tw
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
72JcEPcZ+TGO9yRuONKRf/++YUOq7UEchPtmvGYnOhvS8cYFk47xquif3P+7
bnEmnfsN6RivrxJtnlp/3QVby3/pB+THeCEeuqmPjNeXz7kKvjjxV3v/+3cM
/MGeavzKzsWmWvkxXojDjnSM1+NPTRYmnWWloz7TA8/F+k+y0jEulf4zeHmb
KVY6xuXxrtTti0yz0jEujceuSvpprsfW/F/6H/mRvsu3aLBnsZWOccndqEZM
SIDHnP8wLsOTjr2cof0Fk45xuZGyY7rEO6383D9Ix7i4V7Rs/uswKx39v+5Q
2rqNe/7jd6X/+1Yb2rt8Fysd/VzmRMzMnO2tdPRzP8nf+F/6DfnR//y76H+u
p/kOltqF/ud+QD8fXJnzxG9xVjr6Gf0p/W9DP6P/kY5+biTji3T080Pv+WA4
WAWZP1PDCpas82G/D7cX+dH/NA9t6H+at7Z/mec29H+iL3+vlzreXNG25N24
7rMWWe1FfWjd2dD/6WX9Ih39T+vdlI/9wa/zleodmkT5cP8jP9I/7q6UpNMo
qxyMC/Yf+fcUMy7Yr5COcdkr+yHSMS7jZP9EOsaluey3SEf/F5F9yfyu9P8W
2ec/eZ/z7XGis8iPcckjeoF0jEsb0Z12/9KfyI9xmS/6hXSMy3RvHfRF/aGD
yI/yR4ueIh3jNUT0F+kYF8RVRzrGZbHouPy7sK8ZF4mr3o76Abop5weTH+cH
pGMcK8n5BOUjvaz3uUj1P9LN98be5yLVP6Y+Mr44j/2tU8lN+YPlfLtd6oPy
P3ifD33/5bzni3Ev730+9MX4erzPk74Y32xyLkV9UP/ccj5HfVD/Dt7nZF+M
eyfvc68vxr2AnJPb/8u4Iz/SEW8d6ZgPOIfLed6ML87zSMc4fvT2BaqfkY5+
DvX2HaYfyKeYfiBfY8aFfJAZF/imv/99Svcb8mO8yH+Z8YKPQzrKId9n+p98
ounnrjOTxX/YbKWjn+FD2Z/m/5g+X1Ah7U9PS/wj9qcL0iyM3XzSSkf+Op8r
luh+yEpH/xf8z9P4tsfcyp8i3hP702Rttu1uYrfKwbjcj1tXvbHLSse4hLdf
HtngNysd49I/xQ+fEz200tH/qQ5NqnjstZWO/g8OX/FThmRWfdD/7S/ue9An
s5WO/m+4Z1Df5gWtdPR/tTkF71WrYKWj/121kkVPrORR/hTxodifFs9WOrL2
X/3G/jSvI3nyH067lT/FeLE/nVcqW8nu1T3KnyI+O/tTjAv708KnelbMsc2j
/Cnio7E/dU6tsHTGX+cf9qeIw87+FHHZ2J86YvJUGbPSo/zpG4lDx/50Uc8n
+66M9Ch/inFhf4r4gOxPk/pPX7Inq0f5U8Q9Z3+6IWlC9VS33SYd4xUf89nm
rG7l57j27E+zlXiR8fVf+wz7U/QP+1PEo2d/2m/1+Pal1nqUP0U8SvaniNvO
/nTb/d4VH23xKH+K+OPsTxHPnf1pnrZ3PgfOttIxjohXzv50aPW1HY+k1/4U
ccPZnyJuOPvTbb3nTJ9s3lW2/GmaBdX/6FXRo/xp8p27/BOV9Sh/in5jf/q+
+Td5/P7aH9ifoh/YnyK+KvvT4hlW7t/y177E/hTxr9mfIq4r+9Nt62rv+/WK
W/lTxNVlf5pthd/U52fcyp8iLjb705RLBv348q909qfof/aniO/M/vQXz83v
6l9zK3+a8+2iZwFVPcqflv52xYg2D9zKn5p45fKHcam47tLiDG638qcmPjh+
V/rfETO2zd1ot/KnJh63/KGfkZ/9qYknLn9Gd+h30f8VqJ4opxu1y/A96gfz
bhjizssf+jmX9Cf7U/Q/+9NkMr7sT3/zng/GB2WR+cP+FO1lf0rz0Pgjmrfm
/E/z3PggrBf2p4jDy/6U1p3xQR9k/bI/pfVuyk8h+wP7U/Q/+1PE82V/iv2H
/WmQ7FfsT0fIfsj+FPGU2Z9iv2V/ivjF7E8DZJ9nf4p4r+xPESeX/Wl/0R32
p+hP9qeIV8v+NIu3DppzO3SQ/Sni2LI/fST6y/4UcVrZn64THWd/ijit7E/R
D+xPcX5gf7pYzifsT1d5n4tU/7M/dXqfi1T/sD/FeYz9aSc537I/neJ9PjQ+
iM57xgfR+dD4HTpPGr8zX86l7E9xPmd/Sudk449Cvc+9xh/hnMz+FOPO/hTx
W9mf4hzO/hTnefanjbx9gepn9qf7vH2H6gf2p/28fY0ZF/JBZlzuiW9ifxrq
7e/MeJH/MuNVQHwc+9Pa3r7P9D/5RNPPF7M9HHcvwkpHP8OHsj9NXXzZL/UC
Y5U/bSTxFNifflx2/MGmjeeVP02dpEr/6wHRyp+2/772pBLdopU//STxI9if
Bl7wWzQhu1UOxiXu9+vHx+ay0jEuyZIPfzQqr5WOcRl98belLQta9UT/v/Rs
3rByWYzyp/GuXaXaB8Qqf3o3/FBItn/4bvT/kyLu4V2irHT0//O5fxTact1K
R//HxFxetPqv+cD+FHFg2Z/WebRp8pjs2p9mqHQgR87vtT9tLOPF/rRQsTOj
1jncyp8i3iv7U8T1YH+6KTzL+0p33cqfIt4K+9P8T0YeG/q7W/lTxHVlf4o4
L+xPJ5bb+2OzJ27tTyWuDfvTqN3ny2a84Vb+FOPC/hTxhtifjq989EvFjW7l
TxFHlf1pokNJpoxvpP3p1cTDfjnrtNI5Ti7703O57k799r5b+VP0D/tTxLdl
fxry1P/QMhPf1vJZiG/F/hRxYNmfNpiZ68/Cf/U/+1PEM2V/iviw7E8Ttc09
9Mg/fte8vy3xxdifdm/RPEXcT27lTxGXiv0p4pqxP23Y2bfY5nzan1b7rVmn
V6fdyp8e9Js3bMpFt/Kn6Df2p3XqxI3JMdit/Cn6gf0p4rWxP224rlD1tbNi
lD9FPE32p4gTx/508olEC1JPjFb+FHH62J+mGV1zy73k0cqf5pC4hOxPu5Yq
VfLjvGjlT9H/7E8Rf5P96ZvWD3Nsmx2j/GndPgVvPVjpVv40SUefRVejYpQ/
HYr4p/KHcTmfKm3xng2jlT9FPEfzu9L/Md8u+umb1i7lT018T/kz31FIfvan
Jj6p/KH/+XfR/7FUT5QzktqF/k9G/YB+NnFs5Q/9jP5kf/pa+p/9aTcZX/an
ubzng/FBmD/sT8tLe9mf0jw0/miK97w15/9EK73mufFBjWW9sD9FXD/2p5m9
153xQVi/7E9pvZvyD8j+wP4U/c/+FPEB2Z9i/2F/2lj2K/anPWQ/ZH86XvZP
9qfYb9mf/iD7EvvTRrLPK38qOsv+FHH32J+eEN1hf4r+ZH+K+HfsT0kHzbkd
Osj+FHrK/hT6y/4Ucd/Yn0LH2Z8i7hv7U/QD+1OcH9ifOuR8wv70lfe5SPU/
+9NJ3uci1T/sT3EeY3/6WM637E/HeJ8PjQ+i857xQXQ+NH6HzpPG7xSUcyn7
01dyPmd/utb7nGz8UUPvc6/xR1/JOZn9Kcad/SniwbE/rS3ncPanOM+zP/3d
2xeofmZ/+tTbd5h+eOHtU0w/jPT2NWZcknr7IDMuF8Q3sT9t4O3vzHiR/zLj
1VF8HPvTr7x9n+n/T94+0fTz20z5KpSPttqFfoYPZX/62rfR44Kdzit/GiDv
M7M/Xd2ud8Fx6Sw/iPwZxvT6z4W5TuVPizyaVX57Pqfyp3iPmv1pzc7ba0z8
1aH8afNG+253PWalY1x6VDk+t/ZxKx3jsuHjjiW7q1n1Qf9fO7FqbfajVjr6
v03y0z+lvmClo/9dTR5PS3hmpaP/qy/INK9zcqv+6P/tzhrLj+e00tH/Lzam
rDWsqkv5U7xfzf405GzPdh0zn1f+tMy9ad9uXuJS/hTjxf40Q61Ek6tUcSl/
ivhx7E8xLsqfVl/z7adULuVP8X47+9MHl8ov6/7Zqfwp3jNnf4p349mf5p5V
flCaAi7lT/FOPvvTHYcLrRw7yqX8KcaF/SniF7A/vVF9TYVOaaOVP8W79+xP
/9g5tOqHZdEmHeOVpXjs0OWhLpPOcffYnx4O6DjudnOX8qfoH/aniJfH/nRD
/65d22RwKX+K+GjsTxHngv3pmIaf0xX8v3Ekf4r4aOxPEW+O/WmpgxWrff2N
lY5xRDw19qcVN9w+W7aVS/lTxDVjf9pe4qSwPz0VUGNIcP9o5U+nTvpSvEJH
l/Knc3t3Xb8ur0v5U/Qb+9P2yerE9H/uVP4U/cD+FPFf2J9OmtLo5erZTuVP
EZ+L/SnizrA/3VMh11dfHjmUP0XcH/anrU7eK7z1uEP5U8TtYn+64dbOZ7FP
nMqfov/Zn56V+FPsT2NT2bo1fxat/GlMwpRyiYa6lD/9oXNkldtnncqfmnhq
8odxsRUa4hqbxKn8qYlfht/F/uY5f+DPUIfypyZemPyhnzdLfvanJl6b/KH/
+XfR/zWpnignA7UL/T+H+gH9bOLiyZ/pZ+lP9qcx0v/sTzG+7E/He88H44Mw
f9ifor3sT2keGn9E89ac/2meGx+E9cL+FHGC2J/SujM+qJ2sX/an97zXuyl/
juwP7E/R/+xPEW+I/Sn2H/anIbJfsT8tK/sh+1PEe2J/WlL2W/aniK/E/nSs
7PPsT6Gz7E8Rx4f96SbRHfan6E/2p4inw/70iLcOmnM7dJD9KeLssD/NLvrL
/hRxZNifPhcdZ3+aX+LIsD9FP7A/xfmB/SnOJ+xP6Vyk+p/9aS7vc5HqH/an
9+U8xv7UIedb9qf9vc+HxgfRec/4oM3e50Pjd+g8afwOzqXsT3E+Z39K52Tj
j7Z6n3uNP8I5mf1pFxl39qfHJb4M+9MTcg5nf/pczvPsT6t6+wLVz+xPW3v7
DtUP7E/J15hxIR9kxqWZ+Cb2p+TvzHiR/zLjVVR8HPvTr719n+n/td4+0fRz
oap98uRcck75U/hQ9qd+50dOrfzX/sb+NLW8J8n+NLjdnniffpYfRP5dY9L3
3FjSyo/+v+wKae7uFqn8Kd7nZH+aotD3tZIviVD+9M6Nyvuv2yKVPz25OkmR
w39Y6RiX40G5s1WLtspH/x85UjlFyC6r/uj/aqMyLvO/ZKWj/4+XfpK3UVLt
TydfHjg9Io+Vjv6v6f/4Vr2qVjr6P+36xddKV3Iqf4r3Ntmf1t5aaFTPGi7l
T18nuI6edTuUP8V4sT8Nihv5TYPfo5Q/RTwa9qcYF/an5/bWrpv3WZTyp3hv
lv3poExv2h6t5lD+FHFn2J/inVv2pyu/C01SNtSh/Cne9WV/6j4zttWJnk7l
TzEu7E/fynvL7E9PfHNs/I5XTuVP8U4v+9OF/1ncZXg5yx9hvNaMPHCt+UnL
93EcH/anbRIfLu8p5lT+FP3D/hTxd9ifutb0uvRssUP5U8RbYX+Kd6TZnx4/
VjaqZG6H8qeIt8L+FO+Nsz99WaPL8SHxVjrGEfFZ2J82vdz895uJHMqfIk4K
+9MW8q47+9Nl1xKfbN/cqfxptx8+d+iY1an8aeb4fbN6F3cqf4p+Y386ILTd
iKdJtD9FP7A/Rfwa9e+nRX1vX1jjUP4U8T7Yn+KdfPanWwZFnSy1O1L506QS
14D96ey96+cE14lQ/hRxQNif3mrybc8TDyOVP0X/sz/9VeJZsD89/bDK4U/V
nMqfdhoyZUyy+Q7lT9t3HJpy7SKH8qcDEJ9F/jAuV892ytg9Ubjyjya+ifxh
XLYgzgjqI+PC6eh/Tjf9T+no/wBKR//flnoiHfUcTO1C/3eUfriXYVqF6AJn
fVD/ICof/W/i78gf+r+j9DP71lMyLuxb78i4s29N5z1PjD+aK/OKfes2qSf7
1mTe89P67tR7PhtfUNd7/ht/1EjWEftWxDtg30rr0fijgbKu2bfO9N4HTPlZ
ZN9g34r+Z9+KuAnsW7EvsW9dIfsY+9Zmsk+yb20o+yr71heyD7NvXSP7FfvW
ENn/2bdCf9m3QkfYt0aLHrFvRX+yb0VcAPat7bz10ZznoY/sWxEvgH0rdJl9
K97DZ986X/SdfSvew2ffin5g3xoi5wr2rTi3sG8d431eUv3PvnWF93lJ9Q/7
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
j/UI7xuwHg3K1apdjV+1HuG9AtYj7M+sR8nlXj/rka/s86xH2+X+PutRM9EL
1qONAZfrbwuNVXqEe/qsR572Z3ckGh6r9Oj5kpEDh851Kj0a8qbW6yKDnEqP
5o0ZFVS7/HmlR7i/w3qEe0OsR4XjbBPrNHYpPcK9JNajcmkO5lqX3qX0CPeU
WY8KyL0q1qPsz/ztC0+7lB7lu3Sr3Pu5LqVHaTdnSpwih0vp0emWA6vXy+JS
eoR7x6xHqCfr0X3H8C7jdjiVHrWTe6+sRwPnrZh5p7dL6VHIrq/T1V/lVHqE
e46sRyPkPiPrUbfKVws9+WvcWY+GPs2a6dMCp9Ij3MdkPWp6cNPuzAkOpUer
G+bOP3dHtNKjwRs6bty4IlrpUeLWjbM82udQeoT7s6xH1ceGly2w1Kn06EWt
QeFHoh1Kj1B/1iOUw3qUROrDeoT7p6xHK6W9rEcYF9Yj9BvrUd98P+xPvc2p
9KhojdXzbvd1Kj3CvVrWo14yvqxHuEfJeoR2sR4NjEmZ/lozp9KjATI/WY/G
yf161qNKOSu/GhvvVHqE+4+sR3VnJC5bqbNL6dEpWY+sR7gHynpUa2WbLVnz
u5QeYR9gPcL7DKxHuO/JepR+Vd0eh1K7lB4VkX2P9Qj3GVmPvixdMvzHYJfS
I9xPZD1aKPsz6xHu8bEeDZV9nvUI9/VYj16IXrAe9U3UslOtUdFKjwrLvTzW
o5d3yi99+/q80qOUacYXzhceqfTIf2e5bcn6Ryk9erM4/7rL/V1Kj/BdLusR
vgdmPVrTrUvmjrscSo/wvTHr0Q+t1vZaPdih9Aj3kliP8L0061HZiVej2k1z
Kj26f23hmx7LnUqP7l99GNK8lEPp0Ybvl/jd++xQeoR7RqxHqCfr0bTzE487
VziUHjWXey6sR6WXL80a6HIoPRr6rOEvqQo4lB7h/gLrEe4psB41r5hnzPyj
kUqPrhWeVuVysEPpEe6DsB41icx1rPOTMOzDpj61pT6NSXcaSn7WrwXfF0+o
mc+p9GtO9TznOvXSulPqq+czbkwPVbqDezGsX0Ebk07ImTFK6dF2Se9IeoR2
se4slHqy7uD+FOsO2su6szcmY+Cn6EilO4P7lG88ulW40h3ci2HdaS3jyLqD
exCsO7gXw7rzotK+Ky0DI5XuYB6y7vwu9+ZYd1a8LPrp/XKH0h3cX2DdSVy7
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
foJzO/MT3AdnflL4VM+KObZ5FD9J6j99yZ6sHsVPcG+U+ckAOWcyP/G+H2rx
k8U9n+y7MtKj+ImPnEOYn+AcxfwE90mZn2SR8z/zE2dMnipjVnoUP2ki5y7m
J7iXyvzkrdyLZ34SI+dA5iepcydb8MsIj+Inj8QHMT/BvVfmJzjfMj/BfVjm
J7jvz/wkz6VDA9Pm9Sh+gvuzzE/g+5ifOKdWWDrjH/6XfSvzE/OOAfET+F/m
J+beLvGTVeLLmJ/8Kn6K+Qnu+TI/wT1f5ifzS2Ur2b26R/GTIPGJzE+miD9l
fvJA/Cbzk//fPWLmJ3kdyZP/cNqt+An8MvMT+G7mJwWy+Q4YcMWt+MnkwDnX
Hga7FT8pnq10ZO1jbsVPwBOYn+A+MvMT8ArmJ7inzPxkx43KxfuFuBU/wT1l
5ie4z8v85E61I7v8T8QofrK9c7a5dc/GKH6C+2vMT4r5N9k59ECM4ie4H8f8
pNCCTYP3/+5W/AT375ifJPaOB234yRqJR8z8BPGmmZ9MWFvs8vJTsYqfjJQ4
y8xPcN+Q+QniYjM/OZZ7z76tLrfiJ7/3Kn8z4zm34icvJd408xPc92R+gnvN
zE8aSrxy5idVir7zzX7XrfhJxPBhZzr/5lb8BPfEmZ+M8I4PbvKHSJxx5iff
TWgae+TPGMVPZss9a+YnSeSeNfMTxGdnfoJ76MxPkso9U+YnDSSuOvMT3Ftn
fnJQ4sszP6l3+2mjO4/dip/86B3P3fgRxH9nfoJ78cxP6tSJG5NjsFvxk2ZN
u108dc2t+Anu7TI/wX1k5ieVt13/peBVt+InaVt9vvZ/+yrzk3Hece1N/u4t
mqeI+8mt+AnuazM/OZ2x07fjRrsVP8n09GiDW/+vsPuOqupO4gAOlhVR114i
BgtGExUVEVHQVcCuiBCCggWxHAh2BGKsAQGNMbZEXcWCgiJ2xUJECP29d+8F
nhjLKlGsgA1sKLrK7p6dwfCdP/z3nhzeO9ffnTvzOXnfeX9R+MmonZ0doiOM
wk9eTHD6MX1jgfCTSsoBQD/p39q658vuucJP+Hfx6Cf8u3j0E84NQD9xmWlV
9GBbgfCTH1JM1tVfkiv8pLb3wA03DEbhJ5wngH6SFZBXHnTIKPzkPf2uHP2k
UfCgfffq5go/4d+to59cNGvQzW9krvCTLV3q7m33xij8hHMM0E/mz7YZmNs9
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
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtlnmwj2UUx9/7Wt6r9/e6yJ59Kft6ce37fu37FXJJMiItl5JRMShCyahM
hlTSVCZMZRRly75EIzXtKcbSkMje5+ucP5453/c851ne83zPUjl3cv9JYRAE
FdKCIB9ydhQE6cilyBZxEPRl8u4kCHKQDdDfj2yJfjCyBPqSjGHg1rHZ9wEX
R1eJMQ7cDl0rRk3WbmPP0ehqgLeCK2DzIN87wM2w6QbOQDcKWQWbEchcP/cA
Nk2xacd3PmxCRktwE3RvM1cam3XI9ZHZFEwM34d+CzITu2bob6WCoA14JPge
bNo6LgueiGyE/TRkU75nIbsx3wnZkRGha8iYCT7EnruQbbDfgRyI3TvIAcz3
B68C9wZnM1aA+6EbAn4fPAg8jLEFPA5dHcZjOkP+Y7wOromuvfvtK856BF01
8Gbwx7of+AfwYGw+5DsH+0GMteCT6IfHdq+J6HIZG8Hn0BfWncDNmc8DHwHH
PPhUx7noHwfvA48AtwbPB/cEdwAvBvcCdwZ/Bj7PnrdT9hby/xT0e0Uo9szC
rqv2T8yHetNP9SboC/L9PesagzPBP6VMXwB8HFwVfBNOHgA3ANdC/y14fmT6
g+Dq6Iuw5xJ0AfO30R9JGS6BWI7+Kjqp5jkHspi7iWJadMcs+Iv5dEApcLHQ
7K8x9mNTBfvC6BdiO51xHv0u9JeQd6H/M82G8Fzmp0Z21guR7av9T6XZWlwQ
LEDeSLO7aVJvquArxGQHzpoAvte5kIVJHrIL+umKAfSZzr2usemfAddHt5N9
awXGScWLYqx8YlLf5RKLW8VRrp9ZB7wnMl7rbdITizHZiPM9GHPFk8TwPMW9
3/NhcNXE9rnDS3BtxhTnsN5Yb624ruwxrjxQBbzI+dPE46u74iu2mKub2J10
txPIvujfQF8rsbcpytiNg9vyvQCcLX6BN4GHgssiy7C2HHIO66/g633YX0YW
D+xdxasM8MvMV8SuJLg8spXzsw2yPaMiuC2ys3JDYH5q4zby13Xnlfhy0TmQ
iHehnZUR2hCO9a7O7RMseo+za4KPgV+L7L9+Fc/1VtinkIvR50MeRV8pNu59
Da4WG88POf9l8w24g+dV5dDQ/0sx1p1RKbA4zFHcyg+R8Vb8zJMf0J/le2fK
+Bo6t+c5n8VlcVs2O1DcBO/G6FF8/wBre+vOxPsG5UvwUeQe8Sowu7Gx6Z4S
D8E7xRvwdvFFdQG5WlxRPmH/JqHl88bKx/JdYHFbzt+3CnJtZO+yCdmc7wqB
5fdq/l7KF3Xdn/20h/uhBnKy51Jxt51zUnxbxigmG+74BLp6gdW/ZxmZ4Of1
D6HF2lTkDI8pxWeex6xicjajBXhOaGu0VvFzLLKYauG5XXFU3eNGZy1FjvF3
VOwq1ym1PRcZT8TbRcisxM5Q7BzzeNmNbJzYXZUfTuLHMuA30V8UV3RGbDlN
cbHdeVWAtTMi45Vy1IuRxU5B8MzI6qP+VzlmgL+Favwwx9KN83wyHrmc0Tiw
GrbMfbIE+Yl8DX41tBqouvkB8nSa1TLVtAHqFcQ9zlrjPlRNHcKoDB6k//E9
tfcp7D5CDufiQ1i7HjwC/AWyAzafh1avtP8FzhkLbhhYnh3vd1YOOxyZXjVu
Hd8tA6upZyK7p2rZhcj2G8v+v0dmo9q30f9rf2hxong5g9yTsrxQmT0PhhZ3
B5C/RXa3i57ftI/2GxXb/Gj2v5QyvtZXbMXmv+7eR2jtytB6GPVHZRLz21vg
PuCeiflI/Uaj2GLoR/b7g1FS3I0t1orqLVSnUpY3ayuX8J89AusTDqPropqi
O8Umn2TvU84r2a9UDwc+i65ObPh0yvXyIfJWZPuox9jGXKHQ4iuD776B9Rul
vL9UD7nJfbU5tDeV//UO8oO40w3bod7nqI9S3/Wu/hfd8chiTf2P/Cz9wMRy
r+r4S+jSEsv16huvc5964kRsvaXyfQHmv/N7qgde7fGrfk4cFcc6YjPS+xz1
SOKh8tglr6fKP2si84lqy5mU1Su99ULkXr7/cW508v5KtUx9tTj+X8r6L+XS
V0LrJ/W+fROrC+rPZ3nvJ/6PSqyeKT8o3vt43eyRWO+tXv0qe16JLNdOSOx8
1SbVRuVkvZHeSv2Y8uQG8IrI6kg971e3Km5Y+6XeKrD+Vb2Zatm/7F83ttz8
NzglLoaWn8d4r6garTgSx/KnW4+qWjApsXdQPlG+z/b83Bt5Gfue4ALYX0tZ
Ttd75fh9HlI8pqzuits1Y6u3v6jue95THI2JjW9F0q2XUL+3KrJarJyv3H8h
ZXdWbzyS0Qt9oXSrj/nBT2PTObbcXyyxs1Srf/bYEudLI29glw2O0i0G1d/e
cP+oxp0D/w8Dv3QC
            "]], 
           Polygon[CompressedData["
1:eJwtmHm4VlUVxs/dKvvC9x0mERQi5kFkUJEpQUQREFFIMRQxxtS0IDUF0nys
Jy1NmzQfTZxSsxxSTDGBjMEYZBJQxBElRUBxQDAQkN7f864/1r37PWufffZe
e613rfW1mTTt7KmpKIrRNUVxqP6/WS2KNyT35qK4T/JfjZtpwhHS/Un4beGe
wkcK/1n4rLIoHhA+QXiD8PvSNxRuKfx49lp1hJsWXnO05t8vfIrw5uw1HpC8
VfXaGyWHSt9I+jv0fIPwq5K/afyo5HWNs/T1pe9Y8fvspYmebZZul+QLyVN6
PlvyocZbJA9p/LBkncZf66wN9U4Hvb9IuJ7erSt8g/SptihqJDO0z5mSL6Xv
JH2zwva4WqLXi136s0XyivTHSN9Yz/4q3YvCH+m5/hXT+b7GWyX6VPEr4Y+k
aBn2mCX8sfCRwt8Uvj/72d2S7VXP5UyNk23EWT8T/lTyF40fkXyu8ZnStyhs
H2zVRbh5YZthi9bCrQrbhHfbCh9VeA1s0yTuExt9Itwu7P+g8N+z32WNbdJN
lE0mSL6rA42XnKDxz6Q7RnOWaO57mnO4cAPhO4WnSD8/7vsz4fOEHxPuJbxR
+HTh24T7Cr8lXFf4R8LTJD+UnKZvDJZ00/PuklrJEJ5LTk2+o/X6P6zw3b2n
Nd6VnK/nY0OekP7EwrpJws8JDxL+VHi3ZJdkGt+VXCr5PveuZ/+TNNa4Uek9
sJcfaPyi3j9J72/Pnvsv4TMKv8OzbZLLSs9lDZ4fpr3VqfU3lmn+4MLf7qs1
+0ga6HlDyTmSh6X/lvSbpN8je54r3Eb4GeE20l8s3E74n8K9hG8QPk54dfY7
70jOjrWmaO3Jkob6diPJAen2S7LGtZJNWr+q97+h9x/LvtvlwmcWvuORwrOE
+wufI/yO5ncWbi3cU7gT5xS+TNJB4/6SmzW+iTNo/KHWHIBvCY8qfYZ/YNuq
zzZP47mS9qXvu63+f6Z46aZ3XsJ/JacSW9J9W7pjJddofKyerUQnvF3zt0lm
J8cEfp1L+0cT/R+p/x01f76eTxdeJzxU+GD2meEqOAtb/Fj61RqfpWcTKuYC
5vIOnHC95tcR3qPvrdL8X2bH9tbgg3uyfZ8Y+ED6J7Jju5/woaXn1xPeqbnL
q+YH+OIQPZsh3WLiu8b81lYLX5vNyzv0bEnVPnsyvpDsy7/JngsnLgs9vn0n
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
            "]], 
           Polygon[CompressedData["
1:eJwtlnlUV1UQxx8/gh/1fk/lVKZSsokCJogiyia4pMgqiMiSWppLZXa0hcwV
F6zc9zaXSssstaMt2uKCIouJmpbafnJvIQOX0og+c+788Tnn+2bm3Xvf3Llz
X/CoJ/MmuizLKgcfiLQtqzWGNnAPnPVYlq+fZWXiO8BzBdxwW9Yf8CH6SxiE
z5uYQt7dzfNn8CmMdixrJXErJJ5xgrG9hf4N/Sv8Du2x3c97EcSGQyS8ii0H
Wxr6ZfQaWAHZtpljF/oBfANgILSFNtAORuDrTUwurNV3ZYxMfMuZexmshbbY
LskaZD1gsf5abCOIuw2dgekLnj+Hv/D/RGwrdEuwIYLx6/WbuqD/RF+BzrYZ
+zz6AlyEMMZ8FFtffB3RneAy9iBsgXCf5iAZitBDIF/yT9xYGAPjYC+2ImLu
QPeR8SANemJLx/Y6+jV4RfMXLfOhw6ETXGfOfsTtQA+zzXfL95+GU3Ae3sVX
SMwg+Aj9MazU3B/Hfwwy0Auw9ScmBt0FnQt5cIs5BmN/U74D3wXiL0Iutrex
/YJugEYoxlYEJbANXwHxwdDgZVkOzy2gVsfbKLUDb8g8xGTBEnSq5AL6QitI
l3qEgdBL8yL1NBh9ljnPwURsldgexPYfz81uU/d36/7KPp9j3iHE5UG+rj2f
mJHoD9DbYauuuR9MQq+C1bKXxAy3TT1NQk+GpxwzbxW2Q3AQSnSPwtANzNcI
VyGbuCzI0TzK91ZhrycvU1nrQljkNvNOxv8sPAOdHVP369AbYD1kYHue2Clw
UOqdMQJts77D+JfDMq37SvWXEvsivKT7thn/O7BJczDUNnUyFF8BDIMomQfb
FCiV80mMwznK4Rwd4/koPIztDHP4SD2iv0V/Bz3QSXJuIRlcjFWHvYm1hNrm
zMrZnQ7T4JDmIgjfeD0Xxeib+G7BKKlVyQu+FqyhJXijU7HtwL8H9sIaWA3X
GC8C32b9Zvn249iamaMDY/2MjsbfFTx69pcQsxiq8flLj0E3oRPQ8XImIVbX
tx+9D/bo+f2XuDh0D+gO3WxTl1Kf9W7T36R3lqFnwRHNxQK0H9+SRU5riKmG
Jq1fqWPbz3x3qWPqQ+rklOa7o/QN/Nm8W8fzERiJ7W/8N+AfKMCWaJse1g59
LwRon7ysvXoDY26FbdrTAzQuRPvgFukhsFv6hPROj8lvKLoDREoe5aw5Zr4k
dAWxB6CrY+pY6nkaDMB3UvdG3vka/Q2Eo2/Hdtpj9k/2cSbMkHHke8hVuX67
l9QT+GrN3SVnEf209ARIkB5AXIzsg/QM3bd5vD8XVrnNXBXExNvmmzyM4Uht
OWYvY2Uf8e2UOxHqZM8gDdsc2Wfpp6rj0D2hF/izH7nsx07sJ+ARYu50TO+X
OyBH17efsfZBqN4jfWyjR8s78JjL3C21xNTAGbfpjSGOyXOh9Hs5r7q/c/DP
hq9Yuze2pehU7GPR42EcBMvdim0mOgbdDbo7pu8ulX0lx1e8zBzreX8dRGkv
k3smGvsM9HSYqnvpj+1x9AR4DvrbZt4x6Pb4AiHIMXnOxJYNWVpDh3VfQ2xz
7uT87YJPpK+5zRiyZrlDi6W3S3+F1th+4N3v4UfdKzlvAfqvkIKulJ4CmXqv
JePrDSmO6U2J2Jp51+LZC6qJrYJ49Hx8J/V9Geeo2+Qs1jF3hdxrl7BdlT7j
Nn1I7m25v1OkHmxzh0Zp/Ukd3mSuTcRuhO1uM7/0xAmSP3hC768S/Y6H5CzD
cJf595F1laFnwwuQji1B1yo6EZ0EJ3T/w2zzjyb/anL/NpLn63ANajwmLwuJ
WwyLXObel3qeiy6HeVrjUi+zdN4yzYGP/E+Br/bfOL0/tqDfh/dc5n/jf5vb
R/A=
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
Q8tRD2JRaHFeZ5jGvP8BcUmwxQ==
            "]], 
           Polygon[CompressedData["
1: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
7QPYYePSa9AZuuLbs0u/2zbdfbuobWm/36nxrop5vO3tmdcwB2+P9rhDtFXj
LaKtGm/Dtogfos2iLaIZ4X/cLw8Z7kl+I2TjvMeTbRLbXJzbB7gDd1kfMQmZ
2sbcXclvzlp8Ct/CRjdVrCN0hX00LW2z2O4Gze2Ke2Mr6zLLyZ251w6Nd4Y+
WbMy7oKN3Rf6Rw58hrl14Uu35faBVqFL6JGQB95ZuXMD8XxKYZmRfYXWHFc6
BhILP69xRXSK6KFknyLW8F68LfHo5Hgb7AGf5R3QLzGC2HB66TM5G518uXSM
2Rn7bdD6E0qfjQwzc8fIDbxvxM/q8J+Vwl8szV8d77WuYjkXCi8SfUHjk0RT
knMKuQX/xfeJAQtz2zi2TgxbVbGMe5JtAtlPjXgIf2rumE4uqAn/J8YSh5fl
1sex4i+OfET+Q2dLI79NiJxIbsTPWMs3fFsvdMte68NfmCfnTE+OUcQq7lxG
3kAX3HFRxKPJuXk1IT9rpkZ85o5Vpf8TWBj5mNp8cuFYScw8WfjOwv3uoMz1
wHzpZJ7oX4Xrk6M9S3J/R7/wd+EXqlzzU7+/WTjXkHPofd6KfEnPQ+9DzpmW
XNOSi+ixBif3MPQyzxX+b4Oeg36CnpzenBqCvEyMIlZhI9gKPe8L1Bi564OX
NJ4d9Qi1FXx6Y/rl/YVrCmqLZ6psU/TI9Mrk0BUVf0PPTh/NXvwnQi84NXM/
cTjqB3L00dohd47HNtmPnoTehP9muif3i+2S60PqefodeqOeyXz6J3oreuq2
yTUdtR19CZgek16TvoxemT2oi+lB2Xtq1HdHosampm2SXONR6x0f9QY1BLUE
NoatHY2JFY8foJ7IPEc9QU5Az3VK99Dtk3sAeoH64T81YY+sWRP649ufFu6n
6PHpT3ibLvH+vBF9Jv3pZcl9cx3NdRDvZcn/lGhabt8h55B7JoV9dtJc/4rz
/76oF8htLSJ+oQN0MbFwfcB/fCfkrim6a/xilWsNYhm2jw8QKxpFftwX59fL
fRZn4hvUuPujfh6k88cLfyDcTbhh7pgJn5p4QCXiQGadolt8Bt/BprAt+l96
Z3wK36InHhL+gD9io9gq/djsinu+mck129iwK/yjc3LfPKzi3gCZxsdZA5Lr
Zc6sm7tWQifo5jMN+bqE
            "]], 
           Polygon[CompressedData["
1:eJwtlnlUVVUUh2880afX+0xJsBQUFRVQsDm1UksttaxMG2xQUVAmccBKEBAI
ZJ4FQmRUQdCccAq1VatatZpzrQYrh7Q5S9Myp+rb6+w/vsXv/s4+551p70Ng
RMLMJV6WZWWDN+xxLGuEy7KGQxAk2Za1Ca87ugdcDyvw3se7Dz0R7oE1eKFu
ywqBNbT9x6C3oQd5LGs77a/CVqgnLhmC0fuI2w8HYCKxE2C627S9hreIuBOM
cwWuQgZeH8brDT5QS1wtMX6qX6ZvCZTCevxqvBp4ReZNTBP+Bta4k+8dUM53
DqyFWtiP50tcI7/TE3033lSYBoGyFrgZLjKXJGICiPWHgbBN19af9psgmfbv
iRuMHkb7btqbaK+RucF7tD+NNweiII+2Q3gH4TCE4a3Gy4QHdJ9lvz+mbTP9
61nHQb47YRMxnfij0eEwSvv+gLcYvQgiIR+v2TbrDGZOIRAKHxI3BW8y3A/p
xJzEOwHfQQ7eOrwofjcSVkIK3lHaZqEfh3nyF+8rvE/hE/gMHpJzoW8rvI4O
4/faiG2H7ugKvFR0ERTr3sgetbhNfDgxufSdh14IC+AU495Iez9IRX/DPkcR
8y36Sdpz0MfQx+E6+jfjbYQMqKBtC/0a2L/DfB+CFt3nB9HTYCp8RN+NxNUR
t4/vvXKP5G5DGuTBZrz+cvboJuIa+X4D2hjrObxn4Wud01rb3IM96A7YBY14
Xh6zv5W2GVfGd+OV4ZVCMVTbxiuROaAziMnUsR/DmwlP6bo/wJuPjoB7NS+X
SX/NX8njBmL+hJXoEtrOoy/ArYx5C2xD+9E2SdaI7qU534JuhXH4YyERz0dy
G68MvQr9F/pvuOiY3+2GtwFdB/WQqXmx2Da1QmrGi5I3xI2HCbCbmDS8sZKD
MA62yHz199rQ7bAVLPYlGy9L7q2ebxX+v/zGNbgECXhH8GbQ/jBM1ztZZ5sz
vCbxUrNgIPMJkPNFn6PvSPRoCHebOih7MR69lL5d0F3BG9brHiRJ7kEyXHVM
bk2Su0fb8/Sb6zb1xYPngA3LaQvDHwVj3GbP5Ix2wHbYqWNIXpZDKvo4czvm
ZXKwU+vFDPrOgWfAF/rCatqOEhdJvxTVPvhBUpfcphaH0HckhGrdTdOc8qN9
hNRjyCZuFu1PwGzN8yOa31m0zScmQuLwfqVvtG3WE6ZvgNTHBrxKvqugmbgm
yTGttbIHbzqmfkkduwNSbHMPxqDfou1teAc6YCjeEAiEl4jZK2eHHgTDXObd
8ud3BkCWzmm43rUBGifxu/SdOUn7aTgF6XjxxMbJW6L3Ws5yId8L4JzmzlJ0
vt6TWNvcEbkrXVmvN3TTnJX8LSbuD+LOwgWIx0skdgWky57oGyVjJ8jY8ILm
ZzEsRydKHsIZYnKl5sh5QQ1pUO82tSSP71ypN1qzpcZWioZyicWz8XpAT62/
4sl7KXNw8DzQC6Yw5mSY7TZnIDn4LtyFvhNul9ptm/o8F50peQWnianCy9e8
lPzswngN8s4y13bJYSjku5C4JbpeWfdvmuc3oH2hr9YXqUm90X2gn+yNbe6v
3ONc2s6wpzEylm3e5xLH1DKpaVfQDVKHbPPW5+h9lvfqc9q+gC8dUw9aZJ3Q
qrU9WHNAzu8848YRU6pazrAMXQ4FWjNlXoXoIqgGf7wAuKx1SNYbz/fPtP0i
9xLWQQVUwmC9z3Lmy9C/y72Bs46pOS6XqWtS32rxYphbtLyfGi93Q/4fqpP1
Sl1ymf+RpG7Im/0P7ZfgsmP+FzggbwSkucz/Pj855o2VtzYGCmxzlgXoIjkz
cHlMrkvOx7rNeuTcfoQ4dCxEa98OXdMq9CPEPgpD6T8EgvT/InkH/wdR4Fkc

            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3mUj2UUx1/mVe+vX+ctpzo5RJzSosXJMtlly9IhWQ4OUVIJkRykxIko
RCUqS1Eh+1hjkHXGDGMGY2eQZexri1A6fb7n3j+ec7/v97nP87vPc5fn/sp1
7dOqd9EgCMoUCYIUZPEwCFYh70KmJoLgDLgBcmsyCKrDjYqZ43svfGnkCr4n
wp9kPhs8AnwM/Ak4FbwF/DPyHPq9kXnws5Bn4Uuyfhg4A24Roye4ONxS5o5j
TDO45eAz4BfBDzK/hn2ORqZzDL4x/Brwbcw1Ai8GL0EnB52RfFd1G9Yx7ga3
gPuCUR+8De63pNmwITZ7TrK2AnI134PgDzN/mvED+Ehs+h+BN4GPgD8Er5UN
jPddvwrrL7FPXeRlvn8HNwE3Thi+BHeOcRlcD+48eA5rd7LHcfBo8HZwWeYK
0XkSeRC+D3w6fAH4MHwp+EPgAfKZ39Vp7qSl26KzDEYODc1fslU2D0GuR+eo
43XgQvBk6YEHMx4FX+UOd8K3Bg+D28L3YvbZg0yDP8Bv1YavzsgDL4C7hLzI
qAa3H7kC/QLkJsYMcIZwZGvroHPM46EaZ7lPdqFzT2hrtHYXuovYNw28MbK1
c8DpyD3o7GXUYo+V6NwEd9DvRoY7gRPyD/pPIReiswi8mfn5ikvwcvAOP1cW
cjvrfgHnp9j+C8HrpR9aLsxD7oCfL3uQU/mNFvKX/Jxi9v+JnA3/Cvwev5N0
+APs0xr+qn4D/k7OnAcfJMxmrS1EtkfnL50fnVxGDvyNyO7kEKMe82mM7uy/
X3cTmZ0bIouH/vCTmF/i582MzFbZvC6ye9jFd2V0TrptsnEpc1uRqbFh3XkG
8ie+O7HnLtY1RW6G/wO+WWj2F8H+LHRGeu6fSdpdqX5Ug8sH10F+iU49z7sa
sd21YkZztRlj4S6zbwb6/yLPuy8U0zvQa4POd+h0YxQFr06a328w3zG2ffRb
xRIWn/KpYjabcRSdBl4fhOsrl+GLsaahchluZWB1Zzv8MvAy+cjjRzVIcaLY
fsnvVvWnKfiQ6hE62yLbU2u1x150urF+Hjq3+N4Gfzu2zeC7o9/nTHAXjxPZ
Lft3q964jvTz+W4PngbXjnHNY6OJ8hac62ecy9rVkem3Q386821ii0vFm+x5
DX4O3AnVPvQfYv++fJdQDYSrGdr9q9aPZYxjLGV+GeNNj7ee4DvAv4KzGM+A
u3s8qi71CD3GA/Oh3o4acGNi87P89FlscZvNfJXY6oNiOCvF8k1YnPJUMfls
bDXwHdauBM9L2tqq4LWRxXNN8D7fR7k7Fd2jgdU11bcpsh+djeBS4P7gmpz/
AjrlE/aOnQZ/I98wN8HftTzPnbPIx12/FrIi43t0DqJ7yvffB34a/iI6tRN2
h/tV08QlrX4UxlYHZ3gNyYN/Hv5r+H88DhXTiqtbyM7u89Xw15HHInsHVZ8D
fxP1/l13nf9SLD82ajq0/FSe6m1VLVUNqet16yB8K+QUvpt7HSvwN2VybLY1
An8VW74r/yfEZrfsXxiZL2aBl8guj0PF5Hh/0w8wX8ljVTmV77Gh2q39tO8g
9QCR7Sm/r01aD9IcvrRiMzCfZWsv5FvwbzCKeB0o6XFbFvmY16gKyHJ+P+od
yjC2gh8OrR/Q/ZyP7LfUG/Riv/Xge8FvO9Zb1Bvc1muy3r70pPnlZbjPvbdJ
C63uqU84DP+qv6GZcD+GlmvTkZXVOwSWM1VVCzSH7kzkqcC+T/G9ILS+6wU/
i+5JOZcNjkPra4QrhmaPfN6FdeXd7w8hh8R2F7Khh7+Fytm2odWi1l53dSd/
c65xXp9VeweqJgX2luSrZwotR9QL6RwFere9dqleLfD6sA+83HPnkYT1M6P0
G6qZjF4eD13dd6vU14DvV+7xuy31vqrnCc1n8ud7zDf0t0ax0srjVjUxx2vL
aHQ6eP1X7cuMrRdVj9rc9+zr+jq76nGux/ZEdJ9TzgeWh3X9TnQ3sd+zYqK+
2yBbenle53Lv00Lr01QLSngcKh73RpbLOmPn0HowvQeTQuvNvkWeiK0/Vj+s
mqx6mxtbb6daqjtUH6ieMAf+HHs+AB7geAs615BN5IfA3kjVN+n08zdZsfep
4ihp9zrc/XkcfjZyrtc99aBZnl8jYss19R432b+f37l60FS/Z73tm5KWT0Nj
2/8J8Mex+U3+GwjOTLG7Ui3UeyN71O+NCe2Mio/xbo/qu/oivVNzWRslzC+K
q0Fug2xRHdb97UbnAnNX5Be4K0nLxbNek3WuSopbzyn13vq/oHf/de/RCtDp
Gto7Mhu8IrK8kt91noLI/hMpPjOSllsfeE8kn3b2OJXf1b+orz4CLsPvvuux
rbd1uP+W/j/8D92CFm4=
            "]], 
           Polygon[CompressedData["
1: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
yK1L7i58bmiNI2XHhEapjPjdqn5fx3ukoer+FHPxbdbAnMzxk2TOY27WfHq0
s9am8X4YlKzZvw29h0ZGK38Z+b958t0hvqfDzcIPFr777J34Ji55sy0Vvi35
LXd8vHd4I/BWqB/vRd5YaMQNoWfQYL3CD6yNNwBvATgH7rkoWSvUln130PRo
+4NK5hveMLxlvgo9wx1/WnhTxDuaqGdw1OXJY/ZFzBA76LxfF9Z4aD3WtDTu
MW+3jrLzk98kzWL8nLLvdOc4/3nCLwl3Cn7IS36D8M7g3cXbhHLr4Iv9cebs
mb3+vbCG5D7zZoRHiMVjk8+YmKTPWclnxFj4Aa6AQ+CSB2OOPcFF8AHrPkDf
rlfyHr+J/MHe4TDW2l59nipsbVX+XsltaG50KpwE/1BGuxJP1P1W+LsKa1R4
pkdwPly/KuKZvoy5sjBHsnd88KTwbwprX/LditxvFuZkrjUR35wpZ9lGY67T
74nJbx7yG3uan5nz2Ouu3L7Dh3Ajxr3Zmbvt+ThP+oDRNOQGcsRO+W9xbu6C
w3jrzOZckmOYt/sVhd9icBhcNi137oazWkR+QjMx75awquScRduU3NoCDYGW
mFn4vcObCz21q+x1dFG5q+wctS+p8PsFnkOPwM9o+OGa6xfqc5qsjaxtyf8h
kDepo437yJsO7Y0GP7Pwt1nDqNw5kf2j8XgL43/ejpwJZ0MOJZfuVnUntd8V
fMR5c75w9hC0SoW5fHRubcQ3+NZNhd/DvIHRL/iQN+Os8C2a95XQtyeEPkYn
bZUPPpeNKztWeTPxdqKOtnPUt0PJb8hDk+8reoT/G+Ax/iPhvxL+w+J/gXay
9rIxuXML53VG9IX7dmUeMz3OE03WsvAbomeyRuJtwX7JVdWh9/A1WmV7Zp/D
JWiZvfF2hPPJfaXkXDA2d24iR7UprDvwDT5Ck6HfeMuj6dB2rIG1rI834eTc
uZmYIDZ4A2+K/FYT9wTua5l8j/nPi/++plX4/Lnf3HX+v+I+oQHQAsQ7uZvc
Ri7nPwJyHGusjXxeVXY+JRaXxDuZ+CbWiVliF70DB8J9/H9GjifX85/FVLRh
7ruOpkBbkL/J7WhutPdK2dvJb5jG8R8Lun9FtJ0abw7eGvxX+YJsboU5AC5A
c/eN9wNvqRlxn9lDqxjzbrImZ65JcZ41sR9iYk7o8WFlawZ8u7vCWpXYRMvv
zByH/wdFbTvk
            "]], 
           Polygon[CompressedData["
1:eJwtlnlYFlUUh0f5sO9rbNT2cqkel3JrAUFcMsW1xSWX1DQzs9RU0NQWS9Nc
0uxxK/dyyx0QUQEJQdkUBUEllmJRMCBFFLLE3d7z3PPH+zy/+Z0zd+6ce++Z
eW5M8MCg2pZlLQRvSHdbVhq851jWXS/Lykdn2pbV12VZU+FT+JlYDKxAr4Qp
8Cc5J/FOQBp8j1eCFwu10GPwPoSxkKnxZz2W1QbaQiNoCC3gJ2JZ5CyBjug0
xrjLPO7Bb3if4RXYJl/uawZNIQB2EMsgZ5TOP4a899GjoYT7i6EanifvA7xi
4gvRi+A7SMVLwXsB3Qpaap7Uo4bxbsA9HdfD89yQix5H3kFydksuehSMhRxi
PcmpprahXIdAJV4eeb9ILWE9lOJ1wsti7L3oY8zxOEzCq0/8CF4F15chVuoA
gcTOkZ+Kjib+H3oI3jswFILgIe514FE4Sk4YZJJ3Fs5AB3KKYAvxv4n5M9f2
UICXD4UaKyfWH32ZeyqgHCLxouAf9L9wDQaR013nFWGbvSR7KgWSobfUnNh+
Yj3Q3ox9WGqE7uWYumzAK8PzYR6+cNE261osawgXYDyMgwngQ+w4OXHwoL6v
vPcnxP7Am4jeh46A/TAcbjGHPOZTCmWQRd5IXTdZv22ad4e823ATDpGTDaNl
P8u+gO3knOT+E5DtNmswDG8EvAsj9Vlyr6zRdd1DNZq3Gd5mnIEwDM7K+jBO
Bnyk9Tmv+j73WFzX0Zrl4ufIXtAz9rFj9svD6AZQD+KJHcBbir5gm3Mi52Uy
3uN4j8EjujcS4En00/CUnHXHnN/aaBd46TMk7wl0MHoKTIVp0AjvEvO5DjWw
AK8dni+8oms0E68xugk0gyS8o3hz0N/ALCjC6yJrx/uG26a2UuMcvGzI1T0i
ZyYG/xC8qvlJ6I1yBogPgUFwhrxNsh7o4TBU69wX7y3op2dMatWF2lyhzJu4
3ggvcf06XMNbxnU4VJEXyXMOgr+sP88NxRuAtonXlbOk5yORnAToJucJb59t
+mk/XXNZ+w2OOXNy9rpDmJw3x5zVDO65CJegI15X4leZy3bZo+DnMX1C+kUA
8UryTqNXoXtKL2SM1eg1sA7WwnrtofnE9khf1j4Vgg6VtYAWeM2hKSQTW4y3
SPq29uSTsi94di1o4DFnbKX0f3w/qRu8LD0VLx2vG3opehksh3mOiUteazhm
m3v90QHQHhaSc8U29SiT/sBzesNN3u8G/KjveIqcOvje8Lv0ez2XedqXw9B7
IVx73a94W2Gz9jXpYdXa16S/DXZMPxhBfAt6q9zjmO+PfIce8JjYNn3GeOk1
MEG/ARbx+27zLZDa1vWYb1lndCfooPUrhC/R02C6nGnH9MdC5lAEJXCAnCrG
ugp33KaOK8jxg1Q5H7q/EvW8SS9M5Z5bXN+GQiiAcrc5s3Km50N/9ABoo7WX
3ulBt4UXYaJ+B+U7+TV6FsyW/sk4EdBOnx+iPVFqvgNvJ+zSNQ/E6wHddc5y
zmejzxFrQk2e8Zi+Ib1AekJDSLTNur6G7gq9dA+313N2QL8j8j1JwPtW+hXj
tILWHtPvJ8meIDfdy+zJzviVLMs6/LXQkuv6UA8awwKX+e7Ld2YnOggmu8x/
RBIkQrI+67xtnjsfPQ/mqif/JV+gP4cZerYOQilz6OOYfi59/S+8VcTXwGqX
+c+ZAdPlTGoPlRrEo+PgiNZMemIgc63iPfZwvRsqbDOe/C9FkhcF0Y7ZVzNl
3eAriHXMP9cP6CWw2GX+zaKZTxT4Oua/I156qWP2ouzJYJf5r4vDPwyn3OZ9
fBzz3yR1S0Efg+MwV/YvXh8YDKfJac6cl6N3yXyZeyfpp475B5C9/Qb6Tfgf
edmPIw==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
+nd43ucqZuo/QWtQvPof8U94/Q==
            "]], 
           Polygon[CompressedData["
1:eJxFmHfUlcURxu+F+4Iv3+VbmiBIkR4QEJAi2MEWUCFAUEEUEaQJhCaCKFKk
KSogigi2xCSkEBBMorHFQhTUaCKcxK5HT040FghSNEieH8+c4x9z7s7Mvnt3
Z2eemdnmo6YMmlylUCgMKRYKJf1+WlkovKnB/zS+LC8UvhL/hvi/id4R/Umy
J0QrUqFwu6hS9J7kFfr+esmvEVXV+CXJ9uvbFHPQzc79zdKsUOhc9Fpvirpo
fKdk90q3WDRc466SPZtbhm6laJ3GL0nWQ7oV4u8RXyH6UP91jGSTpWsmvq50
9UTNNf5Oe9gv/decSeNdmtNbc9dL/6D0C8TXEf+p9LXFVxVVEU2TfLpotcbL
NfdW0RqNt2jeY5xN9rlQ+p9IdoV0J2uN58WvETUu+v9Pke6P4k8Sf434aeK7
iZLGtUTdk22ALSaLv178dNF4jTtItkW6v8R5p0k2W7oV4msWvQZrfaYzPa79
FCXbV1EozJBsFDrxL2juQNEB7fUPmvOF5t7BHYgu1LyemneLfq/LfAftyoXC
wuT/4j+f1LzrxE8U31b8r3LTRtHMZN04jUvSvab1v9X6Q8Qf0v89h83Fz0o+
OzZorfVflr6nxnMkWyLdCPFHNP9FzT+k+cskuwfbac6r0p0mvqH4hviI+HPE
dxD/kMYPcz+iVaJzJT8xs6yV5nbKPLePqIXGTSSrrf9fJ31TjdtL1jfZJtim
INkA6U6VrBG+I/4B8ctFy0RnSX42e8u9FmueztlEAzXuKNk26caGjPFjoks1
Plf6ltI/KH60+KtFv9b4N6JLND5P+hPjvs9P3ht7vE/8jzmD+Nbify5+aLKM
8S9EFyR/w9z1sd9jNbeavmkneVvREc4n/gfhv4+KvpPocs2dnHwX3Mkr4qck
yxhj/1s1XhT3hy/fJn4+Zxf/ovgB4i8W/UzjR+Ibvl2afJcHZd9X9H87RQcq
7RP4RhV9/7X89SLN6Z45Zurqfv6qb1/jLJJvEA0SXSp9J2wu/WDxZ4pvEfcz
RPxI8e3Fbw6bYJuBkv9I1EDf1C/bZtgOv+8CvuBjmffeLbPPcAa+uVp8m6LX
Gp7bVthss2ie9DeJnpL86dxY8brkedGYQUwT2/WLjrMeyTLGxF5v/Cj8EV8C
I3qK7grsYFxH+uOLlu2TvbaXHB/Pi+6X7ATpehOzycQ5NuTWdQZvwSvuCnzK
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
            "]], 
           Polygon[CompressedData["
1:eJwtlmdwFlUUhjchheVbsoQSINQk1FBUQEaHCKEIAhIglEAQCAlIKBLpQQGl
SNAQRBK64NhmnFH/IgIO4Iwig4qKCpYRQWOhFymBJPi8c8+PZ+bd95x79+79
zj33S8kvyp4X7XneOoiFhoHnPYAYHHreEHgC6uDdjvG8FvgtIQ2vNd549ATI
gbl4OcpHD4HHoRk51RHPO8PYn+BnCMjZ43vebvgQJpI3DK85uUPRE9G5MAny
YbTeSawAPV3PMAqy9UwshdiNBM87wtz/8a585iyAK3j78Eai82AavA67pG3e
99A3GPMJeYfhEFxjXMic7Yh3gPbQl/wR0BPdmFgWeiS8xfg3IRlvBLHJeDt5
3gFv++57nsJ7DFK1VmgD9QPntUUnoLeSuw2aoDPwMqEfjCFnPAxCD4T+0JSc
Fva+KcSmQh5sYXwFDLd1NiKnj34ndCtoDgHeBnJKYbvvfueh9luOQ89APw0z
4VntP940fRe0JScdVqOfITYPiiBD36c9gmR7h/b0IHt5Ck7Ddfa0P3mZMAA6
kdcgcGvthu4OvWxvq8m9wZhodA26FiLoJNWTvl/fwrgovCvkJaNbQEuYwzfN
hlahm2M5OhF9Hv0v/A21rK0Qf6b2m9gFvKXoRuiG0Bj+sbwki99HN0U3gzTe
O9P2RfuzCG+B9k37BwVWk/Ghq3fV/Q9wL+LOwu/oc3AWIhrHu2fAfPgDr4Gd
tzvoao2DVLz2EMPcdSAK4lSjoTu098mpgRi8bnhdoTvUI1YX7xF9l2oCEqFe
4Go8zWpDNdKPnJqIW0N9dAKEsJB1LQDP9ru16hbaQIrVsOr5Fr/TUeI3I+57
9F3jYCzctNhU9En4Ds7oLDL2DdvTQvRsmAULtXfE+0V5XhnPG+A4z1vxX1W9
BG4OzfUb9CdvO/42eIjYRvLKlAsv43UJ3NjX0JtgI3RTn4MK9A6dW9gFm2xM
V2JfM/cJ33mleK/AepuvAq9c587WpPl+JTeTtZTzvBm+tTPdBz0V8mAs+ZX4
g8hbwfNu6G1naw36JVgLpaFb3xb1EJgE6/BK4Dn0MlgKncjpFbi93EPsnOoI
jsBKvK2QwbtO8fwBvA8fw0L8F8lfAothKczFa8dcHQMXX4G3El6A5/VeWK7e
oN5IzjLVPno+FJl3mrn78r4SrRc+4zkePxbdUWcfOoeuBw/HexKyrcd3wQvQ
EfCtdjuE7gzoLERb3fcIXY5yGyo3cD2iifoIsYehd+jORy3jYomVsI71duYr
8f6Ci3a2E+3MLyK+ClZbD7mEd1n3ivUj9Zyr6me6J+wsrCR3BZT57v3qTfre
OK0f4iEd71GtS781DIAk+16d0XWM3QzlUBevirnvwo/WN3Lwx8NdztFXeNPR
90zfjrhepp6m8/unfVul9ZJL5O1FDyc+GaZAFoyAixa7FnG+4lV4x/Bu4d2F
k2gvdH1V/fU+8eN4X8I3UEXOaPxRcNnu3OsRdwfrLr6K9wveXLuD82yOE3h3
Iq6GVE978T+Ho76rv0V4S2Cx1Wms+h/E2W+qXhcVunm0hmj1TRho90ti4O5h
3cdtAvc/o5DYLH2L7grVMl5nYofIOQwTQnfv6v4dHOv+v+iuzUKPgpGx7o7X
f5VhVruqYd3xyxhfDGt8V+vptpZ0vUO1b3fearxVsAaK7fzqP9eD6B7qX3Yn
v8s876gO7W7W/6v5OovaD5hid3Kx7mLdyTDHzm+xneX26P3MccB3d5T+L6Xi
fcTzPhgD2XDB/j/l+q6/aF0H0V/AMcvVmE99d/+rN03UfsEs39XI+QS3h9rL
733XV9WvtPe56APk7I9x//XOEh9Aj9ip3gs9yfkf9Vs7tA==
            "]]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3nQTmUYxs+L9/C+Hc4hsqXPUsmSZew7n53P7rPve/Z9zZakpmmb/k9F
yhJDjNIQg5GKykRRispSqMRYQ79r7vuPM9d1rud+nvc5z3Nvb6VR03pPLRAE
waOpICgIBtkgyINfywRB4yQIhoZBMDkKgqXgy+gdwDtpNHgAf4hnIrww+BTP
DHgRsBPrzIP3A/sxP0G7GQfBVPhy9CHo51hnBDzDWEt+awk4m/E+jA2C10er
Ah+DTS/0uZqL3gZ9CnwUvBW8AE9b+Bi02di/gv0wcCDPC/Cx4BTGX4RPA9ti
PxmcpjXcfg5Y3L9F3zSese5gEWzbgQvQ17PfLO+VeB/I+FXeR6H/DZZDK8vz
gG+sylrj0OuAg7GriV6UeSPhzWQHv8ecYdjcTZveHL08+vW0zb0BFmH+YXAf
az6m/aJX9N/R791Hr5u1u2gCPuHn3xmswjMBngOW5JmVsjmaLy3Fb11h7SHo
l8CA99LoAyKzk31L1vwzbWfyD3ibZzT8Jjgpsjuqy7yx8E66f/gZ9nSN8W5o
JbO2fg54F3/agb6Z8e/BQejHwYcZOwkeRa8Mn4ReCyybtfOpBn7H+FD4KbA7
694Cz2LfCL4W/h48L7J7+AneBX4Zfkq/xZNib73R/kvbeZ9DaxbZfj6E58Nj
bG7Af4jNLzujdY3M9+SDWl9n8CPj5/1MdDY/p83mjH7b7/RX8JjvWXtvzdpL
4LmhnVVHsBpnVT60u9N9yudXwkeDjzPWCm00toeYPwB9P9iS993gJ+zhosfO
gbT5qtbvy9yxzBun+2eN/qHFYL6+P7T1+4JHfE2t3Zi5neFXuJ/Tfne6r2fQ
+2Fbh3XGeSxUhxdWPGPfGq0G773kZ/CJbl8bbZff7x4/b537+dh8Wr6t91LY
NcJ+BPNu8Ntb0DZis0F3jM1BcDpjs5RLsB3P776KPhecwDMXvQv6NPhL6M+C
m/27toEf8fSEbwUXss6b8OXYLMsaX4D2fGhzV4Cb/HffAhcxtkoxzvrz4G+g
L2beTPgC9O7oPcC56N3AKYy9Bp8PTuR9RcriYX5ka+djPwf+OvpCbGZF9rva
exmPa8V306zxLmBdj8HaYGWeOSnLI/meS+/EttcO6Oc5v6e1D3iN0PKteAPW
edttZLvaz2QNeCtjXFqp0O5FMXA9Y/k/zdzGvC+GNwWbs+ZObLd47PRBT2HT
Pms5rRzfWN/9rSH4TtpypvyxoevKcW2wnw0fFZnvrcPufdbsytiilMVGGWzO
om9HX8z7Kt2vzgf73vD77PGLtOXGD7CZ4Ge+LLQYUCwMB2e4z08PLc8L27HP
2eAy9JnKl5HVhUmMX/AzuQ1e4uklX82YjfywY2K69ryO3x2KXgc9Tqxufiq/
Qy/Jez30YYzPC60GyV+r+zdqTovI7Lf5OrrnJLE70921zlr+lQ8MZ3y055CR
odVQxXgL7C9m7H51j++y1r60xaZyYyflqIzFgL5Ld64zVKytwXa9x1uTyHxS
vt0tMXvF0CbV66ydfU/057yGqgaP935AcbLR407xt5dncMruZ7X7nnxwsPvS
wNByxVJ4f9ZeGFo/MD80H1UM3sxY7VZ9b5ZYryCbGVnLNzpD+cswnztC9x5Z
33HN64hqxO+x6epNrsPvxlbjVJcPwI9ik8v4bXgJ9P7w3MT8Sf2D8p7iuzBa
OrE4VN1v4H2RepuW7pP32PNJrw2qHYdiqwFt4e0iq3Vfon3sd6T4Up1S7d0d
Ww1QLaidtZypOlIafoyx0zpHbNtHViuPaB1woHoVbDpFFi/H0b/lKah6gnZQ
7+hFs1Y3Vbd/iy1uFb/SP3cb7fMqvIDXyiRrvU0F9QC+pmqx9BPYfxXbd4kf
hhfyfiPUuXA+K0PLyarv+eiF1J9436XYVP8gX6iHVtH7N+W9HF+nhuZ6TlEc
FfS+S31Oo8TuXn1p1cR6O/Vylb1XUx9YM7Gap9q0ITYflZ+rrqke1mK8gtdZ
5aJfYuu91LfkJFazVX/be05urD4ktnrfMbLapPzRIbF8pZqo2tjfv131pU9i
fbN62jKJ5VPVO9UR+XuefDuynB0lliuVM/NY5xGvj4r9DPxJ+CB4cc8tyg+9
vGdWXMg31B99HVtvrDzRlPH9sdX7XO9n1BftQSuWtRotvzrhPqbvahNZT/FZ
bDlfOfAOvt0qsnq+K7Z63UV9b8bs1ZvsjS3mFfvFs+ZHymPFQuv9usKvZuw7
FL/KhVe8N1NvX8LrnXrVW7H14orHe7HVyAHev6lOqb9u5b3QTsb/ja331fn0
iOx/yV9oPeEPsPkjNr9S73shNtSdqt5edt9VvGz3mFJsqRaot1zrsabatzW2
vN0Xm4Ied+r1dnguUbx843274usBa/wPZV+VSA==
            "]], 
           Polygon[CompressedData["
1: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

            "]], 
           Polygon[CompressedData["
1:eJw1lvlTllUUx6/sPL3yvIoLLWooCloKqOwGAiKbkIACGoqBIiqKJGWGqZlN
vzRt019QZi6jTYuRllZTalauuedStqggiiwqLtnnzD398Jn5Pt9zt/fce899
w6vqi5f4GGPWgT9Ue4yZGGBMBqRDhNeYWrxi9DQogSfwVuC9hi5Fr3aMWQMj
0QvwFkIOzKNNIV4T+iV4EZ7D+8w15ismewrtSz8/eIR2KcSfxXsU/RhMgXwo
kPm0bz0sRtfDEsgk9jz93+xlTAPfS6HKsfNKn2XSh++l0IhejTcZsiCVNlEy
DzofsnXNaXhz0dWyHliMNwcS0cmQBP1pMwqmop+GAqjR9dWhhxMbAZEwm7lr
8dbAG6yzke9h+DXyG2hfwfcsXaOsdaVjc1smfYmPQ/dB94VQeBji8OJhguZM
9i0NPYjYYBgCaYyTCpXEEnTN5egw9GBpCwYvFirQz8AMWKS/V/oMIDYQwiCR
sRIcO7/sVRY6BZIhDzLxfIh1BhvTAZ/qPhti8RAHEx37e/rRbgyMhmgoxVvA
nCuIv02OXuZ7peSH71zIgVLJE16i5mW85iBOx9vCfB8zXzKxf5n/AWTQJx2q
ND8Rum+F6Pl404hNhyZ4h3nX4r8CLxDz0m4kehTEwCw8F28sOhai1avz2HXF
EYuHBBgn7WA8zNScrmWO95hjPt+vQxPe56z5D9acg96O/gLK0H2IPwQe6MHL
kXOObpR7IOecNm38vquwgfgGxkjEu873NfhAc3ET3Q1d4M/83+G979rcSI42
ovfjBRG7w3cPfILXjDeB8TLhKPoY/Ao/ErtBm3bYit6Odxe9TXUK7Xsxlg8c
cG0f6XsGsojtxzuB9hIfBIMhA/8A3j4ZH36gzUy8EZp72YMOyRPcId4Dt6CQ
Nv3p3w+GQCfe77QpljXQpw3dLut1rX5AfKrkSP1v4RLeZZkT0ok14+1A74Td
kCb10GPz9iWxAOYJ1Psq97YBVmktuezatckajdQFj71vA9F3id2D+3AWrtCm
BdphisfW2CKtQ1KPnvTaHAxH50IeBOO1kOsrsJ4x1tM3gTYfqr6k+yf7WIDf
JfsP3ZqXJLwt6G2wFTaptxm9B/bCZrwSqcvM14Juhaua+9vEh/J7x0C01Gyp
BVL3Hdv+iOwPeOVd8Nj7Lve+Cy8SLwqC5B0hdhOvG25p++l4ufA3cwTz7cBp
Ytl452X9cAFO4J2RNaHziQ1j/Ag4jvcb3lm4qPdJfIkX6Xk4qfdoGboBbxGx
OvgT/yL8pb+xUN+AKqmHxOdBjWPnvUa8DVohT9f8j+6l7OkpWQd0oG/Add1f
OZM+jBcCvXUtP8NP8IveiUke+0bJeSpi/mIoAZe5Q2AysXOag1V8v0stWUfb
V+Vt9dhzGaC5kJoS5tj8SZ+jchfhGCzHf4u+y6XOQa2MzTxZkK35kfoSIjUa
PVrefKjA+0hrTStn7B7ch4N4p/V+H0Ifdu09P4V3Eo7rb5N33lfrgrQPdexZ
82PsAPDXM9Tp2ron9S9Qz8sOvF16H3fKu+LauWUNzRpLJRbFmJEQ49h79//7
JjW4BK8a5jq2Zs/GmwOV+qYkQ5K8bbr38u4HogMgSN8MeeNj9L1aiC5jrHIZ
Ez0JbxPr2Ohv38EZeOF4vmg/8Pfa2t5X3isIhduuHa9c3nu5B/oOyj0aIG82
uHo/duF9Dbv1/Mv5+8a1NVNq5/daw6T2Sg3uDUe0ZssbJ29dpWP/n8j/Jqm7
B4kfhkPSn3ZjicdCkmPX7nhtLZHaeo74ebjg2ndBxt6D3gv7XJsD+Q/wOH3C
YSj8B3UhRkU=
            "]], 
           Polygon[{{4107, 4106, 3161, 1570, 1580, 3163}}]}]}, {
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwtl3dsV1UUx18F3oP3e+CtEoILg1GjJho1jhg1GkfUaNwaAzJlKBsMjggC
gmwQaBmlbAqUQltKW1ZLKVABoYIgS/aSISIIQWbAz5dz/7g53/u959177jjj
NW7d9f0uNwVB0CgtCGogM5IgOBgGwWQXBC2iINgO3xx5Jg6CTeAryKHoVKEz
CJ17GVsH/1Bk/Gr4H+E/ob8V/inkP3BLwGeQH3u+C3IU+iXgSuZ8L7L530G2
pe0At0F2pO0Ed0B+RNsD7onsRvsD3BW5ODEcpYLgGfrV4CeRF5l3C7gu/LXY
9nEV235Cfzu2ZIL3wv+MTi7c84yvBT+LXMN4AbgauSg2vAY5hm82wY1E/zfk
MvityAmMZYNHIvsxNh08HpwFvsj4aL57g3k3wr+GXKDvwefQecHbLNvz6S8E
L0MuR+cQ+DbsHwKuZJ5+znSEB4CH0E6BxzE+DLke/Q+Y563I9v42cmViZ5ae
HgRxys6yNvhzr9MOuRSd9sha8EeZ50/aVOZu6G1rhLzH37Xu/G5aFfgu5BS+
TSGXo38rchX808g7aBWyH9mXsTLmHIxuTL8S3iGv+DM8j3w8MvszwLW9jnRH
6361R+ZYwd4PgaeAazFWrneLvN+f7QPISYmtuwXdMLL7TZANvG1nQ7szrbsL
uTu0M9caR0Kb8y9/BjqLaax1zL8HcemRveebdR6hveH1XncRuIp1D9Ie1Pk6
26f2sh1uBLZtQG8E/En/7YnQ9i97/kXuoM0HbwvtrS3QO0Hu8/MfQI5N7LuZ
zHMJWQp/ITSbtN50+Brc9X74W5CHGStOM9+ehx154GHMMRK9tXDDwb1pWfBD
Y/MRrd/T2XvSvRyHL4R/mf5R+D60cn+nMxK75zy4UvRmo5+D7EV/iWIF40fA
L6JTAB7u7Oy0blFiPnESbgDfjIT/1Jk9o8AtwFv8ORRIojMLPB25CJ2WfHvN
2d3ojkrgTzvzgYWJ+c4KxvrDtaaNBX8vH6XdrvcBl+P9SD5ephjIPA04txRt
F7hhynxEWFwT9Ocp1sHVoX8Avj6ygn535qyLH9VMWQy7CVyp/ctf4DL1fsGF
yB6Rzalv+uscwROxYTJtEngUckJidzuKNTOcxR3Fnyxnb2IMuBdtAvqD0L8z
ZWutgOvm7ZwBv8T7eIg9vb0/5sFnKE6BP3M2j86/GbiQdhU8EW6JM5+cDM6m
XYcvgpufWLxc6SwOLGfdjbHtZQ463Z29SfnLOvjW4M1pdmc7GHsEORfdneDH
9K50t7SZ6ExCbnAWd3IUL535+ezE/Es+tQ1ZBV8fflpib05vT/eyH74pfCn4
PPy74HO669Def25ob1X+2MnZmc8CdwQPVbxBZ3BoTbg/46P9veg863COnSLL
L2PpT4MfolxAy5X9ofXFjwjtnCeCh+t+PZ+N7JvYfqf4vRfDfYsNPyRmTwfn
cwq4PbjIz5/vfUE5dyB8BTI/zXLzYq8j3XLPa3yl37v8QXFV8W+ss5ii2HIj
hsG3Yl9Buvn+h7TdzvKs+Ov+3pSvH0WWJJZHlG/3MPawv9M5idUFv8Nddpb7
L8eW+14BH3N2L8r1aZxhgbN8oPdWnNh9XYB71ecdxZ1C/+1x+P+cnf8ynV9i
uWidjzGqW16KLAcoF+xBDvBvsqveJHv7MjIfOUX/TfBZdOp5Xv4uG1SPnHVW
q6hm+Er5N7G9qyY67Cx/K6bVU92QZjGlZmR5qVT+l1g9ctBj1UQHFDsTq18u
gcerFtFdxeZzyq3XlI9i27tsW+Z9JI/v0iK7L/mh8l2gWMf4Gb8Xxb2hPrYP
83ehfLTZWX7St5tjs1Nr7YrNrzVPsTPbNVYCXkqLvO9f87ZpbHxi+Wo+46dj
O/PrscXz1xk/4azu2gefnrI5lVur4VzKeL2HotjyXbmPdaqX8vUWaE28/2b5
2LIpNp9WvdcssnW11t/oznZWa6oWkm3K8/PgOvu68Qmdmd+L9p5KtzG9n2r4
xj7OKKY9Bz7kLF+rBuzszJcVBxQb+iQWM5vCj/PxXHFCuVfxrtxZX3wma/3i
59c7zJNdylPKH7HNqbk3onMfOrOYewr9uYozoTXh3NjqzKn02/lcqRgyDjk4
tpozS+OJ1TsV6OxyVlfpzchP5cvnfQ5UfFCsmujfnvKI6qsy+A3Ivf78VfPr
v0B1Vzbcal/nKd5mJlYrzXG2H8Wuls5imWKa8ksfn9eyY4t1sr+ts9inGNnG
Y+1FcbSVsxypHJ3v72KVj/GqRVWTbvNxRnW79q46obmzvasWLQN/5ywOqvYY
mFi8/MbXIzdq7NDevd6zzvxXf/7KL4oVyg89nJ2/Yu8XznKo6uWa6Rafc/h2
WmzxRzXyWn8Out+C2Go+5SnlNdmg+uVrdP4HBoIY0A==
            "]], 
           Polygon[CompressedData["
1:eJwtmHnwVmUVx9+X5b1wecX7c8nUtG2mmmqyqalpbNpssskpm8ipKdzCJZUU
NW0xzQUh3HIDQQWVHZVd9n3fVxFZRQRcUJRQBHGBPh/O+ePMPd/nPPdZz/p8
vku3Tte0qtVq59VrtTZ8r6xqtQGNWu0JaBB0Ofgpvo8j71fWase01GpNaGaz
VpsFdYS/vqjVdiI/tUPIrgXvqEefy/j/Mf4fDL4N/AZjvA7tp/239JvD9wy+
34TmwR/DGM/T9wpwe8Yqwe2hE6AToT78+yTyvq4JuoZ/VvFdCf0Ffix0CP5D
aDz8M9DT0EDmHgRdAT/E9UB/hp9L2xzoNMY+HWrNnF2Y+xKoLfyx0A3wW5iz
iXwP86+C/xJta/h/N3gF+ATwAucBDwUPY/yu4JXgGeC2yKeD3wSvBH8OvBi8
GDwZ3B48AzyDtUyHPsVcJ0FLkU9FfiLykcjfhX4Nv5q2d5BtgubDn0TbEmT9
yzhrz/wS8MXuH/4ZaAJ0CPxBFXM41076L6H/F/h/eRVjvg3ty7kurUIXBuR5
b0e2mP6fof+iKuZfAP4Y2RjwNvAicEfks7178CDwg8gvAn8MXYjsRdo+QVZn
jxvgL6Ot4KwvRH4/fQfS1quMtXZF9ko91vwh+A/g9c6J/H/gX4GXgl8FLwWf
WsT6lsH3LWMsx7wA3Dv1525wL6gPY/aGhiMbAd1F231QX/r0oO8E2hpF3F9r
56VtDrJ28FOQDQL3z/u+FjwS/Gw9zvuv2g54iLYA7gF+NNej/nUDTwaPqYcO
q8v3l2Fr2txV4Ang0eBFrhd8A7QUfhn0N/iNef8HwM+mPi4H/94zc+2c7yZw
Z/DL4Jeg38B3grbB3wFN5d9p0J1VnKlneyby7eBZngF4CfJ7q7gz7+7HyHeB
79aGkM2D7oG/BZoIPwn6N/wU+o+j/3jw350LPB48BXwzeBh4BLgPuAv4OfAo
8MvgJ8HDwU/XQwfVxfEpnwG+Ncdz/HXgR8DzwZPA28CPag/QFvit+jRx6rH+
ox+0KM/3dfghVZD8G9BQ+GXIp9fj/z7gf7rGtKWbcv3Dka8F/6MKnzIwfae+
Ziby55DvtA28HvoyZ/cVbUDfhXwm8j2N0L+eZeieOnh+2qO2/g36b6jCH0wD
r0H+sPoCvdWI/x/Uv0A/oe9Z0B74Vh3CxrStdtDBMvzrL5HvraLtKviN9ei7
P+3pXOj9KnToO0X4uN3pF34BPgd6D/5t6GfwZ0PvVDH+gTL8aJuW8CX6S//x
3zptF6mLtLVmvlW0fbYIf7gavk2HaD8OOh5q1RL/2KbsBcabzb9fpP/aKm0e
/HXwC1XMeXkRezyYsUa5e3Jvk1wDfCtoMvw06CHObi59NpThs/Rdx0Az4Y9l
zo5Qxbgt0Ce0nY/sAuiI/j3vcyH/bynDPrQffZS+bnDGg4X6FfBr6T++5plX
QfKufxP8iir25h7X0fdV8A/AP4ReryKGGcsWVuF/p1YRO4whC8uIEfsaoSPq
ykRtFnwYalOEfb+A7HdF+FLPzLldw/PwS8qIScaiYzOmnFaEj9fXbwHfq603
In73BW+A36g9VRED9EXzs78x3Fh+JVS2hE/WNxtDdpSxj1OKiBkvl7En2+SP
xhr401P/jJ3qiLpiDH2rjJjlmI5lLNNGtCv17mh8zP2pA+qCZ+hZrgGP5Rxr
GX/U593I9tNnbT30+Y0qfNyZGW+829fAPy0iZu7MOXfkPSk7BL+uHmfkWW2u
Yg3Obe7j2rR9bcI1mkO4J/dibuF6jpSh8+q+dmts3F6PPMicy7zqZPhToHba
duZd5mae8ZWZr3RM+7m0iD06tve9zn2VYTvtcg7HNtcyx/Ffx2i0hE6oG+rs
K2X8+9Xcv2O8Bf557mdP7sG96IeU6YPOyni/t4ycytxqM3gq++iQa3at2trO
9F8r8763VpEfqh/mFu+VcXfaoLb4IXhb2pv63LZD+DJzhg/SfreCry5iriMZ
v/RBnnGR8dGc1TMc2gxd1yfpmz7dIdZqjmuuO6IZtq7N68vfzfxJH6gvnI18
Vz1yRnPHHZkvacPqyJuZL/6oiL2qE8vA3ypCVz5Kf2+MNlbvy/2qszv0Vxk/
jWnGttUZP/RX5rlrM/7p4/R1xkjj8LgyYqcx/btF+AB9gTlAp/T/np05wrY8
R3OH5Rn/9CET0z9MMfcEDwPP08fUI+c2994KnlWPHMxczPg/Frwa+UPgOZlP
GLOMXTP0WfXwIfqSA2l/5uDGEPObeeDjwfPTL6gLZ2TtoM5fl/rULu1BXh2r
tYSP1ld7x5O5mxVl7Mm9mM9ZI1gruOb+zfDh3q85n7nfuow3xovnqogZrdI/
G4ue0u75f0EZ/ndK9lFmrmhOZG5kDmAu8IAxshFnNhfcXZ0xPwc/7VlnvuA/
tyP7D7SgETmPuVGvbJM3N7wLfm8jckhzSXM053QuczfHHFFGnudcs6BmxquX
Mt7ZJq99mfOY+xhPjAPWTycXcT5rysgx323EnXg3ozO+qCPmSmvy/j3TUVXo
iGM6lrozF/776f/17+bdbzaiRrJWMgeyTf5oblRlLDYHbEZcMt6VUJV3ZFzb
XMbdmf+pk+riuCrWo41oG89k25FG2Ih9zXnNfbWpUWXciTqqbnpXPauI3cbw
sbQfBl9chI4aKz6qwhdpo9qqNqPt6HsOJXVL/VNmjfi9InJ08ylzBH2XPuxw
GTpuLTc/z7dV+jNt9GAVOds7aSfmN+Zo5xURi81vxOdm/jOhGTnaOen/3y9j
zfpQfefhHOvs3I9jHgB/u4gYZiyzJrc21yeNakaM35j66zmbY/dLP+B5mmNv
TX2Ynfqsz9JXDagiZ93fiJrW/ESfYO5uDq+vMIc1l/W+H21GDWAtsL0RdqaN
qZvqqLanDukT9AVzc45X0t6cW3tXt3aZ91eRw2/O/GhZxipjjTHHmDU3/Zl7
7F1FTmhueBzygVWQevdiGbLBVeT11pDWkvpaax99mj7XOZzro0bYijmkuaRv
Dr49XE/biLT/Z+l7XRX1ujVz92bYuLbuObxq3tWMvtZc1l7Wq9ay1rS+jdxI
2/qcf0z6J8/Kmsb/Xb97aSkiv7NmHZb6ba5qzWrt6hpci2OMLqPudOz/VlF/
WuOOzP7uwbWLrWGv9gzK8Eeez+5G+Hz9kbIVjai5JuXYjuWYznFTnp81pLXW
I+6hHu8Pvk1Zvz8B7g3+E/jxMs7K9frWcR/4sXq8f/j2dBe4Xz3qf98WenB+
w1w7+I9V+FNra228Z97PjUXkDOYOXfN8rPEHMNZtVdTy1vRPljGGYw0AP1RG
vWo9O5m2f1Xhe61frbH1wf7jv9b3vq1ZM45qxD/Wkt2hPvCPNOJ94h5trB7v
J529mzLedzwfa23ncGznGJ4+X9+vTg7O+1MXJmW9ag0+uhExWXvzzcy3M89k
Yhl52JbMX9RT30w8O8/w5mbciXO7hqFljGkt7D06l288rtU139KMGtZa1ju8
s4w765v66l36xvFUnucd9H8s7d14Z75S5fubOZU245uWd+sdP1zGm8HYRtTg
np9vAJvSn0/N+Ke9DMl63DeTZamPD+R7oLX6iOzbOdevTt3ajDeH/nk/nq9v
FuPTXzm+9b5vOb7p3E7//wNmqnfJ
            "]], 
           Polygon[CompressedData["
1:eJwtlmdQVkcUhi9EUC/X5DKJ0agxMabPpPfee3fSxq6JJpZgi0lmYomFIiJd
kS4CimJBjSJEQCzYUFDAgoVuokalqKhEyHNmz49n5r3vnr3f7t1zzn79Rk4Y
4OdpWVYAeMEk17KWe1vWXMeyJqOnQDQcxgvH22pbViGcwfuws2V9AO/BOsYy
8P4l7hycgYV45/DOig/va9wqdHf07dBMXAzeIrwydDlUQgTer3jr0etgNQTg
JfPbSbAS/sL7g5ip8DP8ousMIy4STqGroQriGIuHWnQBc/dBMTRAPTTDR6yn
kZjT0AB/w9t4a3nXQvQJ5h6HY7q+IMesYTpjM2AmXOc9XzPHD056WJbrw9rx
rxIXS3wJ46WwET2ImCEwGNqIWYJ3K/o5eB524C3Cu8DcRrgI8/DGwz70AsZ+
QvtBIHozXi7kwO94uTLOe56Gp+AK3gaw0AmMHWIdZRCOFwYRus7FjMVBG/oy
XIG1jH0HseiZjMUzL8E26zuPl8ZYOizT71yPVwc1ECVnTmwmzEfvwgvVtXiy
Fg/owIuX74nnxbM3OJCMtxKeREcREyl7lLzgXetgC5zU8x0na0DPJn4Jfgok
orsw14aukENMOH4YjNX4RHQcxMIEzf85zPNH56HzYQcE4w3BC5X6kL1DDCx1
zV5lz2chmrhZeFslbxnPlVyFNEiFBXp+G9Eh+j2C8eZDiGtyV/YUg14s3xxa
YQDr/wI+gw3EzJC8lPOSWBhBTABs17UGooMgERIgSfNfzkNq+ij6CFRozWSz
nk1QZJszlVwbJt8LHaTfJ07XvBtvL+zRswzFK9X6lTqOdM0+d6KLoFjzNZD5
ATBYv+M0vPWOqb3zeBfgouSoL/mGNxKGwyZifKmlKmpqGM9DoV1ygNgsyQfN
a8khOfPOMgcvGzbDKckTyGDsEcZO4B2HL9F/4l1l7BrU4r2Mtxqvkecm23zn
aKkByIKRrul/0s8uMt4BFmv7R/tFFvEteJds472L9w68pb0kDe5B3wv9odg1
vWSL5lqe9jXpB7cx3hN6wHbX5Geq1BtkaJ/OdE2NSq02aT+V+v0P3Q43YI1r
+tB19DVo1TovlDyFbbrvVXhF6D7o3nAHLJVegfcQejm6DF3umt4hPeQE9NN9
LGP8PvQBdAmUQjDj82Co5tJ0x9SN1M8YvBS8WXij0cmyd8f0eOn1x6ES0vW9
+zXXSohrgUuSz675prKGPei9Ul+u6U/Sp4ZLryEuHf0b+iD6kHwTvVNWaE5U
yP0BR6AGvsH7Fp6FTMf07IHS1yWfoAoqeGc5HNTvU4Pehb4bfRfcCan6G4+i
H4fHNP+kP0mf8teazULvds1Zy5n31bn+csaMT3RN/5A+0oxughb4XPtBAUxB
30zt9CYf+0B3qKFmxuGPlT7I8xriXke/CW9AnfQc3hkhvcw2vzXQNXGvMf4C
vAj1eA7zfaCnj/mtW3xN/X6M/hQ+0TtUaklqqhtx4/XukZ64jXcXyh0s/YV5
c/Bmw1ztl+KtQHeTfUAvSMFrx7sBHTBC+0Gr7v0yv+PB73hCD6hlvxPxJ8AW
x9Sw1HKbbc5P7tqd6B1ybrbpFTl6X8pau7InG3ygF++r432T8SdBvmPOur/W
78NaEwd4z37b3F8+eEl6bz2BPop3DCq1Pu7HexAe0HzO0zly1+WjCyQHeddh
OG2bd8idJ3d8tv4fkv9F0/CqXXM2ckbPaJ6GyD0Lg/S+jrJNP5Xvli29kT11
AW+8MXg/wmjYLP8/8KvZ7yiev4dOPHci7ibwgh80ri9+A3Ff8TwVCh3TO19F
vwIvaS/x1jk5jskbyZ9QuQNhlNb7YvT/8Iuh7A==
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0MsuQ1EUgOFVvTdatyETSY1c2pEOGbq16MzUA7QSIiX0ovUAJLyI6FN4
EUYkHsB3Itn//v+cwc5aZ/W82+6kIuIMX2KHn2YinrGn3/iUFwoR8zjRc1zB
sS7zLFq6xEU0dYHzONI5zuJQZ/iA07zPH97f5Sm/o6Ff+QVb+oovsabbySxY
0XWuYUlXuIyS/rVDss91PsKn6HGab/gWGX3H98jqPg+Q00MewYkH1xjGjAk/
opjs6NFFXucNLOsmt1DVXb7Apv42yA+29Wfq///+AV52Hk0=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Msug1EUQOGtJh2Lilar+hya8Ax1KRUSZYiOGKqkEoYMXXtD1OUFvAgj
Ek8hYeD708HKWoN99jk5pXqjsjcSEav4SEWccXM04ggXuss9fk1HvKCrn/kJ
HT3gR7T1A9/jVt9xHze6l5zDte7wFbf5kt/sP0/muY9TfcwtNHWdN3Gg53kO
u3qaC9jWf979izX9zRUes3+Bx3mRMzyBJT3JWSzrHE+hqvNcwEqyn4vp4b/M
cAk1/WP/FmfdncOOnuUy9vU6b+BQf5r9wol+Tw3/9x9YDyyb
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Mkug1EcxuG/VKJSN2FJwg1QU0wNCbGz7b4VbkTaWzDVEClpzbVTG6JL
liwkLTXegCex+OV5F1/OOfl6sytL+Y6IWFY9EfHMXGdEXi17nb/MdEfM6see
4bS+7SlO6sue4Lg+7TGO6sMeYVpte5jvHOIbS85/YZEFPdlrXFXDXuSCbu1B
Duja7mFKVbvl3U0d2A1u8DAZsckyt3jEY23bFVa1Y5/wVCX7jOfatS94qT37
ijXt26/Or7DL3UnV7D72q27PcV4P9p1v7/Vo3yT+/+8f+FU37A==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Esuw1EYQPFP0r/EhGElOtAhQ0YeLaojKaGeDYnGAliBsAob0RGJVTSp
dyh20JYWiV9jcHLOzU2++8genZSPByKigloqYspiP4k4wJw+5SJ/DEW8Y1m/
cRMF/covWNLP/IRF/cgPWND3fIe8vuUcN3ieL8yf5nM+w6Su8iGyOs85jOoM
j2FE99y1i8H+TG7g1xtuuMUr5re5xB1e5TV86nXewJcu8ya6eou30dM7vItv
vccV/Oi6+Ykz29zBsE7374e0nuFZjOsr+9eY0Jep///9AwLaMU8=
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Msug0EYgOGvi79JexeiCTdStMrCglgRG3ShJJRWnGrpfLgBViSuQqI3
onEKdd57/li8ed/JTL7MTM9MbWwhExGTuEwiWhbFbMQA9vQsn3MrH7GDM73N
WzjVm7yBE73OTRzrBq/hSK9yHYd6hQ94mffTWebvcpXn0dRlLmFJ93Nfuqfz
nMO0fnLXR0zoNt9hVN9wkR9y3pCe40F+5hcM6Vd+Q0l3+R1l/cGfGNZf/I2K
/uFfjOhb88f5njuY0ok7ZTGne7mARX1l/xoNfZH8/+8f0p8yeA==
          "]]}, {
         GrayLevel[0], 
         Line[CompressedData["
1:eJwl0Msuw0EYQPHPphI2lLahSDyDJjyHROjWA9RDSAnq0or7ZclG0i5ZtktC
4rJ0v6xJ6gH8/rE4OWdmMfPNjM7OTZY6IqKISiri3mKsM6KARz3FXzzSHTGM
Tz3EeXzoQR7Au85xFm86w/141X2cxovu5Wfu4ScuOf+BZ3gaV3qCx9HSWc7g
Qv+ar42GvuNbnOoG13Gst3mL57s0l3mHF3gRu3qJl7GnV7iCfb3KazjQ67yB
Q13lGo70mfNP+Jpvknv1N//gPHmfWdNo6pq9TVwm96T+//cPJ5YzjQ==
          "]]}, {
         Line[{2, 488, 11, 501, 502, 20, 527, 528, 29, 561, 562, 38, 595, 596,
           47, 629, 630, 56, 663, 664, 65, 695, 74}], 
         Line[{1910, 486, 1927, 3273, 2849, 3274, 1945, 3296, 2857, 3295, 
          1963, 3322, 2865, 3323, 1980, 3348, 2874, 3347, 1995, 3371, 2883, 
          3372, 2012, 3401, 2894, 3400, 2031, 3426, 2029, 2051}], 
         Line[{1912, 487, 1928, 505, 3276, 1946, 3299, 2858, 3300, 1964, 3326,
           2868, 3325, 1981, 3350, 2877, 3351, 1996, 3376, 2886, 3375, 2013, 
          3403, 2897, 3404, 2032, 3428, 2033, 2052}], 
         Line[{1914, 2847, 3269, 1930, 2852, 3279, 3280, 1948, 3307, 2860, 
          3305, 1966, 3333, 2870, 3331, 1983, 609, 3356, 1998, 3381, 2889, 
          3384, 2015, 3411, 2900, 3409, 2035, 3434, 2039, 2054}], 
         Line[{1917, 2848, 3271, 1933, 2854, 3289, 3291, 1951, 3318, 2863, 
          3316, 1969, 3339, 2872, 3344, 1985, 2881, 3365, 3367, 2001, 3396, 
          2892, 3391, 2017, 3418, 2902, 3423, 2037, 3440, 2045, 2056}], 
         Line[{1919, 1926, 3275, 1935, 1944, 3297, 3298, 1954, 3293, 2866, 
          3324, 1972, 3320, 2875, 3349, 1987, 3346, 2885, 3374, 2003, 3369, 
          2895, 3402, 2020, 3427, 2904, 3399, 2041, 3425, 2911, 2058}], 
         Line[{1921, 1931, 3278, 1938, 3304, 2859, 3303, 1957, 3330, 2869, 
          3329, 1974, 3353, 2878, 3355, 1990, 3380, 2887, 3379, 2006, 3406, 
          2898, 3408, 2023, 3430, 2905, 3432, 2043, 3445, 2913, 2061}], 
         Line[{1923, 1936, 3283, 1940, 1955, 3310, 3312, 1959, 579, 3336, 
          1976, 3361, 2880, 3360, 1992, 2004, 3386, 3388, 2008, 3416, 2901, 
          3415, 2026, 3436, 2907, 3438, 2047, 3447, 2914, 2063}], 
         Line[{1925, 3266, 2856, 1943, 1960, 3284, 3286, 1962, 3313, 2873, 
          3342, 1979, 621, 3337, 1994, 3362, 2893, 3394, 2011, 689, 3395, 
          2028, 3422, 2909, 3443, 2050, 3449, 2916, 2065}], 
         Line[{2053, 2038, 3433, 2034, 2018, 3412, 3410, 2014, 3383, 3382, 
          2888, 1997, 610, 3357, 1982, 1970, 3334, 3332, 1965, 1952, 3308, 
          3306, 1947, 512, 3281, 1929, 1911, 3268, 1913}], 
         Line[{2055, 2044, 3439, 2036, 2024, 3419, 3417, 2016, 3390, 3389, 
          2891, 2000, 3366, 2882, 3363, 1984, 3343, 2871, 3338, 1968, 3315, 
          3314, 2862, 1950, 3290, 2855, 3287, 1932, 1915, 3270, 1916}], 
         Line[{2057, 2910, 3424, 2040, 3398, 3397, 2030, 2019, 2896, 3370, 
          3368, 2002, 3373, 2884, 3345, 1986, 2876, 3321, 3319, 1971, 2867, 
          3294, 3292, 1953, 530, 3272, 1934, 2850, 3267, 1918}], 
         Line[{2060, 2912, 3444, 2042, 2906, 3431, 3429, 2022, 2899, 3407, 
          3405, 2005, 3378, 3377, 1999, 1989, 2879, 3354, 3352, 1973, 3328, 
          3327, 1967, 1956, 3302, 3301, 1949, 1937, 2851, 3277, 1920}], 
         Line[{2062, 3446, 2059, 2046, 2908, 3437, 3435, 2025, 3414, 3413, 
          2021, 2007, 3387, 2890, 3385, 1991, 3359, 3358, 1988, 1975, 580, 
          3335, 1958, 3311, 2861, 3309, 1939, 2853, 3282, 1922}], 
         Line[{2064, 2915, 3448, 2049, 3442, 3441, 2048, 2027, 2903, 3421, 
          3420, 2010, 3393, 3392, 2009, 1993, 622, 3364, 1978, 3341, 3340, 
          1977, 1961, 3285, 2864, 3317, 1942, 3288, 1941, 1924}], 
         Line[{83, 726, 92, 739, 740, 101, 765, 766, 110, 799, 800, 119, 833, 
          834, 128, 867, 868, 137, 901, 902, 146, 933, 155}], 
         Line[{2066, 724, 2083, 3457, 2919, 3458, 2101, 3480, 2927, 3479, 
          2119, 3506, 2935, 3507, 2136, 3532, 2944, 3531, 2151, 3555, 2953, 
          3556, 2168, 3585, 2964, 3584, 2187, 3610, 2185, 2207}], 
         Line[{2068, 725, 2084, 743, 3460, 2102, 3483, 2928, 3484, 2120, 3510,
           2938, 3509, 2137, 3534, 2947, 3535, 2152, 3560, 2956, 3559, 2169, 
          3587, 2967, 3588, 2188, 3612, 2189, 2208}], 
         Line[{2070, 2917, 3453, 2086, 2922, 3463, 3464, 2104, 3491, 2930, 
          3489, 2122, 3517, 2940, 3515, 2139, 847, 3540, 2154, 3565, 2959, 
          3568, 2171, 3595, 2970, 3593, 2191, 3618, 2195, 2210}], 
         Line[{2073, 2918, 3455, 2089, 2924, 3473, 3475, 2107, 3502, 2933, 
          3500, 2125, 3523, 2942, 3528, 2141, 2951, 3549, 3551, 2157, 3580, 
          2962, 3575, 2173, 3602, 2972, 3607, 2193, 3624, 2201, 2212}], 
         Line[{2075, 2082, 3459, 2091, 2100, 3481, 3482, 2110, 3477, 2936, 
          3508, 2128, 3504, 2945, 3533, 2143, 3530, 2955, 3558, 2159, 3553, 
          2965, 3586, 2176, 3611, 2974, 3583, 2197, 3609, 2981, 2214}], 
         Line[{2077, 2087, 3462, 2094, 3488, 2929, 3487, 2113, 3514, 2939, 
          3513, 2130, 3537, 2948, 3539, 2146, 3564, 2957, 3563, 2162, 3590, 
          2968, 3592, 2179, 3614, 2975, 3616, 2199, 3629, 2983, 2217}], 
         Line[{2079, 2092, 3467, 2096, 2111, 3494, 3496, 2115, 817, 3520, 
          2132, 3545, 2950, 3544, 2148, 2160, 3570, 3572, 2164, 3600, 2971, 
          3599, 2182, 3620, 2977, 3622, 2203, 3631, 2984, 2219}], 
         Line[{2081, 3450, 2926, 2099, 2116, 3468, 3470, 2118, 3497, 2943, 
          3526, 2135, 859, 3521, 2150, 3546, 2963, 3578, 2167, 927, 3579, 
          2184, 3606, 2979, 3627, 2206, 3633, 2986, 2221}], 
         Line[{2209, 2194, 3617, 2190, 2174, 3596, 3594, 2170, 3567, 3566, 
          2958, 2153, 848, 3541, 2138, 2126, 3518, 3516, 2121, 2108, 3492, 
          3490, 2103, 750, 3465, 2085, 2067, 3452, 2069}], 
         Line[{2211, 2200, 3623, 2192, 2180, 3603, 3601, 2172, 3574, 3573, 
          2961, 2156, 3550, 2952, 3547, 2140, 3527, 2941, 3522, 2124, 3499, 
          3498, 2932, 2106, 3474, 2925, 3471, 2088, 2071, 3454, 2072}], 
         Line[{2213, 2980, 3608, 2196, 3582, 3581, 2186, 2175, 2966, 3554, 
          3552, 2158, 3557, 2954, 3529, 2142, 2946, 3505, 3503, 2127, 2937, 
          3478, 3476, 2109, 768, 3456, 2090, 2920, 3451, 2074}], 
         Line[{2216, 2982, 3628, 2198, 2976, 3615, 3613, 2178, 2969, 3591, 
          3589, 2161, 3562, 3561, 2155, 2145, 2949, 3538, 3536, 2129, 3512, 
          3511, 2123, 2112, 3486, 3485, 2105, 2093, 2921, 3461, 2076}], 
         Line[{2218, 3630, 2215, 2202, 2978, 3621, 3619, 2181, 3598, 3597, 
          2177, 2163, 3571, 2960, 3569, 2147, 3543, 3542, 2144, 2131, 818, 
          3519, 2114, 3495, 2931, 3493, 2095, 2923, 3466, 2078}], 
         Line[{2220, 2985, 3632, 2205, 3626, 3625, 2204, 2183, 2973, 3605, 
          3604, 2166, 3577, 3576, 2165, 2149, 860, 3548, 2134, 3525, 3524, 
          2133, 2117, 3469, 2934, 3501, 2098, 3472, 2097, 2080}], 
         Line[{164, 964, 173, 977, 978, 182, 1003, 1004, 191, 1037, 1038, 200,
           1071, 1072, 209, 1105, 1106, 218, 1139, 1140, 227, 1171, 236}], 
         Line[{2222, 962, 2239, 3641, 2989, 3642, 2257, 3664, 2997, 3663, 
          2275, 3690, 3005, 3691, 2292, 3716, 3014, 3715, 2307, 3739, 3023, 
          3740, 2324, 3769, 3034, 3768, 2343, 3794, 2341, 2363}], 
         Line[{2224, 963, 2240, 981, 3644, 2258, 3667, 2998, 3668, 2276, 3694,
           3008, 3693, 2293, 3718, 3017, 3719, 2308, 3744, 3026, 3743, 2325, 
          3771, 3037, 3772, 2344, 3796, 2345, 2364}], 
         Line[{2226, 2987, 3637, 2242, 2992, 3647, 3648, 2260, 3675, 3000, 
          3673, 2278, 3701, 3010, 3699, 2295, 1085, 3724, 2310, 3749, 3029, 
          3752, 2327, 3779, 3040, 3777, 2347, 3802, 2351, 2366}], 
         Line[{2229, 2988, 3639, 2245, 2994, 3657, 3659, 2263, 3686, 3003, 
          3684, 2281, 3707, 3012, 3712, 2297, 3021, 3733, 3735, 2313, 3764, 
          3032, 3759, 2329, 3786, 3042, 3791, 2349, 3808, 2357, 2368}], 
         Line[{2231, 2238, 3643, 2247, 2256, 3665, 3666, 2266, 3661, 3006, 
          3692, 2284, 3688, 3015, 3717, 2299, 3714, 3025, 3742, 2315, 3737, 
          3035, 3770, 2332, 3795, 3044, 3767, 2353, 3793, 3051, 2370}], 
         Line[{2233, 2243, 3646, 2250, 3672, 2999, 3671, 2269, 3698, 3009, 
          3697, 2286, 3721, 3018, 3723, 2302, 3748, 3027, 3747, 2318, 3774, 
          3038, 3776, 2335, 3798, 3045, 3800, 2355, 3813, 3053, 2373}], 
         Line[{2235, 2248, 3651, 2252, 2267, 3678, 3680, 2271, 1055, 3704, 
          2288, 3729, 3020, 3728, 2304, 2316, 3754, 3756, 2320, 3784, 3041, 
          3783, 2338, 3804, 3047, 3806, 2359, 3815, 3054, 2375}], 
         Line[{2237, 3634, 2996, 2255, 2272, 3652, 3654, 2274, 3681, 3013, 
          3710, 2291, 1097, 3705, 2306, 3730, 3033, 3762, 2323, 1165, 3763, 
          2340, 3790, 3049, 3811, 2362, 3817, 3056, 2377}], 
         Line[{2365, 2350, 3801, 2346, 2330, 3780, 3778, 2326, 3751, 3750, 
          3028, 2309, 1086, 3725, 2294, 2282, 3702, 3700, 2277, 2264, 3676, 
          3674, 2259, 988, 3649, 2241, 2223, 3636, 2225}], 
         Line[{2367, 2356, 3807, 2348, 2336, 3787, 3785, 2328, 3758, 3757, 
          3031, 2312, 3734, 3022, 3731, 2296, 3711, 3011, 3706, 2280, 3683, 
          3682, 3002, 2262, 3658, 2995, 3655, 2244, 2227, 3638, 2228}], 
         Line[{2369, 3050, 3792, 2352, 3766, 3765, 2342, 2331, 3036, 3738, 
          3736, 2314, 3741, 3024, 3713, 2298, 3016, 3689, 3687, 2283, 3007, 
          3662, 3660, 2265, 1006, 3640, 2246, 2990, 3635, 2230}], 
         Line[{2372, 3052, 3812, 2354, 3046, 3799, 3797, 2334, 3039, 3775, 
          3773, 2317, 3746, 3745, 2311, 2301, 3019, 3722, 3720, 2285, 3696, 
          3695, 2279, 2268, 3670, 3669, 2261, 2249, 2991, 3645, 2232}], 
         Line[{2374, 3814, 2371, 2358, 3048, 3805, 3803, 2337, 3782, 3781, 
          2333, 2319, 3755, 3030, 3753, 2303, 3727, 3726, 2300, 2287, 1056, 
          3703, 2270, 3679, 3001, 3677, 2251, 2993, 3650, 2234}], 
         Line[{2376, 3055, 3816, 2361, 3810, 3809, 2360, 2339, 3043, 3789, 
          3788, 2322, 3761, 3760, 2321, 2305, 1098, 3732, 2290, 3709, 3708, 
          2289, 2273, 3653, 3004, 3685, 2254, 3656, 2253, 2236}], 
         Line[{245, 1202, 254, 1215, 1216, 263, 1241, 1242, 272, 1275, 1276, 
          281, 1309, 1310, 290, 1343, 1344, 299, 1377, 1378, 308, 1409, 317}], 
         Line[{2378, 1200, 2395, 3825, 3059, 3826, 2413, 3848, 3067, 3847, 
          2431, 3874, 3075, 3875, 2448, 3900, 3084, 3899, 2463, 3923, 3093, 
          3924, 2480, 3953, 3104, 3952, 2499, 3978, 2497, 2519}], 
         Line[{2380, 1201, 2396, 1219, 3828, 2414, 3851, 3068, 3852, 2432, 
          3878, 3078, 3877, 2449, 3902, 3087, 3903, 2464, 3928, 3096, 3927, 
          2481, 3955, 3107, 3956, 2500, 3980, 2501, 2520}], 
         Line[{2382, 3057, 3821, 2398, 3062, 3831, 3832, 2416, 3859, 3070, 
          3857, 2434, 3885, 3080, 3883, 2451, 1323, 3908, 2466, 3933, 3099, 
          3936, 2483, 3963, 3110, 3961, 2503, 3986, 2507, 2522}], 
         Line[{2385, 3058, 3823, 2401, 3064, 3841, 3843, 2419, 3870, 3073, 
          3868, 2437, 3891, 3082, 3896, 2453, 3091, 3917, 3919, 2469, 3948, 
          3102, 3943, 2485, 3970, 3112, 3975, 2505, 3992, 2513, 2524}], 
         Line[{2387, 2394, 3827, 2403, 2412, 3849, 3850, 2422, 3845, 3076, 
          3876, 2440, 3872, 3085, 3901, 2455, 3898, 3095, 3926, 2471, 3921, 
          3105, 3954, 2488, 3979, 3114, 3951, 2509, 3977, 3121, 2526}], 
         Line[{2389, 2399, 3830, 2406, 3856, 3069, 3855, 2425, 3882, 3079, 
          3881, 2442, 3905, 3088, 3907, 2458, 3932, 3097, 3931, 2474, 3958, 
          3108, 3960, 2491, 3982, 3115, 3984, 2511, 3997, 3123, 2529}], 
         Line[{2391, 2404, 3835, 2408, 2423, 3862, 3864, 2427, 1293, 3888, 
          2444, 3913, 3090, 3912, 2460, 2472, 3938, 3940, 2476, 3968, 3111, 
          3967, 2494, 3988, 3117, 3990, 2515, 3999, 3124, 2531}], 
         Line[{2393, 3818, 3066, 2411, 2428, 3836, 3838, 2430, 3865, 3083, 
          3894, 2447, 1335, 3889, 2462, 3914, 3103, 3946, 2479, 1403, 3947, 
          2496, 3974, 3119, 3995, 2518, 4001, 3126, 2533}], 
         Line[{2521, 2506, 3985, 2502, 2486, 3964, 3962, 2482, 3935, 3934, 
          3098, 2465, 1324, 3909, 2450, 2438, 3886, 3884, 2433, 2420, 3860, 
          3858, 2415, 1226, 3833, 2397, 2379, 3820, 2381}], 
         Line[{2523, 2512, 3991, 2504, 2492, 3971, 3969, 2484, 3942, 3941, 
          3101, 2468, 3918, 3092, 3915, 2452, 3895, 3081, 3890, 2436, 3867, 
          3866, 3072, 2418, 3842, 3065, 3839, 2400, 2383, 3822, 2384}], 
         Line[{2525, 3120, 3976, 2508, 3950, 3949, 2498, 2487, 3106, 3922, 
          3920, 2470, 3925, 3094, 3897, 2454, 3086, 3873, 3871, 2439, 3077, 
          3846, 3844, 2421, 1244, 3824, 2402, 3060, 3819, 2386}], 
         Line[{2528, 3122, 3996, 2510, 3116, 3983, 3981, 2490, 3109, 3959, 
          3957, 2473, 3930, 3929, 2467, 2457, 3089, 3906, 3904, 2441, 3880, 
          3879, 2435, 2424, 3854, 3853, 2417, 2405, 3061, 3829, 2388}], 
         Line[{2530, 3998, 2527, 2514, 3118, 3989, 3987, 2493, 3966, 3965, 
          2489, 2475, 3939, 3100, 3937, 2459, 3911, 3910, 2456, 2443, 1294, 
          3887, 2426, 3863, 3071, 3861, 2407, 3063, 3834, 2390}], 
         Line[{2532, 3125, 4000, 2517, 3994, 3993, 2516, 2495, 3113, 3973, 
          3972, 2478, 3945, 3944, 2477, 2461, 1336, 3916, 2446, 3893, 3892, 
          2445, 2429, 3837, 3074, 3869, 2410, 3840, 2409, 2392}], 
         Line[{326, 1440, 335, 1453, 1454, 344, 1479, 1480, 353, 1513, 1514, 
          362, 1547, 1548, 370, 1577, 1578, 379, 1611, 1612, 388, 1643, 397}], 
         Line[{2534, 1438, 2551, 4009, 3129, 4010, 2569, 4032, 3137, 4031, 
          2587, 4056, 3145, 4057, 2604, 4084, 3156, 4083, 2620, 4082, 3162, 
          4105, 2637, 4137, 3173, 4136, 2656, 4162, 2654, 2676}], 
         Line[{2536, 1439, 2552, 1457, 4012, 2570, 4035, 3138, 4036, 2588, 
          4060, 3148, 4059, 2605, 4088, 3159, 4089, 2621, 4112, 3165, 4111, 
          2638, 4139, 3176, 4140, 2657, 4164, 2658, 2677}], 
         Line[{2538, 3127, 4005, 2554, 3132, 4015, 4016, 2572, 4043, 3140, 
          4041, 2590, 4067, 3150, 4065, 2607, 1561, 4094, 2623, 4117, 3168, 
          4120, 2640, 4147, 3179, 4145, 2660, 4170, 2664, 2679}], 
         Line[{2541, 3128, 4007, 2557, 3134, 4025, 4027, 2575, 4054, 3143, 
          4052, 2593, 4073, 3152, 4079, 2610, 4106, 3161, 4101, 2626, 4132, 
          3171, 4127, 2642, 4154, 3181, 4159, 2662, 4176, 2670, 2681}], 
         Line[{2543, 2550, 4011, 2559, 2568, 4033, 4034, 2578, 4029, 3146, 
          4058, 2596, 4055, 3154, 4081, 2612, 4108, 3164, 4110, 2628, 4103, 
          3174, 4138, 2645, 4163, 3183, 4135, 2666, 4161, 3190, 2683}], 
         Line[{2545, 2555, 4014, 2562, 4040, 3139, 4039, 2581, 4064, 3149, 
          4063, 2598, 4086, 3157, 4090, 2614, 4116, 3166, 4115, 2631, 4142, 
          3177, 4144, 2648, 4166, 3184, 4168, 2668, 4181, 3192, 2686}], 
         Line[{2547, 2560, 4019, 2564, 2579, 4046, 4048, 2583, 1531, 4070, 
          2600, 4096, 3160, 4093, 2616, 2629, 4122, 4124, 2633, 4152, 3180, 
          4151, 2651, 4172, 3186, 4174, 2672, 4183, 3193, 2688}], 
         Line[{2549, 4002, 3136, 2567, 2584, 4020, 4022, 2586, 4049, 3155, 
          4076, 2603, 1567, 4071, 2619, 4098, 3172, 4130, 2636, 1637, 4131, 
          2653, 4158, 3188, 4179, 2675, 4185, 3195, 2690}], 
         Line[{2678, 2663, 4169, 2659, 2643, 4148, 4146, 2639, 4119, 4118, 
          3167, 2622, 1562, 4095, 2606, 2594, 4068, 4066, 2589, 2576, 4044, 
          4042, 2571, 1464, 4017, 2553, 2535, 4004, 2537}], 
         Line[{2680, 2669, 4175, 2661, 2649, 4155, 4153, 2641, 4126, 4125, 
          3170, 2625, 4100, 4099, 2617, 2609, 4078, 3151, 4072, 2592, 4051, 
          4050, 3142, 2574, 4026, 3135, 4023, 2556, 2539, 4006, 2540}], 
         Line[{2682, 3189, 4160, 2665, 4134, 4133, 2655, 2644, 3175, 4104, 
          4102, 2627, 4109, 3163, 4107, 2611, 4080, 4077, 3153, 2595, 3147, 
          4030, 4028, 2577, 1482, 4008, 2558, 3130, 4003, 2542}], 
         Line[{2685, 3191, 4180, 2667, 3185, 4167, 4165, 2647, 3178, 4143, 
          4141, 2630, 4114, 4113, 2624, 2613, 3158, 4087, 4085, 2597, 4062, 
          4061, 2591, 2580, 4038, 4037, 2573, 2561, 3131, 4013, 2544}], 
         Line[{2687, 4182, 2684, 2671, 3187, 4173, 4171, 2650, 4150, 4149, 
          2646, 2632, 4123, 3169, 4121, 2615, 4092, 4091, 2608, 2599, 1532, 
          4069, 2582, 4047, 3141, 4045, 2563, 3133, 4018, 2546}], 
         Line[{2689, 3194, 4184, 2674, 4178, 4177, 2673, 2652, 3182, 4157, 
          4156, 2635, 4129, 4128, 2634, 2618, 1568, 4097, 2602, 4075, 4074, 
          2601, 2585, 4021, 3144, 4053, 2566, 4024, 2565, 2548}], 
         Line[{406, 1674, 415, 1687, 1688, 424, 1713, 1714, 433, 1747, 1748, 
          442, 1781, 1782, 451, 1815, 1816, 460, 1849, 1850, 469, 1881, 478}], 
         Line[{2691, 1672, 2708, 4193, 3198, 4194, 2726, 4216, 3206, 4215, 
          2744, 4242, 3214, 4243, 2761, 4268, 3223, 4267, 2776, 4291, 3232, 
          4292, 2793, 4321, 3243, 4320, 2812, 4346, 2810, 2832}], 
         Line[{2693, 1673, 2709, 1691, 4196, 2727, 4219, 3207, 4220, 2745, 
          4246, 3217, 4245, 2762, 4270, 3226, 4271, 2777, 4296, 3235, 4295, 
          2794, 4323, 3246, 4324, 2813, 4348, 2814, 2833}], 
         Line[{2695, 3196, 4189, 2711, 3201, 4199, 4200, 2729, 4227, 3209, 
          4225, 2747, 4253, 3219, 4251, 2764, 1795, 4276, 2779, 4301, 3238, 
          4304, 2796, 4331, 3249, 4329, 2816, 4354, 2820, 2835}], 
         Line[{2698, 3197, 4191, 2714, 3203, 4209, 4211, 2732, 4238, 3212, 
          4236, 2750, 4259, 3221, 4264, 2766, 3230, 4285, 4287, 2782, 4316, 
          3241, 4311, 2798, 4338, 3251, 4343, 2818, 4360, 2826, 2837}], 
         Line[{2700, 2707, 4195, 2716, 2725, 4217, 4218, 2735, 4213, 3215, 
          4244, 2753, 4240, 3224, 4269, 2768, 4266, 3234, 4294, 2784, 4289, 
          3244, 4322, 2801, 4347, 3253, 4319, 2822, 4345, 3260, 2839}], 
         Line[{2702, 2712, 4198, 2719, 4224, 3208, 4223, 2738, 4250, 3218, 
          4249, 2755, 4273, 3227, 4275, 2771, 4300, 3236, 4299, 2787, 4326, 
          3247, 4328, 2804, 4350, 3254, 4352, 2824, 4365, 3262, 2842}], 
         Line[{2704, 2717, 4203, 2721, 2736, 4230, 4232, 2740, 1765, 4256, 
          2757, 4281, 3229, 4280, 2773, 2785, 4306, 4308, 2789, 4336, 3250, 
          4335, 2807, 4356, 3256, 4358, 2828, 4367, 3263, 2844}], 
         Line[{2706, 4186, 3205, 2724, 2741, 4204, 4206, 2743, 4233, 3222, 
          4262, 2760, 1807, 4257, 2775, 4282, 3242, 4314, 2792, 1875, 4315, 
          2809, 4342, 3258, 4363, 2831, 4369, 3265, 2846}], 
         Line[{2834, 2819, 4353, 2815, 2799, 4332, 4330, 2795, 4303, 4302, 
          3237, 2778, 1796, 4277, 2763, 2751, 4254, 4252, 2746, 2733, 4228, 
          4226, 2728, 1698, 4201, 2710, 2692, 4188, 2694}], 
         Line[{2836, 2825, 4359, 2817, 2805, 4339, 4337, 2797, 4310, 4309, 
          3240, 2781, 4286, 3231, 4283, 2765, 4263, 3220, 4258, 2749, 4235, 
          4234, 3211, 2731, 4210, 3204, 4207, 2713, 2696, 4190, 2697}], 
         Line[{2838, 3259, 4344, 2821, 4318, 4317, 2811, 2800, 3245, 4290, 
          4288, 2783, 4293, 3233, 4265, 2767, 3225, 4241, 4239, 2752, 3216, 
          4214, 4212, 2734, 1716, 4192, 2715, 3199, 4187, 2699}], 
         Line[{2841, 3261, 4364, 2823, 3255, 4351, 4349, 2803, 3248, 4327, 
          4325, 2786, 4298, 4297, 2780, 2770, 3228, 4274, 4272, 2754, 4248, 
          4247, 2748, 2737, 4222, 4221, 2730, 2718, 3200, 4197, 2701}], 
         Line[{2843, 4366, 2840, 2827, 3257, 4357, 4355, 2806, 4334, 4333, 
          2802, 2788, 4307, 3239, 4305, 2772, 4279, 4278, 2769, 2756, 1766, 
          4255, 2739, 4231, 3210, 4229, 2720, 3202, 4202, 2703}], 
         Line[{2845, 3264, 4368, 2830, 4362, 4361, 2829, 2808, 3252, 4341, 
          4340, 2791, 4313, 4312, 2790, 2774, 1808, 4284, 2759, 4261, 4260, 
          2758, 2742, 4205, 3213, 4237, 2723, 4208, 2722, 2705}]}, {
         Line[{490, 3395, 690, 3421, 684, 682, 3415, 3414, 676, 3408, 674, 
          3407, 668, 3402, 666, 3370, 654, 652, 3391, 3390, 646, 644, 3384, 
          3383, 638, 3375, 636, 630, 626, 3372, 662}], 
         Line[{497, 656, 3394, 3393, 650, 3388, 3387, 648, 642, 640, 3379, 
          3378, 634, 3374, 3373, 632, 620, 3367, 3366, 618, 612, 3356, 610, 
          604, 602, 3351, 596, 3347, 592, 628}], 
         Line[{500, 486, 488, 487, 491, 3268, 492, 3269, 493, 3270, 494, 3271,
           495, 3267, 503, 3275, 504, 3277, 509, 3278, 510, 3282, 515, 3283, 
          516, 3288, 521, 3266, 522}], 
         Line[{18, 1943, 1942, 17, 1940, 1939, 16, 1938, 1937, 15, 1935, 1934,
           14, 1933, 1932, 13, 1930, 1929, 12, 1928, 11, 1927, 10}], 
         Line[{525, 498, 3273, 501, 505, 507, 3281, 511, 3279, 513, 3287, 517,
           3289, 519, 3272, 529, 3297, 531, 3301, 537, 3304, 539, 3309, 545, 
          3310, 547, 3317, 553, 3284, 555}], 
         Line[{556, 3286, 3285, 554, 548, 3312, 3311, 546, 540, 538, 3303, 
          3302, 532, 3298, 530, 520, 3291, 3290, 518, 514, 3280, 512, 508, 
          3276, 506, 502, 499, 3274, 526}], 
         Line[{559, 3296, 523, 527, 533, 3299, 535, 3306, 3307, 541, 543, 
          3314, 549, 3318, 551, 3292, 3293, 563, 565, 3327, 571, 3330, 573, 
          3335, 579, 581, 3340, 587, 3313, 589}], 
         Line[{590, 588, 3342, 3341, 582, 3336, 580, 574, 572, 3329, 3328, 
          566, 3324, 564, 3294, 552, 550, 3316, 3315, 544, 3305, 542, 3308, 
          536, 534, 3300, 528, 3295, 524, 560}], 
         Line[{593, 557, 3322, 561, 3326, 567, 569, 3332, 3333, 575, 577, 
          3338, 3339, 583, 585, 3319, 3320, 597, 599, 3352, 3353, 605, 607, 
          3358, 613, 3361, 615, 3364, 621, 623}], 
         Line[{624, 3337, 622, 616, 614, 3360, 3359, 608, 3355, 606, 3354, 
          600, 3349, 598, 3321, 586, 3344, 3343, 584, 578, 3331, 576, 3334, 
          570, 3325, 568, 562, 558, 3323, 594}], 
         Line[{627, 3348, 591, 595, 601, 3350, 603, 3357, 609, 611, 3363, 617,
           3365, 619, 3345, 3346, 631, 633, 3377, 639, 3380, 641, 3385, 647, 
          3386, 649, 3392, 655, 3362, 496}], 
         Line[{658, 715, 3443, 3442, 711, 3438, 709, 3437, 705, 3432, 703, 
          3431, 699, 697, 3399, 3398, 688, 3423, 686, 3419, 680, 3409, 678, 
          3412, 672, 670, 3404, 664, 3400, 660, 694}], 
         Line[{661, 625, 3371, 629, 3376, 635, 637, 3382, 643, 3381, 645, 
          3389, 651, 3396, 653, 3368, 3369, 665, 667, 3405, 3406, 673, 675, 
          3413, 681, 3416, 683, 3420, 689, 489}], 
         Line[{691, 723, 3449, 3448, 722, 3447, 721, 3446, 720, 719, 3445, 
          3444, 718, 717, 3425, 3424, 713, 712, 3440, 3439, 707, 706, 3434, 
          3433, 701, 700, 3428, 695, 3426, 692, 716}], 
         Line[{693, 3401, 659, 663, 669, 3403, 671, 3410, 3411, 677, 679, 
          3417, 3418, 685, 687, 3397, 696, 3427, 698, 3429, 3430, 702, 704, 
          3435, 3436, 708, 710, 3441, 714, 3422, 657}], 
         Line[{728, 3579, 928, 3605, 922, 920, 3599, 3598, 914, 3592, 912, 
          3591, 906, 3586, 904, 3554, 892, 890, 3575, 3574, 884, 882, 3568, 
          3567, 876, 3559, 874, 868, 864, 3556, 900}], 
         Line[{735, 894, 3578, 3577, 888, 3572, 3571, 886, 880, 878, 3563, 
          3562, 872, 3558, 3557, 870, 858, 3551, 3550, 856, 850, 3540, 848, 
          842, 840, 3535, 834, 3531, 830, 866}], 
         Line[{738, 724, 726, 725, 729, 3452, 730, 3453, 731, 3454, 732, 3455,
           733, 3451, 741, 3459, 742, 3461, 747, 3462, 748, 3466, 753, 3467, 
          754, 3472, 759, 3450, 760}], 
         Line[{99, 2099, 2098, 98, 2096, 2095, 97, 2094, 2093, 96, 2091, 2090,
           95, 2089, 2088, 94, 2086, 2085, 93, 2084, 92, 2083, 91}], 
         Line[{763, 736, 3457, 739, 743, 745, 3465, 749, 3463, 751, 3471, 755,
           3473, 757, 3456, 767, 3481, 769, 3485, 775, 3488, 777, 3493, 783, 
          3494, 785, 3501, 791, 3468, 793}], 
         Line[{794, 3470, 3469, 792, 786, 3496, 3495, 784, 778, 776, 3487, 
          3486, 770, 3482, 768, 758, 3475, 3474, 756, 752, 3464, 750, 746, 
          3460, 744, 740, 737, 3458, 764}], 
         Line[{797, 3480, 761, 765, 771, 3483, 773, 3490, 3491, 779, 781, 
          3498, 787, 3502, 789, 3476, 3477, 801, 803, 3511, 809, 3514, 811, 
          3519, 817, 819, 3524, 825, 3497, 827}], 
         Line[{828, 826, 3526, 3525, 820, 3520, 818, 812, 810, 3513, 3512, 
          804, 3508, 802, 3478, 790, 788, 3500, 3499, 782, 3489, 780, 3492, 
          774, 772, 3484, 766, 3479, 762, 798}], 
         Line[{831, 795, 3506, 799, 3510, 805, 807, 3516, 3517, 813, 815, 
          3522, 3523, 821, 823, 3503, 3504, 835, 837, 3536, 3537, 843, 845, 
          3542, 851, 3545, 853, 3548, 859, 861}], 
         Line[{862, 3521, 860, 854, 852, 3544, 3543, 846, 3539, 844, 3538, 
          838, 3533, 836, 3505, 824, 3528, 3527, 822, 816, 3515, 814, 3518, 
          808, 3509, 806, 800, 796, 3507, 832}], 
         Line[{865, 3532, 829, 833, 839, 3534, 841, 3541, 847, 849, 3547, 855,
           3549, 857, 3529, 3530, 869, 871, 3561, 877, 3564, 879, 3569, 885, 
          3570, 887, 3576, 893, 3546, 734}], 
         Line[{896, 953, 3627, 3626, 949, 3622, 947, 3621, 943, 3616, 941, 
          3615, 937, 935, 3583, 3582, 926, 3607, 924, 3603, 918, 3593, 916, 
          3596, 910, 908, 3588, 902, 3584, 898, 932}], 
         Line[{899, 863, 3555, 867, 3560, 873, 875, 3566, 881, 3565, 883, 
          3573, 889, 3580, 891, 3552, 3553, 903, 905, 3589, 3590, 911, 913, 
          3597, 919, 3600, 921, 3604, 927, 727}], 
         Line[{929, 961, 3633, 3632, 960, 3631, 959, 3630, 958, 957, 3629, 
          3628, 956, 955, 3609, 3608, 951, 950, 3624, 3623, 945, 944, 3618, 
          3617, 939, 938, 3612, 933, 3610, 930, 954}], 
         Line[{931, 3585, 897, 901, 907, 3587, 909, 3594, 3595, 915, 917, 
          3601, 3602, 923, 925, 3581, 934, 3611, 936, 3613, 3614, 940, 942, 
          3619, 3620, 946, 948, 3625, 952, 3606, 895}], 
         Line[{966, 3763, 1166, 3789, 1160, 1158, 3783, 3782, 1152, 3776, 
          1150, 3775, 1144, 3770, 1142, 3738, 1130, 1128, 3759, 3758, 1122, 
          1120, 3752, 3751, 1114, 3743, 1112, 1106, 1102, 3740, 1138}], 
         Line[{973, 1132, 3762, 3761, 1126, 3756, 3755, 1124, 1118, 1116, 
          3747, 3746, 1110, 3742, 3741, 1108, 1096, 3735, 3734, 1094, 1088, 
          3724, 1086, 1080, 1078, 3719, 1072, 3715, 1068, 1104}], 
         Line[{976, 962, 964, 963, 967, 3636, 968, 3637, 969, 3638, 970, 3639,
           971, 3635, 979, 3643, 980, 3645, 985, 3646, 986, 3650, 991, 3651, 
          992, 3656, 997, 3634, 998}], 
         Line[{180, 2255, 2254, 179, 2252, 2251, 178, 2250, 2249, 177, 2247, 
          2246, 176, 2245, 2244, 175, 2242, 2241, 174, 2240, 173, 2239, 172}], 
         Line[{1001, 974, 3641, 977, 981, 983, 3649, 987, 3647, 989, 3655, 
          993, 3657, 995, 3640, 1005, 3665, 1007, 3669, 1013, 3672, 1015, 
          3677, 1021, 3678, 1023, 3685, 1029, 3652, 1031}], 
         Line[{1032, 3654, 3653, 1030, 1024, 3680, 3679, 1022, 1016, 1014, 
          3671, 3670, 1008, 3666, 1006, 996, 3659, 3658, 994, 990, 3648, 988, 
          984, 3644, 982, 978, 975, 3642, 1002}], 
         Line[{1035, 3664, 999, 1003, 1009, 3667, 1011, 3674, 3675, 1017, 
          1019, 3682, 1025, 3686, 1027, 3660, 3661, 1039, 1041, 3695, 1047, 
          3698, 1049, 3703, 1055, 1057, 3708, 1063, 3681, 1065}], 
         Line[{1066, 1064, 3710, 3709, 1058, 3704, 1056, 1050, 1048, 3697, 
          3696, 1042, 3692, 1040, 3662, 1028, 1026, 3684, 3683, 1020, 3673, 
          1018, 3676, 1012, 1010, 3668, 1004, 3663, 1000, 1036}], 
         Line[{1069, 1033, 3690, 1037, 3694, 1043, 1045, 3700, 3701, 1051, 
          1053, 3706, 3707, 1059, 1061, 3687, 3688, 1073, 1075, 3720, 3721, 
          1081, 1083, 3726, 1089, 3729, 1091, 3732, 1097, 1099}], 
         Line[{1100, 3705, 1098, 1092, 1090, 3728, 3727, 1084, 3723, 1082, 
          3722, 1076, 3717, 1074, 3689, 1062, 3712, 3711, 1060, 1054, 3699, 
          1052, 3702, 1046, 3693, 1044, 1038, 1034, 3691, 1070}], 
         Line[{1103, 3716, 1067, 1071, 1077, 3718, 1079, 3725, 1085, 1087, 
          3731, 1093, 3733, 1095, 3713, 3714, 1107, 1109, 3745, 1115, 3748, 
          1117, 3753, 1123, 3754, 1125, 3760, 1131, 3730, 972}], 
         Line[{1134, 1191, 3811, 3810, 1187, 3806, 1185, 3805, 1181, 3800, 
          1179, 3799, 1175, 1173, 3767, 3766, 1164, 3791, 1162, 3787, 1156, 
          3777, 1154, 3780, 1148, 1146, 3772, 1140, 3768, 1136, 1170}], 
         Line[{1137, 1101, 3739, 1105, 3744, 1111, 1113, 3750, 1119, 3749, 
          1121, 3757, 1127, 3764, 1129, 3736, 3737, 1141, 1143, 3773, 3774, 
          1149, 1151, 3781, 1157, 3784, 1159, 3788, 1165, 965}], 
         Line[{1167, 1199, 3817, 3816, 1198, 3815, 1197, 3814, 1196, 1195, 
          3813, 3812, 1194, 1193, 3793, 3792, 1189, 1188, 3808, 3807, 1183, 
          1182, 3802, 3801, 1177, 1176, 3796, 1171, 3794, 1168, 1192}], 
         Line[{1169, 3769, 1135, 1139, 1145, 3771, 1147, 3778, 3779, 1153, 
          1155, 3785, 3786, 1161, 1163, 3765, 1172, 3795, 1174, 3797, 3798, 
          1178, 1180, 3803, 3804, 1184, 1186, 3809, 1190, 3790, 1133}], 
         Line[{1204, 3947, 1404, 3973, 1398, 1396, 3967, 3966, 1390, 3960, 
          1388, 3959, 1382, 3954, 1380, 3922, 1368, 1366, 3943, 3942, 1360, 
          1358, 3936, 3935, 1352, 3927, 1350, 1344, 1340, 3924, 1376}], 
         Line[{1211, 1370, 3946, 3945, 1364, 3940, 3939, 1362, 1356, 1354, 
          3931, 3930, 1348, 3926, 3925, 1346, 1334, 3919, 3918, 1332, 1326, 
          3908, 1324, 1318, 1316, 3903, 1310, 3899, 1306, 1342}], 
         Line[{1214, 1200, 1202, 1201, 1205, 3820, 1206, 3821, 1207, 3822, 
          1208, 3823, 1209, 3819, 1217, 3827, 1218, 3829, 1223, 3830, 1224, 
          3834, 1229, 3835, 1230, 3840, 1235, 3818, 1236}], 
         Line[{261, 2411, 2410, 260, 2408, 2407, 259, 2406, 2405, 258, 2403, 
          2402, 257, 2401, 2400, 256, 2398, 2397, 255, 2396, 254, 2395, 253}], 
         Line[{1239, 1212, 3825, 1215, 1219, 1221, 3833, 1225, 3831, 1227, 
          3839, 1231, 3841, 1233, 3824, 1243, 3849, 1245, 3853, 1251, 3856, 
          1253, 3861, 1259, 3862, 1261, 3869, 1267, 3836, 1269}], 
         Line[{1270, 3838, 3837, 1268, 1262, 3864, 3863, 1260, 1254, 1252, 
          3855, 3854, 1246, 3850, 1244, 1234, 3843, 3842, 1232, 1228, 3832, 
          1226, 1222, 3828, 1220, 1216, 1213, 3826, 1240}], 
         Line[{1273, 3848, 1237, 1241, 1247, 3851, 1249, 3858, 3859, 1255, 
          1257, 3866, 1263, 3870, 1265, 3844, 3845, 1277, 1279, 3879, 1285, 
          3882, 1287, 3887, 1293, 1295, 3892, 1301, 3865, 1303}], 
         Line[{1304, 1302, 3894, 3893, 1296, 3888, 1294, 1288, 1286, 3881, 
          3880, 1280, 3876, 1278, 3846, 1266, 1264, 3868, 3867, 1258, 3857, 
          1256, 3860, 1250, 1248, 3852, 1242, 3847, 1238, 1274}], 
         Line[{1307, 1271, 3874, 1275, 3878, 1281, 1283, 3884, 3885, 1289, 
          1291, 3890, 3891, 1297, 1299, 3871, 3872, 1311, 1313, 3904, 3905, 
          1319, 1321, 3910, 1327, 3913, 1329, 3916, 1335, 1337}], 
         Line[{1338, 3889, 1336, 1330, 1328, 3912, 3911, 1322, 3907, 1320, 
          3906, 1314, 3901, 1312, 3873, 1300, 3896, 3895, 1298, 1292, 3883, 
          1290, 3886, 1284, 3877, 1282, 1276, 1272, 3875, 1308}], 
         Line[{1341, 3900, 1305, 1309, 1315, 3902, 1317, 3909, 1323, 1325, 
          3915, 1331, 3917, 1333, 3897, 3898, 1345, 1347, 3929, 1353, 3932, 
          1355, 3937, 1361, 3938, 1363, 3944, 1369, 3914, 1210}], 
         Line[{1372, 1429, 3995, 3994, 1425, 3990, 1423, 3989, 1419, 3984, 
          1417, 3983, 1413, 1411, 3951, 3950, 1402, 3975, 1400, 3971, 1394, 
          3961, 1392, 3964, 1386, 1384, 3956, 1378, 3952, 1374, 1408}], 
         Line[{1375, 1339, 3923, 1343, 3928, 1349, 1351, 3934, 1357, 3933, 
          1359, 3941, 1365, 3948, 1367, 3920, 3921, 1379, 1381, 3957, 3958, 
          1387, 1389, 3965, 1395, 3968, 1397, 3972, 1403, 1203}], 
         Line[{1405, 1437, 4001, 4000, 1436, 3999, 1435, 3998, 1434, 1433, 
          3997, 3996, 1432, 1431, 3977, 3976, 1427, 1426, 3992, 3991, 1421, 
          1420, 3986, 3985, 1415, 1414, 3980, 1409, 3978, 1406, 1430}], 
         Line[{1407, 3953, 1373, 1377, 1383, 3955, 1385, 3962, 3963, 1391, 
          1393, 3969, 3970, 1399, 1401, 3949, 1410, 3979, 1412, 3981, 3982, 
          1416, 1418, 3987, 3988, 1422, 1424, 3993, 1428, 3974, 1371}], 
         Line[{1442, 4131, 1638, 4157, 1632, 1630, 4151, 4150, 1624, 4144, 
          1622, 4143, 1616, 4138, 1614, 4104, 1602, 1600, 4127, 4126, 1594, 
          1592, 4120, 4119, 1586, 4111, 1584, 1578, 1574, 4105, 1610}], 
         Line[{1449, 1604, 4130, 4129, 1598, 4124, 4123, 1596, 1590, 1588, 
          4115, 4114, 1582, 4110, 4109, 1580, 1570, 4101, 4100, 1564, 4094, 
          1562, 1556, 1554, 4089, 1548, 4083, 1544, 1576}], 
         Line[{1452, 1438, 1440, 1439, 1443, 4004, 1444, 4005, 1445, 4006, 
          1446, 4007, 1447, 4003, 1455, 4011, 1456, 4013, 1461, 4014, 1462, 
          4018, 1467, 4019, 1468, 4024, 1473, 4002, 1474}], 
         Line[{342, 2567, 2566, 341, 2564, 2563, 340, 2562, 2561, 339, 2559, 
          2558, 338, 2557, 2556, 337, 2554, 2553, 336, 2552, 335, 2551, 334}], 
         Line[{1477, 1450, 4009, 1453, 1457, 1459, 4017, 1463, 4015, 1465, 
          4023, 1469, 4025, 1471, 4008, 1481, 4033, 1483, 4037, 1489, 4040, 
          1491, 4045, 1497, 4046, 1499, 4053, 1505, 4020, 1507}], 
         Line[{1508, 4022, 4021, 1506, 1500, 4048, 4047, 1498, 1492, 1490, 
          4039, 4038, 1484, 4034, 1482, 1472, 4027, 4026, 1470, 1466, 4016, 
          1464, 1460, 4012, 1458, 1454, 1451, 4010, 1478}], 
         Line[{1511, 4032, 1475, 1479, 1485, 4035, 1487, 4042, 4043, 1493, 
          1495, 4050, 1501, 4054, 1503, 4028, 4029, 1515, 1517, 4061, 1523, 
          4064, 1525, 4069, 1531, 1533, 4074, 1539, 4049, 1541}], 
         Line[{1542, 1540, 4076, 4075, 1534, 4070, 1532, 1526, 1524, 4063, 
          4062, 1518, 4058, 1516, 4030, 1504, 1502, 4052, 4051, 1496, 4041, 
          1494, 4044, 1488, 1486, 4036, 1480, 4031, 1476, 1512}], 
         Line[{1545, 1509, 4056, 1513, 4060, 1519, 1521, 4066, 4067, 1527, 
          1529, 4072, 4073, 1535, 4077, 1537, 4055, 1549, 4085, 4086, 1551, 
          1557, 4091, 1559, 4096, 1565, 4097, 1567, 1571}], 
         Line[{1572, 4071, 1568, 1566, 1560, 4093, 4092, 1558, 4090, 1552, 
          4087, 1550, 1538, 4081, 4080, 4079, 4078, 1536, 1530, 4065, 1528, 
          4068, 1522, 4059, 1520, 1514, 1510, 4057, 1546}], 
         Line[{1575, 4084, 1543, 1547, 1553, 4088, 1555, 4095, 1561, 1563, 
          4099, 1569, 4106, 4107, 4108, 1579, 1581, 4113, 1587, 4116, 1589, 
          4121, 1595, 4122, 1597, 4128, 1603, 4098, 1448}], 
         Line[{1606, 1663, 4179, 4178, 1659, 4174, 1657, 4173, 1653, 4168, 
          1651, 4167, 1647, 1645, 4135, 4134, 1636, 4159, 1634, 4155, 1628, 
          4145, 1626, 4148, 1620, 1618, 4140, 1612, 4136, 1608, 1642}], 
         Line[{1609, 1573, 4082, 1577, 4112, 1583, 1585, 4118, 1591, 4117, 
          1593, 4125, 1599, 4132, 1601, 4102, 4103, 1613, 1615, 4141, 4142, 
          1621, 1623, 4149, 1629, 4152, 1631, 4156, 1637, 1441}], 
         Line[{1639, 1671, 4185, 4184, 1670, 4183, 1669, 4182, 1668, 1667, 
          4181, 4180, 1666, 1665, 4161, 4160, 1661, 1660, 4176, 4175, 1655, 
          1654, 4170, 4169, 1649, 1648, 4164, 1643, 4162, 1640, 1664}], 
         Line[{1641, 4137, 1607, 1611, 1617, 4139, 1619, 4146, 4147, 1625, 
          1627, 4153, 4154, 1633, 1635, 4133, 1644, 4163, 1646, 4165, 4166, 
          1650, 1652, 4171, 4172, 1656, 1658, 4177, 1662, 4158, 1605}], 
         Line[{1676, 4315, 1876, 4341, 1870, 1868, 4335, 4334, 1862, 4328, 
          1860, 4327, 1854, 4322, 1852, 4290, 1840, 1838, 4311, 4310, 1832, 
          1830, 4304, 4303, 1824, 4295, 1822, 1816, 1812, 4292, 1848}], 
         Line[{1683, 1842, 4314, 4313, 1836, 4308, 4307, 1834, 1828, 1826, 
          4299, 4298, 1820, 4294, 4293, 1818, 1806, 4287, 4286, 1804, 1798, 
          4276, 1796, 1790, 1788, 4271, 1782, 4267, 1778, 1814}], 
         Line[{1686, 1672, 1674, 1673, 1677, 4188, 1678, 4189, 1679, 4190, 
          1680, 4191, 1681, 4187, 1689, 4195, 1690, 4197, 1695, 4198, 1696, 
          4202, 1701, 4203, 1702, 4208, 1707, 4186, 1708}], 
         Line[{422, 2724, 2723, 421, 2721, 2720, 420, 2719, 2718, 419, 2716, 
          2715, 418, 2714, 2713, 417, 2711, 2710, 416, 2709, 415, 2708, 414}], 
         Line[{1711, 1684, 4193, 1687, 1691, 1693, 4201, 1697, 4199, 1699, 
          4207, 1703, 4209, 1705, 4192, 1715, 4217, 1717, 4221, 1723, 4224, 
          1725, 4229, 1731, 4230, 1733, 4237, 1739, 4204, 1741}], 
         Line[{1742, 4206, 4205, 1740, 1734, 4232, 4231, 1732, 1726, 1724, 
          4223, 4222, 1718, 4218, 1716, 1706, 4211, 4210, 1704, 1700, 4200, 
          1698, 1694, 4196, 1692, 1688, 1685, 4194, 1712}], 
         Line[{1745, 4216, 1709, 1713, 1719, 4219, 1721, 4226, 4227, 1727, 
          1729, 4234, 1735, 4238, 1737, 4212, 4213, 1749, 1751, 4247, 1757, 
          4250, 1759, 4255, 1765, 1767, 4260, 1773, 4233, 1775}], 
         Line[{1776, 1774, 4262, 4261, 1768, 4256, 1766, 1760, 1758, 4249, 
          4248, 1752, 4244, 1750, 4214, 1738, 1736, 4236, 4235, 1730, 4225, 
          1728, 4228, 1722, 1720, 4220, 1714, 4215, 1710, 1746}], 
         Line[{1779, 1743, 4242, 1747, 4246, 1753, 1755, 4252, 4253, 1761, 
          1763, 4258, 4259, 1769, 1771, 4239, 4240, 1783, 1785, 4272, 4273, 
          1791, 1793, 4278, 1799, 4281, 1801, 4284, 1807, 1809}], 
         Line[{1810, 4257, 1808, 1802, 1800, 4280, 4279, 1794, 4275, 1792, 
          4274, 1786, 4269, 1784, 4241, 1772, 4264, 4263, 1770, 1764, 4251, 
          1762, 4254, 1756, 4245, 1754, 1748, 1744, 4243, 1780}], 
         Line[{1813, 4268, 1777, 1781, 1787, 4270, 1789, 4277, 1795, 1797, 
          4283, 1803, 4285, 1805, 4265, 4266, 1817, 1819, 4297, 1825, 4300, 
          1827, 4305, 1833, 4306, 1835, 4312, 1841, 4282, 1682}], 
         Line[{1844, 1901, 4363, 4362, 1897, 4358, 1895, 4357, 1891, 4352, 
          1889, 4351, 1885, 1883, 4319, 4318, 1874, 4343, 1872, 4339, 1866, 
          4329, 1864, 4332, 1858, 1856, 4324, 1850, 4320, 1846, 1880}], 
         Line[{1847, 1811, 4291, 1815, 4296, 1821, 1823, 4302, 1829, 4301, 
          1831, 4309, 1837, 4316, 1839, 4288, 4289, 1851, 1853, 4325, 4326, 
          1859, 1861, 4333, 1867, 4336, 1869, 4340, 1875, 1675}], 
         Line[{1877, 1909, 4369, 4368, 1908, 4367, 1907, 4366, 1906, 1905, 
          4365, 4364, 1904, 1903, 4345, 4344, 1899, 1898, 4360, 4359, 1893, 
          1892, 4354, 4353, 1887, 1886, 4348, 1881, 4346, 1878, 1902}], 
         Line[{1879, 4321, 1845, 1849, 1855, 4323, 1857, 4330, 4331, 1863, 
          1865, 4337, 4338, 1871, 1873, 4317, 1882, 4347, 1884, 4349, 4350, 
          1888, 1890, 4355, 4356, 1894, 1896, 4361, 1900, 4342, 
          1843}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
bobwSZVsF3Qclbv4KikE/24tmLmU0M+6fCHm0yUd/LWPq1rl8AnU3jR8jPTb
0lazBws/x4DRytz5b3fGQtA822lLCT+cPD3DulA9Bz7Kzds64/IKWJMjc/MG
cT+KE2s/cfJmGSzZEJihsdkWpiivPKFHnP/TzgV45YzLgecKacnKC72gtMpr
8Ayhf3R2j7HP2TwQ6NrQ51XnjkGB0zfOJ+474Q+2nJogbQ3vXBR+nw8PholR
U73VCHuWHJr0s/zzMeyznXYiTt4be7rNCsk6/ORIgqtFqhmoyjfWtQ8eQZ3H
6Zd6ybx2i/kGu9Ih4Yh8pEV9MnTZxPdNJH5XyUTIt3PKORBMSuAySz4HZmpv
7igRcaVl3HlufOI5iDpsnHNnYS4crpqzrfgTca6YKDepSKUITp8R/mgy6Ayx
s8PmZhHf/buKjMzh9GxY8F3LcSVfAiaeGndbkbB/Aa/pimkCxjj/rrfZHaUy
PBNj8eYokS+9Fle0ncc44r2ayDt/XErwbf2SAJk+AvejIxaK6LvDzO03N/XZ
eMDWxeENsYT9o1dSqvf65IAsf9r2fpciiD1Y9X47eU8J+dX0pL8EXpwMTU0N
LgdBy8byNOLcbnBEpiawKgvMv+4w0hLMhOb4K/wviXh7u6jQJ1db7MqxA3+y
h7lE/sHl3fM/ap0vysMGBbGUU/KZWNmZbe5LxO2ug8dEl/GcxsSuw9/FPp/H
Bs8dJ3Vf9cJfyh6UpuxBxh7afqTtR8b+M9R+oYHaLzD79eDh+AfmUv4Bxj/9
lD9xOeVPYPyp/TnivuSrMzj6TmDXuQQHTPrr/vEasc7eVPG7fm7nMO+pV9fz
08W4JAkjDr0jzofxg/uk957D1T1jr/JtKMFnOtvd1rwl7O9+evOZeQ7m1G41
TahMQaMXj9Q+E/5RsuDED6pQ8QNM/Cym4g34T3LiDZh4y6LiE7Op+EQmPnVU
1myw2ZiD+7ds6mpqcwIdwb9dxUS8vfvYbu92+DS+PaUjZmQegJ8mrHU8Sfj5
DBypWDurGNe+/Gb7t2Q73tk27HuI9L9t6NTdSrlomlW34YlWFB7rSk4UJ/xw
4S2/4gUvL9T907greKMjCque400nftf0Gid/oUOTk7/A5O9uKt/Bicp3YPL9
B1UfYOoDTn0Apj4IU/UEgaonyNSTsU99Yubed8Wb3uLTvmn5YH1P2BwSr8+u
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
bU/E5zt63uQNPW/ykJ43iew99XVGlR+0v2lWSNvkCDWjyt0OhHyAnpc5z7KH
pyDivZGSEyz/+T6ka8tWuPbsxTPy78U29BzNYtYcTdLds0HX85Ph9lWhH0r9
vrA6d2MgP/legranlWVP3Rx9xWeOidBrkfenUsQToq8F3U0j9Kl7UgB9X7L+
594kvsZuedxeC5g3tiJEw9kah13XbyX/PvVWhJrfecCa31ne9egvz1V9fCDV
LNH0wwOjZ5iVXifk32j9Rpb+wq310covguH3PE2lpAF/qP+0Q7uTiBNeel4m
kzUv40edi6CaOhcBcy5SoOeG8um5oX567kZQf48y324/kNBQElM84go2keHW
x8m/M9JzN3dZczdLatT74wT9QW/LuF8xnavBe3hubtQo4x972i9i//inrkH3
vH+mI8zwHpcm/9Mei+NOhdWS/Vt6nqiVNU/0oaFe7cBJR1B+Onu3xqMD8G7z
og/k95Wg531aWPM+t9qmFxhouMB85zdWHasdYafEgdVkH3U5rd/E0i+/tGAt
f5AOGr+WMfp60RT/qiSLkO8QJtD2PGPZ0/tzNEIh2B39r/xZXXRVC8U3rd9K
9uVe0HNPm1lzT6q3G7T1n2piZ3bm5xfbduDCA+eH/5B/v6Dtec6yp21+2Pu9
laGY+VPUYDXPUfx0blfF2lFyfoeaY3rMmmN6QvkHl1L+QcY/IvS8VRI9b8XU
k7HU98Vmdc73Reb7Lqb101n6yWu+j6ydEIVh3cN/xu9yxCZFlVpyDoKxp5Fl
j90Sxz1PymKx5qfQ63cyx3Cvrf2jE4S+KT1v1cOat5pCxTPOE+bEMzLxvIS2
J5tlD0/ojw8Tut2xYdN82YG9ydgrufSnKvkeiZ4jO03PkTHxLOyd/fpRpztG
C9ZclVg6CSbOed1Bfi8tet7KhTVvNY5aH+5T6wOzPj1/B4Ws/OJbq7cr7q8v
yhSnFqzabYu2bybpBRNyHXp9D9b6z2v43Vzjkwg/d9WaEvsSaPUx30fIzWj/
9LH8wy3peKfDjbgnFHiNczkciw2fftqrEPsSp+fUPOk5tS30nJpE6E09penh
eOLy6W3nM31woKxqAnkf0aPtCWTZU8tV01ZUlYTOuVuWCG2JQ5VXy/rGEvV5
Bz13xseaO/sy9pyl0q1YXDOj/kngqAs+5/0rupc8x9LzcftY83FTPhyUKjuW
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
L2png5eopcSqH/+xx5Jlz1X5ud9V0zLh25wq+1+LY8HPr3sByYNH9Ucj6D6p
zz/90i0zVyp09UbDerXq+2UTs5BHd/rQBUK/kuZLvMHiSzxZJao1UrgLHUuM
m7sFE/BYWeXl2UQ8v6H1r7H0S7UPW6zeFg+6dS53mlyLoUs8qoicl7xG8xPW
s/gJz0dyzkVgT52LkDkXidM8jeNYPI3f3RdNMM6LBc+rlgl8viVwUFVYk3x/
UkTzHM5h8RzuTCvJOLErCXgMdNbLDllAZtuyb4X/7/223j/+mTNsljZt2nG4
WvCV6+34YOwYHd2iTZ7baf7G2zR/YxXN3zj/2EUhk9zd8HfpMiuFm9kQcLNv
33SiPvfS/IqrWPyK3ks1soOqA8Auu2fXEYFCcPM827KC+I49tL4US9/GK1Bj
loEFSmls2LaiMAUfWEWtlyLnr2l76ln2zH4ba1lbcgovhIYK2jicxldrBysK
CPlWmmcynuaZfEDzTFrm/r40eXQ3yl3e9CYvLgVM+uwCSd4Axn4Jlj2WHXzL
87QCUOPihzd9l4Jh9rfkmyT/lTrNG/mJxRt5yILjH/xO+QcZ/wzS/JaSNL8l
U08+Ut8X/anvi8z3pestrmXptz4zmfmyIxVlrF6WX08ywx8jj+N6yf8vA23P
CMuey9vjF8z0ycSsTeclLM6loLGQ6EltYl+qNL9lFovfsoCKZ9Si4hmZeGbs
kWHZE70s3W6ltAs2TRR/tUUsC52XxuncJvYrRfN2KrF4O38HJj3N/hWBAwNr
f9x1yYTW/6PrzON6+p7Hn3chS5EoZIts2cqaLIOQskWyFGmnQjvt+6p93/dd
2otKmpJosbbIkoQoQkQpKr97u+f1fX/e9/fw73nMY17zmnPuOTNzz51n9JTZ
9D2xg6S/ZRyrv6Uxox9qGP3A0X+VPF/VrOdr7tzLPC9E/HH+Czk5+ap4uOJ0
2rWL+r8KRP9Vln67L9tuvZpyBetdj43LEEvGS8ExSaep/fAA8U8Cyz+i6fay
jwbT8ec77wHVrmSseSSR2EWdR16kL+hyVl/QQOMCvwmf4tHqps6miD+ewKX0
IW/9r3/7eZ5j2bPJMOnGA9tkFHdps3lxxQx+es2ISafywTekz2cdq8+nlsjb
/XVuiShQ/2x3YH8Uaq+pDa3o+7cfaSKrH+msO2flrIqSsXqlvG9xxBX8GR9/
0ouy/w+RT2fJN3n629U/S0ZTni9m8iouYHkwYLEwZU8a6S867/l/+4t+MBkX
u3HgCm7M8S1T2ncWlxZMNw35QffDYeTPsfqRFn3Yc+25aQJeGMoaPPsxATdm
9J+c2vuv/cksezSZ+AHXM/EDcuIHQ9JndTKrz+qtA2Msxvun4rP87QmVN1xQ
JOeE4AvKPwdJH1R10gf1POmD+jvfUtVAPR2LjgT6n9ePxw27woVX0vcJibwJ
S/4rEy9hIBMvISde+qbC5Lm/jf6b5xYw+QWoPxvJL4CTX3D6i2ax+ouGu78d
81YpBJ0jCi5K+Z9B/gl3NHio/UeS9FNdzeqn2lwwcn5BPnN+Aef8ciF9ZQ1I
X1lOvHelyE/WICgYS4bcsn7GnMCV4S9yl1Hyq0hf1iLSl/Ue6cs6aHP0nOHe
dBQJ682SWJ2ABk/Wljz6+q9/TFn+8UqsVswtiUe7qJcmUdyxmHxFOUmRmsfX
pN9sMuk3O5v0m83O3rL9ZHsADtjYywrmHgE0VdQMp+yxX8n0gz3L6gd7ZYX0
t/hxEXit/VtIn7gNbrj64aYYnS8T+UiWfNfiuIE3biE4N2d29Kb5fqgcVv/p
D7V+7hN7LFj2NMmGqu694o+h4XoXLGpdUcrWfdxu2p6bTF9cZ1Zf3KiflY1W
5RFYn7d0IHqTGi6+cHG6xP/YY82yp9fpS3qpnx9aru0PsZAzB8+wz3nVlP4I
0uf2DOlzG0z63K6rDZcLPOuDJ+bWTF7UYIluzz8+6aLk+Uk/XmVWP14ZoZH8
FISZ/BQ4+elWIm/Ikj8fNar2sbUTaj+OLvSVOImhyyq+036IJvaosOwpOMJ7
MeOgFZRsE9IZ57gAldWtVej+ac9IP97vpB/vHtKP14vJx6GVyceBk4/vIfaY
suzZw9R58AlT50FOnectUwdABZOROgBy6gDBTL6DZ5l8Bzn5zgzyvGxjPS81
2bJf3m00RFGHmyvGLbFE24b0avo+xtTD7uWWS87C4A19j/CHVij5Q/wy/X6B
i/QT7vf7bz/hAf0lZsLiAXBmi6yY6ZfjuMPVLDyf/n6HyAux+g83zH2v9vSd
Eq54Nqr40ZLz2HlSvZm+N3v4pOdF3rXOsJfn8LnUQneI3jm8j+7DeUppiPvJ
2FCoW+879NtUFxqLNmu/peszRP9qlv5gpu4EpUojdSfg1J1qSN9jP1bf44+O
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
rwqJfCpLXkvsn7JmayWcuP5+Sv9PN/Q9uMufri/ZEHtCWPaM7x+JH3Cq8kj8
gJz4IYvwQXJYfBBZxaDonK5LGBd6U6j+kQ6WWlnPpO8BdhF+x0QWv+PzgML8
yXMt0XPKvtVXGi0wK6giJYMa/0Tk57Pkw5h4Ca2ZeAk58ZIByXPdWXmuCpNf
YDWTXyAnv7hLuBgRLC5G2MH2J6pChjC48ZD+pcpAmC08WUKXjrsIB8SLxQHZ
lTNyfgE5v4BzfpmzeCiceC/ln3rNc7tPgOfYMRE/sv3AavcTng76/hXhiRiy
eCIvuW9yS1DrQXPu1W7zcWao45naWfw//pnJ8o99psV6w0lm6HWG12qn2kXc
E7p2kF4PGoSTcoRwUtoIJ8UzuK0pK0cR7j7rlplywhNiOj7aydDzTjgmF1gc
k92tj1vH9utj+crhZzxBxqD2j+Na+r79o++MvCJL/vZPu6T+HiNsb1p2NdXp
EhY0njhAx9uqxB4llj2LldVkK/cbore6llT5NFv8oj/0iL43u5HwXAQJz4WT
X3so93jO36KPsR/zQmQ9L8AbN81Gmu/whNijwLLniOS+4ZgG+jugJqcLp7Tg
6Kzh6XS+v4XwWTIJnyWW8Fn4VfR5G+fa433pBru5NzyxR3HoxjA1X5cJR+YG
4chw6g/lTH6Ka5j8FDn5KeFMYQlL3lhM+fjWiGN4coZoSH7JDhyvu9GKzk8P
EXsiWPZEZL6cq967H8J/XHqVZbIGjZcNjKXvJy8nHJl8FkdmDZOPowaTjyMn
H/+b/Q0wUueBCqbOg5w6z1imDgBWTB0AOHWA8Uy+A+MkRvId4OQ7oeR58WM9
L0a7B+7PG2MCc5/P/GRq6Qi1R/q56f2k8P2Tz5NOK4L0XZcz567r47rjn9zo
OMqMcHAWsDg4HxfMsZ6UqQk3ty+37NG6gMqlos5d1LgFkV/IkvcXeluVQeW5
niELp/9+bw4Fz6fX0/mm9XuX3weXa8HKn2dT7jUZQeH9tFv0+tlrO+eP1U8d
aOHB+ODbZvhqo6/Yc2rckuhfxdLPz9SdQJWpOyGn7iRNeD0bWLweW7GHLvXB
2qDNJwp3bXTB3mmSP/1+pP+S0Byj70YwecfRRiMvUwi8sMScfl/Qw9TBcDlT
B0NOHUyM6N/G0u/I1OVwC1OXQ05djsMJqmVxgg5HcL2JC7MCg3dNc9yvmkEF
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
I6pbP1rgpPEGYxaV2eKvWfw9I9/1BONG4UQnOKAktqjmQwxoTzAoeEudR/va
fMf2KkRAzAreWZp8YdAxNdOHlxp3Zs4vFGHOL+CcX3JMvAcxTLwHnHhvqtJs
452mrvD9c9WstIeh8Onwm5c0j7Kry07dWjQaXNdIi03LdYI0+a9bDlDyNmEx
f/Yo5KPX+H1vdr4JxGueqnkzqf2wj/jnPss/fmVlPbWBeTjj4vKV3z1D0DGV
V0iXOl9auW8Wpk9Mw49LDRMLpnjhTsHmvlVU3mEbLvTzeZITuEyJe2H/KRxi
B6OO0f0iDs3/fsTucARU6BgqbVnoBSFhap3O1Ljqirzjd7sssOH7g/AtM7zg
rolo1GS6fkvks1nyQWemztRQuIoBzhI5Bj/isPd3V2sftZ80E3t+s+xZ+nnx
tB6TFFw3R2ysTHEsfo5Mb19J/S8hJr/GPUx+jZz8+hQelz7m4I3cO/7ZVXrS
AwoOvnVyofK1bcSeTJY9lZPMM+8Em6OV9Cp/rt+OIPM+ZTF9T3ueFr+PXGUy
1HPpOPlW2MLyh1etTlFxS0pqzTIf7lR89s88t0WbEvHgvDie7m/dIMrUHzCe
qT8gp/7Ax+SneIXJT5GTnwoR+WiWfOmfL2bT+kyxecvquJvntyHWW+1u/x97
Cln2jJ7qtnm40gzU62PfFapuh4oxadPp70Mtahznda3PgQFPE9/KMCfYv+zX
8HLqOTVg8nG8wOTjyMnHBYg9MSx7rJk6DwYydR7k1HkuMHUAOMrUAYBTB0hh
8h1QZfId4OQ7CuR5iWA9LzWXY6weu1F+9lPanFoUAJNzQqfT/McLJ3c0r63X
x3N8qyL8tayxUWarSwVdN3as9uJzTYXmyeY2yS/M8I5Oks0mSl489tLd9U+3
odchr9MFLk64YOULwzhKPpjIv2LJF+4/ZiHQmASVc7yCqpuCwN2uz5p+7/xs
gXFuxbKrMHCwWppLNBjeKJbwPqXvY8yOCTDUdwW17dIfMrfZonixrCjNCY0g
+p+y9MszdSd8NH+k7oScutPg+o9783/7wed0F4Nrb1PQznOJXRblt4SWGtfW
TTlgfCDk0JUv/rC1ceL7bdRzoTMwMGSpmweHBkIXnuj3BrOkD1Ud1P4vwtTB
cA9TB0NOHYyj/ytLfxdTl8MTTF0OOXW5WZ+XmVafs8Wl86omia8Iwa1n3GWf
U8/RZx4p77GChTDV481i6XF+0Jy0qGkVdY7MNp/5O/lmIewO+PpAvtkONI0U
Zy150w0rmfohjg4cqR8ip36YR/bVOax9tYqpF0EpUy8CTr1ItMrSp8o5H3oM
xaqndK8Fi2eCpxdT+9X1xSXFjgGZIDt71bvBZ7HovD3Hje7/uYqpo4IdU0dF
Th0VmLor2DF1V+TUXR8x9V7wZ+q9yKn3SgmP1HvRgKn3Iqfea2E0UjfGIqZu
jJy6sbugza72IksIX9k6W3G0P/CpVSfkUuMCDK8Q3RleIf4fD3GWkFyg1w50
cfnyemrhRXg556vBK8oPcWtsf72ZpoMCg6vaIkS0oSoc9ejv0cys+g99XOeE
E4P8nyvOOY+Kn8usaU6Brrad8qWIK2g9VdzTXDAFTc6YLTtA/d+7y+KX/DL2
Q5knZ7Q/NDmhuWT3WF/KHpW+zD/J/fEYXnlFr7w6AC9mTkoKoOKWh6Gyp+sK
M1DI+udOo6RI9HPo+cVFrfNz74I3alXkouehvR16jpGo8PH39IPUeivXk4ps
SClEt9XS+uWqkXhf+2drIRV33Ui3kBTPzMfI3a0JwukhqDolclEFdb6vbtnK
Oz0/F0Fxs1Rfjz9y34yLnU/FFbwum/ITpiZiTeGTu9ELdGH5HC+lXZT/b+Zt
V9vRZoZfpptrFUiHwfCQ01e6f8vhnanh6187QER3zlndzaEgYGkvSPf/bDLY
NHnXl1zcEf3T9IRnHJaeb08Opc5Bao1p6NhcQu3RHcF9v89C6rGMWzQnpTT6
9AGhQj/UORb060+dFXIrfvCk+7IKkfnyZs3XVTFdT2mZRGzwPDy92DkGv99o
G+dLPUfd7d8eNicloXv0D5UWUVO8M3hn55aBf+fFhjUv+zf3LHvpkIHepjeN
OkuT8PCb8NsG1HjOnWh+Sd2r+HTOvgZ5nUR02yXjbU2Ni6Len88LqTyr4sf5
7Z998LLwF3Fzyj+PotZPq5HRgJ2ffuz00A4HsSN5eWaUH7xXVWb/Y+GGvanT
bm/xtgO9LWZjpaj/O/uW/a/5G/diodaOyqnS/qA6W9OGfo9TsDND4oeAM9Ql
Q9igbwQc3Lo06Bn1f6fYvR1V4xEC3xPejSvgTwB5B+6+j9S5cIvMy1fWvKRm
metFO8fDzrjfwocbU6Dsp9B8Pireu+B29FuHeiSInw2TybiSADcyLyjGUs+1
5cXz12IjL0NTQ8+bZdO9wcGk77gVZU+T4Tytq6tdcSDj1MHPrqF4N0F1pQql
//yiFy3m00Nxz75Faw13JKIa3OmYTdmznOHkoi3DyUUOJ3ePaHHt5EQLnPhB
Mf/lqjiU9nziR/fRdSX++cXyz4v+dXHfK/3gPQ9/2skdl/HVtT9W9H1dl66U
NUo+kTCqdXyxzgJDaMngA/q+X6BR+tlSvji40577ebyrCgy+HtvZS+m/Fjn2
7IB4IgjNyOG1XB0MP0XmLben7Nx3/Kd1fmgyFBWrL8s/Fwc1nhnvbai4pVtU
/4tmUiKknFMy0byTBDl3K+s2UH472mu4M4Q7DYYzqr1cIAW4LfW4tlDn9Q71
CMvmtykgrH+i7JtVEmhxxWhs/Ua/9/H1+0PFAxfX3jaRLUqA9NktBbMoPf3B
1kJF+VHQ17k/Q0UrGBb5vFtJ1wMn1crKra/zgzVtYnyBy/wh2SVpClJ+XlC1
Pn9FkSfU8QZuSjxqBh1vNhsuoPxjPttWquuTA3SPFnxkZHcUvOY9zKG5GFmn
Tm8T7tOE59M0zeuXB6DpowZd+r2k/qzFra+TA+G2xfQXkp/tcc+JPNn11Hgw
8duid//127iCwanvGxJB+VmjjIWJF2yecU1xMvUcHSF+GGT5Yekmc8mx4ang
9EiiSrkkAh6KvRG1p/yprQ4hC91SoddtRexzsWBoNA8ZCqP7BE5PMF/uEAgK
+z8KLnnlBzxSmQ916HtB7ilThMxSwU5bwkBjji+sEz5uY0I919LPQ2uPjIoH
pRf7BkUn2MM2xZwQacrOqUsPu+6dEQyi7epOi9u2gthofd8d1P96bzx+pnGP
J+wWTH+Sz68LD6KdulbT779mfDz9SNMK0rwHZjrPuwSP1HyzsqnxI8+rehqs
NMBae/zu47pycG2ofyzNdZpF/I8s/6c+3Xt6xSN13PgP1+QNdwzx6YxCU5qv
fe2K6ph7PKY4qbckdOlCB3zwe8VF+nv/su97ey/edIfM0h09p46FwpIDXyfS
38u4/u5a4VkTAIYdKWOWvfaApkWzPH7ScTLxz36Wf9y0lRZWvHKDGWOhdb+M
Cyz82nCRi75vfDD70hoLI6j9pH081NcIHuyOTKK/gz7RsqhAykIdbs0NjIzy
VYe36gt16e/aTo6udDi18VTpXZPSk0kLT/9fvcv6qPGynkATdDBfKZb7yQwd
n87ior/ff0j8lsjym6DiC9HHgU748kCzmNcnF5SLXzqK7h/Y+KbUcmWHDy5Y
dCta5KITrj2T4kF/59ImtMdy4exglCnYu9nxjz1W7FfsHKD+1xYJ3Vt2oYH4
MnCpcZGDA67uUbNZQ98nv/5obrNAAOacuTPxE7cjprydcPAsfV+I8SdeY/yJ
HH/mMv6HKYz/geP/YmZ+cafWyPwiZ353zxz5X/iG+V/I+V96bcsLncwCMV0s
OjiUel7CNWXS6D4k08j/bWH93z3li72SeOOw4egyyS3yrvhK9/xCO2p9Xnrv
FybXEo9jbmS11kg6YpKTzsMc6nnXrVDle5GdiFzxYStcVluj4PYuLaSerz0H
mi7GtKVi1N0MsdCz/nizia/hPfW8RFz1N5raEYrRiW6hKUIX8Yrt+mn0PVXx
Wgff45Ovom2HtE9dZSRun3FubgaVX8tVdhcLmiej2MHuO0oPvHEsf9Saz9Q+
LzjPt2piaTROf2ibpievhlUHt7q40f0GW3a9ELwYgLteJhSsi7KH1ecGxXXo
96TE/74s/8teTlJbU2qNejplbuOSA0B+w6obhnRfCGb/wWZm/wHO/rNR9dSN
7XKX0aPA6FBOoimOVdoUR+/zE8UVxLetjsPWEyX7plWH4tLd/e45lB/2v7/u
FSKbjPxravpLVOLxZbqo/DpqPynyErvnqZmCVrIbkjO8k5BP3OKzN7Xfvgj0
eLnNLhUlj/jqqGMqqo0R+EPfV0/F3psvkhPx8+n5SsWxEbj0zbZ7kpQfBgif
PZ/FZ7cmXPsB3/9y7W3NdTeuNQpCuU+PlzR3ToI+iXlTVOnvNYg/eVn+3ET4
8nIsvvzxL1wCT/c4g9Csp2JnbkbBuUqu76qUfDDhrYuweOvHCXfeiMWdt2HO
X5Bizl9QJ+fvYsJVr2Zx1e8z5zi8ZM5x4JzjcwhXvYTFVTcifnjD8sPhJQFV
cRnBGHhhUcJYo2R8riMn/ovan/O0zoepvQ/GVVv2R+frJWNuQp32D2p8DeGe
d7K451+I/zNY/ndf96lT6o0+8O8NXeOMl3Hw25Zf2+j7RcQ/l1n+6XsZI7l1
bxJsPsmzd65iOKTH2I/jp+Z3MRPfwgkmvgVOfGtKuOc8LO55AuHXL2fx6zv3
TPyn3jYdBF6oaGluS4an4T9qb1PrSpRw2PewOOzFiQ83+P+IhxZu0wuOhRFw
fceQ8HJqXoqZ+BweMvE5cOLzO4R7XsPinvMSrro1i6sewcTJ8P3oSJwMnDh5
EZn3Cta8/45geOvOLN562M2ROBxmjhmJw5ETh+9l4nnMYeJ55MTzPExeAB+Z
vAA5eYE48fNJlp/zmbwD7jJ5B3DyDo4fall+0GHyGshg8hrg5DXVTB4Egkwe
BJw8SJ7JmyCOyZuAkzeNJn6zYvktjMm/4DyTfwEn/5rI5HEgy+RxwMnj6iRH
8j5Yz+R9yMn7uoRH8kS4zuSJyMkTDWsL7krHnkDzqNLNYhcccM8xISv6e70c
Jg/FdCYPRU4e+tn+7Pcnu13h1wc9u+ZffjD2fkUQ/Z3UEYZ/hOsYvhJy+Eer
pXf/CepWgCPjrSrdF1wAH6+qbLo/Z9jzLRopW7VR/s/jfYL8O2FzhrAPzd/s
yTirPN/ZAY0vfF541O4iztXvTaP7XY96O+ESzzF3PBXqeWcoxw0/Wih60/dh
TA4o+soWeePa1t68UeVueMPw2nz6XmK7uNPkxJ3+uKNOwL2feo5LJIUSY6nx
i1XXpozJDMRb6e+7LW/o4O29wWhKjet8mXGm/FAA3o/q3XXdTBtv8vqvSKfG
zfIcwsz7/LBeZqfIt1VaqJy4te0ZNR7eWR2tUu2NnipTDJXUNfDG+vm9syg7
xSZz995M9MA9f67cLQhQw6Vhicr0vWLzF7/rzCfYot2ZvoW+q1Sg6N6VXLrf
wvLvrrP2xahjpMrj75Nem8F504WbaK7uYo9ms3f7zsH8mY2X+kATDI6I5NH9
5cIJt/0b4baLE2677GXPd4uUF0Hiirj8L0IaUB+74wUdJySuNi1bxnsJY9cf
yrtmYYm1z7/x0vcnFf8yX+nGJ840fXTGH2GFIWmj3bGhpkeJvp+ZT/jsP1l8
9t9vmHk5yZoX+yD9X0l3nVFct/fPyhAL3PHKeB59D3l4QteDmVIOOCOxer7B
oQOYuOPdAP3dIm/GzwVnna1x+fR4jTt8G0DJr2s8fe8xnXDY57A47O8jR18L
DLuIPlw9yuHZyhB1xvkA7beflvMFStqMsf/jr7G947Xg3DpRE1reJrlp0c1D
F/BckOU5kTI9eDJz+0W6v+IoW6nJd/z3QFVQtfJZHSfozDl3iP4ubC2Zl1TW
vMjF3z2+c78ZLAl63WjH7wfv7n28/5r+DujOzzXPvC7CsV3fHsbneMBSFeEN
m+i4nXDPawn3XJ1wz/9ZlzJGKNwUJT9l+1o02ONSXad8+r7WcY1ihXZVQ9y2
6nGN0iIXvDmNX5/+DrSf4e7hMRbXfkd4R1vKM01IFR8S9c6xxQCZbyN9IF8T
/8Sy/CNJePRNLB59/4WjigXBNmDeVGt/dYocmoy1z6J5rAcIf/wqiz/+lHDb
TVjc9jVritpuT3WChn3mmn1blEHVW1iOvkfkSPjjgiz+uDfhuSOL5757nYBc
oACVqV25fHvccQfAnoWPaf74pL/w02ccPfxj/2MbWBZ9YdT0pa4wacmPlP1/
/s4N30244TksbnjlSw3H5x2qYLrz6hUHXWNwjs2dSt/jqtgdpiD2UQW5i2ds
2mt/EHYdzB2k+2eaD0temr9UHy4Hdo1tOSAFodu3HfnxP35TOf1fvyV0twZX
DtvAobcu+2Ueq0KfVT4/vQ94ET/cYPlhF+G5L2fx3Gdai5dMfuwEls3yq9a6
68DoY6Vv6X68swj/+guLf91LuOFrWdxwO3O+fXjWCS480n9XfkIDOmojfOj7
t5KEG97N4oaHDKU8E3pmCTpGjqeiJ56D8JyCVPre+DjCxf7G4nrfN3Kwb1mu
AJpht5zKLKRx5U7vkT6i24n/r7D8X0h42TEsXrZBu6r7bXljnGCg9S7pmQ1a
67lq0/bU+srfVa7WBw9+3SWehy/DNOXsa7up8aIlob6PdU3g65IVZ8zrzKj9
yKeCzgdnEP90sfyTum9vzQa383BB2uLor6TTYDzqx0W6z0Yj4XGfYvG41/N8
dTGNU4Rx27+vlJOXALEVay/Q/2uVVXqm1T2ZUsveENMlbfP/Lz+990fHfvD0
CeywND2eeVQGj9dFz6Hv548lfvvC8lsC4T7LsLjPE7Nlg0M1DVH7UEb86nQ1
9D48uo3m3soQ7vMLFve5xlJi3udwE7Q+PGNH4iNTNDXd0Ul/921DuMavWFzj
dMaf6Mf4Ezn+HHo74n/wYPwPHP/zmIzML95OHJlf4MzvcsKVTmBxpY8vjOy7
XEWdx9HXfq0R0cNHyj+/3/yf/7uV9X+jCd95JYvvHJd445BHlCMWRituK9mm
jWvNB47R+8xcwi/mZfGLH63Y7Chu7YThVuMfz6LiwG57iXWh9DonHF6uNf/l
8GoTrnEUi2t8f8lXjcFr9nhVsGu9z5AyOpyMPHCdGjch3N7DLG7vk6Dj1tqH
9JA35+ma913SqPhqMRfNPbxI/F/H8v8awvMVYvF8QXZk/4HN10f2H+TsPz2q
Ew6L2p7Eou3FXKMXU+ee4s9NdH8k146p/wg32uKE24kbzvNexteOrUtEqPFm
wlPeyOIpr930Mbs+wgkD3je/a1nigsathv2r6PoD4RensvjFbb92eU11dUTP
lTdlTrWq4YdtY6rofcma8F53sHivHI7wJhYn9+aTvHPDwvbYPzl88UfrXeB3
pq6OPr/OEX/u+PBff4YRXm0Hi1crL3O55NgaDXwlpMflstUeQCLzOf092gLC
b01k8VunSDEcWyMWx/Ywc/7CVub8Bc75W0I4rX4sTmvv2pFzHKKYcxw45/jg
AMNpHcPitBYTPzRp/9cPn4q/5TleuoSncZTlZyk39HlytILmB7klqMSVl2nh
rfWS2c+/OGP1AstiT2rcnXBUD7M4qveJ/7ex/P9arXu78jQDuHA8zn/KIQOM
lpcPovtUbyD+8WP5Z8Pq74tHVznAlMbTo7Xs58KlVeIT6PXJzcS30MTEt8CJ
bxcQjupoK4ajOoZwVG8RHm42i4fbZy86K+2HMzzf6p+mf+IiqEl0DhnT8oTr
Gs3iuvK/DVHeIuIEMpMsHwfEuMLV0PxHYtS4CxOfw++dI/E5cOLzWMJRvcji
qHI4rb9ZnFZLJk6GJCZOBk6cnEvm3ZY1756E37qTxW/d4DMSh+OV5SNxOHLi
8PFMPI+1TDyPnHhei8kLYMzZkbwAOXnBGOLnZyw/RzF5B2ieHMk7gJN3uBM/
cO36rx8MmbwGjkWP5DXwf3kNkwdBAZMHAScP6mXyJpBg8ibg5E18xG99LL8V
M/kXzGHyL+DkXzJXR/I42M3kccDJ41a3jOR9EMnkfcjJ+9ZLjeSJuJnJE5GT
J+47OO2CsLAJti/JEciJt8KGtcn29HdhHUweioNMHoqcPPTVj+FLbz94YMzD
bYcXPkkB7xq1NxI/u+EFw1NAZ4anAByegkPJWHvFL9m4YeXrkE328WAi+/3+
9i5qnzyewJPx7RoWVXI3hXUnwcahCuHFT7sh1FR9fU3ZdZwZv/N1TEUwBPNm
XW143g2/msfqjv2VjhlKfdqeq3Uw7vQNHf1eav/f1GZt51GE7tllO61nK4Oy
6M3BXZS8+pqcI0qji1HpjpGQxDZ3fBnm572G0n+qyXrTkF0x/tKqcjN7HY4a
wa2NcY3Uvud91D05vhAtH+ddWnE0Ec3aslWetHTDw2Y3g2UVuega0F96vTgd
k2qT+TpeU89Xj8rbZLFUNK2N2SbSnohND8VTDL51A/oucdB3CcZ4y9bKnGlR
uHtB5DWR39T5svFDRa+IM+rXHi55sMIdFVTES3np5+WFT2NQylGweL968oY9
BtDvklJAx0X11w0V3m0whY2tb98udz4H3Io5ZXR860s4sEEsDqyHpXvt+VU+
uDH8gE9IpBb2pe31m0bJfxlKDR11LR4XZp4X+zpshFJcV9N4ftP+Z+bLjjVf
x5Z9/TV9XDr+PHkijVdsGUQG+x1bQ42/JbzXSBbv9TuZlwDWvHgkYP3hrlTc
GP3bY9Y6e7wxutP6HqXnerrbOeWWZHzf5yZ79uVlTJ96/kc9tX7mBN9aq/8q
Gv2KZgvP/uqGD5fGivyg7FxNuK7LWFzXAd8zQ9d4/HDS6Y8q2aNc8NfueZP8
6feArb1/HKl8z6mkKHvAyRR9Ik0+0OeF/yeRO/ca5FDkavmKw1arYKd8+ci5
P2nBkzS7Xk04JDhG5mrtRSoOFzpI+3kymRcf1ryk3fP6+GrVJegtDRifsM8V
JucHCWpQ41XGXcm5/1jDWLmXr+JHuUFlUE28PDWeRTiqewlHVZpwVIu550bL
nLPCUbJda+0fh6D125Ct1fR3arkaFXP9DFB0UZe4LJXHf9wkvj+Fkje8wXBy
X7I4ufZRO6W/GzhAybXpk0Vu2ELF27Yf5vS5SfzDx/LPMsK3Pcni23qojFOq
vRMJKp8kLSrsncBOoEQymr7nRnimwSyeqRnhwMpJ/5cDO2zWscelKx3sTn68
ni2iAWoeVrfo755yCc90EuGZRhOeaRDhwy5i8WFNvYRc3avSAcs3nMksMwde
43Z5mkcZTfinj1j80/ErYzs2nkiE9JTs8Cvlm0A4ROjRQmo8n3BIHQiHVIhw
SM8QDunQ6/9ySIdndlrW+4eAq7TT+gVHdSBly63yX5S8TJrJrvXbt+CLS8kz
w6Uv4ZE6UQE6/p/pey1ciMsPpB1drGzvu0Ii19k+G/r7JuK3SJbfFqSe2Tn4
IgUMx/z4tHl7CrSuP1069eu/fpjO8sNOwocVYvFh7cKFp3gpZoMml9DyKafS
Qc+Sb1/g+7/zNI/8hes6QWlcoPa3DNDWF0z3hBCYdCsk9Tm1j00iHNJoFofU
6rbysgU/ksAo5ML6sGA7/LXdK7G9n4qvCGdzGYuzeatfZ/NjGz/YoNanOVSd
jLK3iy870/f5if8PsDiwi8Yy/M1ZLP7m3V2SYwQnGODHtnq/pw5ZuKXB/akG
ZefZ4lv7CyeFwD5eHglF+SiYk/rFp/8X3Z/KsnddaSp8vak6rHU3E8wV0zTp
uvF34p9nLP8kHnwXlU6dZxr7ShaGHkqn9l0F+Uefu+Ek4XueZvE978wrGw69
5gepXbmiCiK+UPppel4f3Z+EJ6dO/r5taeArW+MVey7+X35axqvepHUlCL/X
ekzkA1/cMWlJGd2P/T3x2yKW3/YTjmQ9iyOZi/zNc5+l4I62nv1HSjPw/Leq
M/eo81SecCRDWBzJjx/3af66nYzWZ1eWRE3NwZ4iNyWdzn85ictZnERVxp8o
xfgTOf5cxvgfOhn/A8f/Lcz84nJmfoEzv72EU7mQxamc9M7zvHBZCs5YHT17
RqI9aFVJPab7PXL+733W/z1GeJES7//Li7xz7UufVVYmdggbldepRuOnjDv3
n1LPy0HCQ0xi8RBXGvKYnNLOxhkTOs6YGGbgP8KSP2raqX2YcP2MCNdPmnD9
vP/CSRTrtJZb3ZKGz61F8lNqknDDmuGlgdT6HCAcwHAWBzCoTnNJTUUgpjxy
zZ123Q0DG8cOf6LmfYD4X5zl/3WED3iUxQf8njKy/0A/s/8AZ/+JULn4+/Sc
INS2MTpxC/TRR7Eq7DTdV3avWFPtvWSMz8iasO2rFupIeyl6Us/pO8JnfM3i
M9Y0xtz8QsU3gs9eDOyquISnlpYk0f5PJzzEAhYPsdHS6s7EzBQMkptkY8zt
gP4dPBWZ1P9dQvhxDix+nBzh7mmyuHvlPvOertcOxQ2xE7TF3rmgvG9Wvhbl
n37izxCWP68R/p0Si39XJcvf8XyKPlboWjlfXyGP/UI32uh+DomEB6fO4sFZ
lTFcvF4WF08ub+T8hV3M+Quc83c/4b45srhvecw5DrOZcxw453gz4b7tYHHf
dhI/aLD8wFOm+PDBQxu0+z5NQW6MC7ZXnvtKv3eQybEIvj7OEK8eONJydLoF
HjFe5EfXjRsJl20V4bJ9IFw2mxWM/41Y/vffb/ZzX6kDROwOkT3fagyFF9NE
6PzxBvGPCcs/tyvX6xx4GE/FI/PHTHjmBe/8x2VKU/tAGBPfQg4T3wInvu0i
XLYMwmWrIFy2D4SvN8Ti681bNO9p+qo0qLPZ7CZi4Qgujee1XajzZTLhxC1l
ceKulbsW6EukwtbdMQ3jN0rh4JSAB6HUerjLxOeQzMTnwInP+QmXbTqLy/aA
cN/sWdy3diZOhvarI3EycOJkzrzrs+a9gvDgJrB4cFZMHA6pYSNxOHDicK6i
/0fYm0f19H1x4xElCSlDyZwkNBBFtBuQECVRCInmeS6V5rk0ap5HKiqFhC2F
KEOhDFESiciYofC7t3ve38/PfR7rWau/zmrd97n7nHv23ve+huF6HqFjuJ5H
Tj3Pw/QFsIHpC4DTF2SSOFex4vye6Tsgguk7gNN33CRxKGTF4RjT10AI09cA
p6/Zy/RB8JHpg4DTB+1l+iZQYfom4PRNd0ncnrHi1sL0X2BaNtx/Iaf/Osr0
cSDF9HHI6eMamL4PzjJ9H3L6PgumTwR5pk9ETp94TX3a7vufsuG8xgmjLNE0
vDRzQkgnte41TB8K2Uwfipw+9Mr82NUe+Y6Yl3Rz/NjQHJhhc2NJKLVv5Rl9
ZlzC6DMDR5+5MNzhwu0pB/GG3SYXZak8CN/1ITyDeh5nnl5SF/bZD7fsbHNz
f5MNfOf2t2VT15GdGr/qmUMwDpaqzt86LwF2HLTNP0ut+2rbrdYrs3zQ48Ze
Fx1NC7h16uE0Wld2X/v13HcfwtEgaGeP2BV3GPXg6E4harwjaaP6U/FIvHBu
s0qbrwp0GKsZLaLGBUrXb43Qj8IIl9PHi7OdcfEH5cAh+ruqaE9d/oEgNMv6
5JixywOLemZupd9XfBkqkt/yyBNrVhg/chI6gg8W5GfS738Cfj2taClzxjhL
fqsv61xxZEn+xcv0ftt12Sh1ojV+ERZNuffBBqNexbTR3+9co62f3Z3kgj+1
JesTQl2QS+hLE43bFz4k07ox3Qubsnt1z6V44WWLHWax1LjauAEtLrMAnDvj
z1E3V1dM3b3R3Zka7yK+ciLEV24K8ZUbKc4t/NTaH6wcxn9ooOorSxm+3FQq
j7iYPwnV4DeDlqbFNYaimVDS/HInrdu/hKzXYtZ68QUojuONcMH0ieduBTX6
wapbE3vp703hxD+Oh+Ufp0DWxZe1LgLTzcxdrh3GZ4Zq/vNb1EFl5QqTO/R7
xcTD+yw2u+CXxPFeqvv344OY4zX095FrYoEu255ZIn/co0d9mQew37Hdns4X
asQnzonlE2fSJ/84WmMHXhWaNCau4yA2D95Xod9fuVYP5Zwq3IsteZ8fC/fb
Ysfx+YdoHzHt+a9mvPQ3xluLYyU1jzijcpibFP09MW2PzBKb0n0Y/vvo7dGx
3rj6pF8xvS4CZF2esNYlXfG4P6+uPlZzqYvtafHH3nYhF/qcF3/TlJrLY49D
jedChMXD8WsU79nl1Ph64su2kPiyiRBfNqt2dPopHAe3fccZzp0WD5KJTl9p
PpG4WodAdIAz9Ik028l+Dgev5MdIv6dqJr57b1i+e3zckzceXG0EsY0rborW
uUPB8ZhOWkd95z/i40z88oxYfnmKVz/Ulxy3gAjzETbcRmYw9fjoVFpn/iTx
R2tl+aOFEl85YPnKHdTMnWfW6AFanduUPb4shwUn40bS303iiD+aM/FHu0f8
0WYQv7kglt/cH88Ove51R0BB3dX5+WNjvH7m7hlav0iE+Kn1s/zUUuIc3J1L
D8C26yLWvYqRGLpzgwD9PlyC5WtmQ3zNyoiv2TqWr9nge1P1RmdHPKo4qXDT
3XQMTD6gYUutS3i5xIGXS12gVl19XstrN9A0Nrek/b/ufutQ0rZzApuIuRYe
XS7g4ndMkp5POYlbGytuUaG6io/0PGGZrrvv2wPecNHn5PT4/18cZk3+Ow5l
xG9uPctvTumQ/8pwbl9ofcLTotfsBS51uhNofhbHnyuJ5c/1iPiahbJ8zVZN
/+V7ZNYRaMjT3nyByxEczoe8KKHGZxNfswssX7PoJVnTB8AVvplPuXF6kwfO
zdT5U0GN+xLfrj6Wb9fCBccWN501Afnj0q81i1NwRolhLO2DbEPir86Kf9s/
/LyCd9yuDgmwAEun76WRK7Jwcfv3DY+ofP1H+/jd7wp+KPpk1PiPzwMg077k
F/2evFG3t/yP8X4o2tMeJpMUAW2SAUYyf/7tX9YkCweLNL3AcY1zSuJ1X0g+
tWA3/R7Jm/iFLWX5hW3eIdD7ttsc4ifaPmj8ZgLGD+5p0O/DPfh76tcu2X5h
jX3H6M8vdf7Xn/rK+Qhm2Friwc37FmntPISbijfMov8/kMStkxW3FcSXahzL
l+r+KIlc0drD+HiBkXp2kT+umTBvNa3zVv4PX6qr8Rovl0bvRHH7/YMbn0dh
ob6G1QT6ewrxXXJg+S6N1hmOJ8gz8UROPAf0huOPZkz8gRP/Uonh9cWZzPoC
Z32nEt+repbv1c82T2M5MTcsfs+3P0H3MCw8P+IPvd8498vHut9NxH9qMst/
SvD8TM0Fskfw8aV1YeOofDrpxEOX3D//9ldqG3Fq5ubjPjijb93VMZN98PjY
+/20z8Jm4hM0kfgERROfII7v0h2W75L/3faB9fO98f5Zz4eafp5498JIU/r5
9SG+QpEsX6Extxy0cyVd8Grwp+zNK11xxi6BFDpfN5D4O7Hif4b4DZ1k+Q1d
Yc4ffMecP8g5fxKT7+6d1ucAJ4O7nJfWpkH9La2Mk9R5ZSxdIy9sZo2P733c
ERkaBn7ai6zU6Dp5BeP39Jzl9+SiUzxeNdMHI3nCK65stoTlfSUaNB6b48dU
xPJXGi0TX9zx1B1f3PmhMdVOFb8EHel6QO8T4kezjeVH85L4+Exi+fjsX1e/
o/KsJR5WGfXm9lg7tBKGXrpeCiLxzGLFcyvx09Fh+ekoZy4cGdGxBxes36F8
6jPVXwssePGQGt9D/GUyWf4yQHx25rJ8dlYz+RfHiQ7nX+Tk30TiI3OZ5SPj
wuRxbGDyOHLyOB/xkXEkPjKFxEfmGYnDRFYcuo+3h1ctcwCZa4ZquVsigGev
wFda733fimuBHfP3gMj+5t7o2T4QHfXwOe2jmkR8XqJYPi8CX/7v/kSTgxMu
8xsbwBb57OJwRRuwFd6wgq7fwkl8TrLiEyvt/r26gtqf2wPVvmw0gcHBB7dp
vFkbU99CH1PfAqe+9SE+LyYsn5c1xK/nEsuvR7zvkfBY+8Ogfndflt+ZqYjW
Y9/RuoWBxHdmCct3BoS/KTyQdYJrt0d/WVznh0ZV9X60ruNXpj6HMKY+B059
zvF5cWD5vCwmPjJbWT4y25g6GXuYOhk5dXIkWfebrHXnJv4yd1n+Mp/mDdfh
aMvU4cipw9cx9TysZOp54NTzZ5m+APh0hvsC4PQFT0mcP7PifIXpOyCQ6TuA
03f8JnGIZMXBi+lrQIvpa4DT10xk+iDwZvog4PRB95m+CQ5WD/dNyOmbFEjc
trDitpHpv8CZ6b+Q03/NY/o4GHdyuI9DTh8nzPR9sJ3p+5DT93kzfSLcZvpE
5PSJdjK5n+3v2mP6oatNJeYFqDAl5ZHgd2ofMn0o5DB9KHL60FH3Zq/Nj9yN
0QLVqbPUk0Hv7cdab+p3Gxg9SSxl9CSBoydZFnaW74mbG443vtvu0ZMFV/6I
rjKm8tpY5UVVze1+OPvejKF173LAIdM/SYC6fkXhL6OJNVGYfZFvZPyfOLjR
OLbTn7pOO7/xFNmBGPzx4fABg2ZjXF+kqXCWznfJNoa6mxLQdsvnwLFTjaDE
Vvjjcmr8bIXVjR1743CvY51c6kdfVFIYraNI41hcOwwu28Wg6xiTNcuF41Fe
TC9iNXX9zJOKwZLv/PH+tZzopx9isOiabPMuWr/063te4S5j7HVeLxqQchRX
DumJ0bwkS+tfWoMl2hia4DZxLn8w9gmVSnrQfcTFmk7R4yvB9u299eu+eWKY
vZYJ/Tw2HKwQfbjaBK+evX5X8IEH5t5fsZ4ePzB3f9SBNld0UNzX21ThhhNz
e/Rp/EDEDLndWv2+uMFyuZDBSxOcsSnvIJ1HbhGfGkPiU9NNfGqmjo/+8G6T
LlZA927lugQQaanuFKfr8KYemVoVL5yhpRq3fVoSxPoGPQqk7vc6Wa8S1no9
W//aJVElCmddO1a6xMofMt5FPr1A6z8TP5pjxI8mmPjRPCLr0sFal9hW3lnt
9SH4JFzvyHiq3q/0i/lC+9GIyDYsUl51GD87bQ1TH+GFHTutJtPvPzdJXZ6r
GrYTe8trzd5cdsc6/VtGNF6lgPjOOLF8Z7oXF+Rov7GBrOQ24wM+Lvi8p86S
7suORIfsWsptBwbX/PiWbD6CwSvzLtP18/MLT4IVYuxgRtTXqd/4A9Cet2Ff
GDUetkZY/KK2G8SJz5hlo+OPO2SnoRc1rkfWJZC1LqXcTlYzx/iA6sIjzp3H
/NDSxsPAnBqXKlYYEVVgDT2vOoRnrAjF2NC1u3SpcV7i81LN8nlRUeE+07Dc
A9ruq55Xe+ADGdflV9LnbceRa4+U8RBaD+xWfurpDxbjZU8kU+MxxMdnFcvH
p2jzjdlybi74eGJm7OBaX5Abp9ZF4zw/kvhksOIjRfx31rH8d465uVVFCu5F
scuvR9wM8QDRzWkudL7IJX4rY1h+KyrEp4ZH9G+fmoplgl7aTb5g9PNJQO5q
H3ilF9dN13tJxG/lAfFbeUz8VnqIf40Ty7/muZFqtrtkLLSkJEUs+W4GvZdj
/Et+/+cX85LlzzLJ/NYmnxHhIFjRP7RoYzQGTfdbq0KNexOflDPEJ0WM+KRs
Jj4ph1g+KTILj5x5buMAaoPFqkFzcnDNiUPm16lzya55p82fQV+YGsVnb1yn
h+MbPmnSvNQTnfpDkHUYPnSYrlvgvweamq/NonHpV0ncZrLiNq4/J/0EVwZs
cuf+c6soGSpPTWt/TZ3Dr0gcrFlx2E78a0Ys/Nu/ZqWnYOa3NcXgtVh941qt
bOjSmNtX1d8Pa//h9yFFfFLGsXxSzteJaeb+KYHDQ9y9EXlJ8PZY/Cb3D1S/
Q3xSDNk+Kdv12j+m5cCaTUM8gyO8MT0wz86Qik8h8QGZyPIBiZdZiAvvOkLh
EzGZMPF83H+8IYPmd28h8d/Pir8+8QfRZPmDrNC2rfhVrgHfk8d1jDmXjVua
dNZMpfLIugrRwajv8tiwav4YoQ9WsCbx7W36e4HQzw73pY+SYFZUuCPfikLY
oTapciFVJ6iR+NSz4mNypfcDl18G9GvHtj5tKAMFrYiM82/6IZ/cFz/rvoqI
L8kPli9J2Sp3A+upflCw9XiAr14qnC2/3k5/R5jWdUTXcCzA71+9H9x4TaGw
08SDfl/06xFv105JH5TIb2+dcSwBtYT9y+nva6+J78ZLlu9GZ93vRUkj4lDt
lyamhVfg+ms1hRN6qbxAfDGA5YsBnkrCJrnh6Kq6/5ChVAnu0zeVeESt+zEy
/6+s+d8ifhPpLL+J+UycoZiJM3Li3Ko7vC74hlkX4KzLELPumMysO3DW/Rzx
1xjP8tdYNnd78kueTMwbv03kwKAf6FntHeoa/C8ObP+R5cR34znLd8Mwcf6a
mcdLUdXUKjYmKhn1124rPUXrEBKfiF0sn4htGY5JridP4qczwbct/GKxL+bq
p37q/1uJ30EY8TtIJX4HHP8IX5Z/xJzWjXesTubg18Nv2r99jsVe9w4hceq5
fkL8EWaz/BG2HDkmua05EsVu9yUskIrAyI+79+2mecQk/hms+H8nvgnThP/2
TdBgziXczZxLwDmXRN53CLw46Yh9DpYtOtnZYBv8TWwcrZ+cEBn7OCAK+18u
l5mnHA5FnXnRhtTvZhPfCnP/v30r/FfEbpe4FY/BYvUFi1u3g+uKd0e1aJ87
4hOxrf5vn4hqjxJIFQ/GrRvz+WfWOGPGot3xe+j6lujqS7B09e22Mn4ExSw/
go/Xsk332q2H34E9ynVnA9FrXcOxULreIPGcx4qn0ADjC5DN8gXo2PNLWjvf
FYQVnaYc7PVDEalDufR7OY5OfgpLJ19IivELuMryC3D1Gc7LMJPJy8jJy4uJ
Hr4/Ww+fye94lcnvyMnvTUQPv4vo4ZcSPfx9JA6FrDi0S4vUD7SaouvS08f+
RIXB5YvZV2m8ffjzVaNgjgdeceFtSwc/cB+xYhLN17j8jNGr92bp1S8m8V/I
ir/j2E91Dub22K9mMUMs2RPOdm/up/dVBIlPBSs+bhNEurNlDcEpn39uTogv
NGt/uEO/x1h+dbjuRTum7gVO3Zv/D736OuI70MbyHdAOddayOB8I5644XrLp
cIHMw2Vr6frqBdHP53r3t35+Ha/aT3mpCPhirSf0QysQw+KuyTZQ+9CDqdtB
wGW4bgdO3b6D6NXfZOnVlxE9/ByWHr47Uz+DFFM/I6d+FiLrHspa95tEJz+A
pZN/ZdxwfQ5XmPocOfW5H1PnwxymzgdOnS/N9AtQzPQLwOkX+EicnVlx3mM1
3I9AHtOPAKcfiSVxmMSKQw7T70AH0+8Ap99RZPojcGL6I+D0R8VMPwXbmX4K
OP0UJ265rLh1Mn0ZRDN9GXL6siVMfwflTH+HnP5Odc1wPwjiTD+InH6wNHS4
f4QJTP+InP5R4mdTUrOtCVjtvJU/vy4dq85skfCj9d5bhvtTOMr0p8jpTzM+
BajuipkKy30i7Z9OiIGwvert7dR8eBSGdavwF6NbBRzdqmS3mfErsr3wtX5r
RF0+VQ/ELhF2oOqfN4Na8/oGQnHX9JfaSsrnoQri1aTvU3VgSpXNi/H5OHl/
iIGpeSWIK8l9HHhGzXNRZMuboGL0nVIbIP3BGUxdF14YQ+WLT/3LZto1lWPR
4vZ1KtNLQX6Hgc9L6v8vzgle9D7sDO66u+9EyMQUmPXWeIM/VZ+Mfsd16rJq
DR7XEJq8wt0NtQqfH9Fspupw1WSnlMTzqFh9RmHoQASKCu637W6hnvfIkrFD
fdX45k9chM3aY9hxY1tY/71+6vmJjDtx+Sx+tY75UaWQjDuNQ89LPab2Od+6
mU/iqnBdAXeuq1Qa5s34/PVCB+3Hx/uirrccXSV27zj/PBX99gsupPWspgam
zXX2KsGCfVmrAhJTUftr9oztVN2oV2g1s3h8Ic7nTfe4I52DiToO8wKoeqOA
6O3Ls/T2bb36Z41c7An3lUKedrdHwvFjBjb91LqEfyo/X1LrgPtGvphw+VcW
HPhj3GlCrfsosl4/WOulxG/9ZNKoHGztev5zXl4yfIuU0d1N12lEV38HS1d/
FlkXH9a6pJx8mVAbUozQmVmemrsZs6yH3MSp8fYzIVu3hRVj38eRO8aJeOEj
w1Xv33/uh6i75wWzswqwj2+xaGapBy6a+cOFxgPfIfr5M4h+viTRzz8x54Wd
yZlsFJvM9eKoqhv6i4m++kzt82f7XLYU7c1B8aqNwn4LAtAgVlByOzWua3+9
7AFPLtrcd7o0XzoCbQJyrkRTdYWxelaolGE6ln8UmXxHOwKv/rjJT38vmELW
JYu1LsqvXQdmlsSjl45x3ieHCHzlOH5lGPVcHK14dyzbOxEVUlfY+s6LQ/nC
Cj9z6jmaQPTqbxK9+hFEr945+dkMbpFjkHfKquEd1a98en7J+Tb1/w2fl1lM
v5oMvhM+73twMBp2pe7+SPtXLiV+BEEsP4K906bOzsrNgfTlJ52zFwVDcLp4
FI0vLSTxEWXFR534CPxm+QiM3mLs7VZXCFNWvVnrqOsLxQHW9zoH/tONv8TS
jY/6h95+upnC9isypaDrOug/LZy631ZelxJq30oQ3fgVRDd+H9GNP050+D+z
dPh5vQpSFU8XAd+ERrdn4b7428dafCE1nziiMy/M0plvSHhfM8k9Gro852XY
16TgZ6xqmk+NZxO9dyOW3vvFf+i9N38QuBfQo4xjDOJk5u/KxoxlA2M2Uf8/
U3rRBokHqXBD8oGmqlwhqH5Xv3yU2s+7lGP7Pm8uhNrPF2q2lxVA+cfd75yo
uvcqiVstK25CC+KjNl6rAHWhTZlrgorAovLtd79Oaj+TOEwW+TsOQHT4H7B0
+AcvyPpJZ56HyV5h37nGF8D0Gys8PzT2gxPRLT/H0i0//g+9d4VWnrOr7l2A
zJz7M7yN3XDhlp+DtdR1thC998MsvXenY1mtF4Sq4MF0pd+qzWX49e0Sexvq
nLxD9MxHev+tZ567tsNbfUshiC7YULZArgplrutd3/OkH56T+O9lxf/uP3TO
E4sXLeOenQZzjcQdnfAkysrtVptJ5ZGbsxSTDMZH48xHAx5y86sg68i9KX+6
qDrwS/7ZlnPOELIyulzH6gwUCo6XMqHibEnic54VnxXLV72eJZoGFw98T+RN
OgdfFnzUHEmNvya67sosHfVMp9Ab8hej4IRpyLS0xCJYnP5gMIN6jiSr/Vqi
9ewvjNjlteTizqj/fVct2DfLptYlBmUy9hfKnyzA2tV1E+oH/qf7/X/ErZno
dbuw9Lq785MnXFsVj71etxeK6Vbjka85k1ZQ89lL9LrXsfS699gsdF4i5QBt
mjuNpoiew4sjtiwKoa5zmOhRF7L0qK8z8YQ5TDyRE880Jv44jYk/cOJfxKwv
CjLrC5z1bSF64H+8/tYDL5t6jWfXpCqMzxK8csz0FLiPf+ReTe3nB+R+nVj3
q0V0ub1YutzR7vmK/JkX8X3mhp4pp+2Qu/Gh7esG6jklutOGLN3pp+dHv7bM
uYAulxULpxrlol27S8ipa9Q+J/rJ6kQ/WYroJ/sRPeqzLD3q0Pv+ZkqVlVjQ
+3Ffu3w+OueYnBJ79p/+8yKW3rLAk8B86Zoi1K3W03n0sQg3zzKuqOij+sd/
6IHXER3mCpYOMz9z/uBd5vxBzvkjM7b14Oyez8pa6yW6bDZkAdevJrkn1Hml
u+NaWNPgMVRovLY2tzsZLEp3fNWm8xrRwX7v+LcOtmyb6Cbtq4VYWbLDbMyG
UKjZl5MRRvuTEt3pJyzd6Tdak28ccixGV7cfIrdst4PQLNdRtE8KR2f4JEun
9x3RN77E0jdOejwyhSvoOI7UOXZtx+Ug7PbtGr3163/61ZKseN4jOsPtLJ1h
ISVliwqZHIy9odB4pywYr8c5Lt9A5TsJort7gaW7O4boD0uz9IfLmPyLdkz+
RU7+nUj0dWNZ+rpWTB7Hx0weR04edyb6uvosfd2XJA41rDhExAmJm1SnwoDu
/IxJn6MBrX7c7aCun9Brbct9PhUMrr0YJ/02GMJb60faUdevIfq3DUT/NpTo
3+7/h07y89qsBAeXbLBI/NGqVBcILYWGxlep+Kwg8bnDio9Wgq3rx2nFEOVy
JnOUly8YfQ3VVPzyv/oWljD1LXDq2zyif+vM0r/1JzrGIyL+1jGOeY4HLH4W
wxJZ1Fy8wwhmxs5ou/iZ9uVh9Hi7WXq8XxzkxshyZ8EYQfeU+dnJ6H5lTrsV
tW8XMfU53Gbqc+DU5/1E/3YKS/92NFP3wkeWvu5Bpk4GC6ZORk6dLEDWPZq1
7lxEd3c+S3c3g6nDccXq4TocOXX4Lqaeh8VMPQ+cev4C0xdAMNMXgC/pCzxJ
nGVYcR7J9B3wlOk7gNN3LCFxuMWKgyrT18BUpq8BTl/DzfRBcJjpg4DTB1Ux
fRMYM30TziZ905h/xO0V039BIdN/Iaf/8mL6OJjG9HHI6eMmMn0f7GT6PuT0
famuw30ivGT6ROT0iTcV3Fs8JQwhYnlLXqRYGkpey1n3itrP1r+H+1BUZvpQ
5PShXMrdYgXz4pF/8Ybp4TfDUPb7+BdnaD7O6HMaeySLcUeZS/CfT9nokWvx
xIrah7N2GV+Ku+qH41cNuoktDkKlhrZfNM7qLNF3fcLSd80keqRdLD3SN3dy
puRW5OFnvWNUmVqIvJkFCTtoX2ai11rP0ms1XpFn2D82HoXjubUrB5OxRS+z
6+YgzZNidE15Rv+tayrB6LBBLKPDBhwdtqyxVV/33vLD/Lnc8RibgHrxS8Vb
qXH+UuX5oSOPwI+QSY/8zgfjKoP22Qo0PuSTzuktd46C6b3K4MKSYzDom1zH
RfcRNyU0BOyS4Nxqx4S+ZhesPb1Mku5rnhCdUi+WTulTMs9elv5qV0OoCD7M
hM9pW/bMtNcFRauVgmNoHC/RyfzC0smszJokU1Z7BGx3RM0uP2SPPh/WCpz8
Q+sAvHj48UIhVF0sFX3BmwEju0VvHqd+N4vofx5l6X9e/i3N82hKMqiL3jJs
c3IG9yGhQmv6fcjuPrNLDqnwycKxdKxEMpx2NzyVQJ17D5a9tIPSLMj7dKxx
+60EWOBfmdZInSf9RCfzMUsnM6GhNORyfjLUXxT9tPaLP0jnrgqmfZyvyDku
jN9qBnYjK8J03Gzwp8cKNRrnI6bWGKPxOBSGpuuuTfoaCI1v1u/opOIzs1r7
S7xIIGxTHfU9tlMafH9Oy42m/j/l7B4epXKb1Xk+m2auLp/zP/+dpqbGLQYO
LsD9YMpmnTsG8GrNnNc0Hrjh/Ez5sSE70er5MqP35w7ib83k2fR3EAGiP/mY
pT857tbwdbCcuQ5yrpO09OOQPF80hvX8/DV6kwveU9Gsp3Wl1Ihe5V2WXiX4
Zj+/0+mJAWOrL0pJjAP+qc876PdmB4le5Zesv/UqH1ePPeyRkITppl31B7n9
UOihnwnthysTfmXXWsFIdKg5rn460w8Hyqr4aH3jLyNPma+ti0OJSY3NwX/c
8THvb/GttC8w0eH8xtLhTK1pXeP1PgWzbEofLC5IQTH3yNEHqfWdQnQX9Vm6
ixrkvlpY9yUzOHJXbUsmvun3eZ/U5YNRZ4fO1VHjHsz+RC9mfwJnf86rq1k/
8Uc8usZFdWzpi8em44VLYqnrC9wRrvn4Lh9Hyu0slKmNxsixUwNoPfwAopco
GP23XiLfsnfvby1LQJ7vm1zzO+Jx9qO86DC6n/WoC+MLjMPY27szfmXthQpp
zQ20L+cGohspx9KNFOW++OxHYxYWfN46e5loLpZMCF/fRdVRG0XMuyepe+Ce
ZB9jM/NgeCjf/WQT9f++G8ZXrj5jhHVuht5RyXtwT6h8D71/ODqB11k6gZ83
yr1+aOkD026f2C52PwqsrI4N3KbmI9x0ftmOg7kwSe/n59wxBXA4IJE3+NN/
+ocbWfqHYnhWmVsxHt5mKUZKSCbA0of3zQtpHBrR5Qtg6fKNZs5neLxy+HwG
zvncSHT/prF0/4buy6379eg4nLx941IRfxaYTDx3MpAaTyH6fg4sfb/+NcP5
AuYz+QI4+aJt4OnU2UpBcMFQxtlfxw64K3Y3OVK/K0N0/CxZOn6jJrbdcngr
B90Zbn0Z312x/dyPETRebkm39bvDqcEokFe5V0YgBFMXcfN10+vofsb7xMOj
GLqjnn9onxfm7nl2pIkat8iOWuP6QwcfqC/grp+iiibcvY60zs/IcYyemxxL
z+0N0R8LYOmP6d251nBg0Au372+XmaIfhlsS92mJUuNRRJ9Nl6XPttsifkS6
/SpseOfe87xiM94cMuahefFziI5ZG0vHbOTgsO4KFN8Z1l0Bju6Kshpw5d9x
QK7V7osGNQ/ht607btF+FjoXXWY2fVMCU6majk2zLfBjT5M4rc9jejTxtUDD
Ljh45/bD4tHeoF6n/pTG24cJx76axO8Jje4F0rBaAe/O3XaW/m7C0SXbwdIl
W07meZk1z/Q9rvlKbX6wZoG/v2ynCqy1H/xB8/i2El2sKpYu1hq3b+8r4hWo
58w2ypc6/+dfU06keRnCMi3xM+YEQ3kR1+vSVFO43eUZbk+NDxC9L0WW3pf2
XBMJ8zEuEFux82v1BhvgV1u1neYXjHr+cVq/uC9YVl9dtLHQDhZr35Wm9Xy2
GebdkNt/GNoOOK18fsYKgqjMQ8fhLdHFsmbpYhn+vrw/ZfRhuOEillOsoQsD
Lat66e9Tqd1Z3JluUzE7xFmnPFQZ3WdH19HreEDrq4gKOsO8yZrV01b6Qqx9
p0YSNc49nbthWqUdbFfo0Pf21oO+Nc9q6futEJSzOOCqv/oZ18nIBS6q/8tH
b627q2Na5+Ki3CVV7VwGABs1Q2meCF+k7E4tsy2gpJDf4tOvD+4OE4tpfE4S
0ZtawdKbUrIavg5gzvB1kHOdh25Fr6KyHNFR7Lp9YaoOfo/cfIben8lEn0qS
pU9VuKrHAcbKwJbMXVvO66tCnuy5fPp+xYg+1WiWPlVHVfeTxA+uqBEf25a2
wQiPrJXyb6PzppDxykJDZ7T5aZ38nccDM4z559Df76apxDvImDig7eY7o0fE
rMeJ1XL6tA4YR3crl6W7dZg78d5k9MJ+Hxx1WcMOeTZsn0PrI7kSnSWNt3/r
LKX/475EyioPaoX64eixV1Rn39+OTddiTOn5GzkO70/kZfYncvan7YJ3cbdn
umJc/aISpW1+uFKgqJjGZYnHNFv0m/njtDl6zq+S9mD51Z/ptA5GLdFHcmbp
RPWfq5PaKXAQB4Okk+aN8cHi0kUudBxG1pq2CzZ5oIjVTcOc0xtA+EJ/II1b
SyU6UbdZOlF8J931JMwccMrzgDhRHRdc+0S+gq4TcHzCs46Vy7HxRKXZ8SZz
SKs64EWfA7WvjRpyGjdgo4rQhUyL1Xi0596yP3/+04MKYOkCOUvUCK+X3gh7
bFKu/RZ2gg0mI2bT+8TFhO/hkj0ewJU3w3PoQwiI8Bvxr6S/5xK9owyW3tH9
Uz3zYaUnVM16tePLPT/YkiB/jMa7ChEdnt8sHZ6FWcPnM9isHT6fgXM+OxGd
nwqWzk/quhEbhPiiwDRwjH1zjAeM1VTZTvMLaoiezxyWno8Mky/gde5wvgBO
vlBY3fG5q2kfVAV092kIHYKjcuPF6LgpEd2emyzdHgtLg61xR23xeVyze8yg
G+I9bWtan+p9rmnY4s0VeGeRU/++7cZwsuahB89bKo84TxXarHIaF02ZsN3x
RARe1ZF4/KeHqkMsxD+97jqMN9/oz2sbZY7R0zLSafz2BaLf8pWl3zJE9EYm
s/RGOtt+6nyuTkHf+wutfG5aIK+23h4pKs+eJ3osAsV/67HkKb64YNgcgmp3
PCW3WZnCyq3pdobU+GSiW2LA0i25w/Cs4YnDMM8aODzrY2X+TxP4nfBBTuPC
S28CMbxGtJHG0dUcXD/+RXcQeCdqcU/lcofgsXwv9ahxrcUePyx5AiDFtTHY
PlwX4w7MUB0+Z3aULNg8PQmuvE1oUAk7Bm9nx4TQ/hSJRIfkCUuHRI7M04Q1
zxVyG1IwOA+O6PItX3stDWqE8iMXD/ynQzLI0iF5U33Gc8aZaEi87HXm2ZJ4
qNj13UKH9q8XWzLxqEYZKCZufrZsQwJc/hNgn0/1pzv+oe+RPUdJbl18FtxN
0XFdVJYD7hol/MrU737+FFXlEnscVIZyw+urffH0yrODtL6K1+yegtcjTkJD
pl+hTHEZZC6YL+PbSdX5RAfDnKWDMVtqx4jvEkUwx++F/bkd2eAjbi61hP7u
I7xYuas/BtZtOXOzjD8LefQFf5yl4nNix14zafUEMLjmfv2exwnoWhBdRL/n
VEsrybDdlARc+3auUPxhBpntkh8Kad0V7v16aQ99Vo+9qpku7bL9f/nI0/yc
qHHuZhiUkLRQvpINwVc+bxOk1iXbJ1hn8j4zXKqjoL6oMAVvW0SvoPk+mv/Q
l8ixHr4O/mSug5zrtLUaCz/pSMWlFk/KLycdws9Dd+P7qbp0K9Gj+Pnybz0K
4ZCkB9nfo7Dnq/ynBvdMeJQ+aYYcdZ0tRI8ih6VHceS9ypWOSSewJWgnX7F4
PromZOTte98PcQ6V0fx92ehy0UQp5U84cOn1Vqyg4mY8/YVWY3AuTmh5tD7u
exoeWnYzsXbgP50NCZbOxqPwmCMtj/LRcNR75427A8Fja+yCqd/74TfRVShi
6SpsJ/c1lqWzcWkLj/vYmELsPq2aU1cTiNPLDISeUL/7jNmf6MHsT+Tsz4iQ
Fzwv9I5hfUqli2KMKY7nv3ZgFHUODHrtsLLbdBxFkr6elF2ag3at8ufvfqDi
SfQQrFl6CFmn1qju6Y7Fc14+GkLl2wGddI2Tqev0Lsj60RV8DGeWzUhXmhuN
u5Ja+mg+CxJdCGOWLkTCt7r7hy+n4IOKhT/SlfbjAhuXafR+4L6ZrBlnFoVD
M29MlLjngcGP37S+pd/XpY242exJ5c3m9KqjsnswcVHtZ/o6mkQHwJmlA+Ck
G3LZQ9IM7tdYhibfOYxyX6TC6DxorPeLu5U3EW6sOPpr0Mkc7p9bfegF9bvj
ib6BDEvfYM4Ft7fvtVIhQqQl10DeCXrLx9wdou6rifDuvVm8+6vM+QxXmPMZ
OOfzbsLr/8Ti9RvItydv314B9rrfV/boRYDhJas9stT50Ez4++Is/v5LJl/A
eyZfICdf9JiqHvwyOh8+jjtpp7zlKN4dUyc2l5r/DcLTP8Hi6Tes76+eey4B
pEcU7cuJi8GAng8yn6n72h7d32723gf1p59P7PsUCJt2Z3fRPD6Dw8b73D2D
MUXQfM6Un9rocXz0dydqfEHQjUsZ9/whe5KjatX5HLjlFs43l3ouuJIYvvYg
i69tRvjF9Sx+seFn7utPSy3xlrnkI80HVH0hs2d1KzW+l/Cvb7L413mZXsu9
1+mhefSUmNNZBnBU5tIJWn/MiPCU97J4yrIMrwqtGF4VcnhV0pW2XR/FfcBk
MObr09gIiCz3qKLrAddv6t16wd7w7W1n0bmj4SDz89E9Xur/gwV9PAWMD0DV
YIpMWZE1TpMS+EHXe22hk7Q/Z9nDYZxzAIbc4HXcoqP0uk8jvOMOFu/4CJmn
KWue9/84Ba3Y5grW99ccOmXhBtfftV2i69WThPeqwuK9BlwQCHyUrwf7Z6ZA
9Z0QuJkjqE7zFifW6LgfOugHofHdR98stYQrgq+fZVLjTwifN4jF5+UacDsw
WkELzl/i/RrRFAxav2Sj6X7q0XW1CQq9npCytWH1j4ojOOqgzheaz1h8svSZ
h50PCJ39dnPKL384+1ouXJ+OD+G9rmTxXu9F3Xtbb+sNVXPkunRM3MHk9ttr
9PNrqvXpjfNlI+hpWrb53J1kFC11vEjrLzXKvx0wPO6IEofc0pueJ8Dp7tgv
Y6h1aS4tm6y31hLU3FN2Sxhsh8fuf+povO6GOWu2LRjQXR3RPPRgnsuK/+Wj
vSMME+9cscc5Ur8PZs+KhthDPZteU9eR1TYsfmOmjSVcu2Tv8QSi/S+woN/7
yRI+qQCLTxrPXAcUmOsg5zq1Lurvbw9ZYbeHvXnqSm28cyOrjeazqxP+6UgW
/zTdir+g794B7BJcpXHschJ4hReVJ/z6N//02uFpuwPMvXFFX+d+NQkvHHBr
nEzr0BZ+2y3eLbAXd83Qrvb8HQsHemeciKPmc/RH0mnZ1YdxeWaoiZu3OxZP
MB51nN6HhFd7lcWrra07c0dlvAfubwpr+breD4yiRQToftmV8ChTWTxKDXJf
fKz7UtONTy9764oFiRentNw1wQuHPUVpnks3sz/RmdmfyNmfuVu7W/dOsYPB
lTqWrnVxMHPqRFlzaj5PuC9yy1LzOTCrpN+NzxlNwgtf0/VzL+E/TmbxH6MS
Oh+cLNOFc4/61ScZhENGz5sj6tT4lW9H8r5/sscXDxaVFPq7YuV9gy10va1H
eKDbWDxQn12fwueuscTcNxXHNMJt4EWw8X2a9zFpt+WY+7N88Omqe0dm1YTj
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
bUvZtZYoPvlDMF5n9jv1dfr4Lk20PvpS1smPemif9sBxfN2RIrhAL0lcoJ+r
tktoCqpByDO+ll31dpCZEzqMryPWlVEtz7aKI+lb/Px1bD7AOXXeyw73AxVy
s+cldNE4jx7VGwdzdEjSzQivS58xTmRJK7RANgUBDmsD7dCqMx5/z7FwUh2+
wJxsirrFpROS2iOQcdBbBvz8czHB4REmcXgWJnWEn1lZoED+rVmX2xKQV6y6
qAlmn7bNbgwdUVroq9LG+/FbzUBF+LsLXl8VL/pGR9NrhtT35uW+veaG1q1z
PYjzDUIJrpEJiWukTfCCVEi8oEMN00/ycvTBV2+lMZWaLjDmrImbwMYt7Wkj
bv62BV3TLYEevCYQIre1Bq/j0RJcIA8SF6iX4AJ5kLhA4UX71d8ft4ZuYWG2
9o+2IK6hZ4D74TMEN8mIxE2SenN3DVv/deDQ6KX5KHgF7dT8/hrff1QST2PT
fWYPPMPXz9l/4wXOgvBV+P6+OcFZmidxlrrmhs5ImVqCZ8A+fft31mDtHnUA
9+ffz0ZFebmbgn4B8+1CNnlUoZhEg58/2VnHfELnsgfUbkvS1jjPjn5e4hrD
9xl/OA7JjYq4gICwjdXbNxqoqayt7BFuH4LjVEbiOHn7yfD3yjkCt4yd24S6
Mzx2LWCKwMaPS32NGjpkBPOu9R2fq52g5la1ThU23vkP7lNu+EbtozE20CUd
XL9x3hFuh3PX4vtH6vf20v/WUoIF+R5NZiVL1B64dwY/txPO+bnt+LAaOEk8
9+0zdkIdW2r78XMFy/yoMRI/Kibc3M4qXx0km3YajfMHIj8FsU34fgcHwVOa
IPGUjHJvSKQqW4OpdUb4Ph17EBQx48S5THmcaodq/VxBuERKofmFC7itSdF2
xMZPaXmc9qdyg46+te1yr5zAul6GDj+3oDhUo7y5Qh6575DveXMwFElu0VTt
xp77M4JbpUbiVjEbFazVdjKDIp6xkd+vDSCSaX8TXg9/Q3CcrpE4TpzW6tjf
LUHKf9H/1U/yCM6VIolz9V0qp23+lDti6VtNO/PWE5LM8n7j/hCYfru5sLrA
k3SpK49WWIB5pe9IHjZeLzNe9EdDFTKV+u8ciwmA7gOeavi+5wGCf1VG4l81
1JqvabZ2BUvh41S7tsvAg6N3XuLvP7v/i1bxiw5Qqn1mZreiJjztpd6M71tF
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
GSovvsPsIHL85tv9dkEQVnCc1ft7AXRqP1yP8xuLCX5vGonfy8zJkbMnxhzt
21I47ttyF0Vapjkz4zq2BM+2ksSzfXPicftr12CkPxghMuYUCMIHYzS58POZ
BC+3m8TLVYjmOMuSk49O6RiGhQbFohsXr+cXYn6pPDi49femVMStWmDSpByB
fspY2ohhfjuS4OLGkri4x6UoXNwiEhd3z+TQppECCzRubtAunZICJj5zzDSY
HSQJLvE0iUssI1Amp3I5BR3q3Fbr8w2LU7hfIPx8HQvBH+4j8YeXecUqJF6x
VKJFjE1BAZov82nVdw9Dn0Mbvk5h30s5MjDsjWcQovvAe4ztnD9kD6eH3Mbs
40lwjGlJHGOubPq+KxYpaNAyKPPM3jhUceTSHyXs/fk25za5Oewe8j/82shb
1xWxVdOXF2P2ZO2SeGlYkIoWHD71z82GoXG7IXr2n//HQ/Yg8ZAZCe5xDol7
/IX/55Z1VKFILGP7qgcGkSDZcjCRHn/uNEzhCpsjkYpnUbP2GkWY3KzeLoTN
35UvTHb/iwhkuftJ5pEuWbDh+xIsiY1bVe05/sg+EiWOivu6u91HkenKcxxf
pqDLvKLRrd0f+TYvBZYthqM4/56PBf8f3vJeEm/5qkvUgeuvAhFr6+dIzkMB
KHDmlsot7Pqrpleb7NFJQXdtNM7SC3shaZOmPR3Y57WE5T5+84tA9fW0Cl8z
pcB9x9F1itjnW+3zII7dB1lIZGxkqbJCiYdvReCcQPZ1Nj0FC46os1/Q8ZWD
GVoXbKeJ7xfMJVLN0jm6ogX6z6oHA2+AXbVWKV5/E6XEUQiC/sZRsBxHnaTE
1QhR4mq0HFebEVxoLoILHUhwoXtcqm42r7gJZXyZoRXUQkht8go9nkeXPXB4
paJnA400Rv1xBV6wOFnPq4vXN/ysJPUrvSC6zqLaeMgakhzuX9TD/STXzic/
unSQ+/EHUX+C7kDN45QGvE/zHMGXDiHxpUWepOgom16C315j5+rLvZCTSHMU
3m/eRHCkQ0kc6eC3Aqthrz1qtV7XnQDuYLeSbyueRydO/pDvC49Bwt3up3+s
cUdUeruTcA7V+39wp1u+U7jTGSTudInSby6pDBtg47dk0Bx3RzsPaaXh+33B
G77Wm+uZobEL+ruZYx2hfPTKFG7/o03PWP+E+KPIDzuU5RXMgWf9l0V8f+EA
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
mKpO
       "]], {
     Axes -> True, 
      AxesLabel -> {
       "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
        "\!\(\*SubscriptBox[\(q\), \(y\)]\)", None}, BoxRatios -> {1, 1, 0.4},
       ImageSize -> {380, 380}, Method -> {"RotationControl" -> "Globe"}, 
      PlotRange -> {{-2.709857394019914, 
       2.709857394019914}, {-1.7138642998702553`, 1.7138642998702553`}, {
       3.2430770048339585`*^-9, 0.36968304463012935`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`freqTab$$ = 2, $CellContext`k1$$ = 
    0.1, $CellContext`k2$$ = 0.1, $CellContext`k3$$ = 0.1, $CellContext`k4$$ =
     0.1, $CellContext`k5$$ = 
    0.1, $CellContext`kArray$$ = {{1, 1, {-1, 0}} -> 0.1, {1, 1, {0, -1}} -> 
     0.1, {1, 1, {-1, -1}} -> 0.1, {1, 1, {-1, 1}} -> 0.1, {1, 1, {1, 0}} -> 
     0.1, {1, 1, {0, 1}} -> 0.1, {1, 1, {1, 1}} -> 0.1, {1, 1, {1, -1}} -> 
     0.1, {1, 2, {-1, 0}} -> 0.1, {1, 2, {0, -1}} -> 0.1, {1, 2, {-1, -1}} -> 
     0.1, {1, 2, {-1, 1}} -> 0.1, {1, 2, {1, 0}} -> 0.1, {1, 2, {0, 1}} -> 
     0.1, {1, 2, {1, 1}} -> 0.1, {1, 2, {1, -1}} -> 0.1, {1, 2, {0, 0}} -> 
     0.1, {2, 1, {-1, 0}} -> 0.1, {2, 1, {0, -1}} -> 0.1, {2, 1, {-1, -1}} -> 
     0.1, {2, 1, {-1, 1}} -> 0.1, {2, 1, {1, 0}} -> 0.1, {2, 1, {0, 1}} -> 
     0.1, {2, 1, {1, 1}} -> 0.1, {2, 1, {1, -1}} -> 0.1, {2, 2, {-1, 0}} -> 
     0.1, {2, 2, {0, -1}} -> 0.1, {2, 2, {-1, -1}} -> 0.1, {2, 2, {-1, 1}} -> 
     0.1, {2, 2, {1, 0}} -> 0.1, {2, 2, {0, 1}} -> 0.1, {2, 2, {1, 1}} -> 
     0.1, {2, 2, {1, -1}} -> 0.1, {1, 3, {-1, 0}} -> 0.1, {1, 3, {0, -1}} -> 
     0.1, {1, 3, {-1, -1}} -> 0.1, {1, 3, {-1, 1}} -> 0.1, {1, 3, {1, 0}} -> 
     0.1, {1, 3, {0, 1}} -> 0.1, {1, 3, {1, 1}} -> 0.1, {1, 3, {1, -1}} -> 
     0.1, {1, 3, {0, 0}} -> 0.1, {2, 3, {-1, 0}} -> 0.1, {2, 3, {0, -1}} -> 
     0.1, {2, 3, {-1, -1}} -> 0.1, {2, 3, {-1, 1}} -> 0.1, {2, 3, {1, 0}} -> 
     0.1, {2, 3, {0, 1}} -> 0.1, {2, 3, {1, 1}} -> 0.1, {2, 3, {1, -1}} -> 
     0.1, {2, 3, {0, 0}} -> 0.1, {3, 1, {-1, 0}} -> 0.1, {3, 1, {0, -1}} -> 
     0.1, {3, 1, {-1, -1}} -> 0.1, {3, 1, {-1, 1}} -> 0.1, {3, 1, {1, 0}} -> 
     0.1, {3, 1, {0, 1}} -> 0.1, {3, 1, {1, 1}} -> 0.1, {3, 1, {1, -1}} -> 
     0.1, {3, 2, {-1, 0}} -> 0.1, {3, 2, {0, -1}} -> 0.1, {3, 2, {-1, -1}} -> 
     0.1, {3, 2, {-1, 1}} -> 0.1, {3, 2, {1, 0}} -> 0.1, {3, 2, {0, 1}} -> 
     0.1, {3, 2, {1, 1}} -> 0.1, {3, 2, {1, -1}} -> 0.1, {3, 3, {-1, 0}} -> 
     0.1, {3, 3, {0, -1}} -> 0.1, {3, 3, {-1, -1}} -> 0.1, {3, 3, {-1, 1}} -> 
     0.1, {3, 3, {1, 0}} -> 0.1, {3, 3, {0, 1}} -> 0.1, {3, 3, {1, 1}} -> 
     0.1, {3, 3, {1, -1}} -> 0.1}, $CellContext`kDefaults$$ = {0.1, 0.1, 0.1, 
    0.1, 0.1}, $CellContext`kMax$$ = 0.2, $CellContext`kMin$$ = 
    0.02, $CellContext`lastNumMasses$$ = 3, $CellContext`ld$$ = {
    "latticeBasis" -> {{0.1, 1.3}, {1.9, 0.8}}, 
     "latticeNorms" -> {1.3038404810405297`, 2.06155281280883}, 
     "latticeUnitVectors" -> {{0.07669649888473705, 0.9970544855015816}, {
      0.9216353751380655, 0.3880570000581329}}, 
     "numberLatticeLinesToDisplay" -> {30, 4}, 
     "reciprocalBasis" -> {{-0.33472803347280333`, 0.7949790794979079}, {
      0.5439330543933054, -0.04184100418410042}}, 
     "reciprocalNorms" -> {0.8625743986647825, 0.5455399502261631}, 
     "qMaxVec" -> {5.419714788039828, 3.4277285997405107`}, 
     "mObliqueComponents" -> {{0.2552301255230125, 0.4602510460251046}, {
      0.8200836820083681, 0.1673640167364017}, {0.6778242677824267, 
      0.6485355648535565}}, 
     "mPosFirstCell" -> {{0.9, 0.7}, {0.4, 1.2}, {1.3, 1.4}}, 
     "pointsDataTable" -> CompressedData["
1:eJxdnUtsXEd2htsSJdESLVMUJbGpF0mR1Fsi2Xy/urop77jKTtvJDCdZJYA3
2Q2XWXgRBHkMM0kwi8DIcgBuJsAA7EU2zigveKXVGDBAwICBsSHDI8WOHLnP
953JvQSE6+6+99TrVNVfdb5bnvzBn/zBjwYajcbJN/+23vx7+82/E2/+7fX/
bvUa3//1nvQWWt//3ewdfP/39ElcD670+l+/2In7GsO9Z9//fbDT+/f+fzR6
fTOzO72/79//0VHY62Lvm3bY6/Z+3b9/qIS9DvYul7DXiXRat3p/9/39zSeR
zrMb8f3hDr9fiXR3d3pL/c/vRvrH3d5bYTDs7nd7v+wn/C9HYa/b+7e+vW/b
Ya/T+9v+7++UsNcJO3uXS9gr5O9WpPv+Dr/fiHwN7ZC/y/H9h93ej/v/cb73
3fd/7W7vj/qfXx/1k3lueX/5q7DX6f0wfm+HPT+fj/Q/LNovYa9Q31Ncu73X
/R+uk6+u+SedLu33DtdO7z+i/EdRj53en0f9tMNewd537bBTevNRvyXsFeu/
LPavbexORblnu72f9j9fx5+yfaM9n3bI9xD+VHph55uj/vcflN5fhf+0w57l
b5R+u+63yd+7pd/uh9th9+BK6dfz8Rbln6L9O/jf9chns0N+L+FPBX8ZinR2
C/ZeRX6etXn+43aUw/K+Ff7b2ia94RLtvkV5x0rY2aS+psLuc8tzDX+yPi9F
vQwV/Pkc/t3unejbe3kU5d/u/WU4Urtfb4dbvR/10z0R6R9vYn+4/Kxf3k3y
N1b67b67Qf6mSLfw+7Ve//6DNs+P4ifb+PNZ6mkbf/76KNptq/c//fb4TbTX
3ib1dZLyb/D5QvSvZ+vYH4v2bKzjD5P093b0m++uUn7rdzTS39+i/t8Ovznc
JJ9fHUX5N/DXT9thbwN7J+nf6zx/AX9aox6a4c+Hq/w+Sb628OerlN/2HcVv
N7lvkHra4PsXMd4crNM+x/SvNco/QH9aI38X8KdV/K+JP61Q/kn82fq9iv9u
kN+Lkf7xOvkbpD7Xsfdl+PPuGvd/Fv68b3lPRfqHpjeCPy1jbzzas7lMfU1y
3aA845R/ne8vkq71e4Z6WsXeFzE/NFaZDz6P8bhl+qdj/Ntbxv5IiXwu8fs4
/rSIvUnKv0Z9j4c/N63vkfCT3VXyeRp/WiFfn4c/Hy7THr8Nfz5eMv+U388X
8adFnh/Hn1p8nqD8q9hr8n3WL/60wn2n8Jtl+uFn4c97S/jfl+HPB4vYO0P5
W7Y//alF/q4yPi/w+wT9aQV7Tcpv+47Qn5bI5wD1uUh9HTN/LuJ/L8Kfd1vU
72D48/6C/QN/mqd8V/GnOco/wX3L2GuS7yX7J+navgPYsXyfMj4vkP5XjM+W
923607zjB/1pDnvXqJ/H2JugPy06PlF+07tAf/LzSepzgXb8JPx53/S+Rl/M
4Y9nQ988e+z4Sv4eOf4yXj4gfxOUv8XzY/iF5R1m3JvnvhPkw/p+zvhseV+2
4/5H5P9czJ+th84/MV8c3Kf9r5WYd+5h7yblX8D/1F+Wdxh/muP+t5gnHveW
+/Y/Por0H+J/r2L+aj3A3jnSv+f8jD/fJX/XY37fu536NPI5h70rlN/yDlMv
j1KfRvoPUp9G+vdTn0a+71K/Q6R/B3uX8Z9Zync95tNn06lP477H2LtC+tbv
u+TjPvc16O/3yD/69OAO9r7Fn2+r30h/JvVp2EO3N27gz1OpT6O+HqQ+jfze
S30a99/l/tdHUf+3zV8jyj/r78zv03w+T/mnUp+GvUnTx79vmj/Sv4s/Xyb9
O6lPo/yzqU8j/Rnrh/Qtb6OoG6hf0p9IfYrfUO83YnxqjKc+jftv43+XSH8m
9WncP536NNKf4vmP2o7zUf5G+RH1/h36NNK/6vqp2G+oF8aD0dSnkf409i/h
z7dSn0b6k6lPf0a/VJ/G79dSn0a+m6lPw47rgjHqb8T+zf3vpj6N+6awf4n0
rd9zpHPd8eUo0hl3/GE+v0L6J6j/Uep3mPSHU58uYJfxj/oZSH1KO6Y+ZV5J
ffpjxknGX9Y3l7D3Cf1pxPGb8fYdx3fKfyb1Ke3q/EB+vzpSn6LT8OdR0r+c
+jSeu5j61HEpvkefvrkvvh8g/ZPYvcB4+IpyNMnvZ9TzBPX5i18dVOphFP+7
mPOW+rSBH1X16Snq6xj/ec28OlDUjdQb+fs41rFv9OkJ6jU+Z/201aeME/jz
RdIfzKvzhOn8mHajnMwPn5LeqWK/C7sjlP8L2nWc8ehb+2WxHNGO49Yz/nyR
ddY31O8Z2ulz2ve3Rz9nXEYftq2nuJ4m/ZekN1L0c/oB+UEXNSbtX/6e7fCM
fhjpPad9T1Nvz9voY/L5ol0td4Nx5kwxX/gd6Q9Z/qJfxe+T1M9oUZ/+BeNs
+PMI+ySf076n8Cf2cd74oX5L+1EvZynvIPPVML9fzCvjIumzz7I3yfg0js5v
4s9ft1kf6S+2q37EuHt8FPPdeer5Bf48wv2DpH/JcYjvx0jvKulf47PtdbOo
T/+u4ocX7E9Fv3IcoX/jz6PZL9ynYHworhu8L9J3nlIP6seT2J2iPcdIf5j8
Xch1CeOb41GJ/ZLfHLmuZHxsq/Oq7TaRfmE9MP5i9xb3mY9pfh/Dny/xvfpr
zH6Bfr1a/gY/D/+0vC/b9pNI5xzlnyraje+nsX+NfM5kvUQ6t3OetR+Gfww7
X1Gut1yHlEeMa/HcJOm+ws8tL/uVrZn0o8jHrDqD9O9wneK5e6R3JedZ9IHr
+qI+jftvFfa/GPemKf83zKez3D/E9Tbp2I/uFssZ39/PemR9UdSn5pP9PdKf
5rmGeqgwLjD+3CZdx9k7pKc+vVf0uzDzgOsN0n/I87brY+pRXTJDe52nvWYp
12vSv4O9n2/Gc3f9nfHnPp/Pc9/DHGfC3iN+Jz/NuWK9xzAyx+/sVx7ctnz0
r7vk91vmhXvln6N+SN/yNrg+wj/epfyPKfcVPs9h7wb1Np/9LK4LRX3KeqGw
f+56gvZUnz4s/xT+Q396rH+xX2F5GZeb88VxKda7pn+T9fsC+aIf7Leoj0uu
p8jfOddb9h/0+1xh/Ye/zBXH8bjO5zwR1wXyN0Y9md5NxsdFnrvl/k9Rn0b9
P8af0ZH7c4x/v4t5dne+/GOMP9G/m5aPeft4QV1K+VvFcSzsLZI/xsndJddh
kc/mcur6uG8efz5Le807/tK/FyjXJ/hPy/Gb6yLXC6S7lPNWXJf4fYJ6Wi72
47C3wnXU/QrnH/bDW+T3q9Adxy32BT5l/8Lysl+5v5Q6Iuwtu87An0xvAn9a
yXE77K0W9Sn7Ofiz+6e25wv6+1L548gY/rycui6ulneEfK2U6v7pKuWdIB9r
fO84t87v7p8ukr8z7ActMd+jg/eX0eWfsf9leqco/2pRd4S9VdIZZ395jfqe
YL9wneenqc+Noj6N/C7jz2fQ9cvlf9GnYWel/Gf/qk4zffdP11znUf51fh8n
XxtcnYc2uE5TL5vkd4T+tII/n8afVov6NKp9DXtfhD8fr6U+jfpcT30a9jZS
B4W9zdSnYW8LezP0zy3KNeJ+Mu1zivlirUQ8z3WS9fsl86flVZdvpi4Ne5v4
81W+30p9GvW2nTogru1S0afNderD/dP18oeR8fDnw43Up1H+zdSnUX7LO4o/
bZfq/ul26rKw13ZfKJ4rJfUp8QjGv5P402Z5HP0b/b7FOuErxuct0nub63bq
07i2yR/6tFlSn4Y/l6JuiPyW1KfEa/Dnk8ZzytfoU+I97PN9TfzG8p3FXpv8
Uj9PC79fi/R7hfxNxfezndSJ/ec+6KQ+jfu28ecT+NN26tOoZ8v7Ev8pNX1a
Up/GfaZ3jXx1Up/G9x3um+W5Lv7Ffu5um/Z7Kz4PldSn/fvft35ftfvj0HPL
y35l6aQ+7af/YYd02K8c6qY+DXtd8jcb49rzburTaI+CP7NfeVjKB337HxEP
6KQ+jfa0/EO0l+Vlv3K3W9w/DXtd/Bl92txxnxV/2kl9Gt2mlG8jg0fEk8uf
9Z//F3iDTu4DEI92nyfS/6Cb+jTsdckfevDpTurTsLfD87P405PUp/F9p/yg
//k1ekd7/7oZ6XTx59fsv5u+69Qd8nuZdCz/DXTBE+zd4vsn5G+W556kPo3+
3y3wDaEHP+ymPo348g72GrT/TlWfPt9JfRp3mR769MMnqU/D3nvYu4299/Cv
6cjPvvzIBHrDz83kOeL5EeLv8iQDyXMYfwp73Yw/hRl5kkHGQ3mD0ejnu/Ik
08Tf5TcmkueI34nPDe24/5Y8R7TDgPXbW2H8DHsd9km+ivHhfXkS1vdD8iSj
yXNE/qZJ1/TdR+5m/Cme6+Y+Xrh9p+c+YdRjp3eyb++T5Dl+yPgZdgqfz9Iu
8gfu+7R7xhHoH/AVN+F55EnYb+h1Mv50EP0v40/0zx76OnkO9Hebbk18/lzy
HC3GzxgPtinXLebPDvtgxBH2bd8x5lvrdzh5DvcVGb8y/hQ6qZ3xp2hXeRLj
YfIkl+i38iTEHUqnykc9L1U+6n3bFz5qSF6nkTxHhY/a3874U+R/K/koeQ7H
zyivPAl81IHteSN5jrheSZ5DPor5LfkoeQ75KHkO+Sh5DvmosLeR8acYf+QN
bK92xp8i/t6uxp925UnOJ88hHyXPEfZ++St5DvkoeQ75KHkO7CfPIR+FfqHf
GAeyPS8nz+H4Kc9h/EmeQz5KnkM+Sp5DPirsyTvIR8lXwGvtbmX8KfKb7cv8
upHxJ3kO40/yHPJR8hxRfvYb9leTjwp/ki9wfb9c5aMamxl/inzLkxjvsX2H
kueo8lGrNT7K8spHyTu4vpc3kI+Sp4BHOlzP+JM8B+MD/d3P8lHyJC/pTys9
9Bv9yfK6vl9KPirmD3mSseQ5wh482548iXzUao2PWqnxUZZXPmqZ9pCPsrzG
nxZz31iew/W9PEeVj1qt8VGmJx+13DOuJM9R5aMWa3zUYo2PkieRj1qo8VHz
NT5qucZH2b7yUfIkub6vxZ9aNT5KvkE+Sp7E9at8g+t7eRL5qKUaH7VY46Na
2JOPatX4KPkR+SjLKx9leiOMf4+xx/q+JV9hXFqeRD5KfsT9D+tXPmoee/JR
8zU+Sp7kNOuYR8lHxe8Pc9877MsbyEct1Pgo61s+Sp5EPmou+Sh5DuJjbXkO
8s/8+SDjEPIcru8jXni3xkfN1/iorN/kOYxTRvqPko+S55CPkudg/4b079b4
qDvJR4W92RofNZd8VOTX9h1JnkN9GunfT30qz6E+rfIcg6QvX+F6eib5qLB3
q8ZHPUo+Ku5/kHwU+8/cN5A8R5QPfXpwu8ZHWd633QdLfeq8GffJR02mPo36
up/6VJ6D8St5DsY32mkWe58kz8H4mDxHfD5L+SdTn8pzxO/Gn+QNJkj/TvJR
8hzx/HDyHFU+ajr5KHmOsPcyeY5I55zrsNSn+E3yUfHcWOrTSH82+Sh5jsi/
+w23Up/Kc1Tj6jdTnzrvsL9O+s3ko4wLUC+5T6c+ZZ+8xkdZXuNzE6lPo72u
pz5lnzD1KevCGh/lPrc8kvXO+v7NPB33y0dNJh8lzxH5f5dyXeW+Rq475KNo
hxofNZJ8lDxHPHeZfacz2LuRPMce7Uo7pj6V51CfynPE/caf5Bj8k195nTxH
fHZ9fzL1aeTzFfuSxsM+O1KfotOSj5LnoHzZz9Snkf5Q8lGOk2SMfXPz/S7j
4Zd8Vp9+fOT6/lt0ygF+wD528lGUq8ZHDVb1afIc8PtvdJDxJ3kO9peS54j0
ruBPXzDP3cw4o/qUcSL5KMc962Gpko9XR/IclLMtzxHpvcV6WJ5juDgO0K8z
LmTc1n3aZ/iNfmr8KdI3bnGOfvScdnp5JM9R5aNekP6JYrsZf4rv3ccfS56D
8S/jMIyPjM/HxAVGe/v4hfUW38uxyEd9Q3nlowYy/sRzGX8yTsf4X+M55AZ4
T+WNPo16+bQtHxXXr2nvt5PnYH6ingb1k7b9yHwZV7HcrtMZFzMuFs9N1HgO
+ajX7Wr86ZTtqh9l/GmxUm75KOdJuRf2yRpyJsmvJM8Rn22viaI+dZ+9ykfp
h4Opo6p8lPuEn7XVwQeVclzLetJP4qoeNM5jPOxWjY8aqcWfrN8zyXOg/47U
LfJRjiP6bdgzPfl9OY3xjAt6X+RjpsZHXcl5zbgV9p2vMv7EfIY9+aipjD8Z
N16kXuP7meSj3FeN7+Ve7iQfRT8r8lEHjAvUf/Icxp/iObmLL/F7yzuY++72
o8jH7eSjwp58wyTP3U8+ynY0/hT3GWdwXJxOPiqem8n4U6RzO8c1eY54jv3K
PfmVq3z/IP1InkN9GvffqvFRM/Zf+V7u/zR5DvmouMqvqE/vZ/wp7DzkKh/1
KONP8hyMT6Q/m/GnsGv9Gg+7m3xUPHcv+ai4PqjxUaYnH/U4+Sh5Dv0uvjfe
z37lwZ2MP0X6pmf86X7Gn+J7y/syeQ7ml+Q5jD/Jczz7/+NA8hxTyXOoT1kv
JR8V6T9IPkqew/hTpC+/8Sp5jvh+KHmOSvxpbyH5qLjKU0zx3GLyUawnM/4U
9yW/4no0+ago/3zGn6L88hvun8qTwKcfypNcZ39DnmQqeQ71aWR3rsZHzeMv
3+Ev84X9weQ5jD9F+5neO8lzVPmoJa43kucw/hTPyZPAR+3PZ/xJniPS4f3S
Zgt7P9+Mbt9KPiraf7HKR+0v5bwtzxG/M281V7AnHyXfcRl/kSfx/VJ5km/x
38WMP0X5La981HLGn+Q5qnzUSo2PWq3xUWu5DmI/K/koeQ75qCj/UpWP2pcn
kY+yvPJRqzU+yvTlo+RJ5KPkSdw/XUo+Kp5bZnx8RX9aqfFR8iTyUaupu9iP
JH/yUaYnH7VR46M2ko+K/C4nH9XP1k9WanzUao2PWksdHO0vTyIfJU8iHyVf
IR8l3yAftVXjo1ZrfNRqjY9aq/FR66lP47pR46NMTz5KnkQ+Sr5CPmq7xket
0T7yUes1Pmq9xkdZXvmozdSn8hxVPmo79ak8R+RPPqpd46PWa3zURo2P2qzx
UVs1PsryqpvlSdw/bVf1aVOeAp2yX1KfEo/BX+SjNmt81Fb5h/5n+SjTk49q
pz6V54j8jSfPoa6R55CPkudQnxKvSj6KeFb5Bn0qz/Hf/evn6GXTP027FMZr
68fy8z5nQ35B/ke+YZrnOqlPo/zbNT6qnfo04sHyGqxz3y9Vffq8pD6NUdL0
xpPniPvR1UNd7M0kzxH+xX7us3byUbG/W1KfynOoT2M/2PKyX7kvT3IxeQ75
qLDXTX0qzxH5m+H9853Up8SDk4/q3/+iJB8lz6E+jfa3/LxPMGt5R5PncB0S
9uRJJpPnkI8KezupTyOfneSj5DmqfFQ3+Sh5Dtdtka9u6tOwJ1+hHpQnUb8/
qfJRe09Sn8ITVPmo0k0+Sp5DPip4Hst3NnmOCh/13N/ho4o8yVTyHBU+aui9
Kh+1300+Ktq/m/o0/NvyvuQ8gp3Up9Hfn1T5qH3TU58+SX0a9uRJ4KMO33Pd
yPgnP+I+8BOu7t/t4PdDNb6C8yWedfP9PdqzGj9tdDN+ij/k+3v4S8ZP8Sf3
X3v4m/wA/t0ljjCUfIXvdeHPvQf95z/W38kf8//TDvsmw/h3cX+5yFdQf+gf
+RnOlziUH+F8id1uz33Z6HYdxk3jpx3iy+xTJV9xgvlJ3oD393aL++/4TZv2
mOoxHmX8lPGK/PG+3IfaP9tjvPO9H/ia0nNfEv4tz5dgPM3zJeDnqudL7G/z
eRK/6GT8lPE891kZ7zN+Kl/B+pT9oJL7WrG/Z3kHiudlhL9cIN61nfHT0A3y
BsTjZvUv9r178iO83/i0kO9B2ktehvhpU97i2Pm2Gj/d38rzJeQrIj3m/2N5
jknWV/oT+1NNeZqL7C96Honv72333FeOfG4Rf/+sLV/B/FPkK9g/YRzzfI4m
+9OeH0Fc5FA+aTzSP7Y+LxK/3O753ma0/xbt+MWRfIXvsclXRHlPF/mKqC/m
/6bndfD+3u4a7UF77Xkeie+5bpE/51vPWyF+2pAncR96g/GF8yX21vEn96fW
fD8Rf5I3UI/4mfhpcyvjp5Hfzdy3j/JvZPw0yu95IJwvcex5IJwv0bS88sjy
HPLaKxk/9byM+N04kvxIEzueN8P5Ei3reyD5CvyX/cRV/dv1UPV8icaK77cW
+Qr6T5GvCHvET/f1pybll1+Bjz6WHxlIvsI4hXxFpP+V68Xq+RKHS77/y/pI
ngJ+vCnfMYFdeZ0x+pPlvUA/Wkm+L9pfnsL4qTzL1235CsbPIl8R9pn/D1q5
bxn25Ck4X+JYfkSezvNQ5JGTn8GfljKuEfVpeX/Xlq/gPe4iX8H6k/4kb4Ae
Sb7CeOVyxk8jv0v4CedLNJYyfhrllyf5+Ei+Iuy9astXRHl9X8705LXnM37q
eRnxmfMldj2P5Ar+JB80jD95/kkj+Qr0BeOzfMc3jM/zGT8Ne3PG12i/x/me
YuRX3sD4qf7k/l2r53v77LdhDz76YL5XfY95LuOncdtj8vsOOu+R8Ufmc8/n
cP9O3uEG5bc9LzM+ex7IecZneZLXMT/sej6H50s8zvipfAXPF/kK7Bf5ivj9
BvPFHfziBumYvnpQfuQd+tdj6tPzJR7le8/yFdRfW74i/NfzJe4avy5VvkJe
ezb1KfvRGT+N9B+lPo1aeJj6lP3u2vkSd1Ofxn2eR+J71bOpT+P7Gf3XfanU
p3Hfw+T74n7Pmxmi3jx/Rb7vjv3LeEHG7eI+eQ7jVtOpT+P7qYyTyFeoT6O+
7qc+jfzeTX0a93k+x++O5CuMn1b5ihOkf8vxq8hXqE+J42LvZsZNf1y5yut4
TsVs6tPI50xVnx54HonxU89VM34qT2K88nrq0/h93PnBfc8q3/fM+h2tcuzu
T8mVZvxUXudT+G/HjYEipxfPGTceky+qvUdpHG0k9WnYvZXnSxAHSn3qvBL3
vUAPXkt9Kl8R+RpA//ner+dLXEx96jhr3PRnlDvsX03dEVfjp5Z3MLm7+P3L
I/kK46fWq/tTxHuT7/PcFfVp2DmVcTfGrSP1aaR7LfVplH8s9anrQvQf++O+
x/Z5W+4kvj9N+oPqS/eFU5/u4Ye0e/IV+hXvlSTfp47HfnJJ6lM51rD3Rdv3
HqI8Z9in9ryMi+W/eI56Ls4z8ftk+SHtHvbGU3dVyz2U+lTuUH0qp+7+lNwo
7VvUIbR/ka8gvp77SJGe+y+NWvx00PVRcmL4Z567iP8eyVfg323njbhfLuRz
yut+kOdlGD+VGzC+LF/RTK6H/kn6cqADzOMfHRk/dR1q/BR/kEPKOAJ+Xqw3
9Sn+lvtT+j3756TveyUXcp+C9XeuG1ifU0/O4+bjVC1+qg6T77uA7rhWy6dx
8ys5Tv2Ufhv1PJyc3B7t5riLHxxZD2HP+OmwXFqNA7hkXCvjp+6Tx+9T6JHf
c3/GjexH9hP7KbqjzEW95Tk6xk+r7w0OJecT9Xop9zXhn4rnZcR9U8V+f8C4
1qJc7F/lPk1cPV9iVO7qyDib8VPGDe43nus5Ep5/ZhzF720nr8blruS6Gv3U
04761LiI50vs4QdyX8zXcn25z2w7hb1bRX1qnMD4aeTD8zJ+f+5VPO/5Z1fx
v9f0b88j+cWm47zckHFrnmd8Nj25HM+v8Dy225lP+Qry73sXtMc7qQN+zThg
v/wF40w853kk7lfKc7hfKb/ifqW8gfHluxk/la+gXdx3sf171XpUn04zznu+
hPXbUA+Xaj+T52C/8tk9/EF9+iDjp+jxjJ8aN+T9rJ77+PG750vczvipfIXj
nudl0D9dT9h/SfdhLX76uBo/3Z1zfCB9eRLPKZMP+h3jzV3nJfSy55GcKPIV
VX36KPt92Jsr6lP5ikr89GDe8RP9LB90lvHmHv7n+ycP8pwu1pNyqa43q/HT
fdPzfRj5EeOD8hTET4/lD0ZZ39zP+Gmk8xB//go9+Ij2+tT3GbDn+x7yI74P
Y/qef2Z66q8W5ZlOvoJxDh7zEf48yPxqeeH7DufQoce+71GNn+5aXvcH5Tnc
P/Uz+v1QvsP46VKeLxH5navGT1vzxOO+PIp2n8d/nOcWMn4adlo5T8fV8srT
yXOo35dzXAx78hbwfYfzVU56f6GoT/u377boN5wv0ZQfOe1+V/J9YW8p+b6w
5/kcjCu7Kxk/DXurPk9/snynmT9avM/M+RIHi8kJx31LnttHubJ8pGt68n2e
RyK/5vkccodrGT+N9l/M+Gm0/xLxL86XOF6Sq/Z9M+x5Hq48h+cFy4+4P7hW
ndeO1yjPTPIV+B/9e6l2LuKyOhudtlI9X6Jh/cr3WV73B9eS72M/OuOn7Fdn
/DSe2+R3dPzxcsZP+350uILegfP+yWrGT6P91zJ+Gu2/nrov7Fle3vc49HwQ
9HvyFXCbu1uOX/Sn1aI+DTtrcu2sU+RZ5JBN3/ejTU/9vpl8X9iTp/D8M3kL
56Vtx3f60xrtw7pidx1+jXVLcwN/fsl5KRupT6P88ivGT00PnbQrP+L5CfIU
nJt13E59Gs+t5/kSUY8bBV2P/tr03EnGZ8srd76d+lS+Iu5Tf5meukGeQc61
pD6N/G7Sv3kv43gTnu4jeK0t4mZw6vvbycHLV0S+LhsPTH1KvLCqT5/Ld8zG
c6WT+jS+34IfUZ9ulz/tP8/5Eo025+14/lk79Snx0OT7Iv/yHp43Js8wRXt2
UrfJV0T9nWd83oaPeE181vL+YpNipD6Vr+D5SP+FPA3vnzzVPjq3J+8B3zfb
TQ66yle8g94o5aMoP3qwpD6N5yyv73t0avpUfsX9StOT7+umPpWviPtu53kZ
0e/g+z4s8BrE94c68IYfeR4D/oI+fW552a8s3dSn/eQ/NH3019AO9cW65v2d
1PXyFerT6N+d8tfRf/DfTtmM/uV5FalPoz3lR3jf49jyEk/f3Ul9GvZ2Up+G
vSc8j+7ef5L6NNq/gz+jT5924R+fR3/qyZPw/4+YlVchvv+B/MgY/iTvgR58
Ks/BuqQn33Ibe54Hcpb9gi7+7L7VTurTuG8n9WnYlSfxXE3Tc50sP6LekR+R
73uP++Xc3yv/B3CLMXs=
      "], "lineTable" -> {{
        Line[{{-10.6, -42.2}, {-4.6, 35.8}}], 
        Line[{{-8.7, -41.4}, {-2.6999999999999993`, 36.6}}], 
        Line[{{-6.8, -40.6}, {-0.7999999999999998, 37.4}}], 
        Line[{{-4.9, -39.8}, {1.1, 38.2}}], 
        Line[{{-3., -39.}, {3., 39.}}], 
        Line[{{-1.1, -38.2}, {4.9, 39.8}}], 
        Line[{{0.7999999999999998, -37.4}, {6.8, 40.6}}], 
        Line[{{2.6999999999999993`, -36.6}, {8.7, 41.4}}], 
        Line[{{4.6, -35.8}, {10.6, 42.2}}]}, {
        Line[{{-10.6, -42.2}, {4.6, -35.8}}], 
        Line[{{-10.5, -40.900000000000006`}, {4.699999999999999, -34.5}}], 
        Line[{{-10.4, -39.6}, {4.799999999999999, -33.199999999999996`}}], 
        Line[{{-10.3, -38.300000000000004`}, {
         4.8999999999999995`, -31.900000000000002`}}], 
        Line[{{-10.2, -37.00000000000001}, {5., -30.600000000000005`}}], 
        Line[{{-10.1, -35.7}, {5.1, -29.3}}], 
        Line[{{-10., -34.400000000000006`}, {
         5.199999999999999, -28.000000000000004`}}], 
        Line[{{-9.9, -33.1}, {5.299999999999999, -26.700000000000003`}}], 
        Line[{{-9.8, -31.8}, {5.3999999999999995`, -25.400000000000002`}}], 
        Line[{{-9.7, -30.5}, {5.5, -24.1}}], 
        Line[{{-9.6, -29.2}, {5.6, -22.8}}], 
        Line[{{-9.5, -27.9}, {5.699999999999999, -21.5}}], 
        Line[{{-9.4, -26.6}, {5.8, -20.200000000000003`}}], 
        Line[{{-9.3, -25.3}, {5.8999999999999995`, -18.900000000000002`}}], 
        Line[{{-9.2, -24.}, {6., -17.6}}], 
        Line[{{-9.1, -22.7}, {6.1, -16.3}}], 
        Line[{{-9., -21.4}, {6.199999999999999, -15.}}], 
        Line[{{-8.9, -20.1}, {6.3, -13.700000000000003`}}], 
        Line[{{-8.8, -18.8}, {6.3999999999999995`, -12.400000000000002`}}], 
        Line[{{-8.7, -17.5}, {6.5, -11.100000000000001`}}], 
        Line[{{-8.6, -16.2}, {6.6, -9.8}}], 
        Line[{{-8.5, -14.900000000000002`}, {6.699999999999999, -8.5}}], 
        Line[{{-8.4, -13.600000000000001`}, {6.8, -7.2}}], 
        Line[{{-8.299999999999999, -12.3}, {
         6.8999999999999995`, -5.8999999999999995`}}], 
        Line[{{-8.2, -11.}, {7., -4.6000000000000005`}}], 
        Line[{{-8.1, -9.7}, {7.1, -3.3}}], 
        Line[{{-8., -8.4}, {7.199999999999999, -2.}}], 
        Line[{{-7.8999999999999995`, -7.1000000000000005`}, {
         7.3, -0.7000000000000002}}], 
        Line[{{-7.8, -5.800000000000001}, {7.3999999999999995`, 
         0.6000000000000001}}], 
        Line[{{-7.699999999999999, -4.5}, {7.5, 1.9000000000000001`}}], 
        Line[{{-7.6, -3.2}, {7.6, 3.2}}], 
        Line[{{-7.5, -1.9000000000000001`}, {7.699999999999999, 4.5}}], 
        Line[{{-7.3999999999999995`, -0.6000000000000001}, {7.8, 
         5.800000000000001}}], 
        Line[{{-7.3, 0.7000000000000002}, {7.8999999999999995`, 
         7.1000000000000005`}}], 
        Line[{{-7.199999999999999, 2.}, {8., 8.4}}], 
        Line[{{-7.1, 3.3}, {8.1, 9.7}}], 
        Line[{{-7., 4.6000000000000005`}, {8.2, 11.}}], 
        Line[{{-6.8999999999999995`, 5.8999999999999995`}, {8.299999999999999,
          12.3}}], 
        Line[{{-6.8, 7.2}, {8.4, 13.600000000000001`}}], 
        Line[{{-6.699999999999999, 8.5}, {8.5, 14.900000000000002`}}], 
        Line[{{-6.6, 9.8}, {8.6, 16.2}}], 
        Line[{{-6.5, 11.100000000000001`}, {8.7, 17.5}}], 
        Line[{{-6.3999999999999995`, 12.400000000000002`}, {8.8, 18.8}}], 
        Line[{{-6.3, 13.700000000000003`}, {8.9, 20.1}}], 
        Line[{{-6.199999999999999, 15.}, {9., 21.4}}], 
        Line[{{-6.1, 16.3}, {9.1, 22.7}}], 
        Line[{{-6., 17.6}, {9.2, 24.}}], 
        Line[{{-5.8999999999999995`, 18.900000000000002`}, {9.3, 25.3}}], 
        Line[{{-5.8, 20.200000000000003`}, {9.4, 26.6}}], 
        Line[{{-5.699999999999999, 21.5}, {9.5, 27.9}}], 
        Line[{{-5.6, 22.8}, {9.6, 29.2}}], 
        Line[{{-5.5, 24.1}, {9.7, 30.5}}], 
        Line[{{-5.3999999999999995`, 25.400000000000002`}, {9.8, 31.8}}], 
        Line[{{-5.299999999999999, 26.700000000000003`}, {9.9, 33.1}}], 
        Line[{{-5.199999999999999, 28.000000000000004`}, {10., 
         34.400000000000006`}}], 
        Line[{{-5.1, 29.3}, {10.1, 35.7}}], 
        Line[{{-5., 30.600000000000005`}, {10.2, 37.00000000000001}}], 
        Line[{{-4.8999999999999995`, 31.900000000000002`}, {10.3, 
         38.300000000000004`}}], 
        Line[{{-4.799999999999999, 33.199999999999996`}, {10.4, 39.6}}], 
        Line[{{-4.699999999999999, 34.5}, {10.5, 40.900000000000006`}}], 
        Line[{{-4.6, 35.8}, {10.6, 42.2}}]}}}, $CellContext`locDefault$$ = {{
    0.1, 1.3}, {1.9, 0.8}}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
    1, $CellContext`matrix$$ = 
    ReplaceAll[$CellContext`res$99581, $CellContext`qVec -> #]& , \
$CellContext`meshSize$$ = 8, $CellContext`minAngleBetweenLatticeVectors$$ = 
    Rational[1, 6] Pi, $CellContext`minSquaredDistanceFromOrigin$$ = 
    0.1, $CellContext`mLocDefault$$ = {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
    1.4}}, $CellContext`mMax$$ = 50, $CellContext`moSel$$ = 
    2, $CellContext`mScalarArray$$ = {20, 20, 20}, $CellContext`nArray$$ = {{
    1, 0}, {0, 1}, {1, 1}, {1, -1}}, $CellContext`omegaIndex$$ = 
    1, $CellContext`parametersTab$$ = 3, $CellContext`primaryDisplaySize$$ = {
    380, 380}, $CellContext`qLoc$$ = {2.709857394019914, 
    1.7138642998702553`}, $CellContext`qPlaneLoc$$ = {{-2.709857394019914, \
-1.7138642998702553`}, {2.709857394019914, 
    1.7138642998702553`}}, $CellContext`scale$$ = 
    0.4, $CellContext`springColors$$ = {
     RGBColor[
      Rational[2, 3], 0.33333333333333337`, 0], 
     RGBColor[0, 
      Rational[2, 3], 0], 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
     RGBColor[0, 
      Rational[2, 3], 
      Rational[2, 3]], 
     RGBColor[
      Rational[2, 3], 
      Rational[2, 3], 0]}, $CellContext`springColorsByN$$ = {{-1, 0} -> 
     RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, -1} -> RGBColor[0, 
       Rational[2, 3], 0], {-1, -1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {-1, 1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]], {0, 0} -> RGBColor[
       Rational[2, 3], 
       Rational[2, 3], 0], {1, 0} -> RGBColor[
       Rational[2, 3], 0.33333333333333337`, 0], {0, 1} -> RGBColor[0, 
       Rational[2, 3], 0], {1, 1} -> 
     RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], {1, -1} -> 
     RGBColor[0, 
       Rational[2, 3], 
       Rational[2, 3]]}, $CellContext`tabNumber$$ = 3, $CellContext`tau$$ = 
    0, $CellContext`textDisOffset$$ = {0.25, 0.25}, $CellContext`tick$$ = 
    False, $CellContext`u$$ = {{0.1, 1.3}, {1.9, 0.8}, {0.9, 0.7}, {0.4, 
    1.2}, {1.3, 1.4}}, $CellContext`windowHalfWidth$$ = 3, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        If[$CellContext`lastNumMasses$$ == 1, 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; \
$CellContext`dynamicsControls], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Row[$CellContext`tabNumber$$ = $CellContext`freqTab$$; \
$CellContext`freqControls], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; \
{$CellContext`massSetter, $CellContext`m2Setter, $CellContext`km1, \
$CellContext`km2, $CellContext`km3, $CellContext`km4}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}], 
         TabView[{
          "dynamics" -> 
           Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; \
$CellContext`dynamicsControls], 
           "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
           Row[$CellContext`tabNumber$$ = $CellContext`freqTab$$; \
$CellContext`freqControls], "parameters" -> 
           Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
               "mp: ", 
                ReplaceAll[
                "mPosFirstCell", $CellContext`ld$$]}, \
$CellContext`massSetter, $CellContext`m2Setter, $CellContext`km1, \
$CellContext`km2, $CellContext`km3, $CellContext`km4, $CellContext`km5}]}, 
          Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`qPlaneLoc$$], {}}, 0}, {{
       Hold[$CellContext`qLoc$$], {}}, 0}, {{
       Hold[$CellContext`tau$$], 0}, 0}, {{
       Hold[$CellContext`omegaIndex$$], 1}, 0}, {{
       Hold[$CellContext`scale$$], 0.4}, 0}, {{
       Hold[$CellContext`meshSize$$], 8}, 0}, {{
       Hold[$CellContext`matrix$$], {}}, 0}, {{
       Hold[$CellContext`dynamics$$], {}}, 0}, {{
       Hold[$CellContext`dynPlot$$], {}}, 0}, {{
       Hold[$CellContext`freqPlot$$], {}}, 0}, {{
       Hold[$CellContext`bRefreshMatrix$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynamics$$], False}, 0}, {{
       Hold[$CellContext`bRefreshDynPlot$$], False}, 0}, {{
       Hold[$CellContext`bRefreshFreqPlot$$], False}, 0}, {{
       Hold[$CellContext`tabNumber$$], 1}, 0}, {{
       Hold[$CellContext`dynTab$$], 1}, 0}, {{
       Hold[$CellContext`freqTab$$], 2}, 0}, {{
       Hold[$CellContext`parametersTab$$], 3}, 0}, {{
       Hold[$CellContext`minSquaredDistanceFromOrigin$$], 0.1}, 0}, {{
       Hold[$CellContext`minAngleBetweenLatticeVectors$$], Rational[1, 6] Pi},
       0}, {{
       Hold[$CellContext`locDefault$$], {{0.1, 1.3}, {1.9, 0.8}}}, 0}, {{
       Hold[$CellContext`defaultMass$$], 20}, 0}, {{
       Hold[$CellContext`lastNumMasses$$], 3}, 0}, {{
       Hold[$CellContext`mLocDefault$$], {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
       1.4}}}, 0}, {{
       Hold[$CellContext`mScalarArray$$], {20, 20, 20}}, 0}, {{
       Hold[$CellContext`moSel$$], 2}, 0}, {{
       Hold[$CellContext`m1Sel$$], 1}, 0}, {{
       Hold[$CellContext`m2Sel$$], 1}, 0}, {{
       Hold[$CellContext`kArray$$], {}}, 0}, {{
       Hold[$CellContext`u$$], {}}, 0}, {{
       Hold[$CellContext`ld$$], {}}, 0}, {{
       Hold[$CellContext`couplingData$$], {}}, 0}, {{
       Hold[$CellContext`springColorsByN$$], {}}, 0}, {
      Hold[$CellContext`k1$$], 0}, {
      Hold[$CellContext`k2$$], 0}, {
      Hold[$CellContext`k3$$], 0}, {
      Hold[$CellContext`k4$$], 0}, {
      Hold[$CellContext`k5$$], 0}, {{
       Hold[$CellContext`kDefaults$$], {0.1, 0.1, 0.1, 0.1, 0.1}}, 0}, {{
       Hold[$CellContext`kMin$$], 0.02}, 0}, {{
       Hold[$CellContext`kMax$$], 0.2}, 0}, {{
       Hold[$CellContext`mMax$$], 50}, 0}, {{
       Hold[$CellContext`windowHalfWidth$$], 3}, 0}, {{
       Hold[$CellContext`springColors$$], {
        RGBColor[
         Rational[2, 3], 0.33333333333333337`, 0], 
        RGBColor[0, 
         Rational[2, 3], 0], 
        RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
        RGBColor[0, 
         Rational[2, 3], 
         Rational[2, 3]], 
        RGBColor[
         Rational[2, 3], 
         Rational[2, 3], 0]}}, 0}, {{
       Hold[$CellContext`primaryDisplaySize$$], {380, 380}}, 0}, {{
       Hold[$CellContext`textDisOffset$$], {0.25, 0.25}}, 0}, {{
       Hold[$CellContext`nArray$$], {{1, 0}, {0, 1}, {1, 1}, {1, -1}}}, 0}}, 
    Typeset`size$$ = {515., {254., 261.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bRefreshDynamics$$ = 
        False, $CellContext`bRefreshDynPlot$$ = 
        False, $CellContext`bRefreshFreqPlot$$ = 
        False, $CellContext`bRefreshMatrix$$ = 
        False, $CellContext`couplingData$$ = {}, $CellContext`defaultMass$$ = 
        20, $CellContext`dynamics$$ = {}, $CellContext`dynPlot$$ = {}, \
$CellContext`dynTab$$ = 
        1, $CellContext`freqPlot$$ = {}, $CellContext`freqTab$$ = 
        2, $CellContext`k1$$ = 0, $CellContext`k2$$ = 0, $CellContext`k3$$ = 
        0, $CellContext`k4$$ = 0, $CellContext`k5$$ = 
        0, $CellContext`kArray$$ = {}, $CellContext`kDefaults$$ = {0.1, 0.1, 
         0.1, 0.1, 0.1}, $CellContext`kMax$$ = 0.2, $CellContext`kMin$$ = 
        0.02, $CellContext`lastNumMasses$$ = 
        3, $CellContext`ld$$ = {}, $CellContext`locDefault$$ = {{0.1, 1.3}, {
         1.9, 0.8}}, $CellContext`m1Sel$$ = 1, $CellContext`m2Sel$$ = 
        1, $CellContext`matrix$$ = {}, $CellContext`meshSize$$ = 
        8, $CellContext`minAngleBetweenLatticeVectors$$ = 
        Rational[1, 6] Pi, $CellContext`minSquaredDistanceFromOrigin$$ = 
        0.1, $CellContext`mLocDefault$$ = {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
         1.4}}, $CellContext`mMax$$ = 50, $CellContext`moSel$$ = 
        2, $CellContext`mScalarArray$$ = {20, 20, 
         20}, $CellContext`nArray$$ = {{1, 0}, {0, 1}, {1, 1}, {
         1, -1}}, $CellContext`omegaIndex$$ = 1, $CellContext`parametersTab$$ = 
        3, $CellContext`primaryDisplaySize$$ = {380, 
         380}, $CellContext`qLoc$$ = {}, $CellContext`qPlaneLoc$$ = {}, \
$CellContext`scale$$ = 0.4, $CellContext`springColors$$ = {
          RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0], 
          RGBColor[0, 
           Rational[2, 3], 0], 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
          RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], 
          RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 
           0]}, $CellContext`springColorsByN$$ = {}, $CellContext`tabNumber$$ = 
        1, $CellContext`tau$$ = 
        0, $CellContext`textDisOffset$$ = {0.25, 0.25}, $CellContext`tick$$ = 
        False, $CellContext`u$$ = {}, $CellContext`windowHalfWidth$$ = 3}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`tick$$; Dynamic[
         If[$CellContext`tabNumber$$ == $CellContext`dynTab$$, 
          If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix; $CellContext`bRefreshMatrix$$ = 
             False; $CellContext`bRefreshDynamics$$ = 
             True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynamics$$, $CellContext`dynamics$$ = \
$CellContext`calcDynamics; $CellContext`bRefreshDynamics$$ = 
             False; $CellContext`bRefreshDynPlot$$ = True, Null]; 
          If[$CellContext`bRefreshDynPlot$$, $CellContext`dynPlot$$ = \
$CellContext`showDynamics; $CellContext`bRefreshDynPlot$$ = False, 
            Null]; $CellContext`showDynamics[$CellContext`tau$$], 
          
          If[$CellContext`tabNumber$$ == $CellContext`freqTab$$, 
           If[$CellContext`bRefreshMatrix$$, $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix; $CellContext`bRefreshMatrix$$ = 
              False; $CellContext`bRefreshDynamics$$ = 
              True; $CellContext`bRefreshFreqPlot$$ = True, Null]; 
           If[$CellContext`bRefreshFreqPlot$$, $CellContext`freqPlot$$ = \
$CellContext`frequencyPlotCalc; $CellContext`bRefreshFreqPlot$$ = False, 
             Null]; $CellContext`showFreqPlot, \
$CellContext`couplingLocator]]]), "Specifications" :> {
        Dynamic[
         If[$CellContext`lastNumMasses$$ == 1, 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; \
$CellContext`dynamicsControls], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Row[$CellContext`tabNumber$$ = $CellContext`freqTab$$; \
$CellContext`freqControls], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; \
{$CellContext`massSetter, $CellContext`m2Setter, $CellContext`km1, \
$CellContext`km2, $CellContext`km3, $CellContext`km4}]}, 
           Dynamic[$CellContext`tabNumber$$], ImageSize -> {250, 350}], 
          
          TabView[{
           "dynamics" -> 
            Column[$CellContext`tabNumber$$ = $CellContext`dynTab$$; \
$CellContext`dynamicsControls], 
            "\[Omega](\!\(\*OverscriptBox[\(q\), \(\[RightVector]\)]\))" -> 
            Row[$CellContext`tabNumber$$ = $CellContext`freqTab$$; \
$CellContext`freqControls], "parameters" -> 
            Grid[$CellContext`tabNumber$$ = $CellContext`parametersTab$$; {{
                "mp: ", 
                 ReplaceAll[
                 "mPosFirstCell", $CellContext`ld$$]}, \
$CellContext`massSetter, $CellContext`m2Setter, $CellContext`km1, \
$CellContext`km2, $CellContext`km3, $CellContext`km4, $CellContext`km5}]}, 
           Dynamic[$CellContext`tabNumber$$], 
           ImageSize -> {250, 350}]]], {{$CellContext`tick$$, False}, 0, 
         ControlType -> None}, {{$CellContext`qPlaneLoc$$, {}}, 0, 
         ControlType -> None}, {{$CellContext`qLoc$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`tau$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`omegaIndex$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`scale$$, 0.4}, 0, ControlType -> 
         None}, {{$CellContext`meshSize$$, 8}, 0, ControlType -> 
         None}, {{$CellContext`matrix$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`dynamics$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`dynPlot$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`freqPlot$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshMatrix$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynamics$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshDynPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshFreqPlot$$, False}, 0, ControlType -> 
         None}, {{$CellContext`tabNumber$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`dynTab$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`freqTab$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`parametersTab$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`minSquaredDistanceFromOrigin$$, 0.1}, 0, 
         ControlType -> 
         None}, {{$CellContext`minAngleBetweenLatticeVectors$$, 
          Rational[1, 6] Pi}, 0, ControlType -> 
         None}, {{$CellContext`locDefault$$, {{0.1, 1.3}, {1.9, 0.8}}}, 0, 
         ControlType -> None}, {{$CellContext`defaultMass$$, 20}, 0, 
         ControlType -> None}, {{$CellContext`lastNumMasses$$, 3}, 0, 
         ControlType -> 
         None}, {{$CellContext`mLocDefault$$, {{0.9, 0.7}, {0.4, 1.2}, {1.3, 
          1.4}}}, 0, ControlType -> 
         None}, {{$CellContext`mScalarArray$$, {20, 20, 20}}, 0, ControlType -> 
         None}, {{$CellContext`moSel$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`m1Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`m2Sel$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`kArray$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`u$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`ld$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`couplingData$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`springColorsByN$$, {}}, 0, ControlType -> 
         None}, {$CellContext`k1$$, 0, ControlType -> 
         None}, {$CellContext`k2$$, 0, ControlType -> 
         None}, {$CellContext`k3$$, 0, ControlType -> 
         None}, {$CellContext`k4$$, 0, ControlType -> 
         None}, {$CellContext`k5$$, 0, ControlType -> 
         None}, {{$CellContext`kDefaults$$, {0.1, 0.1, 0.1, 0.1, 0.1}}, 0, 
         ControlType -> None}, {{$CellContext`kMin$$, 0.02}, 0, ControlType -> 
         None}, {{$CellContext`kMax$$, 0.2}, 0, ControlType -> 
         None}, {{$CellContext`mMax$$, 50}, 0, ControlType -> 
         None}, {{$CellContext`windowHalfWidth$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`springColors$$, {
           RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], 
           RGBColor[0, 
            Rational[2, 3], 0], 
           RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
           RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], 
           RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0]}}, 0, ControlType -> 
         None}, {{$CellContext`primaryDisplaySize$$, {380, 380}}, 0, 
         ControlType -> None}, {{$CellContext`textDisOffset$$, {0.25, 0.25}}, 
         0, ControlType -> 
         None}, {{$CellContext`nArray$$, {{1, 0}, {0, 1}, {1, 1}, {1, -1}}}, 
         0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{916., {293., 300.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`u$$ = 
        Flatten[{$CellContext`locDefault$$, $CellContext`mLocDefault$$}, 
          1]; $CellContext`springColorsByN$$ = DeleteDuplicates[
          Flatten[
           Table[$CellContext`s Part[
               Append[$CellContext`nArray$$, {0, 0}], $CellContext`n] -> 
            Part[$CellContext`springColors$$, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 5}], 
           1]]; $CellContext`springPoints[
          Pattern[$CellContext`a12, 
           Blank[List]], 
          Optional[
           Pattern[$CellContext`n, 
            Blank[Integer]], 8], 
          Optional[
           Pattern[$CellContext`h, 
            Blank[]], 0.05], 
          Optional[
           Pattern[$CellContext`f, 
            Blank[]], 0.1]] := 
        Module[{$CellContext`a1, $CellContext`a2, $CellContext`n1, \
$CellContext`springDiff, $CellContext`nd, $CellContext`r, $CellContext`r1}, \
{$CellContext`a1, $CellContext`a2} = $CellContext`a12; $CellContext`n1 = 
           Norm[$CellContext`a1]; $CellContext`springDiff = $CellContext`a2 - \
$CellContext`a1; $CellContext`nd = 
           Norm[$CellContext`springDiff]; $CellContext`r = RotationMatrix[
             Apply[ArcTan, $CellContext`springDiff]]; $CellContext`r1 = 
           Dot[$CellContext`r, {$CellContext`n1, 0}]; {
            
            Table[$CellContext`a1 - $CellContext`r1 + 
             Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + $CellContext`t (1 - 
                  2 $CellContext`f) $CellContext`nd, $CellContext`h 
                Sin[2 Pi $CellContext`n $CellContext`t]}], {$CellContext`t, 0,
               1, 0.01}], 
            
            Table[$CellContext`a1 - $CellContext`r1 + 
             Dot[$CellContext`r, {$CellContext`n1 + $CellContext`nd \
$CellContext`f + (1 - 
                  2 $CellContext`f) $CellContext`nd + $CellContext`t \
$CellContext`f $CellContext`nd, 0}], {$CellContext`t, 0, 1, 0.01}], 
            Table[$CellContext`a1 - $CellContext`r1 + 
             Dot[$CellContext`r, {$CellContext`n1 + $CellContext`t \
$CellContext`f $CellContext`nd, 0}], {$CellContext`t, 0, 1, 
              0.01}]}]; $CellContext`indexLabel = Subscript[
          Style[#, Italic], #2]& ; $CellContext`kLable = Style[
          $CellContext`indexLabel["k", #], FontColor -> 
          Part[$CellContext`springColors$$, #]]& ; $CellContext`massColors := 
        Part[
          Darker[{Blue, Green, Purple, Red, Orange}], Mod[#, 5] + 
          1]& ; $CellContext`massLabel := Style[
          $CellContext`indexLabel["m", #], 
          $CellContext`massColors[#]]& ; $CellContext`calcLineTable[
          Pattern[$CellContext`n, 
           Blank[List]], 
          Pattern[$CellContext`b, 
           Blank[List]], 
          Pattern[$CellContext`i, 
           Blank[List]]] := 
        Module[{$CellContext`first, $CellContext`second}, \
{$CellContext`first, $CellContext`second} = $CellContext`i; Table[
            
            Line[{(-Part[$CellContext`n, $CellContext`first]) 
               Part[$CellContext`b, $CellContext`first] + $CellContext`j 
               Part[$CellContext`b, $CellContext`second], 
              Part[$CellContext`n, $CellContext`first] 
               Part[$CellContext`b, $CellContext`first] + $CellContext`j 
               Part[$CellContext`b, $CellContext`second]}], {$CellContext`j, -
             Part[$CellContext`n, $CellContext`second], 
             
             Part[$CellContext`n, $CellContext`second]}]]; \
$CellContext`calcReciprocalBasis[
          Pattern[$CellContext`loc, 
           Blank[List]]] := Inverse[
          Transpose[$CellContext`loc]]; $CellContext`pointsTable[
          Pattern[$CellContext`mPosFirstCell, 
           Blank[List]], 
          Pattern[$CellContext`latticeBasis, 
           Blank[List]], 
          Pattern[$CellContext`numberLatticeLinesToDisplay, 
           Blank[List]]] := 
        Table[$CellContext`mPosFirstCell + 
          Dot[{$CellContext`i, $CellContext`j}, $CellContext`latticeBasis], \
{$CellContext`i, -Part[$CellContext`numberLatticeLinesToDisplay, 1], 
           
           Part[$CellContext`numberLatticeLinesToDisplay, 
            1]}, {$CellContext`j, -
           Part[$CellContext`numberLatticeLinesToDisplay, 2], 
           
           Part[$CellContext`numberLatticeLinesToDisplay, 
            2]}]; $CellContext`nMasses := First[
           Dimensions[$CellContext`u$$]] - 2; $CellContext`adjustedmoSel := 
        If[$CellContext`lastNumMasses$$ > 2, 
          If[$CellContext`moSel$$ == $CellContext`m1Sel$$, 
           First[
            DeleteCases[
             
             Range[$CellContext`lastNumMasses$$], $CellContext`m1Sel$$]], \
$CellContext`moSel$$], 
          First[
           Delete[
            Range[
            2], $CellContext`m1Sel$$]]]; $CellContext`constructKArrayElements[
          Pattern[$CellContext`i$, 
           Blank[Integer]], 
          Pattern[$CellContext`j$, 
           Blank[Integer]]] := 
        Module[{$CellContext`a$}, $CellContext`a$ = Flatten[
             
             Table[{$CellContext`i$, $CellContext`j$, $CellContext`s 
                Part[$CellContext`nArray$$, $CellContext`n]} -> 
              Part[$CellContext`kDefaults$$, $CellContext`n], \
{$CellContext`s, -1, 1, 2}, {$CellContext`n, 4}], 1]; 
          If[$CellContext`i$ < $CellContext`j$, 
            
            Append[$CellContext`a$, {$CellContext`i$, $CellContext`j$, {0, 
               0}} -> Part[$CellContext`kDefaults$$, 
               5]], $CellContext`a$]]; $CellContext`constructKArray[
          Pattern[$CellContext`r, 
           Blank[Integer]]] := Flatten[
          Table[
           $CellContext`constructKArrayElements[$CellContext`i, \
$CellContext`j], {$CellContext`i, $CellContext`r}, {$CellContext`j, \
$CellContext`r}], 2]; $CellContext`alterKArrayElements[
          Pattern[$CellContext`ni$, 
           Blank[Integer]], 
          Pattern[$CellContext`v$, 
           Blank[]]] := 
        ReplaceAll[$CellContext`kArray$$, {({$CellContext`m1Sel$$, \
$CellContext`m2Sel$$, 
              Part[$CellContext`nArray$$, $CellContext`ni$]} -> 
            Blank[]) :> ({$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
              
              Part[$CellContext`nArray$$, $CellContext`ni$]} -> \
$CellContext`v$), ({$CellContext`m1Sel$$, $CellContext`m2Sel$$, -
              Part[$CellContext`nArray$$, $CellContext`ni$]} -> 
            Blank[]) :> ({$CellContext`m1Sel$$, $CellContext`m2Sel$$, -
              Part[$CellContext`nArray$$, $CellContext`ni$]} -> \
$CellContext`v$)}]; $CellContext`alterKarrayOriginElement[
          Pattern[$CellContext`v$, 
           Blank[]]] := 
        Module[{$CellContext`m1oSet$}, $CellContext`m1oSet$ = Append[
             Sort[{$CellContext`m1Sel$$, $CellContext`moSel$$}], {0, 0}]; 
          ReplaceAll[$CellContext`kArray$$, ($CellContext`m1oSet$ -> 
             Blank[]) :> ($CellContext`m1oSet$ -> $CellContext`v$)]]; \
$CellContext`kArraySelect[
          Pattern[$CellContext`ni$, 
           Blank[Integer]]] := 
        ReplaceAll[{$CellContext`m1Sel$$, $CellContext`m2Sel$$, 
           
           Part[$CellContext`nArray$$, $CellContext`ni$]}, \
$CellContext`kArray$$]; $CellContext`kArrayOriginSelect := ReplaceAll[
          Append[
           Sort[{$CellContext`m1Sel$$, $CellContext`moSel$$}], {0, 
           0}], $CellContext`kArray$$]; $CellContext`growKarray[
          Pattern[$CellContext`nmNew$, 
           Blank[Integer]]] := 
        Module[{$CellContext`k2$}, $CellContext`k2$ = Flatten[
             Map[$CellContext`constructKArrayElements[
               Part[#, 1], 
               Part[#, 2]]& , 
              Select[
               Flatten[
                
                Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, \
$CellContext`nmNew$}, {$CellContext`j, $CellContext`nmNew$}], 1], 
               Max[#] == $CellContext`nmNew$& ]], 2]; 
          Flatten[{$CellContext`kArray$$, $CellContext`k2$}, 
            1]]; $CellContext`resetLatticeVectorsIfAngleTooSmall[
          Pattern[$CellContext`minAngle$, 
           Blank[]]] := Module[{$CellContext`t$}, $CellContext`t$ = Abs[
             ArcCos[
              Dot[
               Normalize[
                Part[$CellContext`u$$, 1]], 
               Normalize[
                Part[$CellContext`u$$, 2]]]]]; $CellContext`t$ = 
           If[$CellContext`t$ > Pi/2, Pi - $CellContext`t$, $CellContext`t$]; 
          If[$CellContext`t$ < $CellContext`minAngle$, \
$CellContext`locDefault$$, {
             Part[$CellContext`u$$, 1], 
             Part[$CellContext`u$$, 2]}]]; $CellContext`locDependent := 
        Module[{$CellContext`m$, $CellContext`latticeBasis$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`reciprocalBasis$, \
$CellContext`mObliqueComponents$, $CellContext`mPosFirstCell$, \
$CellContext`reciprocalNorms$}, $CellContext`latticeBasis$ = 
           Take[$CellContext`u$$, 2]; $CellContext`m$ = 
           Drop[$CellContext`u$$, 
             2]; $CellContext`numberLatticeLinesToDisplay$ = Map[Ceiling[
              Abs[$CellContext`windowHalfWidth$$/Part[
                Part[$CellContext`latticeBasis$, #], #]]]& , 
             Range[
             2]]; $CellContext`reciprocalBasis$ = \
$CellContext`calcReciprocalBasis[$CellContext`latticeBasis$]; \
$CellContext`reciprocalNorms$ = Map[Norm[
              Part[$CellContext`reciprocalBasis$, #]]& , 
             Range[2]]; $CellContext`mObliqueComponents$ = Table[
             Dot[
              Part[$CellContext`m$, $CellContext`i], 
              
              Part[$CellContext`reciprocalBasis$, $CellContext`j]], \
{$CellContext`i, $CellContext`lastNumMasses$$}, {$CellContext`j, 
              2}]; $CellContext`mPosFirstCell$ = 
           Map[Part[$CellContext`m$, #] - Dot[
              Floor[
               
               Part[$CellContext`mObliqueComponents$, #]], \
$CellContext`latticeBasis$]& , 
             Range[$CellContext`lastNumMasses$$]]; {
           "latticeBasis" -> $CellContext`latticeBasis$, "latticeNorms" -> 
            Map[Norm[
               Part[$CellContext`latticeBasis$, #]]& , 
              Range[2]], "latticeUnitVectors" -> Map[Normalize[
               Part[$CellContext`latticeBasis$, #]]& , 
              Range[2]], 
            "numberLatticeLinesToDisplay" -> \
$CellContext`numberLatticeLinesToDisplay$, 
            "reciprocalBasis" -> $CellContext`reciprocalBasis$, 
            "reciprocalNorms" -> $CellContext`reciprocalNorms$, "qMaxVec" -> 
            2 Pi $CellContext`reciprocalNorms$, 
            "mObliqueComponents" -> $CellContext`mObliqueComponents$, 
            "mPosFirstCell" -> $CellContext`mPosFirstCell$, "pointsDataTable" -> 
            Map[$CellContext`pointsTable[
               
               Part[$CellContext`mPosFirstCell$, #], \
$CellContext`latticeBasis$, $CellContext`numberLatticeLinesToDisplay$]& , 
              Range[$CellContext`lastNumMasses$$]], "lineTable" -> 
            Map[$CellContext`calcLineTable[$CellContext`\
numberLatticeLinesToDisplay$, $CellContext`latticeBasis$, #]& , 
              Permutations[{1, 2}]]}]; $CellContext`projOpU[
          Pattern[$CellContext`v, 
           Blank[List]]] := {{
          Part[$CellContext`v, 1]^2, Part[$CellContext`v, 1] 
           Part[$CellContext`v, 2]}, {
          Part[$CellContext`v, 1] Part[$CellContext`v, 2], 
           Part[$CellContext`v, 2]^2}}; $CellContext`projOp[
          Pattern[$CellContext`v, 
           Blank[List]]] := $CellContext`projOpU[$CellContext`v]/
         Dot[$CellContext`v, $CellContext`v]; $CellContext`relativeDifferences[
          Pattern[$CellContext`r, 
           Blank[List]], 
          Pattern[$CellContext`mp, 
           Blank[List]], {
           Pattern[$CellContext`mIndex1, 
            Blank[Integer]], 
           Pattern[$CellContext`mIndex2, 
            Blank[Integer]], 
           Pattern[$CellContext`n, 
            Blank[List]]}] := 
        Module[{$CellContext`d, $CellContext`pOrigin, $CellContext`pOther}, \
$CellContext`pOrigin = 
           Part[$CellContext`mp, $CellContext`mIndex1]; $CellContext`pOther = 
           Part[$CellContext`mp, $CellContext`mIndex2] + 
            Dot[$CellContext`n, $CellContext`r]; $CellContext`d = \
$CellContext`pOther - $CellContext`pOrigin; $CellContext`dn = 
           Dot[$CellContext`d, $CellContext`d]; {$CellContext`dn, \
$CellContext`pOrigin, $CellContext`pOther, \
$CellContext`projOpU[$CellContext`d]/$CellContext`dn}]; \
$CellContext`calculateCouplings := 
        Module[{$CellContext`t$, $CellContext`t1$, $CellContext`t2$, \
$CellContext`r$, $CellContext`mp$}, {$CellContext`r$, $CellContext`mp$} = 
           ReplaceAll[{
             "latticeBasis", 
              "mPosFirstCell"}, $CellContext`ld$$]; $CellContext`t$ = 
           Map[Append[#, 
              $CellContext`relativeDifferences[$CellContext`r$, \
$CellContext`mp$, 
               First[#]]]& , 
             
             ReplaceAll[$CellContext`kArray$$, Rule -> 
              List]]; $CellContext`t$ = Map[Flatten[{
               Part[#, 1], {
                Part[#, 2]}, 
               Part[#, 3]}, 1]& , $CellContext`t$]; $CellContext`t1$ = Table[
             Sort[
              
              Select[$CellContext`t$, And[
               Part[#, 1] == $CellContext`i, Part[#, 3] != {0, 0}]& ], 
              Part[#, 5] < 
              Part[#2, 
                5]& ], {$CellContext`i, $CellContext`lastNumMasses$$}]; \
$CellContext`t2$ = 
           Select[$CellContext`t$, Part[#, 3] == {0, 0}& ]; $CellContext`t2$ = 
           Flatten[{$CellContext`t2$, 
              Map[Flatten[{{
                  Part[#, 2], 
                  Part[#, 1]}, 
                 Drop[#, 2]}, 1]& , $CellContext`t2$]}, 1]; $CellContext`t2$ = 
           Table[
             Sort[
              Select[$CellContext`t2$, Part[#, 1] == $CellContext`i& ], 
              Part[#, 5] < 
              Part[#2, 
                5]& ], {$CellContext`i, $CellContext`lastNumMasses$$}]; \
{$CellContext`t2$, $CellContext`t1$}]; $CellContext`plotSprings := 
        Module[{$CellContext`aLoc$, $CellContext`bLoc$, $CellContext`mLoc$, \
$CellContext`pointsList$, $CellContext`latticeBasis$, \
$CellContext`reciprocalBasis$, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$, \
$CellContext`cOrigin$, $CellContext`cN$, $CellContext`g$}, \
$CellContext`latticeBasis$ = Take[$CellContext`u$$, 2]; $CellContext`aLoc$ = 
           Part[$CellContext`u$$, 1]; $CellContext`bLoc$ = 
           Part[$CellContext`u$$, 
             2]; {$CellContext`mLoc$, $CellContext`reciprocalBasis$, \
$CellContext`pointsDataTable$, $CellContext`numberLatticeLinesToDisplay$, \
$CellContext`lines$} = 
           ReplaceAll[{
             "mPosFirstCell", "reciprocalBasis", "pointsDataTable", 
              "numberLatticeLinesToDisplay", 
              "lineTable"}, $CellContext`ld$$]; $CellContext`pointsList$[
             Pattern[$CellContext`n$, 
              Blank[Integer]]] := {
             $CellContext`massColors[$CellContext`n$], Null, 
             PointSize[
              
              Sqrt[(Part[$CellContext`mScalarArray$$, \
$CellContext`n$]/$CellContext`mMax$$)/500]], 
             Map[Point[#]& , 
              Part[$CellContext`pointsDataTable$, $CellContext`n$]], 
             Text[
              $CellContext`massLabel[$CellContext`n$], 
              Part[$CellContext`mLoc$, $CellContext`n$] + \
$CellContext`textDisOffset$$]}; $CellContext`cOrigin$ = Select[
             Part[
              Part[$CellContext`couplingData$$, 1], $CellContext`m1Sel$$], 
             Take[#, 2] == {$CellContext`m1Sel$$, $CellContext`moSel$$}& ]; \
$CellContext`cN$ = Select[
             Part[
              Part[$CellContext`couplingData$$, 2], $CellContext`m1Sel$$], 
             Take[#, 2] == {$CellContext`m1Sel$$, $CellContext`m2Sel$$}& ]; \
$CellContext`g$ = Map[ListLinePlot[
              $CellContext`springPoints[
               Take[#, {6, 7}]], AspectRatio -> Automatic, PlotStyle -> 
              ReplaceAll[
                
                Part[#, 
                 3], $CellContext`springColorsByN$$]]& , $CellContext`cN$]; 
          If[$CellContext`lastNumMasses$$ > 1, 
            AppendTo[$CellContext`g$, 
             Map[ListLinePlot[
               $CellContext`springPoints[
                Take[#, {6, 7}]], AspectRatio -> Automatic, PlotStyle -> 
               ReplaceAll[
                 
                 Part[#, 
                  
                  3], $CellContext`springColorsByN$$]]& , \
$CellContext`cOrigin$]], Null]; Show[{
             Graphics[
              Flatten[{{$CellContext`lines$, Blue, 
                 Map[Arrow[{{0, 0}, 
                    Part[$CellContext`reciprocalBasis$, #]}]& , 
                  Range[2]], Thick, 
                 Arrowheads[0.05], Red, 
                 Map[Arrow[{{0, 0}, 
                    Part[$CellContext`latticeBasis$, #]}]& , 
                  Range[2]], 
                 Text[
                  OverVector[
                  "a"], $CellContext`aLoc$/2 + $CellContext`textDisOffset$$], 
                 Text[
                  OverVector[
                  "b"], $CellContext`bLoc$/2 + $CellContext`textDisOffset$$]}, 
                Map[$CellContext`pointsList$[#]& , 
                 Range[$CellContext`lastNumMasses$$]]}], 
              PlotRange -> {{(-$CellContext`windowHalfWidth$$)/
                 2, $CellContext`windowHalfWidth$$}, \
{(-$CellContext`windowHalfWidth$$)/2, $CellContext`windowHalfWidth$$}}, 
              ImageSize -> $CellContext`primaryDisplaySize$$], \
$CellContext`g$}]]; $CellContext`couplingLocator := LocatorPane[
          Dynamic[$CellContext`u$$, ($CellContext`u$$ = If[First[
                Dimensions[#]] < 3, 
              
              Flatten[{$CellContext`locDefault$$, $CellContext`mLocDefault$$},
                1], 
              If[First[
                 Dimensions[#]] > 7, 
               
               Take[#, 
                7], #]]; {$CellContext`mScalarArray$$, $CellContext`kArray$$} = 
            If[$CellContext`nMasses > $CellContext`lastNumMasses$$, {
               
               Append[$CellContext`mScalarArray$$, \
$CellContext`defaultMass$$], 
               $CellContext`growKarray[$CellContext`nMasses]}, {
               Take[$CellContext`mScalarArray$$, $CellContext`nMasses], 
               Select[$CellContext`kArray$$, Max[{
                   Part[#, 1], 
                   Part[#, 2]}] <= $CellContext`nMasses& ]}]; 
           Part[$CellContext`u$$, 1] = If[Dot[
                Part[$CellContext`u$$, 1], 
                
                Part[$CellContext`u$$, 
                 1]] < $CellContext`minSquaredDistanceFromOrigin$$, 
              Part[$CellContext`locDefault$$, 1], 
              Part[$CellContext`u$$, 1]]; Part[$CellContext`u$$, 2] = If[Dot[
                Part[$CellContext`u$$, 2], 
                
                Part[$CellContext`u$$, 
                 2]] < $CellContext`minSquaredDistanceFromOrigin$$, 
              Part[$CellContext`locDefault$$, 2], 
              Part[$CellContext`u$$, 2]]; {
              Part[$CellContext`u$$, 1], 
              
              Part[$CellContext`u$$, 
               2]} = $CellContext`resetLatticeVectorsIfAngleTooSmall[$\
CellContext`minAngleBetweenLatticeVectors$$]; $CellContext`lastNumMasses$$ = \
$CellContext`nMasses; $CellContext`m1Sel$$ = 
            If[$CellContext`m1Sel$$ > $CellContext`lastNumMasses$$, 
              1, $CellContext`m1Sel$$]; $CellContext`m2Sel$$ = 
            If[$CellContext`m2Sel$$ > $CellContext`lastNumMasses$$, 
              1, $CellContext`m2Sel$$]; $CellContext`moSel$$ = 
            If[$CellContext`moSel$$ > $CellContext`lastNumMasses$$, 
              1, $CellContext`moSel$$]; $CellContext`moSel$$ = \
$CellContext`adjustedmoSel; $CellContext`k1$$ = $CellContext`kArraySelect[
             1]; $CellContext`k2$$ = $CellContext`kArraySelect[
             2]; $CellContext`k3$$ = $CellContext`kArraySelect[
             3]; $CellContext`k4$$ = $CellContext`kArraySelect[
             4]; $CellContext`k5$$ = $CellContext`kArrayOriginSelect; \
$CellContext`ld$$ = $CellContext`locDependent; $CellContext`qLoc$$ = 
            ReplaceAll["qMaxVec", $CellContext`ld$$]/
             2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`bRefreshMatrix$$ = 
            True; $CellContext`tick$$ = 
            Not[$CellContext`tick$$])& ], $CellContext`plotSprings, 
          LocatorAutoCreate -> True, ContinuousAction -> 
          False]; $CellContext`massSetter := {
          Row[{
            Text["mass: "], 
            Dynamic[
             If[$CellContext`lastNumMasses$$ > 1, 
              SetterBar[
               
               Dynamic[$CellContext`m1Sel$$, ($CellContext`m1Sel$$ = #; \
$CellContext`massValue = 
                 Part[$CellContext`mScalarArray$$, $CellContext`m1Sel$$]; \
$CellContext`k1$$ = $CellContext`kArraySelect[
                  1]; $CellContext`k2$$ = $CellContext`kArraySelect[
                  2]; $CellContext`k3$$ = $CellContext`kArraySelect[
                  3]; $CellContext`k4$$ = $CellContext`kArraySelect[
                  4]; $CellContext`moSel$$ = $CellContext`adjustedmoSel; \
$CellContext`k5$$ = $CellContext`kArrayOriginSelect; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                Range[$CellContext`lastNumMasses$$]]], 
              $CellContext`massLabel[1]]]}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`massValue, ($CellContext`massValue = #; 
              Part[$CellContext`mScalarArray$$, $CellContext`m1Sel$$] = \
$CellContext`massValue; $CellContext`bRefreshMatrix$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
             0.25, 
              Dynamic[$CellContext`mMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             NumberForm[
              Part[$CellContext`mScalarArray$$, $CellContext`m1Sel$$], {2, 
              1}]]}]}; $CellContext`m2Setter := {
          Text["coupling to neighbouring: "], 
          Dynamic[
           If[$CellContext`lastNumMasses$$ > 1, 
            SetterBar[
             
             Dynamic[$CellContext`m2Sel$$, ($CellContext`m2Sel$$ = #; \
$CellContext`k1$$ = $CellContext`kArraySelect[
                1]; $CellContext`k2$$ = $CellContext`kArraySelect[
                2]; $CellContext`k3$$ = $CellContext`kArraySelect[
                3]; $CellContext`k4$$ = $CellContext`kArraySelect[
                4]; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> $CellContext`massLabel[#]& , 
              Range[$CellContext`lastNumMasses$$]]], 
            $CellContext`massLabel[1]]]}; $CellContext`km1 := {
          Row[{
            Text["horizontal: "], 
            $CellContext`kLable[1], " || ", 
            OverVector["a"], " "}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`k1$$, ($CellContext`k1$$ = #; \
$CellContext`kArray$$ = $CellContext`alterKArrayElements[
                1, $CellContext`k1$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`bRefreshMatrix$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
              Dynamic[$CellContext`kMin$$], 
              Dynamic[$CellContext`kMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             NumberForm[$CellContext`k1$$, {3, 2}]]}]}; $CellContext`km2 := {
          Row[{
            Text["vertical: "], 
            $CellContext`kLable[2], " || ", 
            OverVector["b"], " "}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`k2$$, ($CellContext`k2$$ = #; \
$CellContext`kArray$$ = $CellContext`alterKArrayElements[
                2, $CellContext`k2$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`bRefreshMatrix$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
              Dynamic[$CellContext`kMin$$], 
              Dynamic[$CellContext`kMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             NumberForm[$CellContext`k2$$, {3, 2}]]}]}; $CellContext`km3 := {
          Row[{
            Text["diagonal: "], 
            $CellContext`kLable[3], " || (", 
            OverVector["b"], " + ", 
            OverVector["a"], ") "}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`k3$$, ($CellContext`k3$$ = #; \
$CellContext`kArray$$ = $CellContext`alterKArrayElements[
                3, $CellContext`k3$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`bRefreshMatrix$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
              Dynamic[$CellContext`kMin$$], 
              Dynamic[$CellContext`kMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             NumberForm[$CellContext`k3$$, {3, 2}]]}]}; $CellContext`km4 := {
          Row[{
            Text["diagonal: "], 
            $CellContext`kLable[4], " || (", 
            OverVector["b"], " - ", 
            OverVector["a"], ") "}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`k4$$, ($CellContext`k4$$ = #; \
$CellContext`kArray$$ = $CellContext`alterKArrayElements[
                4, $CellContext`k4$$]; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`bRefreshMatrix$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
              Dynamic[$CellContext`kMin$$], 
              Dynamic[$CellContext`kMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             NumberForm[$CellContext`k4$$, {3, 2}]]}]}; $CellContext`km5 := {
          Row[{
            Text["origin coupling from "], 
            Dynamic[
             $CellContext`massLabel[$CellContext`m1Sel$$]], 
            Text[" to "], 
            Dynamic[
             If[$CellContext`lastNumMasses$$ > 2, 
              SetterBar[
               
               Dynamic[$CellContext`moSel$$, ($CellContext`moSel$$ = #; \
$CellContext`k5$$ = $CellContext`kArrayOriginSelect; $CellContext`tick$$ = 
                 Not[$CellContext`tick$$])& ], 
               Map[# -> $CellContext`massLabel[#]& , 
                DeleteCases[
                 Range[$CellContext`lastNumMasses$$], $CellContext`m1Sel$$]]], 
              Dynamic[
               $CellContext`massLabel[
                First[
                 Delete[
                  Range[2], $CellContext`m1Sel$$]]]]]], " ", 
            $CellContext`kLable[5], ": "}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`k5$$, ($CellContext`k5$$ = #; \
$CellContext`kArray$$ = \
$CellContext`alterKarrayOriginElement[$CellContext`k5$$]; \
$CellContext`couplingData$$ = $CellContext`calculateCouplings; \
$CellContext`bRefreshMatrix$$ = True; $CellContext`tick$$ = 
               Not[$CellContext`tick$$])& ], {
              Dynamic[$CellContext`kMin$$], 
              Dynamic[$CellContext`kMax$$]}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[
             
             NumberForm[$CellContext`k5$$, {3, 
              2}]]}]}; $CellContext`freqControls := {
          Row[{
            Text["mesh size "], 
            Manipulator[
             
             Dynamic[$CellContext`meshSize$$, ($CellContext`meshSize$$ = #; \
$CellContext`bRefreshFreqPlot$$ = True; $CellContext`tick$$ = 
               Not[$CellContext`tick$$])& ], {2, 30, 2}, ImageSize -> Tiny, 
             ContinuousAction -> False, AppearanceElements -> {"InputField"}],
             " ", 
            Dynamic[$CellContext`meshSize$$]}], 
          LocatorPane[
           Dynamic[$CellContext`qPlaneLoc$$], 
           Dynamic[
            (Graphics[{
              Lighter[Gray], 
              Polygon[{{-Part[#, 1], -Part[#, 2]}, {
                 Part[#, 1], -Part[#, 2]}, {
                 Part[#, 1], 
                 Part[#, 2]}, {-Part[#, 1], 
                 Part[#, 2]}}], Black, 
              Line[$CellContext`qPlaneLoc$$]}, PlotRange -> {{-Part[#, 1], 
                 Part[#, 1]}, {-Part[#, 2], 
                 Part[#, 2]}}/2, ImageSize -> 200 (#/Max[#])]& )[
             ReplaceAll["qMaxVec", $CellContext`ld$$]]], ContinuousAction -> 
           False]}; $CellContext`dynamicsControls := {
          Row[{
            OverVector["q"], " = ", 
            Slider2D[
             
             Dynamic[$CellContext`qLoc$$, ($CellContext`qLoc$$ = #; \
$CellContext`bRefreshDynamics$$ = True; $CellContext`tick$$ = 
               Not[$CellContext`tick$$])& ], {{0.01, 0.01}, 
              ReplaceAll["qMaxVec", $CellContext`ld$$]}, ContinuousAction -> 
             False, ImageSize -> (150 (#/Max[#])& )[
               ReplaceAll["qMaxVec", $CellContext`ld$$]]], " 2 \[Pi] ", 
            Dynamic[
             NumberForm[
              MatrixForm[$CellContext`qLoc$$/(2 Pi)], {3, 2}]]}], 
          Row[{
            Text["time, normalized to one period:"]}], 
          Row[{
            Manipulator[
             
             Dynamic[$CellContext`tau$$, ($CellContext`tau$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0, 1}, ImageSize -> Tiny,
              ContinuousAction -> True, Appearance -> "Open"]}, 
           ImageSize -> {200, 60}], 
          Text[
           Text["Angular frequency \[Omega](q), selection:"]], 
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`omegaIndex$$, ($CellContext`omegaIndex$$ = #; \
$CellContext`bRefreshDynPlot$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], 
            Range[
            2 $CellContext`lastNumMasses$$]]]}; \
$CellContext`oneTermOfdynamicsMatrix[{
           Pattern[$CellContext`k$, 
            Blank[Integer]], 
           Pattern[$CellContext`j$, 
            Blank[Integer]], 
           Pattern[$CellContext`mVec$, 
            Blank[List]], 
           Pattern[$CellContext`kS$, 
            Blank[]], 
           Blank[], 
           Blank[], 
           Blank[], 
           Pattern[$CellContext`proj$, 
            Blank[List]]}, 
          Pattern[$CellContext`r$, 
           Blank[List]], 
          Pattern[$CellContext`mk$, 
           Blank[]], 
          Pattern[$CellContext`epsilon$, 
           Blank[List]]] := $CellContext`kS$ 
         Dot[$CellContext`proj$, 
           Part[$CellContext`epsilon$, $CellContext`k$]/$CellContext`mk$ - 
           Part[$CellContext`epsilon$, $CellContext`j$] (E^(I Dot[
                Dot[$CellContext`mVec$, $CellContext`r$], $CellContext`qVec])/
            Sqrt[$CellContext`mk$ 
             Part[$CellContext`mScalarArray$$, $CellContext`j$]])]; \
$CellContext`dynamicsMatrix := 
        Module[{$CellContext`cd$, $CellContext`r$, $CellContext`res$, \
$CellContext`epsilon$, $CellContext`m$}, $CellContext`cd$ = SplitBy[
             Sort[
              Flatten[$CellContext`couplingData$$, 2]], 
             First]; $CellContext`r$ = 
           ReplaceAll[
            "latticeBasis", $CellContext`ld$$]; $CellContext`epsilon$ = 
           Partition[
             IdentityMatrix[2 $CellContext`lastNumMasses$$], 
             2]; $CellContext`res$ = Partition[
             Flatten[
              Table[
               Total[
                Map[$CellContext`oneTermOfdynamicsMatrix[#, $CellContext`r$, 
                  
                  Part[$CellContext`mScalarArray$$, $CellContext`i], \
$CellContext`epsilon$]& , 
                 
                 Part[$CellContext`cd$, $CellContext`i]]], {$CellContext`i, \
$CellContext`lastNumMasses$$}]], 2 $CellContext`lastNumMasses$$]; 
          ReplaceAll[$CellContext`res$, $CellContext`qVec -> #]& ]; \
$CellContext`calcDynamics := Map[{
           Sqrt[
            Part[#, 1]], 
           Part[#, 2]}& , 
          Transpose[
           Eigensystem[
            $CellContext`matrix$$[$CellContext`qLoc$$]]]]; \
$CellContext`showDynamics := 
        Module[{$CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`e$, \
$CellContext`omega$, $CellContext`points$, $CellContext`lines$, \
$CellContext`nu$, $CellContext`a$, $CellContext`b$}, {{$CellContext`a$, \
$CellContext`b$}, $CellContext`pointsDataTable$, \
$CellContext`numberLatticeLinesToDisplay$, $CellContext`lines$} = 
           ReplaceAll[{
             "latticeBasis", "pointsDataTable", "numberLatticeLinesToDisplay",
               "lineTable"}, $CellContext`ld$$]; {$CellContext`omega$, \
$CellContext`e$} = 
           Part[$CellContext`dynamics$$, $CellContext`omegaIndex$$]; \
$CellContext`e$ = Partition[$CellContext`e$, 2]; $CellContext`points$ = 
           Table[Part[$CellContext`pointsDataTable$, $CellContext`k] + 
             Table[$CellContext`scale$$ 
               Re[Part[$CellContext`e$, $CellContext`k] 
                 E^(I (Dot[$CellContext`qLoc$$, $CellContext`a$ \
$CellContext`i + $CellContext`b$ $CellContext`j] - $CellContext`omega$ #))], \
{$CellContext`i, -Part[$CellContext`numberLatticeLinesToDisplay$, 1], 
                
                Part[$CellContext`numberLatticeLinesToDisplay$, 
                 1]}, {$CellContext`j, -
                Part[$CellContext`numberLatticeLinesToDisplay$, 2], 
                
                Part[$CellContext`numberLatticeLinesToDisplay$, 
                 2]}]& , {$CellContext`k, $CellContext`lastNumMasses$$}]; \
$CellContext`nu$ = 
           2 Pi If[$CellContext`omega$ == 0, 1, 1/$CellContext`omega$]; Show[{
             Table[
              ListPlot[
               Part[$CellContext`points$, $CellContext`k][$CellContext`nu$ #],
                PlotRange -> {{(-$CellContext`windowHalfWidth$$)/
                  2, $CellContext`windowHalfWidth$$}, \
{(-$CellContext`windowHalfWidth$$)/2, $CellContext`windowHalfWidth$$}}, 
               ImageSize -> $CellContext`primaryDisplaySize$$, PlotStyle -> 
               Directive[
                 PointSize[
                  
                  Sqrt[(Part[$CellContext`mScalarArray$$, \
$CellContext`k]/$CellContext`mMax$$)/500]], 
                 $CellContext`massColors[$CellContext`k]]], {$CellContext`k, \
$CellContext`lastNumMasses$$}], 
             
             Graphics[{$CellContext`lines$}]}]& ]; \
$CellContext`frequencyPlotCalc := 
        Module[{$CellContext`eigTable2D$, $CellContext`eigTable1D$, \
$CellContext`qMax$, $CellContext`omegaPointList2D$, \
$CellContext`omegaPointList1D$, $CellContext`range$}, $CellContext`qMax$ = 
           ReplaceAll["qMaxVec", $CellContext`ld$$]; $CellContext`eigTable2D$ = 
           Flatten[
             Re[
              Table[{{$CellContext`qx, $CellContext`qy}, 
                Eigenvalues[
                 N[
                  $CellContext`matrix$$[{$CellContext`qx, \
$CellContext`qy}]]]}, {$CellContext`qx, (-Part[$CellContext`qMax$, 1])/2, 
                Part[$CellContext`qMax$, 1]/2, 
                Part[$CellContext`qMax$, 
                  1]/$CellContext`meshSize$$}, {$CellContext`qy, (-
                 Part[$CellContext`qMax$, 2])/2, Part[$CellContext`qMax$, 2]/
                2, Part[$CellContext`qMax$, 2]/$CellContext`meshSize$$}]], 
             1]; $CellContext`omegaPointList2D$[
             Pattern[$CellContext`nn$, 
              Blank[]]] := Map[Flatten[{
               Part[#, 1], 
               Part[
                Sqrt[
                 
                 Part[#, 
                  2]], $CellContext`nn$]}]& , $CellContext`eigTable2D$]; \
$CellContext`range$ = Range[2 $CellContext`lastNumMasses$$]; ListPlot3D[
            Map[$CellContext`omegaPointList2D$[#]& , $CellContext`range$], 
            PlotRange -> Full, ImageSize -> $CellContext`primaryDisplaySize$$,
             AxesLabel -> {
             "\!\(\*SubscriptBox[\(q\), \(x\)]\)", 
              "\!\(\*SubscriptBox[\(q\), \(y\)]\)"}]]; \
$CellContext`showFreqPlot := 
        Module[{$CellContext`aa$, $CellContext`bb$}, {$CellContext`aa$, \
$CellContext`bb$} = $CellContext`qPlaneLoc$$; Show[{$CellContext`freqPlot$$, 
             Graphics3D[
              Polygon[{{
                 Part[$CellContext`aa$, 1], 
                 Part[$CellContext`aa$, 2], 0}, {
                 Part[$CellContext`bb$, 1], 
                 Part[$CellContext`bb$, 2], 0}, {
                 Part[$CellContext`bb$, 1], 
                 Part[$CellContext`bb$, 2], 1}, {
                 Part[$CellContext`aa$, 1], 
                 Part[$CellContext`aa$, 2], 
                 
                 1}}]]}]]; {$CellContext`k1$$, $CellContext`k2$$, \
$CellContext`k3$$, $CellContext`k4$$, $CellContext`k5$$} = \
$CellContext`kDefaults$$; $CellContext`ld$$ = $CellContext`locDependent; \
$CellContext`kArray$$ = $CellContext`constructKArray[1]; 
       Module[{$CellContext`n$}, $CellContext`n$ = 2; 
         While[$CellContext`n$ <= $CellContext`lastNumMasses$$, \
$CellContext`kArray$$ = $CellContext`growKarray[$CellContext`n$]; 
           Increment[$CellContext`n$]]]; $CellContext`qLoc$$ = 
        ReplaceAll["qMaxVec", $CellContext`ld$$]/
         2; $CellContext`qPlaneLoc$$ = {-$CellContext`qLoc$$, \
$CellContext`qLoc$$}; $CellContext`couplingData$$ = \
$CellContext`calculateCouplings; $CellContext`matrix$$ = \
$CellContext`dynamicsMatrix; $CellContext`dynamics$$ = \
$CellContext`calcDynamics; $CellContext`dynPlot$$ = $CellContext`showDynamics; \
$CellContext`freqPlot$$ = $CellContext`frequencyPlotCalc; Null}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6007827611987925`*^9, 3.600782765768054*^9}, {
   3.600782997316298*^9, 3.6007831095637183`*^9}, {3.600783170732217*^9, 
   3.6007831939275436`*^9}, {3.600783379903181*^9, 3.600783427002875*^9}, 
   3.60082274073805*^9, {3.6008766450292406`*^9, 3.600876645398262*^9}, 
   3.600880245233161*^9, {3.600880294190961*^9, 3.600880311991979*^9}, {
   3.6008803424207196`*^9, 3.6008803743995485`*^9}, 3.600880450269888*^9, 
   3.6008804831607695`*^9, {3.600880524416129*^9, 3.600880544696289*^9}, {
   3.6008808563701153`*^9, 3.600880903760826*^9}, 3.6008816103212395`*^9, {
   3.6008817160112844`*^9, 3.6008817506712666`*^9}, {3.6008818446426415`*^9, 
   3.6008818636937313`*^9}, {3.6008819919470673`*^9, 3.6008820083730063`*^9}, 
   3.6008824735556135`*^9, 3.600882615041706*^9, {3.600882645241433*^9, 
   3.6008826833806148`*^9}, 3.600882758981939*^9, {3.6008829132777643`*^9, 
   3.600882936909116*^9}, {3.6008830062990847`*^9, 3.6008830110633574`*^9}, 
   3.6008830651264496`*^9, 3.600883162505019*^9, 3.6008832822148657`*^9, 
   3.6008833590402603`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DynamicModule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", " ", "x", ",", "y"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"LocatorPane", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "qPlaneLoc", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "\[IndentingNewLine]", 
                  RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                    ")"}], "\[IndentingNewLine]", " ", "]"}], ",", 
                  "\[IndentingNewLine]", "Black", ",", 
                  RowBox[{"Line", "[", "qPlaneLoc", "]"}]}], "}"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                 RowBox[{"(", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", 
                  ")"}]}]}], " ", "\[IndentingNewLine]", "]"}], " ", "&"}], 
             " ", "@", " ", "q"}], " ", ",", "\[IndentingNewLine]", 
            RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      " ", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qPlaneLoc", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
       " ", "None"}], "}"}]}], "\[IndentingNewLine]", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], "]"}], " ", "//", " ", 
         "MatrixForm"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]}], "}"}], 
       "]"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], " ", "&"}], 
    " ", "@", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", " ", "\"\<b\>\""}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", "&"}], 
      ")"}], " ", "@", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", " ", 
       RowBox[{"1", "/", "3"}]}], "}"}]}], ")"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " ", "&"}], 
          ")"}], " ", "@", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "2"}], ",", " ", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ")"}], "]"}]}], "}"}], "]"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "1"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "1"], ",", 
           RowBox[{"-", 
            FractionBox["1", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "1"], ",", 
           FractionBox["1", "1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "1"]}], ",", 
           RowBox[{"-", 
            FractionBox["1", "1"]}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", "3"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", "4"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"300", " ", 
          RowBox[{"#", "/", 
           RowBox[{"Max", "[", "#", "]"}]}]}], " ", "&"}], ")"}], " ", "@", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6007780410268145`*^9, 3.6007780467821436`*^9}, {
  3.600778104745459*^9, 3.6007782554210773`*^9}, {3.6007783208318186`*^9, 
  3.60077832190588*^9}, {3.6007783582039557`*^9, 3.6007785185131254`*^9}, {
  3.600778564468754*^9, 3.600778580789687*^9}, {3.6007787579978228`*^9, 
  3.6007787889945955`*^9}, {3.600778878552718*^9, 3.6007789129676867`*^9}, {
  3.6007802054666133`*^9, 3.600780300133028*^9}, {3.6007803500108805`*^9, 
  3.60078044072707*^9}, {3.6007818252812614`*^9, 3.6007819717766404`*^9}, {
  3.600782053815333*^9, 3.6007821997946825`*^9}, {3.6008272573713865`*^9, 
  3.6008272757474375`*^9}}]
},
WindowSize->{1584, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 192259, 3973, 20617, "Input"],
Cell[192841, 3997, 318979, 5411, 615, "Output"]
}, Open  ]],
Cell[511835, 9411, 12431, 341, 855, "Input"]
}
]
*)

(* End of internal cache information *)
