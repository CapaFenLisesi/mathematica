(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    520549,       9343]
NotebookOptionsPosition[    516023,       9204]
NotebookOutlinePosition[    517640,       9254]
CellTagsIndexPosition[    517304,       9242]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Illustrating the dual basis for the tangent space of a 2D surface.\
\>", "DemoTitle",
 CellChangeTimes->{{3.602930881075926*^9, 3.6029309111826477`*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", " ", "reciprocalsForTwoDimSubspace", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reciprocalsForTwoDimSubspace", "::", "usage"}], " ", "=", " ", 
   "\"\<For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b \[CenterDot] (b \[Cross] a )/\
\[LeftBracketingBar]b \[Cross] \
a\!\(\*SuperscriptBox[\(\[RightBracketingBar]\), \(2\)]\)\n\
\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a \[CenterDot] (a \[Cross] b )/\
\[LeftBracketingBar]b \[Cross] \
a\!\(\*SuperscriptBox[\(\[RightBracketingBar]\), \(2\)]\)\n\n(We can compute \
the higher dimensional result using the similar geometric algebra expression:\
\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) = b \[CenterDot] (b \[Wedge] a )/\
\[LeftBracketingBar](b \[Wedge] a \!\(\*SuperscriptBox[\()\), \(2\)]\)\
\[RightBracketingBar]\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = a \[CenterDot] \
(a \[Wedge] b )/\[LeftBracketingBar](b \[Wedge] a \!\(\*SuperscriptBox[\()\), \
\(2\)]\)\[RightBracketingBar]\n)\n\n(This function returns the 3D result for \
a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reciprocalsForTwoDimSubspace", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "b_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "cross", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cross", " ", "=", " ", 
        RowBox[{"Cross", "[", " ", 
         RowBox[{"a", ",", " ", "b"}], " ", "]"}]}], " ", ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", " ", 
           RowBox[{"b", ",", " ", "cross"}], "]"}], ",", " ", 
          RowBox[{"Cross", "[", 
           RowBox[{"cross", ",", " ", "a"}], "]"}]}], "}"}], "/", 
        RowBox[{"(", 
         RowBox[{"cross", " ", ".", " ", "cross"}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "f", ",", "fu", ",", "fv", ",", "f1", ",", "f2", ",", "zFunc", ",", 
   "paraboloid", ",", " ", "saddle", ",", " ", "sine"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paraboloid", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "/", "#3"}], ")"}], "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], " ", "&"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saddle", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "/", "#3"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], " ", "&"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sine", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "/", "#3"}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], "]"}], " ", "&"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zFunc", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"paraboloid", ",", " ", "saddle", ",", " ", "sine"}], "}"}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", " ", "#2", ",", " ", 
       RowBox[{
        RowBox[{"zFunc", " ", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", "##", "]"}]}], "}"}], " ", 
     "&"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Replace", " ", "trick", " ", "to", " ", "evaluate", " ", "before", " ", 
    "numeric", " ", 
    RowBox[{"subst", ":", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"http", ":"}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "31071"}], "/", "10"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/31071/10"], None},
      ButtonNote->"http://mathematica.stackexchange.com/a/31071/10"]}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "n_Integer", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "n", "]"}], "[", 
        RowBox[{"t", ",", "#2", ",", "#3", ",", " ", "#4"}], "]"}], ",", 
       "t"}], "]"}], "/.", " ", 
     RowBox[{"t", " ", "\[Rule]", " ", "#1"}]}], "&"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f2", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], "[", 
         RowBox[{"#1", ",", "t", ",", "#3", ",", "#4"}], "]"}], ",", "t"}], 
       "]"}], "/.", " ", 
      RowBox[{"t", " ", "\[Rule]", " ", "#2"}]}], "&"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", 
     RowBox[{"{", 
      RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "[", 
    RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fu", "[", 
    RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"f1", "[", "n", "]"}], ")"}], "[", 
    RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fv", "[", 
     RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f2", "[", "n", "]"}], ")"}], "[", 
     RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6029310358697796`*^9, 3.602976944893062*^9, {3.6029780524644117`*^9, 
   3.602978168910072*^9}},
 CellID->267096170]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tick", ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", " ", 
      RowBox[{"bRefreshPlot", ",", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"fn", ",", " ", "av", ",", "bv", ",", 
              RowBox[{"{", 
               RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              RowBox[{"-", "av"}], ",", "av"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"v", ",", " ", 
              RowBox[{"-", "bv"}], ",", "bv"}], "}"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{"bRefreshPlot", " ", "=", " ", "False"}]}], " ", ")"}], 
       "\[IndentingNewLine]", ","}], " ", "]"}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", " ", 
      RowBox[{"bRefreshPointDependent", ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fp", ",", " ", "fup", ",", " ", "fvp"}], "}"}], " ", "=", 
          " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", "p"}], "]"}], 
            ",", 
            RowBox[{"fu", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", "p"}], "]"}], 
            ",", 
            RowBox[{"fv", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", " ", "p"}], 
             "]"}]}], "}"}]}], "  ", ";", "\[IndentingNewLine]", 
         RowBox[{"r", " ", "=", " ", 
          RowBox[{"reciprocalsForTwoDimSubspace", "[", " ", 
           RowBox[{"{", 
            RowBox[{"fup", ",", " ", "fvp"}], "}"}], " ", "]"}]}], " ", ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"bRefreshPointDependent", " ", "=", " ", "False"}], " ", 
         ";"}], "\[IndentingNewLine]", ")"}], ","}], "]"}], " ", ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"fup", " ", ".", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"fvp", " ", ".", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"fup", " ", ".", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"fvp", " ", ".", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"plot", ",", "\[IndentingNewLine]", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Black", ",", "\[IndentingNewLine]", 
             RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", "fup"}]}]}], "}"}], ",", "0.02"}], 
               "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[OverscriptBox[\(x\), \
\(\[RightVector]\)], \(u\)]\)\>\"", ",", 
               RowBox[{"fp", " ", "+", " ", 
                RowBox[{"scale", " ", 
                 RowBox[{"fup", "/", "2"}]}]}], ",", " ", 
               RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Green", ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", "fvp"}]}]}], "}"}], ",", "0.02"}], 
               "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[OverscriptBox[\(x\), \
\(\[RightVector]\)], \(v\)]\)\>\"", ",", 
               RowBox[{"fp", " ", "+", " ", 
                RowBox[{"scale", " ", 
                 RowBox[{"fvp", "/", "2"}]}]}], ",", " ", 
               RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Blue", ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
                "0.02"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\
\)], \(u\)]\)\>\"", ",", 
               RowBox[{"fp", " ", "+", " ", 
                RowBox[{"scale", " ", 
                 RowBox[{
                  RowBox[{"r", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}]}], ",", " ", 
               RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Orange", ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
                "0.02"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\
\)], \(v\)]\)\>\"", ",", 
               RowBox[{"fp", " ", "+", " ", 
                RowBox[{"scale", " ", 
                 RowBox[{
                  RowBox[{"r", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}]}], ",", " ", 
               RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Lighter", "[", "Gray", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"fp", " ", "+", " ", "fup", " ", "+", " ", "fvp"}], 
                ",", 
                RowBox[{"fp", " ", "-", " ", "fup", " ", "+", " ", "fvp"}], 
                ",", " ", 
                RowBox[{"fp", " ", "-", " ", "fup", " ", "-", " ", "fvp"}], 
                ",", " ", 
                RowBox[{"fp", " ", "+", " ", "fup", " ", "-", " ", "fvp"}]}], 
               " ", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}]}], "}"}], "]"}], 
       "\[IndentingNewLine]", "}"}], " ", "]"}]}], "\[IndentingNewLine]", ",",
     "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider2D", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"p", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"p", " ", "=", " ", "#"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], " ", 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<u = \>\"", "]"}], ",", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<v = \>\"", "]"}], ",", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], 
           "\[IndentingNewLine]", " ", "}"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"av", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"av", " ", "=", " ", "#"}], " ", ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"ImageSize", " ", "\[Rule]", " ", "Tiny"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<a = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "av"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"bv", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"bv", " ", "=", " ", "#"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<b = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "bv"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"scale", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"scale", " ", "=", " ", "#"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<scale = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "scale"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dynamic", "@", 
          RowBox[{"SetterBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"fn", ",", " ", 
              RowBox[{
               RowBox[{"(", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"fn", "=", " ", "#"}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                 " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"tick", "=", 
                  RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
             "]"}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", " ", "\[Rule]", "  ", 
                RowBox[{"TraditionalForm", "[", " ", 
                 RowBox[{
                  RowBox[{"zFunc", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "[", 
                  RowBox[{"x", " ", ",", "y", ",", " ", "a", ",", " ", "b"}], 
                  " ", "]"}], "]"}]}], ")"}], "&"}], "/@", " ", 
             RowBox[{"Range", "[", "3", "]"}]}], "\[IndentingNewLine]", ",", 
            " ", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], 
           "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", "\"\<z(x, y)\>\"", "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"scale", ",", "0.5"}], "}"}], ",", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"av", ",", "1"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bv", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tick", ",", "False"}], "}"}], ",", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bRefreshPointDependent", ",", " ", "True"}], "}"}], ",", " ", 
      "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bRefreshPlot", ",", " ", "True"}], "}"}], ",", " ", "None"}], 
     "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"plot", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fn", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fp", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fup", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fvp", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], " ", "}"}], ",", " ", "None"}], 
     "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
     RowBox[{"{", "tick", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6028486396694283`*^9, 3.602848766330673*^9}, {
   3.602848830148323*^9, 3.6028488331484947`*^9}, {3.6028489219605746`*^9, 
   3.602848936863427*^9}, {3.6028490538941207`*^9, 3.6028490646217346`*^9}, {
   3.6028491045200167`*^9, 3.6028494323467674`*^9}, {3.602850959563119*^9, 
   3.602851067370285*^9}, {3.60285109805504*^9, 3.6028514589076796`*^9}, {
   3.60285158549592*^9, 3.602851588687103*^9}, {3.6028516222520227`*^9, 
   3.602851968155807*^9}, {3.602852020436797*^9, 3.6028520761599846`*^9}, {
   3.602852156751594*^9, 3.602852218629133*^9}, {3.6028522821767683`*^9, 
   3.602852416044425*^9}, {3.6028524567277517`*^9, 3.602852466002282*^9}, {
   3.6028525899423714`*^9, 3.6028527133024273`*^9}, {3.6028527539827538`*^9, 
   3.6028527809782977`*^9}, {3.602852817434383*^9, 3.602852862229945*^9}, {
   3.602852929659802*^9, 3.6028529756934347`*^9}, {3.602853019798958*^9, 
   3.6028534633343267`*^9}, {3.6028534973262706`*^9, 3.60285350273658*^9}, {
   3.60285362617064*^9, 3.602853693710503*^9}, {3.6028537565910997`*^9, 
   3.6028537926641626`*^9}, {3.602853874124822*^9, 3.602853943529792*^9}, {
   3.602853984843155*^9, 3.602854044392561*^9}, 3.602854075962367*^9, {
   3.602854145036318*^9, 3.6028541629563427`*^9}, {3.602855812585696*^9, 
   3.6028559256001596`*^9}, {3.602856185645034*^9, 3.602856302910741*^9}, {
   3.6028565100935907`*^9, 3.602856524776431*^9}, {3.602856671604829*^9, 
   3.60285680064921*^9}, {3.602856835372196*^9, 3.6028568930454946`*^9}, {
   3.6028569296735897`*^9, 3.602856931532696*^9}, {3.602856966619703*^9, 
   3.6028569672497387`*^9}, {3.6028570401229067`*^9, 3.602857092465901*^9}, {
   3.6028571600187645`*^9, 3.6028571610288224`*^9}, {3.602857220133203*^9, 
   3.60285722288636*^9}, {3.60285725696831*^9, 3.6028572598224735`*^9}, {
   3.6028578273329325`*^9, 3.602857866086149*^9}, {3.6028582981738634`*^9, 
   3.6028583127556973`*^9}, 3.602858367726842*^9, {3.602858413760474*^9, 
   3.602858443441172*^9}, {3.602858534363373*^9, 3.6028585564976387`*^9}, {
   3.602859555551781*^9, 3.602859575162903*^9}, {3.602859706693426*^9, 
   3.6028597254394984`*^9}, {3.6028597634346714`*^9, 
   3.6028597928443537`*^9}, {3.6028598929750805`*^9, 3.60285991639542*^9}, {
   3.602860020275362*^9, 3.6028600411265545`*^9}, {3.6028600944316034`*^9, 
   3.602860153658991*^9}, {3.602860268595565*^9, 3.6028603154392443`*^9}, {
   3.6028603681662602`*^9, 3.602860432978967*^9}, {3.6028605176728115`*^9, 
   3.6028605607142735`*^9}, {3.6028606026306705`*^9, 3.602860668667448*^9}, {
   3.6028607295379295`*^9, 3.602860781440898*^9}, {3.602860821668199*^9, 
   3.6028609412110367`*^9}, {3.602861000450425*^9, 3.602861059334793*^9}, {
   3.602870662669999*^9, 3.6028707038003516`*^9}, {3.6028707357031765`*^9, 
   3.6028707706061726`*^9}, {3.6028708196229763`*^9, 3.602870867511715*^9}, {
   3.6028709058779097`*^9, 3.6028709812252192`*^9}, {3.60287104696898*^9, 
   3.6028711645737066`*^9}, {3.6028712290723953`*^9, 
   3.6028713634710827`*^9}, {3.6028714302049*^9, 3.6028714307259293`*^9}, {
   3.602871482752905*^9, 3.60287157444915*^9}, {3.6028717693822994`*^9, 
   3.602871830146775*^9}, {3.602872022293765*^9, 3.6028720532165337`*^9}, {
   3.602873796906267*^9, 3.6028738520714226`*^9}, {3.6028738841302557`*^9, 
   3.602873890450618*^9}, {3.6028739600155964`*^9, 3.6028739626507473`*^9}, {
   3.6028740534089384`*^9, 3.602874082396596*^9}, {3.602874119761733*^9, 
   3.6028741959690924`*^9}, {3.602874228757968*^9, 3.6028742447188807`*^9}, {
   3.602874550353362*^9, 3.6028745839192815`*^9}, 3.602874622686499*^9, {
   3.602874685133071*^9, 3.60287469141143*^9}, {3.602874935081367*^9, 
   3.6028749389755898`*^9}, 3.602875011336728*^9, 3.6028755716457767`*^9, 
   3.6028757565353518`*^9, 3.602875858316173*^9, 3.6028759039407825`*^9, 
   3.6028759490413623`*^9, {3.602894121669739*^9, 3.602894133861436*^9}, {
   3.6028944050019445`*^9, 3.6028945140381813`*^9}, {3.6028963428377824`*^9, 
   3.602896353563396*^9}, {3.602896656817741*^9, 3.6028966575237813`*^9}, {
   3.6028967617857447`*^9, 3.6028967844800425`*^9}, 3.6028968507148314`*^9, {
   3.6029297985940113`*^9, 3.6029298367221923`*^9}, {3.602930153092288*^9, 
   3.6029302277115555`*^9}, {3.6029302619825163`*^9, 3.602930307720132*^9}, {
   3.6029306128685856`*^9, 3.602930618780924*^9}, {3.6029306685997734`*^9, 
   3.602930668771783*^9}, {3.6029309780884748`*^9, 3.602931026226228*^9}, {
   3.60297650532292*^9, 3.6029766152822094`*^9}, {3.6029766865632863`*^9, 
   3.6029766983769617`*^9}, {3.6029767575113444`*^9, 
   3.6029767617445865`*^9}, {3.6029768273773403`*^9, 3.602976977795944*^9}, {
   3.6029770151190786`*^9, 3.6029770376813693`*^9}, {3.6029770796107674`*^9, 
   3.6029771161668587`*^9}, {3.602979936045146*^9, 3.602979951220014*^9}, {
   3.6029799862560177`*^9, 3.602979994742503*^9}, {3.6029800258932853`*^9, 
   3.60298003524482*^9}, {3.6029800781432734`*^9, 3.602980088615873*^9}, {
   3.602980252843266*^9, 3.6029803459735928`*^9}, 3.6029805617249327`*^9},
 CellID->49453794],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 
    0.8600000000000001, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1.54, $CellContext`fn$$ = 2, $CellContext`fp$$ = {0.365, -0.76, 
    0.42367981110711467`}, $CellContext`fup$$ = {
    1, 0, 0.9870200108166574}, $CellContext`fvp$$ = {
    0, 1, -0.6409175240344072}, $CellContext`p$$ = {
    0.365, -0.76}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJx1nHl0VtX19xFRhqogBkShzgqIBWUQgtFTdanYCq1gVRTRnyhS54IKSl9B
xDpUBZVRUZEZpE6EgoS+FxxwCAqIIBKQgIQhMSTMCGLed927P/vp/f7y5J+s
9VlnnWef7z13n3322eeefvsD3e+sWaNGjdVH1ahx5P//32Rkr0dOeaos+nfz
NstWTz4QHVzwWt+qqqqQu33AnbPHbHV+TV7Vmq6LD4WbLvvndZ1n/Oj85BWP
dS1seSDsu/CKp0cO2OD8rkeP+2Rg7t7QKe7nO+fnd1iQ16NyV9gTt1/mfGCt
x+fd0m1n2BnzyHne1p7tx/aoDDXiv3F5aTsrwuGkfdD2B5P+nQ+y/i9K7HF+
gdnzc2K/835m/83JeJ03tfF2TvQJqo/pGVRPdB54+JpT55+y19ujM/z1/9z+
xwnD9rvO8Hu7/xCdVLbbdYbPP/i3C5ccrHSd4bXuu6j35X3KXWf4S7/5uMeN
p5a6zvDkOW5zndP2bHWd4U2tPTrDX7b+0Rl+lNmDzvAPzX501vGiM/wN0wed
VU907rTy7gfGj9/p8xOd4fSPzvDONn/QGX7cqUV/eXpJqesMf2tM26suab/F
dYa3jufVJtcZPi8eb7HrnP7dYtcZPt/aozP8fOsfneGTzB50htc3+9EZfpGN
F51VH3RWPdF597XHD9nb4id/39EZzvxEZzh6ojN8xgM1Ly8u2ew6wy8yfdAZ
nsznta4zPNFhteuc7v9b1xk+2dqjM/wV6x+d4XlmDzrDZ5r96AxvYONFZzjz
H51VT3R+JJ7nJe4/0RnO+47OcOYnOsPRE53hr8Xv13euM/zfsZ3LXWf4iFif
L13ndD+fuc7wl6w9OsPnW//oDH/D7EFnOPqjM3yyjRed4fgfdFY90XlXrP86
X4/QGY5/Q2d4G3sf0RnO/ERn+DwbLzrDp8Tz5xPXGf5C3M8C1xk+NW6f7zqn
f3eB6wyfYf2jM/xDswed4cx/dIZfYONF53T7UtdZ9UTnipgv9fUaneGsR+gM
x3+iM5z3HZ3hzE90hv/T9EFn+FuxPlNc5zQf5TrDZ1p7dIaPsv7ROc2/dJ3h
U8x+dIZ/aONFZzjrLzqrnuicjGNGHvESOsNZ39EZznqEznD8JzrDed/RGT7Z
5ic6w9ETneEdDtZ7rHXPm3PRGf6+tUdn+GzrH53hE80edIbPMvvRGY4/QWf4
G6YPOque6Hwo0T/ofIY3lfkMny/zGT5Z5jP8JZnP8JEyn+GzZD7D58h8hn8g
8xk+XuYzfIzMZ/hUmc/wBTKf4c1kPque6Hwg8SdhkPhn+Cvin+Hni3+GjxL/
DP9Q/DN8pvhn+Fjxz/B3xT/DXxP/DH9H/DN8ofhn+Bjxz/C24p/T4834Z9UT
nR9N1sdwgcQb8KMl3oBPkngDnifxBvwNiTfgCyTegI+ReMN/V+IN+DiJN+AL
Jd6AvyXxBvwSiTfgUyTeUH3QWfVE531JvBf6SfwM/1DiZ3h9iZ/hMyV+hudJ
/Ax/ReJn+BSJn+GzJH6GT5X4GT5a4mf4xRI/p/vPxM/w4yV+hi+Q+Fn1ROfO
yf7F/ExmPwi/X/aD8DzZD8JPkP0gfJrsB+HtZD8IXyj7QXiQ/SD8P7IfhLeX
/SB8uuwH4TmyH4RfIvtB1QedVc+039gbukl+Az5R8hvw+yW/AS+Q/Aa8ruQ3
4GMkvwE/VfIb8EmS34CfJvkN+DjJb8DrSX4DvlDyG/AHJL+h+qT9RkZPydeF
LPm6kCVfF7Lk60KWfF3Ikq8LWfJ1IUu+LmTJ14Us+bqQJV8XsuTrQpZ8XciS
rwtZ8nWu54y8bfeVvLA9GtPwkoFXbdwX3dPx0SbDxmb0h7d79LloUeHhcGHc
/2fOr+jTZv3b9ctDWWznu87/GP9uWTiyY8yD8rykH+dXWj8zE3uc35u2J6g9
/G5+PK5tUW6s83L/XXhn49if5Hk2RhNjv7HE+4En+69F3g98vnHsh0+yfuj/
4Xg+r4rGxfN8nvcPfz5+v2Z5//CRxukf/ob1Q//bY/+/MHrW2tM/fFy8vgz3
/uEzjNM/fLT1Q/9HdI95eFH6h8+S/uELpH/4q9L/4GRc4Q3RBz5O9IFPEH3g
U0SfxG9vtPU983zhC+X5wv8jzxc+Q/qZn8wrW0cy8w0ejPN+jUvmbbhP3i94
B3m/4FfL+wX/k7xfyrEf/gd5v+D3mz1w/APvF/aT528rdsLv3j1jdM7CSrcT
Xr5h5CslOZVup3Ls1H7EHn/f8be81/tiP7ZM8s8bLS/9keSfN5ofWCT5542W
H/vI++G9mxvPh/e8H/j4eL5N937gH1p7+uH9ejqet696P+n39CHvBz7W2tMP
79FI6Qe+UPqBT5R+eF8KZFzwqTIueCTj4r1oJzrDg+gM7yDteV9qFCTPUeZb
yDLfQpb5FrLMt5Blvnk/rC/6Pt7W94xdTzxbGp3z+oVnjvhof3Rwf79lXRc7
D1l41Dzh4ZC0V44foJ/HetZ8bVrxr96e+S/cxwvHfvr/e/XtI22vv4s9WfoJ
+ruNfh05/bGcbX6+dvsvB0q7HnEgNLz30zWrJ2/23204q+UzVVUZTvs7Wr1w
sOviPaH+2p/rtmu30dvX7HLj6Kqwzznte3xRULvbEewri7z9uutOn1hVtds5
7XvNrnv2hGEV9rvfevtJy4fPqAq7nNN+2+TlHSbU/Mn6KfT2fykY9k5VVaVz
2nd9dOmlE4ZtN17g7XfnNP2gKlQ6p/2z5x3uMqEm8XmNGnr+aO2DtrffDfq7
Zn/IMq5Q/biKQhbdgupm+ocszyXoc7HnG7I896DP3eaPt28wePSgqvCLc51X
zDc/H3zpoVsL/7rH5xW87aI6DxS23OnzB375wvsPjFnpOjg/sKrGcWN7bPP5
AH/qq89OGbtysz93eOmkj88d22OTP1/4OdfvuWDsymJ/vnruyfPV9jxf7Z/n
WL09RUHt57noeNFf9UFn1ROdOad7PLfO6oGP7nSd4VXLOxVW9P/JdYavP2ZM
ScWuLa4z/OVzWhyq6O/jcn5J3g8nFpesd53htbeualNcssZ1hg/t2vGS4pJV
rrOee6Kztkdn7R+dq7enKKj96KzjRWfVB51VT3TmnO7F0rten3bbDtcZ/nKX
kQunFW91neEPDi9fPe22Ta4z/A9xHFjkOsP7xO/dt64z/Kb4fV/mOsP/GPuZ
L1xnPfdEZ22Pzto/OldvT1FQ+9FZx4vOqg86q57ozDlds2crXi5oVuY6w0/b
euIHBRM2u87wQ1eUjhuY+4PrDO8b78dXuc7wX+PnvtR19vPKeP585DrDa8Xz
cL7rrOee6Kzt0Vn7R+fq7SkKaj8663jRWfVBZ9UTnf28r9v051s33+46w2fM
XvZ26+n+Hjk/ZkXP52/pttZ1hid5mBWuM/zU2J5PXGf4nfG45rrOfk4a6zPJ
ddZzT3TW9uis/aNz9fYUBbUfnXW86Kz6oLPqic6c0zW/aMRzVUO2uc7wVuPn
zayq2ug6w5N1eY3rnD7v8/dU+lnsOqfbv+s6p/kI1xk+5YtdG/ff3C0XnbU9
Omv/6Fy9PUXSfpnrrONFZ9UHnVVPdPbzPpnP8Jkyn+HHynyGD5L5DD9d5jP8
bpnP8HEyn/XcE521PTpr/+hcvT1FQe1HZx0vOqs+6Kx6ojPndL8V/ww/Xfwz
/Ffxz/C/in+G11yR9s9+zij+GX6c+Gc990RnbY/O2j86V29PUVD70VnHi86q
DzqrnujMOd1IiTfgoyTegPeXeAPeTeINeF+JN+C3SbwB7y7xhp57orO2R2ft
H52rt6coqP3orONFZ9UHnVVPdOacTuNneI0V6fgZ/oPEz/BREj/Dfy/xM7yu
xM/wYRI/67knOmt7dNb+0bl6e4qC2o/OOl50Vn3QWfVEZz9/lP0gvIPsB+Fd
ZD8I/1X2g/DnZD8Ir5D9ILyV7Af13BOdtT06a//oXL09RUHtR2cdLzqrPuis
eqb9xt5wh+R54H0lnwO/XvI28NskPwMvlzwMvLvkW+AvSl5Fzz3TfiPTPu03
Mv2n/YbaUxTU/rTfyIw37Tcy+qT9RkZPdCbPRj5E8mmBvIrkzQL5GcmPBfI8
kgcL5IvQTc8x0Q2ezmsVOic/Jvko71/yTm6P5Jfcfskj+XjRJ7rs6r03j9gb
JXFaZh7WfuaKwqqqvVFe3Y/2dl281/X501eXvjX5wX3R89PGnpz7VCZPONbO
Exuf0ODnRYU7XZ8NN3TuWnbt/uj7bq1eKhlV6foMsnzURJlX2HNCbGdmXmHP
r+0v7DRhWJnrgz039X7m5v71KlwftQd9sKfTkl//T8ko92/ke6NkPdrv+gxt
ctcVF9fbFf0j9g8Zf/j5LX2abnxsV5TEvRl/2GDyrTuHl+2KmvQbta5ub7cn
unHbzZ+16LXb7h24/dHE3934+tKlu6M977zbpbDldn9Pt/W/bsCDF++Jjls0
tdWwsa5PdP78P1+d886e6PUHNj7Rv95W1zPX8k554g+x/5uvX32v9fSNrif2
F8Xz50fXE/tverS8Zr3eW11PtR89sZ/ni57Y/8nXj1YsKtzt7yn2//Tbe2rn
PpXR+cl1dVtdXK886jOgydxbvs6s7yfcVfO74WXldl5W7jpP2nlw2NKlOywv
us11bvv33a1z3qmwevgS1/l/jnyk/F9XVUa/29ppQMtBm1znmV36f3zt/Eo7
L3Pdop0v3D9+b4ud0Ulv9G6Ve1Rm3dmTJT823Ow/scOgBQNzv3Odc8z+5HzQ
47owxexP3vdi17md2I/O2P/Tqg3XtBxU6jpj/4B+g8+q17vSdcb+c+e27DWh
ZmbdOTp+j0rsnCITryb1AFuio+M4xNc7O0/ZGtU5oaJjj8ofXee5dm74c+zf
NrjOV3zQfPApT22Pvnx+8+WFLde6zqvyTmvet29p9MRr82vX671a8vYllrfP
xKW1zc7kfS90PbGzUfxe+74vYOcr8fv7nfjJbXavaoPreaXZeWaH8YNLckpc
T+zMa3XuvFptPM4Pd37WZOW/riqLttxaY07r5pl4qWH8fNdHLXYfubyif2af
lczDDdGqwddOuaWbP8doRvy8iqP9kzaX1Wrjz93PW5N6G48Dzc9sMj+zwnXb
a/miWbJvyjF7kvlW4Lq1N3uSupdPXbdZZk8yf5a7brlmT1OzB92+MHuus3mL
bol/+DF6cfYLLXtUbnHdEj+w2fLA5a5bm9ieZdGKOR3qju2RyQN0jH93RfRm
x8PNco/60XW7Ie5/ZfTJnJwuLQcVSZ52lZ07f+O6JfNktc3nz+X9XWrvb2Zf
387sSd67qa5brtmT6DDfdbvR7EnGu8R1G2T2XGD2oNtYsyeJw9fJurzG/TC6
JfNwbfT2hrKvFhWWum7LY/snRA+/NvbKCcMyearNMZ8d9Tn5+/H962XyJ/1j
e+ZGLzywaFGtNt+7bpV2Pp5n9RXp85rFpv/Hknd6MO/hS/eMuPuXtZ3QrdLs
SfoZKXnU2cbfc90GmT1nnFVycr3eH7lu+8WedLy9OLomjie/l/OvT6PT434y
+ZBEz889fkC3goQHOLr9PeknnGH9oFte8ruB30W3g4mdQXVLzvfnBsaV3g9S
V5+Zb/PMnl9iv/Sm6zbI7EnmzweuW67Zw3NJn6dk7EmfJ84NPPd0fmN2YJ6g
WzKuCYF5hW5rknkYZts8RLek3mBNYN6iW3Luvzowz9P7lFXhAnlPeybvURhh
75H4t6D+bbXZ82S8jvzbdZtn9iR6Rq6bvXcBP5A+n83Yg272Xgf8THp/tyLg
l9At8avLwjfmx9Bte+L3bP9e7rol4/3RxrvFdfsy8atB4gGvD2km64L57YDf
TsfVJWGirKfmh0MST37mupnftvrGQtfN1p3AuiPrQtB1YabZc8DWNXSzdSew
DqJbo2SdCi1t3US3vsk6G1hn0S157qXhYluX0c3W8cA6jm7zrB7mF4lPkjh/
q+WdPE6z/cuW0NjiivQ8/N/5HIsHwhlxntDzcgE7n7Q4Bz2xMx0XeXwSND6x
eCYQd6EndhKnoafFS4G4zs/pkjgwtLI4ED2T+VMZiBvR8/Ykzgw7LM5Ez+Q5
VljdbCautjhW5m1hZHFvIO4lrrY4ORAny/4l6P4F+5taHI7O2H+Pxe3ojP3n
p+J8j6uDxtXYL+sCcXtg34HO2M8+BZ0vSPY1odz2Neic+IE9YYntg9D5rWTf
FNbavgmdE/+w2/KomX3i8cm+LNyc2pcVRkk8tiv8YH4YnZ9I9n1hpe37ZN8d
dN9t+7LAvhKdsb+h7UPRGfv3pvatRUHtR2fsP8n2xeiM/efZPhqdsf9p23ej
8/2b2v7ctt2BcO6rn+TXeveQ62z1V+EV27+js+33A/t9yVcEzVdYPiGQT0C3
uZY/OSD5HOw5KbXfL6QeLLw955tPuy72vFz4wexZk37uQe1BN+wh34JudZJ8
SLjE8jOiT4Q+zBPyG/8ye+BHW17lkOVVmD8PWD9NbVyiQyQ6RP/X8jbp/XhB
uM/6aSz6nG32zDR7eO78biuzH07/51ieit9lX4Yfxs5dtk+fmvbbUS3bV+5P
7SsLwu3Wzylpfx6xr2F9hLe2/VQf20/RP/sd1lnsedj2uePT63JU3/Zrd6T2
awWhxPqpI+v19WZPF7GHfcRBi3/g7W3/0tj2L/wu+4snLI7CzgrbV76Vjrui
FrY/6p3aHxWE5dbPYInH3jd79og9xO3Et/DPbb9wke0X+F3i+YMWJ2Nnqe3j
Xk3H1dFrth/pnNqPFIS3rZ+fJN6+1+xpLfYQJ+el7CmMnrT4vH2qPefIEwL7
oPS+aV7eW+sLTlq68R7O66OPLP6vV/Df9hSEP3dP+rlE9lNndE/suVjsIS5t
lnq+hdFCi4drFvy3/gUR8Wo/e45uYvdkn7JA9CyyePu51PMtCMH6+Zvsl4PZ
c5rY087iwLtS70thdLPFn91T87nA4of1gTwGZh6yfcEcmZ9lFt82Sr0vBeFk
6+dhyYfkmj33yvtLHEXeid99jPub8v72sziwecpvFIR61s9RHZJ+8M+LEz8W
zk35scIIf16jw3/74cKoha0j76f8dkG0yPppZP42bedeszOTNza/Gpqm/HBB
wJ6TJN9e1+ypafbgh/ndFma/+O2gflvPX+RcxutUsV+/1yTnJlGWcxOvK6Yf
vdeADuTZkrrQzD5d7zXwu9qefrincGN8bvWu+PnMvQb60fb0wz2FZB0Z7f3o
vQb60fb0wz2Fe6UfvddAP9qefrincIeMS+810I+2px/2rRWis95roJ9s7fVe
Q3q9y5yXpdeLzPka9xw5V6L+OWlf5px5yP1HOHW83H+Ec27O/Uc4dZLcf4Q3
tboR7n3AqUNLRjsuL30et83vfcCp8+H+I5y6Qe4/wkeYPdx/VPu5/whva+Pl
/qPqhp6cH1F/jp5wzhnRE069NHrCqe9FTzj1qOgJP9Xqc9ATTr0feqbP6Ta6
nnDqqdATTn0mesJfMXvQE059BXrC29t40TOLbkF1Q2fOudL3Ncqcc86LznDq
1dEZTn01OsOpB0ZnOPWr6Ayn3hKd0+dxa1xnOPVs6Aw/bP2jM/xvZg86w6lv
QWf4FTZedIZfl9YtqG7ozHpxk9UhoDOcc3Z0hnNfAJ3h1LejM7yL1UehM/wO
q09DZ/jDVh+InvBHjKMnnDpk9IT/0X4XPdVO9IQftHGhJ7xXWp+g+qDnEjsn
2pqq9yhzTj0DesKHWx0OesLzrA4KPeG3Wx0aesIPWp02esKbWR0m8xbewupg
0Rl+irVHZzh14OgMv8PsQWc49yDQGf4PGy86w9P3jMqC6obO7LOuSdXzlDm/
ztZHdIZvtzoodIYfbXVo6Ay/3uoA0Rn+gtVhojP8VquDRWf4DqtDRmd4H2uP
zvCXrX90hvcye9AZXsfsR2d4mY0XneHpe2dlQXVD59m2f3wmVe9U5px4A53h
3EtCZ/gQqwNEZ/jVVoeJzvCqLUkdLDq7Pam65XF58GKrA0dn+Ehrj87wOlZn
i87wbmYPOsOfMPvRGd7CxovO8OfSugXVLf2dsXz/zhh8ke2XnxX9aa/f16K9
Phfac48MTnt9XrSn3gNO+yfkOdKeez1w2l8jz5f2fPcMTvujt6afO+2r/x5a
ft63r1cNX3ruPfI9tPws30PL9++hwfnd42Q+0J5zJTjtr5V5QnvOTeC0f1Lm
D+31O42013lFe763Bqe9zrcs8yToPGG+FVj+pJv4VfhfxK/CS8WvwuuKX4Xf
In4VPsr8Hs8FPk78Ifx28Yfw34g/hP8k/jDLeIOOF30K7Xxwu6zv8MmyvsP/
Ies7/PeyvsP7yvoOp84ffeC1V6TXZXg/WZfhl8m6DH9G1mV4qazLOl70Yd96
i8ST8PUST8IPSjwJHyXxJLybxJPwv0o8CX9M4kn4YIkn4fdIPAn/s8ST8NES
T8J/kXgS3lviSdUHPadxzij7IPiRsg+CXyn7IHix7IPgA2QfBK95ZXofBD9B
9kHwk2QfBM+RfRC81pXpfRD8IdkHwTfJPgjeRfZBWXQLqhs6f2nncX1lXw9v
JPt6eAfZ18NrrUjv6+FjZV8PP0v29fB/yb4efr7s6+HvyL4efo7s6+HjZF8P
P0r29fALZV8Pv0v29aobOpN3vdPyKugJby95J/hQyTvBR0neCX665J3gsyTv
BP+d5J3gb0veCX6G5J3goyXvBH9C8k46XvSE903n65znWL7uwhtmjKlzzmbP
p1GnfcN70VNjOhY757y+suE727u8vMY59RJtP1332R1zlzunnnP7jsbXHPH+
YufUKz774/LHb/j7V54foz7qySh3Y/3XVjsPVv9z6bG/OXLPwB+cU98y5Hf3
N7z33Ez+jXrd3t9ef+YPTTL5N+ql8waH9n+uXea8peXb28X2F2fybFa3kHwH
5nvn1I2UxuNa4Zz6nBvj5/Kx8zes3unL0VW9Bry5yvNU1Hk+E+uw3jn1OZOb
XLv89dmbnFNnMizWZ4tz6sP5Lko677ff+FrPO9W2ephJcf/fOKee9rPYzk+d
f2x1XDl2/g6nXmXFh2MOLhi6zvlZVkf02ZHtX1zWepPzcquHmTar2ZuX/naL
c87xn7r2qPfm/KbUOfUGJ1q9Qfo8YkPoGeu80nkTq6fqYN/ngbe2+rSTrU7A
8zPWz0/xc9zonPqWwliHEufU7fM9KHgjqzdoYPUP6XzIinC81SHArzfdKoZu
Onnq6SXOuS/wdfPCVic22O78ZqujOMHqFthfr7d6lV3x+7jN+WGrQ2hs50fs
E3PsfCrHzo+I2xsY72B+AL7c6l6uNz8Az7G6owrzA/CDdt53gfkBeD87N9xi
fgDe1849z7DzC3hDO899wfwD/Hk7Px1u/gF+gp1XXmb+AX62nScONf8Apw7q
VvMP8Detbudi8w9w6lKOtzoZ4vm1pn9b8xvwe6xea7r5DTj19tvMb8D72vnp
9eY34KfY+W8zO6eDH2Xn0UvNn8B72Pnvc+ZP4E9bHd0U8yfwe63u60nzJ/AG
Vqf0P+ZP4O/Y+elxVhdE3E4d+63mZ+DUB040PwN/yOotPzE/A3/Z6lcbmZ+B
X2Dv0TfmZ+BfWx3g5+Zn4G2tbm26+Rk4dVb4GTj3bvAzxM+HxM/Am4mfgbcV
PwOvEj8Dv1v8DPxP4mfgjcXPEH/iT6bE7b9wfpTVDzcw/wNvYu87/gfezOY5
/gc+wuqmcuzckHhsg81//BK8jdWh4ZfgweqsbP2NdP2tb+ePen8tL/5+2ghf
r6mvrkj8iXPqh/F7Hoek6gQy6z7nlZNNN/xtDatz/tLmJ/x5m59d4/kwx/mr
Vk+exG/TnZ9idew9Eu7+/FTjSbw6x/kE62d58rvOuR+RxCFfOK9pdja054L/
L7d6oZvMn8BzzJ+0ju2Z57yF1eHsjePMN51faHUyZ8f6v+nrS0fjSZw5z3kr
6+e25Hedn2S/W2r+n/XoVvP/x9pzT+dd37R4e4TzNlbP083mA/x845U2H+DU
5+yVvN9Uy+M1pg7E/HwtW3eG/afP3bdVTPF8YPecoS12LR2QW8d+l/ZX2+8e
0TGdJ5xr/f9k9tD+frPnRHte+NUqe14d7bnAO5qeR5j+8MtN/16mM/ws09nm
ifvVY2ye9LR5C59q862zzU94c5ufNv+dj7J5yPvLPuK8VJ1khrO/IP6Hf2fv
Ke+71s98bs8dPtje91zTXzl+AL5G/AC8lfkB4n+1n/0dz2uMnAt4/FOQPheA
v2Ht6cfXWTnHgdcpSJ/jwB+09vSD/mfLuVt6fcycu/lztPboqf5zZ+KffZ/C
PeVi8wNw7rnk2vsO597QV8l64fsF6mx3JOuLc+7ztjE/Ced+zW3mD+HcG5pt
fg/OvRi+z0kcnmPr4xfJeur8D7aeJv5no5wXl/h3OOFtbB1P3q+VzrlXODyJ
H9zPs3+ZmsQbzist3liSxCfOz7P45OsknnG+xOKZaUm85H6eeKlPEl85J77i
u5r42xkWpz2RxHXOj7G4Ltn3bXLez+LAp5K40fnjFjcm+8FVzi+zOHNHEse6
n/+rxbHJ8/re+YkW93ZI4mTnD1qcjD/Bb1Pn3CuJz52Ps/j88SSed97E4vmL
k/jf+W8t/h+S7BecH237hQuTfYqvFw/aPmVPsq9xXtPqD3sm+yDnTW0f1DHZ
NznnnviJcr62z85NOsk53Wt2/tJTztdy7Rxnr5yjUY/dUc7LqIueYe87fukq
W6d+kXMrvheUJ+dTfN/moJxDzbbf7SXnTXw/5CI5V+J+RKX5GfzbL7Y/XWZ+
Bn6ZrWuXm5+Bd7Z1cKn5GfxbT9sXl5ufcW776DPNz+i61tf8DHyarYPvmJ+B
17d1Ez9DHN5I/Az8GvEz8LvEz8Dbi5+BnyZ+hjg81/Ih+Bk4+xf8DJz7R/gZ
+DmWn/mTxQPw7uZvr7J4AD7K/PPXFg/Al1peaIr5K/ghyyPhr+DHWt4Jf8W+
gO9F4K/g3PfBX8EfsjzYP8xfwX9vebPPzV/BX7Y8WxuLrzyPbetXM4uv4P1s
vett8RV8iuXxys3vwYss7/e2+T34MZYnbG9+D97J8oq3mH8jDtlh+Un8m+eT
LZ+Jf4NvI/9p/g1+ueVL8W/w8y0fu9v8G3yY5W/xb/B+lu/Fv8Gfs/zw8CQ/
43EF96yHGccfDrK8zUmW54HvsDj/GcvzwIda+11yvs99iqetf/zbcGtfLnE+
9xrOX7Bt0j9bP+bx/OkLJx4+9tk7c3+W833uFx8QP8n9WcaLDu/beMljwz+Q
e76+z737zFerQuY7MPAmdbpPrxqS+R4RnPN07lXB+59++KGqqsz3iODf7Tsw
tGoI9w0Lg3LuT1XfT1HQ3+X+lNrJ/als4/K6zfuX3lc1ZIePC176dO8nq6r8
u0bOHxly9qiqIVt8XPp9FeqT4SfG9myS+7baT1HQ32Vcaifj0u/SUIcPZ7yM
i7j0848LXq8astnH5fWTcq/T6zNj/df5uOCJnd/7uKrvpyjo7zIu/a4L44Iz
Xsbl8bnMQ6/PlPu/8Aap73YWOk/yoivdTu0HO+FLUrptdr7Nnhd2wnfJe0E8
fK7lCetLvr2HfGcD/rDNE/qH/83ei4aSb18r35eAr7b3q5Hk2xvK9xM8Xy3f
T4Azn3mP4GU2H3gu8CTvl/l+AjypI/3Ynwu8OOZz/L4AvHbq/lRh0PbMw+r7
LwpqD/qr/eip4/V7MVn0IQ5cJ99JgA9IvUdFzn+weYg+8PLYnsx3GuFHFKS/
e1B9+6Kg/TNetYfxqv2MF77G5k99yavrdwzgjVPfj/3WeWub/w0lf95avj+g
/WC//i72wwfK+wIfkF5HPO49LH7D89jiN+AbxG9oP9gJ/0L8BrxM/AZ8j/gN
4tIbxD/DB4l/hu+0+Vxf8uqNxd/CO4m/hZ+c8reZvHqxrHfwZqn1LpNvby3r
FPw8W6fwP7p+1bA/vd+Bf9B1ln50veA91fWF/vVeA/3resf7qOsjv1u9/98c
6XrBe6TrC/3rOsX7ousav5tlXYh0HeF3dd3hvYAfn35/g65fzH9tjz267mCP
rlPY4/kW8ZPwIvGT8C3m97BTOXZqP7wX+rvYr+sj9nv+R9ZB+HZZB+HXyToI
/17WwTTPrIPwcrnXrO3Rofr+i4Lagw5qP++vjjf9HfX8LN9Rz8/yHfX8LN9R
z8/yHfX8LN9Rz8/yHfX8LN9Rz887c+Ujv2/X6E75jnp+lu+o52f5jrraUyTt
9Tvq+Vm+o56f5Tvq+f/rO+q6/sJ1XUP/LOtgVP36sjnS9YjnpesX+ug6iD66
bvK7uo7wu7ru8Lu6TjFP4IVmD09W6zB5vroOYr+um9hf/TpbFPR3GZeuX4xL
17v0d592hVzZb8J3yH4TPtieI+PVekjGq+sv49X1mvFq/4xX7WE+q/2M18+n
ZH8Nbyr7Nfg+iXPggyRvAF8veQPljKv6foqC/i7jUjt5T3Vc6K/3dvE/Wg/A
e63f3aU963gP88M8x+p5oa/L6XWtIHO+k15HQvXtM+fv6e91FGTW6/S6E+m6
gw56zkj/uk+hvZ4nMl74j6nfLXQ/Vmn204+eJ9IPfKPooP0wLvzVjaK/cn5X
62bpR8+Fee76/Qf60XuI/K4+R9rrfTra6/Oivd4Lw87q99EFUfX6F0Sq5/8D
pad9cw==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJxFmgf4ltMbx5/znPegUEiDskqFltKgNNGUShRtDUSUUGRklpKMVBqSqFCo
kEJGomE37L333vP/+fZ9rut/XT2dz7nf+znv+z7vOff53vf5HTB45PFn51mW
7R6zjH/ZqynLJpSybEc6J4csa8yLB2LvDTeCq8N38fpp+HWgfwc8GD4c7oVP
Q9oD8FmA/RTszeifhP0w2hrY72bcf3jtXPhPbAfT/xP+HT4I/gPug38T+jXh
nnB9eB/4Nu4bwJgN6M+HB8KHwovgYXAbeDD+LWnr4n8n9iHYW9E/FXtb2obY
T4PbwY3gdzQ27/slfDr2o+gfBg+Aj9Bngj9nnLsZ50n6A7E31+fGfgp8JFwH
HgS3gA+BF+I/FP/W9D+D74KfgL+A74GfEuO/kvYB/D/AvgD7w/Q/hO+AV8Ef
wwvhR+DP8X+IdgX+32C/D/sG+t/By+BNcAu+x1D6VfA5HP4Zrgg3h4fAleFv
ae/Hf6M+G2M+SLsc+/vYb8f+AP134HnwMvgP7i3H9Qw+X2Ffiv1p7F/CS+C1
8O+M8wztWnx+g9fBT8HfwY/Bj8Bf438v/uvpvwvfBi+Hv8dnDe2j+LyHfT72
FfQ/gRfBj8IfwXfCq+Fd4R3ganAP7q1HW417u8J14L3h6+Fh8MnwQ/ifh/9g
+o31bPkul2AfiU8nbEfAK7Gfj88Q+g/DY+BT4Utof6P/sz4f7Tj6Z8A3MsYY
zW/uXU17AfbTsV9M+yv9n+CpjD9Ucz9zvxb3/ArfHD3mUPhx2su4ZxSvPwFf
Dp8DP6j1AZ8Cr4HHwyPheYw5mvZ07n0S+xXYz9Wzhq+Ez4Mfgy+FtagP02/K
+12M/1r4KuznY18HT4DHwk/DV8Nj4G6MX5e2Kv6PYL8Q+3D6q+Cx8Glwa3wq
02LKjoX3gXeGu8P76feBW8KVcseTLvAh8F5wC7girHizMwMcgUMl+Djs+2Lc
Bd4F+5HR/p2Df+eycFu4CszHyBrAX2hdcrWHa+UeZx739sfhIPpnY+9Iezj2
RYx3Ea+NghvSzqE/Dl4Mn4p/e/xa4V+ddg/sR8IHwLvDc/Hpi8/+9DthPzj3
+mqkOaxx4aOx18y91trANeAKcDv4QHhP+Gp8v4FPhCcx3l8lx7zdaMskP7ut
8HR4DrwNngHPhV9inFtpZ3Pvc/AseDq8BZ+b8ZlN//ySx/8J+y/wRdi/pf8m
/A7vfRf2N+C34MXw6/Db8CJ4FmMOyj0nN8G3wDfDO/B6fa6AbSPXTOzTMo85
h/Hv0fjYF9PeqfHhRdoTiveajc/d9BcqrmteFu87C/tdmjfYD+Uqcd96rula
W/i8hc+72O+GN2Cfgf0m+BX4Nngu/DI8D56jMeGF8AL4B/h+rQPtZYyzlXFu
gz+FT0qONYrJP0T7pNzx7GVYE/NxrueKGPsnPs8WsfETeFnmWPQ1/HDmWP0l
vDJzrP4GXpU5dn0Lry5i+1fwQ0Xs/Qtenzlu/w1vKGLjH0WM1W/6Ijwz83x4
Ab4l83x4CZ6lNUL7Ad9zKfwa9m3052eO2x/C92aOsR/B92Xed36CH4ffhnvy
HO4rYvjP2J8oYu/H8P1FnP8FfhIuJy2QvM73VEyJXhd631uw35H795oLL4Hf
0+eivUfPDb4XXqJ4Ak+Gr9JvhP+D+L9EfzX2SbRXYn8Uvha+WvENvgG+Fn4R
/5vwv06/K/YptBOwr4Kvga9QjMVnJT6v0N8BvpFrM/bGfN5T4N3gMrR5cvwq
C8fkmFIe3ik5Bu0Eh+T4taOCXHLMUsDbk7GeB/+lvZb+JvhH2ofweVkxnM9z
Pe1k7N9jfwD7i/QD/J9+y8y/m5790mJ+zsRngdY4PA2eKn/Gr8v1r/ZxaYbo
77ice6/MHc9XwFfl3suWwVfkjkX3w5fnjm/P6Tkw5mX0D8SecU3Vb0d7J7bb
4b1z6wbFtJ1oG3DlvH5iEQOl5TYxzg2MM16fU3ug5pbWDDxCawPeQDuV/iW6
h3v/5r7xXP/RryPNB6/H5zp8Lsb2LDwFvgjeCF8PX6q9jHtvpJ2i9Y5ttNYY
/aNoH42OD1s1htYM9s3a97Qm4S3wBVrbcEvNMfwn4j+GMbtja6vYjn1F9Py5
AfvJ2Ptl1gb1i33wd+kNfEZm3kPrFfvmzdqvtU9jP5T2kOT9WHtB3WL/bQE3
KZ5Dc7hx8X2PgA8rvq/2oDrF3j1NcVHjMmYT2gbFvjxT+7WeO/b9afdO1pf7
wXsla9B94SrJOnVEsAZvhv+Zwbq7KVw2t058Fa6qOZys4+vBteGTcj+TpsXz
rwPXhHvB1eCKydp9H7hScj4wrND50tLHwNu0VuAZ0iH6LeGbsPfFPgC+Ee4D
95f+gfvDg+BpcD94ILw7/KnmINecYL12Knx3sJY5D64WrKHO0brTnOY3+kV6
gPc8OFnz1YcPStZeX2ku4vMDPrOD9dQwzfngfXIIV2vpkOT10wZunrzG2sIt
kteY5lKzYv6vCV5Pk7i3FfbDk9fb0mDtNhb7XvCPtIO5OsB75dbec4M15mnw
kmDdNwa+J1jfnQ/vA/9GO5rrAMavmpxj7A1XSM6F9sTnK+kOXdhbJsfBY+BW
yfH04uD8rAM+7bG3To6/teD9k7XRRcHapz0+NbHvl5z/1IVrwb3hMrk1+zZ8
amM/IFk375E75r2n3y53LH8X3i13zHsHnqq4F72f/gv/A2+EB8InJ+cJg+A+
yfnD9SXHWcXY5sH7jfaaRsoBuT6CK+SO8e/D5wXnfG20HuEduXZQDse1RftA
5vvKcX0IDw3OFw+Fa/A++yTnhAfB1eHOcBV492QdXFn7RnJeMSQ472yg3xf7
Hsm5R3W4WnLOWQkun6x3+wXr0Nr475w733oNrojPrsl6cU94l2SN2L/Qlso3
RwfnrK3gc4PzyNbwIfgfmBzLrsDelfY47JfDx8Jd4YPxqYFPF31+7N9hO4Hr
WvgEbL3gKYrvcG+4EvwtbU+uq+Bu2LvDBzLOvsl58pXYj6Pthv1jxR1pWemQ
3Hnn65k15w3R6/qO4DxJ8XNBcA5xNnwSPt2T9eKPwfnlGu3dwbmg9ElvfLol
68ifg3NB6ZNe2I9L1nmfBOsO6bE+2I9P1hnfBGsQ6a6vgrWndNqXwXpTOu2X
4BxX2ubv4NxaGuyf4FxT8/Pj4D1ZWqgC4++crOk7w0cl65IT4a7J+2h/uFdy
Pt8PPjE5V+8Ln5CcYw+AeyfnwyfDPZJ10l/Bea004R/BNQDpwD+DawDSn7Pw
n8g1D/46WHdLZ+6BrWxy3qJ9Z1m0dloCn5H8m90DD0+eK0vhM5N/41HB8715
5n3qvmhtpj1Iel1afTK+f5dcpzkX2+n6/ppLyTWcv3Lva0uj9ds5wfOuheI2
9tOT5+W98Ijk+Tc+OK50wuey4P2ns+ZocI61P3xp8P7TUXqGe89O3qeXwSOT
95Ll8KjkPeY++KzkOX0L9w7MHdtXYD8neY+5gs84SnMF+wO0o5P3oS7w0cma
oxPcLlnD1WacFKylx9K+j60d/CyvX41fifEuUFzJ/UyUtyZeq0r/Guw9cq+p
PeDPaMtwHQ+/ib2cYib+w0rOYZ+XtlVMUQ0ud33oRewdg/WZtNlE+Ivcn38m
PCD3/nJuyfpH+83twXWIs+D5wfn6CPi24HrGmfBZep4lx4Vbacsl58/btAcq
/vIZJuF/fO648bT2N8VurfXkXE35xwR9L2w9pDdK1oGKI5Ox98yd5z6X/Ax3
xX847dvYG2MfBx+j/Qp+PPnzfKpYRts+Od/rBndIzjm7wsck54ez4WtKzuke
Sa7bvYv90eQ98T34hWAdrVypJ75dknPFDnCb5Bzj+eB8QrlVR+xtk/OKZ0qF
tsS+Ovk3ekvPnbZzch6e564FvlD8jqcqVsIXMubRufflkLvmp71sFfcNxuc1
+m8F5+vKwXtg65Scz78TnOsr5z0B+7HJue7bwfUA5e/dsXdMzs9XJOcUFaN1
8IPBelu1yh+j4+qUkudVGV77mX7V4BqIajtTo7WZ6lrXR2uw7xjnzuC4rXrC
VdFzoCl8U8njXyiO/597V0bP83HwtOh192fJNRe9lzTkidE1VcXDz6Jrg4qB
70fXBhXbX4+ubSquvhZdk5Tm7BU9Z7S3domuuyrefgE/nTmfvTU551fs/Ty6
Dimte0J0jfd7rirB9TrNEemnJrSHBdeSKnBFrlrBeruJ9C1XPa6mhfbg33b9
Ub/QEsqRagZr3fG8113Rmq0dPL3kPEv5W/Vgbf8Gn69adC1rZ2x1ud6Cy9LW
UVzQXqPPy/VGsU7Pj14jX3NVDF77ysmOis7LtO7Oi55vl8CLo7Vxs5Jzlcsz
rz/FMu0djYN10kFcu+HbMHrv1p77RnQtWnv0m/CDmbVQ1+j6tjTPcdF1deXF
TaJrZcpVVwa/l3K9h4rvm6tGEpy3Sks/Qv+6zDl4s+iamPT26uhcTzp8VXS+
L139cHQerfw6cr2UOccvlVyrUR24ZXS9Vxr4segakTTwmug6lXTv49G1LO3j
x0SfQUh3tY8+11AM7Mf8qZ271tEquv6pmkDr6NqyNFuH6PMI1ay2FM/zP64a
xXdXjNsaHJekb3+j/0rmmK66kjSw8rU+0TVJ1RJCER+kRYdE56fKi3VGovMR
aZsPomvj0g/fR9cclAt0g+sp5sOD+PxNc2u2odH7lHTpAPjIzDlj3+hat+oe
OhtQrVJ1fWkO6Q3p8N+jayaqgTSNrmEqz1pYxA3V0BYn18iUk/aL1g/KU/pH
7/vSzMdGn4PcUHIdZhfpU9pbtFaxv879VaP3xFfhvaPzPu3jY6Nzls+xTw/W
k8rjZhTrV/X5Kfj0zawrxkTnL9rTL4vWrtIJF0frYemES6N1svTA+Ggdq5r2
tdG5v2r410XnpzoLmBitjXWOMzBa828/84rOr6WBJxbrUWdMg7DXz3wOdUp0
fqE9SfpA2kD1fNV/tSfqPGJCtA7fXn+OztOlcy6Bj82s00ZF5zXaM1TjrlTE
nkZFLNL5Wm98amU+gzspOtc4I3guKL7pjKx7tKbSPKmcfK6mmna76JqYztR6
wPtlrp93jM5V+wavCY1/aHL99tfce6HO5HQed3gRT7ZkjqOKp+Uzx03FT/3u
RxT8QWbfxoV//SK2litel9+uBTcp/DVms+Bav+7V+ynHm1PyfvpJ5j30eT7z
QviD3LpEmkS696zoHEr70TV8h9+0j/L6WbnX12J4RO64vVZ7QBGjVP+ZiP8v
ueet9F5WfJYGxXcsp7WbO4YrHtyUOyZonn6fe64ugs/MHZMVFy/IHRsfgP/O
rbG1X0hfqV72seJOcC1Fdb9GfIZxxd7+b+79dx18de59R3G+IT4XSrdgn5B7
/1Kt7EjsE3Pn4Io12meUF4yMziV3VUzKve+Ul5aR1oA/wu/23HXjSSXHCOXU
OykX4dqKfTP9stFr+UN4fm6dXKF4PtK0qo/NkkbOnAucDbfMvPfot9SYT3Ol
6L1yG3xz7jq24ui03LFUOXHn6Lx4M7xX9PnRjvxXqYixlWmrRNcEGhbzSHPv
v+Bz7U3Fd5nMtS5zLWI5z6e89IS+W/Ceq5pWz+i6lrTWc9HnGqXc55zag5Rz
HR19Dq4zPc0f1aR0Rqh5pdqN1onmzu/wWPyfSp4TNaPng2pWyh90nqGzDJ21
65nqeVaP1vaqWY3k3ieSdbZ06drkOaR663YNnVmz6ZxH+m54ybVZ5ebSG8pF
lHvsH63nvy1ir3IK1dp07i29Kg19Dvc9mZxj6BxJ50GqkelccmZ0zUr1nzOi
czfVTM6Mzt1UcxgBd8l8LjkXPiPzmeO86BxE76kzaL2valDDo/M75RVae1p3
qj1eGH1mqvrkRXAfuEZ0TqccR/qnbXRdSDXo7ZobPq3k/FRaSfWrcdHnv/pN
jy/0krSf8gTlHvtF52h6Vs9rXiSvK9Xhn4qu7x0Sve5Uu9Y5lea58h9dyoW0
Bl7A/5nktae/ZdBa1N8zSP9o/UkjvIzP+uQYofxK835q8b7KuTS+dJryJa09
nXesxe8a7K/AG5LXw2Z4Y/I6qRe9dnQ2p999TXIuqvWqdar1pXtVN5BWVT61
KfpsrnZ0LFSOo7xrex0w8zxQTqU8Tc/zseS8V3m+4tBfxXfR34fofZVfvJC8
xnSmk5ect+pzKkeTptY5iM4/lCvpWak+LF0sbfBi8hrefq6SO0ZJl2pdak0q
t1Fckl5W7Wt0dGzXucZKPetijSivl8bXWfb86PxXf9ehvVD7oPL6ddHnpzor
nx2dCytf0Xn9kMz1z2HR+7XyxCeiz1il61UD0R6hc5Dl0TVenVncH12/1dnH
vdH1W+WST8IzMp+zL4iufanO8Gz0etc5yJLomrbOLZRvK8/SvvZwcr1Yeazq
+NIGqmlPij7319pUji0tIb2vc2TtL1tz1zy1h6huqjMv5Sk6w11X5CmKn3rt
w2K962xFcUbnK6pZKI9TjeuZ6HNVnQdpX9Geohr7ZPrDFbuS/7ZE76mcfWP0
2avOsttEawPl3Zujz/70Nwn6u4ehmXPbLdHnX/rbhunRNXnF+U7RtQ7l2q9E
nyHqLEf1jsFwGc3t4DMg1QQ2RJ9h6e8oZkSfFyje6gxIMfZ/qaWCZg==
            "]], 
           Polygon[CompressedData["
1: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
fCc8F7wAfAh8BzyL9VMNDd8Iz+t6hw+H74ZnhufU08I3wPPAC8GHwXf1oj3m
hw9uokHMquarqadq11nhudXs8E29aK8b4JWaaDC9yD01XldPone4o8Z76CH0
5uvUeAc9ul5AT2BvMaObzXpek9Xd3Es2tnZNlmdGdhB8f403dT2qM8Yq8Rbq
DXXcKG209LTd/DJzcv3uXrK+zURc71uVrG89mvVgy5L6YcblfF23pD6Yibm+
1ympJ2raJeDVSuqJGk9tN6wky9SzjswqSrIzMzSzz4VLslkzWrOWpUqySDNJ
s5YlS7InMwKzgQVKsjMzNLPEBUuyNjM3s8iFSrJHM0iz20VK1pcZ7MgssuT6
mTFaby8t0X/+ffXH/CXzz0zB+bhRyfzTwzt/NyyZf3p45/cGJetPTa23XatE
z6jhXW/LlawvPYTrY/2SemMma/2/rGS+qNmdD+uV6FUzD/XTbCV61UxEvTlf
ib7S89pvFivRq3pc+9uinf7zelsfFi/Rw2Yi6sHZS+qBv4/rd+2SemRmbZa5
Qkn9NiM3uxxakk37ffQiy8MXtFlTriXXzCVt5qhz0zXgelGz6zX3K1kvZrx6
zX1L6qWZk689FL6ozRpy7bhGrZd6RP3rEYxf3WZNu5Zdg9ZXPaWvPYTxG9us
adeya/b6NmvYtWtNuLlNT7QXuubtx2aWfvaDS/qpmab96yD42jY1xVpiDbG/
mtHZn84q6cdmjPanM0v6tR7YfnJGSf8wE7T+n1TSP8wM7f8nlvQPMzr79wnw
OW1qkLXHz3Bem55qL923ST9zD8LPfmxJv3QPwu96TEl/1BN7bY4s6W96YD/7
USX996XOW11Q0g/NRO1n53d+Rg9q/1i2pD+7p2F/O69En+ix7V+nlfRnPbXX
9ugSPWOmaX8+HX5MDWcd4fOP0vkPMyH91Qwl/ct6YX1fFf6R42vsAb3k7f4W
J3Xf3+uh77EOWg/1P7cwfmI/vdEeeZO1zZ7YS35unn9tP9pfD3AdfBx8tb0L
/gG+Gv4Bvh/+Hr4K/h6+z38DvgH+DX4C/hW+Hv4Vfhz+Bb4O/gV+DP4OvhL+
Dr4X/ha+Av4WvgceAZ8Bj+hlf+R3+Eb4917y3Uv9beFL7MXwhV5b+CJ7N/yg
19Zr3kve7tw5pR/t5xzSZz7U67xCL975L22yFz20vtw8xexEf+5ve3o/2sXf
+GLnEnyxvQt+3rkOP9tLfnwDfDx8jdoW/rvasp8cSo/0K3wUfHkv+dY1zn34
KnhPv29N/uQeyB5e35r8yT0Z84xnXUvwM/CZfh+1C1z53Z+HK3wr3C/Zn9Hv
39aPd9XD6v/cA1TfXVfiV80oB8IDO//oHpH+0z1D/a9zxLnxSEnWb+Y/BJ67
xJ+656U+vbYkazczHmRtK+nXZurq88tL/KZ7Rvbjf5b4ATNl9coqnf8wU1av
rFzil90jsd/fVuKP3ZNSf95a4r/dA9Af31Oi58wY1f9XwB9xfCHnPuplf+xD
+AL4Q/gG+AN/+372XK6Hv4Ivg7/sZf/Ov315P97bf+MYtUQ/Xl/P/2dNvlf0
mnBRm8At/Bz8trUB/hevvxJ+x1oCv93L/qfX7tx+tL3X8C34LPgt+Iom1+qi
frSL1+wLryX8OXx7k3zBTFw9uhL/5mf2Ss59xvhtnHsfPg9+v5d8yF5+Zj/e
yZ7+pdcK/gK+o4l+PqyN/nJvybzm1pp+beZ7f9fv9UMfl/jn0Wr8qHuO+vnR
a/yfe25maWZq+tlPS7y6nt18zJxM7ayGdq/EPTb3S8wczRLMbPX/Y9T4T/fc
TuJ4FB6z9JLhH1GTwanVzED1/6PW+G0zfb2+nt980oztyJoMzrVtRmrvNKPT
69tD9fp6fvNoc2mzBjMH80hzSbMNMw7zaXPqieFhPE/Le+fp5v/kNXrMPSf1
2FQ1esC8Rr01CF64yZ6v+mzqGv3gHqf51BQ1+s49NNfblPDcTfbY9N9j1eQP
7nFaXy7n35+qlzxc7WCGaHaohjB7MYNxfPo2WuNUHgN70Rz69zFr8gsz+5G1
lte9Dj/V6c9pavSge7jn2ys5dyHHOzapZUfyuKyXmjZybbXpDTeVbu216R03
l26ttan9N5bMPeegveLO0s31Nr3tlpK57py3d9xRsjZdo/aau0rXW+AR8OOl
6y3wM/D9JWvXNWzvuLt0vbNNrXyodL0KfhV+onS9sE3tfLh0awl+FL69pJfY
U6z1x5f0GnuOtfi4Ev/mnqC9afsSv+acdi5/VeL/3KOxV21b0rvt4faq4aXr
pfBr8JMl/tA9HHvNdiV+yD0Vr/02JfmJezRmu1uX+Bv9ir19txK/756cvWjX
kjzAPTJ7+y4lfss9IHuPN4roV/Uz+qMtSnqXc8y59WPnHwbW6F/37M2PJnM9
NrkHxHxp0ho/4T0bZt0v1qxNe6t7Dy/VrD33IMzOX6jJvvVeztV5u3/POWsW
/ij8c5NM/JQ2fti9HjN+9/+Or8mW3mySbZ9YUxvMuF2r+nH3glyzBo3uyZgF
vgUebT+u0V6j9rK3fWyNF3TfyXrvnrd73e65X9FmT8i15Rpzb2Tvmr03s9Ar
2+whubZcY8O6GrFdL2t4/5o16Vr0Oy3H89jw+r3UkK3sZfYDtTC8O3xPP3tO
1ty72uTbv5dkKAfX1FRr6e9NarM12j2oTZvUvpV4qHWsge5FPFuzf2TW6V7G
MzXvNZu1Ni9Zox2t0c4l55ReWQ9sbTRf8V4Da6S90GvktRmnzf639dwsZNQm
e6Xn1GTH7hP6Xf3O1vvpSvLTATX+1HuQzBsnqrkW3pNjlmmm6X6N+zbmnxPU
5Pfec2PeOGGNHvEeGfPW8Wv0h3vWu9b0H7Nk9+TMZyep8dPek2OeO3GNH/ae
G/PZcWvyUO+JMV8dpyYv9R4R89Sxa/Jd7zkxuzXDdX/JfaaR2riNFniA77dt
zZ6XWa57hu59bVezF2/Wq1ZTs70Lv1CiHdQQbzuXS3rPHjX3BtiDvH9lbs59
0GSPWm2nxnuP4xdLtKCa8B34+ZL7U9yzdq/aPWOzWveg3Xs2s/Wz71CzNz+g
69e71ez9T9PNpV1qrp1zyt9ip5rs399ka47Hq9kr+LTJXN2m5rs6Z0d6hzZa
6EG/T80emtm/c9De8UuNNraHqH1dP2pdNbDa1/WmVlYDW4/+V1Nf1dT67elq
8hPzOrXWGzXaSc2lV3ikpn7qGdRWr9szm2gstfzDNfVYTe9e2QPw9k32zPRK
T9bUTz2T2v6Jmvqpxle7vVWj5dRweqfHa+qpHkpv8lBNvdaj2DsfrKnX9lC1
/2M1Wl8PoNcYUdNf9Bxjt6lPj8A/99K/Pqvppz92/fadGu2qprW/vl2j9dS0
I7VfG291Q9eP363RvmpiteibNdpUTTrSi7W5l+K+rp9+XPN+PZvz+5Oa/q0H
9Pf9tKbf6xHtx1/U9Es9n/31y5r+rSe0v35e09/1nPa7r2r6/29dPfmjpl//
0emRr2v6vR5wwq7e+/l6nV54r0bbq5H1jq/W7MXrIfVmr9T0Zz2a89OauiT8
Xkm/cP3ojQa0+fv2CHuDexf2A+u/Wn+8NnuT9hx7jdmhe2XewzJ2kz0za7c1
3Fr/r5K9M2uitdA9NOuh69H9xUlL+od6dzP4m5J+p34bDu9T8vv/zOOVJlmB
e2/eQ2Qe7R6c95p4z8kyTe59tB58X6Nf9HzWG+uPveT9Eu3/Wo23frXrB+pf
/e7hJb3FHmN++lunb55j/Mgmnlq98nRN1mLmYLbwVI3eMGNQHz1fo2f03HrV
l+EzmnhWvZL9V31Wunr3TU29bLv69W1NvdDTqg/U9/rzk0vq5Xc1+k2P696x
e+L2wrbrZ9YX89vDSvTH2d18OKXk3gXvYXDvb4xOj5jXeD1OLbmXw3s6XE8X
dfrz/Rovpedyb9H7B71HiP9G6suParziV1090NPJ15TktdPWXP+9u/lpxuH6
u7h0Xq/N37+yZL6aKbgezympB2YQ1pdzu99PD+d8v6Qk/x1SM5+9J9X8eHBN
vrxXVw/1oHrFq0p+DzME6+PZnf7+oGZcD6i+/rB2XrAX/ftv+NYmntJ6oYd1
/Gre/38Ix3iX
            "]], 
           Polygon[CompressedData["
1:eJwt12eYFUUWANA3w4y75oCIqyJmVJJLcpWMgJJVcpYsGQVxWRTJgkQDYiAo
UQEByTlnFlEUAQkigqhgAHRBFN1zv34/7lf3nroz7013VXXPrS27Pt4lM5VK
bRXZ4okcqdSUrFSqDHw6I5UqzXax2mwC+5iNY5+yOmwi+4SNZ9+yJmwh+5bN
Z2vYI2w4W8FeZM3ZVFaWdWdl2AtsHmvCXmXN4jOMl/Is4yXGXca3jf/U111f
f1/4LfV3oilbxL7Ts8DPdmOzWC02kNVix1ljtoAdZ/NYT/YBq8OGsbqsBZvG
yrEerCxrJh8rf12ckJ9iW/TV0DdGvZm/wuqzSex+1pEVZw3YZPYv1omVYM+y
2awuG87qscfkQ+IaiaPyH9hIfcv0tVdP4p3Zi2wRa8XGsbZsEFvAWrC3WGvW
l81nTdlrrDkbzhaztmwi68A2GC/iGcZs43rj88Y5+hrqG61urK+D8aD6e/kB
Y3v1c/rm6mukflndxFx+92U8HyfWpO/V6/JV8m7ymfqe0TeWrWZPsVmsJ3uT
3ceeZhNYezaCLWVPsndZJ9aHfcgas1dYU7ab7WGT2TE2hw1jS1g79g7ryLqw
91l11o9VZxXlveT/FofSf+MYfSv1dVXP4D3Ya2wFi03zPuvORrHlrAObzLqw
wWwha8neZm1YZzaD1Yi1y2qw5ewh9iLLlPeP+2Gswkax1fqGscKu6eRYW2KD
uWfN/RJrSn1R7BX1Z6KQvnfZO3EfzfeM/Sl/XD5evjP2kP5+6gpipHwdu2Cu
qJ+dEddGbDLXm52VN5dviFzfOv0D1DvEYLaRjWIV4n6zW1gdlpcV9Psm8gli
nblnzD0a301+n7y1vsKx7tlEVpi1YoXYNHaenWX55Dfzw8aGbBb7Uj1TX3Gf
MTv2sNhi7vlYr/Jf5T/KfxJd9ZXQNzfWtNhqrg//r/wx+Zvy7bG39Z3NSu5x
3NfOcY3FFbGeeT55Y32NxCPxd7G7WRP1XfqL6ZvFZ4rN5p4zt0i+Xd5XvlLf
EH3365sX61dsM/eCuUGxHrOSczTO0yxzH4lP2Vvm97Np5nawz9jb7ACbzj5j
n7NJ7CibHfc0fp6NiL+TjWXvyI/IvxKXpc/Vl/WMFtep/2Z+l75t8lpsrHqr
ntfi+cBqstfZFvYqa8feYw+z51hl1ijuFXuANWP3sE2sGnuZrWUjWFs2nVVm
vVkltpFVje/D1rDhrGtcT1aTDWA12QX2J7vSeJXYy7YbH2Vv6Numbww7x55g
G9k5tp6VYpexG9k+cQnbyXazceqD+t6LfR5nuOjF7jF/C19r3Bl7hu1Qv6Fv
unv5DVvJfman4vxWfyJejT2pnqCvQHby7Irn1VpzPaJf3ky+ItapvuX6/lJn
iANxr3kuPUPUu2Jdqnfrm5hK9njR9J4amJ3s98YiL3uQNdd3r76j7Es2L9Yy
W8XKsCtYHlY91gL7hX3P1rEs8RE7zb5la+JsinXESrPL2U3qqvF8TiVn0CXs
elY+IzmPyrIr2c2sJrs8zlh2DbuNlWE5WSWWk93OyrFrWbm4ryxvnBfsCpY7
zjVWIjN5DsWz5359F7PcrGxG8v5yiO1nM+P5yZaw2iYOsDmZyf2J+7REX1nW
n82N51g802Itsffi/GcL2dfsEPuQnWEr2WJWhvVjc1hvtp/tY++zE2wRO8WO
s9UsI84YdoQdZHPVp/WtYL+rp8e9U99tPBfr0PgFnyE/yRfr6yifJp8qTst/
jXNN399j/6pLx7kRZ2LsZUkuVpIpU1nqM7EuWc44P9kqE5XZS+pl+gaxP+Lv
T6/3WPfn4xlkfJgPky/ng/WtZJXYULaUDWQLWOn0eTbaNZ+fIznnSqXP21HZ
yZkXZ+QD6efL8OzkvIwz/MH0mTkiOznP47wumT7TR2YnZ/cKUZENYUt87gCf
u4yVZwPZPNYn3v/iuS2Os8Hs8bjO+n5kW9ml4nP2KzvB1quz4/nIlrJybID6
w3gXYv+L/czzxFlvPGPuN+NJvll+cez1VPK8K5Le3wOyk2ffGfEdW8tyxNkR
15n9xLapLxN7Usm+/1l8pL4qMzkDMtWnxE711bEuWA71afGx+hpxiJ33+35g
W+JMi3OCHWOH2fxYK773avYVa8Q+YIfZLDbE9xyanay731LJM/cLfQ1iXUYe
a473YvlZPdaHVWH/YQVYffYCq8rasDvZQ+xJVoz1ZgVZA9aXVWM/smNsObvA
trB9rD6bFuczmxLv3uw2Vpq1ZAXZXlaPTWV72WTWmt0R7zWsHSvKWrHbWXnW
lhVhddlNrChrwO5gNdj1rACrxW5i1dh17F5Wjd3AqrPcLD+rwW5kNdk/WEH2
GMvDXmKFWZtY9/HOwGqxG1ghVpvdzIayQqx1rHHWMK6f+uqsZD769pt7In3+
Fc9M3j/iPaSTuqOoGPdBfcxcHb/vRlZEXp/dbq5erFtWjDVkd7Kn2b3sUdaT
VWALjX/FvZD/aVyQkbxzFstK3iMHZSfvnyfEV2xxrBc9G/RXZteyO1gFlot9
z46wJew828h+YEfZMvYH28xOsq/ZUvY728SmsuJZyXvuYJ87JdZj+lm7KjM2
hu+q92Gei92prqi+zlST9PvaXaxy9MS10ncPq8aeUpeK/wPUnbOSd494B/nG
XHt9d7FH5F3YA+aasltZKdaCFWA91N1F7biH7KS5JnFuspJxv1h+cx1YPlaF
dWUPsj2sLpsS+55NirOd3c2qsm6sJBuffm7Nzkze2eLd7Ul1O3GYPat+SN//
AX0rE9E=
            "]], 
           
           Polygon[{{1138, 1137, 745, 391, 392, 746}, {1122, 1179, 537, 327, 
            326, 727}, {1148, 1221, 632, 437, 436, 761}, {1158, 1232, 658, 
            467, 466, 775}, {938, 1080, 634, 763, 1277, 937}, {1130, 1129, 
            738, 376, 377, 739}, {1144, 1143, 752, 406, 407, 753}, {1154, 
            1228, 645, 452, 451, 768}, {1273, 933, 932, 1272, 757, 758}, {
            1165, 1164, 785, 511, 512, 
            786}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{315, 533, 1280, 316, 545, 341, 1375, 560, 356, 1380, 575, 371, 
          1385, 589, 386, 1391, 602, 401, 1399, 615, 416, 1411, 628, 1324, 
          431, 641, 1336, 446, 1427, 654, 461, 1429, 667, 476, 1434, 681, 491,
           1443, 696, 506, 1453, 711, 521}], 
         Line[{317, 534, 1281, 318, 546, 1290, 342, 561, 357, 1381, 576, 372, 
          1386, 590, 387, 1392, 603, 402, 1400, 616, 417, 1412, 629, 1325, 
          432, 642, 1337, 447, 655, 1346, 462, 1430, 668, 477, 1435, 682, 492,
           1444, 697, 507, 1454, 712, 522}], 
         Line[{319, 535, 1282, 320, 547, 1291, 343, 562, 1300, 358, 577, 1309,
           373, 1387, 591, 388, 1393, 604, 403, 1401, 617, 418, 1413, 630, 
          1326, 433, 643, 1338, 448, 656, 1347, 463, 669, 1354, 478, 1436, 
          683, 493, 1445, 698, 508, 1455, 713, 523}], 
         Line[{321, 536, 1283, 322, 548, 1292, 344, 563, 1301, 359, 578, 1310,
           374, 592, 1316, 389, 1394, 605, 404, 1402, 618, 419, 1414, 631, 
          1327, 434, 644, 1339, 449, 657, 1348, 464, 670, 1355, 479, 684, 
          1361, 494, 1446, 699, 509, 1456, 714, 524}], 
         Line[{323, 723, 724, 1284, 324, 549, 1293, 345, 564, 1302, 360, 579, 
          1311, 375, 736, 1468, 737, 390, 743, 1471, 744, 405, 1403, 750, 751,
           420, 1415, 757, 758, 1328, 435, 764, 1475, 765, 450, 771, 1478, 
          772, 465, 671, 1356, 480, 685, 1362, 495, 700, 1367, 510, 1457, 783,
           784, 817}], 
         Line[{325, 725, 1464, 727, 326, 550, 1294, 346, 565, 1303, 361, 732, 
          1466, 734, 376, 738, 1469, 798, 740, 391, 745, 1472, 801, 747, 406, 
          752, 1473, 804, 754, 421, 1416, 759, 807, 1492, 761, 436, 766, 810, 
          1493, 768, 451, 773, 813, 1494, 775, 466, 778, 1482, 780, 481, 686, 
          1363, 496, 701, 1368, 511, 785, 1485, 787, 818}], 
         Line[{330, 540, 1286, 331, 554, 1295, 350, 569, 1304, 365, 1383, 583,
           380, 1388, 596, 395, 1395, 609, 410, 1406, 622, 425, 1420, 635, 
          1331, 440, 648, 1341, 455, 661, 1349, 470, 1432, 675, 485, 1440, 
          690, 500, 1450, 705, 515, 1459, 718, 528}], 
         Line[{332, 541, 1287, 333, 555, 1296, 351, 570, 1305, 366, 584, 1312,
           381, 1389, 597, 396, 1396, 610, 411, 1407, 623, 426, 1421, 636, 
          1332, 441, 649, 1342, 456, 662, 1350, 471, 676, 1357, 486, 1441, 
          691, 501, 1451, 706, 516, 1460, 719, 529}], 
         Line[{334, 542, 1288, 335, 556, 1297, 352, 571, 1306, 367, 585, 1313,
           382, 598, 1317, 397, 1397, 611, 412, 1408, 624, 427, 1422, 637, 
          1333, 442, 650, 1343, 457, 663, 1351, 472, 677, 1358, 487, 692, 
          1364, 502, 1452, 707, 517, 1461, 720, 530}], 
         Line[{336, 543, 1289, 337, 557, 1298, 353, 572, 1307, 368, 586, 1314,
           383, 599, 1318, 398, 612, 1320, 413, 1409, 625, 428, 1423, 638, 
          1334, 443, 651, 1344, 458, 664, 1352, 473, 678, 1359, 488, 693, 
          1365, 503, 708, 1369, 518, 1462, 721, 531}], 
         Line[{338, 730, 1465, 731, 339, 558, 1299, 354, 573, 1308, 369, 587, 
          1315, 384, 600, 1319, 399, 613, 1321, 414, 626, 1322, 429, 1424, 
          639, 1335, 444, 652, 1345, 459, 665, 1353, 474, 679, 1360, 489, 694,
           1366, 504, 709, 1370, 519, 790, 1486, 791, 792}], 
         Line[{520, 710, 782, 505, 695, 1442, 490, 680, 1433, 475, 666, 1428, 
          460, 653, 1426, 445, 640, 1425, 430, 1323, 627, 1410, 415, 614, 
          1398, 400, 601, 1390, 385, 588, 1384, 370, 574, 1379, 355, 559, 
          1374, 340, 544, 1371, 314, 532, 722, 793}], 
         Line[{525, 715, 1484, 786, 512, 702, 1447, 497, 687, 1437, 482, 672, 
          816, 779, 467, 658, 1479, 814, 774, 452, 645, 1476, 811, 767, 437, 
          632, 1474, 808, 760, 1417, 422, 619, 805, 1491, 753, 407, 606, 802, 
          1489, 746, 392, 593, 799, 1487, 739, 377, 580, 797, 733, 362, 566, 
          1376, 347, 551, 1372, 327, 537, 1463, 726, 794}], 
         Line[{526, 716, 788, 513, 703, 1448, 498, 688, 1438, 483, 673, 1483, 
          781, 468, 659, 1480, 815, 776, 453, 646, 1477, 812, 769, 438, 1329, 
          633, 809, 762, 1418, 423, 620, 806, 755, 1404, 408, 607, 803, 1490, 
          748, 393, 594, 800, 1488, 741, 378, 581, 1467, 735, 363, 567, 1377, 
          348, 552, 1373, 328, 538, 728, 795}], 
         Line[{527, 717, 789, 1458, 514, 704, 1449, 499, 689, 1439, 484, 674, 
          1431, 469, 660, 1481, 777, 454, 1340, 647, 770, 439, 1330, 634, 763,
           1419, 424, 621, 756, 1405, 409, 608, 749, 394, 595, 1470, 742, 379,
           582, 1382, 364, 568, 1378, 349, 553, 329, 1285, 539, 729, 796}]}, {
         Line[{820, 1121, 532, 819, 1280, 1031, 821, 1281, 1032, 822, 1282, 
          1033, 823, 1283, 1034, 824, 1268, 1284, 1035, 825, 1464, 1122, 1179,
           1463, 826, 1123, 538, 827, 1124, 1285, 1036, 828, 1286, 1037, 829, 
          1287, 1038, 830, 1288, 1039, 831, 1289, 1040, 832, 1465, 1125, 1041,
           1126}], 
         Line[{834, 1180, 1371, 833, 545, 835, 1290, 1042, 836, 1291, 1043, 
          837, 1292, 1044, 838, 1293, 1045, 839, 1294, 1181, 1372, 840, 1182, 
          1373, 841, 553, 842, 1295, 1046, 843, 1296, 1047, 844, 1297, 1048, 
          845, 1298, 1049, 846, 1299, 1050, 847}], 
         Line[{849, 1183, 1374, 848, 1184, 1375, 850, 561, 851, 1300, 1051, 
          852, 1301, 1052, 853, 1302, 1053, 854, 1303, 1185, 1376, 855, 1186, 
          1377, 856, 1187, 1378, 857, 1304, 1054, 858, 1305, 1055, 859, 1306, 
          1056, 860, 1307, 1057, 861, 1308, 1058, 862}], 
         Line[{864, 1188, 1379, 863, 1189, 1380, 865, 1190, 1381, 866, 1309, 
          1059, 867, 1310, 1060, 868, 1311, 1061, 869, 1466, 234, 797, 276, 
          235, 1467, 870, 1191, 1382, 871, 1192, 1383, 872, 1312, 1062, 873, 
          1313, 1063, 874, 1314, 1064, 875, 1315, 1065, 876}], 
         Line[{878, 1193, 1384, 877, 1194, 1385, 879, 1195, 1386, 880, 1196, 
          1387, 881, 1316, 1066, 882, 1468, 1127, 1128, 883, 1469, 1129, 1130,
           1487, 884, 1131, 1132, 1488, 885, 1133, 1134, 1470, 886, 1197, 
          1388, 887, 1198, 1389, 888, 1317, 1067, 889, 1318, 1068, 890, 1319, 
          1069, 891}], 
         Line[{893, 1199, 1390, 892, 1200, 1391, 894, 1201, 1392, 895, 1202, 
          1393, 896, 1203, 1394, 897, 1471, 1135, 1136, 898, 1472, 1137, 1138,
           1489, 899, 1139, 1140, 1490, 900, 1141, 749, 901, 1204, 1395, 902, 
          1205, 1396, 903, 1206, 1397, 904, 1320, 1070, 905, 1321, 1071, 
          906}], 
         Line[{908, 1207, 1398, 907, 1208, 1399, 909, 1209, 1400, 910, 1210, 
          1401, 911, 1211, 1402, 912, 1269, 1403, 1142, 913, 1473, 1143, 1144,
           1491, 914, 1145, 1404, 1270, 915, 1146, 1405, 1271, 916, 1212, 
          1406, 917, 1213, 1407, 918, 1214, 1408, 919, 1215, 1409, 920, 1322, 
          1072, 921}], 
         Line[{925, 1323, 1073, 923, 1324, 1074, 927, 1325, 1075, 929, 1326, 
          1076, 931, 1327, 1077, 933, 1273, 1328, 1078, 1170, 1492, 1148, 
          1221, 1474, 1171, 1150, 1329, 1079, 1172, 1152, 1330, 1080, 938, 
          1331, 1081, 940, 1332, 1082, 942, 1333, 1083, 944, 1334, 1084, 946, 
          1335, 1085, 948}], 
         Line[{947, 1424, 1226, 945, 1423, 1225, 943, 1422, 1224, 941, 1421, 
          1223, 939, 1420, 1222, 937, 1277, 1419, 1151, 936, 1276, 1418, 1149,
           935, 1275, 1417, 1416, 1274, 934, 1147, 1415, 1272, 932, 1414, 
          1220, 930, 1413, 1219, 928, 1412, 1218, 926, 1411, 1217, 922, 1410, 
          1216, 924}], 
         Line[{950, 1227, 1425, 949, 1336, 1086, 951, 1337, 1087, 952, 1338, 
          1088, 953, 1339, 1089, 954, 1475, 1153, 1090, 1173, 1493, 1154, 
          1228, 1476, 1174, 1155, 1229, 1477, 1175, 1156, 1340, 1091, 955, 
          1341, 1092, 956, 1342, 1093, 957, 1343, 1094, 958, 1344, 1095, 959, 
          1345, 1096, 960}], 
         Line[{962, 1230, 1426, 961, 1231, 1427, 963, 1346, 1097, 964, 1347, 
          1098, 965, 1348, 1099, 966, 1478, 1157, 1100, 1176, 1494, 1158, 
          1232, 1479, 1177, 1159, 1233, 1480, 1178, 1160, 1234, 1481, 967, 
          1349, 1101, 968, 1350, 1102, 969, 1351, 1103, 970, 1352, 1104, 971, 
          1353, 1105, 972}], 
         Line[{974, 1235, 1428, 973, 1236, 1429, 975, 1237, 1430, 976, 1354, 
          1106, 977, 1355, 1107, 978, 1356, 1108, 979, 1482, 260, 816, 295, 
          261, 1483, 980, 1238, 1431, 981, 1239, 1432, 982, 1357, 1109, 983, 
          1358, 1110, 984, 1359, 1111, 985, 1360, 1112, 986}], 
         Line[{988, 1240, 1433, 987, 1241, 1434, 989, 1242, 1435, 990, 1243, 
          1436, 991, 1361, 1113, 992, 1362, 1114, 993, 1363, 1244, 1437, 994, 
          1245, 1438, 995, 1246, 1439, 996, 1247, 1440, 997, 1248, 1441, 998, 
          1364, 1115, 999, 1365, 1116, 1000, 1366, 1117, 1001}], 
         Line[{1003, 1249, 1442, 1002, 1250, 1443, 1004, 1251, 1444, 1005, 
          1252, 1445, 1006, 1253, 1446, 1007, 1367, 1118, 1008, 1368, 1254, 
          1447, 1009, 1255, 1448, 1010, 1256, 1449, 1011, 1257, 1450, 1012, 
          1258, 1451, 1013, 1259, 1452, 1014, 1369, 1119, 1015, 1370, 1120, 
          1016}], 
         Line[{1030, 1169, 1168, 1486, 1029, 1462, 1267, 1028, 1461, 1266, 
          1027, 1460, 1265, 1026, 1459, 1264, 1025, 1279, 1458, 1167, 1024, 
          788, 1166, 1023, 1484, 1165, 1164, 1485, 1022, 1163, 1457, 1278, 
          1021, 1456, 1263, 1020, 1455, 1262, 1019, 1454, 1261, 1018, 1453, 
          1260, 1017, 782, 1161, 1162}]}}}, VertexNormals -> CompressedData["
1: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
81e8uNqG/TnqblMn4pmYWcvoz1oJKoz+vO5EqTPiH+++l4v4LQZdGP35eVqd
HO43J6LhMO53hrvNHftzkt79NuRn5JMhoz9veHOM0Z9/LBD5jHya/uFh9Oex
2W8YesPgMfsaej8SPZtHDL3xueKDG+oNqZotV+h9Si75HGDojcNNzzJQbzRL
XOml9y8B2dcMvbEohq0J9UbAacFkel8Tfrs+O7yveysVElFvVK6Y3EXvd8Jp
kdSB97vncORb1BvneCTrqR4gwom5J1EPcETsCUG90bqtdobqB7It0bcK9QP1
R8b/9t7z04XEHtQbKv6+kxhPxFPKMN5QtTED9YYGs2cF5j9iWX4C88tenM5E
vXH4bIUy4nmaqN2EeIyqeBh6o1oy9jPiN8v8wNAb2b3bc1FvuF7d0oT7vbfs
NUNvhFzovoV6o+uhhhPyE5ZySBD5adhs14x640+5rDjy+fKSSyLymfX9QzDq
50jfvkqq98i9ob3iqPfErtxSQ/0ctZ/DiOpDUpoTaYb6MOdqZzPqZx9mi69U
TxL9gP5tqCc1XvNWoH4eTJg+SPUnccgebkf9+Wdqox/q5/qZTpZy4yaiU/D+
GurVL9bnl6N+Vg3NkKX6lqQbpImjvj27//ZB1M9hBUpJVA+Tid0XGXqY9g1A
/ez0973n6N/3njZJfo9QPzszsSdg/Pp1Vz5gPHvQiDTqZ8tNxzZjfstyWTHM
7xKz6CXq5yixh5NUPxPnPYmXEc8uzZk61M+bNlhoIP6Pz4ubEL9R0INO1M/X
h7zQL5B10W/kcb+v9Pw0UT8X1+zRQX4Of/LXR35+77JDP0J+c3iUIZ/y3bGi
yGersSwz+kEl14Wm1L8Q7rXf7dC/vH1Ulo5+8GTo7mXU75DEw+x86Hc6s4XP
ox/UqH5XSf0RWXCySgH90VcjizL0gzdUBH5TP0X8XTkYfnDz57tZ6AfH066u
pf6LxIsrp6L/sjabeYx+sI1vPT/1a+RB9sKv6Nesl79ein5w0Dgmivo7MnQ+
2fuvH8z/t/eeEXUBmugHx8Q+RWL86V6vBxifd3F2FPrBj/ae6DfJ0vNqnzH/
0KumIvSDGUt+rkY83vMcExHPKs0rtegHDzdyop8l06FBiYjf4VDHZfSDuae9
8nC/6S7yDD+4sao9B/1g0drZc5Af6TXyC5GfJWlr2dAPzvjyor8m+7jcjiOf
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
gEt53vKlK7vA4+E8e2eDUgjlDc3hXt0Os8ubRa88bIM7r1eoC9VXwE+rqbze
is7/mWtx/Z1rhf6da4ke6ty940sx2XK6Nf3420o4/MZ6Xk1iP1hDFnv8xkZy
/YH9oPG3CvgTLiU0ytELMto2N5dVtBG24aXcXLblkO2lfjnveydkpzm9a+Pv
ItaL2uK+F5TCrak490Vz2mE5t5dKsh7V83qvA7l2loDrxgHbLXdaYEDv2CK1
hl7C9Lz4blleEWT6H5TYOdAIbouHDbYMUz/1nhjqORZAJq/Pak+3OnB+Yj03
0K8f+u7uFHm8NRYmFA4k36d1rdzitzzwbh+EN9pd2lWaCMl2BfNCU5pAkVt7
/1eKl9tdyn3FQCrIXslUClvYCm29bNHMaV0Qb1mU3mOUBSdX3Fm7N6od3s9h
/bRIrx2W2HcNy5XmwVTN1eJFMV3/M6diFf9/51SxldsdV18pIRoqYeSSVA6w
SG24Hyw8CC+6tyxdZd9E1OO8NEK0cuBJsvbvxtV9sDaaQ3nNtXbCvap0SCsn
GxZn2d4qzuqCd9oQIJLSRd4enlPpfvkblNQE8xoHtsMxvdzUhu4eQqyW1Qhx
ZcFC+Kqe9KMFDtVEldua9JH7LSor5iRkQEH2wsCm602wzj3755RpPzGaSP1+
1SsdvPK//QoergOTSzXfYr/0w3Kvaj73r26wkt8j9D3OqdzKJu997YOMt+16
peALZ4/PjUv+3gRtgVN37+7pBfcNcOqjbjAc+WBgdkOhFQ6qMzeu4aO6KDZd
T93lPRgJn1t9c6IdTn0d+WCa1Q7fE3c5PJ78AvOEl5v7S3fj/fID506UP+//
PXfaG2F05EZ+CRGd2nzT57g/7Er+M/o4fhCW935TrKN6T3GxSeJr5dfQ2Dpr
4uP7PvCt1d2jXtFO1KTsz6y//QESry/kE9raDVxV3KEavN1k/nYbmZWpkbCy
dmhy2Wg7XNAIMS9S7CXTAVdS9HI+AW/k4MClTa2gPq95wiSsj8zepLv5lFYU
PJ/kfN9T3wRRB1xdsoP6iR7T9KVynyhw9jHt0txcDy0/IpzpOkSUyz6g6+Tl
gb4BXF+43vInzQPJPNmaNA85fWRjLObhvTNhQr8Xnl+50E6/l7S/4h/F7xVO
C3hJccJ28+4jFCdR6C1h4aU4V0QGKtF9wYLiD1l0X4RHhkkY90X7G2OO9Oq/
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
OzT64Hj+H1F7tHc=
       "]], {
     Axes -> True, AxesLabel -> {$CellContext`u, $CellContext`v}, ImageSize -> 
      300, Method -> {}, 
      PlotRange -> {{-0.8599998771428572, 0.8599998771428572}, {-1.53999978, 
       1.53999978}, {0., 1.9999994285714693`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{0.5915240547030066, 
    0.26524223280007353`, 0.41384768375569364`}, {0.26524223280007353`, 
    0.8277660095513921, -0.2687303498341568}}, $CellContext`scale$$ = 
    0.5, $CellContext`tick$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Grid[{{
             Text["u = "], 
             Dynamic[
              Part[$CellContext`p$$, 1]]}, {
             Text["v = "], 
             Dynamic[
              Part[$CellContext`p$$, 2]]}}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]], Appearance -> "Vertical"]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.5}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {0.4, -1}}, 0}}, Typeset`size$$ = {
    400., {222.5, 229.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 
        0, $CellContext`p$$ = {0.4, -1}, $CellContext`plot$$ = 
        0, $CellContext`r$$ = 0, $CellContext`scale$$ = 
        0.5, $CellContext`tick$$ = False}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> "Quality", 
            AxesLabel -> {$CellContext`u, $CellContext`v}]; \
$CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fup$$/2), 
               Background -> LightRed], Green, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fvp$$/2), 
               Background -> LightRed], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 1]/2), Background -> LightRed], 
              Orange, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 2]/2), Background -> LightRed], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Grid[{{
              Text["u = "], 
              Dynamic[
               Part[$CellContext`p$$, 1]]}, {
              Text["v = "], 
              Dynamic[
               Part[$CellContext`p$$, 2]]}}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]], Appearance -> "Vertical"]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {0.4, -1}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{658., {261., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}, 
   3.6029766202534933`*^9, 3.6029766993350167`*^9, 3.6029767626836405`*^9, 
   3.602976909645046*^9, 3.602976978832003*^9, 3.6029770387744317`*^9, 
   3.602977120111084*^9, 3.602979953312134*^9, 3.602979996398598*^9, {
   3.6029800268143377`*^9, 3.6029800892239075`*^9}, {3.6029802732474327`*^9, 
   3.6029802930755672`*^9}, 3.6029803470036516`*^9, 3.602980586694361*^9, 
   3.6029810202271576`*^9, 3.6029810539220853`*^9, 3.602981172303856*^9, 
   3.602981314177971*^9, 3.602981357660458*^9},
 CellID->64481444]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
This demonstration provides a visualization of the tangent plane basis and \
the reciprocal basis at points along a few sample surfaces.  The tangent \
plane itself is visualized and a control is provided to alter the position of \
the tangent plane along the surface.  This allows the user to observe the \
normality of the tangent plane basis vectors and their alternate indexed \
reciprocal vector.  The user of also able to visually compare the \
orientations of the tangent plane basis vectors with their recriprocals, and \
note how how these pairs of vectors are not neccessarily colinear.\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.602973703183647*^9, 3.602973830097906*^9}, {
  3.6029797556038256`*^9, 3.6029798005523963`*^9}, {3.602979838314556*^9, 
  3.6029798765227413`*^9}, {3.602980610648731*^9, 3.6029809118079567`*^9}, {
  3.602980941967682*^9, 3.602980959508685*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1, $CellContext`fn$$ = 2, $CellContext`fp$$ = {
    0.4, -1, 1.1600000000000001`}, $CellContext`fup$$ = {
    1, 0, 0.8}, $CellContext`fvp$$ = {0, 1, -2}, $CellContext`p$$ = {
    0.4, -1}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1: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
8Aze4PbDM/g6Hy88g9eWFPzAM/jtzic8k+f+qvPahx799hvBM/iUoZObHm3b
HDyDf//OHSse/XZ78Axe5JOtwXPsV/J5tyx4Bi/i5yvBM3gRZ14MnvU8BZ7j
ud4ensG/6f3DM/gotweewS90++EZ/CYfLzzHOY7zA8/gdzufVX9uyY78RVfD
3CO3iT+3ZMdtPmzW3GkbxZ9bsn98qbPxlsHrxZ9bsuvyPH+5+HNL1j2fF38X
f27JpuT+0yz+3JL1zP1wjvhzeZ5S9ecW99s54s8t2T3ef9WfP7J/SWFP1Z9b
sqvd/qo/t2Qf+Hir/tySHeP8VP25JTvC+azy3Jw9PPyxuwaeuFV4bs6enPnK
UwMfaxeem7ODln7jriuGrxGem/28Zqnw3Jwdn9uzUHhuzr6bj+tPwnNzdn/O
z3ThuTxPqfLcnE329lWem7NR3n+V5+bsaLenynNzdrPbX+W5OTvQx1vl+SN7
nJ8qz83ZDOcTnsm3T/z8pF/WJmwJnsE/88Cfn6jVNgTP4EWetip4Bv8g32++
EjyDD8z7mR88g3eb+//tnwk+u1X+++Jg+Iz9RN7/pOATfM/zRT/wCX6yPxc+
wd92O+ETvLePCz7BBzgP8Al+gvMmfmsJv7WE31rCby3ht5bwW0v4rSX81hJ+
awm/tYTfWsJvLeG3lvBbS/itqd9SX0nEYUvEYUvEYUvEYUvEYUvEYUvEYUvE
YUvEYUvEYUvEYUvEYUvEYUvEYdM4TL0qkVdYIq+wRF5hibzCEnmFJfIKS+QV
lsgrLJFXWCKvsEReYYm8whJ5hSXyCqufV7RbIk+2RJ5siTzZEnmyJfJkS+TJ
lsiTLZEnWyJPtkSebIk82RJ5siXyZEvkyaZ5MvXUxL7PEvs+S+z7LLHvs8S+
zxL7Pkvs+yyx77PEvs8S+z5L7Pssse+zxL7PEvs+030f9Wmt88T5gNRzwLVu
A671GXCtw4BrvQU8UVexRF3FtK4CrvUTcK2TgGs9RMcr9Q3T+obyCc/U2ah7
SD3NqKdJ3cyow0h9zKjnSB3MqINJvcuoL8Gnno/AJzj1LqlTRT9SjzLqUVJ3
CjulvhTjkjqSUUeCN36LvLf0z/tePqxtaMP27NyezW8Nm/9W8PaH2y76eEO/
HdmvHp3ad/BPyvohdeVPHHLwe/MWvxm8rV0+64J+F7yRrRk+4J6OKWU9cLfX
Uf/wXMtfh83vCt6u9TrV78QP73A7D83tL/0QOz88/Yyzpk3cFrxh5+Ujf/7v
Y3p1BW9qJ7y1up1nLfrH7R1T9gRv2Fms7+8Eb/PnnD9j9ujNXkcq4ye/xX6h
jJ9v9n5669CGLVnf66as7TmyK3jrOW/DgQ39tmbD/VwD3o4ZfehprbO3Znue
fmbo4v5bg7ez+l4wot8FndnB8x4ZMHHq5pjXX37hRzePbu3MHrpxw3+M6bU5
+HzK61HnSPxsdvtfffnXzw58bEPwucbtX5f71evBJ/Z/c/yO7r1Gbg4+sf9i
tx8+sX+1v3f4xP5FL4/vmrd4d8zrr7j92z/1vf0G/6TkeZ+vPPGL0a3t2VU/
OPxPV7xc5gOf+nDtzNmjX/fzlx3BM7993E/gedjX/2X30IaNXmfoCJ5H9Rj3
iYZ+Hdlpm8/6Qf9x7cHzj/7rqcGtszuy63c/fl+fprbg+d6Rr13e74JNWd/f
jBwweJ9yneryetSTkg/s6/Z/YtC4528ZvDJ4PsrtL86tWoNn7P9qHgfagmfs
v9bth2fs37H8tYv7j+sMnrH/B9fd1q/XyJ3B8xS3/+Q/9b98Wvdynbo3n0dr
/VyjzG8X5PNlndcPt4R9xbxYn/U8pOvMETtfD575Lfa/rwXPjz+45oOhDW3Z
4rs2nre4/5rged7Qg45p6Lchu/PBOfv1GrkieF751hfOa529wetIy2SdavX6
f5nf3uf2F3FgcfC80O0v5vvS4Bn7i3m9MnjG/vfcfnjG/uMHPXBbR5+O4Bn7
zxlw8p97nLoteF7l9m/6VrfnBp5Y5l1H5u/91eyk3R9f0jWm3K9dnL/fZdnK
2/7t4SuGdwTPxXtcnr03feO2Hqe2hX3FvF6RHZmfg68Knvkt6gxLg+dinq7O
vpzP08XBczEf13g8eSF43un1qJmyXzvK7R+d++3c4HmY239N7p9/DZ6xv/DD
JcEz9vd1++F5tduP/8Mz9k+aeXf/ETs3Bc+D3f5z8/x5R/B8YW7Pwmzpc4N6
Th2xVfLbRdnvz/zwyMH7vB4898r7fzFb9Fyfof3HtQbP1+X+tjj7XK5PaAme
F+V+9VLWK58Xfwueo66T13Oy4Hl+7idLs5/lfj47eH7T61HPSP1huNtf8PlI
8DzT7S94mxM8Y/+vcn4WBc/Yf6rbD89/dfu75fuptcEz9rd6/IfnZrf/qde2
vTRvcWfwvD63vyH74YNTz582cYvs16ZnV/dd/cCYXmWd54bcnqeySTfOm9fj
1NXB8x4/fy7WqSXB87P5eGdn0/P3tSDsuz7vZ242KB/XLKmb8XtJ1M16zCjs
PCPvf3Lw+a7bOTjHnw0+b3I7j+3X0bfXyObgEzvPdjvh82m3s9hfrw4+R7ud
x+X9tAdv/dyuQ3ydqtYT5trx3h7eHin693y+5G2Ln88PEd4uK+y3fm4/vLUV
47Vzfbzwtc3rS78XP4x9bR4Pfxu8fdvtPMX5h7eH3c6H/H3BG3YOFt6ucDvv
dn+At/Vu51XuP/BWxNulNtP9EN6OcbvWut/C27zCz71usDZ4u7KYF647Kud1
j2Ie2WSfR/D2aDHvXHc0J+b10GKeet3pkeBzu9eRZkj8/Ivbf4fHgcgH/Leo
32bBJ/b38DgDn9g/UOb1Pm7/Ao9j8In9v/G4x7w+3+1f4nESns8s4qoRV+F5
vyIOOz+bgmfsJW7D8+NFnLe+sk6NL9YFY12A5yJuLzPWEXg+olh37Du+7sDz
KK8jPSj5wCC3v5eva/C7r9s/1NdB7Ob3ZF834Rn7D5d16la3/x1fl+EZ+5f5
Og7Pfd3+E33dh2fPc4w8AZ6zIq+wcz2vgOfHijzEyEPgGXvfk7xrZ5HneP1t
ZfA8v8iLrI/nRfDcUORR9p7nUfC8w+tIj0h+u8LtP9rzNHj+i9t/h+d18Iv9
L3geiN38vi1515tu/36eZ8Iz9u/jeSk83+P2j/M8NvLbIu818l54vq3Ik22s
58nwfFWRV9t2z6vh+aIiD3f/LPcR2Iv/w3OR771u3/U8H559X2OH+r4Anp/w
OtLZsl9rcPsP930HPN/q9l/n+xR4xv7P+L4GfrF/lOwj+O3t6xE8Y/9pvs+C
5x5u/5W+L4Nn34ca+zh4LuJJp7Hvg+eji32irfJ9IjwXcWarXST74p3FPtTY
h8Iz9pK3RN5V7HOtxfe51Tr5Nq+Tl3WG4W7/NN9Hw/MZbv+Bvu+GZ+zf5ft0
eMb+C2VfjP2Hex0Au/kd4HUDeJ7n9v/E6wzw3Ou0vpNnj+6yk3+98I89nnk/
eEZ3Rr0CntcU9Q2jvgHPC1y/p3Wbp4r6iV3m9RN4nlLUW+wDr7fA5zFeX3pX
6l093c7DfLzwiZ1Pev0HPrETf4BP7DxU6jYz3c67vB4Fj9g5xOtXwlsGb/jJ
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
m12HCo6elvtUmm9wLwic+03cY6mel3XY284/ODpwdMPg6JzRv4Kj40WvCU4c
i3tons9wH417SuDct+JeDTj3g57weyDgL3kcRv8Njl79665vBkePjc4YHL0x
ulhw1gV0nODoOYmD4OgPubdGnsY9O+5fgXOPjPtCoa/39Y77LeDc0+E+Bjj3
Sr7nendw9PnozsHRn6NLBkdfjY427rP6+o7uExz9KjrFOM/y/IF7ccQB7sdx
jwuc+1zcOwLn/hH3ZMC5L8O9DnDud6ALj/v6nnehYwZHz4zuFhz9LTpRcPSi
6BrB0TdyT1LjMPcfdF243+MPeUvN83nuAYKzv9vjcQmcexPf8rgEzr0A4hL5
BvcxiUvg7DvGeFyK+68+X7hXAM79AvTx4OjkiUvkGxqXwC+WuATOPbtdHpfA
z5a4BM69hqs8LoEPlLgEjp6ce6fMY/aJxKW4F+XxirgEzr0/7qeBs28lLoFz
P+Vyj0vg3L/Y1+MSOPcIiEvg6N7RZ4Oj0yb+hB7T9+nEH/C4B+rxB5x7i8Qf
cO7Z9fL4A869sBs9/oBz74b7JODcKyH+gHM/gvgDjp6f+AOO/pz4A45emnut
5CfUbbiHGXmL13m4NwhOXYh7buDUkbiXBc79LO51gHO/g3sI4NxHQDcPjn4e
nXfU5byehi4ZXPXJmmduk3266FStek79W+oJkV9RT0Avq/rJU/3fg6PzHOD9
K07+FPuC7x7/65qV99zBD9//ksdqE8rvMICT17Hugo859sOxtVpZH4l7Hm+/
++PahHI/rPVD4ib4Cm9PXNP+iSPgu9we5qHaj1+C95fxhk7/hr+Prk14I8YL
vv1nI/+zVtsa4wUfN+HTU2oTSp2H1gN5r+CfzO0pz0HB18p9c+2f8YJ3uj3V
e6ObszPcfsYLforo6sF574wXPl5cMPeh2oSNMV7wS+V+B/jY/L2U63fUCXM7
V4f94H/z/rEf/BC5fxH32n1c2A/O+8VOxnGon0NhJ/j6nOcy/wAvxlXeywPH
zoinjsM/9oDjhzw3vruTt38xngte2LMg+ge/2d87/YPj//TDczbk/TwX7cGZ
R9XvvDU21f/OW2NT/e+8NTbV/85bY1P977w1NtX/zttH+03XX1X11Y1N6HOq
33NrbKr/PbfGpvrfc2tsqv89t8am+t9za2yq/z23xqYThB/iFvMXfsC3uZ/D
D/jX3K/gB3ydv/fI+x1f7+8RHsBXOQ4P4Ku9H3gAv0T8GXyr2wkPUd+QcfH8
MT6vo17v+FqfR4wr9Bvu54wLfO/z1fvg4K0yLvDN3g/jiu9z+HMZF/hNbifj
qrYv73uCL/d5wbh4/iHuJ4wL/BT5ngB4p8zruMcj7wX8YO8f+/XeKPaDaxyI
+9keB7CT5/SWuAfeKnEPfIT4CfgiiXtxj1niHrjGPfobI+sCeKf4YdzDkzgf
9U+P8/TDv8Nv47sTjp/k6xpxT9c75rnq9mNeyXpNP7ru0A6c/IH+Va8e93Md
J27gl+DwxnPxU/KuuD/gOPkJ/x6cdRx7VNeNPeDEK+yp6qtfDf8DZ75gp65T
2AlOPhP38hy/VO5Ng7OOY7/qpbEfnLha/Z7Pyoy4FPPT8VPkvjN4b5mnWl+q
3lN7JfJbxgu+Tu7jg4+VuAq+XuJqfJ/P7YcH1TPDQ7Wfch0B3yv368E7Jd5W
v4NRxltw9U/d78ADuK6b4Ntl3QS/VNZN8PWyboKT/8AD+F75bgO4rjuRl0nc
Btc4Ca5xDPwwiRs8f4X4SXU9LfMV1WHG92ccJx+I/ZWPQ+cdOPOO/lV/SP+x
/5B5BM66zHM1/vNc8E6JS+B/k7ikOr04Z3X8EolLMV8lLoEfLHFJ15HQhTjO
vgk7wfFn/BNc7Vf9G/aDb5U4Hzo3n0fYr/foGQ846zLjwu/YzzIu8FPkO2yx
r5J9Lnin7HPBbxb/UR1a5KmyLoe/sr+Rfa72z3jBt8g+N/IFtx8etB4CD1Ff
kv0+uNY3wHdJfQNc6xvgzGvmv9Zb4Edx+AFfLnUP8Juk7qF2wo+OK76H5vhJ
kv/oPdDQqzkOn7TXc884N3WceBv1Nf//eu+Y9syv0NU5Tnueqzq92Md6/+wf
q98Jb2zCzv8DKCOhbg==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
mBnB+lE53eLgvPBB+epC+6musiZY/0rPPx2cRz6Q+V7nFO9L8WpSdMz6kf6t
ZE2p2DU9On59r7HJGvcHrddkTfwTvDpZvyp2bMhdZ0jYNiXrVMWLTUUcqRj8
DnLFXtquijOZ6waVg2sHelfzi99VDeGb3DHlXfq1xRzehbGVaL9lfkaqM6rG
qHiluoZ+6/tMjsdaZSvna5isgbUuZnL8UuZz6FxB707XDayVHuA8VwfrduWP
rUvOJ3/me404viHzteseSsF53FXBOla2qrQdxXyrUsy5xsnXtwW+Fduxud91
c/gFuBL8B+0LfY/2XbB+2Qh/G+wXN2TO3Y7meg7Lfe16Bp9nrlVO5Td+wbaG
z17K7Rt1XfIp5xXvfXbxrqvIX+qdFnPg1ug5Ux1bN3h4sTZnROebykeWcNyL
sSui56fqPOLK8F7w6OAcb1jm+XN7dBwvXzznzcUz0Tz4oHiP5Yvnf5zOwX2d
nlsH7hrtP6W3K0b7TK27k6NrKVprp0TXUhQHT4+uaSi+DI+upWjNDouu1ZzK
+Ztw/uuKWHlGdG1EWuif3HUkzefjo2s4mvPHRtd2NOeHRteC5BOOia69SKN+
n7um2obz/0arl1tr/Z277iT/fFR0XikNXD06jqgO0KHk2sF+0l/STrn14UTG
PJ15neh5yV8p37khulZctZh7WjulguWHNxfPVPNBOn9CdC1a66uC1ljmdVam
4J3FZ3qPVYrf0nuR5knRuao0UoyOofK3C6M1m3Tv5Oh6gmKb6iCK49Jgpeic
UbprF8XdzHpINTI926+D4+R6uFpwLUl1JOVSFaLjbz1s24N1o2JuXew9M+eO
+0fnPodgfzIVsTb4+bXN/DwXJu83KEbvFZ37aJ/iX2yNMu9fqIgqfSgddGG0
NlMtq190Dqs6dt/ovPWYZD2mWo3qw+2jc96jk/2//I3q0qpZj8hcr+4Unf+q
Bt47Oj9VLtssWjeq1t0zOq9Uvf0PaaLMNdgfc997U3iWrjX3/ku56HxH+zJl
ovOXwcHzTs9HWqhytL5VLbpS9DORjqoSrWk1Vxcl10+lSU+NrhsM4zwtOR6S
WSPtEZ3/SiPVitbeii1XRmtU6fTrojWk9hF+z51rS7OqnqI5r72ksoxpmVnb
nhMds1Qz3z1aw6uuXhPulLmOoTj4Xeba+CHRdYaXkuOp9q5Uqz84OveUHqwW
nUt+yW8+ntuHS5P0Zn29zXEdzR/ay5k1fh6tIZ9XfM29NzSB7w6GL8+cu3+b
O3+vUKwXrZUl0h2594Celb7I7asnBV+3nuE/ma9d/rYu9qVa04Xth8J+CfbX
ctdANgRrKemTckXc0Fr+ANuHhf/fiv0JeF3mGH1cdC36eq253BpDsUl5h2o9
0pb7FM9EGnLv6LxeexANo+sM0reN4MMy70c0ia5FNEiuyXyTWXPWi65FaJ+l
cXStQDX5ptH52hiuoVPueKH9FO3BqG6jGv5+0XUJ1fxbRtciDpS/L9bgRvgh
3WfmvYAW0XNPtfpW0XWM3vDi5H0U5fF/5s7ltRfQOroeojzrzOgatXLPL3Lv
5Sm3GkmbkTnnOiu6vq19IMWxr4o5oJipuKs6teKXtLfi9YCSfZDe+7bCr0o3
611IL6g+Uz96z0W1tROjdaDend6p3qNy5C259xNVG2mg95e5TvVl7j3ET3LH
aP2uch7Fdj1/aR7N3+3FPK9azFv5vX+T16p8ZvnoZ6JrV41a51Ees2fhS6Uh
60TvQ2luf53b39aUJi15Lko36138VDzz8iW/V/m3wSWvDfnAw0vWLtJImvOa
19qnuDw6P30D26XBdUvtWVwRnavq+ak+oGeoGvJD0fmFassPR+tw1ZxVg5Ze
1R7NzdF6VXujt0TrW+2B3hidV6pu/GB0PqJasWrHyhdUM78vun6i/crHo/Ma
5ZhPROcRqic/EJ3XKHd7LFrza+9mFDwx8x7N2dF6+2Gu/yLubU7mfcxroll7
teOj82VpjM+T693PBWsN7UeoNn4TYxZm3s+9NjoH1/7LBdF5t/Z9zocnZ64P
nxDti2YFayLZtb8zIlo3Si+9n1yzPol+XfIekvZuxjJmZvF+tSe7LbP2XFro
T+1haN1qzSqvvzi6Vq85U7uITap9/SZtkrk29UvuvXjVFkZH14pV97g6eq9Z
tc020fu/ilnbkte56mk7cu/1q57zc+69ftWmfs29/6464W7R+a9qs1tz793L
V4fo8Vr7OwufrPxiXPS+tmq2X+XW/6ol1qD1z1z3GBNdJ1d9b3vu/ytQDfCv
3PuDem77lvxeVR/+Lvcet+obl0TvA6p2cWn0HodqHedF72WoJrkt91656h6X
cbwgc33yh9z/5/A/vfsBpQ==
            "]], 
           Polygon[CompressedData["
1:eJwtmnfgV9Mfxu8993ysyE5SNJQoGrSQhMxIe6DSTiqrIQ2lrGSXkRINZDSt
iJA9GkZUMn5I9h7N3/PynD9u3/u6534+fT/3c877ed7P+VbpMbjNoJBl2Rj9
E/WzV5Fl/XQ+Pc+yW8WtxMs1cJ14hLibeIX4bvFE8T7iarr/NHET8QTx/zT+
oniBuI/4A/EM8e3i8eLrdf8L4vniquJFGu8r7iQeLP5E/LB4qvha8VfiZeKF
4ht0/oqOCeJh4j01/o/4FHFDcTWdL9Xxkv6PTeJN+vmDeB+N7y1uo/tfE98g
HiluK35dfKN4lHgv8b/iFuJG4nbiN8QTxaPFe4s3i08VNxb/qvf/SVxZXF58
ocZXie8VTxJ3Fb8nvkt8o7iD+E3xLeKx4k7it8W3ia8R9xa/L75ffJu4tfhV
8fXiq8TldN5Z/+fN4qvFR2j8OPEgcXc+v3ix7ukn7izuKH5LfKt4nLi7eKX4
HvFN4l/02h/Fh4gPEPfV+IfiB8R3iAeKL9E9c8T3iPcVz9N4J/EZ4v3E8/md
xGeKv9e9W3S+n459xFM0vknjK8Uvi28WfyN+XbxEfKf4br3mPfEy8Q6d/6rx
Y8Q1xCWNzxWfKT5OXEFcS/d0FZ8rni3+XuOfiVeJDxIvEHcTtxbvLn5MfK74
JPGHeu3TOr7U+d86PtD5+zr+1PlfOqLuf0T3n6H7jxWXET8qbiVuLt5NfJDu
P0d8oniW+GHxBvHKtB6e0P0dxaen+cL66CA+TXyJeK3GHxHfJ/5TYw+IjxXX
Ev8uvl/cWHy4uJ/u/0j8oPhO8TTxDN3zkfhN8Radz9R4M3E98VbxLPGJ4vri
beLZ4ubio8X99fo14pniyeJB4o/FD4nvTZ+Xz9csvT6IH4pe38z3XLxv8Pxn
fRR8fo2fntb/b9QOcSNxTfEf4hniJuIjxGvFK3X8zmt17S+dP6jx43ReW9cm
6/2+Fa8Qv5TW1zRxQ/Fh4i/FZ5ey7Fn93EW8WT/L6DhB43XFZfX6v3X/yeIG
4uvEX1MPxIvEo8Wfi58Wz+X74VzHcPFF4nV6r0nR85d6sUF8i7i8eF/xp6w9
cbk0vz8X3yauKN5ffKnef514rniauJl4/5LX54XiSuIdGm8jPkV8iDjXeDvx
qcxXjf2Yu17tJd5DfHuqL6zPHrp/tXiq+GZxI/Heev1F4gvS/Gd9tErz/XFx
O42v0LW3qad67V7i/ho/X/yZrt+qaxVYs9S/NP6Crn8rPlCv36ZrZ6f5zvrb
Hj3/WQ9VdX6W7v1Yx1ZxFY0XJc935v9xzBfxxeJu4oMLFrXqrrhFqhd36z3q
iKuI62v85GA9oH7VE++p+/skfbieZy++VNxTfIrGDxBfJu4lPl18oPgKcR/x
meIK4iHivuKWzG/xUHE/6pfe71Ad2/nudDTV+H4aH5jq6aZUz47SUZn5lPTl
E12/RFxH9++h+3tpvIN4o67fpfEjxBXF5TW+VdxS3ExcV1xW9/cWdxSfKi4v
vlzcW/w/vf4O3V816clX4jv5HcUHio/U/WV0fw9xO/E3Gp+i8Zrig8RfiyeL
a4griNvr/nN1/6u6PkbcRLyPeIDGu1LP0/N8WePfiYdr/DNdW6jxWZn1v43G
39T4AHFFaov4Xeq0eJjGN+jaAt0/M9XHv6LXI/VoY2G9fgOdYf5QS/X6t8Q/
i0dp/GqdP6X7H8m8Dvm/fsq8HnfV+J96TdO0vn/Q2D3iuuKq4h/F94rriaul
+cL8GZq+7zHiLzT+jPhR6rPO25c8X/EHXTT+rq7dofEJ4qPEu2u8p7i9eKj4
U43PFz+YWb/R39d0XCa+Qjxc509ofIZ4iHi97p8nfiDVy99T/aIertG9z+n4
Wuf/ZhRB1UyNN0j1bRHrO2nS5+LO4neoARofL64t3k2/34XituLDxbuIL0h6
eJ64rfgdvf7azP4qlqxH6HWt5BfQxzbiyuKg8fZJn8qJt7CmxSeIPwqutV/p
/B8d0zX+ncbXaPwtrvE9io9M66O6xkt6vy7is8WHiXcSnyc+J9XrX6LXU5Wk
L+hJo6R3W1I9r5O+35oa31mvP1/cKrPf2bVk/Uffdxb/ofc7XlyHeopWaXyV
3uOPVE+e0rVhab1PEt/K9yd+NtV76i2eAB98i8Y3Ml917TnxfF38JrdWoVkL
xBt1HnO//wLdf6b+v/XiFZm9zS7Rr8XjUOuoeazVOsFatLOOxZk1aS7fs36G
3OvpleDaso3amFmL1qXf7afctaqD3nNM7ppVLdXf0blf87zOa+l8M7+LjuaF
5/syXe+R2UvvFK2FeGq8einaW+PZ+ew8g8fEtwd7g62FvTgeAW++rbB3waOz
tmL0/awx1gqNBLWANYMWoolo1RXB3md7YW3EA6HFRfTaRJO/1PnVafyaYO+4
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
            "]], 
           Polygon[CompressedData["
1:eJwt13f8jWUbAPDzO+d3FKVhZIVklYSIzLSUESGjjIxQisiMSEZGNChNpayW
0VK9ifQiTaVdSEW9kvZQva3v1e2P6/Nc1/e5nud3znnu577vX5X+wzpfkc1k
MhtFXnyj2JDLZP4qyGTKi9JsP3uFHexYm1ViX8v/y/5UlxWl2D72AvtDfZQo
yU5Uty7MZFo6N4JdzH6Sb+Z5xxqsApupPkjfbPY4W8p+kb8c7liLVWSH6Vmf
S58hPsta5+qo2/DT5CPZAOf+kL/KD3Wsx6qy69WX6psTn52tZn/JX+eHOdZn
1dnP8pdYEcfj2NHse9edKA5nDdjJ4k/5a/qKO56krha/i57jRYZVYpXFHPVK
fdvwY3xr/I7qc/ip8iv19Hcux7aIUqwxq8VmxPdiLcXz8fuKZ1hD9cniXPnZ
bL9jA1FJfoZrz4zf2vme7BJ2j/om93tL3UMMYgvY3eJb+Ua9f8d3jWenb4i6
l74YHEvY7aw0e0/UYG1Zc/aj/EVW6Fgtxgz7Qb6J5RyPZeXYTTF+3G9ufH62
nBWyN0Rp1oSdwEqq3xHVWGvWlF2u7u3aYWwpu4OVYu+K6qwNa8Z2yZ9lP6nX
yIuy29XFXHtX/Hb8SVbPQB/C5rH/sGfFNvVFYjR7RP2wGOHaPmwMW66+17XV
2RnsFHYZ68VqsjNZY3Y5683Gs/7sGvYke4CtjmclWrDhbJiooe901ogNVvfU
N5VdwmawtWwVO561Yk3ZUNaHjWR92Vi2gi1k69Xn8LPF+fLzYqw7tlO3FV3l
ndjV8n7yifInXLvMtc/G/XkT0UHeOn6f+F7qU0T7uHe8E/Kz5E3kQ1x7kWvL
qbuJzmw6G8cm6xvIrmNr2Ao2hQ1i09lzbCX7TD1ATMumZxHPZI26ud5m4jx5
m3gG8tnyLfI3xYfxTqsfiDEjfzjeZfE8axWfUXSWd2C3yYvK75Svd/8n9K9T
nxnPU3SSt4/PFO+kuoXoKG/LqshPi/dLPsi13V3b1Bgaw+6PuYK9LGbFPeKd
jPs5/5JzE+QX80ny1XoedG0F9Q98hvxW9lrMFTE2XPO++gPxBlum5xD+UHxf
tkF/L3Yh6xvfKf4mqxvPlp3ORrGBrDe7gPVh89nMGPesHTuDjWaD2Avx28Yc
LbrIOzp3i3y4/Pb4PfU9H2sDe1McxZqy2uzXmMf0FXNsweqyMTGPiHHsPnYL
u0pdoO9qtojNZ9/FnM6yjg3jPWALDsydBdk0v8Y8+5v8BFbUsbm6jr4rY30S
I9ld7EY2LNYdcSW7I+Zc9nesDa490vEs1pAN0rNfDGY3s6ns2Hx690dl03wY
8+I4PVk2gS1W36bvYFaPlWXtWItMTNq+NyvBWrFGaGwuJjdzALuf3aqsyj6I
OZtdwNpm0nu1PZfm7yPz6R2LZ7E7l97bcvn0XKqJD0VDdqFr28V3c/9msSax
TqxzzN163he1WcdYA/Q1UH8U7wK7lPVgXdRfiW4xPmMeYssOrG9HZNPaEWvI
+Xr2xpwR84X6Cn3F8mkOa876sn7xt/V8GeOHjVcP1XeUurG+41hP1p6ViXmE
1WQ92LmsUj6tRwPZHHZDzIH6vhcXsWnqsfr6qH+MOYvNZBPYYPXvYkiMWTad
Xar+TVzO5rHrWA/1d7GGsKlsDOun/jneTXY9u4Z1V38terBr2UjWX/2LGMBm
s0msq3qf6M4msuGsb6w7MeezWWwiu0D9TazBbDIbxS5UfxtrK5vCRseeJsaF
3+AYdj47ix0ez5tVYV1YKzac/SlGsDvjt2KPHxgHdbLpWcQzOS6f5tOp2bSO
xXpWznVNWS3WW32eay9hv4rL2Fw2jZWN+T/eQ9aLdcik9WRXLs2jZfNpbdkb
64C+3/WcGPscfUfwRuxY57qys9mKA/uSytk0RmOsTtKXY5PZg/G+6buWFbIp
7CF2DyvK6rPyrD1ryQ5iJ7Fy7Fx2KivCtooyrFl8nkxa7z7PpfmsfD6tfZ3E
nlgX2Th9Q/TNVV/hfvPZq2wt+19h2h/ckk3zeszvl+n7vxiaTXN2zN03R63v
VvYKe47NirmF3cA2sKfYfewqtoR9FPM9W8TGs2VsO9vCdsQaEWNGXbLg36kl
8zF7KsaMunTBv9NKZid7Osa0ukxB2rffH3Ouk0ud28ZeZ7Pj2bIb2Ub2NJsT
7wa7iW1iz7B5bBi7jb3G1rE9sY7Gu6Q+XhzGDlW/JY527rSYn1lx9duiIjud
nRy/n3xdjC11TVGc3RHj1t9Y4NxbbBO7M+ZrdjfbWpD+B7kr5nV2D3ubvcgW
srFscaz57NUY9+w69hTbx3ayvYVpTV6UTWtorKUL9I1mC9m78Sz13c1GsXvZ
O2xzJq3bX+TS3qhCPq3hn8ifibko3h9RRN+nsSdiP6griINij64u4n7XO/cY
WxJ7KXlN9mNB+h8g/heoqK85q+tc/5hf9U1neTaLPcoWZ9J+/5Nc2nuUzqe9
f4nCtP+PPWPsHddn0z5lZy7tjUrl056lrL4yYjMbq29wzLG8BavHLmZdMml/
9Fku7XnK5NNeKfZ+O3Jpj1cin/aBsQf7OJf2giXzaT+2W74m5k/3qiKKuV9l
9an+xknODWBdYz/GJrGVbHc8j/j/h01jq9lX7GP2eey7Yp5VVxWHsC/YWrZf
XV0cyh5VT3Xtk87tZTvYMawlq88Gsm5sFZvCnmBfsu2ZtEecwB5hnxak/eIj
7Fq2in3OPsik/9Mms8fZnoL0P9tidnXsM9kO9gZ7iF3DVrBd7D32IJvIlrPP
2LvsH4mvz2g=
            "]], 
           
           Polygon[{{821, 987, 581, 702, 1158, 820}, {835, 993, 588, 706, 
            1160, 834}, {1045, 1111, 600, 397, 396, 
            709}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{275, 494, 1165, 276, 507, 302, 1264, 522, 317, 1269, 537, 332, 
          1276, 552, 347, 1286, 567, 362, 1297, 582, 1208, 377, 595, 1220, 
          391, 1309, 608, 406, 1313, 623, 421, 1318, 638, 436, 1325, 653, 451,
           1334, 668, 466, 1345, 683, 481}], 
         Line[{277, 495, 1166, 278, 508, 1176, 303, 523, 318, 1270, 538, 333, 
          1277, 553, 348, 1287, 568, 363, 1298, 583, 1209, 378, 596, 1221, 
          392, 609, 1230, 407, 624, 422, 1319, 639, 437, 1326, 654, 452, 1335,
           669, 467, 1346, 684, 482}], 
         Line[{279, 496, 1167, 280, 509, 1177, 304, 524, 1187, 319, 539, 334, 
          1278, 554, 349, 1288, 569, 364, 1299, 584, 1210, 379, 597, 1222, 
          393, 610, 1231, 408, 625, 1240, 423, 640, 438, 1327, 655, 453, 1336,
           670, 468, 1347, 685, 483}], 
         Line[{281, 497, 1168, 282, 510, 1178, 305, 525, 1188, 320, 540, 1195,
           335, 555, 350, 1289, 570, 365, 1300, 585, 1211, 380, 598, 1223, 
          394, 611, 1232, 409, 626, 1241, 424, 641, 1248, 439, 656, 454, 1337,
           671, 469, 1348, 686, 484}], 
         Line[{283, 498, 1169, 284, 511, 1179, 306, 526, 1189, 321, 541, 1196,
           336, 556, 1201, 351, 571, 366, 1301, 586, 1212, 381, 599, 1224, 
          395, 612, 1233, 410, 627, 1242, 425, 642, 1249, 440, 657, 1254, 455,
           672, 470, 1349, 687, 485}], 
         Line[{285, 696, 698, 286, 512, 1180, 307, 527, 1190, 322, 542, 1197, 
          337, 557, 1202, 352, 572, 1205, 367, 703, 705, 1213, 729, 707, 1360,
           709, 396, 613, 1234, 411, 628, 1243, 426, 643, 1250, 441, 658, 
          1255, 456, 673, 1258, 471, 1350, 718, 720, 730}], 
         Line[{289, 501, 1171, 290, 515, 1181, 310, 1267, 530, 325, 1273, 545,
           340, 1281, 560, 355, 1292, 575, 370, 1303, 589, 1214, 384, 602, 
          1225, 399, 616, 414, 1316, 631, 429, 1322, 646, 444, 1330, 661, 459,
           1340, 676, 474, 1352, 690, 488}], 
         Line[{291, 502, 1172, 292, 516, 1182, 311, 531, 326, 1274, 546, 341, 
          1282, 561, 356, 1293, 576, 371, 1304, 590, 1215, 385, 603, 1226, 
          400, 617, 1235, 415, 632, 430, 1323, 647, 445, 1331, 662, 460, 1341,
           677, 475, 1353, 691, 489}], 
         Line[{293, 503, 1173, 294, 517, 1183, 312, 532, 1191, 327, 547, 342, 
          1283, 562, 357, 1294, 577, 372, 1305, 591, 1216, 386, 604, 1227, 
          401, 618, 1236, 416, 633, 1244, 431, 648, 446, 1332, 663, 461, 1342,
           678, 476, 1354, 692, 490}], 
         Line[{295, 504, 1174, 296, 518, 1184, 313, 533, 1192, 328, 548, 1198,
           343, 1284, 563, 358, 1295, 578, 373, 1306, 592, 1217, 387, 605, 
          1228, 402, 619, 1237, 417, 634, 1245, 432, 649, 1251, 447, 664, 462,
           1343, 679, 477, 1355, 693, 491}], 
         Line[{297, 505, 1175, 298, 519, 1185, 314, 534, 1193, 329, 549, 1199,
           344, 564, 1203, 359, 579, 374, 1307, 593, 1218, 388, 606, 1229, 
          403, 620, 1238, 418, 635, 1246, 433, 650, 1252, 448, 665, 1256, 463,
           680, 478, 1356, 694, 492}], 
         Line[{299, 700, 1358, 701, 300, 520, 1186, 315, 535, 1194, 330, 550, 
          1200, 345, 565, 1204, 360, 580, 1206, 375, 711, 1361, 712, 1219, 
          389, 715, 1363, 716, 404, 621, 1239, 419, 636, 1247, 434, 651, 1253,
           449, 666, 1257, 464, 681, 1259, 479, 722, 723, 724}], 
         Line[{480, 682, 717, 1344, 465, 667, 1333, 450, 652, 1324, 435, 637, 
          1317, 420, 622, 1312, 405, 607, 1308, 390, 594, 1362, 713, 376, 
          1207, 581, 702, 1296, 361, 566, 1285, 346, 551, 1275, 331, 536, 
          1268, 316, 521, 1263, 301, 506, 1260, 274, 493, 695, 725}], 
         Line[{486, 688, 1364, 719, 472, 674, 1338, 457, 659, 1328, 442, 644, 
          1320, 427, 629, 1314, 412, 614, 1310, 397, 600, 1359, 714, 708, 382,
           587, 728, 1365, 704, 368, 573, 1290, 353, 558, 1279, 338, 543, 
          1271, 323, 528, 1265, 308, 513, 1261, 287, 499, 1357, 697, 726}], 
         Line[{487, 689, 721, 1351, 473, 675, 1339, 458, 660, 1329, 443, 645, 
          1321, 428, 630, 1315, 413, 615, 1311, 398, 601, 710, 383, 1366, 588,
           706, 1302, 369, 574, 1291, 354, 559, 1280, 339, 544, 1272, 324, 
          529, 1266, 309, 514, 1262, 288, 1170, 500, 699, 727}]}, {
         Line[{732, 1036, 493, 731, 1165, 949, 733, 1166, 950, 734, 1167, 951,
           735, 1168, 952, 736, 1169, 953, 737, 698, 1063, 1357, 738, 1037, 
          1170, 954, 739, 1171, 955, 740, 1172, 956, 741, 1173, 957, 742, 
          1174, 958, 743, 1175, 959, 744, 1358, 1038, 960, 1039}], 
         Line[{746, 1064, 1260, 745, 507, 747, 1176, 961, 748, 1177, 962, 749,
           1178, 963, 750, 1179, 964, 751, 1180, 1065, 1261, 752, 1066, 1262, 
          753, 1181, 965, 754, 1182, 966, 755, 1183, 967, 756, 1184, 968, 757,
           1185, 969, 758, 1186, 970, 759}], 
         Line[{761, 1067, 1263, 760, 1068, 1264, 762, 523, 763, 1187, 971, 
          764, 1188, 972, 765, 1189, 973, 766, 1190, 1069, 1265, 767, 1070, 
          1266, 768, 1071, 1267, 769, 531, 770, 1191, 974, 771, 1192, 975, 
          772, 1193, 976, 773, 1194, 977, 774}], 
         Line[{776, 1072, 1268, 775, 1073, 1269, 777, 1074, 1270, 778, 539, 
          779, 1195, 978, 780, 1196, 979, 781, 1197, 1075, 1271, 782, 1076, 
          1272, 783, 1077, 1273, 784, 1078, 1274, 785, 547, 786, 1198, 980, 
          787, 1199, 981, 788, 1200, 982, 789}], 
         Line[{791, 1079, 1275, 790, 1080, 1276, 792, 1081, 1277, 793, 1082, 
          1278, 794, 555, 795, 1201, 983, 796, 1202, 1083, 1279, 797, 1084, 
          1280, 798, 1085, 1281, 799, 1086, 1282, 800, 1087, 1283, 801, 1088, 
          1284, 802, 1203, 984, 803, 1204, 985, 804}], 
         Line[{806, 1089, 1285, 805, 1090, 1286, 807, 1091, 1287, 808, 1092, 
          1288, 809, 1093, 1289, 810, 571, 811, 1205, 1094, 1290, 812, 1095, 
          1291, 813, 1096, 1292, 814, 1097, 1293, 815, 1098, 1294, 816, 1099, 
          1295, 817, 579, 818, 1206, 986, 819}], 
         Line[{822, 1041, 1207, 987, 821, 1208, 988, 824, 1209, 989, 826, 
          1210, 990, 828, 1211, 991, 830, 1212, 992, 832, 1159, 1213, 1059, 
          587, 1058, 1044, 1060, 1366, 993, 835, 1214, 994, 837, 1215, 995, 
          839, 1216, 996, 841, 1217, 997, 843, 1218, 998, 845, 1161, 1219, 
          999, 1061}], 
         Line[{846, 1048, 1047, 1361, 844, 1307, 1109, 842, 1306, 1108, 840, 
          1305, 1107, 838, 1304, 1106, 836, 1303, 1105, 834, 1160, 1302, 1043,
           833, 1365, 1042, 703, 831, 1301, 1104, 829, 1300, 1103, 827, 1299, 
          1102, 825, 1298, 1101, 823, 1297, 1100, 820, 1158, 1296, 1040, 
          1057}], 
         Line[{848, 1049, 1110, 1362, 847, 1220, 1000, 849, 1221, 1001, 850, 
          1222, 1002, 851, 1223, 1003, 852, 1224, 1004, 853, 1360, 1045, 1111,
           1359, 1050, 1046, 601, 854, 1225, 1005, 855, 1226, 1006, 856, 1227,
           1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1363, 1051, 1010, 
          1062}], 
         Line[{861, 1112, 1308, 860, 1113, 1309, 862, 1230, 1011, 863, 1231, 
          1012, 864, 1232, 1013, 865, 1233, 1014, 866, 1234, 1114, 1310, 867, 
          1115, 1311, 868, 616, 869, 1235, 1015, 870, 1236, 1016, 871, 1237, 
          1017, 872, 1238, 1018, 873, 1239, 1019, 874}], 
         Line[{876, 1116, 1312, 875, 1117, 1313, 877, 624, 878, 1240, 1020, 
          879, 1241, 1021, 880, 1242, 1022, 881, 1243, 1118, 1314, 882, 1119, 
          1315, 883, 1120, 1316, 884, 632, 885, 1244, 1023, 886, 1245, 1024, 
          887, 1246, 1025, 888, 1247, 1026, 889}], 
         Line[{891, 1121, 1317, 890, 1122, 1318, 892, 1123, 1319, 893, 640, 
          894, 1248, 1027, 895, 1249, 1028, 896, 1250, 1124, 1320, 897, 1125, 
          1321, 898, 1126, 1322, 899, 1127, 1323, 900, 648, 901, 1251, 1029, 
          902, 1252, 1030, 903, 1253, 1031, 904}], 
         Line[{906, 1128, 1324, 905, 1129, 1325, 907, 1130, 1326, 908, 1131, 
          1327, 909, 656, 910, 1254, 1032, 911, 1255, 1132, 1328, 912, 1133, 
          1329, 913, 1134, 1330, 914, 1135, 1331, 915, 1136, 1332, 916, 664, 
          917, 1256, 1033, 918, 1257, 1034, 919}], 
         Line[{921, 1137, 1333, 920, 1138, 1334, 922, 1139, 1335, 923, 1140, 
          1336, 924, 1141, 1337, 925, 672, 926, 1258, 1142, 1338, 927, 1143, 
          1339, 928, 1144, 1340, 929, 1145, 1341, 930, 1146, 1342, 931, 1147, 
          1343, 932, 680, 933, 1259, 1035, 934}], 
         Line[{948, 1056, 722, 947, 1356, 1157, 946, 1355, 1156, 945, 1354, 
          1155, 944, 1353, 1154, 943, 1352, 1153, 942, 1164, 1351, 1055, 941, 
          1364, 1054, 1350, 1163, 940, 1349, 1152, 939, 1348, 1151, 938, 1347,
           1150, 937, 1346, 1149, 936, 1345, 1148, 935, 1162, 1344, 1052, 
          1053}]}}}, VertexNormals -> CompressedData["
1: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
FGdS3EnxJsVFFCdRfEQ4nnA94XnCnYRDCX8STiLcRHiJ/Dr5efLv5If+9ktl
QHaT7CjZT7rndO/pvtO5pHNK55P0SHolfb5O29IN90njujfnInC/V67v6Yfx
oMXQIzNQP1M7nNNC/XR6dmcgxoOvJ78NRX3mrmpchvqkPAjlRSgfQnE7xfEU
v1OcSXEnxZsUF1GcRPER4XjC9YTnCXcSDiX8STiJcBPhJfLrf/t5AZAfIr9E
/ojsJtlRsp90z+ne032nc0nnlM4n6ZH0SvpMCvGOQb3Q+Mtutx7qx2HxoyOY
37hUlVSJ+rQUpL1EfVJeifJMlF+iPAjlRSgfQnE7xfEUv1OcSXEnxZsUF1Gc
RPER4XjC9YTnCXcSDiX8STjpb9xUCOTXyc+Tfyc/RH6J/BHZTbKjZD/pntO9
p/tO55LOKZ1P0iPplfRZz0En6pFGYwkJD9TnsXdGdbuHi/6MhiWetjWvs2FH
x66+5zqIYWQYDGvZKATB4T6vznXgcbnwfMd9C+6BzsyLyiZKtWCXl5wh0i+G
4xoNi/hz1sNDtvW5dqfxrc8bEvfV83WZ0uL0alxfd2OmNa5f0bX+KF+fRYzO
VMb1l9vvfInr07r0PbS+44YP7zbURv8Zay4NGR674gNo9nLp7FIbzUSHHr7F
541+TUPwOX2mf6fnl0dN6ISfaezgmTkYn78+ZzaUfy8rTZGSxO8VR3gl4ffS
fmh/tC8Z/8pjobcXRtnpbZzdVzGG/f78Ac7mvh2C6xjIWxrh/MflVYk4n/ZP
+iA9SBy+cBD1vOSUpyrXA7PtEdqqB5KD5CJ5aF36Hlrfc2mn97gujeMlVVfg
+vn95Yfjus7HvPB9svy67lG4Pr1Xes/0fstV60c4Lr4LE0ziTab51cL0D6PP
T/MrhA5htnP5cxZkfLL1eUh1cxA+J7lpHyQ//T2tR+s4DBt0AvX20MK1M9db
2+cP8PfnhVH0/G/9LowiPe9V2mvK12cKksaauH7aneVncX2Sj+QlOSsVjFrn
j/eOmYPPJ4YOa51P54/OI51DWpe+h9anv6f1aJ0/+m3TN+lZ5dvR3IDpoj/j
6GWuVZKds+HuvisF/DN7vFc5G5/bFDWI8Tl9pn+n5zO6T8zDzzSeWOUixOf3
1yy38woTwapHZv0sxEKYes/7vFdYFnQetlWJf2ZNcZ9W47/v6TXkHD4P69sg
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
TO9ye6r/s3DMxwqY0c/CfkJWPDw7XLdvZXgZuB+f0ef55CqQsmq8L3+kkrW0
qAfcvpELx99oWLvx9/4gU5Xd6VTN3u+5P712cTZMTX97qQs//99ysh3MAhPA
ce7L6exWAdgPF1253KEWxIZSJzt/rmZLNLJlbtfz+1e0q8cgfo9mtfF9eRx3
A+seS/75nTcJiZcy//U7bzy+6/xfv/OG/4vF//qdN/58x3/9zht/fu9/f+fN
vI2Xw+1hX4yn37bxc4h/ICHhEfpfv+fG19n4X7/nxue//N/fc7vYVo9sJ+Eh
ifIL/vk9N75Ol//6PTeuh4v/+3tuhaYXDCuWVoP91bcfv2VFMygv6FR6qRTu
WTy5POZ8JQRWCmbfkIplhzuXXT+XUQ5L200wkdAUw9DUYFZy8A3rE/2iQMFG
DJPn1ml94O+7tK/8ePGct8w12G/XmLFVsDLmgcSqiAKYXz7jQucvCWzl3XOy
ts01oGN3/vy30AJ2THHBQA//BHYwzNZXQqoW/GLuHB8fXsY2TYuB0rR45jT8
rnQPnSqYP3eg9coRYuY+d4qLgeIbtnLNyFHh/Dyf2VW1UeFiJbvTf4F2bcgr
1lTn6T2V30eFvJjO4abVrCU1LPTugWiWdtTJcjS3S03bNb+Mia+At9+vy+Xo
ZrCxOsLV+YPKwWt9ydqh00Ww+3COetPWLJYTGfVEf7UIEnxOHnaILAXnlil3
ViTmsDKfoJlmmRUw7Nv6hbWd8kG7XadvfpL5TF5nnfnYUdWwa6eFu15TAgzX
WCbF7hews5GX34Xw/d5rEefNvlvKRKeZ3mi3HLarLMZpA78v5yDI0W6aiMmP
9tY6rZzFRiS1b/rC7+9cnwE/pBIr2Bjt0GLZz+lM+1zBvl3c/jRl93PcFVzF
pJSFw9ZKpbEcjQklY7kd3pH+/LztF45v0jamuj5KZgFLtm5Ff+Q0Udl528dy
OPwgP3uQdDHr8y0xwk9SCCNYfI3IRQDtpAMfreX4zj325hrfnyKQiLH+Ypqa
A3PNJzzIeFbKIoY7fD7I99tuYOcDswzfwpHZc6/K8ffjs+x6xm7+fnsqyScf
qixnh8/bqraPKWJr3QQTJNSEoFjnPU03UMwuXnL5/+o492iq0zWOJ0qM3UUy
iVqksFUnMt1o96AmHRV2uZw9mtQ+OckYUtJNiKaSkBgKtUxpRo3j5FQqGk+6
l2qasHWkIuMySsfpolKc833FWh2Lf/cfe73rfZ/n+/1+nt/7+y2d/KGSfxmy
z0QduiqJGea5PrGR/7XSQr4z9D5LLtZdOwF/qVn20sBau4nP5z/7td1OxSf7
hbishs8mOC5POCN5RJmTihS/tdTy4ttBZhlYf6E8vSpsYzkZFSjG/QX7N/nB
qH2BOK+W6095VdxVmhNVPTrFsp6f2p0dPx/1mbdlRoiRRR1/dsGDr9VUs2Z4
1JH2YTX0X1V87bZ5Dex3xWugY/Mj/j7MIT4BPjhptXOqd10jb0n5s1+RooqP
hM21CEYeSClwHljvUErh9bcsm681cOKtd4VPUT9Jbv60V/My3QyfKtU82MiX
bC8l56Ff1LYe71/7qI7bR6TvaUVO3vEhIEcX/qv1RHnv7KEGXuUZnBtZWs1R
pTttCpFDXrqPNSlQFZOLVH19pXsTV/wc0q8R/bgkPNf9OnxtweGgNcg1XCkd
qn0SeearGlPxO61a+Y9AkXesB1kNE7+3WT6U9HZv39XxhhP+n8O2aQTj/+nf
yjZ18f+zzxmI9dCcbI0crIeWbUiwFeuZEGCqhvXTgVjXWKyfcnxsTon1217Y
MejT++qtXfqZV/LkW+wDj5hTa4p9oOPWQfvFPjio/c0Q+8Z2G0rGYd8o3duk
SOxb06jBYp/p2LuI5dhn8nUvtxL7/Edt2ROcCy2RtXQ4IKco/C6ninMJHXZg
Lc6RtqlXF+IcaYr8P9niHMvtX1z59F53cZdub+tn9QL1wLovXuijHmizn79U
1MPr/qatqB8+6XrAEPVD13z+mizqJ0F+Mwv1xgr7926oN1ofZWwu6s0kVSbq
kyobKq+iPuliW56XqM+IiHkeqGd642U+D/VMT8sn3Bb1/LzZeRbqnxYM2uKG
+qc43RhzUf9v/D7cRL/Q/q+1DdEv1FAeLhP9omMyeGNv96W94/IK0Xfc5PRH
GvqObpTMqhB9t0KeMMTrbgW3PVmQjT6lZxfbX4k+HeV99A36mtfvOnscfU2V
hz/2dUJ0bSh0gAPNg4uhA3TkvWGnDvQ1X9qYti8DekLlIU7noScUsmxnuNCT
q+m5/tAf2qysGAn9ITMnt9+F/pSZz3gLvaI3exPvQq/IXiMvRujVwEbZaugb
VTv6GEPfKEhLt38r9C2r8mgp9JCc9B9YQw9pgPaOUKGHP95POiF8sV/4/99n
HlPrmw9d5e3W854V/fMBmbROvS10dYPfF6uhw+xZMesRdJjGf7+qU4fLZ4al
QLd57orBydBt8n6m6Sh0+5j5oSDoPNtZyYdC56kwNDRf6Hxd/MT38AVWyOLa
VfalVJt0Xil8oS/e0TxYPBD+Qn6uij3wFzIc77JC+EvKY8sg+BGZv7o3HH5E
4y5MiBN+FDP02VfwL3JJSHeCf1G5huoL4V8WUcax8DvSLnqpB7+j2/0n6Qm/
qz+THwN/pIAB+59HJJWQT4xdsvDH7ucBUT3e77u3p9gAPstn6mxXwmcp4qCm
RPjs8rULZsKXOb0iuKPO6QbZjn2/SfhyU7bJUvg4Fxkq4+Dj5L/7s/vCx9/p
aGfD91k//puR8H1qs5mWJXw/qTZDjpzAhtGmJcgJ1GzhqSFywg8jmhKQxygo
OtMKeYxPDx+jL/JYeI/vNnTPl1IDnx8T5xvQlYOMu/LP27Idach7LKvPWoy8
x6pInQyR9+b1bzyHfEgeOs/lyIe8ceS5LJEPfQyO5yBPktGVKceRJ9k6Lm+5
yJOWCxvW9Hb/UG/duGTkUl5YsXk3cilvsbsiEbm04/yRycixnOqROd1T+LO/
bZnIsb53d+oj99LzpFNmyL1ctGDrSJF7p/m4eSAn09uFZzKRk7nSJcxb5OTH
hzdtQq6mxte/3kau5uqO6M5c/fnYR525TavHPb2aK1FByOdc3Mi/IZ/zg3tf
ThH53GxdRi7yPFs9tBqEPM+FuTNmiDy/6OnYcOR/1jm8Uon8z7knjxqI/G+8
JLUSvEAbpE514AVuHyo3FLzg0bJ9OviCKq4uvgO+4NWvy+wFXyijdWeBR8h7
bUEIeITfzv3II7sPx1wCv1D+wzBd8AsbLBndyS/HEk3Ue7v/pjJJSwMHsZfk
0kxwEFt1zH8vRZ1r+453BTfxy++O2oCbuNXlzinBTVWZ+S3gLA7z7CgHZ7Gv
kcYUwVmbO+pbwWVcMFuWCC5jz6yOS4LLnNRissFxlHVnpAIcx5HNcZ0cN+Bq
3GVwH8kj1X3BfWzt/5H7FKaTLcCJdCLs24ngRM52nh8sOHH7YPfl4EqKCH1b
Cq5kSdUaT8GVu169k4FDyfSasS84lO+bnbcXHDpg4FKt3u6hqb1Z5wXO5dG6
ic7gXE5+d7Rdin6327VSBi5mLtYKBBfzJq/ZBYKLc/R8M8DRrFmgEhzN011f
WQuOPn3h5E1wN8cXL3IFd/OpDSXxgrsjjZt2gNPZ2lr1JTidZ7RFNwhO7+s9
Vpt99a/A+5SxZ18seJ+H79Hv5P1SRVWZDbixMUOyRgWOTHfYul3MB1pqOsKn
gt9uPVmkFgOei02pVop5wrC9yVJ/cNfUn6ZFlIDD0o3GHBLzB5+f02VDwFdB
BXsD9cBbRtMsp4l5Rc/3Z7vnMNI+5jAzMwsftCKPfhdVdF2BfKrUMZsqfETt
jEesdJaKm7UGy82Q+46ddl8m5iqOkmrTMuStP0V8I+YwHOCQGCDmMFaPz8m2
Iyf93eGCmNuw8+M79WJuIz19sFzkobhNWWLOwzlKfaWY82T/0v5Tb++B9vVe
tnfk13qC04x7PPeM6uM5bF/PW7vnPsY9vv/TvS8Tu/apqGt/AkL2d/JYVY97
enrRv3/e2/sd3c9lwYN6n34n/H8feE9i
       "]], {
     Axes -> True, AxesLabel -> {$CellContext`u, $CellContext`v}, ImageSize -> 
      300, Method -> {}, 
      PlotRange -> {{-0.9999998571428571, 
       0.9999998571428571}, {-0.9999998571428571, 0.9999998571428571}, {0., 
       1.9999994285714693`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{0.8865248226950353, 
    0.2836879432624113, 0.14184397163120566`}, {0.2836879432624113, 
    0.2907801418439716, -0.35460992907801414`}}, $CellContext`scale$$ = 
    0.5, $CellContext`tick$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Grid[{{
             Text["u = "], 
             Dynamic[
              Part[$CellContext`p$$, 1]]}, {
             Text["v = "], 
             Dynamic[
              Part[$CellContext`p$$, 2]]}}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]], Appearance -> "Vertical"]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.5}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {0.4, -1}}, 0}}, Typeset`size$$ = {
    400., {197.5, 204.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 
        0, $CellContext`p$$ = {0.4, -1}, $CellContext`plot$$ = 
        0, $CellContext`r$$ = 0, $CellContext`scale$$ = 
        0.5, $CellContext`tick$$ = False}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> "Quality", 
            AxesLabel -> {$CellContext`u, $CellContext`v}]; \
$CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fup$$/2), 
               Background -> LightRed], Green, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fvp$$/2), 
               Background -> LightRed], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 1]/2), Background -> LightRed], 
              Orange, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 2]/2), Background -> LightRed], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Grid[{{
              Text["u = "], 
              Dynamic[
               Part[$CellContext`p$$, 1]]}, {
              Text["v = "], 
              Dynamic[
               Part[$CellContext`p$$, 2]]}}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]], Appearance -> "Vertical"]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {0.4, -1}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{650., {236., 243.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}, 
   3.6029766202534933`*^9, 3.6029766993350167`*^9, 3.6029767626836405`*^9, 
   3.602976909645046*^9, 3.602976978832003*^9, 3.6029770387744317`*^9, 
   3.602977120111084*^9, 3.602979953312134*^9, 3.602979996398598*^9, {
   3.6029800268143377`*^9, 3.6029800892239075`*^9}, {3.6029802732474327`*^9, 
   3.6029802930755672`*^9}, 3.6029803470036516`*^9, 3.602980586694361*^9, 
   3.6029810202271576`*^9},
 CellID->153045376]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1.29, $CellContext`fn$$ = 1, $CellContext`fp$$ = {0.365, 0.52, 
    0.029265234961841247`}, $CellContext`fup$$ = {
    1, 0, -0.73}, $CellContext`fvp$$ = {
    0, 1, 0.6249624421609278}, $CellContext`p$$ = {0.365, 
    0.52}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJyFnHuUVcWVh9GoYySDjGGCQwgP0ypqNEhQBHssFTGiaEyICTHqGERiHEiM
0UCUV1pFVESCBFE6gry6xRYuyiDCDQcQQSMob5qXNpc3IjQvQ4ymJ576fbvX
3d670v+w1reKurt+p86uXbt2ndY9f/WDO49v0KBB7xMbNPjSP/9tveX6V+vq
DiSn9Xmzet2kI0kD/fW+L/Ps7L4fGp/zya8vXvLJijCt4VeH9N200/iAiod6
rejxQdg/8f7eJV1zxs96qFmXU5/cEe5M+9lk/OmGb3Tv0XKv2q8yfmLfS2/r
fMdH4ouMD0z7PxCwC/7J3HG9/2k37YNvr/6D71/2hML25IK3X+MNfrzSJ3h9
pGfweqLzh/u/1u24mQdpn6AznPboDB/2k2/e0iS7zHSGj07t32g6wzs0evyS
oy9sNZ3hL/7q+M41O7abzvDW067t+vk4+X3483/ueV152S7T2bdHZ98/Ohe2
Jxe8/ejsx4vOXh909nqi87BtKwb9eMBHPC/TGa7+E3SG0z86wyekOiw1neHT
0vGuMZ3hI9od/vHn40dn+CDNH34HXrrrJ+2f6V5jOvv26Oz7R+fC9uSCtx+d
/XjR2euDzl5PdO605zd3Vo3ZlZwZ3xfTGT4qPl/TGV4e7UnQGR6tmVCKzvDX
Wk/s9Lku6AwfktrznukMz1yz6rKyZ1abzvB8fRYF3x6dff/oXNieXPD2o7Mf
Lzp7fdDZ64nO+9J5vlXt95rO8Ivj+2U6wyvjeE1neCban6AzPNo/thSd4WPT
351rOsNfSvtfbDrDmW/o7Nujs+8fnQvbkwvefnT240Vnrw86ez3RuTTVf31y
QlwvTGd47H+76QwfHt9H0xneP84f0xn+RBxvgs7wON7yUnSGP572M8N0hs9I
7ZllOvv26Oz7R+fC9uSCtx+d/XjR2euDzl5PdA4pXyp/csB0hreK64vpDB8o
/4PO8Jfj+2s6wyvifDOd4b+N+iToDI/6DC1FZ/iraT+jTWffHp19/+hc2J5c
8Pajsx8vOnt90Nnric7Rvsqs4iXTGa713XSGaz0yneG8X+gM/1OeP1/l2s8y
nfP5aFt/4D998OXDrSbe1BGdfXt09v2jc2F7cq79GtPZjxedvT7o7PVE5+9E
/cNAN5/hrd18hg9y8xk+3c1n+ItuPsOHuPkMj/aWZVEYPt7NZ98enX3/6FzY
nlzw9qOzHy86e33Q2euJzhdHfxJOcv4ZPs35Z/hTzj/DBzn/DH/G+Wd41Gd0
Fp3h9zr/DJ/k/LNvj86+f3QubE8uePvR2Y8Xnb0+6Oz1ROc9cX0Mo128Ab/E
xRvwKhdvwF9z8QY8jncC88344y7egE928Qb8WRdv+Pbo7PtH58L25IK3H539
eNHZ64POXk907hDjvdDGxc/wZ1z8DJ/q4mc4/gmd4S+7+Bn+Wxc/w6e5+Bk+
xcXPvj06+/7RubA9ueDtR2c/XnT2+qCz1xOdH4n7l1Dm9oPw0W4/CI/2zGE+
1Ld3+0H4ZLcfhA9z+0F4f7cfhHd0+0HfHp19/+hc2J5c8Pajsx8vOnt90Nnr
ic574348zHf5DTj9ozN8gMtvwEe4/Aa8vctvwKe6/Aa8hctvwMe5/IZvj86+
f3QubE8uePvR2Y8Xnb0+6Oz1dPk6G4/L14Ui+bpQJF8XiuTrQpF8XSiSrwtF
8nWhSL4uFMnXhSL5ulAkXxeK5OtCkXxdKJKvM7sXtxl81qbZHyWDzv/laX3O
Paw4NcNzMR79/EL54VeMP5m+jx/KzleC5+o/FOk/FOt/fzofViaZdB5Otv6L
8KRL6g9fU//9SmlfhCfnRy4d7s/SvghPdsffDS84ezx3eoYieoYieoYieoYi
elr/cJ5v29i/2UOeFs7vwr8++z+nfmfdAftdz13/1g/ziOcyJfUzFcbRP0n1
uc84Oj/tOHqOUT/O/lDE/lDEfuNuvpn+h8p29um7aX/y1rJn72+9i/nZoIF4
KMJpH4q0N85zp59jTce8PvzoTH7X9BQP9I/9cOynf9dP4vtx7e13nT2+n+B/
d2Dr7dm6uvq8fauZT+34edX4ZMOdDyypq9tlv/tc57d+V1e3KcBpv/gPVUPv
PWVJuGha4xV1ddusfe2OoRPrBm8zTvs2K8c16njiunBGaucH1v7SZUeG/7Nf
47Sf/6d+2y458YOwMf3d9dZ++przB9QN/tA47X+w/sjt5cdvCyVpP+9Z+2vr
Lrynru4j47Tff9zfflhetiOcnfLE2jfqdtwv6gYfME77V2546/ry44nvxmb9
+cLXY/vg27eIv2vz4TrZA6f9AdmzPo7L2mc0Xjjtf6jxtoy6WftS6Qmn/ULp
2T4+F2t/UM8LTvtz9byq43O39s9rPsBpv0zzYUCcV9b+xnS8y43bOYjmG/OQ
/Py6irurVvRYYfMQ3rjlppseXTItYV7BR/6hTdm88vk2f+Cf1N75fxdUrLB5
At96XPXTF1Sst/kAP/3HNQ9eULHZnrudO9QO6ntBxQf23P15B88d/oLa83zh
zdQ/zxG+TfbwvOCfyX6eC3ysxov+8NoWUR90hq+RnuhMfn7ySc1XtWi22XSG
3/7IhlaXtX/XdIZX7ilvMvCuTILO+ecOr5rO8LOuvn7zgneWms7wa49d8KOa
HStMZ/iqPyz/bs2O1aazP+9AZ/hqtUdneDf1j87wc2UPOsOzsh+d4RM0XnSG
95A+6AyfKD3Rmfx88sTsfj3G50xn+OOr/3z+zMuqTWf4sDG1i3sO/IvpDI/x
XiZBZ/hb6Xs31XSGL0jf98R0htemfuZN09mfd6Az/KDaozN8ifpHZ3i17EFn
eJXsR2f4wxovOsOHSh90hs+XnuhMfv7Cjy4o67xth+kM/+WY6Vc+uuR90xne
ptEv+j26ZLXpDC9J4/A3TWf4zelzn56gMzzOn6dNZ/gN6TzMmM7+vAOd4d9X
e3SGr1H/6Ay/VvagM7yF7Edn+FkaLzrD75Y+6AxvKz3Rmfz8i2f3G7aiepfp
DJ/xyPiKFT22ms7w/3robw+9MHO96QyP+brlpjP8V6k9801neNwfTUnQGb4g
1ec3prM/70BneK3aozO8mfpHZ/jPZQ8627mJ7EdneFONF53tfET6oDO8Unqi
cxxHZfbsS596vG7wbtMZfv6zr71YV1evM7zJtHOG1dVVm87wT9N963umM/yC
tJ+FpjO8wbzP288wneEnpfwpzjOz8Nkf37zriqu6dkRn+P65sT06w4/Mjf2j
M/xc2YPO8I9lPzrDT9N40Rl+nvRBZ/hZ0hOdyc9Pc/MZnnHzGd7MzWf4yW4+
w+9z8xne1s1n+D1uPvvzDnSGT3DzGV7i5jO8j5vP8OPdfIaf7uaznY+4+Wzn
KW4+k5//jvPP8F87/ww/z/ln+LnOP9t5hPPP8OHOP8OvdP7Zn3egM7yL88/w
yc4/w3s6/wwvcf4Zfo7zz/C+zj/D2zn/TH5+oYs34CNcvAF/ysUb8CUu3rDz
AhdvwF9x8QZ8j4s3/HkHOsP3ungDPsfFG/Csizfgc128AX/CxRt2nuLiDfgC
F2+Qn3/Rxc/wu138DM+6+Ble7uJneHMXP8O7uPgZvtzFz/68A53h77r4GX61
i5/hrVz8DK908TN8louf4T1d/AyvcPEz+fnNbj8Iv9ztB+18we0H4UfcfhC+
ye0H4ae5/SD8Obcf9Ocd6Awf5/aD8CZuPwjf4vaD8L+6/SB8iNsPwlu1zN8P
wje6/SD5+SEu/wOf4/I88DNcPsfau7wN/EaXn4F/6PIw8Bku3+LPO9DZt0dn
+D6XV/H2oDN8nsuTwEtcPgS+wOU94Le7/Ab5t27Kh7g8WyDP5vJpgXyay5sF
8mYuPxbIj7k8WCAPhp7+XAM94eTBXP4qkL9yeapAnsrlowL5KJd3CuSdXH4p
kF9Ct6fmV33201MPUZeYRbeLRlw5Y3bfQ8nDQ7rffu8p75puG2+tvv0/lh1K
Gl3d8OYdTTabboN1HjEj9VfbTLeSz760eMmww0nzlQ9c/845u023t5Vfvb60
rvr6hR+6/fJB7Zfr5+FI2clzQTfsHK/26IadS9L5s9N0w86M7EQ37Pyf3Orf
vHNOjemGnZPT/tebbivLPt36lY77Vbe23N7r5me06bLo6H6r80S33gu7V/Z7
5UBy+rFp3z+n/9umW49M8siYDrUa73rT7bPBN3U4+Mfa5DbZg24Tv/fh7uuO
1Jr9vNffbfn756b+4GCyVONFz8eUp/pv5z9Xy/6YB6sxPbH/H+m8/cD0xP4n
0nPJzaYn9k+S/eiJ/Zenv7vC9MT+yrSfrL3X2N9WdUTo/NCw8W/9rPvu5NTU
3240nd89+53zmjbek4zZPup7n6x4y9ap05d+PGLZsj3sq0rRuWfvMw79/rG9
ynctNp2rTrzhpg5Xf5i0v2huaffaVabzx5N/N2ff8fuSZunz2mA6h6umfH1i
si8Zmr4X75vOlypPVeXigUdk///+rtHifh3Xms7YT10xOmP/Cel+8D3TGfsz
sh+dX5L9GZ37oDP236O6IHS+XPbvT88pVprO8T3KJWuaN3+gR8v6+HZI+r5s
SyaOaffdy9qvM53/kr4X25Kzb9l7+czLFlvc1ST1M9tt/qPzbQ0PXjr89h3J
lel8WGA6V05rPv6Kb+xMhuu8G50Pdr3m+L9u2Jncd970efPKV5nOHylPNdnF
tx1k/xRxdMb+WanOb5jO2D89bf+a6Zxv/6xSdL5V9t+Tzs/E4i7sj+drK03n
Q7L/sz6f+4ctpnN87husfhud70if70b5ky2m87H0OW5OLlL/6Dw8fa+3qP42
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
aJznovXUeBOtpwvi+mt8qNbf+Bw3GH9Wvxt1XmL+5zmt7zFuX2N8jOKBRTF+
MF6p+KF5jDeMv6h44xT5AfzSFYpPvhfjGeNvKp55OsY/xol/1sd4yTjxUtRn
o3Hiq6jDSuMPKx67NsZ15ieHKq6L9q82rvvvydMxbjT+nOLGE2OcabyX4syF
MS41/oniUq0v5m/J+8nfJt7f4k/y46v6+xpw7hfIDyfeD8tvB++3tf5a/IP+
+Bn4cO2besvPwNtp/k+Tn4HP0vuyUH4GXq59GX7GxxX4GR+HKG5JfNxyQH4G
3k/+pFZ+xnPFS8HHS4qvgo+vFKdZPKP7sOZn4J21X8bPwN/S/ho/A9e9s1Al
PwNfK//cS34GPlr+/CT5GbNH+/0H5Gfg7ZQfOCg/Y3lX5RPwM8RR06TzJfIz
lvdTvmKA/Ay8l/wbfgb+rby8xAbjw5Q/6aP4AX6h1ruc4gero9b6WCG/BP8/
5WeulV+C656j5tsW4+XK/+CX4MOVL7pR/of4oXZqfF9Gy//AdypPVS3/Az+m
3+0o/wM/RXmwRfI/8D8pb9ZF/gfeX3m2ZvI/8NbKy42U/4GvVB7vBPkf+JeV
91sg/5Nv5/Kwz+UH2O8rzgw+znxQ/iq/LjSTbaP2vh4Vv0RctPvR2x6qq3vb
6sDhsc5nvdWBw+/qtjtTN7jG6sDhm3/YekJ6T175GXi/wWeOrhtcXycP7y9O
Xbfvh7pu+N36Xeq64aWyk7pueK0bF/HbyMZPjKmre9PGBX8//d3VNi74m3c+
PaiubqONC/6pu0cAv/Lcb1TVDd5q44IvVT+MC75Vv8u44KNlJ+PK/27AnFLq
e+E1cbx234e4sZ3OMRmX3X+fl38PBf5aux+Nq6tbY+OCB+mM/fBL1D/259+v
n1Vq90nFB8Vx2T0R+EWxf7v/RTwZzynmmZ3wy9P2S81OOHXOdm9FvETfN8Me
+Lqov9kD7x3nm9mTn88ca/em4bm0n1fNHni875bYc4TPj/Oh/h6o+MY4/+2+
W36ec5jpCT/q7ufCfxvfL/ddu0yR79plinzXLlPku3aZIt+1yxT5rl2myHft
MkW+a5fJLvhr071P3X+r+65dpsh37TJFvmuXKfJdu0yR79plinzXLvOF79rh
h6mHzP/eXca+d4fOxI1XRP9gOufHmfXftYPfoH03OlseIM4r0xl+TdpPhd2/
yM8b9Lf7ufBStUc3+LG5sX90s/5lD7rBL5X96GZ5To0XfeDohg7EvbOj/zEd
4HrfTQf4jvjemQ7592Qn2j1Z+Ba1Z1zwTuqfcVl+VfYwLvgx997Btd4VzX8y
Lnhl9G82rvx8ZmXWvhsgvsL5GfiB+Lxs3cnvZ6TdV7U4X7/LeOGfuu8qwBc5
fwXXem3jys9nZuyeKXy48+fw9s6fw6+SP8f+/P5H2j1QeFvn5+GbnZ+H/8L5
eeLwWndPEz7DrY/wDi4OgY9w6x2c993WWcW9pYofbN3My6/W3/uDH9O6j58n
Htgujl/19ybwDz5uoR87Z5Sd+DH4UI2L/v19AfqHXy598D/wOdKT32X9/bme
C78L36jnyPsFV72W2ePr6vPvo21Pvq95hT3wzpqHvEd2vql5i52s15s0/7ET
zvuCnfC/zs33A/Axeh+x39erYz/8BMUV2A/fLf+A/flxS1Up7xH8cf0u4yJ+
wI8xLn+uavf6xV91fhveyflt+Ab5YezPj3Mmltq9e/GVzm/D2zu/DZ8pexiX
P69kXJbvcutyfvv6dRl+nVuXLY80N39dhpe6dTl/HzeqFB3gbd26DD/k1mV4
F7cuwzu6dRnOujzQ5bvQJ/87JGtCfzcffF6L9qwLW9x7AV+i94J57ust0Qeu
8do8h6/TPOd38ed3O78Br3F+w9Yd5zd8XSL2wLs4vwHv4PwGfLTzG/j/4Pwq
fIz8qvm3vHv3s7L2HS3O76Sb+T1X72d+T/wS54fhGflh83vi6GDfvxLnedl6
ofXoU607tl6480H7Dpt4f7cfh69y+3H469pH27rj6u5s3XHrqa074ofc9+vg
89w+Hb7W7dPhA2T/wIJ5mMX2vUQ7F3N5CXhbl2+B3+HyLfB1Lt8Cv1d5FXTw
+R90gP/G5WHg1S4PA+/l8jDwdi7+gW/WeAcWPKfjb2zW35MlLvLnwsQ/+f1M
sHvl+P+rov80Hey+jzjt8/1wf7vn7s8faZ+/nxqVpb0/l6Q9/FvOHng7cfrx
dY9wf68K7u/X/D/Mb+OI
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
xCF8w7rw0tzfY3ahjZcE538LMuvqh6Lnhvzq2tz1AeV3XUrO69bo2cXcKxc8
J/7RN8yc5yvH38yxI/N3+JUjw/6p/AZtHv47zSoW176X+Xqx5lWJthLHb8X9
KgTXDjTWt/NOLxV9yxXX6n6677bi2vIc6wtNdVt0niKbfgvFMysW81jfv160
X9Jz9LzK8hXFfTdkjpnf546bp8GH5tY/g+Hn4D6Zv+es6LxpOW1Nnl0bPp0+
h+WuO9VJ/v7ST2MVa7GfCG+k/8vYu+Z+P72n5vze2DpGP+ug5Pm/ET4wOcbp
3VRL+S53vNP6Ub1VtdYW2Ock132aa3yk5zRXObZn1qJaS6oNKR+Xb7kluk5Y
qXiH9cU3KFOMl75N2eL7KE6dEp23Kq6dGl1/UCw7OTpHVr4zJXgOvA5fF5wr
KZadpnhfxNZro2uS8hXXFO8gn/NAtI5SrBwbXa/Q2hwZXWPRmh0RXWPRnB/K
cU3mOT8kuiaj9T4quk6i9XtCdF1F63p0dK1D63FwdE1D63RQdI1F+e8rPLtb
bt84PzqvVP5ShaMnvDv2m6Nzc+miitFxRxrypmI+yB9OgR+HRytP5fz53D5z
cnSdVrnbsGh/ci58uOJT7vxi9+jYp/x6UbTPVDxWnUW+XXnHHtGxsh19ynJt
zdz6uVJ07JMGLkXXHqU/U3TtUTmy4vsvmfVzGY7DM+vkGF3PVB6zW7FGJvDM
l3LHUM1z+W2td9VOO0fnWaon94zOlZR399H8yByj91Psz7x3oEKidKnqzF2j
Nb/q6mWj9a32Gv7NPW9V8y+HvWnmGnX36HxBufNw+MLMtdN9o/NE1RWbRuc7
qiU2jM41tKehtad1p9qv6sJam9Jwk7FfCg9P1nXK8V9KzkOX564DN4jOd7Tf
UT5aq7eXv+L3QzLXcqtG5x2q2e4Jt81cy905uo/GaHFyvbJX8Fh1yqzLxkSv
EeXju0TnI6pvVI7OcVrDC5P3V5SbV4vOg6Sd6kbnaNpP+ZPf62TeZ/kjtyYf
wrMaSYtlrlFXj86nuiiuJusk6bE60fmgdEut6HeTtqkdnRvKt+xI9imqge8f
nSeqptosOu9TbeRdzvtzzyc1jznKYX9c8zJ3Pf8d/rzLsa7w2/L38nvyGf1y
+42yhU9WbHlacz73no58pvJ/+bEaihvB+UKZIr7If9cMroupJqYcpUK0VsyL
WCH/+W2w7tM7NICfkWaRP9H6z/zO1bE/gb2sfBT8XXBtWXXpJtG5vHx74+hv
qzzv79y5nurzLeVTMterm0fn3drLaBFd69CewmHRtRHtO7SOrj+oDv9z7v9L
Nf/Do2sX2tdoF127+DxYJ8kvNdQYcrwMf4X9odwxdyP8MPyZfCntL7nzptux
j8ydL2juv5Z7/t8Bj4Jvgt8P9hHSCV/A8zWWmfPmPDp3Vq63Ofd+n/zhb8n7
QMoFxkfXtJWPDIi+v/Rz/+jalMZlp+hvJQ3cN7o2pZylX3R9TPrquOj61Q9a
xxwXwPW4/9CS4+hHuePnd5lr4OdGv7/q2OdE/48P8P5n0eee4jtsyT03VDOp
GR3HFeu/zT2+2pOaiv3+zPWNfRQ/MufIm3LvY2qs/yq0gfLlb3LH35PkF5Pr
6XpP7Z/q3VRrahTtf1SfqRG9R6Na08Ecp8C1pN1K1hbSWvr+vxTrRWOtNaJa
j8ZU2koaXeMi7aTakdac4vxI7nNiyWOsNV655PU/Ch5Z8hjLt+9ajKPySe0B
KCaqnnZQ9H6f7qN8U3VL5UuKh98XfnJYyWv1w9y66JvMe5o3ROtJ1X/2jt7T
UcyTD9Ia0R7KGdivzaxHVRfrW6xxrVmtPeWP46Jrofomipu6/1PSEblr+9qT
liaTRtIezenRels5+NnRdWb5zFCyj1ZOPSF6r0d7IhPhWzPnsxfB8zLn7GdF
112V3y2J1uGqPy+O1uenw5uTa9ka66Ylzy3Vq1XLllZXjei33HvKqsn8mnsf
WfspF0fny9Ltl0Xvh2qP+Kro/Fo6//LovVTtC18ZnY+rLrQ19x609ognRc9n
1XB+yL3XrHrLT7n3o5XbPh6dI6jm82PuvWnlYldE773qf2lR8jdVnvtYdD6o
2tc/uffUtGd9XXTdQ1p0YMk+V1r0+JJ9ovapr4+ugag2tSP3XpvGU/Ucjalq
Wb9jb5K5nrYt9969/EmI9kvKfwdG74OovnFh9B635q3qG8otVLu4IHofXHtY
l0Tn6apjnB+9D/5qsIbS/pTqbNtz7wNKX21L3nv+P5T16lU=
            "]], 
           Polygon[CompressedData["
1:eJw1mnfgleP/xp/nfu6DqChJqVSkaKqEJKVBg2hv7TRoaxjZe2sghQaZhayG
kb1C2ZHta32jbGX8rtf3un9/nDqvz33O53POc+739b6u931qD5/YY0LIsuwS
/RP1fx3987xuZ+dZNll8aZFl28XrxA+Kn9X953Q7S3ymbpdofZt4re4/oPUZ
4m/E94kXi5uJ14mniseIj9LfOV33h+v+t7rN0vp3Wl+hny0VjxF/LF4kvkE8
VvyJ+FbxHHFT8VrxFPGp4svFP4ufFK8SzxR/K75fvER8mfgn8RPih8SjxaP0
Gm4RXye+Nvo98V4mietrfY14nHio+Gc9dqn4MPEhPF7rv/Ac8WpxLt5Lj2kn
PkLcX/y21q8WXyDeqbXl4lbipuLdtV5FP+sibiveQ7xS613Fx4r/0tpd4qPF
zcRltf6A+ARxO/EU8VfiO8ULxTeKfxe/Jl4v/k3Pv1N8hLih+FfxHeLDxQ3E
v4iXiVuI64t3iHfT7SjxoeJq+n2Pan2guLt4P/Ej4gHik8UTxZ+Ll4pvFlcS
PyzuLe4i3lu8StxL3FlcUfyQuKe4k7iCuJb+Xg/x8eLNuv+6bj/p/r+6bdL9
jbr9wmvX7R3df1y3r3T/D90m6flf6Pct0/MXiP/W2t3i1uLm4sla/1J8h/gW
8dtaf1S3L3X/d92u0/qv7GGtrxGfKt4iXii+XnyT+A/xBvEz4ii+X9xRfJR4
sPh98fXsffFI8UfiG8VXi/uIN4ovE88Wjxd/Jr5dPE/cW/ym+FLxOeKB4nfF
14ovEg8QvyO+RnyhuJ/4LfFV4vPFdXV/k25Xis8T36b1RXp/b4lfFg8Sv6f1
68QXi+8U7xB/KH5TvFy8U/yReKP4Vd0/sXBtdtPvma77X+tn92r9dv2sEN8n
7iBuKS6JV4iPE7cSB/G94vbiI8W1xYfq9wwX9xUfKF6t9ZHi/uJh4g/Ec8VX
iMeJPxXfJp4rni+ep+e/Kn5a3Ev8htYvEZ8t7i7eIL4I/RH3FL8uvlh8lvgn
PXeJuLn4YPEjXO+0pz4VXyD+UeuPav0+9oPuH1iyJo0Qt9X6ASXX/zDxMeLa
4rFJD45m/4rHiIeIh4s363fME1+Z6nuXkuupaaqf8iXXO/U9QvyhHj9ffFWq
f/SgVar3MuKSHt8y1eNh4hriUeJB6Ke4pvhU8SnpehwiniYeL14pHinewDVM
elm95M+jn/hI8f7i0eLBmT/7g0vWU/ZAZ3Fd8STxaHFXcT3x5KS3HcV1xBPE
I8XHiw8STxSPElcVlxN3Tvq2qziKjxQ3SXqTieuLa2dsMO0hcVNxPWEj8WDx
k3pcr6SvhbhZ+jz317UbJX5X69+It+v/f/Sz6lqvIv5CvD23ZpRJ+yHTbX/9
rKrufq77/UvWhN3E2/T/33p+Na3viwaJc60fKq6b9jf63jzpf8WkX+1TPZQX
76rHtxG3SHqPnjYQH4Bm6f6/+v2HiGuJK+vxe+jxx4uPEVcRlxV3ErcR7yne
TdxWfHjSy91L7i/U117iMuJjU785QL97tPg9/Z3vxIeKh4k/4H2xnuqxZ9Lj
qeL/6DHLxYvEW7Q2V1xRXFF8sNYr6/n9xCeJV4hfSxr9gfgQ8b5a75/6AT7h
Ba1tzewXbtf6n/p9b+vnr1D/qb6e0WO+FzfR+n7ioVrvw+sVVxMPS3rRWFxV
PETcO3M/rlJy/6Effa/f84fu75Ve77fiv/Q3yosriM/V4/8rXiW+W3ym+Hvx
SvEyXj+9VL/vVT1vW2YdfUX3f8yspw213kPrb+hnP/MzPX+rfvawHnePuGXw
3tuR2cOcr/UftP6I1u/N7C9GlPw70et64n3EfbXeLe1X9mOztN+b6LlDtP4+
7yPt35ui9yv7+Qfx7eLG4jrireLbxI3EB4pr6vdX0PNPFh8nPkhcSdxHfKL4
v3r8rXp8w7Qfa2m9ota7p/6LXu9dcj/ulK7vouj9WztdX653/bR/PxTPib7+
XO+vxQvFdcXVxV+JF4gPEO8n/g9eS1xHXA09jK7P6qnevtT6zfpZrVSfH4vn
iSuJ9xZ/Ip4vriyuJP5UfKO4ingf8Si9/uF6/S/r59eIa4j3FHfTegdxX/FQ
8fNaPxf9oJ7FJ2m9o/gt/fxh3T7X/d/S++tX8s/4qP7RP/fo7x2jxx+W+Vpx
zdirTdJnw2fEa/krt1feM9pr4pnpNfQcau28YK9cPtpL45m5lh+mv/V97lqk
Jgs+u9zX4uPkzbeKl+v+Fv3/T+b9S52/FLx3qXf20XPBtch+ul/3v8jtrfBY
K/BCOcLq/c3eLRfdC9nDXGuueYm13N55r2hvjYfGa1egHjJ7brQETeHaTw6u
vT2ia4UaJAvsGu3FyQR4/TLRtYjnx2vsEp0V8Bx4uyLau+Hx8HIx2uvi6fC+
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
Tbnn8czPupc8n2cedo34KPFDuedTc8StxY+LV4ivFB8pfkC8XHyruAPzs9zn
TYvE7cXr8f6Z5/8dS86qZNa59ELyjHgln6G4pfhB8V3iheJ25CeyQWZ/8FPh
WRWzMGaZzDQ7iKsH57MnCudJZjRcK64ZtTcn+NpyjdGOucH5dlPhfMqZFq+F
10Tt3xBcP28UzrecKeBvXi+cf9sn//Nm4bzMmQt59dXCeZkZOXnyycJ5lRkT
s7aR0fM7Zm58dnyGaNdN4vrRMz9mJdszz9qGRmc/ZiVcC64J2nJzcJ5+Oekp
Z2bUMjVNbU1N+fgVNCTzGRufHZ8hWnd9cDYlo+7MPJNFnzeyhzKfmfDZ8hmz
ty4PnkU3i86azKTRZvYv2rVMXEVrH9EnM8+omE01jb7PjAqtRDPfQyuD8/K6
wnmfGSKzK2ZYB4nLJr3aUHiWxZkZWogmojWnBWspmoo2jQ/WdjT+XfHdwXub
Pf4+2h+szWj0O+K7grUXDf6EWgvWVjT2U7RfPEhcI3p2/0RwL6GnUHsXiatr
bX3hLP51Zq1D89jLFwZrMxqN9k0Lnicy02eW/1Xm8w9muMy2NmfWfnoAvWFw
cF5/rfB8hjNWtHJY8hunBGspmkotXhBcu9Qws+/7guclLxX255yhot1oOLV8
dvDskRkks4gGwfOMpwvPU5iRMpsfET07YHZHbVKj1OIVwfOkZwvPE5jZMl95
rnB/YebboPA15NoNy3z2g1+nt50UPI98vvDnzcwYrUFz0Iorg7ULDUNLrgqe
nTBDYZ7NXJt54+rC8xxmsN8Ez0fWBL8H5l9rtV458wyWeeGawvNPZrTMLx8v
PA/jTIHswYybWSQZhHnnY4XnR8yQ6a+PivPcZ74HR59hMMukpplnvZj6LWfw
9E56KNp4ZvB864XC+YgzmsVoQfDr+zv32Rd5hLOrY4K1Ew3FqywI1lY0Fq9x
S7CWoqlo98Jg74KHoVcuDvZKeCa8y9Jgr4PnoXfeHty76eFo7VnBXgXPQq9Z
EnzWwZkHZ2utg886OPMYib4FnxVwZsDZ3GHBZy2cuXDWeHjwe+M9Nsn9GTOP
e6bwPI+ZPWcl5K2h6FPwWQ5nOpwVtgjWpgNTfkKjOCvgzICzxeZaP0VcO/os
aX3wWQ1nNqOoF+q/8MyGWc1JheedbxWeL/EdBbwdHu9j8YP4Da2XS3pTLXg2
SI1Sm8wImQc+VXh+yRkBekg9k/+35fYSeApmW2RKZlnMtAblnllRT+wXvNWI
4NndZ/p/18wzPPoDZzJ4sZHBszvODJgfMcNjFsgZAfMAZoLoK/N4zja+y/27
+J2PpT1FrdSMngVSM/TDmdH6hIfgbLZP9OfHGS1nrb2jry9nrvTLWdF6hyeh
X50pfiSz5+D6cwZNbT+Vao8aLJ95Rkn/op7OE/cOnk1yZjoi84wSbUAjuDZr
U387K7rf0PPZjxdE92M8NPv5wuh+TgZA7y+J7od4erwhespZMh4R73RldD3g
oeg/l0bXE56d/nBZdD3hgdDPy6PrCQ/EfPudwv6R74iQT46P9hucyTBv7hzt
9zijwqteEV1feFb6y9XR9bc57berouuLTEG/uSa6f+LpyRZkDF7/bamez4/u
12QS6ve86OxBZiH74Beey5yBOHvvRUbMfAaPfpwdrdd4MPRidrSe4sHohxdH
+w8yC3ufGjgxd43Q3y+K9ktkMPTnnGh9xuPxXYN+0fXOdw74rkHf6PrlOwec
pVK/wzN/ZwE9nxbdf1YlvzUjun+tTv5kerR3xWPiZfG0vN/rUr+bEJ0t7k79
Ymq0fuFR6c+TovstmY/vCpwSrafMq+k/Q6Kz+LTkbybjwTN7WPr3xGj/RGYh
y5BpeD3nB/fP06L9BxkI/zGKTJw509Hvx0bXL5mMPNMp2v9z5sn5yduF80bP
1B/GkTEyZyz2K55/C68n6fP4aH+zJPm7MUk/FiQ/MDy6n5Kh+O7D4Gi95jsQ
+Ilh4lmZMyXZjozH9ZsS7KdGR/uNOWn/krk+Eq9M/X5KdP/Ck6Pv3aLnUf1T
v+oZfb7IdzboDydH53fOxNHj7tF5jjN0vqsxKFqf+c4G38UYGN1P+E4G32Xp
H90POG/guxsDovWC73DQb06InhdwRs1srXF0b6BHcN7ZJTpf9Uj95aToeRnn
A/SzHtHnQ5zh00+6ik/IfAZN/zkxen7Fdwr+D7w2Ayk=
            "]], 
           Polygon[CompressedData["
1:eJwt13nAVWMaAPD7ffe7ZWmzVLZKaUEqKYkWSxvaSIvQokXRvu/7vqeiVZEi
KSkMY4RENWM39lFhSBrbjCWGyu/x+uPpfZ7fec+597vnnPd9Kt9tQJv++ZlM
5mWRE0cKMpna4kheJnOGOFOcks1k3hblTWysvsy8Iuq3xOmsPqvFfpL/nRUY
K7My7LD8HyxnPJeVZd/Ld7E849nxOexM9XviXNacXcV+kO9m+cYK8V1YUfU/
xRmsAavNSqrfFeewpqw+y6pfEyex2ux89pv8ZXa88QJ2DvtRvodljRXZWews
9fviPNaCNWLF/ThN/S7ns5aslciZ84Y4hdVRX2Begfp1cTK7mFVlR+WvshON
1Vkllud6dV2vCKvBLhSnmvOOqMCaqOvF72LOjmz63eL3e9qxws5tyM+UN2SX
iyPyV8w7wVhNXdH8Quo3xansElaNjVPf4dzR7FH2AKvMmrNarCe7mY1lfdgY
tpU9yDaw0uyB+HvYTvatup+YxJ5kfxHDzLudDWUb1WvMe5CVYuvje7IX2LL4
buxutp09xsazvmws28Y2sO3qS3gd0VZ+pWPPGi9W1xbt5FexO+NeyOfLn3Du
JufOZYPYLPYce4JNYf3ZZPYU28y6sltZJ7aIzWRdWDfWmS1ms9gBdS8xmG2I
30XMMW8wm82ej9/AvKrqV9Rvq98Rr8qHmtebD5E/xFbHPVX3iGAr2AI21bwB
bAr7K3uETWMD2VT2NNvC5rOhbC57gT3F6ns2hrEF+elexD15Xl3P3MtEB3nj
eCeNLeK+i87ylvHuOHeCfLX8JeftEpfK+xr7iO3ygz6jjXO6mNdaPYWPYrvi
uryRuEl+TawFxmvV14hO8XnxPhubqpuIm+M4mycfIp8j3xHf2fX2qK/mzcQt
8uZx/4yXquuK9vJG8XcbL1c3FB3j2vE+ydvIG8gHul5P17uQ3cAaskHsNrac
lWRL43lij7MdcR6vL26UN4l3Vn69vL58gHk94r6xVqwO6806s0qsRayf7DZ2
C6vCWsazynqxTqwauy7uCevPurPzWOt4ztntrAsbY3xR/ZV8p3G0up1538bf
px6h7u/YN/IX2a/qUqIkKxe/u+tVd6xrnMdKxf1hlVgH1pKdza5lNditrD0r
y65m1VgX1paViXvBLmCd2Q3syYK0JlZlneLvFaXNu4pVZO3VLczbWpDWq7Py
07oZ62dx865gZdl16ibmzWTF2XS2md3PirHLWRnWmjVms1gJNoM9wtaxGawY
m8Y2sbWsBLuSlWPXs6bsNNaYVWY3xjrOZsc+wWayLWw9G8EKsWFsFVvERrLC
bDi7hy1mk1gRNp6tZ6vY6Nhj2Ei2ht3FjmP1WEnWjDVgp8d7wKqwjqw1G8WO
YyPYaraETWZF2QT2ALuHHc8asNLsmtgD2MTYY9g4to6tZIXjWWal2NWsIfs5
9gNW2Hgpq8F+iT2MFTLWZdVZ7Vxa2yfmp3Uu1rvvYl9jx+Q1RWXz7vuzZzj6
5z4W+9k5PvcDUdP8tupr41mLe1GQnp14hp517DR1TXFIXUyUcKxPNjZS74Hj
C9l0Zd/oF9gdsc6zGewOdizWVLaATWMLYn+IZyvWNd9/R7wbbGdByg+Z0yze
O8d7sj7y+5y7lFdXf5ZNx98Tv7Ib1f+L9SZ6FjGYLTLvUfYv+SPs9fhO7KHo
k2Kviz4j3mP1UdFLPt9nTHVsYPQzsWeyJbF3sMHRM7EB7G42j/WI9zn2JDaD
jWfd1L/E2sumsbGsu/r/oiubzsbF35FLe9Qgtowtjz3dnB9jjWQTYo827xb1
T7Fes4lsOOukPhxrM5vERsS9Uv8c6zCbzEayQ/JaPuOw+jxRjg0yJ8uiobyL
zWVDWI4NZEvZfNabHRG3xdrPprCe6t9iv2Uz2YRY/6Kfce4odi+7m20sSH1T
0fzU90T/cyyeY1bMeIX64kw0gPY7Vpxdyeqgz6PP4N/H9xUnss/YM3GP1WXE
CbHHx37AflCXF0Uy6d5Oc70Nju3LS/d5I5se953tj32e3cVGsSWxx7Ln2Cfy
v8W6HeujKMwORq8Qv7+6Ujz7bF/0I+wr9Ul5f7wCmS9i34t7F++UKMr2R1/A
vlafkpf69q9iL4znQ31yOPs4egX2TewJohBboh7pwotjf453kK1gY9jyeJbZ
S9HLF6Q+YmF+6gOiH7jHvHFsJXtTvTvefTaR3cvezUv/j1jNxrNV7C22h30t
3xnPqvrUiFhzClK/sSY/9UjRK91vzmS2lr2vftW8tWwSuy/eS/YKW8+msnXs
Q/Z6vJdsOLsz+gz2DFvMRrBFbE/0MGwlG82Wsddij2Wr2Fi2gr3BdrF1bAq7
n33AXmOb2Sy2iX3K3o8eOPqleH7Vp8UezDapZ5r3sGOfsPcyac2Yzbawz/PS
+lGRfSguYu1Y80zq1T7Opv6mXC71bbPjd1R/4/hu46y81Kd8kk393Nm51LNU
jXUpeiR2szltMqk/+jSbepnyudQrRR+1P5v65rK51FNdJD6K/ZZ1d25H594U
70H0Qmw8G5pJffe+bOrDy+RSD94x3ivRgY0zb4h5tdR7Yy1mPdhNrIP6v6It
G8UGstbq/4hWbAi7nbVSH8qmvvRcn9EyzolnWVzPhpvXz7zH1fP9po+xL9l+
9hibx7axg2wf2yt/Mj4neo+8P5aHzFb/zIm13LED7CO2jc1lW9kXbC9byE5m
89jj7OFM6k2/yKb+tVIu9anR1x7Ipt63Yi71uDfEeyquY8Oc29e57dXfxTE2
kg3IpF78y2zqkavkUl8evfPBbOp9K+dSHx1727+zqc+tkEv73MNihu+3kX3s
eu+6Xr9YX1lftpYtY78DPdPflQ==
            "]], 
           
           Polygon[{{1058, 1057, 703, 363, 364, 704}, {1054, 1053, 699, 348, 
            349, 700}, {1049, 1074, 496, 283, 282, 695}, {1063, 1123, 611, 
            409, 408, 713}, {836, 997, 584, 706, 1168, 835}, {1061, 1120, 597,
             394, 393, 709}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{271, 491, 1171, 272, 504, 298, 1280, 519, 313, 1285, 534, 328, 
          1292, 549, 343, 1301, 564, 358, 1310, 578, 1214, 373, 592, 1229, 
          388, 1323, 606, 403, 1325, 620, 418, 1330, 635, 433, 1337, 650, 448,
           1346, 665, 463, 1357, 680, 478}], 
         Line[{273, 492, 1172, 274, 505, 1181, 299, 520, 314, 1286, 535, 329, 
          1293, 550, 344, 1302, 565, 359, 1311, 579, 1215, 374, 593, 1230, 
          389, 607, 1241, 404, 621, 1250, 419, 1331, 636, 434, 1338, 651, 449,
           1347, 666, 464, 1358, 681, 479}], 
         Line[{275, 493, 1173, 276, 506, 1182, 300, 521, 1191, 315, 536, 330, 
          1294, 551, 345, 1303, 566, 360, 1312, 580, 1216, 375, 594, 1231, 
          390, 608, 1242, 405, 622, 1251, 420, 637, 1260, 435, 1339, 652, 450,
           1348, 667, 465, 1359, 682, 480}], 
         Line[{277, 494, 1174, 278, 507, 1183, 301, 522, 1192, 316, 537, 1199,
           331, 552, 1205, 346, 1304, 567, 361, 1313, 581, 1217, 376, 595, 
          1232, 391, 609, 1243, 406, 623, 1252, 421, 638, 1261, 436, 653, 
          1268, 451, 1349, 668, 466, 1360, 683, 481}], 
         Line[{279, 495, 1175, 280, 508, 1184, 302, 523, 1193, 317, 538, 1200,
           332, 553, 1206, 347, 568, 1210, 362, 1314, 582, 1218, 377, 596, 
          1233, 392, 610, 1244, 407, 624, 1253, 422, 639, 1262, 437, 654, 
          1269, 452, 669, 467, 1361, 684, 482}], 
         Line[{281, 693, 1370, 695, 282, 509, 1185, 303, 524, 1194, 318, 539, 
          1201, 333, 554, 1207, 348, 699, 1372, 701, 363, 703, 1374, 705, 
          1219, 378, 707, 1376, 709, 393, 711, 1378, 713, 408, 625, 1254, 423,
           640, 1263, 438, 655, 1270, 453, 670, 1273, 468, 716, 718, 730}], 
         Line[{285, 498, 1176, 286, 512, 306, 1283, 527, 321, 1289, 542, 336, 
          1297, 557, 351, 1305, 571, 366, 1316, 585, 1222, 381, 599, 1235, 
          396, 613, 411, 1328, 628, 426, 1334, 643, 441, 1342, 658, 456, 1352,
           673, 471, 1363, 687, 485}], 
         Line[{287, 499, 1177, 288, 513, 1186, 307, 528, 322, 1290, 543, 337, 
          1298, 558, 352, 1306, 572, 367, 1317, 586, 1223, 382, 600, 1236, 
          397, 614, 1245, 412, 629, 1255, 427, 1335, 644, 442, 1343, 659, 457,
           1353, 674, 472, 1364, 688, 486}], 
         Line[{289, 500, 1178, 290, 514, 1187, 308, 529, 1195, 323, 544, 338, 
          1299, 559, 353, 1307, 573, 368, 1318, 587, 1224, 383, 601, 1237, 
          398, 615, 1246, 413, 630, 1256, 428, 645, 1264, 443, 1344, 660, 458,
           1354, 675, 473, 1365, 689, 487}], 
         Line[{291, 501, 1179, 292, 515, 1188, 309, 530, 1196, 324, 545, 1202,
           339, 560, 354, 1308, 574, 369, 1319, 588, 1225, 384, 602, 1238, 
          399, 616, 1247, 414, 631, 1257, 429, 646, 1265, 444, 661, 459, 1355,
           676, 474, 1366, 690, 488}], 
         Line[{293, 502, 1180, 294, 516, 1189, 310, 531, 1197, 325, 546, 1203,
           340, 561, 1208, 355, 575, 1211, 370, 1320, 589, 1226, 385, 603, 
          1239, 400, 617, 1248, 415, 632, 1258, 430, 647, 1266, 445, 662, 
          1271, 460, 677, 1274, 475, 1367, 691, 489}], 
         Line[{295, 697, 1371, 698, 296, 517, 1190, 311, 532, 1198, 326, 547, 
          1204, 341, 562, 1209, 356, 576, 1212, 371, 590, 1227, 1228, 386, 
          604, 1240, 401, 618, 1249, 416, 633, 1259, 431, 648, 1267, 446, 663,
           1272, 461, 678, 1275, 476, 720, 721, 722}], 
         Line[{477, 679, 715, 1356, 462, 664, 1345, 447, 649, 1336, 432, 634, 
          1329, 417, 619, 1324, 402, 605, 1322, 387, 591, 1321, 372, 1213, 
          577, 1309, 357, 563, 1300, 342, 548, 1291, 327, 533, 1284, 312, 518,
           1279, 297, 503, 1276, 270, 490, 1368, 692, 723}], 
         Line[{483, 685, 1380, 717, 469, 671, 1350, 454, 656, 1340, 439, 641, 
          1332, 424, 626, 1326, 409, 611, 1377, 729, 712, 394, 597, 1375, 728,
           708, 379, 1220, 583, 727, 1382, 704, 364, 569, 726, 1381, 700, 349,
           555, 1295, 334, 540, 1287, 319, 525, 1281, 304, 510, 1277, 283, 
          496, 1369, 694, 724}], 
         Line[{484, 686, 719, 1362, 470, 672, 1351, 455, 657, 1341, 440, 642, 
          1333, 425, 627, 1327, 410, 612, 1379, 714, 395, 1234, 598, 710, 380,
           1221, 584, 706, 1315, 365, 570, 1373, 702, 350, 556, 1296, 335, 
          541, 1288, 320, 526, 1282, 305, 511, 1278, 284, 497, 696, 725}]}, {
         Line[{732, 1048, 1073, 1368, 731, 1171, 951, 733, 1172, 952, 734, 
          1173, 953, 735, 1174, 954, 736, 1175, 955, 737, 1370, 1049, 1074, 
          1369, 738, 1050, 497, 739, 1176, 956, 740, 1177, 957, 741, 1178, 
          958, 742, 1179, 959, 743, 1180, 960, 744, 1371, 1051, 961, 1052}], 
         Line[{746, 1075, 1276, 745, 504, 747, 1181, 962, 748, 1182, 963, 749,
           1183, 964, 750, 1184, 965, 751, 1185, 1076, 1277, 752, 1077, 1278, 
          753, 512, 754, 1186, 966, 755, 1187, 967, 756, 1188, 968, 757, 1189,
           969, 758, 1190, 970, 759}], 
         Line[{761, 1078, 1279, 760, 1079, 1280, 762, 520, 763, 1191, 971, 
          764, 1192, 972, 765, 1193, 973, 766, 1194, 1080, 1281, 767, 1081, 
          1282, 768, 1082, 1283, 769, 528, 770, 1195, 974, 771, 1196, 975, 
          772, 1197, 976, 773, 1198, 977, 774}], 
         Line[{776, 1083, 1284, 775, 1084, 1285, 777, 1085, 1286, 778, 536, 
          779, 1199, 978, 780, 1200, 979, 781, 1201, 1086, 1287, 782, 1087, 
          1288, 783, 1088, 1289, 784, 1089, 1290, 785, 544, 786, 1202, 980, 
          787, 1203, 981, 788, 1204, 982, 789}], 
         Line[{791, 1090, 1291, 790, 1091, 1292, 792, 1092, 1293, 793, 1093, 
          1294, 794, 1205, 983, 795, 1206, 984, 796, 1207, 1094, 1295, 797, 
          1095, 1296, 798, 1096, 1297, 799, 1097, 1298, 800, 1098, 1299, 801, 
          560, 802, 1208, 985, 803, 1209, 986, 804}], 
         Line[{806, 1099, 1300, 805, 1100, 1301, 807, 1101, 1302, 808, 1102, 
          1303, 809, 1103, 1304, 810, 1210, 987, 811, 1372, 1053, 1054, 1381, 
          812, 1055, 1056, 1373, 813, 1104, 1305, 814, 1105, 1306, 815, 1106, 
          1307, 816, 1107, 1308, 817, 1211, 988, 818, 1212, 989, 819}], 
         Line[{823, 1213, 990, 821, 1214, 991, 825, 1215, 992, 827, 1216, 993,
           829, 1217, 994, 831, 1218, 995, 833, 1167, 1219, 1220, 996, 1070, 
          1060, 1221, 997, 836, 1222, 998, 838, 1223, 999, 840, 1224, 1000, 
          842, 1225, 1001, 844, 1226, 1002, 846, 1228, 1004, 848}], 
         Line[{847, 1003, 1227, 845, 1320, 1118, 843, 1319, 1117, 841, 1318, 
          1116, 839, 1317, 1115, 837, 1316, 1114, 835, 1168, 1315, 1059, 834, 
          1382, 1058, 1057, 1374, 832, 1314, 1113, 830, 1313, 1112, 828, 1312,
           1111, 826, 1311, 1110, 824, 1310, 1109, 820, 1309, 1108, 822}], 
         Line[{850, 1119, 1321, 849, 1229, 1005, 851, 1230, 1006, 852, 1231, 
          1007, 853, 1232, 1008, 854, 1233, 1009, 855, 1376, 1061, 1120, 1375,
           1071, 1062, 1234, 1010, 856, 1235, 1011, 857, 1236, 1012, 858, 
          1237, 1013, 859, 1238, 1014, 860, 1239, 1015, 861, 1240, 1016, 
          862}], 
         Line[{864, 1121, 1322, 863, 1122, 1323, 865, 1241, 1017, 866, 1242, 
          1018, 867, 1243, 1019, 868, 1244, 1020, 869, 1378, 1063, 1123, 1377,
           1072, 1064, 1124, 1379, 870, 613, 871, 1245, 1021, 872, 1246, 1022,
           873, 1247, 1023, 874, 1248, 1024, 875, 1249, 1025, 876}], 
         Line[{878, 1125, 1324, 877, 1126, 1325, 879, 1250, 1026, 880, 1251, 
          1027, 881, 1252, 1028, 882, 1253, 1029, 883, 1254, 1127, 1326, 884, 
          1128, 1327, 885, 1129, 1328, 886, 1255, 1030, 887, 1256, 1031, 888, 
          1257, 1032, 889, 1258, 1033, 890, 1259, 1034, 891}], 
         Line[{893, 1130, 1329, 892, 1131, 1330, 894, 1132, 1331, 895, 1260, 
          1035, 896, 1261, 1036, 897, 1262, 1037, 898, 1263, 1133, 1332, 899, 
          1134, 1333, 900, 1135, 1334, 901, 1136, 1335, 902, 1264, 1038, 903, 
          1265, 1039, 904, 1266, 1040, 905, 1267, 1041, 906}], 
         Line[{908, 1137, 1336, 907, 1138, 1337, 909, 1139, 1338, 910, 1140, 
          1339, 911, 1268, 1042, 912, 1269, 1043, 913, 1270, 1141, 1340, 914, 
          1142, 1341, 915, 1143, 1342, 916, 1144, 1343, 917, 1145, 1344, 918, 
          661, 919, 1271, 1044, 920, 1272, 1045, 921}], 
         Line[{923, 1146, 1345, 922, 1147, 1346, 924, 1148, 1347, 925, 1149, 
          1348, 926, 1150, 1349, 927, 669, 928, 1273, 1151, 1350, 929, 1152, 
          1351, 930, 1153, 1352, 931, 1154, 1353, 932, 1155, 1354, 933, 1156, 
          1355, 934, 1274, 1046, 935, 1275, 1047, 936}], 
         Line[{950, 1069, 720, 949, 1367, 1166, 948, 1366, 1165, 947, 1365, 
          1164, 946, 1364, 1163, 945, 1363, 1162, 944, 1170, 1362, 1068, 943, 
          1380, 1067, 716, 942, 1361, 1161, 941, 1360, 1160, 940, 1359, 1159, 
          939, 1358, 1158, 938, 1357, 1157, 937, 1169, 1356, 1065, 1066}]}}}, 
      VertexNormals -> CompressedData["
1:eJx0fHk0lW/3vlAapNAgFYVSaVCSDNmZosxFhUhooAkhKmQolUbN0UQqIpKE
5DZknud5OM7hmGVKKvrdW73f9Vnv7/P2z1nPs/ba59rXs+37uvZpPUutTu48
yMnBwXFoMgcHF/1ct1dgx/4LbDJvJOZHomIL/Mxs8t1/oQravocT9exW8psr
kk/8PROWqTrnh9rWwNPhTW1u95lEat3AZEm1VlAQN+oLP14H28PmnBqvaSbL
S2cqG9a3gWjhtDvu7g0QahhoqjdSSwQXOlToWLdDm4F8Sp1zE9yV52c69ZWS
Y373iiZFd4CYOjhdvNUMhorpdxrvpZNRw1RxkdudsP9xwXdOCQYsuNVVa7hX
Rdnw1dINcqzOv9cMcI/dEkfjYZNbuBjGb0hbMBHv4bJugOYHqH5SgPkzrX84
Yn5Tkyw7igfOdGiVIp5vycuTEI9BiOBpih+Sto8qIn6HStNbiL/A8nwnrRea
BFdwYb1PviZ2Yb064z3plB8wmGsyA/n5prYqG/kZO7BAh/IJAyK135HPukJ3
b+SzcvHQqpRH7YSHFXJQzqQZ6sddjqQ8qoZfPx+ERo+0kWb7d3JtBQzoy33x
LiSvFuYeYvuX1LBI2/udwbYHmTAz/4TzgHQD2HebfvMWbSHvcxO7sgRagcSL
eS372ARcc4NL8w0bSG6b6LJTiW1gnHHLyEqYAWtuDPfV5JWTNN6U/RfXtoOC
1SSWxYYWmOtX38MXkUE0apQXKsp0wL3qAJ1r31rgd9vm6vAtasqhI6W+Sbc6
/l4z4YfOe4FZERmgLftzAcaf1nuqjfEPZitx1OaVw4LFvuaY/zjHrhbML2x/
kUnxAPEIXYp47D4PGiKeTYb8Pyl+eGol0YH44/K3uCP+Hnvhm7ReGKy2f4r1
iu0ScsB6U3e/DqP8wMEjJhuRHweXoAjk52N35WrKJyweKbNGPkNykg4in8M6
DM7JLztIj7FM++7D9bDIlENt8ssaSA7PPy0t3k5ImFyL47omSJ1ychXfynpo
0GKpaSxtIy5tX8hbSQYY6B7XOvCzES6dCuLRdGYS6+8nEktqW8CLM3rnkykM
ULezl13AaCIc5wen8TxggUHED6UXD1rArErl8lVmJdnnfvda3Zo2WN9rvn4h
DwtMln0MvyuQTbQ15ih77mJDXKjoFrXZreDgnPBRwVFDWfG1JflF2H+vKR+P
T1TTePjk5KSE8aGrXitifOXKhEc0P6hMF/bH/NdElqzD/KztUhoUD6wSeDgF
8Qx5D8ojnpNaerwUPxR/Sf+I+FfN0TRA/OySXk1aL2RmtiZhvQJvtqhhvePx
989SfiD3KalDfjyf3pdAfm76PuSmfEKXSxYL+Yy17wDkc8xs0fzvgZ3EhMvu
+khAFeUx2OR7YC24CwnKeG/pIKoi+eU35tVC0UONS8cdGyDyu0P6lv1swvrq
xys4Vg9k/+ff6vuawUzalkuygEUkIvmOT1nSDAZbZu70lmkBn8mnyoM1GWTy
bvESxXr63C09qttXsICTnS+xUKqGfPxg3fHKmwlbX0j9/ji5DT5Llvd9+ZJL
DqwQOCOfwoJ84eDnq4+x4Z3RnU9pg5rKPeE/rfZubv17zQZFT3mxjC+5IJSq
5YrxbkWPn2I8P7GTo/nBt5K0YX7NFOlfmP9dlkQdxQMVm3cUIp5n1poViGeT
EedUih+CehztEH+G70J9xF84pppF64Wd+0V4sN50m6hfWO9W5WubKD+gt41R
iPz4x9/3Qn5uOLwUonzClPtm/shnpei63cinipdN7OOTXUTojmNSrUIprLv6
8/vjk3UgIvlqL8emTlKw5pvkNcNySNA9yLv7TiNkr/A6rOfZTlz6lvZn5FRC
WtURlc5lDPjEYOUunt1G7BcBuf2qBk5scVIT1mPCjNGgkIb7LcRNuGxqSFk9
DIoMua551wrt+0QzeL3qiI64hqP6zybg3xdi3zW7HaRsuUc5gwvID3P/SlcF
BrxP3N+X1tMBNw1NL4q+2qG8weh3bvAHxt/rTrA5LrSKK7gATN/3lGO88sr+
boxPcUiupvlhhF/4OOZXTyHHML/JZpNwigduPT7PhXi21Aw4IR45xV1FFD88
/347EfGHtn4FxD+UOvMorRfO7XTuxnpX2LC2YL2qm/PNKD9QVj8mhvw8Pt3J
jfxEWKR+oHxC3d6+BORz8KzMMPK59nvNR1fBbpK7p8UspCkbwl5OH3cVrIen
uYKREj86CQfX/f6lLXkw9rxloZRbEyS882LcONJBbIaqzkX4FMHqsJkx63MY
ELS/rshJhE3uL7xtMthVAr8fr7N7qcCCG1mDryQ+M8nFoj4B5qFyWB2nGmHM
wwbpt3FNg8EN5NBp0VKz0UrQuygdebe3A2Z90OzmW1NMrjgkM5Tn1MBq3Rln
avW6wfkFCM5Q1VWelXl0c0xXzd/rHigOypoya00x5L772ojxVhIMF4yfkjB3
iOaHX/1FBZg/u3vna8yflhryluKBazzv+BBP9STXV4hn1al55RQ/OFuOGyN+
izqJQ4ifczyXReuFpZ+Zzliv/+CSt1ivu3R3FOUHOk6YdyI/cV2JgsgPbJqd
QPmEETXtvcjnJOWxUeRTXEdw3+mz3eSLwkr9DMUEUBzRDDl9th70tBgnjrp2
ET6vkqCXNklQGClYoTylGdyLZGXDJnWSRayfktlLUmA9eyeP+cYWSGuu879Z
ziYhee2hIm5psG2xTvQ4PT8sk3/fcbnMIpc+tHMKKGRATLGe2odhNixhHX51
dm0TcVjF9+K7VDaIxRPPCK0uSN9V8k1vQwn55ZRYoRWWC8t7dgZMF+qFL2P6
GquV9ZUPvDpJGiLz/l73gcaKzwL6G0pAbvG+Uoz3vX7hOsYXB2xKovkhtm3q
U8w/6cecM5i/KOpRIMUDCjFLxvkpngbZji2I5/6i7hsUPxQV/XqO+Oc3Nr5B
/AlfdTbTeiHRXkUC6511azEX1tuR4uNA+QHVR9J3kR9/74xi5OeW6Tpzyifc
i7TVRj7XN/E+RT7zTO0/LnvaTbLlx8eXPV2d/OezHqKUue8Ivugia2cZb40T
lU7+89kMlh0LM5fJdRKLu35lBSYbkv98tkBrxonHC+e2E4doZUtXAdnkP5+t
8LiSV0+rjEVOnVmSnmOhnHzj54Kgcu12MPhSqf45pYlM+1Eac9hcJfn1yq7O
0OwuWL+k+CPP3RIybX/C1lp11eRLkRptBV96gWPin4Ey82tFT5aCWvKf66+w
y0m1nMaDZ4S+Msbb7ZVtwXj+oGwTmh/UvOZGYf7Nsn0szH/v5mMjigdU389P
Qjyy+9zuIZ5sqRPPKX5wmx9phvj/fLbCPYslObReuCywuQjr/fPZAi/lb9+j
/MAxpQFF5OfPZzOcFPWJp3yCmuT7H8jnn8966DboMsN+rr6iZk75J9y/RCf6
Ock5eqKfXbeHRtDnRb5vGCnH5+Uc+Wwj9vOCektl+nzJLe/OKfh89z1YMdHP
NvonCO0H0rUlKgr7oeyzzEQ/bxmbuoT2M5lebKmK/cNvOx6K/Zwf+yqV9htx
PObjgf1mw1c9jP2cnMM1QvuTfHr/5Cb258Kmw2rYz4oLmhi0n8mf6z5obUnn
x34edggdxPgFxiVXMT5tfkEi9vM0h+AkzL/zbbUr5leLKnyE/dw5unUh4tkk
+1MJ8awv3zzRz/67vD8h/qRxlYl+jin8KIf9/O7ISwWs9+TqD5xY757enRP9
/MqKOxT5ieMJm+jnvft5Jvr55ZiPCfL5ncl6gnzK5m6dmM/y+21s6Twhb10d
xnCe2FaYRuB8Ljh2h0OsJY8o1kyfmM8lq0KacT47Lbt2jc4rYsxyeIfzKvlD
bCHOZ+PIWTZ0vhHTnDW2ON8qnge+xPm82nmzKJ2HpGjju3Cch6Mukg04n0c2
Xm6i85OMyA6G4/yU83/cifNZx/97H523hO2z9DTO2xUKU2fjfD7l0b+Nzmfy
57oHhh0XT8b5fDVvVQ/Gi5iNnML4Qq+L/Tif/aPk6zC/Y9Dcl5h/apB2JM7n
9ZGjwojn3Pm2UMSjl9NXivN5w8AZS8T/aYr4QcQvfLqbifN5be+Di1hv7NoL
kVivpqLMxHyOqTYdpfOZDIsxBZAfzamn43E+H9IuOIh8Tp1tMzGfnzPF3qPe
CExqy6DnI7namzCC56O888o9qDcaOjU20POUrBx/NR3P087jKQdRbxQN7PtF
z1+y+9ParXj+FsxQyEG9kfdofw49r4lC2rgKnte2RZXPUW8IxT0XpOc7eafW
4oLn+xxHVirqDYO1192pHiA3C4uOox54rPxjCPWG6xGdeqofyNGKyi7UD/pn
fLxRb0h5ZRZTvUH+XHdCiSrfctQbNZ/f1mL8d7UjHRjfedGnAvXG6CJrV8yf
vqHbFvN/5Lv9GvXGOnl9PsTzc6zZEfFoHXxdgHpj1CX2C+J3sDurjPjn8eja
ot4oM44ewXo/a4YrYb3mF/VMUW8wHuquQX74VqzhQn5mpXqifoP9XtbpyKdR
Y/8g8lm+7O5c1M9NHdPuU71HogUW7kW9d97qwXrUz9kOrvVUHxK3DP+LqA/X
/UxJRf2seOv1HKonCUvz+jjqyQr5q5NQP5Opug5Uf5J7rUcNUH/OHLhaivp5
50e3CqpXSfx2zcoJ/Tz7/FLUz/x343qoviXzj2hN6Nsat60DqJ93TlZ3p3qY
VG9+/gT1sJhCw0fUz2z5NYepfiZ/rtmwq9ZxAepnWbXmsxjf83rWY4zna1+8
EfVzwweBLswv6qs7ivmVYpVrUD+LPXpWinjYOrPLEE+0+bIpqJ/ltr87gfhn
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
+gGcA+539lDdf+/cwvsZJe1wJmz46LS1H+Ga94MpjmNMsIsdSvng2gle6xR6
DynHQ5lfL1dTPAP4XmttCw7pAg3+zU8LGuJBJVOzU+RlE7hvi1Kj94lsmclH
ep8cSFo9gPeL5QI/0zwkc8PTxYeV48kTrm4ezMP5QuA2/V6yc6zgCf1eYsYb
NR2/95j7VG+Kk8R9cHhGcZL99jp9iFMkPGUOrYsERZh507qI1KYnx7Gu7nCl
T5QHktogPuVwZzhZoDuHgTz8Zw+26b/2YOt3qy99vb8QBPZWzXjhn0VmVcxU
nXGxFzyUNZzoc4HhOxXm9LmQrB0OffhcHufHn6HPEZ7m/pyn/SmRdMQ06uNz
PJ4Teo4+d7DbX3uHPneS0MM4gc9dwUR3iPYJNO8ZjaN9Qt5duGKAfaIQkVBM
+wqafmXPi3cIIuf3cTzAvno23yuF9iHInD1+KnLrZXJPy0YC+1Da+2Ep7VsS
eW7WHtq3pKlf2xn7NlBSsIb2OeFez3Oe9jlpOGzXhX3uPa0znf5dkGu2Ty3p
3wWpVF92BP8upI+OTKZ/RyTjSv0o/Tsiw8JFSfh3VC5g3kb/7kj1w2336d8d
+Tq4Qh7/7vgPnzSjf6fkQOKHJvp3Sj7kXDXCv1P69z4d56fj333Xyr/7Lu3D
QeVbnuXDb97sw/r1VaTqxcUCnZJu0Bv6donODQi5fTGKzg0ymiY6F+eGQPgt
GTpnQCP51wE6Z8hri1kBOGemTg+aT+cS7D30SJrOJUI0NvxOpXMp3dG9ic4x
yP6Wx3HtWBa5zqqcj3Ms0GO5Ep170CqpspjOPXI+Nn4Tzr01pn6FdE5CiCm/
Kp2TRDv1oDrOyTPLX3TTuUqa7W6a07lKYl4cjcS5Ksfv40TnMLHOu+dO5zDJ
u3WxGOcwzzeRATq3ycpPn9rp3CbDFXHbcW7njpiV0TlP+peHRNM5TwTXGybh
nB8c0/Sl5wJ5//moLD0XyIVtq8bwXDAvZLvQc4TwaX1RoOcI6V+79DeeIz2T
hefTc4fwSN9Np+cOKTqxdeLc+c++a9V/7bum7dkjT881KJlsoUjPNWIuIF2B
51repm1y9BwE1qCdOz0HyfUSPk88B43mNjvScxPCP9huo+cmeaUGVnhumsis
lKDnLHDs60qn5yyRc7PIwXM20IL5lJ7L0LapcDo9l4nhB6tWPJeb62xi6TkO
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
NcTPd3XKTvRxG62X5GK9fXc/fcN6X37Y8xx9nO0Ru0jkjS/TYyfy9kL9E/pf
eL0kJRd5W3jkQj/yVreSOxT3ErdbR3OpvyYqMyNl0F9PTj8yGfcSRxfsJtRf
k3evO9TRX0/uefME9xJKwZla1KcTYcejmejTZbySunEvcXP97cnU15PCLscz
6Ov39o2W4l7i6qnHYkUSrcTUiFmFe4BPWk1SuJfg65p64WJMG6kBljnuDeaw
rvbiXsJevUWWr5hNLN/FfsA9Q/2nh3dxL5F3egEvv3w7+XPNAv6wucK4l5BU
NN2I8arlFrEY79g+cwvuJVxHgnDvQThHcsww/6VsqRbcSzgsO4J7EuLlIlSB
eFwn2/fjXqJ0dzfuVcjUpuWuiN/ubUow7iUqSlpxD0Ny9tmnYr0rR5te416i
MvFDFvKm4cCzFnlT1pbiwb3EqED9J+TNpbtdBXkzMiThuE9bIjD3M3tGC0l1
Yx7AvRAZ/3+NnHk4ll3XxpUUSkgpFUka8BSlybhMFSmJIilFk0wNUkSDBiEa
CVGK0mRqQIoWSoZUMoS4uefbLCoNUt/eXj1fn7eO4/vTddR1X8Pe5zp/57X2
Tp9Ic7PaJp9R9+M4iO/LdtMcKWXkIgHNzZxlKzWzlvPwvmtVX+50PTVYh+Zm
W87oTt/dycfjvtf6cqqjc9+W0txs7SiWR/zGRnx0TtuU5loN9UF1NDc7YJh+
SMGxCU9MTIuhOVjK+cr5NDf7fmHzkrbsJvzP3xzgf/4sRHMzoSXeB+m/lwsr
iqb/vmz8VybNzWQSk2guh98doxbT898MdzKjuRlGbaU5HqqPDuXS65Hw5rXQ
3Cx0w4rZ9Pq7m+Wc6PU/EGlTpLnZlxsXaU6Im8POe9D7PTC1MpnmZqNHZdO8
Ee+N71pHn0+s0RWaN4LvOzfJ0ZFMfCK5MJfmjYdE7sq0f+FihnfLqdU7OSA8
OKezKLMO7i97tEHHko1ChUdNisfzIHzzMscijQZQNmFL7GEzcLqI2+OWXD5s
mqakBW+YMFT9DkPjQiXq1kgtstJuhJfrb51REbDg8U/thecfFWDCwydzo5c2
QftUg95jKWxYH6rGGOtVDu6ldyrvn2iEHlnXkodybEi/1DZ0z6g6OCcbhJXK
AlBbZ3/1pjQLPEX57u7nWKCRdNwqP4AHk2zq1ipmN4CDJKyxdeQCu3vJ2Nl1
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
fr8xT6PmEY6DzUce6hKOwwsP0h9Tjqua6LeXcB/oNNyNIdyHDqMrblPuq/J1
NiWcCGmz1V4STsQx9lPXUE6cXLk3jHAl3KiW9iRcicE2+1dSrpywZKQt4VBc
1j5hEeFQDOkedYRy6DG9d36EW/HM/muVhFtRzyLyEuVWtwiZI4RzsSwoT5Jw
LoZVHlhCOdf2rpwi4WJ8Xv96KeFi5BabhlAufv28zJZwND7bFBBFOBofK1T0
cfQ868Czf+q7U1nVeYDwOMTc9XtDeBx7B7O6KY+3+kYVEH6HPPEuyu+44GRk
O+V3pl/aEP8PtRCf9JzyPnrNOuJBef/2aoXFjK0skBFp8FhuxUXJ115qNB+I
sdyno6LKBR+/+TRPQP0N/DqaJ/zKYXYNWBe8+eTirMvAQ80VU4Y4GHKQ8+2h
gOYSwmfS3DpFOKhdsOilehoX/URtrWmOccvST3UX8UsuB2Tf3Fflo5WjggzN
PTyzLktHfanBwf9UvmgNFGDa43t9OcnrV9+Lq7TLMPzSJPONyY240t3nBM1V
4gbkPyr9+c8pNdHRVQpl0CahxlZPbUS/rnYRms9oOWXx33Nr4EVeM81z8FyX
hDjNc0T9n+gnGDNh1Czz+gpyPTN6xq+l+U/U5hnuc4Q5cNhJVH78A/I+N2+Y
S/Oitp45JuX6POgw8aP5EnqrvQ+m+dKv73Q9/d/pfPu/05WvcOjr91vRv05W
uH+dbNiA78K/1tH/+v5bOmBdvEnHh2nKbSVYaHapc4HbW2BsXic0WrYNOtOE
HMhxuHp0WQc9vjrZqVeGHLf4y3fbym2PDv3p+6NZ/3fYHQO+wypJ7Vjyp++S
V1Rclen1ZCm/E1ro9halWsP6fncNS8+eXk9U9Mkf5Hqw3enyN3o8qEpf8099
j26j9i7907qqnrYD/n9aX/M/MvEDsw==
       "]], {
     Axes -> True, AxesLabel -> {$CellContext`u, $CellContext`v}, ImageSize -> 
      300, Method -> {}, 
      PlotRange -> {{-0.9999998571428571, 
       0.9999998571428571}, {-1.2899998157142858`, 
       1.2899998157142858`}, {-0.9999997142857346, 0.9999997142857346}}, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{0.7229497893875948, 
    0.23718626880209343`, -0.3795208364553497}, {0.23718626880209343`, 
    0.7969417674005554, 0.324912696989169}}, $CellContext`scale$$ = 
    0.8800000000000001, $CellContext`tick$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Grid[{{
             Text["u = "], 
             Dynamic[
              Part[$CellContext`p$$, 1]]}, {
             Text["v = "], 
             Dynamic[
              Part[$CellContext`p$$, 2]]}}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]], Appearance -> "Vertical"]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.5}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {0.4, -1}}, 0}}, Typeset`size$$ = {
    400., {224.5, 231.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 
        0, $CellContext`p$$ = {0.4, -1}, $CellContext`plot$$ = 
        0, $CellContext`r$$ = 0, $CellContext`scale$$ = 
        0.5, $CellContext`tick$$ = False}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> "Quality", 
            AxesLabel -> {$CellContext`u, $CellContext`v}]; \
$CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fup$$/2), 
               Background -> LightRed], Green, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fvp$$/2), 
               Background -> LightRed], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 1]/2), Background -> LightRed], 
              Orange, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 2]/2), Background -> LightRed], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Grid[{{
              Text["u = "], 
              Dynamic[
               Part[$CellContext`p$$, 1]]}, {
              Text["v = "], 
              Dynamic[
               Part[$CellContext`p$$, 2]]}}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]], Appearance -> "Vertical"]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {0.4, -1}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{658., {263., 270.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}, 
   3.6029766202534933`*^9, 3.6029766993350167`*^9, 3.6029767626836405`*^9, 
   3.602976909645046*^9, 3.602976978832003*^9, 3.6029770387744317`*^9, 
   3.602977120111084*^9, 3.602979953312134*^9, 3.602979996398598*^9, {
   3.6029800268143377`*^9, 3.6029800892239075`*^9}, {3.6029802732474327`*^9, 
   3.6029802930755672`*^9}, 3.6029803470036516`*^9, 3.602980586694361*^9, 
   3.6029810202271576`*^9, 3.6029810539220853`*^9},
 CellID->301900159],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1, $CellContext`fn$$ = 3, $CellContext`fp$$ = {-0.15500000000000003`, 
    0.6200000000000001, 0.22739328269728426`}, $CellContext`fup$$ = {
    1, 0, 0.9738030062513429}, $CellContext`fvp$$ = {
    0, 1, 1.2075157277516653`}, $CellContext`p$$ = {-0.15500000000000003`, 
    0.6200000000000001}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1:eJx1nHdcFEkThjEiYM6nYjo878w5a5sVxZwz5jsVDAhmxIQZFRPmjCgYAEUU
dHRVEBSBFQUByVlgxYiRj3H7rfloHf/Z3z60szXv1NRU11R3gxkLR84ubmBg
4FvKwKBE4WeDV0O8Cwp0Ej5zC6StW5ptuDNn6dVDPlaviU+NO9m/a2cNu2hS
xcEqJo34PJvU2OtGWpZ72naOmXkS8Yfd+mXddIlms38eJ4a48/fvjTcMTeTj
tcQLAqQtsz+mcK4hrl24NultqwxmwP+BNxr2d7fROVkYz8Dn93zm0dc0B8cn
fvJjduCk67mwh3inhQam5pd0sJ/4VBvtvsJPnC/x76ZngkLddYzrQ7xvQfPw
RV65+E78jzt7Bn2qmUPfoWulYnXsPgaG0Xd8ttjaedujvpIEncFLedWesDJ1
H+kM/rRVt95/Pn1AOoO//55ZbZv5M9IZ3Lp4/b7zAmNIZ/DwRbHG7aITSWfw
Y8XuOR2wSSWdwRf0sq1Z41gG6Qze9UbZox37vyadwcdOXn+kxvQc0hn8n8QG
m/2Tckln8NnBIwwG31d0Bv+aWCOi5Q/Sl/jT7cciOzorukO/7imT7j2qHUfn
CW74YbGUqnlO3/F5Oduja+m8IAk6g59388oNHXVFgs7gW11MzuTGXyOdwefu
tr66xP4J6Qw+xDB/y9/fXpDO9Lu2k3t16BVPOoNblSw+6+TiZNIZfJx2r0W3
V2mkM7jj7MCSLuGZpDP4u0O1Lg9i2aQzuPUt47sX/sglnUmPO69qmIxTdAaf
0FJj+emNojN0inp423DKh2TSGXzAtTbPzrdOoPMH37rFwuBzmyj6js8+iWcO
RpYJJZ3Bn1cy/ypVuSVBZ3DLMmnnZqScJZ3BR/35bdszy0DSGdzlyPD3wzZH
kM7gMUOtV5m9iyWdwWffdvL8PjOJdAZ3sM6qZZ+bSjqDT/TbuPFI6UzSGXzg
3Yd72hwlPyZue3D0xUenKD4Q98szGaAtq+gMPSrcWXX/8/B00hnccmjzgsmF
+kNn8GXrpCBZfzofzuexEtn5hfrjOz7HmNWzkvWHzuAXAqufVfTXEHfzKD9m
ZqH+0Bl8d3ZlH1l/6Aze5G0lo+Gkv5Z41XGfnWT9oTP4v3863pL1h87g69+m
NJT1h87gs+6O3y7rD53Bp14YdlDWHzqDj1i37PL/6U/n3WPmsvilVpmCP2ul
Q83GGVeYmyb4s1Yy/qvUjPDXSYI/a6WAvhM2y/GnqD9rpevzT6yT409Rf9ZK
czOyb5Wi+KMh3ifmQWJIYfwp6s9aKdOm/gUdxR/4s1aauuFoKxuKP1riFdaO
DJDjT1F/1kqvF9xaqcSfJOKujUzt5fhT1J+10oE3zjPl+FPUn7VSwq42NeX4
U9SftdK9LTtuy/GnqM4ayeKJu6nznixBZ420IdfxXBdNuqCzRjJtev9cvl2K
oLNGGpLxqNOXuwmCzhqp5LSKY9rNfSnorJHuH7YsKz9/i+qskeJ29IgMKHz+
FtVZIzVdGNx6HT1/obNGquVrU8us8PlbVGeNZCfNsJefv0V11khH4yNcledv
EvGvG0d1kp+/RXXWSMsOz70hP3+L6qyROk1c1lV+/hbVWSO1uOntKz9/oTPO
o9Fll9mF+RLpDP4yz7vqu1YZpDP4LGcvTWE+RjqDRz53+LcwfyOdwU3/CLa9
5RJNOoPPeFppkY+Rojt4r2nmdt06K9/Ff9BZGE86C8cnnQV7SGfBftJZOF/S
WdCHdBb0FP2ZqfgzU/FnpuLPTMWfmYo/MxV/Zir+zFT8man4M1PxZ6biz0zF
n5mKPzMVf2aiP8MulfjMVOIzU4nPTCU+M5X4zFTiM1OJz0wlPjOV+MxU4jNT
ic9MJT4zlfjMVOIzE+Mzfl8l32Aq+QZTyTeYSr7BVPINppJvMJV8g6nkG0wl
32Aq+QZTyTeYSr7BVPINppJvsN/nG0lMJX9mKvkzU8mfmUr+zFTyZ6aSPzOV
/Jmp5M9MJX9mKvkzU8mfmUr+zFTyZ6aSPzMxf8bxVOaDTGU+yFTmg0xlPshU
5oNMZT7IVOaDTGU+yFTmg0xlPshU5oNMZT7IVOaDTGU+yMT5IP6fSn2DqdQ3
mEp9g6nUN5hKfYOp1DeYSn2DqdQ3mEp9g6nUN5hKfYOp1DeYSn2DqdQ3mFjf
IH//fb2OqdTrmEq9jqnU65hKvY6p1OuYSr2OqdTrmEq9jqnU65hKvY6p1OuY
Sr2OqdTrGOp19X9+j2cP/l77V4xPjpT5qMcK+6E6ZjGu77uBzinE+yX1aDs6
V8fK3E0s62yWSbxZuJX2RLoO34nXDLo7dGMXZTz/lE5sN+ppuFMZD37r0kDj
Zd9/Gc9UxjOM1+vwgv7+zMxigKVJrnheTOW8mMp5MZXzYjgvnCc+w4Kkmy6f
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
glGZdH/BfjeLFZ/WvVHyh70//S1Wshv1LfRsCSVPu69//yBJQ8fPumCRQHrp
/T9OWlFi0zSbVVGkG91PVd9FyPM16OZ2JPrbQOcE6e7I0zfWD/aj/OGu/v2A
1OSKfamOutOkW+SHXn1ifBKlbm/3NE6rGSjE5xjJScjT9nP7D+dcq3FhVgTp
9oDbH/p+c2ozv1jSDfb7d0j9HNcniXSD/f4rT8XJcRK6wf6JA87NMM3NoLhE
9hvGXrDY8Zryhyhu//L2dffFHlbu0zo/r+MzqXpI1Jyne5R5h/59R4R01+S/
RmUGKn6p96vn0pbRl8ed76boq7+PXkgfqs8r9segSNIZn2sa+feR/Rk66+/r
l9LUAY92R9j4Uj6sv3+jpcc2Qzp0nOxKOr/h9ZZ0Yd5Rl9sfP9HB/cPex6Tz
EG5/6/rPIkwavSCdYf/DXf7bZ9WPI51h/6CA4oPKBieRzi+5/ZfXlZor+zN0
hv2u/oHjjRor+XBnbv/DjZfPlnNT/HnQT3seSGXKF3wxKJ0h5GkB0sYTe3XG
5ZV5tPHP4wdJDR3LtRx4PZF0/lf/Pl+65uW86VTlWNI34KdfhUjhD9/m1mkb
QTrj89SbcsZyvIXO9376SbhUd9iUh8d7utP8Lo/XW2oJ8+ih3P5xZU6XdO16
n3T24PbvG+MY5hiizKNh/+GkauknfV+SzrB/SkpY7LBjCaTzQ27/S207A4Oa
yvwO9new8B0px1vorOH2L2lU2eTTp0zSOeGn/c6SFJq3ythJrFecllI9G2wb
80jR2fqnPe7SImePKENXpV7x/ud4L6m5042+S2YrdaGrP8/XRwpv7rp+4Cel
XrHg53H8JIOqtrd13Z+SzvgsONrF4kZhPlC0LuRSaLP87yDVhUqe0dvf59Lx
C/MKlLpQPrffJbLx5/nPlLrQIm7/vo5D1/sfVepCsP9KdJOH/+QrdaHL3P65
22cfyc5R6kJW3P62CVkTFlRV6hXNuP1bHNpV/JGg1CvMuL0Ve6z7N71bhjCP
9mMH7Kzrhm5TdD6n/112Ldgoz2CjonOG3k7WQtB5vP68WIk0y+pd+yn1N/31
Pc3WJ972s1qv1N8i9Ned1VkVPOvtc6X+9prXW8oK/ozPvUc6uz17c490tuT2
d1zwPttqexjpfJbbX+Lx/toTsxSdYb+o8xRu/7e/Fu/954micxy33ygn9OuJ
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
4/qIduL6+HE7wTFe3OcE4x9z+/8HzMJTxQ==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
vYZH5LaZ1eUjguOYxiHpwnnJvvoVOAuejw20rtzXT98p20s/Pve92gfaDw1o
5blvg+ZY34t8Jc/9hOvfS95XGqcSersEf3sF+l1pW7Q+g236NrhG8N+2wvsl
md55E2OuYszPGKs18krJxw1C/lt0XF0m+B0/pH3K3/8ueW30C47dDoVHBMdZ
LeEjue/73LHfJcGx2NHyO8E5x6nwpOBcpAM8OTiXUT64B/fWiI61yskxFvZz
u8H/5vZhe9CXLRxfDk7xpOKH81Msp5itf3D82ADeFf2/c/vC/ejLFc5z+gT7
wNryqcj/yu07pwfnQ52RzwrOR8+AZwbnfKfD+6C7S+G4ZFyKYdojvyI4NmwH
jw2OT9tqnaO/Pbefvjw47jhOMQOypowzg+tWcGN4GjwoOKZris7+yCsUzntH
BsetrZDPCM4Fu8ATg/O8U+AJwfnoyXA17t2tcH64L7xr4fywKrxT4dj60hTr
tkZ/b+Q7Fo6D34JvLpyfvAHfVDi3eQ2+oXBusze/1Z60gzLHitpzVeE9c9t2
xfyV+PvutL2Rl6MvHx2ra21qjZZL61ZrlH/Zu2lcjblD2nf1g2OV+mnPlkE2
OPezytIPkd3U7xIcJylGeqfk5+lZ2lfam8ovaqd9oecqtpc90L1V0K0cPWbd
4H31WdpfNf+P66b99g3PXMw8bCvZ1v1GW595f/+b9vhftD9pr9F+y5yrKbb/
QXsK/fvgb0qOq9Yl+/ZLyfqycX9nHvOfdL0+2dg6yc7qO2qnuE3yA2lvZM65
ZD/kZ7em+d2S+lrJRmzlOT/RXs18n+4vT9s5fbvsybb0O8lW1Ek6Gn8S334y
316r5P3VLDrX+Ie+XnTMrD3bIjrX0/5qGp0raS80ic5HtMdlL2QrFGcqR1J+
pBznm+gcWbnP1/Ajyf5USPbwA+Q/Rufa8gUVaZ/A7yPfFp0jl5A9JfueuebT
ODrfeRs+oXB+pXW+KbpGFOQfomNmBeYHR8fS/2o9RsfYBf2bJedCXTVf0TmR
1qV8imJp2X3Zf629MzXf0XLdUzVYv3yaT/lKrfOhufWV1/+QfO7w5AuU46qG
NoBxTtJ3aU9Ex+eKIY+JzpEj3CA6zlce0Vnvp09Bflh0vrBR+zztEdXrzo+2
FRPgE5mTqiX7vt0V9yD/nfZHZv8lX7wInS0lr6/maY0pR2yR9n55xWy56wAH
JbnyR9mEq3LXqZSPX6nfXrZQdjKYewevqVppjf2TOw9RztKc96ySua51VrSv
UR2gI9wYng3vXLhGMIZxWtK3yZzrdYqOW/ZK76zf57/aHfKjMuf1naPtrWpl
3aJ9lmyDbIT8UdkUPzQN9vkdk99XPthIdi3zN+hbDtGeiq6RHpzm9qfcuV+H
4DnWt7xXsp50NJ/at7KZ3ytO4G+rZAP5+/7RNmpf+tdL/g0bodMw/b4VGHts
bpt5VBpHYypn1/tq3R2evkXjyEY2CR6nTIqXdK3aYPdo/6J6bN9oX6Ya7LnR
Pk4xw5/RNkpxwA7B60Rx0o7Be7AM7/gc7c3M9qZCsu2KYf6ItjkXwwNpT2eO
qbZH2zfZy3LB48vGqrbyROb4MgTnmx+lGEg2tmayV7JbigV3ov80c0wYolmx
1u/Ra/hn2abg/fUVOqXonL2c7HfJcU6B/q+0aiXzmNz+SzWrlujvl7lOdVR0
rXguXL5wzXQaY59M3ylzfbV39DpUfNc5xXiqIZ8THQOortsnOk4ouO/ZZJMV
B3bKvVZVszo5Op5RzadtdNyimk+b6P2iPEr1X9V+VQc7MTo2Ux3sJLi+5py/
H1byfpmKvEzhOtEB0XVk7c1P9O3RNvNDrdvo2uZH8M/RtcpngmuN0+CVwTm9
8qZ7g3NK5VkPar8UrgusCc71RyNfHZzfXwbfH5z3j4GXB+evyu/uCc5rlZet
CM6zlcc9HVx/nQo/FVybVc3hUZ41vnA99+HgHHwc8odlZwrn+Wu1zgvXJh4I
zuPHorMWvlpxGfyIbFThGrRi+x65Y4bH6ScWrl+/FVyHvhn5m8H16XnyKfAy
eD78cnAt/Br4Ce6dVLgm+0pw7fla5C8F18lVK3gGnWmFa7XPwzML19xfgGcV
Prf4ILjevgj955DPKFzDfRaeXri2+2Fw/Xixfq/g+vGt8LPBterp8Ivozy58
nvFxcC1/id4zuB4/Ud8bXI+foDkJjkmvTOvhtsL5knzNz7nrgPLFywrnePJN
P+auecnnjM7td94o2X5tTP7ol9w1L/nrpYVzvzfheYXr6Z+iew7Xq9F/lf76
wjX0V+DrCtfQ18NzCtesvwvO1XUe8Qn39s4dX72NrEy0f96A7MbC9e7X4bmF
6+lvlezXZScVA2zLXb9TDLA1d53ur+g8WjZH9k85smzUF8HnTnfBnwfXCHTe
8RJ/v6bw+dPf0fm4bNejwXX0q+DHgmP/8fpN4TnwDLgu+t1z+5SP9eySczDF
IVty1xwVa23OXXPUnr2rcK6rHPYO+JWS9+zthXNs2Vfl/rKxm3jWGmR3Z87/
t+v7kb0afE5yHfJ16F5d+CzkjeBzHJ2DaB8tY6xL0x5fGl1f0pnXrOi63PPo
T0Z/ZtqDdyO/An4Arlu4Bq0zrznIB2Q+F5sRXWvS+de06Bqdzs4GR+diOhO8
KDp/1LnhhdH54zye1Y3x+sBLkFcsfJ6ns7NB0Xb4QXRGlfwOOqcbEp03qfY7
NDqn03nlBdE5lNbGZ9FnXlqTX0Sf/Sl/7BV9VqiaXn/NaeYcrV90XVq50ufR
54yq9R0bfWYhH9GzsG/YVTZeaz9znad19LmD6s/DovNNfcuAwt+mesvx0bZd
cc4ZheMb5aFnRJ+HKtc7Ez4xc67XNfpsVLneadFnecrvTo0+41Me3T66ri5f
cFph36Ba6cDoeqlq7FOia6Gqq0+MnufH5PsKr1fZzDXIr0528uHo3102eXV0
HfhL5v82dJdn3r/vRfM7ijmQL0jr7Wnkc+An4aeizwGfgp+JPqcTTyl8/ied
yYXP7V4LPuu7XmussN9UHqm6Ss/c8djLmsPC6142+ZHo2u+vmWMCxQO/MM79
JecasjnvR5+dKef9IPrsTGcZY6NrzjrjGB1dc9b5xcjoOqrOQa6IrhvrfOTK
6Fr0Q/Dhhf2Nziyujq4538lzLyj5zEVnH6Nka5K92givyewLXo8+l5Td+zD6
/E525q3o81DZ9jejzzHlF16KPm+Vf3kxep7lX96AlyU/8nL0WeHTcJvCPkx+
6bFoX7O2cKyuGKGa9kpw/qAa7PDoerXqNz2iawiqRS+Mtm+qUS+Ktm+qmS+O
9ik6kxlR+JtVc6oTXXfSGcvh0edxqoHfEu13VPe+KTpOUI2nVXSdR+fI98E3
ZK7Dz4v26bIzYwvv+QbyHchHZq6l3xzt63XuvCp6zagOszLa7mn9Xxxdj9J5
xO3R8YbOKe6M9qFa/xMKr13VfrpE16B0RnBXtA3XGccd0TGSfvdxhW2i6vM3
Rsc/qsPfGu1zVf9ZER0z6Hz5oehYQvWt46LzaJ2hLIEnZT7zfTA6DtH57L3R
cYXm5+g0hzqzXhsdn8h+Pxftm1Tnnxsdj+n9T4+O7bUGphbeq/KlH0X7U8Ud
r6T1oHP556P9nc7Tn4iOMVYXzolUd9H/E9gQ7bvXFI57leuo9v5ldP1cfvLt
9D7LVU/N7eu0JiZF7wXVtHWeui7z+fhr0TmRzsfXR/t31SNVE1UuonX7aHRM
pf+T8Hh0LKT/A7AuOs7RmcyC6PhQc9su/XayD9cW3v99csceqtf0yh1LyEb8
Lr+QO15QzaxDWvN/aJ/mjjW0tscn+6k49J70Pvo/CU/CSzP/f4YXov2vfpdn
o32r/h/Lu9Fnvr/Bn+aOmxTn3h8d66p2Mb9wXUPvcEraC5tSjLIhPXd5+kZ9
y72F600a54H0LNX6laOp/qA6veZatauv0p5UvWiX6NhJeWSF6Nqd6tza7z3T
HlG9VnUz5ci6T3HLf7UmZDtG59xaP6+mtbQbfdnoet7gNJ+qGwxJc6j8NBSu
IVeMzhe1Nl5N96qWohq28jmdXyin05mA6nDbkw1pmOzJTvKlwTUX1btUt1B+
qXhnfYp5qmu86PxYz1OtUvUKnSdoTjenNbCicE6uMyHlaKqLaK1WLfyba13N
T+v2dPTvKXx2olrID7nrIZLrzEa5rGypcnnl8WPSb60cU7HehhTv6d2U++s8
QWcRqtMrzy4VHlP1cp0VK0/VeXHt6JpDq8Q1o+sBmgfVrFQf1W+qmpXOQHR+
onMM5c3/A08Olk8=
            "]], 
           Polygon[CompressedData["
1:eJwtmgf8T9Ubx8893/Otv6hIFG0y0tBCSyUJSUIoZKWlTQOp7JCskISGjEJG
RTsq7ak0VFraO2mP/+fd57xert/zOefe+733nnOe5/N8nrNXn4s7XBRDCPfr
v6S/3+rv1zq2yP5Vx4pSCIeXQ3ilCGGa8DLhJsIvCd8o/IDwkcJvCN8i/L7w
w7r+D+HVwsuFD1P/y8JThb9R35c6fpb9i45V6j9C/a+rf6bwk8JjhF8VniH8
ox5qP7WpKeys656V3Vxgk/oXqe0Z4eOEPxG+W/gHnb9vye+yk85fKftG/V2n
/pvV9qbwFJ3/cT5/qXBj4ReFp+T7zY1+Ht7naeFxZV/P860VHiv8Wr7fF8Kz
hbcIPyL8lvC90c/D8/0kPE/9fws/k3+f/p+EHxR+WXiR8LvCdwi/IDxe578t
fKvwG8KThD8UXii8Tnii8AfCC4Q3C88X/kf4WeElwtfrfs8LTxJ+UfgG9b8j
fJvwLrLPV//dwnfpaFX2M/Os96n9JdkT1LZBfber7SLhrmq/WbiX8BXCO6r/
DuFzhc+QfYba2sluFX0v7rlZ/Q/l92sh/LXwcuH1wpOFP+L3hX/XQF2mY2fh
/6nvN9kDdewvvJPwL7KH6DhIeHfmjeyGav+frt1V+DHZt+jvC3n8XhVuqft/
K3wvc1jnX8mcEN5RfffoaFT2+ZPV/zzfi28gPEd4i849UG0VZO+m+74i+wT1
f6P+FcHfh/H6SniZ8IPCR6l/vfAs4c+F10S//8PCnwnPKnu8+R5fCs8R/kX4
UeFxwgOFZwv3FR4vPEh4jvBZwmOErxSeJXym8CThq4RvEz5HeLCed6Xwzmpv
qLbR+nuF8C2y+6h/pPDlZY9fb+FrhPsLTxfuIfy9rm+gNv0L1fXcU2QMUf/t
eXy/U399teEjqum/CbIHq/9W9Z+ttqHCA4RvEu4pvEPJ35nv3UBHZdnb69hT
9l467pM9QuevkT02eH2OFH5CeJzwAcKb9ZsnC1fneWWvYj3ot/cVXqz+YcIP
qn8oc0B4Fx0VZR+stg46/z71b622T9W2QH+HCt+rvquEZwtfU/b8v1S4rnAd
HccIH6tjnuxr1b9C9uDsn/AfTwpfL1xR+DTZuzEfdVQreZ4yX/crPL9Yfw/L
Hp7X43Dd7yHhYcIj9HwPCNfGb2b/gr/5OK+Hv9XfRG3VZO+t9r+EG/NNhWvn
+X502f6C9flonv8b8vo+V+ffrv7fs//9lH7hH7O/+Vl4gfC/ws8Jn6fz7yjb
X6/BX7H2dM5Wsmvovo/zbdT/XvZPXwnfKvyr8GPMd51/m/Bvwo/TLzxX+E/h
tcJrdH4z4Y3CdwqvFj5W+H3hucKbhGcK/yD8gPAnwjcLfy+8SniD8FThz/m2
wu8wHsKfCS8hPgjfKfyX8NPCjwiPFn4u+7+HhUcJPys8UfhPPV8jtVWVXUvv
N1321eqfq/7zc/y6qez1jb+aw3rTeYuE+wv/q+uPUNvOsuurfWOOd19n//Cu
8DRd/4Xw0jw+15Xtj/E37wlPF/4y+48/dL9D1baD7L1YZOo7UriGzH2EP5I9
Q23f6fyVahsufJnwjOyPeb4GZc835he+Fp/LWC3W9dsInyJ8iPBR0b4bH366
8JnCzYiVxARdf7DaKshuV7J9pPpb4WvVNkD9h6utpfDWwv2FDxM+tfD6wz9v
I3yC7EN13aXCTYQr6dzOJV/bXO3f6n2j2s7GP8AHhAvhs4T3CX53vkFf4frB
vpo1xVoaH/0uvNNV6j9Obfvii/BBsq9Wf0/8jdrGqb998LvwToOFmwlvK7uL
2o6QfbzOPxlbfwex/oO/Jd+UsR6i9vr4UuGLhQcKH4uvVFs/nX+Q2o4R3k/t
5wkfKHyccFn9FxT+5q+xhnVsLfw+8Un2nzq2En5P+BK9/2LWn9rKausqfL6O
fzgXf6q+c3TPE/nW8Ar1LVFbWfbLaqvCt1R/a9kd1dZJ/X2TudUT+G9iHvFG
ff8Gfxu+Ed+uTTQ3g6ONEp4YzYXgRCOEbxA+Xffqp+Mv4Vd0fKu+DcRhHX8L
19P5M9V2kewr1dZF556VzB2f1NFN9gWQMb3ba/rTXfaFzAHhdcFzjzlYG98f
PdeYc8yNxsIXZX/yu+wSMSf7m++EfwseC8akluz91faB7GVqK+nvdjr/L+IA
64p5I7yd+k7LvrdF9FxmTjP3GkWPHWO4t3BD4Qqyq5Qcuz5X21X45uwv+gV/
e8ZgivBpxCBina7rJrxn8NpmjXcn/gX7dnx8z8K/AdeB86xnbIO5EJzoTeFN
jIHO34M1oPMvE57MswgvE75C+DrhXcv2T8Szifw+Yyh8eXDsIIb0KPyN8X34
wDMKfzO4ERzpdWJQMNeCc3Uq7IPg3nDw1oVj0Fjh3XT/xdkfEiuIGW0Kxyy4
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
            "]], 
           Polygon[CompressedData["
1:eJwt13f8lfMeAPDzO3VyyeW+LoWUSkRFIWWk0t7aIhpK5NKg0i7aSUtTey/t
LU1aKiMqSSQz69I1rnXx/tzn/PF5ne/n/f2c55zzPN91irbr0qRzOpVK7RMZ
sT9XKlU/dyq1AB7JSaVmsOrsWXYT68LKsQZsHLuN9WKVWTP5EFFZfrX+d/U1
8fpcmPYAXl1dUzaB3ckGshosrw8fzyqx/qyfqKduLLuV9ZRXUjeNlWVPskWs
M8vjvaPYjawz6ySaqZvIqrCn5DXVfSX/meeR/8Z/Fd+wp8Xt7Ep9+cXH8l+8
nsN+V/OB6C5fyh/QnsMfcr2F7EU2mL3MRrKP5E+I/PI8+o/pa+P7Pc/qp5Pf
Fb+vrL5hrDBrKS/svYXVjY57Ldbp66IvP+st7yVeYB3insbvF0W870L+Duvo
tShrpj0k7p3rPcyKsKZsMKvLLnO9p/lTYqW+junk+sW0H9Tumkk+6xKv/b32
E8v1PaQvH+sr7yOWZeuLsLHyMWI968pe1K6pPUl7j88d7XOviGfEnxFr9cWg
26FdW3uG9iF1E9TtZHXYTPYam8gKee9IPkKs0ddJ3xbtWtqTtfeqG6OuoLrh
cV/Fan2P6XtD+y7t5don1c1X9zy7ifVgC2O8sO/lQ8XlrCG7S+xSV5fNYq/L
J6nbzGqwiWw3e5b9y+cuYPexUWGip7orWXs2Qd5S3aXqBvIBYoW+h/UVYIPl
g8Qq9kg6ue9XZZ/145nkGYzyupstYsdc7x0xld/IurMF8sdSybMtnr12t0zy
nF8VDdhCdlTdTHVT2EbWja1lvdlQdm32O/Tw3iG5ku92TXacdM8k3/O0/HGR
z/sy8qPp5HddnR0nT2SS31jC6ybWJ8aE2s3iTd6QrWDvyxf43MOsEVsZc40t
ZG1ZYVaP9WXV2M2ut4WNZPvZvpxkXJTIPuuemWSMvCzqsdnx/NVMTiVj9Lrs
nOqTScZr0VhzYh0TG+I3pZP5Vyo7Pntnkrm4SGxmg9gu1xuRSt53fXa8980k
17gtxii7hrVTVzyVjPmS2THbK5OM/+XiJfYMe1XdWHUTWOnsd+in7jn5H/Lh
ojh7QF3bmA+8TKwxbJ78Ee/9XP4Vf117L/+3mCu/lQ/QXqmuh776MU/ZLexJ
VjHW9uy4Wsw+Y5+K1eqqsNFsm3yIulXsTvYs28oGszWsKhvDtrOhMf6yz2hE
Onne8dyXqqsY84ttiPVP3QG2hy1hn7MVbAPbysazN9kUtoe9wuax02wJW8+2
sefY4ZgHbBmrxIaxjWwA28p2smnsXTabvRLjg81lH7LFbAm7I/Yutj72HraW
VWNjY51iw9h0djPryRazLmwGK8d6sSWsK5vNyrN+bDnrxgbJLxN3aPdgxdT8
R7zHDqg7N+a1vhdY5Xju8k3qBrI6sR6z8uwhVootYBVi72JrWC+2m+1ic9gp
togNyM7B3mwpWya+UHec7WG5Y+1VVzv2PlZO3kFNSXaWnWCvsr/F2sGqsXys
TOxrsc+zl9gO9jw7zmaxg2wvW8rOsJXsS/l3/EicN/gvoo7vd4hv1P5R3Q/i
qJqDbC07G+uG+t/YZ+xj9mfcL36EHWBr5N/JN6WSffsTdor9L53s4f3lGXGF
vGCs/exrr1+ws3EPtC9kb8VayVazb+UbXe/reGa8gPY/vV4U40yM5CXVPayu
dJxp5H3FDfICcX/TyW99l+2P75FOfvfbbD9bFfNU7Qb2K/uUnWZ/xL3mH7O3
2fb4HfK96j6Je8d2RF1Ocmb7iB1mW9lvbDc7xPaxZewLtoqdZm+xbex3todV
dO+3s6npZD+JfeXTWM/ZzrjP8v3q6qo7xl5haZET80nda2yT9k/qtqo7E2cR
tpvlEgfZiViX2Gb5f9VtYyfZm2xLjAG2g73H3mAvsp/ZdtY4e667IZ2sfbEG
zlF3C+vPVsi7q+sjv1RU0O7OLlPTQcxiTdSNZy30tWPTWUM2Js6I7B/Zs1mD
dLJvx/79oLqZrDEbJ79bXXs2gzViY1lz9gCbxu6KfYM1jXsaZxxWinVkZdjM
7P17OZ2M7xjn96ubwmqz4XHeUFee5WVXslrsYraOVWfj2E42nN3CzmfFYv6w
fKwVm8rqsBGsIesgv1ucZN/E/Wcf5k7mQ8yBQjHG+GNe57F7tKfw1uoeZXNZ
CzaZtWKd2Hx2L5vK2rD72CRWkw1l9VlLNpnVYsNYA1aOnceKshrsInZR9tx0
P5vOpsVaqW4Ja8tmyzvE+YrNZs3ZRHYf68oWslZsBmvHHmFz4jezSXGP2RNs
MWvDZsWzZY/Hns5as5msPbuV/Z1dxeqx/PEfJ5Psv1enk/NgnAtjLbiQlWDN
c5J14Uf2AXuNnR9zI/bz7Lq2IZ3sqbG3VlV3MSvNWsuvUnecNWbr2SdsOasS
6wy7nrWKvYLdyHKzQqwJO4/NZ7ezp9jqOHOye1ghVj2dzIWYE41i/Yr5wR5l
ZVkLVpBVY93Y7THf2OWx3sWYYDeze9kVrEY62bdi/2qR/a9WMZ3814r/XDXU
jWZlWVd5eXXXs5yYm6w2y8PqZZJzdgFWP8ZGTnJ2OcO+jTUznZxjbmC5WEF5
IzXnxnyLcSHOsK/ZOlZB3QXsWtY05n7MVXk78WWMe7aelVaXjj2Y1WXnsJ/Y
KfYGu0CcYD+w99khed7Yz9h1LMUukdfMSf4nz4vzHhvIVrEnWSn2Z+yjrHrO
/9+S+l5+UuMgOy/WWVYyznaxj8qrqovLD82uxVPSybk2zrd/Acvu/+w=
            "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{322, 533, 1262, 323, 544, 347, 1360, 555, 360, 1365, 568, 375, 
          1372, 583, 390, 1382, 598, 405, 1393, 613, 1302, 420, 628, 1316, 
          435, 1408, 643, 450, 1412, 658, 465, 1417, 673, 480, 1424, 688, 495,
           1433, 701, 508, 1444, 712, 519}], 
         Line[{324, 534, 1263, 325, 545, 1274, 348, 556, 361, 1366, 569, 376, 
          1373, 584, 391, 1383, 599, 406, 1394, 614, 1303, 421, 629, 1317, 
          436, 644, 1328, 451, 659, 466, 1418, 674, 481, 1425, 689, 496, 1434,
           702, 509, 1445, 713, 520}], 
         Line[{326, 535, 1264, 327, 546, 1275, 349, 557, 1283, 362, 570, 377, 
          1374, 585, 392, 1384, 600, 407, 1395, 615, 1304, 422, 630, 1318, 
          437, 645, 1329, 452, 660, 1338, 467, 675, 482, 1426, 690, 497, 1435,
           703, 510, 1446, 714, 521}], 
         Line[{328, 536, 1265, 329, 547, 1276, 350, 558, 1284, 363, 571, 1289,
           378, 586, 393, 1385, 601, 408, 1396, 616, 1305, 423, 631, 1319, 
          438, 646, 1330, 453, 661, 1339, 468, 676, 1346, 483, 691, 498, 1436,
           704, 511, 1447, 715, 522}], 
         Line[{330, 537, 1266, 331, 548, 1277, 351, 559, 1285, 364, 572, 1290,
           379, 587, 1295, 394, 602, 409, 1397, 617, 1306, 424, 632, 1320, 
          439, 647, 1331, 454, 662, 1340, 469, 677, 1347, 484, 692, 1352, 499,
           705, 512, 1448, 716, 523}], 
         Line[{332, 538, 1267, 334, 549, 1278, 352, 560, 1286, 365, 573, 1291,
           380, 588, 1296, 395, 603, 1299, 410, 618, 1307, 425, 633, 1321, 
          440, 648, 1332, 455, 663, 1341, 470, 678, 1348, 485, 693, 1353, 500,
           706, 1354, 513, 1449, 717, 524}], 
         Line[{336, 540, 1268, 337, 1358, 551, 354, 1362, 562, 367, 1368, 575,
           382, 1376, 590, 397, 1387, 605, 412, 1399, 620, 1308, 427, 635, 
          442, 1410, 650, 457, 1414, 665, 472, 1420, 680, 487, 1428, 695, 502,
           1438, 708, 515, 1451, 719, 526}], 
         Line[{338, 541, 1269, 339, 552, 1279, 355, 1363, 563, 368, 1369, 576,
           383, 1377, 591, 398, 1388, 606, 413, 1400, 621, 1309, 428, 636, 
          1322, 443, 651, 458, 1415, 666, 473, 1421, 681, 488, 1429, 696, 503,
           1439, 709, 516, 1452, 762, 763, 720, 527}], 
         Line[{340, 795, 796, 542, 1270, 341, 553, 1280, 356, 564, 369, 1370, 
          577, 384, 1378, 592, 399, 1389, 607, 414, 1401, 622, 1310, 429, 637,
           1323, 444, 652, 1333, 459, 667, 474, 1422, 682, 489, 1430, 697, 
          504, 1440, 750, 710, 517, 1453, 734, 764, 721, 528}], 
         Line[{342, 798, 722, 797, 723, 1271, 788, 786, 787, 1281, 357, 565, 
          1287, 370, 578, 385, 1379, 593, 400, 1390, 608, 415, 1402, 623, 
          1311, 430, 638, 1324, 445, 653, 1334, 460, 668, 1342, 475, 683, 490,
           1431, 698, 505, 1441, 751, 752, 755, 1457, 735, 765, 736, 529}], 
         Line[{343, 778, 724, 773, 725, 1272, 791, 789, 802, 790, 1282, 358, 
          566, 1288, 371, 579, 1292, 386, 1380, 594, 401, 1391, 609, 416, 
          1403, 624, 1312, 431, 639, 1325, 446, 654, 1335, 461, 669, 1343, 
          476, 684, 1349, 491, 699, 506, 1442, 753, 772, 754, 757, 1458, 737, 
          766, 738, 530}], 
         Line[{344, 779, 780, 774, 726, 1273, 776, 800, 801, 799, 1463, 728, 
          794, 792, 1462, 793, 372, 580, 1293, 387, 595, 1297, 402, 610, 417, 
          1404, 625, 1313, 432, 640, 1326, 447, 655, 1336, 462, 670, 1344, 
          477, 685, 1350, 492, 744, 1455, 745, 748, 730, 756, 731, 759, 1459, 
          739, 767, 740, 531}], 
         Line[{345, 781, 782, 775, 1460, 727, 783, 784, 785, 777, 1461, 729, 
          805, 806, 807, 804, 1464, 803, 373, 581, 1294, 388, 596, 1298, 403, 
          611, 1300, 418, 626, 1314, 1315, 433, 641, 1327, 448, 656, 1337, 
          463, 671, 1345, 478, 686, 1351, 493, 746, 1456, 771, 747, 749, 732, 
          1454, 758, 733, 760, 741, 768, 742, 769}], 
         Line[{518, 711, 761, 1443, 507, 700, 1432, 494, 687, 1423, 479, 672, 
          1416, 464, 657, 1411, 449, 642, 1407, 434, 627, 1405, 419, 1301, 
          612, 1392, 404, 597, 1381, 389, 582, 1371, 374, 567, 1364, 359, 554,
           1359, 346, 543, 1356, 321, 532, 743, 770}], 
         Line[{525, 718, 1450, 514, 707, 1437, 501, 694, 1427, 486, 679, 1419,
           471, 664, 1413, 456, 649, 1409, 441, 634, 1406, 426, 619, 1398, 
          411, 604, 1386, 396, 589, 1375, 381, 574, 1367, 366, 561, 1361, 353,
           550, 1357, 335, 539, 1355, 333}]}, {
         Line[{809, 1117, 532, 808, 1262, 1022, 810, 1263, 1023, 811, 1264, 
          1024, 812, 1265, 1025, 813, 1266, 1026, 814, 1267, 1157, 1355, 815, 
          1268, 1027, 816, 1269, 1028, 817, 1148, 1270, 1029, 1149, 1248, 
          1271, 1143, 1151, 1030, 1137, 1249, 1272, 1144, 1152, 1031, 1138, 
          1250, 1273, 1140, 1145, 1032, 1139, 1460, 1106, 1142, 1033, 1118}], 
         Line[{819, 1158, 1356, 818, 544, 820, 1274, 1034, 821, 1275, 1035, 
          822, 1276, 1036, 823, 1277, 1037, 824, 1278, 1159, 1357, 825, 1160, 
          1358, 826, 1279, 1038, 827, 1280, 1039, 828, 1260, 1281, 1040, 1153,
           1261, 1282, 1041, 1150, 1463, 1107, 1147, 313, 1141, 1461, 1108, 
          1156, 1042, 1119}], 
         Line[{830, 1161, 1359, 829, 1162, 1360, 831, 556, 832, 1283, 1043, 
          833, 1284, 1044, 834, 1285, 1045, 835, 1286, 1163, 1361, 836, 1164, 
          1362, 837, 1165, 1363, 838, 564, 839, 1287, 1046, 840, 1288, 1047, 
          841, 1462, 1146, 1048, 1155, 1464, 1154, 1049, 842}], 
         Line[{844, 1166, 1364, 843, 1167, 1365, 845, 1168, 1366, 846, 570, 
          847, 1289, 1050, 848, 1290, 1051, 849, 1291, 1169, 1367, 850, 1170, 
          1368, 851, 1171, 1369, 852, 1172, 1370, 853, 578, 854, 1292, 1052, 
          855, 1293, 1053, 856, 1294, 1054, 857}], 
         Line[{859, 1173, 1371, 858, 1174, 1372, 860, 1175, 1373, 861, 1176, 
          1374, 862, 586, 863, 1295, 1055, 864, 1296, 1177, 1375, 865, 1178, 
          1376, 866, 1179, 1377, 867, 1180, 1378, 868, 1181, 1379, 869, 1182, 
          1380, 870, 1297, 1056, 871, 1298, 1057, 872}], 
         Line[{874, 1183, 1381, 873, 1184, 1382, 875, 1185, 1383, 876, 1186, 
          1384, 877, 1187, 1385, 878, 602, 879, 1299, 1188, 1386, 880, 1189, 
          1387, 881, 1190, 1388, 882, 1191, 1389, 883, 1192, 1390, 884, 1193, 
          1391, 885, 610, 886, 1300, 1058, 887}], 
         Line[{891, 1301, 1059, 889, 1302, 1060, 893, 1303, 1061, 895, 1304, 
          1062, 897, 1305, 1063, 899, 1306, 1064, 901, 1307, 619, 903, 1308, 
          1065, 905, 1309, 1066, 907, 1310, 1067, 909, 1311, 1068, 911, 1312, 
          1069, 913, 1313, 1070, 915, 1315, 1072, 917}], 
         Line[{916, 1071, 1314, 914, 1404, 1205, 912, 1403, 1204, 910, 1402, 
          1203, 908, 1401, 1202, 906, 1400, 1201, 904, 1399, 1200, 902, 1398, 
          618, 900, 1397, 1199, 898, 1396, 1198, 896, 1395, 1197, 894, 1394, 
          1196, 892, 1393, 1195, 888, 1392, 1194, 890}], 
         Line[{919, 1206, 1405, 918, 1316, 1073, 920, 1317, 1074, 921, 1318, 
          1075, 922, 1319, 1076, 923, 1320, 1077, 924, 1321, 1207, 1406, 925, 
          635, 926, 1322, 1078, 927, 1323, 1079, 928, 1324, 1080, 929, 1325, 
          1081, 930, 1326, 1082, 931, 1327, 1083, 932}], 
         Line[{934, 1208, 1407, 933, 1209, 1408, 935, 1328, 1084, 936, 1329, 
          1085, 937, 1330, 1086, 938, 1331, 1087, 939, 1332, 1210, 1409, 940, 
          1211, 1410, 941, 651, 942, 1333, 1088, 943, 1334, 1089, 944, 1335, 
          1090, 945, 1336, 1091, 946, 1337, 1092, 947}], 
         Line[{949, 1212, 1411, 948, 1213, 1412, 950, 659, 951, 1338, 1093, 
          952, 1339, 1094, 953, 1340, 1095, 954, 1341, 1214, 1413, 955, 1215, 
          1414, 956, 1216, 1415, 957, 667, 958, 1342, 1096, 959, 1343, 1097, 
          960, 1344, 1098, 961, 1345, 1099, 962}], 
         Line[{964, 1217, 1416, 963, 1218, 1417, 965, 1219, 1418, 966, 675, 
          967, 1346, 1100, 968, 1347, 1101, 969, 1348, 1220, 1419, 970, 1221, 
          1420, 971, 1222, 1421, 972, 1223, 1422, 973, 683, 974, 1349, 1102, 
          975, 1350, 1103, 976, 1351, 1104, 977}], 
         Line[{979, 1224, 1423, 978, 1225, 1424, 980, 1226, 1425, 981, 1227, 
          1426, 982, 691, 983, 1352, 1105, 984, 1353, 1228, 1427, 985, 1229, 
          1428, 986, 1230, 1429, 987, 1231, 1430, 988, 1232, 1431, 989, 699, 
          990, 1455, 1120, 1121, 991, 1456, 1122, 1123, 992}], 
         Line[{994, 1233, 1432, 993, 1234, 1433, 995, 1235, 1434, 996, 1236, 
          1435, 997, 1237, 1436, 998, 705, 999, 1354, 1238, 1437, 1000, 1239, 
          1438, 1001, 1240, 1439, 1002, 1126, 1440, 1255, 1003, 1256, 1441, 
          1128, 1004, 1257, 1442, 1129, 1005, 730, 1124, 1109, 1006, 1454, 
          1110, 1125, 1111, 1007}], 
         Line[{1021, 1116, 1133, 741, 1020, 1115, 1132, 1459, 1254, 1019, 
          1114, 1131, 1458, 1253, 1018, 1113, 1130, 1457, 1252, 1017, 1251, 
          1453, 1127, 1112, 1016, 1259, 1452, 1136, 1015, 1451, 1247, 1014, 
          1450, 1449, 1246, 1013, 1448, 1245, 1012, 1447, 1244, 1011, 1446, 
          1243, 1010, 1445, 1242, 1009, 1444, 1241, 1008, 1258, 1443, 1134, 
          1135}]}}}, VertexNormals -> CompressedData["
1:eJyEmnk4Vt//7pMGQ7OiUkiTkpQGpHpnKkmFRGigCVGElFRCmRWhEkJJVCRJ
hbzNETLP0zM/jzlj0uDsVX1/55zP+X6u89e6PNe+tr3Xvve9Xve915Ljtvqn
Jk6YMOHd5AkT+KmRPud++AepJsxR2mnyQaoTpEV+/w0irpsEts1rQqHzm4u3
zusEQ07H0mHjJjB3EGCs7G/E93S3xyv7OyC209Q+V7AZBvPyHx182YiCiZ6W
B192QP+0UXPpbS3guW3x9duajbiwh6N5W7MDuIunGd8QboOAM4LdljENmFC3
4L1lDA/ctM5tfKZDg2Kj9j2Cj+px8RKVhYKPuFBktXSl7HQGLDwx75LDtDr0
Cdi532EaB9rV7hedsWAB3fn0Q75L1Rgiq+jCd4kJbQNJrW2OXEjP1hXf4PwZ
nUZ5XQrObfC97V1IhmgXbDIwlErYk4PvIkZWJuypBO/tn4Wk3Xph40qNJw9T
NWDinl1PzqUaoO+ZJbyf431wwpOPJWmbA0EmA9clbSuxaajLoupyL/ifzF+m
FvQZzLZOeq4a1IYzc5gVqjO64F3tt05L12qYrJMSa+nKxCyBsxy5s1xgRBte
6Q1tQdFNDH6P6zxIpGc93BHVCkoJKZ7Lc1pQehYzKuAJD/KN7FsSR1vg13kp
0cWlLTge0yc+lMSDzQ6Bq+PKWqBUyJ6x410LJoc7bOmN5IH6NE80Em8FlnLX
kzF36vxp/boadjzo2Jxf2sxpBeEXkm+Fl1PnWfjkRbYkD/qKTYxebWsHC8n3
WxICm3Gyw4O6wGgubM+YbGoTToOp+zmaSYlNuPt7PHNiGwf6wiNCfnyjg3AA
o+ypfiPm/ngVdzuVDW01g7M2VTABD/34vlO5Hr8aK3kOcpmg7yNhHLWBA/M2
Lbbo7qvGRC0f90+idNDeoCSds6IDmCsmT85+W4YJDm/Dey41QiBrh7H/6W7w
2hr/8d22LDwT2D+W21UML4OVa16K94GFfD9L3zMUwh3OfpdyeIQZPdX6baN9
MMFlZ5VXWx7seWJRQZ9aiZqa1tzA873g3HAsYFVhG859LDNJ7Tsbsp+GHOfZ
0mEeZ7ddycF2ZA7aKDeZc0DX1WyMP4EG5pO8WhOet2OQ5osh+SgOxF6YQPsg
S4O3cYIimVXteLuHcXJ+BgeOpnePT2G0w2n37SEfy9txECcI/3jHgQo3+6M/
O9tBUVdV/fyjdixQC6gOu8+BEm3jODtlGpiZnFJepdmODtq6T0cPcsDdPHvX
m2waHHG5dr7reRva15w46cFjw96fnICuO3TQikgJuZrTikZzB47MUmWDVP3T
NO8MBtw0qD3lfrwFtV6WDh/eyYJSB/70xbtZ8OzgoEXOwSZcd3nOuE85A+bK
RLvV7+aAR+KdRo5aPcqGhshdj6RBNHRM8cjmQW996/lXr6pQTeLgqtTUJhBq
cXya5NMFa4f27r16sgjFP4dcMLapBLnI4ZmOa3vBNNlz7bbaJKRfvXFu6pQ0
SLaTfZ5a1Qc3GuxiwhfT0Gfm0bKxMwxwsdFI+xnJgiWajwITkIZGfNl75Zcx
oVbsyRtFayZoTm+JrJWlo5alh0l5FBOejE9qNPZnQOy+zOOWtnTMSppsLtjD
hGgleUwapUNvsqTa9jt09F36TKVxLgtCc/x98xLosPah86St9+kYGeO1MEWc
BTekPOV/htPB29xihpA7HZGVYGcwkQUDlr1b3n2mg21mAP/GvXT03iwtPlDA
hAFXBeM9Ggxw9Fv7MmWQhtfP7HZ8eowJaWUJKd/4mPAhVMmv5AwNC6PV7q3P
YwAsDQ6JmcmCO67TsjXU2rFK4NaJ9y10aMko8PR1YsMmj+CeKaMtGI+CSekB
NPiwWfYbYxsXcEuueE5CI6ZbJKzTNmiFbTuWu8863gEfOlJ9Zo/UYHJh8Jq4
oXpoL/0izsztAnb/y9TuGWX4tlxLu+JBBZTzm3A+CfaCsYSOitROGh7pWf+p
h90MJxueLC3L5QJ/WIJG4Fk6Zp759eokrRU2yNJuFO/hwM7vd6IitzJQde89
PiP1dliXec6Su4wNMxet1VUtZmCloPhnxYU0uKgf19StzQLui/K1K6SZ2Hdj
OMXqNA3273lvX/KOCU/Dt+3S0WXix9dhs0ap+xqfLxO74gwT5KxesVUPMVHj
5PP7n0JocDCz4vnxw0xIejhaXraFiRlWxs/9XGiQ6x1sM+U2E64P7mVNG2Zg
Xe75rBygwRN1rlkxPwtkJDd+nnSdgVeKhg4w09pB2tbujWkWCyYE5Ng+Lafj
Hraci793GxS8u+2akseGfc3PKvUrafjdyeVlQE0LrIjMCdKYzwVHJ5NBi5o2
PKGnubTLpgkCt6yaIZrJg+q1z5cs6G3C96onu5Tn1cPgQ3OvtkedEKYvudv1
US1u6s06pOVXBdH1oTNUn3ZDnP/lkZL6duT3Sdkkq1AFNe/6KjyUO0Ht5Ryt
/id0FOLg08OyNbDs/mr9eW954L6kNT+Ix0A77p3ZcyNqYV5qsJyKPRc0BsbE
fpYx8dGrJbc0H9WBz+69M66d50DnRrvRL1YsrHbtrbtuUA/GtukOQm/YUKxh
eOJnMQsXBp9gaubWA79ys0nhFjbsEhIdthlh4fdfWb4zhuvBeVV+iesENhQ0
F5yYNshCG/3XFxX666Fs8OnLr5PYcGOBzuQ7yMJosSmXj6TVg7hMQMguLTaY
3pr8PtSIhcW9XVqeUA9mxSPnm0rYsBV/SS9MYeJzg5Ci0+51EO/XtGUoiAMn
V3ytTM9m4GHZu4v9z9WCRfLcHs8ILhxz+7zh0zk6xhWIRxt0V8Mkc97tkk4e
SFUPsJ2o94JtNluorqUSxAzPVdU6dkLo8FGZFPsmnMn/ur5P+TOcNN7YFbqs
G4JORkc4tLThpq8h330f5UAoo+TjkZddUCi93irtLh0FIjMzhhbkQ6m4U+5t
1U44x5go37yZiWXqTs7+wwVQO5oiaPCLBzI/1uRVWrDwPv/RHyL6HyHYNUJ/
/yAX3g4V6jVsZ6PqU/EDVbuKYPMbAdvo5VwYGtDSqSxh4wy/l029vCK4wg7k
SdzlwDul8HHTBRy8o+9xPEC1GKIMdzQKanBg/RF/94NyHLw4tsTC/FAxVK/W
33JjLQf2lGlp7hDk4LMY98Bl8sUwLJBZs4vyddbtpbOPP2NjX/NSxrvcIhDc
MuRVTq0Psz9cLL4lyMZD9sEzu4WKoL9VO0/QhAtWFho7UxayUD6Yf86Xb4Xg
xP7wzlGZBxoini9NShm4SldStNalAG60nz5qeLADdujQAzqm0lFb9I1fjlMe
zJJsOxMT1wk+XTOlgixa0e1iEVwsy4a5P9+H7VzUDfx67F+bbdowL75g0s6V
W7P+jN2gdWjOh5eedHys0awhWrgl68/YCUIvFFrPaTORrtlwcJH37qw/Ywe8
svBrlQtjYeKLhNurr2pl/Rl5oPdsT5WYNxsdGiJU1rzYlfVn5ELxRo/nt1dy
8Ejul3sKYruy/oxcuBrjdJLpzkELb/BTyNqZ9WfkQKmK6+mH0Rz8M+7M+vs3
7Ehf+Pv4UdcHv4//M3Lgk/PEZ+T89taCg6f0VLPus8zDyPk7j1+pJNdTZWa8
lVzPn5ELok7ZzeT6o1Nlg8j1/xl58OWidCO5385NnYcWeStn/Rk7YENoejqZ
H8P2EztFC7Wz/oydsDjW/huZz7fntk8h8/ln7IYpo6nhRM/VZR9E/R7lYHzy
aCHR8wmhmZZEz2MKQ72UnvHYzIJsomcPw/dyRM9je8YSKD3jvn1TBIieGyqL
coieL95NXD1X/yM+vDCmS/RsUqmnS/R8xynTldIznlljf5bo2ag6TJvoWeFB
iHAfrwgPL6viED1vaBP9RfS8OGh/AKVnFJvxvp7o+UWRoBvR8+3LNkGUnjHF
rVyJ6HlxSqs60XNrQN47Ss/4XUCnmug5Q+DiTKLnpj5jkfe5RTjls4In0bPh
9KAiomdtk0xZSs+oX6adS/S8OjBUk+j56uYLqyg9o45y11uiZ4Hdd5OInqfs
nK5C6Rnz3i09QvTspGb0W8/Phz88ofSM/oum/NbzPc4RCaJnOp/gRUrPKDJH
/D7R85Y3UUPEny2GUJXyZxRMsCwn/jypoVuT+POLexOzKH/GKSEy+4k/75ux
KI/4s77xyiWUP+O15tOyxJ+j1njOI/48djc/hvJnvPHhhjDx59rZncPEn2ct
yOmg/BkNDgufJ/4sOxBpRvw5S7luhPJnTF429xDxZ0fvSwPEn5eZiEZS/oxd
p5YXE38W6lMwJ/4cqvLRh/JndKqek0j82SmEM5H4s0XyVj/KnzGiQewO8ecf
um5pxJ8Xe9SbUv6Ma69p2BJ/Dp9euIT4s1v/xSrKn9FJ0VGZ+POlaXHlxJ+r
W/0VKH/GkO5VncSfG7R2/fbn0t6MJ5Q/Y/jClb/9+arcchbxZ4dxdVHKn7E8
iltB/LnSZnwF8efFDZoDlD9j8O6sDuLPQowEJcIb59l2rRRv4DnrMknCGyGT
alQJb1ianMujeANfdYIb4Y1aOXY44Y2yjrR5FG+gQ/Hqk4Q3prd/1iG80aUe
U0fxBkY289UT3hB1GpMlvBHlVfie4g0MKiyzJbwRu+a0BuGNdQPqYhRv4I4W
nRjCG4+K2AzCG+khClEUb+Bcj0kJhDfuTPQoI7wx1ij/iuINlFgpcobwxpkh
YQbhDbsc/nyKN3Bg8s2jhDdSHVVKCG+ELQs/QfEGPrwpnkJ4Yzhc4Ddv/Co0
d6V4AzdkJF4jvEEbiSwnvJHSuPsDxRuY9/nLLcIbYR9YXwhvnAnzkqN4A29O
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
S6iep5X1Z+TBd/WO06b5bHx477jTZ8ddWX9GLmTcbHx7czsHvYK8auby7cr6
M1L8YG3GiPDkYMT8davc03dm/Rk5UPb3u2rZ3++qf/+Goumzfh9vk+X6+/g/
Iwcelz9KI+ePrCzkpL5QyyrgT60l5z94qO4UuZ737nrdodqaWe/TzC+S69n9
ynYCuf4vt/uekev/M/JgQvVZTXK/X+5sjj21QCNrV+AkW3K/YlIb5pD5ufhV
aLLRzh1ZtJ8HD5L5uX5d3pvMZ55C4hEthd1ZE+tlr5L5XHYgRZHomT9u4TlK
zyj7fJhN9Cwv05xB9PyzbUyH0jM+Nlh0jej5xYVRUaLnCTxTDUrPqNvrtZTo
+cF7z49Ez8efh0VQesaPJXn7iZ4Pxx6ZTPSskJO4j9IzekYpGhM9P/E+4EL0
3Lvw9jdKzygaU9BF9Ow33LGV6PlCS6capWfkKotvJHr+t++qtUc3GhM9f1fr
3k7pGQsXCDcQPccP/sgkeh5SEU6l9IzbNEq1iJ6P3vtiTfQs4rBhPaVnPB9+
Po3oueuCwG89LxMejaT0jPzld64QPV8Plvqt5+RLZqqUnjEnY0Ut0fNtXaHf
ej7kFHqL0jNOjLWTJ3q+LXf4t57Pl7qJJi/Nw+cR0g5Ez7besqeIP8tvrXWg
/BnVT93MJv78s7nPm/jzlE8f7Sl/xoym1hHiz1b7Phwm/jxpoXk55c9o4aR8
m/iz6MqXZ4k/hw6cdaD8GVlykl3En+fts7tD/JlhtIBD+TNutH/BJP7cvm11
FvHnzfKzt1H+jNMmWxwh/jwn+Ggn8efxybIrKH9GVcm35cSf/+276vEfPSrE
n12Mco9S/oyQOOct8efOmzuEiD/v09/dTvkzrrvLvkH8efPZwi/En6Wqb2ZT
/oyu0x/vJP4cMhL+gfjzsoPzvSl/xhlZzgzizxlL6kaIP89XqThG+TOG8KbK
E3/e7p/JI/7c5KyFlD/jXv4hE+LPCjJFusSfh515wmZelShQszOL+PPenq9d
hDcWLWlfR/EGVhstSSa8se2Tz3vCG09fqmlRvIGnNkjfIbyx8tWafsIb531m
FVO8gUVDN5sIb6h9P8oivDHVYe0hijcw+4LiR8IbPodiVxPeCBm1fEfxBq6O
1iojvHHxYdgGwhs7ux3lKN7AmogjsoQ3LETigwlv0HK2m1K8gY9jnhoR3vi3
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
LdwxhcnG2/xDc0MbS8CK7/7nQxmcv/2diPHR//R3Svhkn/hxBQdtWuzm3VAq
hWuVEY5Jezl/+z4R4y/90/dp4MaQ24KNHHwsYTqauqoUwjdJtSpt+vPvU8aV
vnduKXLQWNLvltPcUqgavpKbfpQDJr99oojxl8n5R377RDlbUcyvl7DRySVo
mJZFfF7xZPrL6v/5RxHr6f+nf9Sanhz33iVsVLV4uFBSsgSSpWfJ8Xv9z1fq
//bn/3ylhkTKh7N1WGj0fssc2pJiuOjweHDCkve33xQxPuKfflPGluJnHjEZ
KLwl5HBrXSG8luL3rjzQ+bcPFTHe9p8+VDM6UtR2y9Hx3HjhaJDYB1iTPn7W
+nXX3/5UxHjTf/pTNV/x3uFynYpTRbZqlR7Nh9Tjy1XCFXv+9q0ixvP907dq
YMWyQDKe+fZGfiXiGdWdmF1kPCsUJA6Rcese2bq4jFWA/jKmf8Xtg0Uu1mR8
Krfb5RPxiWdWTY6S8Xlw5gcWGYf8YznORByi81uDEDIOfSdqMsl40z8mM0rE
G0qdepVIxpvvLEsnMq5C8+6vJ+IKRSjzP5Fx9SNwLJ6MH2OtK+ZE/ODzbt1t
ZPzsv3T/ABknKfMElNNWlWKl5odmMk7i1XQSyXhwS/NCIh7w6KhpDhkPG3s8
zchzz78opELPKsEyEQ0aee6nXdvdyPOlqy9bS5wvjl2RW0Ceb1Hx/L/Osfd5
vyZxjsiJogyQ59jqY3aaPC8zvnk3iPNCLdFvXuR5ubkv/utcYk7qyZ4V+4Cj
uqp/nctSqpgTuf8tt4xvEfuP3D1tSuT+M44deUvm5xyq/iEiP+M1To45mZ9V
nOq0yfz85I69O5GfsUidrkTm53BV1moyPwefeZpL5GdcvnfQlczPTZ2KN8j8
jO2iO4j8jNfXjAmS+fn4yvg6Mj8nP4jNJfIzLt2n/oXMz0uMZpX/lZ8fZSkS
+RlZNs/TyfzcpZM4m8zPaxV3bSPyMxaJaz0j83POjEUZZH72ZYe9JPIzum7O
Fibz8y/F+SNkfp6x+JYCkZ/xuFGcB5mfxefzzpP52aJYV5XIz8jqUqog8zPn
4akxMj87HuYeJvIzttetFiPzs8JLxmcyP1uYiNUQ+RkX7y8wI/Nz/NQzfWR+
tu4tOEDkZ6zdPjGdzM+LIiJHyPzsMvZ17tvsKpyz70gemZ/rLWNzyfycK3te
1JpbgcNjCRfJ/LxkickEi+CNkrPNeQRvoOauyn0kb8zPfvGW5A2DOfyBBG+g
idy50yRvLJ573pDkDaMxt/0Eb6CJc5g1yRuBL06sI3nDufz9DoI3sHvY6jrJ
Gwlp+9RJ3nCiCucTvIG3vUV+kbxx+kHlO5I3phXvMCR4Ax2Ed8eSvPEWXqeQ
vGHbnepN8AZqj89XJ3ljQHhHJskbF1/WRRK8gZoRk0Ukb/QWNhiTvLHQ/uAB
gjdQ9ZtAGMkbSg+VU0neEFh0QongDRy9KxxM8gZzjo0ByRuy+SdGCN7ABBPX
KSRvbFIw3EjyRi2fDZXgDVy5UrWA5I2drpFvSN54F8IXSvAGxnMeD5C8UbL3
ahrJGyK12xUJ3kBTJcZDkjfGTs9XJnnDTtt2E8EbODt9oQDJG/rRoZtJfn5p
+PArwc/ofWD3bJKfVx58b0ryc5GwznmCnzHmhq83yc+2SrxzJD8fwcOfCH5G
u/YsH5KfRQcGC0l+HmbQ7hL8jP0TMbUkP7tV9EaS/Hy3Tuwtwc84f139fJKf
M7vfXiL5+Sdjei/Bz5js3S9M8rPSW6tTJD/TjMWiCH7GsAJ/VZKf91aF7CX5
uVg44QTBz3jolUcYyc+WFj5LSX62zNw2QfAznvrFe03yc3tkQSTJz3LvngDB
z2jrUphN8vOpoVFlkp8TNdrjCX5Gb9dVjiQ/Z9yrKyH52U/pxmqCn5Fv8ng9
yc+nmqL2k/w8cj7TjuBnnKxR+Iuf9Sb8bEh+/qQkGUPwMwYa2vKT/Bym+PIv
ft4+sZLkZ3ypPPMvfr6YnuxD6r7U+DApQveh3w6zClL3OYje9yZ1X53I8ipC
9+EJ24EZpO6bqfVqJ6n7goNNbQndh7rdkjqk7rtDL6omdZ8ZRWWQ0H046TQi
S+o+vx8x80jdF/mh5DCh+1BmQL6Z1H0KLdYjpO4ruG7mT+g+ZNtd8yB1n65D
RAep+zROOy4ldB8a78l8Seo+uVc5O0nd16W/8Bih+1C58PVtUvcZjUycJXVf
aGS3MqH7MOflCRqp+8QCzGtI3WentDeJ0H3Ieqjzl+7LuTkSQOq+y8kxaoTu
Q6ZHex+p+2QC1EVJ3Wd+1DSB0H1oFFj6l+5b/fZAIKn7plnEBxC6DxlKu71J
3efnvDD9gEgthl/btP+0TwMaGAVwvKN64LnSPBNSD16vLsoh9CB63X+pQurB
tNjKKrLOcCLi3vDoTw766J27QdYZPm3IFyHrDDJGT9WMHnGw10C8gqwzDGvG
1pJ1hjSWVpmJKhefvvyiTNYZNqX/GibrDFbhrtmyBlxc1FF/i6wzhOwU5Cfr
DK3rIrYeU+Ni6a8NH8k6wyrpPjpZZ/BtTpEKGOegvHKrEFlnGMw7oknWGfK9
jPY5pnFwpbqXAFlnGNCbNoesMzxc06R3UZWDT8Vi75N1hgxbnb/qDEvoa65K
7WPjjTXz/qoziP2uM+T8v3UG/L86w3bL6XFknWH0e+Xe254M3KLg7kfWGfyt
Fk0p9q7HKLE3ITZTabinIi/88JVOuGj9JYFhU40iiyhpjzc3YYZPt3Wgbw9M
l95ms8e2EEdzSrf3T/+EtdsyUie/9oHqXAVe4oUAdNzSvmeZnD82NJgZ3Jvs
B13ditlk/Yoj1a3kXs/Dtypyb8n6VVP042dknUo802JHbhMPP4SVLCbrVJo6
k2VknYqv6WLV1g88DEhKLyDrVB9CP2wg61TWM4VMRa7yMC3IYvxzDxX2S607
Rtap8jy6yDoVVirMVSHrVGcn233IOtW150c3PnvIRad1OJOsU02MJP0i61R5
jI/Zl8o4GMXX8ledSkiR4kTWqRKEkpU6TrAxcPXxx2Sd6oTuydOX3RpwbOlH
MbVrTOxTifMUyOGAp9+IVHplLV7m+ro0u9LQZ9ziVFxtJ+g0mZixb1Wg6dam
urvSjcgRVm1YI9MLA1E1t+KPZ2OPpsoTMb0iHF00Vc7qfD9IlO8e6nJIBUfH
brcB6hsQjNDfe6ymH47WN8T50Ethw8wT+ss0KXBP4c1XmbpekNUwN7c82YYh
ByazIqg8MC1rOmV4rg1u5Z8e1dxHxIO0rOiPch4Ij1dum2xpA+ormru8Whse
ovm1xMbxCN394NL211SYskyYdbaiFdPk8w6/M+fB45FU90mZDvDb3Kz4TacV
RQ4LXMr7wIUDLbXrbCNp8PJ3n3bg7z5t+u8+7ejI+MC8wgbsyOIzcm1lwu2w
kjkHd3NAzmJWa55HHdZr2i3ZPEQDpZeTKgGOnWCkvPG1pfdnbNrtq63d3gS6
V7yvnbjTA8sTD99iir7DiEsai58mlkHz7p+z0KwfIjcmPLh28wGozx+q4I29
IPSfjb5yTz+MXZRZoL2+BBYfLS+2fVmLosy1jvlL+uBWZve75dIdKDJc/+iN
IRfOfl9kLr6kA2yPxKfcntmBzsNJZol6XDj4y8e1xrADbi0+uq6jox3ldiyN
TZTgwlxd5S076zsgz1Lj1+S5dsx+w/FU+8wBm29xi5hnaFD9h37s7S+mbf54
oxkfzZX3Wy/NhJ7PZ9S01nNgirbL0pCgBuS/aRPT1EiDDRFFD06U8mCzvmLy
vOYaPIkSbcrZLZBmf1FQ/Xk3ZEqGLo4of4ztZyXrt015CdvvZg2c5/XDvRX7
Ny8foWGWYchhjflsaB2yuPdRmA6ffSopy8do6B7iOzNkIRt0VgdzkgXp0KLz
8esdNg1PRNssAQE2hNgOSbw3pMNXGcbDk/xEnIz35xz0pEOOy7ap4VwOBHuL
XVlV1oTnsruP8FW3g1l6kemDpZ1ge96hU8SYgl4Ft4rDNjXD89yeksHb3RAV
N+dVzetPSDnSxNCyqIEhOjM4YmofVIvfF+L4M/CzVY638S4GUJZskHoUzQCN
xui4jhAGNpnveKPlwoCji9811IYyIFG15HDQABXvPj2RVFRDBd2wZaFJ03lg
tWyBY+jWFnSYnyiRZtQC/dSeniGRLgj41Jr13q4eI/pv8kWa18Or+YxkW8Me
MD9yclfjOBPlp6+z/VJMhTlzZpk3zmbBvbZwE1kiP2dEBW7lmDcCV/yeic7x
TjBNkI5WqWzBk+uK9QyXUMApy+v6pEk3lMTN8L/b3o5bng0Wm0tUQWwbf59w
//9H78N/+Sfz8QX/f3T6n/T4/3R3sP5/+Sf/W1//SUf/T/8GX/qn/v2fzn3f
918+ycT/Nfgvn+R/69Z/6FP7//JJJp6v+6cOvfy7b9Pgd9/mvd99mwv/oEPf
PA0Q0hJmoqt9K2sVFGFwZktIp2kn6L+eZnjNmoXbct1vrfUqxsgl2x1iVvAg
aP9g3bGVbFz/QlDSb0MJnl76WNpkNxeuahpXWVexsdxx9AaNUoKTAZddLpZw
gD7tWvdJYh8OTz1noraE0I9Pl0aNe3LANf3DkFoNGw9bnFkVlVmC8oW0bWnE
+GsXa77YGLDxSJ+DroZECSoe0LqRQsxPP+L0dq89C/Oz5dfMVihG875DJqd1
eFAZdPtXpjgTFaPFOrG2ECsKlW0TzDvB/Wn+1DBHOn6U7vcKJnSiv4yxYFpE
FyTlRrMaVNrRokTQ3ux4Pl7dFfF9YLQbfE6IXJN4x8QkZ78JvYo63C10ZYGW
OhfEx5bZGgaw0Ck5Y2raGQpCmF9toBNx7kJfVzWNsDDK55GjWTcFB7yGr0qV
s2H+m1Y5QSM2elm6Rdgo1eN9u2ONx0+xYdOcW292G7HwuSjlss10CnoeHBX1
JH/H6L25PnUvE9e+2zbjlnwdyvHnq0glcCGmQZLJUmTgJ2VQ1WmpwdHG1Vra
X3jwYa+fRrQvDfsipPXOy1XjtOqVaffXdMHEKWXDg56EXlq8x3LG7U/4wTuv
KYXSDbZ5bPNOXyba25c1PJGhotbX7UZ9tSxgRx69/+YTE82f1A9qX6HiNAE1
05fbWUANUNpvOcBEocEhvtZcKh7sWCi3ZxEL4o/afLjUT8cHz0/IUs634JT4
LUt3fufAi8MnGsUzCe5dmFQYGd+EWv6Lzvjv5kHq66+2FqNU/K51QQUG6jHx
mPAJhlgXgGGtocaWZvz1/kfut+21qOT/yXZFdzd83Bb+dYkHA6Xr1TbesWRg
1aII5s1sBiyd3bHhmg8DtS7LKcvaM5Ar/jy6+wkDltBvvXN/S8UdG5irc1So
2K4dc1nBigftq7VlFwu2YLCRqibdshkzpLpOj+/sgv6FKoKPWBT0yNZVWDRZ
hyeb9B154T1wqfVhIo1Gw9pLDmd2DrNQ5Xtp+h1rOlj+7sO59rsPJ/53H87c
3304Vr/7cFR/9+HsvytxKLr3HSYX7/E+rVkMgVWPOeIH++Hy1eMMG/dSHPbU
VDZ5V40uEwtginMfKKW9OEqOdzGU0iLG4x7mtk5yfPTyvQrkveOuOGc9ce+g
lCZlkLx3VnHauF5f6/GDUnN+nTwT3dvurjqznAuXdjNZe/Z+RpXnmq9q3jeh
+njz+/FHPfDuVFKCcPtb9BlerPDQoQwHWwZsv2zsh/wjNmUv6x/AkXVtq68O
p0OiuIO5UHc/NJVzpMh7vFzk+yBxj4OKK78teY8fTT5vPMOyDQ9G3XP2L+CB
haJWWZ8UFQaXb75PctGO+M3TCS7CjJGrP0kukhbY3U7y50O/ANtVcv6gk6L8
F3/26SwWrT5Rj7P1rM+NpragUMmyGQLC3eCr9bKbvNdkVsVnEvca6m1SKSfv
td02Yd43+atwqkioyGqtOrwmsDxwy6Ve+FUTl0Hed+8VnjcQ9x2yeREh5H23
JXS7nNLPcuTw2xzJ2lCHv9Yek4qq7oXVtfZuz1+8RgmbiFhOZB4KRQtNHMzs
BwvPyRkGD1uw441E7ZFOJt6b3cpI02dDyp65SVBJwf0bTXYOKDNw++PDdrf0
eDCnLEmd5Iem8sYbBD/goXUWj0h+iK+4mELyw21nbgXBD+gYvWE6yQ9LLA67
L3eoRuOFnZefHGpDv5q0i2sDumHbRINYlVsRigiv8z1bVo1iCcHudmf7QH/0
qvZKhSikeR6YM5XvLp6a5X1BbLQftlg+fESxKgCbjU/OfmdUQHa81X478X64
+H3SgDyXU+KiB4hzQa+VXkieC2hY5ZK/R1dG19CV83ioLr35p+ViKmg6WT8c
d2lCx7o3Kwwt2Lguqjpz7AoLBmJlgORk51jD7wQnA+QeqiY5ue6jVhTJyU+F
7gmJ6xUB08xcluTkzuGhEZKTBWaxE79T32AF7+Y+kpONi6apk+vP/kIXnsF3
F6j3358n179rrZwVqVMuLLJKIHQKJAQrJZM6pXKWSyr5uUZ3TVMkPhfmOGi4
k5+L4lHiQu6b+aWLScS+QXHM1rPkvi2uahMi902/IPoesW8QVNmwj9y3hRtt
5cIZW1B1+nM5IWuAMy03xSeIeDu4hSJExtvEnKDrRLwBV0p5KhlvzYyMeWSc
PFRmnSPiBEIsjOeQcVI9W5NDfr9keGofiO8XCFpt1Ce/X3afH0iQ+kJdyOoo
oS+g6oaON6kvpD3nxZO6bDJf8x2hy+C0FHMzqcsO/doeVmtThdv4CmapO7TC
0wsrDt1p7YZf5ZSUvpAP+MXvwK7j3pWQwHnECC/pg9oIYQFS9/34FXeJ0H1Q
rr0gjNR9pVRHLzL+vZO+yhDxD1PkVP3J+Oc2v35O6mv+kuqjhL6GN6HAIvU1
u/G7KxnneSNlktzIPCi/smmMjHP+KBmHdVYtuNlQ+cLRYQ7c/MQrlR2nQ9zO
OInuZ+3Ilf/V9KGPA7LrzmQf0qPBuvbVK850UlEDJkVaiXuuWHzhWKwjHRTK
Uy9u4aNi6r0AzXlpbNh3x23ZjQgGfNd5XBZrSsPLCbbfBw1Z0DD0WjIpkwGH
n14YlXxIw91rxDgPXrKge93w8xXtdDi8VUunLYOG/la9zouKWND/Wbj8Ww7B
w6HDVp27adg78/XiUCcW1JuEPtwXxADlHt/xgjcdeHLt7eM2OUzgGduwZ91i
wgf3qcLulTQMdI1XkM+mwesVzmrqwWy4/1xkatMlOvp4HpFYc5gO52hXZ9o6
sGBZUunHyikM7Jw5c+9XDh3UbBbszvVjwsftjZM/DjIwccy76tUmBnTfunPz
di4DjjBXzIhUZ6DtqxMGA6LE57Rpkp6tzQS2+JcNTUV0fN8SP7IwmQ469T7m
u7uZcPLRPTUfZTq6LqxTSRGlwyDjJLd/kAVeCXOW0mtpONXaiv+2aDOI3y2R
m67OAzhwKD5nGgNnnVuwARpaIEjPaK7kRw5sm9Tdye5g4D3t9uJGmTaQOMK/
yOglG1wXdHRc9GHi/nMD50IG20AmsmVLHp0Fpa079n3mZ2HZOsces89UMDM7
cFpehAW49quHaRsTdbv3jqyLoUJ1uPa9YDMWOLv43nUKY6IKJ85WQo4Kljlm
NCVkwTO9Vx0e/EyccltRsMCxDVRrxq5tCmLD+4vlEmf1GbhraQhPakUreMYf
83t28X/vx+381/txTwduMRbuoaGWA39Do3Y1cLJr5p/e0AVpcxQ7dkgy8MLM
L4XWvBq41114MLuBB1sbeI/7tzBRbEmphqtaHRxIOKT68gEXKDrHfjwzYOH6
XTf7H8ykwO77tjOSX3AgUL1k7+ZaFg6UUQ5vTqPAZ5nBKuEJNkxquEzx28pG
BUUhtRe69XBRWP3Vtt1siPKQpJkQ+e6e9pXaDer1oJhjNY/iyQaRhqURuSIE
Z8a+m/L5KwUedPyaEpBNfN5zD2Y3RLNQ4dSbcuZZCtgKZr1/ZMKBhna4XN/K
RN8XNmkyVXVQItujP0ecC1MZQkHRNQxM7XdLPltVC9TUKedzF/Cg8wbj6ZYj
HXi8xc41gV0AjXs0vwcldIP5RK+ZNYWO/d/68g0SP8Dyk3EHH+h2wX7vplbG
ISZOVmit3ry2CKYZuKrpjhAcdYg7ORDDQv9nTVWWx4rBzqBpkv8HF4aZDKak
OxvnjlYZxW0ogdP0Nbe+aHOh3dZm5o0+Nj63XaGk1FAC5w480XZK5oCBSbDc
MTMOHqL67tcyKIUfnc2zuyw5UFqyQM9YloOzJ1v0BiSI+zw04j3fGQ48ZY0+
L35F8PnNOo+Vr0tger1PZxqTAy/D5eTsprFR1Gu9ZsnsEqjfWvE26woXdtbe
9bYVZqEk64vmKYViUJbPkDA5xgOp4fkUXhoDXd/bbMmpK4Tr71Il2dc6/36P
LOX3e2S5v98jy72mt4Bcp+Q1wwhinbh92elZ5DoXlqSnPlejo2P8R499B2vQ
bo9vd+iN/70PVfiv96Hkls7j17Zm4yPVNXr+mvUo5reE7uzGhi+pG0MC1dlo
FL4so2JKPQ7fZd9/GsmGvrOen7/9oGG+yKmeqORmzL+elFnDI/b5bXVe0HwG
9vDfnX3fqBW7vL7fPXabA29fCmos+cpEo/EXh96nUXFbcL1ehioLjo8sqXr2
gYlZTaeV0vdQUUJ4YdZibxbQj6+Tp7kwUeKya55CeRtuEjP8umKSBQZun053
xdPQKF4meNMjGgptiy0uyGKDlJF/o4UzHV/FRczYsIuOYVnwKSuEBZ1BT5Q2
cOjYtTxhPX8THYN9SgqP3mfCxFCoQ+FOBk6ba2gupcdAR4Ujl240M+AMLUlC
QJ6BLfdXqZ4douOzdyW2TbZMiNaIEu7IJuY9bvQw/jIdF9/iqbwldPqODvpV
S2k6yjsu2cVj0HA4t2B/jwIbnn0ut3Dhp6HPpyFx719MpN21WXZdhwntainF
q3xoOK4u7VsVzMI3Lp6PUoABH7/c3ZbyjoYbao2cbepZeD7Pp1M3gQ5nPuyd
e4NJw/NZ0yNdBNhY563fc8uIDh7ffPc/zaJh9CI+1cx8FgbWnqIm59HByHXn
DN+DNEzQi30q7cTClAzLL8G+DAj59W1lTnsHtpdr06bnMTH2jkujXwgTzkoO
PZXwaccr4t+euVYzMP1O1ZhiPwsudw2YHndqw28yHhVePnSUFs21Pk/ozZem
wn2fbdvRd3YblfOCgzNCdusG59Ig5abxy8537bharKsya5SD5k/Nb3AW0GD9
jtYds4faMWHDA+vsJVy8k6VpV3OtA75jTXWYYAeep8RaC2tw0a5bu0LiYAeM
zK7yGee1YzS9tTRpLhcXvN5mnlXUAdoGqTPtFdtR7LWH1it/DtbKUVUbZtOh
9YDA45bdVLQ8skGpnE58j6XXj55TYYCPvIarsHYbXgo6/fjtDxaWWrM5Oo+Z
cPx5kwXnYBtOl9J0j6rmoXf+1xe389rgXuW+mCaPNnTZ4eisQzw3b15eOUg8
P6AwLrpxcxvulzd2ksvkYVJC6vHa1VR4IosPGDPa0PnT/jWbT/HwkNCj0kvQ
DlYpgVUNt1vx6FTV0HdzePigSUfcpL0DRn+/l3HxX+9leLiLr3jf3Iy5QSrR
jec4OE1/edGXNwxYqLxy6x7ZWpw6XX/bPb8O6Hf8tE6E0GXzUq737oj7iAZq
blMCDOvBa8/lHVURvbBshsILo8FX2P59+tasWQXgpBIjPJlB8OGXOx1kPdMr
a7rs5iEaihcIaJH1zIb3YU7k/DtS6GuJ+ZGibruJnD9pvvx3cv4dGXkcf8N6
ZOTe20vOXxIgnkHOn3rj4Z3MWQWoJmQmRs4/EfKipPZWM677rCq7Xo2JL7IU
defpckDj0XVRV4kmnKu4+FjaTzrSrtc83RzDhay8YrM9OhR0kgpZ2T2nHfXf
ZW9ucu6Cn//qS5/6uy/dqROPC5Y34I6gA+nNhO5YdKnIrN+aA5Pv5IXJ+XtC
7HyI+cErGp6Q85up+Kwj55funG5KzA/SV6w2kvOPlc8s/eZL9jdOL3Vt40EV
3fTHg9A2EJwfaCTv1obnHC1dV1TygK2+Pv5qWRsYNy6tVDBqw+12V7sKUnlw
WrfvhZg7FRbWo0/xSCteiqIOGB3lwarPU11pR9phz857ttdutqLETsXMX7N5
MFV+P6epswPGAuRYW0ZasJGjON5P5P1FVjt7zYb//3Xp//MPWZPYGvZCqBE3
V4ae1JdhwR6zc6tOSHLgqHZCz/4NFEzbJGW95TUd9l9V0CxM5v3N/xv+xf9O
I6v3WCmUoKbIUMGEaS3A+fdF7JV9MDfYTFpLIQ27onqqqsOzYUzE82AipR8U
xGrlfCQ6MNLr9cytq7hgO0vFkb68AxZFlAjaz+pAOf7XlxfpcyFk3oPa66s7
oKZtgP3kazsGD5WF3VrIBRmrG++UHnbAW41g840vieeJXvm6vRzwtTFhTNWn
QaAc7yhzYzv6tJhXj97hwEnVCcuuuj/XpU2L3fRGKc243Kz3s8BGJtQdETu5
fAYHLF6HKk7Z3IiJqjNfC3jSwdZhhsH+ZTyIGa+hpd2rQ9qC7WmXjakgm6Tp
FvumC+RjQhYLEnG/4/NVTw8pNsy13ShEkaRD8GBPWcEvGup/CILWBWw4/ij8
ofJ0OvyYe3ZWbi+hV0vTnwSIsGHWYP4r/6V0CPCbavfmMw0VXVi8RBoLNnBU
7pwJpEPesXIVXUJXfkjgucnF0KF3pcjB9HQO9FkKP6u/14yW9zTXZJR1wMrH
Qh8FHvPAdJC+08WPgTsfxtVdd2SAUEloSv5dBuxZuVPwRzAD53xdWBexjwGz
wp3Mna4wwF3kZ84DHwbuFV7s/NGeAZ/HO3Q1njBglcvPXf5W7Whk33+ncGE7
bBMdHNKp40LsncsRsbateOXoRufcua3Qe+ZRknZUJ2zSkExbat+Ib98K8/WN
NcC7dQYrTwV1Ayd1Iur8TyaeCnZ6VVFAhaDSwu+7ZVkgqWF9KlGAha6uUz5p
f6HCSI+8508hFgR12x3yPN+BLGqYOjW0EX71bUzrNuoERbHVUxfzteGu5/vT
vWsooJS9MyW4rgsu21vETHdg49RYqa92OvUwsjbBZp4zGxRqIxfFH+9AjcDq
aKkDVaBIvX9tV0EXXPztV8nPx+dH+lXG/cuvko/PeOi//Cr5+II9/ulXOeW3
XyUxzxPS7zHgt1/l2G+/Sn6+YG/Sr/Lev/wq+fj4av7Lr5J4rvRPv8ry376U
/HzOfz0/8i9fSmI9jP/ypSSe8/7Ll5KYP/m/fCmJ8ff/y5eSGM//T1/KP9Wx
z/32qyT2YSfpVyn426/Sf0ecVn4DAzfp1csFTilCp/C1GvJHOiGMMjEllzz3
a0Y2ybLFKN4+KdTry4PrJ9ak1LNYuM32wbYj3cWopGR9LDKVC08GPl2NvszG
Y5mCG+UulKDskO7yFWJcKDF4H/DmBxsXHozhC+ouwfnBznNU7nJA7tc2+vaV
HKRs9YgfUC7F0JuCXfy7OeCTl7VGmcrG6KF0UdPCEhSitBk65XLAWHtYb9yZ
jeoq1FWPjUsw35SWVbOS+L/ty4NGn7HQ1Ou1RVxYMR50s8/Io3Gh7mWFRPgb
JgYxrx1/FVWEeT8lPdxzeWC5icpne4KB2w51OozZF6KwbCxnKK8T1i2K3HaS
2Dcly1SZXbnvUXj2j+QKVhfY+tSvnLzDROP0WToyKXV4ROTI+3oLLrzgD3U/
v4WFFroTlZ5WFHz19bkJ+xIHpklXPhMiuO37eb/YLR8ouHD6HhXjH2xI6L02
a6MKwc+VWmx3kXqUm9ySpRHDBpeuVl9HWzaWx08V+KZdj3fvG72968KGgVhz
wSAHFkaqWO44LE/Bk/LZM+SjCP145v1XeWI9kgpJ2sUH6pASntmW4kSsR8ht
5MBjBh7hu3ZS4Egtqo+LzKy344Ey9aG20R46yk0Ig49KDZo8U7p5/1QnxK1U
mx1E6KzW74m3K4SqMObH1vurSrsgaN747Y2eTGQfUB9omkLFI/FubSksFqxU
3WX1GJnY/HQ4544vFduNudqNh1iwfUEeRYvgeXMPHYHwTCoWyxyv9FBiAZ/h
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
       "]], {
     Axes -> True, AxesLabel -> {$CellContext`u, $CellContext`v}, ImageSize -> 
      300, Method -> {}, 
      PlotRange -> {{-0.9999998571428571, 
       0.9999998571428571}, {-0.9999998571428571, 
       0.9999998571428571}, {-0.8414709076218442, 0.9999998003655539}}, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{
    0.721613420186339, -0.3451993589689399, 
    0.28587566276398246`}, {-0.3451993589689399, 0.5719527948785146, 
    0.3544858218273383}}, $CellContext`scale$$ = 0.5, $CellContext`tick$$ = 
    False, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Grid[{{
             Text["u = "], 
             Dynamic[
              Part[$CellContext`p$$, 1]]}, {
             Text["v = "], 
             Dynamic[
              Part[$CellContext`p$$, 2]]}}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]], Appearance -> "Vertical"]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.5}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {0.4, -1}}, 0}}, Typeset`size$$ = {
    400., {214.5, 221.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 
        0, $CellContext`p$$ = {0.4, -1}, $CellContext`plot$$ = 
        0, $CellContext`r$$ = 0, $CellContext`scale$$ = 
        0.5, $CellContext`tick$$ = False}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> "Quality", 
            AxesLabel -> {$CellContext`u, $CellContext`v}]; \
$CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fup$$/2), 
               Background -> LightRed], Green, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fvp$$/2), 
               Background -> LightRed], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 1]/2), Background -> LightRed], 
              Orange, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 2]/2), Background -> LightRed], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Grid[{{
              Text["u = "], 
              Dynamic[
               Part[$CellContext`p$$, 1]]}, {
              Text["v = "], 
              Dynamic[
               Part[$CellContext`p$$, 2]]}}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]], Appearance -> "Vertical"]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {0.4, -1}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{666., {253., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}, 
   3.6029766202534933`*^9, 3.6029766993350167`*^9, 3.6029767626836405`*^9, 
   3.602976909645046*^9, 3.602976978832003*^9, 3.6029770387744317`*^9, 
   3.602977120111084*^9, 3.602979953312134*^9, 3.602979996398598*^9, {
   3.6029800268143377`*^9, 3.6029800892239075`*^9}, {3.6029802732474327`*^9, 
   3.6029802930755672`*^9}, 3.6029803470036516`*^9, 3.602980586694361*^9, 
   3.6029810202271576`*^9, 3.6029810539220853`*^9, 3.602981172303856*^9, 
   3.602981314177971*^9},
 CellID->29479170],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 
    0.8600000000000001, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1.54, $CellContext`fn$$ = 2, $CellContext`fp$$ = {0.365, -0.76, 
    0.42367981110711467`}, $CellContext`fup$$ = {
    1, 0, 0.9870200108166574}, $CellContext`fvp$$ = {
    0, 1, -0.6409175240344072}, $CellContext`p$$ = {
    0.365, -0.76}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1: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
yDLfQpb5FrLMt5Blvnk/rC/6Pt7W94xdTzxbGp3z+oVnjvhof3Rwf79lXRc7
D1l41Dzh4ZC0V44foJ/HetZ8bVrxr96e+S/cxwvHfvr/e/XtI22vv4s9WfoJ
+ruNfh05/bGcbX6+dvsvB0q7HnEgNLz30zWrJ2/23204q+UzVVUZTvs7Wr1w
sOviPaH+2p/rtmu30dvX7HLj6Kqwzznte3xRULvbEewri7z9uutOn1hVtds5
7XvNrnv2hGEV9rvfevtJy4fPqAq7nNN+2+TlHSbU/Mn6KfT2fykY9k5VVaVz
2nd9dOmlE4ZtN17g7XfnNP2gKlQ6p/2z5x3uMqEm8XmNGnr+aO2DtrffDfq7
Zn/IMq5Q/biKQhbdgupm+ocszyXoc7HnG7I896DP3eaPt28wePSgqvCLc51X
zDc/H3zpoVsL/7rH5xW87aI6DxS23OnzB375wvsPjFnpOjg/sKrGcWN7bPP5
AH/qq89OGbtysz93eOmkj88d22OTP1/4OdfvuWDsymJ/vnruyfPV9jxf7Z/n
WL09RUHt57noeNFf9UFn1ROdOad7PLfO6oGP7nSd4VXLOxVW9P/JdYavP2ZM
ScWuLa4z/OVzWhyq6O/jcn5J3g8nFpesd53htbeualNcssZ1hg/t2vGS4pJV
rrOee6Kztkdn7R+dq7enKKj96KzjRWfVB51VT3TmnO7F0rten3bbDtcZ/nKX
kQunFW91neEPDi9fPe22Ta4z/A9xHFjkOsP7xO/dt64z/Kb4fV/mOsP/GPuZ
L1xnPfdEZ22Pzto/OldvT1FQ+9FZx4vOqg86q57ozDlds2crXi5oVuY6w0/b
euIHBRM2u87wQ1eUjhuY+4PrDO8b78dXuc7wX+PnvtR19vPKeP585DrDa8Xz
cL7rrOee6Kzt0Vn7R+fq7SkKaj8663jRWfVBZ9UTnf28r9v051s33+46w2fM
XvZ26+n+Hjk/ZkXP52/pttZ1hid5mBWuM/zU2J5PXGf4nfG45rrOfk4a6zPJ
ddZzT3TW9uis/aNz9fYUBbUfnXW86Kz6oLPqic6c0zW/aMRzVUO2uc7wVuPn
zayq2ug6w5N1eY3rnD7v8/dU+lnsOqfbv+s6p/kI1xk+5YtdG/ff3C0XnbU9
Omv/6Fy9PUXSfpnrrONFZ9UHnVVPdPbzPpnP8Jkyn+HHynyGD5L5DD9d5jP8
bpnP8HEyn/XcE521PTpr/+hcvT1FQe1HZx0vOqs+6Kx6ojPndL8V/ww/Xfwz
/Ffxz/C/in+G11yR9s9+zij+GX6c+Gc990RnbY/O2j86V29PUVD70VnHi86q
DzqrnujMOd1IiTfgoyTegPeXeAPeTeINeF+JN+C3SbwB7y7xhp57orO2R2ft
H52rt6coqP3orONFZ9UHnVVPdOacTuNneI0V6fgZ/oPEz/BREj/Dfy/xM7yu
xM/wYRI/67knOmt7dNb+0bl6e4qC2o/OOl50Vn3QWfVEZz9/lP0gvIPsB+Fd
ZD8I/1X2g/DnZD8Ir5D9ILyV7Af13BOdtT06a//oXL09RUHtR2cdLzqrPuis
eqb9xt5wh+R54H0lnwO/XvI28NskPwMvlzwMvLvkW+AvSl5Fzz3TfiPTPu03
Mv2n/YbaUxTU/rTfyIw37Tcy+qT9RkZPdCbPRj5E8mmBvIrkzQL5GcmPBfI8
kgcL5IvQTc8x0Q2ezmsVOic/Jvko71/yTm6P5Jfcfskj+XjRJ7rs6r03j9gb
JXFaZh7WfuaKwqqqvVFe3Y/2dl281/X501eXvjX5wX3R89PGnpz7VCZPONbO
Exuf0ODnRYU7XZ8NN3TuWnbt/uj7bq1eKhlV6foMsnzURJlX2HNCbGdmXmHP
r+0v7DRhWJnrgz039X7m5v71KlwftQd9sKfTkl//T8ko92/ke6NkPdrv+gxt
ctcVF9fbFf0j9g8Zf/j5LX2abnxsV5TEvRl/2GDyrTuHl+2KmvQbta5ub7cn
unHbzZ+16LXb7h24/dHE3934+tKlu6M977zbpbDldn9Pt/W/bsCDF++Jjls0
tdWwsa5PdP78P1+d886e6PUHNj7Rv95W1zPX8k554g+x/5uvX32v9fSNrif2
F8Xz50fXE/tverS8Zr3eW11PtR89sZ/ni57Y/8nXj1YsKtzt7yn2//Tbe2rn
PpXR+cl1dVtdXK886jOgydxbvs6s7yfcVfO74WXldl5W7jpP2nlw2NKlOywv
us11bvv33a1z3qmwevgS1/l/jnyk/F9XVUa/29ppQMtBm1znmV36f3zt/Eo7
L3Pdop0v3D9+b4ud0Ulv9G6Ve1Rm3dmTJT823Ow/scOgBQNzv3Odc8z+5HzQ
47owxexP3vdi17md2I/O2P/Tqg3XtBxU6jpj/4B+g8+q17vSdcb+c+e27DWh
ZmbdOTp+j0rsnCITryb1AFuio+M4xNc7O0/ZGtU5oaJjj8ofXee5dm74c+zf
NrjOV3zQfPApT22Pvnx+8+WFLde6zqvyTmvet29p9MRr82vX671a8vYllrfP
xKW1zc7kfS90PbGzUfxe+74vYOcr8fv7nfjJbXavaoPreaXZeWaH8YNLckpc
T+zMa3XuvFptPM4Pd37WZOW/riqLttxaY07r5pl4qWH8fNdHLXYfubyif2af
lczDDdGqwddOuaWbP8doRvy8iqP9kzaX1Wrjz93PW5N6G48Dzc9sMj+zwnXb
a/miWbJvyjF7kvlW4Lq1N3uSupdPXbdZZk8yf5a7brlmT1OzB92+MHuus3mL
bol/+DF6cfYLLXtUbnHdEj+w2fLA5a5bm9ieZdGKOR3qju2RyQN0jH93RfRm
x8PNco/60XW7Ie5/ZfTJnJwuLQcVSZ52lZ07f+O6JfNktc3nz+X9XWrvb2Zf
387sSd67qa5brtmT6DDfdbvR7EnGu8R1G2T2XGD2oNtYsyeJw9fJurzG/TC6
JfNwbfT2hrKvFhWWum7LY/snRA+/NvbKCcMyearNMZ8d9Tn5+/H962XyJ/1j
e+ZGLzywaFGtNt+7bpV2Pp5n9RXp85rFpv/Hknd6MO/hS/eMuPuXtZ3QrdLs
SfoZKXnU2cbfc90GmT1nnFVycr3eH7lu+8WedLy9OLomjie/l/OvT6PT434y
+ZBEz889fkC3goQHOLr9PeknnGH9oFte8ruB30W3g4mdQXVLzvfnBsaV3g9S
V5+Zb/PMnl9iv/Sm6zbI7EnmzweuW67Zw3NJn6dk7EmfJ84NPPd0fmN2YJ6g
WzKuCYF5hW5rknkYZts8RLek3mBNYN6iW3Luvzowz9P7lFXhAnlPeybvURhh
75H4t6D+bbXZ82S8jvzbdZtn9iR6Rq6bvXcBP5A+n83Yg272Xgf8THp/tyLg
l9At8avLwjfmx9Bte+L3bP9e7rol4/3RxrvFdfsy8atB4gGvD2km64L57YDf
TsfVJWGirKfmh0MST37mupnftvrGQtfN1p3AuiPrQtB1YabZc8DWNXSzdSew
DqJbo2SdCi1t3US3vsk6G1hn0S157qXhYluX0c3W8cA6jm7zrB7mF4lPkjh/
q+WdPE6z/cuW0NjiivQ8/N/5HIsHwhlxntDzcgE7n7Q4Bz2xMx0XeXwSND6x
eCYQd6EndhKnoafFS4G4zs/pkjgwtLI4ED2T+VMZiBvR8/Ykzgw7LM5Ez+Q5
VljdbCautjhW5m1hZHFvIO4lrrY4ORAny/4l6P4F+5taHI7O2H+Pxe3ojP3n
p+J8j6uDxtXYL+sCcXtg34HO2M8+BZ0vSPY1odz2Neic+IE9YYntg9D5rWTf
FNbavgmdE/+w2/KomX3i8cm+LNyc2pcVRkk8tiv8YH4YnZ9I9n1hpe37ZN8d
dN9t+7LAvhKdsb+h7UPRGfv3pvatRUHtR2fsP8n2xeiM/efZPhqdsf9p23ej
8/2b2v7ctt2BcO6rn+TXeveQ62z1V+EV27+js+33A/t9yVcEzVdYPiGQT0C3
uZY/OSD5HOw5KbXfL6QeLLw955tPuy72vFz4wexZk37uQe1BN+wh34JudZJ8
SLjE8jOiT4Q+zBPyG/8ye+BHW17lkOVVmD8PWD9NbVyiQyQ6RP/X8jbp/XhB
uM/6aSz6nG32zDR7eO78biuzH07/51ieit9lX4Yfxs5dtk+fmvbbUS3bV+5P
7SsLwu3Wzylpfx6xr2F9hLe2/VQf20/RP/sd1lnsedj2uePT63JU3/Zrd6T2
awWhxPqpI+v19WZPF7GHfcRBi3/g7W3/0tj2L/wu+4snLI7CzgrbV76Vjrui
FrY/6p3aHxWE5dbPYInH3jd79og9xO3Et/DPbb9wke0X+F3i+YMWJ2Nnqe3j
Xk3H1dFrth/pnNqPFIS3rZ+fJN6+1+xpLfYQJ+el7CmMnrT4vH2qPefIEwL7
oPS+aV7eW+sLTlq68R7O66OPLP6vV/Df9hSEP3dP+rlE9lNndE/suVjsIS5t
lnq+hdFCi4drFvy3/gUR8Wo/e45uYvdkn7JA9CyyePu51PMtCMH6+Zvsl4PZ
c5rY087iwLtS70thdLPFn91T87nA4of1gTwGZh6yfcEcmZ9lFt82Sr0vBeFk
6+dhyYfkmj33yvtLHEXeid99jPub8v72sziwecpvFIR61s9RHZJ+8M+LEz8W
zk35scIIf16jw3/74cKoha0j76f8dkG0yPppZP42bedeszOTNza/Gpqm/HBB
wJ6TJN9e1+ypafbgh/ndFma/+O2gflvPX+RcxutUsV+/1yTnJlGWcxOvK6Yf
vdeADuTZkrrQzD5d7zXwu9qefrincGN8bvWu+PnMvQb60fb0wz2FZB0Z7f3o
vQb60fb0wz2Fe6UfvddAP9qefrincIeMS+810I+2px/2rRWis95roJ9s7fVe
Q3q9y5yXpdeLzPka9xw5V6L+OWlf5px5yP1HOHW83H+Ec27O/Uc4dZLcf4Q3
tboR7n3AqUNLRjsuL30et83vfcCp8+H+I5y6Qe4/wkeYPdx/VPu5/whva+Pl
/qPqhp6cH1F/jp5wzhnRE069NHrCqe9FTzj1qOgJP9Xqc9ATTr0feqbP6Ta6
nnDqqdATTn0mesJfMXvQE059BXrC29t40TOLbkF1Q2fOudL3Ncqcc86LznDq
1dEZTn01OsOpB0ZnOPWr6Ayn3hKd0+dxa1xnOPVs6Aw/bP2jM/xvZg86w6lv
QWf4FTZedIZfl9YtqG7ozHpxk9UhoDOcc3Z0hnNfAJ3h1LejM7yL1UehM/wO
q09DZ/jDVh+InvBHjKMnnDpk9IT/0X4XPdVO9IQftHGhJ7xXWp+g+qDnEjsn
2pqq9yhzTj0DesKHWx0OesLzrA4KPeG3Wx0aesIPWp02esKbWR0m8xbewupg
0Rl+irVHZzh14OgMv8PsQWc49yDQGf4PGy86w9P3jMqC6obO7LOuSdXzlDm/
ztZHdIZvtzoodIYfbXVo6Ay/3uoA0Rn+gtVhojP8VquDRWf4DqtDRmd4H2uP
zvCXrX90hvcye9AZXsfsR2d4mY0XneHpe2dlQXVD59m2f3wmVe9U5px4A53h
3EtCZ/gQqwNEZ/jVVoeJzvCqLUkdLDq7Pam65XF58GKrA0dn+Ehrj87wOlZn
i87wbmYPOsOfMPvRGd7CxovO8OfSugXVLf2dsXz/zhh8ke2XnxX9aa/f16K9
Phfac48MTnt9XrSn3gNO+yfkOdKeez1w2l8jz5f2fPcMTvujt6afO+2r/x5a
ft63r1cNX3ruPfI9tPws30PL9++hwfnd42Q+0J5zJTjtr5V5QnvOTeC0f1Lm
D+31O42013lFe763Bqe9zrcs8yToPGG+FVj+pJv4VfhfxK/CS8WvwuuKX4Xf
In4VPsr8Hs8FPk78Ifx28Yfw34g/hP8k/jDLeIOOF30K7Xxwu6zv8MmyvsP/
Ies7/PeyvsP7yvoOp84ffeC1V6TXZXg/WZfhl8m6DH9G1mV4qazLOl70Yd96
i8ST8PUST8IPSjwJHyXxJLybxJPwv0o8CX9M4kn4YIkn4fdIPAn/s8ST8NES
T8J/kXgS3lviSdUHPadxzij7IPiRsg+CXyn7IHix7IPgA2QfBK95ZXofBD9B
9kHwk2QfBM+RfRC81pXpfRD8IdkHwTfJPgjeRfZBWXQLqhs6f2nncX1lXw9v
JPt6eAfZ18NrrUjv6+FjZV8PP0v29fB/yb4efr7s6+HvyL4efo7s6+HjZF8P
P0r29fALZV8Pv0v29aobOpN3vdPyKugJby95J/hQyTvBR0neCX665J3gsyTv
BP+d5J3gb0veCX6G5J3goyXvBH9C8k46XvSE903n65znWL7uwhtmjKlzzmbP
p1GnfcN70VNjOhY757y+suE727u8vMY59RJtP1332R1zlzunnnP7jsbXHPH+
YufUKz774/LHb/j7V54foz7qySh3Y/3XVjsPVv9z6bG/OXLPwB+cU98y5Hf3
N7z33Ez+jXrd3t9ef+YPTTL5N+ql8waH9n+uXea8peXb28X2F2fybFa3kHwH
5nvn1I2UxuNa4Zz6nBvj5/Kx8zes3unL0VW9Bry5yvNU1Hk+E+uw3jn1OZOb
XLv89dmbnFNnMizWZ4tz6sP5Lko677ff+FrPO9W2ephJcf/fOKee9rPYzk+d
f2x1XDl2/g6nXmXFh2MOLhi6zvlZVkf02ZHtX1zWepPzcquHmTar2ZuX/naL
c87xn7r2qPfm/KbUOfUGJ1q9Qfo8YkPoGeu80nkTq6fqYN/ngbe2+rSTrU7A
8zPWz0/xc9zonPqWwliHEufU7fM9KHgjqzdoYPUP6XzIinC81SHArzfdKoZu
Onnq6SXOuS/wdfPCVic22O78ZqujOMHqFthfr7d6lV3x+7jN+WGrQ2hs50fs
E3PsfCrHzo+I2xsY72B+AL7c6l6uNz8Az7G6owrzA/CDdt53gfkBeD87N9xi
fgDe1849z7DzC3hDO899wfwD/Hk7Px1u/gF+gp1XXmb+AX62nScONf8Apw7q
VvMP8Detbudi8w9w6lKOtzoZ4vm1pn9b8xvwe6xea7r5DTj19tvMb8D72vnp
9eY34KfY+W8zO6eDH2Xn0UvNn8B72Pnvc+ZP4E9bHd0U8yfwe63u60nzJ/AG
Vqf0P+ZP4O/Y+elxVhdE3E4d+63mZ+DUB040PwN/yOotPzE/A3/Z6lcbmZ+B
X2Dv0TfmZ+BfWx3g5+Zn4G2tbm26+Rk4dVb4GTj3bvAzxM+HxM/Am4mfgbcV
PwOvEj8Dv1v8DPxP4mfgjcXPEH/iT6bE7b9wfpTVDzcw/wNvYu87/gfezOY5
/gc+wuqmcuzckHhsg81//BK8jdWh4ZfgweqsbP2NdP2tb+ePen8tL/5+2ghf
r6mvrkj8iXPqh/F7Hoek6gQy6z7nlZNNN/xtDatz/tLmJ/x5m59d4/kwx/mr
Vk+exG/TnZ9idew9Eu7+/FTjSbw6x/kE62d58rvOuR+RxCFfOK9pdja054L/
L7d6oZvMn8BzzJ+0ju2Z57yF1eHsjePMN51faHUyZ8f6v+nrS0fjSZw5z3kr
6+e25Hedn2S/W2r+n/XoVvP/x9pzT+dd37R4e4TzNlbP083mA/x845U2H+DU
5+yVvN9Uy+M1pg7E/HwtW3eG/afP3bdVTPF8YPecoS12LR2QW8d+l/ZX2+8e
0TGdJ5xr/f9k9tD+frPnRHte+NUqe14d7bnAO5qeR5j+8MtN/16mM/ws09nm
ifvVY2ye9LR5C59q862zzU94c5ufNv+dj7J5yPvLPuK8VJ1khrO/IP6Hf2fv
Ke+71s98bs8dPtje91zTXzl+AL5G/AC8lfkB4n+1n/0dz2uMnAt4/FOQPheA
v2Ht6cfXWTnHgdcpSJ/jwB+09vSD/mfLuVt6fcycu/lztPboqf5zZ+KffZ/C
PeVi8wNw7rnk2vsO597QV8l64fsF6mx3JOuLc+7ztjE/Ced+zW3mD+HcG5pt
fg/OvRi+z0kcnmPr4xfJeur8D7aeJv5no5wXl/h3OOFtbB1P3q+VzrlXODyJ
H9zPs3+ZmsQbzist3liSxCfOz7P45OsknnG+xOKZaUm85H6eeKlPEl85J77i
u5r42xkWpz2RxHXOj7G4Ltn3bXLez+LAp5K40fnjFjcm+8FVzi+zOHNHEse6
n/+rxbHJ8/re+YkW93ZI4mTnD1qcjD/Bb1Pn3CuJz52Ps/j88SSed97E4vmL
k/jf+W8t/h+S7BecH237hQuTfYqvFw/aPmVPsq9xXtPqD3sm+yDnTW0f1DHZ
NznnnviJcr62z85NOsk53Wt2/tJTztdy7Rxnr5yjUY/dUc7LqIueYe87fukq
W6d+kXMrvheUJ+dTfN/moJxDzbbf7SXnTXw/5CI5V+J+RKX5GfzbL7Y/XWZ+
Bn6ZrWuXm5+Bd7Z1cKn5GfxbT9sXl5ufcW776DPNz+i61tf8DHyarYPvmJ+B
17d1Ez9DHN5I/Az8GvEz8LvEz8Dbi5+BnyZ+hjg81/Ih+Bk4+xf8DJz7R/gZ
+DmWn/mTxQPw7uZvr7J4AD7K/PPXFg/Al1peaIr5K/ghyyPhr+DHWt4Jf8W+
gO9F4K/g3PfBX8EfsjzYP8xfwX9vebPPzV/BX7Y8WxuLrzyPbetXM4uv4P1s
vett8RV8iuXxys3vwYss7/e2+T34MZYnbG9+D97J8oq3mH8jDtlh+Un8m+eT
LZ+Jf4NvI/9p/g1+ueVL8W/w8y0fu9v8G3yY5W/xb/B+lu/Fv8Gfs/zw8CQ/
43EF96yHGccfDrK8zUmW54HvsDj/GcvzwIda+11yvs99iqetf/zbcGtfLnE+
9xrOX7Bt0j9bP+bx/OkLJx4+9tk7c3+W833uFx8QP8n9WcaLDu/beMljwz+Q
e76+z737zFerQuY7MPAmdbpPrxqS+R4RnPN07lXB+59++KGqqsz3iODf7Tsw
tGoI9w0Lg3LuT1XfT1HQ3+X+lNrJ/als4/K6zfuX3lc1ZIePC176dO8nq6r8
u0bOHxly9qiqIVt8XPp9FeqT4SfG9myS+7baT1HQ32Vcaifj0u/SUIcPZ7yM
i7j0848LXq8astnH5fWTcq/T6zNj/df5uOCJnd/7uKrvpyjo7zIu/a4L44Iz
Xsbl8bnMQ6/PlPu/8Aap73YWOk/yoivdTu0HO+FLUrptdr7Nnhd2wnfJe0E8
fK7lCetLvr2HfGcD/rDNE/qH/83ei4aSb18r35eAr7b3q5Hk2xvK9xM8Xy3f
T4Azn3mP4GU2H3gu8CTvl/l+AjypI/3Ynwu8OOZz/L4AvHbq/lRh0PbMw+r7
LwpqD/qr/eip4/V7MVn0IQ5cJ99JgA9IvUdFzn+weYg+8PLYnsx3GuFHFKS/
e1B9+6Kg/TNetYfxqv2MF77G5k99yavrdwzgjVPfj/3WeWub/w0lf95avj+g
/WC//i72wwfK+wIfkF5HPO49LH7D89jiN+AbxG9oP9gJ/0L8BrxM/AZ8j/gN
4tIbxD/DB4l/hu+0+Vxf8uqNxd/CO4m/hZ+c8reZvHqxrHfwZqn1LpNvby3r
FPw8W6fwP7p+1bA/vd+Bf9B1ln50veA91fWF/vVeA/3resf7qOsjv1u9/98c
6XrBe6TrC/3rOsX7ousav5tlXYh0HeF3dd3hvYAfn35/g65fzH9tjz267mCP
rlPY4/kW8ZPwIvGT8C3m97BTOXZqP7wX+rvYr+sj9nv+R9ZB+HZZB+HXyToI
/17WwTTPrIPwcrnXrO3Rofr+i4Lagw5qP++vjjf9HfX8LN9Rz8/yHfX8LN9R
z8/yHfX8LN9Rz8/yHfX8LN9Rz887c+Ujv2/X6E75jnp+lu+o52f5jrraUyTt
9Tvq+Vm+o56f5Tvq+f/rO+q6/sJ1XUP/LOtgVP36sjnS9YjnpesX+ug6iD66
bvK7uo7wu7ru8Lu6TjFP4IVmD09W6zB5vroOYr+um9hf/TpbFPR3GZeuX4xL
17v0d592hVzZb8J3yH4TPtieI+PVekjGq+sv49X1mvFq/4xX7WE+q/2M18+n
ZH8Nbyr7Nfg+iXPggyRvAF8veQPljKv6foqC/i7jUjt5T3Vc6K/3dvE/Wg/A
e63f3aU963gP88M8x+p5oa/L6XWtIHO+k15HQvXtM+fv6e91FGTW6/S6E+m6
gw56zkj/uk+hvZ4nMl74j6nfLXQ/Vmn204+eJ9IPfKPooP0wLvzVjaK/cn5X
62bpR8+Fee76/Qf60XuI/K4+R9rrfTra6/Oivd4Lw87q99EFUfX6F0Sq5/8D
pad9cw==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
nXesxe8a7K/AG5LXw2Z4Y/I6qRe9dnQ2p999TXIuqvWqdar1pXtVN5BWVT61
KfpsrnZ0LFSOo7xrex0w8zxQTqU8Tc/zseS8V3m+4tBfxXfR34fofZVfvJC8
xnSmk5ect+pzKkeTptY5iM4/lCvpWak+LF0sbfBi8hrefq6SO0ZJl2pdak0q
t1Fckl5W7Wt0dGzXucZKPetijSivl8bXWfb86PxXf9ehvVD7oPL6ddHnpzor
nx2dCytf0Xn9kMz1z2HR+7XyxCeiz1il61UD0R6hc5Dl0TVenVncH12/1dnH
vdH1W+WST8IzMp+zL4iufanO8Gz0etc5yJLomrbOLZRvK8/SvvZwcr1Yeazq
+NIGqmlPij7319pUji0tIb2vc2TtL1tz1zy1h6huqjMv5Sk6w11X5CmKn3rt
w2K962xFcUbnK6pZKI9TjeuZ6HNVnQdpX9Geohr7ZPrDFbuS/7ZE76mcfWP0
2avOsttEawPl3Zujz/70Nwn6u4ehmXPbLdHnX/rbhunRNXnF+U7RtQ7l2q9E
nyHqLEf1jsFwGc3t4DMg1QQ2RJ9h6e8oZkSfFyje6gxIMfZ/qaWCZg==
            "]], 
           Polygon[CompressedData["
1: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
fCc8F7wAfAh8BzyL9VMNDd8Iz+t6hw+H74ZnhufU08I3wPPAC8GHwXf1oj3m
hw9uokHMquarqadq11nhudXs8E29aK8b4JWaaDC9yD01XldPone4o8Z76CH0
5uvUeAc9ul5AT2BvMaObzXpek9Xd3Es2tnZNlmdGdhB8f403dT2qM8Yq8Rbq
DXXcKG209LTd/DJzcv3uXrK+zURc71uVrG89mvVgy5L6YcblfF23pD6Yibm+
1ympJ2raJeDVSuqJGk9tN6wky9SzjswqSrIzMzSzz4VLslkzWrOWpUqySDNJ
s5YlS7InMwKzgQVKsjMzNLPEBUuyNjM3s8iFSrJHM0iz20VK1pcZ7MgssuT6
mTFaby8t0X/+ffXH/CXzz0zB+bhRyfzTwzt/NyyZf3p45/cGJetPTa23XatE
z6jhXW/LlawvPYTrY/2SemMma/2/rGS+qNmdD+uV6FUzD/XTbCV61UxEvTlf
ib7S89pvFivRq3pc+9uinf7zelsfFi/Rw2Yi6sHZS+qBv4/rd+2SemRmbZa5
Qkn9NiM3uxxakk37ffQiy8MXtFlTriXXzCVt5qhz0zXgelGz6zX3K1kvZrx6
zX1L6qWZk689FL6ozRpy7bhGrZd6RP3rEYxf3WZNu5Zdg9ZXPaWvPYTxG9us
adeya/b6NmvYtWtNuLlNT7QXuubtx2aWfvaDS/qpmab96yD42jY1xVpiDbG/
mtHZn84q6cdmjPanM0v6tR7YfnJGSf8wE7T+n1TSP8wM7f8nlvQPMzr79wnw
OW1qkLXHz3Bem55qL923ST9zD8LPfmxJv3QPwu96TEl/1BN7bY4s6W96YD/7
USX996XOW11Q0g/NRO1n53d+Rg9q/1i2pD+7p2F/O69En+ix7V+nlfRnPbXX
9ugSPWOmaX8+HX5MDWcd4fOP0vkPMyH91Qwl/ct6YX1fFf6R42vsAb3k7f4W
J3Xf3+uh77EOWg/1P7cwfmI/vdEeeZO1zZ7YS35unn9tP9pfD3AdfBx8tb0L
/gG+Gv4Bvh/+Hr4K/h6+z38DvgH+DX4C/hW+Hv4Vfhz+Bb4O/gV+DP4OvhL+
Dr4X/ha+Av4WvgceAZ8Bj+hlf+R3+Eb4917y3Uv9beFL7MXwhV5b+CJ7N/yg
19Zr3kve7tw5pR/t5xzSZz7U67xCL975L22yFz20vtw8xexEf+5ve3o/2sXf
+GLnEnyxvQt+3rkOP9tLfnwDfDx8jdoW/rvasp8cSo/0K3wUfHkv+dY1zn34
KnhPv29N/uQeyB5e35r8yT0Z84xnXUvwM/CZfh+1C1z53Z+HK3wr3C/Zn9Hv
39aPd9XD6v/cA1TfXVfiV80oB8IDO//oHpH+0z1D/a9zxLnxSEnWb+Y/BJ67
xJ+656U+vbYkazczHmRtK+nXZurq88tL/KZ7Rvbjf5b4ATNl9coqnf8wU1av
rFzil90jsd/fVuKP3ZNSf95a4r/dA9Af31Oi58wY1f9XwB9xfCHnPuplf+xD
+AL4Q/gG+AN/+372XK6Hv4Ivg7/sZf/Ov315P97bf+MYtUQ/Xl/P/2dNvlf0
mnBRm8At/Bz8trUB/hevvxJ+x1oCv93L/qfX7tx+tL3X8C34LPgt+Iom1+qi
frSL1+wLryX8OXx7k3zBTFw9uhL/5mf2Ss59xvhtnHsfPg9+v5d8yF5+Zj/e
yZ7+pdcK/gK+o4l+PqyN/nJvybzm1pp+beZ7f9fv9UMfl/jn0Wr8qHuO+vnR
a/yfe25maWZq+tlPS7y6nt18zJxM7ayGdq/EPTb3S8wczRLMbPX/Y9T4T/fc
TuJ4FB6z9JLhH1GTwanVzED1/6PW+G0zfb2+nt980oztyJoMzrVtRmrvNKPT
69tD9fp6fvNoc2mzBjMH80hzSbMNMw7zaXPqieFhPE/Le+fp5v/kNXrMPSf1
2FQ1esC8Rr01CF64yZ6v+mzqGv3gHqf51BQ1+s49NNfblPDcTfbY9N9j1eQP
7nFaXy7n35+qlzxc7WCGaHaohjB7MYNxfPo2WuNUHgN70Rz69zFr8gsz+5G1
lte9Dj/V6c9pavSge7jn2ys5dyHHOzapZUfyuKyXmjZybbXpDTeVbu216R03
l26ttan9N5bMPeegveLO0s31Nr3tlpK57py3d9xRsjZdo/aau0rXW+AR8OOl
6y3wM/D9JWvXNWzvuLt0vbNNrXyodL0KfhV+onS9sE3tfLh0awl+FL69pJfY
U6z1x5f0GnuOtfi4Ev/mnqC9afsSv+acdi5/VeL/3KOxV21b0rvt4faq4aXr
pfBr8JMl/tA9HHvNdiV+yD0Vr/02JfmJezRmu1uX+Bv9ir19txK/756cvWjX
kjzAPTJ7+y4lfss9IHuPN4roV/Uz+qMtSnqXc8y59WPnHwbW6F/37M2PJnM9
NrkHxHxp0ho/4T0bZt0v1qxNe6t7Dy/VrD33IMzOX6jJvvVeztV5u3/POWsW
/ij8c5NM/JQ2fti9HjN+9/+Or8mW3mySbZ9YUxvMuF2r+nH3glyzBo3uyZgF
vgUebT+u0V6j9rK3fWyNF3TfyXrvnrd73e65X9FmT8i15Rpzb2Tvmr03s9Ar
2+whubZcY8O6GrFdL2t4/5o16Vr0Oy3H89jw+r3UkK3sZfYDtTC8O3xPP3tO
1ty72uTbv5dkKAfX1FRr6e9NarM12j2oTZvUvpV4qHWsge5FPFuzf2TW6V7G
MzXvNZu1Ni9Zox2t0c4l55ReWQ9sbTRf8V4Da6S90GvktRmnzf639dwsZNQm
e6Xn1GTH7hP6Xf3O1vvpSvLTATX+1HuQzBsnqrkW3pNjlmmm6X6N+zbmnxPU
5Pfec2PeOGGNHvEeGfPW8Wv0h3vWu9b0H7Nk9+TMZyep8dPek2OeO3GNH/ae
G/PZcWvyUO+JMV8dpyYv9R4R89Sxa/Jd7zkxuzXDdX/JfaaR2riNFniA77dt
zZ6XWa57hu59bVezF2/Wq1ZTs70Lv1CiHdQQbzuXS3rPHjX3BtiDvH9lbs59
0GSPWm2nxnuP4xdLtKCa8B34+ZL7U9yzdq/aPWOzWveg3Xs2s/Wz71CzNz+g
69e71ez9T9PNpV1qrp1zyt9ip5rs399ka47Hq9kr+LTJXN2m5rs6Z0d6hzZa
6EG/T80emtm/c9De8UuNNraHqH1dP2pdNbDa1/WmVlYDW4/+V1Nf1dT67elq
8hPzOrXWGzXaSc2lV3ikpn7qGdRWr9szm2gstfzDNfVYTe9e2QPw9k32zPRK
T9bUTz2T2v6Jmvqpxle7vVWj5dRweqfHa+qpHkpv8lBNvdaj2DsfrKnX9lC1
/2M1Wl8PoNcYUdNf9Bxjt6lPj8A/99K/Pqvppz92/fadGu2qprW/vl2j9dS0
I7VfG291Q9eP363RvmpiteibNdpUTTrSi7W5l+K+rp9+XPN+PZvz+5Oa/q0H
9Pf9tKbf6xHtx1/U9Es9n/31y5r+rSe0v35e09/1nPa7r2r6/29dPfmjpl//
0emRr2v6vR5wwq7e+/l6nV54r0bbq5H1jq/W7MXrIfVmr9T0Zz2a89OauiT8
Xkm/cP3ojQa0+fv2CHuDexf2A+u/Wn+8NnuT9hx7jdmhe2XewzJ2kz0za7c1
3Fr/r5K9M2uitdA9NOuh69H9xUlL+od6dzP4m5J+p34bDu9T8vv/zOOVJlmB
e2/eQ2Qe7R6c95p4z8kyTe59tB58X6Nf9HzWG+uPveT9Eu3/Wo23frXrB+pf
/e7hJb3FHmN++lunb55j/Mgmnlq98nRN1mLmYLbwVI3eMGNQHz1fo2f03HrV
l+EzmnhWvZL9V31Wunr3TU29bLv69W1NvdDTqg/U9/rzk0vq5Xc1+k2P696x
e+L2wrbrZ9YX89vDSvTH2d18OKXk3gXvYXDvb4xOj5jXeD1OLbmXw3s6XE8X
dfrz/Rovpedyb9H7B71HiP9G6suParziV1090NPJ15TktdPWXP+9u/lpxuH6
u7h0Xq/N37+yZL6aKbgezympB2YQ1pdzu99PD+d8v6Qk/x1SM5+9J9X8eHBN
vrxXVw/1oHrFq0p+DzME6+PZnf7+oGZcD6i+/rB2XrAX/ftv+NYmntJ6oYd1
/Gre/38Ix3iX
            "]], 
           Polygon[CompressedData["
1:eJwt12eYFUUWANA3w4y75oCIqyJmVJJLcpWMgJJVcpYsGQVxWRTJgkQDYiAo
UQEByTlnFlEUAQkigqhgAHRBFN1zv34/7lf3nroz7013VXXPrS27Pt4lM5VK
bRXZ4okcqdSUrFSqDHw6I5UqzXax2mwC+5iNY5+yOmwi+4SNZ9+yJmwh+5bN
Z2vYI2w4W8FeZM3ZVFaWdWdl2AtsHmvCXmXN4jOMl/Is4yXGXca3jf/U111f
f1/4LfV3oilbxL7Ts8DPdmOzWC02kNVix1ljtoAdZ/NYT/YBq8OGsbqsBZvG
yrEerCxrJh8rf12ckJ9iW/TV0DdGvZm/wuqzSex+1pEVZw3YZPYv1omVYM+y
2awuG87qscfkQ+IaiaPyH9hIfcv0tVdP4p3Zi2wRa8XGsbZsEFvAWrC3WGvW
l81nTdlrrDkbzhaztmwi68A2GC/iGcZs43rj88Y5+hrqG61urK+D8aD6e/kB
Y3v1c/rm6mukflndxFx+92U8HyfWpO/V6/JV8m7ymfqe0TeWrWZPsVmsJ3uT
3ceeZhNYezaCLWVPsndZJ9aHfcgas1dYU7ab7WGT2TE2hw1jS1g79g7ryLqw
91l11o9VZxXlveT/FofSf+MYfSv1dVXP4D3Ya2wFi03zPuvORrHlrAObzLqw
wWwha8neZm1YZzaD1Yi1y2qw5ewh9iLLlPeP+2Gswkax1fqGscKu6eRYW2KD
uWfN/RJrSn1R7BX1Z6KQvnfZO3EfzfeM/Sl/XD5evjP2kP5+6gpipHwdu2Cu
qJ+dEddGbDLXm52VN5dviFzfOv0D1DvEYLaRjWIV4n6zW1gdlpcV9Psm8gli
nblnzD0a301+n7y1vsKx7tlEVpi1YoXYNHaenWX55Dfzw8aGbBb7Uj1TX3Gf
MTv2sNhi7vlYr/Jf5T/KfxJd9ZXQNzfWtNhqrg//r/wx+Zvy7bG39Z3NSu5x
3NfOcY3FFbGeeT55Y32NxCPxd7G7WRP1XfqL6ZvFZ4rN5p4zt0i+Xd5XvlLf
EH3365sX61dsM/eCuUGxHrOSczTO0yxzH4lP2Vvm97Np5nawz9jb7ACbzj5j
n7NJ7CibHfc0fp6NiL+TjWXvyI/IvxKXpc/Vl/WMFtep/2Z+l75t8lpsrHqr
ntfi+cBqstfZFvYqa8feYw+z51hl1ijuFXuANWP3sE2sGnuZrWUjWFs2nVVm
vVkltpFVje/D1rDhrGtcT1aTDWA12QX2J7vSeJXYy7YbH2Vv6Numbww7x55g
G9k5tp6VYpexG9k+cQnbyXazceqD+t6LfR5nuOjF7jF/C19r3Bl7hu1Qv6Fv
unv5DVvJfman4vxWfyJejT2pnqCvQHby7Irn1VpzPaJf3ky+ItapvuX6/lJn
iANxr3kuPUPUu2Jdqnfrm5hK9njR9J4amJ3s98YiL3uQNdd3r76j7Es2L9Yy
W8XKsCtYHlY91gL7hX3P1rEs8RE7zb5la+JsinXESrPL2U3qqvF8TiVn0CXs
elY+IzmPyrIr2c2sJrs8zlh2DbuNlWE5WSWWk93OyrFrWbm4ryxvnBfsCpY7
zjVWIjN5DsWz5359F7PcrGxG8v5yiO1nM+P5yZaw2iYOsDmZyf2J+7REX1nW
n82N51g802Itsffi/GcL2dfsEPuQnWEr2WJWhvVjc1hvtp/tY++zE2wRO8WO
s9UsI84YdoQdZHPVp/WtYL+rp8e9U99tPBfr0PgFnyE/yRfr6yifJp8qTst/
jXNN399j/6pLx7kRZ2LsZUkuVpIpU1nqM7EuWc44P9kqE5XZS+pl+gaxP+Lv
T6/3WPfn4xlkfJgPky/ng/WtZJXYULaUDWQLWOn0eTbaNZ+fIznnSqXP21HZ
yZkXZ+QD6efL8OzkvIwz/MH0mTkiOznP47wumT7TR2YnZ/cKUZENYUt87gCf
u4yVZwPZPNYn3v/iuS2Os8Hs8bjO+n5kW9ml4nP2KzvB1quz4/nIlrJybID6
w3gXYv+L/czzxFlvPGPuN+NJvll+cez1VPK8K5Le3wOyk2ffGfEdW8tyxNkR
15n9xLapLxN7Usm+/1l8pL4qMzkDMtWnxE711bEuWA71afGx+hpxiJ33+35g
W+JMi3OCHWOH2fxYK773avYVa8Q+YIfZLDbE9xyanay731LJM/cLfQ1iXUYe
a473YvlZPdaHVWH/YQVYffYCq8rasDvZQ+xJVoz1ZgVZA9aXVWM/smNsObvA
trB9rD6bFuczmxLv3uw2Vpq1ZAXZXlaPTWV72WTWmt0R7zWsHSvKWrHbWXnW
lhVhddlNrChrwO5gNdj1rACrxW5i1dh17F5Wjd3AqrPcLD+rwW5kNdk/WEH2
GMvDXmKFWZtY9/HOwGqxG1ghVpvdzIayQqx1rHHWMK6f+uqsZD769pt7In3+
Fc9M3j/iPaSTuqOoGPdBfcxcHb/vRlZEXp/dbq5erFtWjDVkd7Kn2b3sUdaT
VWALjX/FvZD/aVyQkbxzFstK3iMHZSfvnyfEV2xxrBc9G/RXZteyO1gFlot9
z46wJew828h+YEfZMvYH28xOsq/ZUvY728SmsuJZyXvuYJ87JdZj+lm7KjM2
hu+q92Gei92prqi+zlST9PvaXaxy9MS10ncPq8aeUpeK/wPUnbOSd494B/nG
XHt9d7FH5F3YA+aasltZKdaCFWA91N1F7biH7KS5JnFuspJxv1h+cx1YPlaF
dWUPsj2sLpsS+55NirOd3c2qsm6sJBuffm7Nzkze2eLd7Ul1O3GYPat+SN//
AX0rE9E=
            "]], 
           
           Polygon[{{1138, 1137, 745, 391, 392, 746}, {1122, 1179, 537, 327, 
            326, 727}, {1148, 1221, 632, 437, 436, 761}, {1158, 1232, 658, 
            467, 466, 775}, {938, 1080, 634, 763, 1277, 937}, {1130, 1129, 
            738, 376, 377, 739}, {1144, 1143, 752, 406, 407, 753}, {1154, 
            1228, 645, 452, 451, 768}, {1273, 933, 932, 1272, 757, 758}, {
            1165, 1164, 785, 511, 512, 
            786}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{315, 533, 1280, 316, 545, 341, 1375, 560, 356, 1380, 575, 371, 
          1385, 589, 386, 1391, 602, 401, 1399, 615, 416, 1411, 628, 1324, 
          431, 641, 1336, 446, 1427, 654, 461, 1429, 667, 476, 1434, 681, 491,
           1443, 696, 506, 1453, 711, 521}], 
         Line[{317, 534, 1281, 318, 546, 1290, 342, 561, 357, 1381, 576, 372, 
          1386, 590, 387, 1392, 603, 402, 1400, 616, 417, 1412, 629, 1325, 
          432, 642, 1337, 447, 655, 1346, 462, 1430, 668, 477, 1435, 682, 492,
           1444, 697, 507, 1454, 712, 522}], 
         Line[{319, 535, 1282, 320, 547, 1291, 343, 562, 1300, 358, 577, 1309,
           373, 1387, 591, 388, 1393, 604, 403, 1401, 617, 418, 1413, 630, 
          1326, 433, 643, 1338, 448, 656, 1347, 463, 669, 1354, 478, 1436, 
          683, 493, 1445, 698, 508, 1455, 713, 523}], 
         Line[{321, 536, 1283, 322, 548, 1292, 344, 563, 1301, 359, 578, 1310,
           374, 592, 1316, 389, 1394, 605, 404, 1402, 618, 419, 1414, 631, 
          1327, 434, 644, 1339, 449, 657, 1348, 464, 670, 1355, 479, 684, 
          1361, 494, 1446, 699, 509, 1456, 714, 524}], 
         Line[{323, 723, 724, 1284, 324, 549, 1293, 345, 564, 1302, 360, 579, 
          1311, 375, 736, 1468, 737, 390, 743, 1471, 744, 405, 1403, 750, 751,
           420, 1415, 757, 758, 1328, 435, 764, 1475, 765, 450, 771, 1478, 
          772, 465, 671, 1356, 480, 685, 1362, 495, 700, 1367, 510, 1457, 783,
           784, 817}], 
         Line[{325, 725, 1464, 727, 326, 550, 1294, 346, 565, 1303, 361, 732, 
          1466, 734, 376, 738, 1469, 798, 740, 391, 745, 1472, 801, 747, 406, 
          752, 1473, 804, 754, 421, 1416, 759, 807, 1492, 761, 436, 766, 810, 
          1493, 768, 451, 773, 813, 1494, 775, 466, 778, 1482, 780, 481, 686, 
          1363, 496, 701, 1368, 511, 785, 1485, 787, 818}], 
         Line[{330, 540, 1286, 331, 554, 1295, 350, 569, 1304, 365, 1383, 583,
           380, 1388, 596, 395, 1395, 609, 410, 1406, 622, 425, 1420, 635, 
          1331, 440, 648, 1341, 455, 661, 1349, 470, 1432, 675, 485, 1440, 
          690, 500, 1450, 705, 515, 1459, 718, 528}], 
         Line[{332, 541, 1287, 333, 555, 1296, 351, 570, 1305, 366, 584, 1312,
           381, 1389, 597, 396, 1396, 610, 411, 1407, 623, 426, 1421, 636, 
          1332, 441, 649, 1342, 456, 662, 1350, 471, 676, 1357, 486, 1441, 
          691, 501, 1451, 706, 516, 1460, 719, 529}], 
         Line[{334, 542, 1288, 335, 556, 1297, 352, 571, 1306, 367, 585, 1313,
           382, 598, 1317, 397, 1397, 611, 412, 1408, 624, 427, 1422, 637, 
          1333, 442, 650, 1343, 457, 663, 1351, 472, 677, 1358, 487, 692, 
          1364, 502, 1452, 707, 517, 1461, 720, 530}], 
         Line[{336, 543, 1289, 337, 557, 1298, 353, 572, 1307, 368, 586, 1314,
           383, 599, 1318, 398, 612, 1320, 413, 1409, 625, 428, 1423, 638, 
          1334, 443, 651, 1344, 458, 664, 1352, 473, 678, 1359, 488, 693, 
          1365, 503, 708, 1369, 518, 1462, 721, 531}], 
         Line[{338, 730, 1465, 731, 339, 558, 1299, 354, 573, 1308, 369, 587, 
          1315, 384, 600, 1319, 399, 613, 1321, 414, 626, 1322, 429, 1424, 
          639, 1335, 444, 652, 1345, 459, 665, 1353, 474, 679, 1360, 489, 694,
           1366, 504, 709, 1370, 519, 790, 1486, 791, 792}], 
         Line[{520, 710, 782, 505, 695, 1442, 490, 680, 1433, 475, 666, 1428, 
          460, 653, 1426, 445, 640, 1425, 430, 1323, 627, 1410, 415, 614, 
          1398, 400, 601, 1390, 385, 588, 1384, 370, 574, 1379, 355, 559, 
          1374, 340, 544, 1371, 314, 532, 722, 793}], 
         Line[{525, 715, 1484, 786, 512, 702, 1447, 497, 687, 1437, 482, 672, 
          816, 779, 467, 658, 1479, 814, 774, 452, 645, 1476, 811, 767, 437, 
          632, 1474, 808, 760, 1417, 422, 619, 805, 1491, 753, 407, 606, 802, 
          1489, 746, 392, 593, 799, 1487, 739, 377, 580, 797, 733, 362, 566, 
          1376, 347, 551, 1372, 327, 537, 1463, 726, 794}], 
         Line[{526, 716, 788, 513, 703, 1448, 498, 688, 1438, 483, 673, 1483, 
          781, 468, 659, 1480, 815, 776, 453, 646, 1477, 812, 769, 438, 1329, 
          633, 809, 762, 1418, 423, 620, 806, 755, 1404, 408, 607, 803, 1490, 
          748, 393, 594, 800, 1488, 741, 378, 581, 1467, 735, 363, 567, 1377, 
          348, 552, 1373, 328, 538, 728, 795}], 
         Line[{527, 717, 789, 1458, 514, 704, 1449, 499, 689, 1439, 484, 674, 
          1431, 469, 660, 1481, 777, 454, 1340, 647, 770, 439, 1330, 634, 763,
           1419, 424, 621, 756, 1405, 409, 608, 749, 394, 595, 1470, 742, 379,
           582, 1382, 364, 568, 1378, 349, 553, 329, 1285, 539, 729, 796}]}, {
         Line[{820, 1121, 532, 819, 1280, 1031, 821, 1281, 1032, 822, 1282, 
          1033, 823, 1283, 1034, 824, 1268, 1284, 1035, 825, 1464, 1122, 1179,
           1463, 826, 1123, 538, 827, 1124, 1285, 1036, 828, 1286, 1037, 829, 
          1287, 1038, 830, 1288, 1039, 831, 1289, 1040, 832, 1465, 1125, 1041,
           1126}], 
         Line[{834, 1180, 1371, 833, 545, 835, 1290, 1042, 836, 1291, 1043, 
          837, 1292, 1044, 838, 1293, 1045, 839, 1294, 1181, 1372, 840, 1182, 
          1373, 841, 553, 842, 1295, 1046, 843, 1296, 1047, 844, 1297, 1048, 
          845, 1298, 1049, 846, 1299, 1050, 847}], 
         Line[{849, 1183, 1374, 848, 1184, 1375, 850, 561, 851, 1300, 1051, 
          852, 1301, 1052, 853, 1302, 1053, 854, 1303, 1185, 1376, 855, 1186, 
          1377, 856, 1187, 1378, 857, 1304, 1054, 858, 1305, 1055, 859, 1306, 
          1056, 860, 1307, 1057, 861, 1308, 1058, 862}], 
         Line[{864, 1188, 1379, 863, 1189, 1380, 865, 1190, 1381, 866, 1309, 
          1059, 867, 1310, 1060, 868, 1311, 1061, 869, 1466, 234, 797, 276, 
          235, 1467, 870, 1191, 1382, 871, 1192, 1383, 872, 1312, 1062, 873, 
          1313, 1063, 874, 1314, 1064, 875, 1315, 1065, 876}], 
         Line[{878, 1193, 1384, 877, 1194, 1385, 879, 1195, 1386, 880, 1196, 
          1387, 881, 1316, 1066, 882, 1468, 1127, 1128, 883, 1469, 1129, 1130,
           1487, 884, 1131, 1132, 1488, 885, 1133, 1134, 1470, 886, 1197, 
          1388, 887, 1198, 1389, 888, 1317, 1067, 889, 1318, 1068, 890, 1319, 
          1069, 891}], 
         Line[{893, 1199, 1390, 892, 1200, 1391, 894, 1201, 1392, 895, 1202, 
          1393, 896, 1203, 1394, 897, 1471, 1135, 1136, 898, 1472, 1137, 1138,
           1489, 899, 1139, 1140, 1490, 900, 1141, 749, 901, 1204, 1395, 902, 
          1205, 1396, 903, 1206, 1397, 904, 1320, 1070, 905, 1321, 1071, 
          906}], 
         Line[{908, 1207, 1398, 907, 1208, 1399, 909, 1209, 1400, 910, 1210, 
          1401, 911, 1211, 1402, 912, 1269, 1403, 1142, 913, 1473, 1143, 1144,
           1491, 914, 1145, 1404, 1270, 915, 1146, 1405, 1271, 916, 1212, 
          1406, 917, 1213, 1407, 918, 1214, 1408, 919, 1215, 1409, 920, 1322, 
          1072, 921}], 
         Line[{925, 1323, 1073, 923, 1324, 1074, 927, 1325, 1075, 929, 1326, 
          1076, 931, 1327, 1077, 933, 1273, 1328, 1078, 1170, 1492, 1148, 
          1221, 1474, 1171, 1150, 1329, 1079, 1172, 1152, 1330, 1080, 938, 
          1331, 1081, 940, 1332, 1082, 942, 1333, 1083, 944, 1334, 1084, 946, 
          1335, 1085, 948}], 
         Line[{947, 1424, 1226, 945, 1423, 1225, 943, 1422, 1224, 941, 1421, 
          1223, 939, 1420, 1222, 937, 1277, 1419, 1151, 936, 1276, 1418, 1149,
           935, 1275, 1417, 1416, 1274, 934, 1147, 1415, 1272, 932, 1414, 
          1220, 930, 1413, 1219, 928, 1412, 1218, 926, 1411, 1217, 922, 1410, 
          1216, 924}], 
         Line[{950, 1227, 1425, 949, 1336, 1086, 951, 1337, 1087, 952, 1338, 
          1088, 953, 1339, 1089, 954, 1475, 1153, 1090, 1173, 1493, 1154, 
          1228, 1476, 1174, 1155, 1229, 1477, 1175, 1156, 1340, 1091, 955, 
          1341, 1092, 956, 1342, 1093, 957, 1343, 1094, 958, 1344, 1095, 959, 
          1345, 1096, 960}], 
         Line[{962, 1230, 1426, 961, 1231, 1427, 963, 1346, 1097, 964, 1347, 
          1098, 965, 1348, 1099, 966, 1478, 1157, 1100, 1176, 1494, 1158, 
          1232, 1479, 1177, 1159, 1233, 1480, 1178, 1160, 1234, 1481, 967, 
          1349, 1101, 968, 1350, 1102, 969, 1351, 1103, 970, 1352, 1104, 971, 
          1353, 1105, 972}], 
         Line[{974, 1235, 1428, 973, 1236, 1429, 975, 1237, 1430, 976, 1354, 
          1106, 977, 1355, 1107, 978, 1356, 1108, 979, 1482, 260, 816, 295, 
          261, 1483, 980, 1238, 1431, 981, 1239, 1432, 982, 1357, 1109, 983, 
          1358, 1110, 984, 1359, 1111, 985, 1360, 1112, 986}], 
         Line[{988, 1240, 1433, 987, 1241, 1434, 989, 1242, 1435, 990, 1243, 
          1436, 991, 1361, 1113, 992, 1362, 1114, 993, 1363, 1244, 1437, 994, 
          1245, 1438, 995, 1246, 1439, 996, 1247, 1440, 997, 1248, 1441, 998, 
          1364, 1115, 999, 1365, 1116, 1000, 1366, 1117, 1001}], 
         Line[{1003, 1249, 1442, 1002, 1250, 1443, 1004, 1251, 1444, 1005, 
          1252, 1445, 1006, 1253, 1446, 1007, 1367, 1118, 1008, 1368, 1254, 
          1447, 1009, 1255, 1448, 1010, 1256, 1449, 1011, 1257, 1450, 1012, 
          1258, 1451, 1013, 1259, 1452, 1014, 1369, 1119, 1015, 1370, 1120, 
          1016}], 
         Line[{1030, 1169, 1168, 1486, 1029, 1462, 1267, 1028, 1461, 1266, 
          1027, 1460, 1265, 1026, 1459, 1264, 1025, 1279, 1458, 1167, 1024, 
          788, 1166, 1023, 1484, 1165, 1164, 1485, 1022, 1163, 1457, 1278, 
          1021, 1456, 1263, 1020, 1455, 1262, 1019, 1454, 1261, 1018, 1453, 
          1260, 1017, 782, 1161, 1162}]}}}, VertexNormals -> CompressedData["
1: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
81e8uNqG/TnqblMn4pmYWcvoz1oJKoz+vO5EqTPiH+++l4v4LQZdGP35eVqd
HO43J6LhMO53hrvNHftzkt79NuRn5JMhoz9veHOM0Z9/LBD5jHya/uFh9Oex
2W8YesPgMfsaej8SPZtHDL3xueKDG+oNqZotV+h9Si75HGDojcNNzzJQbzRL
XOml9y8B2dcMvbEohq0J9UbAacFkel8Tfrs+O7yveysVElFvVK6Y3EXvd8Jp
kdSB97vncORb1BvneCTrqR4gwom5J1EPcETsCUG90bqtdobqB7It0bcK9QP1
R8b/9t7z04XEHtQbKv6+kxhPxFPKMN5QtTED9YYGs2cF5j9iWX4C88tenM5E
vXH4bIUy4nmaqN2EeIyqeBh6o1oy9jPiN8v8wNAb2b3bc1FvuF7d0oT7vbfs
NUNvhFzovoV6o+uhhhPyE5ZySBD5adhs14x640+5rDjy+fKSSyLymfX9QzDq
50jfvkqq98i9ob3iqPfErtxSQ/0ctZ/DiOpDUpoTaYb6MOdqZzPqZx9mi69U
TxL9gP5tqCc1XvNWoH4eTJg+SPUnccgebkf9+Wdqox/q5/qZTpZy4yaiU/D+
GurVL9bnl6N+Vg3NkKX6lqQbpImjvj27//ZB1M9hBUpJVA+Tid0XGXqY9g1A
/ez0973n6N/3njZJfo9QPzszsSdg/Pp1Vz5gPHvQiDTqZ8tNxzZjfstyWTHM
7xKz6CXq5yixh5NUPxPnPYmXEc8uzZk61M+bNlhoIP6Pz4ubEL9R0INO1M/X
h7zQL5B10W/kcb+v9Pw0UT8X1+zRQX4Of/LXR35+77JDP0J+c3iUIZ/y3bGi
yGersSwz+kEl14Wm1L8Q7rXf7dC/vH1Ulo5+8GTo7mXU75DEw+x86Hc6s4XP
ox/UqH5XSf0RWXCySgH90VcjizL0gzdUBH5TP0X8XTkYfnDz57tZ6AfH066u
pf6LxIsrp6L/sjabeYx+sI1vPT/1a+RB9sKv6Nesl79ein5w0Dgmivo7MnQ+
2fuvH8z/t/eeEXUBmugHx8Q+RWL86V6vBxifd3F2FPrBj/ae6DfJ0vNqnzH/
0KumIvSDGUt+rkY83vMcExHPKs0rtegHDzdyop8l06FBiYjf4VDHZfSDuae9
8nC/6S7yDD+4sao9B/1g0drZc5Af6TXyC5GfJWlr2dAPzvjyor8m+7jcjiOf
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
gEt53vKlK7vA4+E8e2eDUgjlDc3hXt0Os8ubRa88bIM7r1eoC9VXwE+rqbze
is7/mWtx/Z1rhf6da4ke6ty940sx2XK6Nf3420o4/MZ6Xk1iP1hDFnv8xkZy
/YH9oPG3CvgTLiU0ytELMto2N5dVtBG24aXcXLblkO2lfjnveydkpzm9a+Pv
ItaL2uK+F5TCrak490Vz2mE5t5dKsh7V83qvA7l2loDrxgHbLXdaYEDv2CK1
hl7C9Lz4blleEWT6H5TYOdAIbouHDbYMUz/1nhjqORZAJq/Pak+3OnB+Yj03
0K8f+u7uFHm8NRYmFA4k36d1rdzitzzwbh+EN9pd2lWaCMl2BfNCU5pAkVt7
/1eKl9tdyn3FQCrIXslUClvYCm29bNHMaV0Qb1mU3mOUBSdX3Fm7N6od3s9h
/bRIrx2W2HcNy5XmwVTN1eJFMV3/M6diFf9/51SxldsdV18pIRoqYeSSVA6w
SG24Hyw8CC+6tyxdZd9E1OO8NEK0cuBJsvbvxtV9sDaaQ3nNtXbCvap0SCsn
GxZn2d4qzuqCd9oQIJLSRd4enlPpfvkblNQE8xoHtsMxvdzUhu4eQqyW1Qhx
ZcFC+Kqe9KMFDtVEldua9JH7LSor5iRkQEH2wsCm602wzj3755RpPzGaSP1+
1SsdvPK//QoergOTSzXfYr/0w3Kvaj73r26wkt8j9D3OqdzKJu997YOMt+16
peALZ4/PjUv+3gRtgVN37+7pBfcNcOqjbjAc+WBgdkOhFQ6qMzeu4aO6KDZd
T93lPRgJn1t9c6IdTn0d+WCa1Q7fE3c5PJ78AvOEl5v7S3fj/fID506UP+//
PXfaG2F05EZ+CRGd2nzT57g/7Er+M/o4fhCW935TrKN6T3GxSeJr5dfQ2Dpr
4uP7PvCt1d2jXtFO1KTsz6y//QESry/kE9raDVxV3KEavN1k/nYbmZWpkbCy
dmhy2Wg7XNAIMS9S7CXTAVdS9HI+AW/k4MClTa2gPq95wiSsj8zepLv5lFYU
PJ/kfN9T3wRRB1xdsoP6iR7T9KVynyhw9jHt0txcDy0/IpzpOkSUyz6g6+Tl
gb4BXF+43vInzQPJPNmaNA85fWRjLObhvTNhQr8Xnl+50E6/l7S/4h/F7xVO
C3hJccJ28+4jFCdR6C1h4aU4V0QGKtF9wYLiD1l0X4RHhkkY90X7G2OO9Oq/
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
OzT64Hj+H1F7tHc=
       "]], {
     Axes -> True, AxesLabel -> {$CellContext`u, $CellContext`v}, ImageSize -> 
      300, Method -> {}, 
      PlotRange -> {{-0.8599998771428572, 0.8599998771428572}, {-1.53999978, 
       1.53999978}, {0., 1.9999994285714693`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{0.5915240547030066, 
    0.26524223280007353`, 0.41384768375569364`}, {0.26524223280007353`, 
    0.8277660095513921, -0.2687303498341568}}, $CellContext`scale$$ = 
    0.5, $CellContext`tick$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Grid[{{
             Text["u = "], 
             Dynamic[
              Part[$CellContext`p$$, 1]]}, {
             Text["v = "], 
             Dynamic[
              Part[$CellContext`p$$, 2]]}}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, ImageSize -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]], Appearance -> "Vertical"]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.5}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {0.4, -1}}, 0}}, Typeset`size$$ = {
    400., {222.5, 229.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 
        0, $CellContext`p$$ = {0.4, -1}, $CellContext`plot$$ = 
        0, $CellContext`r$$ = 0, $CellContext`scale$$ = 
        0.5, $CellContext`tick$$ = False}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> "Quality", 
            AxesLabel -> {$CellContext`u, $CellContext`v}]; \
$CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fup$$/2), 
               Background -> LightRed], Green, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], 
              Text[
              "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ ($CellContext`fvp$$/2), 
               Background -> LightRed], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(u\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 1]/2), Background -> LightRed], 
              Orange, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Text[
              "\!\(\*SuperscriptBox[OverscriptBox[\(x\), \(\[RightVector]\)], \
\(v\)]\)", $CellContext`fp$$ + $CellContext`scale$$ (
                 Part[$CellContext`r$$, 2]/2), Background -> LightRed], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Grid[{{
              Text["u = "], 
              Dynamic[
               Part[$CellContext`p$$, 1]]}, {
              Text["v = "], 
              Dynamic[
               Part[$CellContext`p$$, 2]]}}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, ImageSize -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 2}, ImageSize -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]], Appearance -> "Vertical"]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {0.4, -1}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{658., {261., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}, 
   3.6029766202534933`*^9, 3.6029766993350167`*^9, 3.6029767626836405`*^9, 
   3.602976909645046*^9, 3.602976978832003*^9, 3.6029770387744317`*^9, 
   3.602977120111084*^9, 3.602979953312134*^9, 3.602979996398598*^9, {
   3.6029800268143377`*^9, 3.6029800892239075`*^9}, {3.6029802732474327`*^9, 
   3.6029802930755672`*^9}, 3.6029803470036516`*^9, 3.602980586694361*^9, 
   3.6029810202271576`*^9, 3.6029810539220853`*^9, 3.602981172303856*^9, 
   3.602981314177971*^9, 3.602981357660458*^9},
 CellID->779913215]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "A surface in 3D can be represented in a parameterized vector form using two \
parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "(", 
       RowBox[{"u", ",", "v"}], ")"}], " ", 
      OverscriptBox["i", "^"]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"y", "(", 
       RowBox[{"u", ",", "v"}], ")"}], " ", 
      OverscriptBox["j", "^"]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"z", "(", 
       RowBox[{"u", ",", "v"}], ")"}], " ", 
      OverscriptBox["k", "^"], " "}]}]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".  The partial derivatives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "u"], " ", "=", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       OverscriptBox["x", "\[RightVector]"], " "}], 
      RowBox[{"\[PartialD]", "u"}]]}], " ", ",", " ", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "v"], " ", "=", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       OverscriptBox["x", "\[RightVector]"], " "}], 
      RowBox[{"\[PartialD]", "v"}]]}]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 "with respect to these parameters provide a basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "u"], ",", " ", 
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "v"]}], "}"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm"],
 " for the tangent plane at the point of evaluation.  Because those vectors \
are not necessarily orthogonal, the reciprocal (or dual) vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      OverscriptBox["x", "\[RightVector]"], "u"], ",", " ", 
     SuperscriptBox[
      OverscriptBox["x", "\[RightVector]"], "v"]}], "}"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm"],
 " for the tangent plane can be useful for expressing projection operations.  \
These vectors satisfy the relationship ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      OverscriptBox["x", "\[RightVector]"], "i"], " ", "\[CenterDot]", " ", 
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "j"]}], " ", "=", " ", 
    SubscriptBox[
     SuperscriptBox["\[Delta]", "i"], "j"]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", ",", 
    RowBox[{"j", " ", "\[Element]", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".  "
}], "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.6029782119315324`*^9}, {3.6029809825270014`*^9, 
  3.602980984967141*^9}},
 CellID->272988002],

Cell[TextData[{
 "This demonstration provides a visualization of both the tangent plane basis \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "u"], ",", " ", 
     SubscriptBox[
      OverscriptBox["x", "\[RightVector]"], "v"]}], "}"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm"],
 " and the reciprocal basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      OverscriptBox["x", "\[RightVector]"], "u"], ",", " ", 
     SuperscriptBox[
      OverscriptBox["x", "\[RightVector]"], "v"]}], "}"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm"],
 ", providing a few sample surfaces, and controls for altering those \
surfaces.  A scale control is provided to adjust the length of both pairs of \
bases, should they range out of the image or be too small for visibility.  A \
control for adjusting the parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", ",", " ", "v"}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ", is also provided."
}], "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.6029782285634837`*^9}},
 CellID->2277490],

Cell[TextData[{
 "The reciprocal vectors for a two dimensional subspace basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["a", "\[RightVector]"], ",", 
     OverscriptBox["b", "\[RightVector]"]}], "}"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm"],
 " can be calculated using the following geometric algebra expression"
}], "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.6029783285462027`*^9}, {3.6029783761869273`*^9, 
  3.602978382386282*^9}, {3.602979024802026*^9, 3.6029790309973803`*^9}, {
  3.602979192590623*^9, 3.602979306125117*^9}},
 CellID->558775277],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    OverscriptBox["a", "\[RightVector]"], "*"], "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        OverscriptBox["a", "\[RightVector]"], " ", "\[Wedge]", " ", 
        OverscriptBox["b", "\[RightVector]"]}], ")"}], " ", "/", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["a", "\[RightVector]"], " ", "\[Wedge]", " ", 
         OverscriptBox["b", "\[RightVector]"]}], ")"}], "2"]}]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
           OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], " ", 
         OverscriptBox["b", "\[RightVector]"]}], "  ", "-", "  ", 
        RowBox[{
         SuperscriptBox[
          OverscriptBox["b", "\[RightVector]"], "2"], " ", 
         OverscriptBox["a", "\[RightVector]"]}]}], " ", ")"}], "/", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", " ", 
          RowBox[{
           OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
           OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], "2"], "  ", 
        "-", "  ", 
        RowBox[{
         SuperscriptBox[
          OverscriptBox["b", "\[RightVector]"], "2"], " ", 
         SuperscriptBox[
          OverscriptBox["a", "\[RightVector]"], "2"]}]}], ")"}]}], " ", 
     OverscriptBox["=", 
      RowBox[{"3", "D"}]], " ", 
     RowBox[{
      OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["b", "\[RightVector]"], " ", "\[Cross]", " ", 
         OverscriptBox["a", "\[RightVector]"]}], ")"}], " ", "/", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          OverscriptBox["a", "\[RightVector]"], " ", "\[Cross]", " ", 
          OverscriptBox["b", "\[RightVector]"]}], ")"}], "2"]}]}]}]}]}], 
  TraditionalForm]], "InlineMath",
 FormatType->"TraditionalForm"]], "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.602978482729021*^9}, {3.6029785250974445`*^9, 
  3.6029785359580655`*^9}, {3.602978833239069*^9, 3.6029789524808893`*^9}, {
  3.602979034206564*^9, 3.602979069959609*^9}, {3.602979123088648*^9, 
  3.602979148160082*^9}},
 CellID->296754662],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     OverscriptBox["b", "\[RightVector]"], "*"], "=", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["a", "\[RightVector]"], " ", "\[CenterDot]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["b", "\[RightVector]"], " ", "\[Wedge]", " ", 
         OverscriptBox["a", "\[RightVector]"]}], ")"}], " ", "/", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          OverscriptBox["a", "\[RightVector]"], " ", "\[Wedge]", " ", 
          OverscriptBox["b", "\[RightVector]"]}], ")"}], "2"]}]}], " ", "=", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            OverscriptBox["a", "\[RightVector]"], " ", "\[CenterDot]", " ", 
            OverscriptBox["b", "\[RightVector]"]}], " ", ")"}], " ", 
          OverscriptBox["a", "\[RightVector]"]}], "  ", "-", "  ", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["a", "\[RightVector]"], "2"], " ", 
          OverscriptBox["b", "\[RightVector]"]}]}], " ", ")"}], "/", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", " ", 
           RowBox[{
            OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
            OverscriptBox["a", "\[RightVector]"]}], " ", ")"}], "2"], "  ", 
         "-", "  ", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["b", "\[RightVector]"], "2"], " ", 
          SuperscriptBox[
           OverscriptBox["a", "\[RightVector]"], "2"]}]}], ")"}]}], "  ", 
      OverscriptBox["=", 
       RowBox[{"3", "D"}]], " ", 
      RowBox[{
       OverscriptBox["b", "\[RightVector]"], " ", "\[CenterDot]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          OverscriptBox["a", "\[RightVector]"], " ", "\[Cross]", " ", 
          OverscriptBox["b", "\[RightVector]"]}], ")"}], " ", "/", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           OverscriptBox["a", "\[RightVector]"], " ", "\[Cross]", " ", 
           OverscriptBox["b", "\[RightVector]"]}], ")"}], "2"]}]}]}]}]}], 
   TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.602978505817342*^9}, {3.602978975707218*^9, 
  3.6029789958003674`*^9}, {3.6029790832343683`*^9, 3.602979094754027*^9}, {
  3.602979141604707*^9, 3.602979151941298*^9}, {3.60297930093282*^9, 
  3.602979308665262*^9}, {3.602979503497406*^9, 3.602979511481862*^9}},
 CellID->461778158],

Cell["\<\
or, in 3D using dual cross product representation (also above).\
\>", "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.602978505817342*^9}, {3.602978975707218*^9, 
  3.6029789958003674`*^9}, {3.6029790832343683`*^9, 3.602979094754027*^9}, {
  3.602979141604707*^9, 3.602979151941298*^9}, {3.60297930093282*^9, 
  3.602979359073145*^9}, {3.602979526785738*^9, 3.602979529005865*^9}},
 CellID->538033401],

Cell["\<\
Additional background material on the calculation and applications of the \
reciprocal basis to non-orthonormal coordinate systems can be found in:\
\>", "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}, {
  3.602973835425211*^9, 3.602973843604678*^9}, {3.602974246342714*^9, 
  3.6029746314117384`*^9}, {3.6029746634205694`*^9, 3.6029746830806937`*^9}, {
  3.602977215306529*^9, 3.6029775821475105`*^9}, {3.6029776216017675`*^9, 
  3.6029777727264113`*^9}, {3.60297781518684*^9, 3.6029780075198407`*^9}, {
  3.6029782119135313`*^9, 3.602978505817342*^9}, {3.602978975707218*^9, 
  3.6029789958003674`*^9}, {3.6029790832343683`*^9, 3.602979094754027*^9}, {
  3.602979141604707*^9, 3.602979151941298*^9}, {3.60297930093282*^9, 
  3.602979462709073*^9}, {3.602979548401974*^9, 3.6029796471156206`*^9}},
 CellID->472795398],

Cell["\<\
A. Macdonald, Vector and Geometric Calculus,  CreateSpace Independent \
Publishing Platform, 2012.\
\>", "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932832227`*^9}, {
  3.6029796555461025`*^9, 3.602979657582219*^9}},
 CellID->346135800]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6029310463183775`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.602931047622452*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["dual basis", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.6029310615752497`*^9}},
 CellID->24907710],

Cell["tangent space", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.6029310667835484`*^9}},
 CellID->228317512],

Cell["reciprocal basis", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.602931070643769*^9}},
 CellID->136377538]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell["http://mathworld.wolfram.com/DualBasis.html", "RelatedLinks",
 CellID->15851226]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Peeter Joot", "Author",
 CellChangeTimes->{{3.6029310776691704`*^9, 3.6029310790742507`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[509556, 9019, 355, 9, 30, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[509914, 9030, 719, 17, 30, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[510636, 9049, 340, 11, 30, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[510979, 9062, 637, 15, 30, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[511619, 9079, 844, 21, 30, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[512466, 9102, 369, 9, 30, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[512838, 9113, 1464, 31, 30, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[514305, 9146, 908, 21, 30, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 516397, 9215},
 {"RotateAndZoomIn3D", 516507, 9218},
 {"DragLocators", 516618, 9221},
 {"CreateAndDeleteLocators", 516735, 9224},
 {"SliderZoom", 516850, 9227},
 {"GamepadControls", 516957, 9230},
 {"AutomaticAnimation", 517071, 9233},
 {"BookmarkAnimation", 517189, 9236}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 163, 3, 98, "DemoTitle"],
Cell[CellGroupData[{
Cell[767, 29, 33, 0, 365, "InitializationSection"],
Cell[803, 31, 7583, 197, 1191, "Input",
 InitializationCell->True,
 CellID->267096170]
}, Open  ]],
Cell[CellGroupData[{
Cell[8423, 233, 29, 0, 311, "ManipulateSection"],
Cell[CellGroupData[{
Cell[8477, 237, 22513, 465, 2780, "Input",
 CellID->49453794],
Cell[30993, 704, 95680, 1633, 544, "Output",
 CellID->64481444]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126722, 2343, 36, 0, 228, "ManipulateCaptionSection"],
Cell[126761, 2345, 900, 13, 86, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127698, 2363, 28, 0, 229, "ThumbnailSection"],
Cell[127729, 2365, 81567, 1404, 494, "Output",
 CellID->153045376]
}, Open  ]],
Cell[CellGroupData[{
Cell[209333, 3774, 28, 0, 189, "SnapshotsSection"],
Cell[209364, 3776, 89859, 1536, 548, "Output",
 CellID->301900159],
Cell[299226, 5314, 100806, 1714, 528, "Output",
 CellID->29479170],
Cell[400035, 7030, 95681, 1633, 544, "Output",
 CellID->779913215]
}, Open  ]],
Cell[CellGroupData[{
Cell[495753, 8668, 26, 0, 452, "DetailsSection"],
Cell[495782, 8670, 3317, 93, 86, "DetailNotes",
 CellID->272988002],
Cell[499102, 8765, 1578, 40, 69, "DetailNotes",
 CellID->2277490],
Cell[500683, 8807, 987, 20, 35, "DetailNotes",
 CellID->558775277],
Cell[501673, 8829, 2881, 70, 41, "DetailNotes",
 CellID->296754662],
Cell[504557, 8901, 3007, 74, 41, "DetailNotes",
 CellID->461778158],
Cell[507567, 8977, 776, 12, 28, "DetailNotes",
 CellID->538033401],
Cell[508346, 8991, 862, 13, 28, "DetailNotes",
 CellID->472795398],
Cell[509211, 9006, 268, 6, 28, "DetailNotes",
 CellID->346135800]
}, Open  ]],
Cell[CellGroupData[{
Cell[509516, 9017, 37, 0, 168, "ControlSuggestionsSection"],
Cell[509556, 9019, 355, 9, 30, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[509914, 9030, 719, 17, 30, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[510636, 9049, 340, 11, 30, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[510979, 9062, 637, 15, 30, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[511619, 9079, 844, 21, 30, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[512466, 9102, 369, 9, 30, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[512838, 9113, 1464, 31, 30, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[514305, 9146, 908, 21, 30, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515250, 9172, 30, 0, 208, "SearchTermsSection"],
Cell[515283, 9174, 120, 2, 28, "SearchTerms",
 CellID->24907710],
Cell[515406, 9178, 124, 2, 28, "SearchTerms",
 CellID->228317512],
Cell[515533, 9182, 125, 2, 28, "SearchTerms",
 CellID->136377538]
}, Open  ]],
Cell[CellGroupData[{
Cell[515695, 9189, 31, 0, 188, "RelatedLinksSection"],
Cell[515729, 9191, 86, 1, 28, "RelatedLinks",
 CellID->15851226]
}, Open  ]],
Cell[CellGroupData[{
Cell[515852, 9197, 25, 0, 188, "AuthorSection"],
Cell[515880, 9199, 115, 1, 28, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
