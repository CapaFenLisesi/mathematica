(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    122825,       2471]
NotebookOptionsPosition[    118890,       2350]
NotebookOutlinePosition[    120509,       2400]
CellTagsIndexPosition[    120173,       2388]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Illustrating the dual basis for the tangent space of a 2D surface.\
\>", "DemoTitle",
 CellChangeTimes->{{3.602930881075926*^9, 3.6029309111826477`*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", " ", "reciprocalsForTwoDimSubspace", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reciprocalsForTwoDimSubspace", "::", "usage"}], " ", "=", " ", 
   "\"\<For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reciprocalsForTwoDimSubspace", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "b_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "cross", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cross", " ", "=", " ", 
        RowBox[{"Cross", "[", " ", 
         RowBox[{"a", ",", " ", "b"}], " ", "]"}]}], " ", ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", " ", 
           RowBox[{"b", ",", " ", "cross"}], "]"}], ",", " ", 
          RowBox[{"Cross", "[", 
           RowBox[{"cross", ",", " ", "a"}], "]"}]}], "}"}], "/", 
        RowBox[{"(", 
         RowBox[{"cross", " ", ".", " ", "cross"}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "f", ",", "fu", ",", "fv", ",", "f1", ",", "f2", ",", "zFunc", ",", 
   "paraboloid", ",", " ", "saddle", ",", " ", "sine"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paraboloid", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "/", "#3"}], ")"}], "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], " ", "&"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saddle", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "/", "#3"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], " ", "&"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sine", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "/", "#3"}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#2", "/", "#4"}], ")"}], "^", "2"}]}], "]"}], " ", "&"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zFunc", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"paraboloid", ",", " ", "saddle", ",", " ", "sine"}], "}"}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", " ", "#2", ",", " ", 
       RowBox[{
        RowBox[{"zFunc", " ", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", "##", "]"}]}], "}"}], " ", 
     "&"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Replace", " ", "trick", " ", "to", " ", "evaluate", " ", "before", " ", 
    "numeric", " ", 
    RowBox[{"subst", ":", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"http", ":"}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "31071"}], "/", "10"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/31071/10"], None},
      ButtonNote->"http://mathematica.stackexchange.com/a/31071/10"]}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "n_Integer", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "n", "]"}], "[", 
        RowBox[{"t", ",", "#2", ",", "#3", ",", " ", "#4"}], "]"}], ",", 
       "t"}], "]"}], "/.", " ", 
     RowBox[{"t", " ", "\[Rule]", " ", "#1"}]}], "&"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f2", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], "[", 
         RowBox[{"#1", ",", "t", ",", "#3", ",", "#4"}], "]"}], ",", "t"}], 
       "]"}], "/.", " ", 
      RowBox[{"t", " ", "\[Rule]", " ", "#2"}]}], "&"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", 
     RowBox[{"{", 
      RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "[", 
    RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fu", "[", 
    RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"f1", "[", "n", "]"}], ")"}], "[", 
    RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fv", "[", 
     RowBox[{"n_Integer", ",", " ", "s1_", ",", " ", "s2_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"u_", ",", " ", "v_"}], "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f2", "[", "n", "]"}], ")"}], "[", 
     RowBox[{"u", ",", "v", ",", " ", "s1", ",", " ", "s2"}], "]"}]}], " ", 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ClearAll", "[", "checkAgainstRange", "]"}], " ", ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"checkAgainstRange", "::", "usage"}], " ", "=", " ", 
     "\"\<This is to deal with InputForm Manipulators, that allow non-numeric \
values to be passed, or values that exceed the range specified in the \
Manipulator.\>\""}], " ", ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"checkAgainstRange", "[", 
      RowBox[{
      "v_", ",", "default_", ",", "lowerLimit_", ",", " ", "upperLimit_", ",",
        " ", 
       RowBox[{"typeFunc_", " ", ":", " ", "NumberQ"}]}], "]"}], " ", ":=", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"typeFunc", "[", "v", "]"}], ",", "v", ",", " ", 
           "default"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", "<=", " ", "upperLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{"result", " ", ">=", " ", "lowerLimit"}], ",", " ", 
           "result", ",", "default"}], " ", "]"}]}], " ", ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.6029310358697796`*^9},
 CellID->267096170]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tick", ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", " ", 
      RowBox[{"bRefreshPlot", ",", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"fn", ",", " ", "av", ",", "bv", ",", 
              RowBox[{"{", 
               RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              RowBox[{"-", "av"}], ",", "av"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"v", ",", " ", 
              RowBox[{"-", "bv"}], ",", "bv"}], "}"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
           "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{"bRefreshPlot", " ", "=", " ", "False"}]}], " ", ")"}], 
       "\[IndentingNewLine]", ","}], " ", "]"}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", " ", 
      RowBox[{"bRefreshPointDependent", ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fp", ",", " ", "fup", ",", " ", "fvp"}], "}"}], " ", "=", 
          " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", "p"}], "]"}], 
            ",", 
            RowBox[{"fu", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", "p"}], "]"}], 
            ",", 
            RowBox[{"fv", "[", 
             RowBox[{"fn", ",", " ", "av", ",", " ", "bv", ",", " ", "p"}], 
             "]"}]}], "}"}]}], "  ", ";", "\[IndentingNewLine]", 
         RowBox[{"r", " ", "=", " ", 
          RowBox[{"reciprocalsForTwoDimSubspace", "[", " ", 
           RowBox[{"{", 
            RowBox[{"fup", ",", " ", "fvp"}], "}"}], " ", "]"}]}], " ", ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"bRefreshPointDependent", " ", "=", " ", "False"}], " ", 
         ";"}], "\[IndentingNewLine]", ")"}], ","}], "]"}], " ", ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"plot", ",", "\[IndentingNewLine]", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Black", ",", "\[IndentingNewLine]", 
             RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", "fup"}]}]}], "}"}], ",", "0.02"}], 
               "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", "fvp"}]}]}], "}"}], ",", "0.02"}], 
               "]"}], "]"}], ",", "\[IndentingNewLine]", "Blue", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
                "0.02"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"fp", ",", " ", 
                  RowBox[{"fp", " ", "+", " ", 
                   RowBox[{"scale", " ", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
                "0.02"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Lighter", "[", "Gray", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"fp", " ", "+", " ", "fup", " ", "+", " ", "fvp"}], 
                ",", 
                RowBox[{"fp", " ", "-", " ", "fup", " ", "+", " ", "fvp"}], 
                ",", " ", 
                RowBox[{"fp", " ", "-", " ", "fup", " ", "-", " ", "fvp"}], 
                ",", " ", 
                RowBox[{"fp", " ", "+", " ", "fup", " ", "-", " ", "fvp"}]}], 
               " ", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}]}], "}"}], "]"}], 
       "\[IndentingNewLine]", "}"}], " ", "]"}]}], "\[IndentingNewLine]", ",",
     "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider2D", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"p", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"p", " ", "=", " ", "#"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], " ", 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<p = \>\"", "]"}], ",", 
            RowBox[{"Dynamic", "@", 
             RowBox[{"MatrixForm", "@", "p"}]}]}], " ", "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"av", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"av", " ", "=", " ", "#"}], " ", ";", " ", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"checkAgainstRange", "[", 
                   RowBox[{"#", ",", " ", "1", ",", "0.05", ",", " ", "2"}], 
                   "]"}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"Appearance", "\[Rule]", "Tiny"}]}], "\[IndentingNewLine]",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<a = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "av"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"bv", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"bv", " ", "=", " ", "#"}], " ", ";", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"checkAgainstRange", "[", 
                   RowBox[{"#", ",", " ", "1", ",", "0.05", ",", " ", "2"}], 
                   "]"}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                " ", ";", "\[IndentingNewLine]", 
                RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"Appearance", "\[Rule]", "Tiny"}]}], "\[IndentingNewLine]",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<b = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "bv"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Slider", "[", " ", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"scale", ",", " ", 
             RowBox[{
              RowBox[{"(", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"scale", " ", "=", " ", "#"}], " ", ";", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"checkAgainstRange", "[", 
                   RowBox[{"#", ",", "0.3", ",", "0.05", ",", " ", "1"}], 
                   "]"}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"tick", "=", 
                 RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"Appearance", "\[Rule]", "Tiny"}]}], "\[IndentingNewLine]",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<scale = \>\"", "]"}], ",", " ", 
            RowBox[{"Dynamic", "@", "scale"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dynamic", "@", 
          RowBox[{"SetterBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"fn", ",", " ", 
              RowBox[{
               RowBox[{"(", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"fn", "=", " ", "#"}], " ", ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"bRefreshPointDependent", " ", "=", " ", "True"}], 
                 " ", ";", "\[IndentingNewLine]", 
                 RowBox[{"bRefreshPlot", " ", "=", " ", "True"}], " ", ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"tick", "=", 
                  RowBox[{"Not", "[", "tick", "]"}]}]}], ")"}], "&"}]}], 
             "]"}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", " ", "\[Rule]", "  ", 
                RowBox[{"TraditionalForm", "[", " ", 
                 RowBox[{
                  RowBox[{"zFunc", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "[", 
                  RowBox[{"x", " ", ",", "y", ",", " ", "a", ",", " ", "b"}], 
                  " ", "]"}], "]"}]}], ")"}], "&"}], "/@", " ", 
             RowBox[{"Range", "[", "3", "]"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", "\"\<z(x, y)\>\"", "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"scale", ",", "0.3"}], "}"}], ",", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"av", ",", "1"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bv", ",", " ", "1"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tick", ",", "False"}], "}"}], ",", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bRefreshPointDependent", ",", " ", "True"}], "}"}], ",", " ", 
      "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bRefreshPlot", ",", " ", "True"}], "}"}], ",", " ", "None"}], 
     "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"plot", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fn", ",", " ", "2"}], "}"}], ",", " ", "None"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fp", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fup", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"fvp", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", " ", "None"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], " ", "}"}], ",", " ", "None"}], 
     "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
     RowBox[{"{", "tick", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6028486396694283`*^9, 3.602848766330673*^9}, {
   3.602848830148323*^9, 3.6028488331484947`*^9}, {3.6028489219605746`*^9, 
   3.602848936863427*^9}, {3.6028490538941207`*^9, 3.6028490646217346`*^9}, {
   3.6028491045200167`*^9, 3.6028494323467674`*^9}, {3.602850959563119*^9, 
   3.602851067370285*^9}, {3.60285109805504*^9, 3.6028514589076796`*^9}, {
   3.60285158549592*^9, 3.602851588687103*^9}, {3.6028516222520227`*^9, 
   3.602851968155807*^9}, {3.602852020436797*^9, 3.6028520761599846`*^9}, {
   3.602852156751594*^9, 3.602852218629133*^9}, {3.6028522821767683`*^9, 
   3.602852416044425*^9}, {3.6028524567277517`*^9, 3.602852466002282*^9}, {
   3.6028525899423714`*^9, 3.6028527133024273`*^9}, {3.6028527539827538`*^9, 
   3.6028527809782977`*^9}, {3.602852817434383*^9, 3.602852862229945*^9}, {
   3.602852929659802*^9, 3.6028529756934347`*^9}, {3.602853019798958*^9, 
   3.6028534633343267`*^9}, {3.6028534973262706`*^9, 3.60285350273658*^9}, {
   3.60285362617064*^9, 3.602853693710503*^9}, {3.6028537565910997`*^9, 
   3.6028537926641626`*^9}, {3.602853874124822*^9, 3.602853943529792*^9}, {
   3.602853984843155*^9, 3.602854044392561*^9}, 3.602854075962367*^9, {
   3.602854145036318*^9, 3.6028541629563427`*^9}, {3.602855812585696*^9, 
   3.6028559256001596`*^9}, {3.602856185645034*^9, 3.602856302910741*^9}, {
   3.6028565100935907`*^9, 3.602856524776431*^9}, {3.602856671604829*^9, 
   3.60285680064921*^9}, {3.602856835372196*^9, 3.6028568930454946`*^9}, {
   3.6028569296735897`*^9, 3.602856931532696*^9}, {3.602856966619703*^9, 
   3.6028569672497387`*^9}, {3.6028570401229067`*^9, 3.602857092465901*^9}, {
   3.6028571600187645`*^9, 3.6028571610288224`*^9}, {3.602857220133203*^9, 
   3.60285722288636*^9}, {3.60285725696831*^9, 3.6028572598224735`*^9}, {
   3.6028578273329325`*^9, 3.602857866086149*^9}, {3.6028582981738634`*^9, 
   3.6028583127556973`*^9}, 3.602858367726842*^9, {3.602858413760474*^9, 
   3.602858443441172*^9}, {3.602858534363373*^9, 3.6028585564976387`*^9}, {
   3.602859555551781*^9, 3.602859575162903*^9}, {3.602859706693426*^9, 
   3.6028597254394984`*^9}, {3.6028597634346714`*^9, 
   3.6028597928443537`*^9}, {3.6028598929750805`*^9, 3.60285991639542*^9}, {
   3.602860020275362*^9, 3.6028600411265545`*^9}, {3.6028600944316034`*^9, 
   3.602860153658991*^9}, {3.602860268595565*^9, 3.6028603154392443`*^9}, {
   3.6028603681662602`*^9, 3.602860432978967*^9}, {3.6028605176728115`*^9, 
   3.6028605607142735`*^9}, {3.6028606026306705`*^9, 3.602860668667448*^9}, {
   3.6028607295379295`*^9, 3.602860781440898*^9}, {3.602860821668199*^9, 
   3.6028609412110367`*^9}, {3.602861000450425*^9, 3.602861059334793*^9}, {
   3.602870662669999*^9, 3.6028707038003516`*^9}, {3.6028707357031765`*^9, 
   3.6028707706061726`*^9}, {3.6028708196229763`*^9, 3.602870867511715*^9}, {
   3.6028709058779097`*^9, 3.6028709812252192`*^9}, {3.60287104696898*^9, 
   3.6028711645737066`*^9}, {3.6028712290723953`*^9, 
   3.6028713634710827`*^9}, {3.6028714302049*^9, 3.6028714307259293`*^9}, {
   3.602871482752905*^9, 3.60287157444915*^9}, {3.6028717693822994`*^9, 
   3.602871830146775*^9}, {3.602872022293765*^9, 3.6028720532165337`*^9}, {
   3.602873796906267*^9, 3.6028738520714226`*^9}, {3.6028738841302557`*^9, 
   3.602873890450618*^9}, {3.6028739600155964`*^9, 3.6028739626507473`*^9}, {
   3.6028740534089384`*^9, 3.602874082396596*^9}, {3.602874119761733*^9, 
   3.6028741959690924`*^9}, {3.602874228757968*^9, 3.6028742447188807`*^9}, {
   3.602874550353362*^9, 3.6028745839192815`*^9}, 3.602874622686499*^9, {
   3.602874685133071*^9, 3.60287469141143*^9}, {3.602874935081367*^9, 
   3.6028749389755898`*^9}, 3.602875011336728*^9, 3.6028755716457767`*^9, 
   3.6028757565353518`*^9, 3.602875858316173*^9, 3.6028759039407825`*^9, 
   3.6028759490413623`*^9, {3.602894121669739*^9, 3.602894133861436*^9}, {
   3.6028944050019445`*^9, 3.6028945140381813`*^9}, {3.6028963428377824`*^9, 
   3.602896353563396*^9}, {3.602896656817741*^9, 3.6028966575237813`*^9}, {
   3.6028967617857447`*^9, 3.6028967844800425`*^9}, 3.6028968507148314`*^9, {
   3.6029297985940113`*^9, 3.6029298367221923`*^9}, {3.602930153092288*^9, 
   3.6029302277115555`*^9}, {3.6029302619825163`*^9, 3.602930307720132*^9}, {
   3.6029306128685856`*^9, 3.602930618780924*^9}, {3.6029306685997734`*^9, 
   3.602930668771783*^9}, {3.6029309780884748`*^9, 3.602931026226228*^9}},
 CellID->49453794],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
    False, $CellContext`bRefreshPointDependent$$ = False, $CellContext`bv$$ = 
    1, $CellContext`fn$$ = 2, $CellContext`fp$$ = {
     Rational[1, 2], 
     Rational[1, 2], 
     Rational[1, 2]}, $CellContext`fup$$ = {1, 0, 1}, $CellContext`fvp$$ = {0,
     1, 1}, $CellContext`p$$ = {
     Rational[1, 2], 
     Rational[1, 2]}, $CellContext`plot$$ = Graphics3D[
     GraphicsComplex[CompressedData["
1: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
8Aze4PbDM/g6Hy88g9eWFPzAM/jtzic8k+f+qvPahx799hvBM/iUoZObHm3b
HDyDf//OHSse/XZ78Axe5JOtwXPsV/J5tyx4Bi/i5yvBM3gRZ14MnvU8BZ7j
ud4ensG/6f3DM/gotweewS90++EZ/CYfLzzHOY7zA8/gdzufVX9uyY78RVfD
3CO3iT+3ZMdtPmzW3GkbxZ9bsn98qbPxlsHrxZ9bsuvyPH+5+HNL1j2fF38X
f27JpuT+0yz+3JL1zP1wjvhzeZ5S9ecW99s54s8t2T3ef9WfP7J/SWFP1Z9b
sqvd/qo/t2Qf+Hir/tySHeP8VP25JTvC+azy3Jw9PPyxuwaeuFV4bs6enPnK
UwMfaxeem7ODln7jriuGrxGem/28Zqnw3Jwdn9uzUHhuzr6bj+tPwnNzdn/O
z3ThuTxPqfLcnE329lWem7NR3n+V5+bsaLenynNzdrPbX+W5OTvQx1vl+SN7
nJ8qz83ZDOcTnsm3T/z8pF/WJmwJnsE/88Cfn6jVNgTP4EWetip4Bv8g32++
EjyDD8z7mR88g3eb+//tnwk+u1X+++Jg+Iz9RN7/pOATfM/zRT/wCX6yPxc+
wd92O+ETvLePCz7BBzgP8Al+gvMmfmsJv7WE31rCby3ht5bwW0v4rSX81hJ+
awm/tYTfWsJvLeG3lvBbS/itqd9SX0nEYUvEYUvEYUvEYUvEYUvEYUvEYUvE
YUvEYUvEYUvEYUvEYUvEYUvEYdM4TL0qkVdYIq+wRF5hibzCEnmFJfIKS+QV
lsgrLJFXWCKvsEReYYm8whJ5hSXyCqufV7RbIk+2RJ5siTzZEnmyJfJkS+TJ
lsiTLZEnWyJPtkSebIk82RJ5siXyZEvkyaZ5MvXUxL7PEvs+S+z7LLHvs8S+
zxL7Pkvs+yyx77PEvs8S+z5L7Pssse+zxL7PEvs+030f9Wmt88T5gNRzwLVu
A671GXCtw4BrvQU8UVexRF3FtK4CrvUTcK2TgGs9RMcr9Q3T+obyCc/U2ah7
SD3NqKdJ3cyow0h9zKjnSB3MqINJvcuoL8Gnno/AJzj1LqlTRT9SjzLqUVJ3
CjulvhTjkjqSUUeCN36LvLf0z/tePqxtaMP27NyezW8Nm/9W8PaH2y76eEO/
HdmvHp3ad/BPyvohdeVPHHLwe/MWvxm8rV0+64J+F7yRrRk+4J6OKWU9cLfX
Uf/wXMtfh83vCt6u9TrV78QP73A7D83tL/0QOz88/Yyzpk3cFrxh5+Ujf/7v
Y3p1BW9qJ7y1up1nLfrH7R1T9gRv2Fms7+8Eb/PnnD9j9ujNXkcq4ye/xX6h
jJ9v9n5669CGLVnf66as7TmyK3jrOW/DgQ39tmbD/VwD3o4ZfehprbO3Znue
fmbo4v5bg7ez+l4wot8FndnB8x4ZMHHq5pjXX37hRzePbu3MHrpxw3+M6bU5
+HzK61HnSPxsdvtfffnXzw58bEPwucbtX5f71evBJ/Z/c/yO7r1Gbg4+sf9i
tx8+sX+1v3f4xP5FL4/vmrd4d8zrr7j92z/1vf0G/6TkeZ+vPPGL0a3t2VU/
OPxPV7xc5gOf+nDtzNmjX/fzlx3BM7993E/gedjX/2X30IaNXmfoCJ5H9Rj3
iYZ+Hdlpm8/6Qf9x7cHzj/7rqcGtszuy63c/fl+fprbg+d6Rr13e74JNWd/f
jBwweJ9yneryetSTkg/s6/Z/YtC4528ZvDJ4PsrtL86tWoNn7P9qHgfagmfs
v9bth2fs37H8tYv7j+sMnrH/B9fd1q/XyJ3B8xS3/+Q/9b98Wvdynbo3n0dr
/VyjzG8X5PNlndcPt4R9xbxYn/U8pOvMETtfD575Lfa/rwXPjz+45oOhDW3Z
4rs2nre4/5rged7Qg45p6Lchu/PBOfv1GrkieF751hfOa529wetIy2SdavX6
f5nf3uf2F3FgcfC80O0v5vvS4Bn7i3m9MnjG/vfcfnjG/uMHPXBbR5+O4Bn7
zxlw8p97nLoteF7l9m/6VrfnBp5Y5l1H5u/91eyk3R9f0jWm3K9dnL/fZdnK
2/7t4SuGdwTPxXtcnr03feO2Hqe2hX3FvF6RHZmfg68Knvkt6gxLg+dinq7O
vpzP08XBczEf13g8eSF43un1qJmyXzvK7R+d++3c4HmY239N7p9/DZ6xv/DD
JcEz9vd1++F5tduP/8Mz9k+aeXf/ETs3Bc+D3f5z8/x5R/B8YW7Pwmzpc4N6
Th2xVfLbRdnvz/zwyMH7vB4898r7fzFb9Fyfof3HtQbP1+X+tjj7XK5PaAme
F+V+9VLWK58Xfwueo66T13Oy4Hl+7idLs5/lfj47eH7T61HPSP1huNtf8PlI
8DzT7S94mxM8Y/+vcn4WBc/Yf6rbD89/dfu75fuptcEz9rd6/IfnZrf/qde2
vTRvcWfwvD63vyH74YNTz582cYvs16ZnV/dd/cCYXmWd54bcnqeySTfOm9fj
1NXB8x4/fy7WqSXB87P5eGdn0/P3tSDsuz7vZ242KB/XLKmb8XtJ1M16zCjs
PCPvf3Lw+a7bOTjHnw0+b3I7j+3X0bfXyObgEzvPdjvh82m3s9hfrw4+R7ud
x+X9tAdv/dyuQ3ydqtYT5trx3h7eHin693y+5G2Ln88PEd4uK+y3fm4/vLUV
47Vzfbzwtc3rS78XP4x9bR4Pfxu8fdvtPMX5h7eH3c6H/H3BG3YOFt6ucDvv
dn+At/Vu51XuP/BWxNulNtP9EN6OcbvWut/C27zCz71usDZ4u7KYF647Kud1
j2Ie2WSfR/D2aDHvXHc0J+b10GKeet3pkeBzu9eRZkj8/Ivbf4fHgcgH/Leo
32bBJ/b38DgDn9g/UOb1Pm7/Ao9j8In9v/G4x7w+3+1f4nESns8s4qoRV+F5
vyIOOz+bgmfsJW7D8+NFnLe+sk6NL9YFY12A5yJuLzPWEXg+olh37Du+7sDz
KK8jPSj5wCC3v5eva/C7r9s/1NdB7Ob3ZF834Rn7D5d16la3/x1fl+EZ+5f5
Og7Pfd3+E33dh2fPc4w8AZ6zIq+wcz2vgOfHijzEyEPgGXvfk7xrZ5HneP1t
ZfA8v8iLrI/nRfDcUORR9p7nUfC8w+tIj0h+u8LtP9rzNHj+i9t/h+d18Iv9
L3geiN38vi1515tu/36eZ8Iz9u/jeSk83+P2j/M8NvLbIu818l54vq3Ik22s
58nwfFWRV9t2z6vh+aIiD3f/LPcR2Iv/w3OR771u3/U8H559X2OH+r4Anp/w
OtLZsl9rcPsP930HPN/q9l/n+xR4xv7P+L4GfrF/lOwj+O3t6xE8Y/9pvs+C
5x5u/5W+L4Nn34ca+zh4LuJJp7Hvg+eji32irfJ9IjwXcWarXST74p3FPtTY
h8Iz9pK3RN5V7HOtxfe51Tr5Nq+Tl3WG4W7/NN9Hw/MZbv+Bvu+GZ+zf5ft0
eMb+C2VfjP2Hex0Au/kd4HUDeJ7n9v/E6wzw3Ou0vpNnj+6yk3+98I89nnk/
eEZ3Rr0CntcU9Q2jvgHPC1y/p3Wbp4r6iV3m9RN4nlLUW+wDr7fA5zFeX3pX
6l093c7DfLzwiZ1Pev0HPrETf4BP7DxU6jYz3c67vB4Fj9g5xOtXwlsGb/jJ
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
m12HCo6elvtUmm9wLwic+03cY6mel3XY284/ODpwdMPg6JzRv4Kj40WvCU4c
i3tons9wH417SuDct+JeDTj3g57weyDgL3kcRv8Njl79665vBkePjc4YHL0x
ulhw1gV0nODoOYmD4OgPubdGnsY9O+5fgXOPjPtCoa/39Y77LeDc0+E+Bjj3
Sr7nendw9PnozsHRn6NLBkdfjY427rP6+o7uExz9KjrFOM/y/IF7ccQB7sdx
jwuc+1zcOwLn/hH3ZMC5L8O9DnDud6ALj/v6nnehYwZHz4zuFhz9LTpRcPSi
6BrB0TdyT1LjMPcfdF243+MPeUvN83nuAYKzv9vjcQmcexPf8rgEzr0A4hL5
BvcxiUvg7DvGeFyK+68+X7hXAM79AvTx4OjkiUvkGxqXwC+WuATOPbtdHpfA
z5a4BM69hqs8LoEPlLgEjp6ce6fMY/aJxKW4F+XxirgEzr0/7qeBs28lLoFz
P+Vyj0vg3L/Y1+MSOPcIiEvg6N7RZ4Oj0yb+hB7T9+nEH/C4B+rxB5x7i8Qf
cO7Z9fL4A869sBs9/oBz74b7JODcKyH+gHM/gvgDjp6f+AOO/pz4A45emnut
5CfUbbiHGXmL13m4NwhOXYh7buDUkbiXBc79LO51gHO/g3sI4NxHQDcPjn4e
nXfU5byehi4ZXPXJmmduk3266FStek79W+oJkV9RT0Avq/rJU/3fg6PzHOD9
K07+FPuC7x7/65qV99zBD9//ksdqE8rvMICT17Hugo859sOxtVpZH4l7Hm+/
++PahHI/rPVD4ib4Cm9PXNP+iSPgu9we5qHaj1+C95fxhk7/hr+Prk14I8YL
vv1nI/+zVtsa4wUfN+HTU2oTSp2H1gN5r+CfzO0pz0HB18p9c+2f8YJ3uj3V
e6ObszPcfsYLforo6sF574wXPl5cMPeh2oSNMV7wS+V+B/jY/L2U63fUCXM7
V4f94H/z/rEf/BC5fxH32n1c2A/O+8VOxnGon0NhJ/j6nOcy/wAvxlXeywPH
zoinjsM/9oDjhzw3vruTt38xngte2LMg+ge/2d87/YPj//TDczbk/TwX7cGZ
R9XvvDU21f/OW2NT/e+8NTbV/85bY1P977w1NtX/zttH+03XX1X11Y1N6HOq
33NrbKr/PbfGpvrfc2tsqv89t8am+t9za2yq/z23xqYThB/iFvMXfsC3uZ/D
D/jX3K/gB3ydv/fI+x1f7+8RHsBXOQ4P4Ku9H3gAv0T8GXyr2wkPUd+QcfH8
MT6vo17v+FqfR4wr9Bvu54wLfO/z1fvg4K0yLvDN3g/jiu9z+HMZF/hNbifj
qrYv73uCL/d5wbh4/iHuJ4wL/BT5ngB4p8zruMcj7wX8YO8f+/XeKPaDaxyI
+9keB7CT5/SWuAfeKnEPfIT4CfgiiXtxj1niHrjGPfobI+sCeKf4YdzDkzgf
9U+P8/TDv8Nv47sTjp/k6xpxT9c75rnq9mNeyXpNP7ru0A6c/IH+Va8e93Md
J27gl+DwxnPxU/KuuD/gOPkJ/x6cdRx7VNeNPeDEK+yp6qtfDf8DZ75gp65T
2AlOPhP38hy/VO5Ng7OOY7/qpbEfnLha/Z7Pyoy4FPPT8VPkvjN4b5mnWl+q
3lN7JfJbxgu+Tu7jg4+VuAq+XuJqfJ/P7YcH1TPDQ7Wfch0B3yv368E7Jd5W
v4NRxltw9U/d78ADuK6b4Ntl3QS/VNZN8PWyboKT/8AD+F75bgO4rjuRl0nc
Btc4Ca5xDPwwiRs8f4X4SXU9LfMV1WHG92ccJx+I/ZWPQ+cdOPOO/lV/SP+x
/5B5BM66zHM1/vNc8E6JS+B/k7ikOr04Z3X8EolLMV8lLoEfLHFJ15HQhTjO
vgk7wfFn/BNc7Vf9G/aDb5U4Hzo3n0fYr/foGQ846zLjwu/YzzIu8FPkO2yx
r5J9Lnin7HPBbxb/UR1a5KmyLoe/sr+Rfa72z3jBt8g+N/IFtx8etB4CD1Ff
kv0+uNY3wHdJfQNc6xvgzGvmv9Zb4Edx+AFfLnUP8Juk7qF2wo+OK76H5vhJ
kv/oPdDQqzkOn7TXc884N3WceBv1Nf//eu+Y9syv0NU5Tnueqzq92Md6/+wf
q98Jb2zCzv8DKCOhbg==
      "], {{{
         EdgeForm[], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
mBnB+lE53eLgvPBB+epC+6musiZY/0rPPx2cRz6Q+V7nFO9L8WpSdMz6kf6t
ZE2p2DU9On59r7HJGvcHrddkTfwTvDpZvyp2bMhdZ0jYNiXrVMWLTUUcqRj8
DnLFXtquijOZ6waVg2sHelfzi99VDeGb3DHlXfq1xRzehbGVaL9lfkaqM6rG
qHiluoZ+6/tMjsdaZSvna5isgbUuZnL8UuZz6FxB707XDayVHuA8VwfrduWP
rUvOJ3/me404viHzteseSsF53FXBOla2qrQdxXyrUsy5xsnXtwW+Fduxud91
c/gFuBL8B+0LfY/2XbB+2Qh/G+wXN2TO3Y7meg7Lfe16Bp9nrlVO5Td+wbaG
z17K7Rt1XfIp5xXvfXbxrqvIX+qdFnPg1ug5Ux1bN3h4sTZnROebykeWcNyL
sSui56fqPOLK8F7w6OAcb1jm+XN7dBwvXzznzcUz0Tz4oHiP5Yvnf5zOwX2d
nlsH7hrtP6W3K0b7TK27k6NrKVprp0TXUhQHT4+uaSi+DI+upWjNDouu1ZzK
+Ztw/uuKWHlGdG1EWuif3HUkzefjo2s4mvPHRtd2NOeHRteC5BOOia69SKN+
n7um2obz/0arl1tr/Z277iT/fFR0XikNXD06jqgO0KHk2sF+0l/STrn14UTG
PJ15neh5yV8p37khulZctZh7WjulguWHNxfPVPNBOn9CdC1a66uC1ljmdVam
4J3FZ3qPVYrf0nuR5knRuao0UoyOofK3C6M1m3Tv5Oh6gmKb6iCK49Jgpeic
UbprF8XdzHpINTI926+D4+R6uFpwLUl1JOVSFaLjbz1s24N1o2JuXew9M+eO
+0fnPodgfzIVsTb4+bXN/DwXJu83KEbvFZ37aJ/iX2yNMu9fqIgqfSgddGG0
NlMtq190Dqs6dt/ovPWYZD2mWo3qw+2jc96jk/2//I3q0qpZj8hcr+4Unf+q
Bt47Oj9VLtssWjeq1t0zOq9Uvf0PaaLMNdgfc997U3iWrjX3/ku56HxH+zJl
ovOXwcHzTs9HWqhytL5VLbpS9DORjqoSrWk1Vxcl10+lSU+NrhsM4zwtOR6S
WSPtEZ3/SiPVitbeii1XRmtU6fTrojWk9hF+z51rS7OqnqI5r72ksoxpmVnb
nhMds1Qz3z1aw6uuXhPulLmOoTj4Xeba+CHRdYaXkuOp9q5Uqz84OveUHqwW
nUt+yW8+ntuHS5P0Zn29zXEdzR/ay5k1fh6tIZ9XfM29NzSB7w6GL8+cu3+b
O3+vUKwXrZUl0h2594Celb7I7asnBV+3nuE/ma9d/rYu9qVa04Xth8J+CfbX
ctdANgRrKemTckXc0Fr+ANuHhf/fiv0JeF3mGH1cdC36eq253BpDsUl5h2o9
0pb7FM9EGnLv6LxeexANo+sM0reN4MMy70c0ia5FNEiuyXyTWXPWi65FaJ+l
cXStQDX5ptH52hiuoVPueKH9FO3BqG6jGv5+0XUJ1fxbRtciDpS/L9bgRvgh
3WfmvYAW0XNPtfpW0XWM3vDi5H0U5fF/5s7ltRfQOroeojzrzOgatXLPL3Lv
5Sm3GkmbkTnnOiu6vq19IMWxr4o5oJipuKs6teKXtLfi9YCSfZDe+7bCr0o3
611IL6g+Uz96z0W1tROjdaDend6p3qNy5C259xNVG2mg95e5TvVl7j3ET3LH
aP2uch7Fdj1/aR7N3+3FPK9azFv5vX+T16p8ZvnoZ6JrV41a51Ees2fhS6Uh
60TvQ2luf53b39aUJi15Lko36138VDzz8iW/V/m3wSWvDfnAw0vWLtJImvOa
19qnuDw6P30D26XBdUvtWVwRnavq+ak+oGeoGvJD0fmFassPR+tw1ZxVg5Ze
1R7NzdF6VXujt0TrW+2B3hidV6pu/GB0PqJasWrHyhdUM78vun6i/crHo/Ma
5ZhPROcRqic/EJ3XKHd7LFrza+9mFDwx8x7N2dF6+2Gu/yLubU7mfcxroll7
teOj82VpjM+T693PBWsN7UeoNn4TYxZm3s+9NjoH1/7LBdF5t/Z9zocnZ64P
nxDti2YFayLZtb8zIlo3Si+9n1yzPol+XfIekvZuxjJmZvF+tSe7LbP2XFro
T+1haN1qzSqvvzi6Vq85U7uITap9/SZtkrk29UvuvXjVFkZH14pV97g6eq9Z
tc020fu/ilnbkte56mk7cu/1q57zc+69ftWmfs29/6464W7R+a9qs1tz793L
V4fo8Vr7OwufrPxiXPS+tmq2X+XW/6ol1qD1z1z3GBNdJ1d9b3vu/ytQDfCv
3PuDem77lvxeVR/+Lvcet+obl0TvA6p2cWn0HodqHedF72WoJrkt91656h6X
cbwgc33yh9z/5/A/vfsBpQ==
            "]], 
           Polygon[CompressedData["
1:eJwtmnfgV9Mfxu8993ysyE5SNJQoGrSQhMxIe6DSTiqrIQ2lrGSXkRINZDSt
iJA9GkZUMn5I9h7N3/PynD9u3/u6534+fT/3c877ed7P+VbpMbjNoJBl2Rj9
E/WzV5Fl/XQ+Pc+yW8WtxMs1cJ14hLibeIX4bvFE8T7iarr/NHET8QTx/zT+
oniBuI/4A/EM8e3i8eLrdf8L4vniquJFGu8r7iQeLP5E/LB4qvha8VfiZeKF
4ht0/oqOCeJh4j01/o/4FHFDcTWdL9Xxkv6PTeJN+vmDeB+N7y1uo/tfE98g
HiluK35dfKN4lHgv8b/iFuJG4nbiN8QTxaPFe4s3i08VNxb/qvf/SVxZXF58
ocZXie8VTxJ3Fb8nvkt8o7iD+E3xLeKx4k7it8W3ia8R9xa/L75ffJu4tfhV
8fXiq8TldN5Z/+fN4qvFR2j8OPEgcXc+v3ix7ukn7izuKH5LfKt4nLi7eKX4
HvFN4l/02h/Fh4gPEPfV+IfiB8R3iAeKL9E9c8T3iPcVz9N4J/EZ4v3E8/md
xGeKv9e9W3S+n459xFM0vknjK8Uvi28WfyN+XbxEfKf4br3mPfEy8Q6d/6rx
Y8Q1xCWNzxWfKT5OXEFcS/d0FZ8rni3+XuOfiVeJDxIvEHcTtxbvLn5MfK74
JPGHeu3TOr7U+d86PtD5+zr+1PlfOqLuf0T3n6H7jxWXET8qbiVuLt5NfJDu
P0d8oniW+GHxBvHKtB6e0P0dxaen+cL66CA+TXyJeK3GHxHfJ/5TYw+IjxXX
Ev8uvl/cWHy4uJ/u/0j8oPhO8TTxDN3zkfhN8Radz9R4M3E98VbxLPGJ4vri
beLZ4ubio8X99fo14pniyeJB4o/FD4nvTZ+Xz9csvT6IH4pe38z3XLxv8Pxn
fRR8fo2fntb/b9QOcSNxTfEf4hniJuIjxGvFK3X8zmt17S+dP6jx43ReW9cm
6/2+Fa8Qv5TW1zRxQ/Fh4i/FZ5ey7Fn93EW8WT/L6DhB43XFZfX6v3X/yeIG
4uvEX1MPxIvEo8Wfi58Wz+X74VzHcPFF4nV6r0nR85d6sUF8i7i8eF/xp6w9
cbk0vz8X3yauKN5ffKnef514rniauJl4/5LX54XiSuIdGm8jPkV8iDjXeDvx
qcxXjf2Yu17tJd5DfHuqL6zPHrp/tXiq+GZxI/Heev1F4gvS/Gd9tErz/XFx
O42v0LW3qad67V7i/ho/X/yZrt+qaxVYs9S/NP6Crn8rPlCv36ZrZ6f5zvrb
Hj3/WQ9VdX6W7v1Yx1ZxFY0XJc935v9xzBfxxeJu4oMLFrXqrrhFqhd36z3q
iKuI62v85GA9oH7VE++p+/skfbieZy++VNxTfIrGDxBfJu4lPl18oPgKcR/x
meIK4iHivuKWzG/xUHE/6pfe71Ad2/nudDTV+H4aH5jq6aZUz47SUZn5lPTl
E12/RFxH9++h+3tpvIN4o67fpfEjxBXF5TW+VdxS3ExcV1xW9/cWdxSfKi4v
vlzcW/w/vf4O3V816clX4jv5HcUHio/U/WV0fw9xO/E3Gp+i8Zrig8RfiyeL
a4griNvr/nN1/6u6PkbcRLyPeIDGu1LP0/N8WePfiYdr/DNdW6jxWZn1v43G
39T4AHFFaov4Xeq0eJjGN+jaAt0/M9XHv6LXI/VoY2G9fgOdYf5QS/X6t8Q/
i0dp/GqdP6X7H8m8Dvm/fsq8HnfV+J96TdO0vn/Q2D3iuuKq4h/F94rriaul
+cL8GZq+7zHiLzT+jPhR6rPO25c8X/EHXTT+rq7dofEJ4qPEu2u8p7i9eKj4
U43PFz+YWb/R39d0XCa+Qjxc509ofIZ4iHi97p8nfiDVy99T/aIertG9z+n4
Wuf/ZhRB1UyNN0j1bRHrO2nS5+LO4neoARofL64t3k2/34XituLDxbuIL0h6
eJ64rfgdvf7azP4qlqxH6HWt5BfQxzbiyuKg8fZJn8qJt7CmxSeIPwqutV/p
/B8d0zX+ncbXaPwtrvE9io9M66O6xkt6vy7is8WHiXcSnyc+J9XrX6LXU5Wk
L+hJo6R3W1I9r5O+35oa31mvP1/cKrPf2bVk/Uffdxb/ofc7XlyHeopWaXyV
3uOPVE+e0rVhab1PEt/K9yd+NtV76i2eAB98i8Y3Ml917TnxfF38JrdWoVkL
xBt1HnO//wLdf6b+v/XiFZm9zS7Rr8XjUOuoeazVOsFatLOOxZk1aS7fs36G
3OvpleDaso3amFmL1qXf7afctaqD3nNM7ppVLdXf0blf87zOa+l8M7+LjuaF
5/syXe+R2UvvFK2FeGq8einaW+PZ+ew8g8fEtwd7g62FvTgeAW++rbB3waOz
tmL0/awx1gqNBLWANYMWoolo1RXB3md7YW3EA6HFRfTaRJO/1PnVafyaYO+4
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
            "]], 
           Polygon[CompressedData["
1:eJwt13f8jWUbAPDzO+d3FKVhZIVklYSIzLSUESGjjIxQisiMSEZGNChNpayW
0VK9ifQiTaVdSEW9kvZQva3v1e2P6/Nc1/e5nud3znnu577vX5X+wzpfkc1k
MhtFXnyj2JDLZP4qyGTKi9JsP3uFHexYm1ViX8v/y/5UlxWl2D72AvtDfZQo
yU5Uty7MZFo6N4JdzH6Sb+Z5xxqsApupPkjfbPY4W8p+kb8c7liLVWSH6Vmf
S58hPsta5+qo2/DT5CPZAOf+kL/KD3Wsx6qy69WX6psTn52tZn/JX+eHOdZn
1dnP8pdYEcfj2NHse9edKA5nDdjJ4k/5a/qKO56krha/i57jRYZVYpXFHPVK
fdvwY3xr/I7qc/ip8iv19Hcux7aIUqwxq8VmxPdiLcXz8fuKZ1hD9cniXPnZ
bL9jA1FJfoZrz4zf2vme7BJ2j/om93tL3UMMYgvY3eJb+Ua9f8d3jWenb4i6
l74YHEvY7aw0e0/UYG1Zc/aj/EVW6Fgtxgz7Qb6J5RyPZeXYTTF+3G9ufH62
nBWyN0Rp1oSdwEqq3xHVWGvWlF2u7u3aYWwpu4OVYu+K6qwNa8Z2yZ9lP6nX
yIuy29XFXHtX/Hb8SVbPQB/C5rH/sGfFNvVFYjR7RP2wGOHaPmwMW66+17XV
2RnsFHYZ68VqsjNZY3Y5683Gs/7sGvYke4CtjmclWrDhbJiooe901ogNVvfU
N5VdwmawtWwVO561Yk3ZUNaHjWR92Vi2gi1k69Xn8LPF+fLzYqw7tlO3FV3l
ndjV8n7yifInXLvMtc/G/XkT0UHeOn6f+F7qU0T7uHe8E/Kz5E3kQ1x7kWvL
qbuJzmw6G8cm6xvIrmNr2Ao2hQ1i09lzbCX7TD1ATMumZxHPZI26ud5m4jx5
m3gG8tnyLfI3xYfxTqsfiDEjfzjeZfE8axWfUXSWd2C3yYvK75Svd/8n9K9T
nxnPU3SSt4/PFO+kuoXoKG/LqshPi/dLPsi13V3b1Bgaw+6PuYK9LGbFPeKd
jPs5/5JzE+QX80ny1XoedG0F9Q98hvxW9lrMFTE2XPO++gPxBlum5xD+UHxf
tkF/L3Yh6xvfKf4mqxvPlp3ORrGBrDe7gPVh89nMGPesHTuDjWaD2Avx28Yc
LbrIOzp3i3y4/Pb4PfU9H2sDe1McxZqy2uzXmMf0FXNsweqyMTGPiHHsPnYL
u0pdoO9qtojNZ9/FnM6yjg3jPWALDsydBdk0v8Y8+5v8BFbUsbm6jr4rY30S
I9ld7EY2LNYdcSW7I+Zc9nesDa490vEs1pAN0rNfDGY3s6ns2Hx690dl03wY
8+I4PVk2gS1W36bvYFaPlWXtWItMTNq+NyvBWrFGaGwuJjdzALuf3aqsyj6I
OZtdwNpm0nu1PZfm7yPz6R2LZ7E7l97bcvn0XKqJD0VDdqFr28V3c/9msSax
TqxzzN163he1WcdYA/Q1UH8U7wK7lPVgXdRfiW4xPmMeYssOrG9HZNPaEWvI
+Xr2xpwR84X6Cn3F8mkOa876sn7xt/V8GeOHjVcP1XeUurG+41hP1p6ViXmE
1WQ92LmsUj6tRwPZHHZDzIH6vhcXsWnqsfr6qH+MOYvNZBPYYPXvYkiMWTad
Xar+TVzO5rHrWA/1d7GGsKlsDOun/jneTXY9u4Z1V38terBr2UjWX/2LGMBm
s0msq3qf6M4msuGsb6w7MeezWWwiu0D9TazBbDIbxS5UfxtrK5vCRseeJsaF
3+AYdj47ix0ez5tVYV1YKzac/SlGsDvjt2KPHxgHdbLpWcQzOS6f5tOp2bSO
xXpWznVNWS3WW32eay9hv4rL2Fw2jZWN+T/eQ9aLdcik9WRXLs2jZfNpbdkb
64C+3/WcGPscfUfwRuxY57qys9mKA/uSytk0RmOsTtKXY5PZg/G+6buWFbIp
7CF2DyvK6rPyrD1ryQ5iJ7Fy7Fx2KivCtooyrFl8nkxa7z7PpfmsfD6tfZ3E
nlgX2Th9Q/TNVV/hfvPZq2wt+19h2h/ckk3zeszvl+n7vxiaTXN2zN03R63v
VvYKe47NirmF3cA2sKfYfewqtoR9FPM9W8TGs2VsO9vCdsQaEWNGXbLg36kl
8zF7KsaMunTBv9NKZid7Osa0ukxB2rffH3Ouk0ud28ZeZ7Pj2bIb2Ub2NJsT
7wa7iW1iz7B5bBi7jb3G1rE9sY7Gu6Q+XhzGDlW/JY527rSYn1lx9duiIjud
nRy/n3xdjC11TVGc3RHj1t9Y4NxbbBO7M+ZrdjfbWpD+B7kr5nV2D3ubvcgW
srFscaz57NUY9+w69hTbx3ayvYVpTV6UTWtorKUL9I1mC9m78Sz13c1GsXvZ
O2xzJq3bX+TS3qhCPq3hn8ifibko3h9RRN+nsSdiP6griINij64u4n7XO/cY
WxJ7KXlN9mNB+h8g/heoqK85q+tc/5hf9U1neTaLPcoWZ9J+/5Nc2nuUzqe9
f4nCtP+PPWPsHddn0z5lZy7tjUrl056lrL4yYjMbq29wzLG8BavHLmZdMml/
9Fku7XnK5NNeKfZ+O3Jpj1cin/aBsQf7OJf2giXzaT+2W74m5k/3qiKKuV9l
9an+xknODWBdYz/GJrGVbHc8j/j/h01jq9lX7GP2eey7Yp5VVxWHsC/YWrZf
XV0cyh5VT3Xtk87tZTvYMawlq88Gsm5sFZvCnmBfsu2ZtEecwB5hnxak/eIj
7Fq2in3OPsik/9Mms8fZnoL0P9tidnXsM9kO9gZ7iF3DVrBd7D32IJvIlrPP
2LvsH4mvz2g=
            "]], 
           
           Polygon[{{821, 987, 581, 702, 1158, 820}, {835, 993, 588, 706, 
            1160, 834}, {1045, 1111, 600, 397, 396, 
            709}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
         Line[{275, 494, 1165, 276, 507, 302, 1264, 522, 317, 1269, 537, 332, 
          1276, 552, 347, 1286, 567, 362, 1297, 582, 1208, 377, 595, 1220, 
          391, 1309, 608, 406, 1313, 623, 421, 1318, 638, 436, 1325, 653, 451,
           1334, 668, 466, 1345, 683, 481}], 
         Line[{277, 495, 1166, 278, 508, 1176, 303, 523, 318, 1270, 538, 333, 
          1277, 553, 348, 1287, 568, 363, 1298, 583, 1209, 378, 596, 1221, 
          392, 609, 1230, 407, 624, 422, 1319, 639, 437, 1326, 654, 452, 1335,
           669, 467, 1346, 684, 482}], 
         Line[{279, 496, 1167, 280, 509, 1177, 304, 524, 1187, 319, 539, 334, 
          1278, 554, 349, 1288, 569, 364, 1299, 584, 1210, 379, 597, 1222, 
          393, 610, 1231, 408, 625, 1240, 423, 640, 438, 1327, 655, 453, 1336,
           670, 468, 1347, 685, 483}], 
         Line[{281, 497, 1168, 282, 510, 1178, 305, 525, 1188, 320, 540, 1195,
           335, 555, 350, 1289, 570, 365, 1300, 585, 1211, 380, 598, 1223, 
          394, 611, 1232, 409, 626, 1241, 424, 641, 1248, 439, 656, 454, 1337,
           671, 469, 1348, 686, 484}], 
         Line[{283, 498, 1169, 284, 511, 1179, 306, 526, 1189, 321, 541, 1196,
           336, 556, 1201, 351, 571, 366, 1301, 586, 1212, 381, 599, 1224, 
          395, 612, 1233, 410, 627, 1242, 425, 642, 1249, 440, 657, 1254, 455,
           672, 470, 1349, 687, 485}], 
         Line[{285, 696, 698, 286, 512, 1180, 307, 527, 1190, 322, 542, 1197, 
          337, 557, 1202, 352, 572, 1205, 367, 703, 705, 1213, 729, 707, 1360,
           709, 396, 613, 1234, 411, 628, 1243, 426, 643, 1250, 441, 658, 
          1255, 456, 673, 1258, 471, 1350, 718, 720, 730}], 
         Line[{289, 501, 1171, 290, 515, 1181, 310, 1267, 530, 325, 1273, 545,
           340, 1281, 560, 355, 1292, 575, 370, 1303, 589, 1214, 384, 602, 
          1225, 399, 616, 414, 1316, 631, 429, 1322, 646, 444, 1330, 661, 459,
           1340, 676, 474, 1352, 690, 488}], 
         Line[{291, 502, 1172, 292, 516, 1182, 311, 531, 326, 1274, 546, 341, 
          1282, 561, 356, 1293, 576, 371, 1304, 590, 1215, 385, 603, 1226, 
          400, 617, 1235, 415, 632, 430, 1323, 647, 445, 1331, 662, 460, 1341,
           677, 475, 1353, 691, 489}], 
         Line[{293, 503, 1173, 294, 517, 1183, 312, 532, 1191, 327, 547, 342, 
          1283, 562, 357, 1294, 577, 372, 1305, 591, 1216, 386, 604, 1227, 
          401, 618, 1236, 416, 633, 1244, 431, 648, 446, 1332, 663, 461, 1342,
           678, 476, 1354, 692, 490}], 
         Line[{295, 504, 1174, 296, 518, 1184, 313, 533, 1192, 328, 548, 1198,
           343, 1284, 563, 358, 1295, 578, 373, 1306, 592, 1217, 387, 605, 
          1228, 402, 619, 1237, 417, 634, 1245, 432, 649, 1251, 447, 664, 462,
           1343, 679, 477, 1355, 693, 491}], 
         Line[{297, 505, 1175, 298, 519, 1185, 314, 534, 1193, 329, 549, 1199,
           344, 564, 1203, 359, 579, 374, 1307, 593, 1218, 388, 606, 1229, 
          403, 620, 1238, 418, 635, 1246, 433, 650, 1252, 448, 665, 1256, 463,
           680, 478, 1356, 694, 492}], 
         Line[{299, 700, 1358, 701, 300, 520, 1186, 315, 535, 1194, 330, 550, 
          1200, 345, 565, 1204, 360, 580, 1206, 375, 711, 1361, 712, 1219, 
          389, 715, 1363, 716, 404, 621, 1239, 419, 636, 1247, 434, 651, 1253,
           449, 666, 1257, 464, 681, 1259, 479, 722, 723, 724}], 
         Line[{480, 682, 717, 1344, 465, 667, 1333, 450, 652, 1324, 435, 637, 
          1317, 420, 622, 1312, 405, 607, 1308, 390, 594, 1362, 713, 376, 
          1207, 581, 702, 1296, 361, 566, 1285, 346, 551, 1275, 331, 536, 
          1268, 316, 521, 1263, 301, 506, 1260, 274, 493, 695, 725}], 
         Line[{486, 688, 1364, 719, 472, 674, 1338, 457, 659, 1328, 442, 644, 
          1320, 427, 629, 1314, 412, 614, 1310, 397, 600, 1359, 714, 708, 382,
           587, 728, 1365, 704, 368, 573, 1290, 353, 558, 1279, 338, 543, 
          1271, 323, 528, 1265, 308, 513, 1261, 287, 499, 1357, 697, 726}], 
         Line[{487, 689, 721, 1351, 473, 675, 1339, 458, 660, 1329, 443, 645, 
          1321, 428, 630, 1315, 413, 615, 1311, 398, 601, 710, 383, 1366, 588,
           706, 1302, 369, 574, 1291, 354, 559, 1280, 339, 544, 1272, 324, 
          529, 1266, 309, 514, 1262, 288, 1170, 500, 699, 727}]}, {
         Line[{732, 1036, 493, 731, 1165, 949, 733, 1166, 950, 734, 1167, 951,
           735, 1168, 952, 736, 1169, 953, 737, 698, 1063, 1357, 738, 1037, 
          1170, 954, 739, 1171, 955, 740, 1172, 956, 741, 1173, 957, 742, 
          1174, 958, 743, 1175, 959, 744, 1358, 1038, 960, 1039}], 
         Line[{746, 1064, 1260, 745, 507, 747, 1176, 961, 748, 1177, 962, 749,
           1178, 963, 750, 1179, 964, 751, 1180, 1065, 1261, 752, 1066, 1262, 
          753, 1181, 965, 754, 1182, 966, 755, 1183, 967, 756, 1184, 968, 757,
           1185, 969, 758, 1186, 970, 759}], 
         Line[{761, 1067, 1263, 760, 1068, 1264, 762, 523, 763, 1187, 971, 
          764, 1188, 972, 765, 1189, 973, 766, 1190, 1069, 1265, 767, 1070, 
          1266, 768, 1071, 1267, 769, 531, 770, 1191, 974, 771, 1192, 975, 
          772, 1193, 976, 773, 1194, 977, 774}], 
         Line[{776, 1072, 1268, 775, 1073, 1269, 777, 1074, 1270, 778, 539, 
          779, 1195, 978, 780, 1196, 979, 781, 1197, 1075, 1271, 782, 1076, 
          1272, 783, 1077, 1273, 784, 1078, 1274, 785, 547, 786, 1198, 980, 
          787, 1199, 981, 788, 1200, 982, 789}], 
         Line[{791, 1079, 1275, 790, 1080, 1276, 792, 1081, 1277, 793, 1082, 
          1278, 794, 555, 795, 1201, 983, 796, 1202, 1083, 1279, 797, 1084, 
          1280, 798, 1085, 1281, 799, 1086, 1282, 800, 1087, 1283, 801, 1088, 
          1284, 802, 1203, 984, 803, 1204, 985, 804}], 
         Line[{806, 1089, 1285, 805, 1090, 1286, 807, 1091, 1287, 808, 1092, 
          1288, 809, 1093, 1289, 810, 571, 811, 1205, 1094, 1290, 812, 1095, 
          1291, 813, 1096, 1292, 814, 1097, 1293, 815, 1098, 1294, 816, 1099, 
          1295, 817, 579, 818, 1206, 986, 819}], 
         Line[{822, 1041, 1207, 987, 821, 1208, 988, 824, 1209, 989, 826, 
          1210, 990, 828, 1211, 991, 830, 1212, 992, 832, 1159, 1213, 1059, 
          587, 1058, 1044, 1060, 1366, 993, 835, 1214, 994, 837, 1215, 995, 
          839, 1216, 996, 841, 1217, 997, 843, 1218, 998, 845, 1161, 1219, 
          999, 1061}], 
         Line[{846, 1048, 1047, 1361, 844, 1307, 1109, 842, 1306, 1108, 840, 
          1305, 1107, 838, 1304, 1106, 836, 1303, 1105, 834, 1160, 1302, 1043,
           833, 1365, 1042, 703, 831, 1301, 1104, 829, 1300, 1103, 827, 1299, 
          1102, 825, 1298, 1101, 823, 1297, 1100, 820, 1158, 1296, 1040, 
          1057}], 
         Line[{848, 1049, 1110, 1362, 847, 1220, 1000, 849, 1221, 1001, 850, 
          1222, 1002, 851, 1223, 1003, 852, 1224, 1004, 853, 1360, 1045, 1111,
           1359, 1050, 1046, 601, 854, 1225, 1005, 855, 1226, 1006, 856, 1227,
           1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1363, 1051, 1010, 
          1062}], 
         Line[{861, 1112, 1308, 860, 1113, 1309, 862, 1230, 1011, 863, 1231, 
          1012, 864, 1232, 1013, 865, 1233, 1014, 866, 1234, 1114, 1310, 867, 
          1115, 1311, 868, 616, 869, 1235, 1015, 870, 1236, 1016, 871, 1237, 
          1017, 872, 1238, 1018, 873, 1239, 1019, 874}], 
         Line[{876, 1116, 1312, 875, 1117, 1313, 877, 624, 878, 1240, 1020, 
          879, 1241, 1021, 880, 1242, 1022, 881, 1243, 1118, 1314, 882, 1119, 
          1315, 883, 1120, 1316, 884, 632, 885, 1244, 1023, 886, 1245, 1024, 
          887, 1246, 1025, 888, 1247, 1026, 889}], 
         Line[{891, 1121, 1317, 890, 1122, 1318, 892, 1123, 1319, 893, 640, 
          894, 1248, 1027, 895, 1249, 1028, 896, 1250, 1124, 1320, 897, 1125, 
          1321, 898, 1126, 1322, 899, 1127, 1323, 900, 648, 901, 1251, 1029, 
          902, 1252, 1030, 903, 1253, 1031, 904}], 
         Line[{906, 1128, 1324, 905, 1129, 1325, 907, 1130, 1326, 908, 1131, 
          1327, 909, 656, 910, 1254, 1032, 911, 1255, 1132, 1328, 912, 1133, 
          1329, 913, 1134, 1330, 914, 1135, 1331, 915, 1136, 1332, 916, 664, 
          917, 1256, 1033, 918, 1257, 1034, 919}], 
         Line[{921, 1137, 1333, 920, 1138, 1334, 922, 1139, 1335, 923, 1140, 
          1336, 924, 1141, 1337, 925, 672, 926, 1258, 1142, 1338, 927, 1143, 
          1339, 928, 1144, 1340, 929, 1145, 1341, 930, 1146, 1342, 931, 1147, 
          1343, 932, 680, 933, 1259, 1035, 934}], 
         Line[{948, 1056, 722, 947, 1356, 1157, 946, 1355, 1156, 945, 1354, 
          1155, 944, 1353, 1154, 943, 1352, 1153, 942, 1164, 1351, 1055, 941, 
          1364, 1054, 1350, 1163, 940, 1349, 1152, 939, 1348, 1151, 938, 1347,
           1150, 937, 1346, 1149, 936, 1345, 1148, 935, 1162, 1344, 1052, 
          1053}]}}}, VertexNormals -> CompressedData["
1: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
FGdS3EnxJsVFFCdRfEQ4nnA94XnCnYRDCX8STiLcRHiJ/Dr5efLv5If+9ktl
QHaT7CjZT7rndO/pvtO5pHNK55P0SHolfb5O29IN90njujfnInC/V67v6Yfx
oMXQIzNQP1M7nNNC/XR6dmcgxoOvJ78NRX3mrmpchvqkPAjlRSgfQnE7xfEU
v1OcSXEnxZsUF1GcRPER4XjC9YTnCXcSDiX8STiJcBPhJfLrf/t5AZAfIr9E
/ojsJtlRsp90z+ne032nc0nnlM4n6ZH0SvpMCvGOQb3Q+Mtutx7qx2HxoyOY
37hUlVSJ+rQUpL1EfVJeifJMlF+iPAjlRSgfQnE7xfEUv1OcSXEnxZsUF1Gc
RPER4XjC9YTnCXcSDiX8STjpb9xUCOTXyc+Tfyc/RH6J/BHZTbKjZD/pntO9
p/tO55LOKZ1P0iPplfRZz0En6pFGYwkJD9TnsXdGdbuHi/6MhiWetjWvs2FH
x66+5zqIYWQYDGvZKATB4T6vznXgcbnwfMd9C+6BzsyLyiZKtWCXl5wh0i+G
4xoNi/hz1sNDtvW5dqfxrc8bEvfV83WZ0uL0alxfd2OmNa5f0bX+KF+fRYzO
VMb1l9vvfInr07r0PbS+44YP7zbURv8Zay4NGR674gNo9nLp7FIbzUSHHr7F
541+TUPwOX2mf6fnl0dN6ISfaezgmTkYn78+ZzaUfy8rTZGSxO8VR3gl4ffS
fmh/tC8Z/8pjobcXRtnpbZzdVzGG/f78Ac7mvh2C6xjIWxrh/MflVYk4n/ZP
+iA9SBy+cBD1vOSUpyrXA7PtEdqqB5KD5CJ5aF36Hlrfc2mn97gujeMlVVfg
+vn95Yfjus7HvPB9svy67lG4Pr1Xes/0fstV60c4Lr4LE0ziTab51cL0D6PP
T/MrhA5htnP5cxZkfLL1eUh1cxA+J7lpHyQ//T2tR+s4DBt0AvX20MK1M9db
2+cP8PfnhVH0/G/9LowiPe9V2mvK12cKksaauH7aneVncX2Sj+QlOSsVjFrn
j/eOmYPPJ4YOa51P54/OI51DWpe+h9anv6f1aJ0/+m3TN+lZ5dvR3IDpoj/j
6GWuVZKds+HuvisF/DN7vFc5G5/bFDWI8Tl9pn+n5zO6T8zDzzSeWOUixOf3
1yy38woTwapHZv0sxEKYes/7vFdYFnQetlWJf2ZNcZ9W47/v6TXkHD4P69sg
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
TO9ye6r/s3DMxwqY0c/CfkJWPDw7XLdvZXgZuB+f0ef55CqQsmq8L3+kkrW0
qAfcvpELx99oWLvx9/4gU5Xd6VTN3u+5P712cTZMTX97qQs//99ysh3MAhPA
ce7L6exWAdgPF1253KEWxIZSJzt/rmZLNLJlbtfz+1e0q8cgfo9mtfF9eRx3
A+seS/75nTcJiZcy//U7bzy+6/xfv/OG/4vF//qdN/58x3/9zht/fu9/f+fN
vI2Xw+1hX4yn37bxc4h/ICHhEfpfv+fG19n4X7/nxue//N/fc7vYVo9sJ+Eh
ifIL/vk9N75Ol//6PTeuh4v/+3tuhaYXDCuWVoP91bcfv2VFMygv6FR6qRTu
WTy5POZ8JQRWCmbfkIplhzuXXT+XUQ5L200wkdAUw9DUYFZy8A3rE/2iQMFG
DJPn1ml94O+7tK/8ePGct8w12G/XmLFVsDLmgcSqiAKYXz7jQucvCWzl3XOy
ts01oGN3/vy30AJ2THHBQA//BHYwzNZXQqoW/GLuHB8fXsY2TYuB0rR45jT8
rnQPnSqYP3eg9coRYuY+d4qLgeIbtnLNyFHh/Dyf2VW1UeFiJbvTf4F2bcgr
1lTn6T2V30eFvJjO4abVrCU1LPTugWiWdtTJcjS3S03bNb+Mia+At9+vy+Xo
ZrCxOsLV+YPKwWt9ydqh00Ww+3COetPWLJYTGfVEf7UIEnxOHnaILAXnlil3
ViTmsDKfoJlmmRUw7Nv6hbWd8kG7XadvfpL5TF5nnfnYUdWwa6eFu15TAgzX
WCbF7hews5GX34Xw/d5rEefNvlvKRKeZ3mi3HLarLMZpA78v5yDI0W6aiMmP
9tY6rZzFRiS1b/rC7+9cnwE/pBIr2Bjt0GLZz+lM+1zBvl3c/jRl93PcFVzF
pJSFw9ZKpbEcjQklY7kd3pH+/LztF45v0jamuj5KZgFLtm5Ff+Q0Udl528dy
OPwgP3uQdDHr8y0xwk9SCCNYfI3IRQDtpAMfreX4zj325hrfnyKQiLH+Ypqa
A3PNJzzIeFbKIoY7fD7I99tuYOcDswzfwpHZc6/K8ffjs+x6xm7+fnsqyScf
qixnh8/bqraPKWJr3QQTJNSEoFjnPU03UMwuXnL5/+o492iq0zWOJ0qM3UUy
iVqksFUnMt1o96AmHRV2uZw9mtQ+OckYUtJNiKaSkBgKtUxpRo3j5FQqGk+6
l2qasHWkIuMySsfpolKc833FWh2Lf/cfe73rfZ/n+/1+nt/7+y2d/KGSfxmy
z0QduiqJGea5PrGR/7XSQr4z9D5LLtZdOwF/qVn20sBau4nP5z/7td1OxSf7
hbishs8mOC5POCN5RJmTihS/tdTy4ttBZhlYf6E8vSpsYzkZFSjG/QX7N/nB
qH2BOK+W6095VdxVmhNVPTrFsp6f2p0dPx/1mbdlRoiRRR1/dsGDr9VUs2Z4
1JH2YTX0X1V87bZ5Dex3xWugY/Mj/j7MIT4BPjhptXOqd10jb0n5s1+RooqP
hM21CEYeSClwHljvUErh9bcsm681cOKtd4VPUT9Jbv60V/My3QyfKtU82MiX
bC8l56Ff1LYe71/7qI7bR6TvaUVO3vEhIEcX/qv1RHnv7KEGXuUZnBtZWs1R
pTttCpFDXrqPNSlQFZOLVH19pXsTV/wc0q8R/bgkPNf9OnxtweGgNcg1XCkd
qn0SeearGlPxO61a+Y9AkXesB1kNE7+3WT6U9HZv39XxhhP+n8O2aQTj/+nf
yjZ18f+zzxmI9dCcbI0crIeWbUiwFeuZEGCqhvXTgVjXWKyfcnxsTon1217Y
MejT++qtXfqZV/LkW+wDj5hTa4p9oOPWQfvFPjio/c0Q+8Z2G0rGYd8o3duk
SOxb06jBYp/p2LuI5dhn8nUvtxL7/Edt2ROcCy2RtXQ4IKco/C6ninMJHXZg
Lc6RtqlXF+IcaYr8P9niHMvtX1z59F53cZdub+tn9QL1wLovXuijHmizn79U
1MPr/qatqB8+6XrAEPVD13z+mizqJ0F+Mwv1xgr7926oN1ofZWwu6s0kVSbq
kyobKq+iPuliW56XqM+IiHkeqGd642U+D/VMT8sn3Bb1/LzZeRbqnxYM2uKG
+qc43RhzUf9v/D7cRL/Q/q+1DdEv1FAeLhP9omMyeGNv96W94/IK0Xfc5PRH
GvqObpTMqhB9t0KeMMTrbgW3PVmQjT6lZxfbX4k+HeV99A36mtfvOnscfU2V
hz/2dUJ0bSh0gAPNg4uhA3TkvWGnDvQ1X9qYti8DekLlIU7noScUsmxnuNCT
q+m5/tAf2qysGAn9ITMnt9+F/pSZz3gLvaI3exPvQq/IXiMvRujVwEbZaugb
VTv6GEPfKEhLt38r9C2r8mgp9JCc9B9YQw9pgPaOUKGHP95POiF8sV/4/99n
HlPrmw9d5e3W854V/fMBmbROvS10dYPfF6uhw+xZMesRdJjGf7+qU4fLZ4al
QLd57orBydBt8n6m6Sh0+5j5oSDoPNtZyYdC56kwNDRf6Hxd/MT38AVWyOLa
VfalVJt0Xil8oS/e0TxYPBD+Qn6uij3wFzIc77JC+EvKY8sg+BGZv7o3HH5E
4y5MiBN+FDP02VfwL3JJSHeCf1G5huoL4V8WUcax8DvSLnqpB7+j2/0n6Qm/
qz+THwN/pIAB+59HJJWQT4xdsvDH7ucBUT3e77u3p9gAPstn6mxXwmcp4qCm
RPjs8rULZsKXOb0iuKPO6QbZjn2/SfhyU7bJUvg4Fxkq4+Dj5L/7s/vCx9/p
aGfD91k//puR8H1qs5mWJXw/qTZDjpzAhtGmJcgJ1GzhqSFywg8jmhKQxygo
OtMKeYxPDx+jL/JYeI/vNnTPl1IDnx8T5xvQlYOMu/LP27Idach7LKvPWoy8
x6pInQyR9+b1bzyHfEgeOs/lyIe8ceS5LJEPfQyO5yBPktGVKceRJ9k6Lm+5
yJOWCxvW9Hb/UG/duGTkUl5YsXk3cilvsbsiEbm04/yRycixnOqROd1T+LO/
bZnIsb53d+oj99LzpFNmyL1ctGDrSJF7p/m4eSAn09uFZzKRk7nSJcxb5OTH
hzdtQq6mxte/3kau5uqO6M5c/fnYR525TavHPb2aK1FByOdc3Mi/IZ/zg3tf
ThH53GxdRi7yPFs9tBqEPM+FuTNmiDy/6OnYcOR/1jm8Uon8z7knjxqI/G+8
JLUSvEAbpE514AVuHyo3FLzg0bJ9OviCKq4uvgO+4NWvy+wFXyijdWeBR8h7
bUEIeITfzv3II7sPx1wCv1D+wzBd8AsbLBndyS/HEk3Ue7v/pjJJSwMHsZfk
0kxwEFt1zH8vRZ1r+453BTfxy++O2oCbuNXlzinBTVWZ+S3gLA7z7CgHZ7Gv
kcYUwVmbO+pbwWVcMFuWCC5jz6yOS4LLnNRissFxlHVnpAIcx5HNcZ0cN+Bq
3GVwH8kj1X3BfWzt/5H7FKaTLcCJdCLs24ngRM52nh8sOHH7YPfl4EqKCH1b
Cq5kSdUaT8GVu169k4FDyfSasS84lO+bnbcXHDpg4FKt3u6hqb1Z5wXO5dG6
ic7gXE5+d7Rdin6327VSBi5mLtYKBBfzJq/ZBYKLc/R8M8DRrFmgEhzN011f
WQuOPn3h5E1wN8cXL3IFd/OpDSXxgrsjjZt2gNPZ2lr1JTidZ7RFNwhO7+s9
Vpt99a/A+5SxZ18seJ+H79Hv5P1SRVWZDbixMUOyRgWOTHfYul3MB1pqOsKn
gt9uPVmkFgOei02pVop5wrC9yVJ/cNfUn6ZFlIDD0o3GHBLzB5+f02VDwFdB
BXsD9cBbRtMsp4l5Rc/3Z7vnMNI+5jAzMwsftCKPfhdVdF2BfKrUMZsqfETt
jEesdJaKm7UGy82Q+46ddl8m5iqOkmrTMuStP0V8I+YwHOCQGCDmMFaPz8m2
Iyf93eGCmNuw8+M79WJuIz19sFzkobhNWWLOwzlKfaWY82T/0v5Tb++B9vVe
tnfk13qC04x7PPeM6uM5bF/PW7vnPsY9vv/TvS8Tu/apqGt/AkL2d/JYVY97
enrRv3/e2/sd3c9lwYN6n34n/H8feE9i
       "]], {
     Axes -> True, ImageSize -> 300, Method -> {}, 
      PlotRange -> {{-0.9999998571428571, 
       0.9999998571428571}, {-0.9999998571428571, 0.9999998571428571}, {0., 
       1.9999994285714693`}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}}], $CellContext`r$$ = {{
      Rational[2, 3], 
      Rational[-1, 3], 
      Rational[1, 3]}, {
      Rational[-1, 3], 
      Rational[2, 3], 
      Rational[1, 3]}}, $CellContext`scale$$ = 0.3, $CellContext`tick$$ = 
    False, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Slider2D[
           
           Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
             Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
          Row[{
            Text["p = "], 
            Dynamic[
             MatrixForm[$CellContext`p$$]]}]}, {
          Slider[
           
           Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, Appearance -> Tiny], 
          Row[{
            Text["a = "], 
            Dynamic[$CellContext`av$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
             True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
           0.05, 2}, Appearance -> Tiny], 
          Row[{
            Text["b = "], 
            Dynamic[$CellContext`bv$$]}]}, {
          Slider[
           
           Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 1}, Appearance -> 
           Tiny], 
          Row[{
            Text["scale = "], 
            Dynamic[$CellContext`scale$$]}]}, {
          Dynamic[
           SetterBar[
            
            Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
            Map[# -> TraditionalForm[
               
               Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
             Range[3]]]], 
          Text["z(x, y)"]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`scale$$], 0.3}, 0}, {{
       Hold[$CellContext`av$$], 1}, 0}, {{
       Hold[$CellContext`bv$$], 1}, 0}, {{
       Hold[$CellContext`tick$$], False}, 0}, {{
       Hold[$CellContext`bRefreshPointDependent$$], True}, 0}, {{
       Hold[$CellContext`bRefreshPlot$$], True}, 0}, {
      Hold[$CellContext`plot$$], 0}, {{
       Hold[$CellContext`fn$$], 2}, 0}, {
      Hold[$CellContext`fp$$], 0}, {
      Hold[$CellContext`fup$$], 0}, {
      Hold[$CellContext`fvp$$], 0}, {
      Hold[$CellContext`r$$], 0}, {{
       Hold[$CellContext`p$$], {
        Rational[1, 2], 
        Rational[1, 2]}}, 0}}, Typeset`size$$ = {400., {221., 228.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`av$$ = 1, $CellContext`bRefreshPlot$$ = 
        True, $CellContext`bRefreshPointDependent$$ = True, $CellContext`bv$$ = 
        1, $CellContext`fn$$ = 2, $CellContext`fp$$ = 0, $CellContext`fup$$ = 
        0, $CellContext`fvp$$ = 0, $CellContext`p$$ = {
          Rational[1, 2], 
          Rational[1, 2]}, $CellContext`plot$$ = 0, $CellContext`r$$ = 
        0, $CellContext`scale$$ = 0.3, $CellContext`tick$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tick$$; 
       If[$CellContext`bRefreshPlot$$, $CellContext`plot$$ = ParametricPlot3D[
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, {$CellContext`u, $CellContext`v}], {$CellContext`u, \
-$CellContext`av$$, $CellContext`av$$}, {$CellContext`v, -$CellContext`bv$$, \
$CellContext`bv$$}, ImageSize -> 300, PerformanceGoal -> 
            "Quality"]; $CellContext`bRefreshPlot$$ = False, Null]; 
       If[$CellContext`bRefreshPointDependent$$, {$CellContext`fp$$, \
$CellContext`fup$$, $CellContext`fvp$$} = {
            $CellContext`f[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fu[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$], 
            $CellContext`fv[$CellContext`fn$$, $CellContext`av$$, \
$CellContext`bv$$, $CellContext`p$$]}; $CellContext`r$$ = \
$CellContext`reciprocalsForTwoDimSubspace[{$CellContext`fup$$, \
$CellContext`fvp$$}]; $CellContext`bRefreshPointDependent$$ = False; Null, 
         Null]; Column[{
          Show[{$CellContext`plot$$, 
            Graphics3D[{Black, 
              Arrowheads[0.03], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fup$$}, 0.02]], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ $CellContext`fvp$$}, 0.02]], Blue, 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 1]}, 0.02]], 
              Arrow[
               
               Tube[{$CellContext`fp$$, $CellContext`fp$$ + \
$CellContext`scale$$ Part[$CellContext`r$$, 2]}, 0.02]], 
              Lighter[Gray], 
              Opacity[0.5], 
              
              Polygon[{$CellContext`fp$$ + $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ + \
$CellContext`fvp$$, $CellContext`fp$$ - $CellContext`fup$$ - \
$CellContext`fvp$$, $CellContext`fp$$ + $CellContext`fup$$ - \
$CellContext`fvp$$}]}]}]}]), "Specifications" :> {
        Grid[{{
           Slider2D[
            
            Dynamic[$CellContext`p$$, ($CellContext`p$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`tick$$ = 
              Not[$CellContext`tick$$])& ], {{-1, -1}, {1, 1}}], 
           Row[{
             Text["p = "], 
             Dynamic[
              MatrixForm[$CellContext`p$$]]}]}, {
           Slider[
            
            Dynamic[$CellContext`av$$, ($CellContext`av$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, Appearance -> Tiny], 
           Row[{
             Text["a = "], 
             Dynamic[$CellContext`av$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`bv$$, ($CellContext`bv$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
              True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], {
            0.05, 2}, Appearance -> Tiny], 
           Row[{
             Text["b = "], 
             Dynamic[$CellContext`bv$$]}]}, {
           Slider[
            
            Dynamic[$CellContext`scale$$, ($CellContext`scale$$ = #; \
$CellContext`tick$$ = Not[$CellContext`tick$$])& ], {0.05, 1}, Appearance -> 
            Tiny], 
           Row[{
             Text["scale = "], 
             Dynamic[$CellContext`scale$$]}]}, {
           Dynamic[
            SetterBar[
             
             Dynamic[$CellContext`fn$$, ($CellContext`fn$$ = #; \
$CellContext`bRefreshPointDependent$$ = True; $CellContext`bRefreshPlot$$ = 
               True; $CellContext`tick$$ = Not[$CellContext`tick$$])& ], 
             Map[# -> TraditionalForm[
                
                Part[$CellContext`zFunc, #][$CellContext`x, $CellContext`y, \
$CellContext`a, $CellContext`b]]& , 
              Range[3]]]], 
           Text["z(x, y)"]}}], {{$CellContext`scale$$, 0.3}, 0, ControlType -> 
         None}, {{$CellContext`av$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`bv$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`tick$$, False}, 0, ControlType -> 
         None}, {{$CellContext`bRefreshPointDependent$$, True}, 0, 
         ControlType -> None}, {{$CellContext`bRefreshPlot$$, True}, 0, 
         ControlType -> None}, {$CellContext`plot$$, 0, ControlType -> 
         None}, {{$CellContext`fn$$, 2}, 0, ControlType -> 
         None}, {$CellContext`fp$$, 0, ControlType -> 
         None}, {$CellContext`fup$$, 0, ControlType -> 
         None}, {$CellContext`fvp$$, 0, ControlType -> 
         None}, {$CellContext`r$$, 0, ControlType -> 
         None}, {{$CellContext`p$$, {
           Rational[1, 2], 
           Rational[1, 2]}}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`tick$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{810., {259., 266.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := {#, #2, 
         Part[$CellContext`zFunc, $CellContext`n][
          SlotSequence[1]]}& , $CellContext`f[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`zFunc := \
{$CellContext`paraboloid, $CellContext`saddle, $CellContext`sine}, \
$CellContext`paraboloid := -(#/#3)^2 + (#2/#4)^2& , $CellContext`saddle := \
(#/#3)^2 + (#2/#4)^2& , $CellContext`sine := 
       Sin[#/#3 + (#2/#4)^2]& , $CellContext`fu[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f1[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f1[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][$CellContext`t, #2, #3, #4], \
$CellContext`t], $CellContext`t -> #]& , $CellContext`fv[
         Pattern[$CellContext`n, 
          Blank[Integer]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], {
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]}] := $CellContext`f2[$CellContext`n][$CellContext`u, \
$CellContext`v, $CellContext`s1, $CellContext`s2], $CellContext`f2[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := ReplaceAll[
         D[
          $CellContext`f[$CellContext`n][#, $CellContext`t, #3, #4], \
$CellContext`t], $CellContext`t -> #2]& , \
$CellContext`reciprocalsForTwoDimSubspace[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}] := 
       Module[{$CellContext`cross}, $CellContext`cross = 
          Cross[$CellContext`a, $CellContext`b]; {
            Cross[$CellContext`b, $CellContext`cross], 
            Cross[$CellContext`cross, $CellContext`a]}/
          Dot[$CellContext`cross, $CellContext`cross]], 
       TagSet[$CellContext`reciprocalsForTwoDimSubspace, 
        MessageName[$CellContext`reciprocalsForTwoDimSubspace, "usage"], 
        "For a surface spanned by vectors {a,b}, compute the reciprocal (or \
dual) basis for that subspace.  That basis in 3D is\n\n\
\!\(\*SuperscriptBox[\(a\), \(*\)]\) = -b . (b \[Cross] a )/|(b \[Cross] a \
)^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\) = -a . (a \[Cross] b )/|(b \
\[Cross] a )^2|\n\n(We can compute the higher dimensional result using the \
similar geometric algebra expression:\n\n\!\(\*SuperscriptBox[\(a\), \(*\)]\) \
= b . (b \[Wedge] a )/|(b \[Wedge] a )^2|\n\!\(\*SuperscriptBox[\(b\), \(*\)]\
\) = a . (a \[Wedge] b )/|(b \[Wedge] a )^2|\n)\n\n(This function returns the \
3D result for a 2D subspace.)\n\nExample (returning {1,0,1,0}):\n\
\[IndentingNewLine]Module[{a,b,r},\[IndentingNewLine]a = {\!\(\*SubscriptBox[\
\(f\), \(1\)]\), \!\(\*SubscriptBox[\(f\), \(2\)]\), \
\!\(\*SubscriptBox[\(f\), \(3\)]\)} ;\[IndentingNewLine]b = \
{\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\), \!\(\
\*SubscriptBox[\(g\), \(3\)]\)} ;\[IndentingNewLine]r = \
reciprocalsForTwoDimSubspace[{a,b}] ;\[IndentingNewLine]Simplify[{a . r[[1]], \
a . r[[2]], b . r[[2]], b . \
r[[1]]},\[IndentingNewLine]{\!\(\*SubscriptBox[\(f\), \(1\)]\), \
\!\(\*SubscriptBox[\(f\), \(2\)]\), \!\(\*SubscriptBox[\(f\), \
\(3\)]\),\!\(\*SubscriptBox[\(g\), \(1\)]\), \!\(\*SubscriptBox[\(g\), \(2\)]\
\), \!\(\*SubscriptBox[\(g\), \(3\)]\)} \[Element] Reals]\[IndentingNewLine]]\
\n"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.602931408810111*^9, 3.6029314468162847`*^9}},
 CellID->106029997]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["XXXX", "ManipulateCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Thumbnail Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Snapshot Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["", "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932862225`*^9}},
 CellID->272988002],

Cell["\<\
Alan Macdonald, Vector and Geometric Calculus,  CreateSpace Independent \
Publishing Platform, 2012.\
\>", "DetailNotes",
 CellChangeTimes->{{3.602931344369425*^9, 3.6029313932832227`*^9}},
 CellID->346135800]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6029310463183775`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.602931047622452*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["dual basis", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.6029310615752497`*^9}},
 CellID->24907710],

Cell["tangent space", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.6029310667835484`*^9}},
 CellID->228317512],

Cell["reciprocal basis", "SearchTerms",
 CellChangeTimes->{{3.602931057635025*^9, 3.602931070643769*^9}},
 CellID->136377538]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell["http://mathworld.wolfram.com/DualBasis.html", "RelatedLinks",
 CellID->15851226]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Peeter Joot", "Author",
 CellChangeTimes->{{3.6029310776691704`*^9, 3.6029310790742507`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1123, 644},
WindowMargins->{{10, Automatic}, {Automatic, 24}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[112423, 2165, 355, 9, 30, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[112781, 2176, 719, 17, 30, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[113503, 2195, 340, 11, 30, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[113846, 2208, 637, 15, 30, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[114486, 2225, 844, 21, 30, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[115333, 2248, 369, 9, 30, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[115705, 2259, 1464, 31, 30, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[117172, 2292, 908, 21, 30, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 119266, 2361},
 {"RotateAndZoomIn3D", 119376, 2364},
 {"DragLocators", 119487, 2367},
 {"CreateAndDeleteLocators", 119604, 2370},
 {"SliderZoom", 119719, 2373},
 {"GamepadControls", 119826, 2376},
 {"AutomaticAnimation", 119940, 2379},
 {"BookmarkAnimation", 120058, 2382}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 163, 3, 138, "DemoTitle"],
Cell[CellGroupData[{
Cell[767, 29, 33, 0, 365, "InitializationSection"],
Cell[803, 31, 8878, 228, 1505, "Input",
 InitializationCell->True,
 CellID->267096170]
}, Open  ]],
Cell[CellGroupData[{
Cell[9718, 264, 29, 0, 311, "ManipulateSection"],
Cell[CellGroupData[{
Cell[9772, 268, 19356, 399, 2396, "Input",
 CellID->49453794],
Cell[29131, 669, 80076, 1383, 572, "Output",
 CellID->106029997]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109256, 2058, 36, 0, 228, "ManipulateCaptionSection"],
Cell[109295, 2060, 33, 0, 28, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109365, 2065, 28, 0, 229, "ThumbnailSection"],
Cell[109396, 2067, 1242, 34, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110675, 2106, 28, 0, 189, "SnapshotsSection"],
Cell[110706, 2108, 1241, 34, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111984, 2147, 26, 0, 452, "DetailsSection"],
Cell[112013, 2149, 111, 2, 28, "DetailNotes",
 CellID->272988002],
Cell[112127, 2153, 219, 5, 28, "DetailNotes",
 CellID->346135800]
}, Open  ]],
Cell[CellGroupData[{
Cell[112383, 2163, 37, 0, 168, "ControlSuggestionsSection"],
Cell[112423, 2165, 355, 9, 30, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[112781, 2176, 719, 17, 30, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[113503, 2195, 340, 11, 30, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[113846, 2208, 637, 15, 30, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[114486, 2225, 844, 21, 30, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[115333, 2248, 369, 9, 30, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[115705, 2259, 1464, 31, 30, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[117172, 2292, 908, 21, 30, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118117, 2318, 30, 0, 208, "SearchTermsSection"],
Cell[118150, 2320, 120, 2, 28, "SearchTerms",
 CellID->24907710],
Cell[118273, 2324, 124, 2, 28, "SearchTerms",
 CellID->228317512],
Cell[118400, 2328, 125, 2, 28, "SearchTerms",
 CellID->136377538]
}, Open  ]],
Cell[CellGroupData[{
Cell[118562, 2335, 31, 0, 188, "RelatedLinksSection"],
Cell[118596, 2337, 86, 1, 28, "RelatedLinks",
 CellID->15851226]
}, Open  ]],
Cell[CellGroupData[{
Cell[118719, 2343, 25, 0, 188, "AuthorSection"],
Cell[118747, 2345, 115, 1, 28, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

