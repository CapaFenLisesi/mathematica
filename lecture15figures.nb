(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     26308,        541]
NotebookOptionsPosition[     25797,        519]
NotebookOutlinePosition[     26138,        534]
CellTagsIndexPosition[     26095,        531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", 
    RowBox[{"(", "x", ")"}]}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "Pi"}], ",", " ", 
     RowBox[{"3", " ", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi"}], ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "0", ",", "  ", "Pi", ",", "  ", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{
        SubscriptBox["k", "y"], "/", "2"}]}], ",", " ", 
      RowBox[{
       RowBox[{"Sin", "[", " ", 
        RowBox[{"b", " ", 
         RowBox[{
          SubscriptBox["k", "y"], "/", "2"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"b", " ", 
         RowBox[{
          SubscriptBox["k", "y"], "/", "2"}]}], ")"}]}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.561374961737715*^9, 3.5613749790537057`*^9}, {
  3.561375081501565*^9, 3.5613750896100287`*^9}, {3.561375135559657*^9, 
  3.561375269057293*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
hrDKNPi97uMg2zKCNO7tkxG2nQaFB5YudKgMo8iqLUdyi6fBro5Fl52rA2iX
XMa7LssZwGTtonKYPoC+6RVP3Dg7A1oHB345JQ2gdv6drlzOM8Bhvs07fc8A
Yrcsp437zoBHpNeBQjd+oOCHFI7UpBkw/bRcbnn5Gyox9fIe6p4BYbmvslUT
vyGKuKzC9v4ZQEFxqpe0v6Hn14b8LEdmgNl3tz3frveho8o6ve6LMyBPYptZ
3Z9eNPrC3+8R3yy4+jjS+/5aN/Lt++adun8WcL++vtqc3I2y/ArGrxvPgpel
joHMut0oM3fYQ/fILOjqBhHe/l0oRSvxWYDVLNAWXnxi/a8T7XS+mjHjOgs+
yg5IPUrpRPNfEib5vWaB8+62jLZ9nSijMYNT4vosSDqRmbc/oAMZUBMrpm7P
grVYm3r5jXa0JMi+61rcLIhLNzE597QdVYfNxPQnzgLlfM22JNCOZso54lVT
ZoFtO38Pz62PqGn8U0DUy1lwk3q3e3RTG6L/0FZVKpoFOXoOA6f136Ov/l7K
PaWz4Lut3uT7oFZ0vGH1hWvlLIBP5tcLNjPQm+CPyxZ1s4BF1FruFmszuiCb
+XLjwywQ6W2RKzZpQg8vXrk+8ImIn6wtP3WvEc29YYl583kWnJAUVrASbkDP
vpsGrvfOAqfvIQrRp+sRnpI8GvptFvg/XVCoT61D+oc3W/3unwXPpdq3q8rX
oq0nopgeDM2CkkGgeMGlBu1S3pdcOTILGM9zFJ/kYuRQLXaufWwWDB8SseR3
r0Zl5uX2xVOEH22/Lf1XKtEIxTs5bGYWaBztsBq7VYF+mZstgl+zIORE9Gn8
oBS1s8YyuS3MgjddLtbKYiUo0Wcgd3BxFnRamdgkphehK/Ki1+HSLPjbK2fL
olSIuD28Le8sz4Jttix27gX5SBwcPVyyMgsO9Q/Y9e19h+rJUv99/EPwqQ1A
MeG5iJv1pvunVSJ+k06N0+M3aLVZOKVqjYjPWKyFWa/R07fVXx78JeJ9yK0X
qchAY0/Py5r/I+7feanxF+M52qfMG/ibwJ49ss3Nfc8Qy62J4ZB1Yn5ZzcP9
X5NR3yW9U/8IvK1WK2Hu7yP08Yxbj93GLKilv01Ko8QgRZ+/51//D2cY6z6/
FYIOXwpf6SMwk/vFsC3hHkgr9UPiHwLzF2/KHa63BKuibw02CMx+aMzW99JN
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
i0j8Lg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
     FractionBox[
      RowBox[{"b", " ", 
        SubscriptBox["k", "y"]}], "2"], TraditionalForm], 
    FormBox[
     FractionBox[
      RowBox[{"2", " ", 
        RowBox[{"sin", "(", 
          FractionBox[
           RowBox[{"b", " ", 
             SubscriptBox["k", "y"]}], "2"], ")"}]}], 
      RowBox[{"b", " ", 
        SubscriptBox["k", "y"]}]], TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{(-3) Pi, 3 Pi}, {-0.21723362080148653`, 
     0.9999996492195458}}, {{-9.42477796076938, 
    9.42477796076938}, {-0.21723362080148653`, 0.9999996492195458}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[(-2) Pi, -6.283185307179586], 
      FormBox[
       RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[-Pi, -3.141592653589793], 
      FormBox[
       RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.561375083377672*^9, 3.561375090595085*^9}, {
   3.5613751384598227`*^9, 3.561375190903823*^9}, 3.561375224147724*^9, 
   3.5613752703923693`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5613749821988854`*^9, 3.5613750799684772`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"beta", ",", " ", "gamma", ",", " ", "k"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", 
        RowBox[{"2", " ", "Pi"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{"/", " ", 
         RowBox[{"(", 
          RowBox[{"650", " ", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "9"}], ")"}]}]}], ")"}]}], "*)"}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{"beta", " ", "=", " ", 
        RowBox[{"b", " ", "k", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], " ", "/", "2"}]}]}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gamma", " ", "=", " ", 
        RowBox[{"a", " ", "k", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], "/", "2"}]}]}], " ", ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "beta", "]"}], "/", "beta"}], ")"}], "^", 
           "2"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", " ", "[", 
              RowBox[{"n", " ", "gamma"}], "]"}], "/", " ", 
             RowBox[{"Sin", "[", "gamma", "]"}]}], ")"}], "^", "2"}]}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"theta", ",", " ", 
           RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], 
         "\[IndentingNewLine]", ",", " ", 
         RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", " ", "0.172"}], "}"}], ",", " ", "0.01", ",", " ", 
      "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "0.869"}], "}"}], ",", " ", "0.01", ",", " ", 
      "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "5"}], "}"}], ",", " ", "1", ",", " ", "30", 
      ",", " ", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.561375773918169*^9, 3.5613761051871166`*^9}, {
  3.5613761505807133`*^9, 3.561376298949199*^9}, {3.561376331550064*^9, 
  3.5613763528232803`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.869, $CellContext`b$$ = 
    0.172, $CellContext`n$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`b$$], 0.172}, 0.01, 1}, {{
       Hold[$CellContext`a$$], 0.869}, 0.01, 1}, {{
       Hold[$CellContext`n$$], 5}, 1, 30, 1}}, Typeset`size$$ = {
    360., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$3628$$ = 
    0, $CellContext`a$3629$$ = 0, $CellContext`n$3630$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.869, $CellContext`b$$ = 
        0.172, $CellContext`n$$ = 5}, "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$3628$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$3629$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$3630$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`beta$, $CellContext`gamma$, $CellContext`k$}, \
$CellContext`k$ = 
         2 Pi; $CellContext`beta$ = ($CellContext`b$$ $CellContext`k$) (
           Sin[$CellContext`theta]/
           2); $CellContext`gamma$ = ($CellContext`a$$ $CellContext`k$) (
           Sin[$CellContext`theta]/2); 
        Plot[(Sin[$CellContext`beta$]/$CellContext`beta$)^2 (
            Sin[$CellContext`n$$ $CellContext`gamma$]/
            Sin[$CellContext`gamma$])^2, {$CellContext`theta, -Pi, Pi}, 
          PlotRange -> Full]], 
      "Specifications" :> {{{$CellContext`b$$, 0.172}, 0.01, 
         1}, {{$CellContext`a$$, 0.869}, 0.01, 1}, {{$CellContext`n$$, 5}, 1, 
         30, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{409., {188., 193.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.5613759099819517`*^9, 3.561376110122399*^9, {3.5613761544749355`*^9, 
   3.5613761967163515`*^9}, {3.561376238088718*^9, 3.561376285120408*^9}, {
   3.5613763412156167`*^9, 3.561376379448804*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.56147118171285*^9}]
},
WindowSize->{707, 637},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1350, 37, 112, "Input"],
Cell[1932, 61, 18334, 321, 277, "Output"]
}, Open  ]],
Cell[20281, 385, 126, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[20432, 391, 2577, 68, 292, "Input"],
Cell[23012, 461, 2680, 52, 398, "Output"]
}, Open  ]],
Cell[25707, 516, 86, 1, 52, "Input"]
}
]
*)

(* End of internal cache information *)
