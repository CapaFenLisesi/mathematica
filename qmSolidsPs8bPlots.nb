(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     79476,       1560]
NotebookOptionsPosition[     78339,       1519]
NotebookOutlinePosition[     78759,       1535]
CellTagsIndexPosition[     78716,       1532]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "peeters`"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peeters`setGitDir", "[", " ", "\"\<blogit\>\"", " ", "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{3.5938201675116796`*^9}],

Cell[BoxData["\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\\
notes\\\\blogit\"\>"], "Output",
 CellChangeTimes->{3.5938201686557455`*^9}]
}, Open  ]],

Cell["\<\
k(u) = 2 \[Pi] u (1, 0)/a
E(k(u)) = E_s - A - 2 B - 2 B cos( 2 \[Pi] u )
E(k(u)) = E( \[Pi](1, 0)/a ) - 2 B cos( 2 \[Pi] u )\
\>", "Text",
 CellChangeTimes->{{3.593819212630064*^9, 3.593819218997428*^9}, {
  3.593819251039261*^9, 3.59381932183331*^9}, {3.5938194040120106`*^9, 
  3.5938194617663136`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", 
  RowBox[{"Plot", "[", " ", 
   RowBox[{
    RowBox[{"1", " ", "-", 
     RowBox[{"2", 
      RowBox[{"Cos", "[", " ", 
       RowBox[{"2", " ", "Pi", " ", "u"}], "]"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(k\), \(x\)]\)\>\"", ",", " ", "None"}], " ", 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Ticks", " ", "\[Rule]", " ", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"PlotRange", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", " ", "1.2"}], "}"}], ",", "Automatic"}],
         " ", "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Epilog", " ", "->", 
     RowBox[{"{", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"Text", "[", " ", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "0"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", " ", 
        RowBox[{"\"\<\!\(\*FractionBox[\(\[Pi]\), \(a\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", 
           RowBox[{"-", "0"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", " ", 
        RowBox[{"\"\<\!\(\*FractionBox[\(2  \[Pi]\), \(a\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "0"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"peeters`lblPlot", "[", "p", "]"}]}], "Input",
 CellChangeTimes->{{3.593819224584748*^9, 3.593819227511915*^9}, {
  3.593819311061694*^9, 3.593819390734251*^9}, {3.593819487128764*^9, 
  3.5938194893188896`*^9}, {3.593819523507845*^9, 3.593819725108376*^9}, {
  3.593819786706899*^9, 3.593819822720959*^9}, {3.5938198622602205`*^9, 
  3.5938200435105877`*^9}, {3.593820074055335*^9, 3.5938200797116585`*^9}, {
  3.5938201858257275`*^9, 3.5938201996415176`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
i/2Tug==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(x\\)]\\)\"", TraditionalForm], None},
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["0", TraditionalForm], {0, 0}], 
    InsetBox[
     FormBox[
     "\"\\!\\(\\*FractionBox[\\(\[Pi]\\), \\(a\\)]\\)\"", TraditionalForm], {
     0.5, 0}], 
    InsetBox[
     FormBox[
     "\"\\!\\(\\*FractionBox[\\(2  \[Pi]\\), \\(a\\)]\\)\"", 
      TraditionalForm], {1, 0}]},
  Method->{},
  PlotRange->{{0, 1}, {-0.9999999999999836, 2.9999997661463436`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.5938193639007163`*^9, 3.5938193955455265`*^9}, 
   3.5938194931441083`*^9, 3.5938195242498875`*^9, 3.593819564177171*^9, {
   3.5938195983691273`*^9, 3.593819605817553*^9}, {3.5938197027350965`*^9, 
   3.59381972569941*^9}, {3.5938199614268928`*^9, 3.593820044287632*^9}, 
   3.593820081787777*^9, 3.5938202003685594`*^9}],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{
   peeters`pts1$$ = {{0.017567356704463688`, -0.9783441768209135}, {
    0.2594403412046197, -0.5148555259965184}, {
    0.4086653490065569, -0.9034730427738431}, {0.5051882866951019, 
    2.8824331504608485`}, {
     Rational[1, 2], 0.99999988307318}, {0.7727556433995635, 
    2.2314360676620666`}}, peeters`pts2$$ = {{
   0.5065016123998758, -0.009903722973284568}, {
   0.9794939144907964, -0.020423552202942563`}, {0.001001248309582467, 
   0.0006161062563379005}}, peeters`lbl1$$ = {
   "E(0,0) = E_s - A - 4 B", "E(\[Pi]/a, 0) = E_s - A"}, peeters`lbl2$$ = {
   "\[Pi]/a", "2 \[Pi]/a", "0"}, peeters`varRsrv$$ = "Label Import Area"}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Show[peeters`plotRsrv$7323 = Show[
            Graphics[{{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Line[CompressedData["
1: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
i/2Tug==
                 "]]}}}, {
             AspectRatio -> GoldenRatio^(-1), Axes -> True, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(k\), \(x\)]\)", None}, 
              AxesOrigin -> {0, 0}, Epilog -> {
                Text[0, {0, 0}], 
                Text["\!\(\*FractionBox[\(\[Pi]\), \(a\)]\)", {0.5, 0}], 
                Text["\!\(\*FractionBox[\(2  \[Pi]\), \(a\)]\)", {1, 0}]}, 
              Method -> {}, 
              PlotRange -> {{0, 1}, {-0.9999999999999836, 
                2.9999997661463436`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> None}], Epilog -> 
            Map[peeters`myLabel$7323, 
              Apply[Join, {
                MapIndexed[{
                  Part[peeters`lbl1$$, 
                   Part[#2, 1]], #}& , 
                 Partition[peeters`pts1$$, 3]], 
                MapIndexed[{
                  Part[peeters`lbl2$$, 
                   Part[#2, 1]], #}& , peeters`pts2$$]}]], ImageSize -> 500], 
          Graphics[{
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts1$$, peeters`i$]]]]& , peeters`pts1$$]], 
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts2$$, peeters`i$]]]]& , peeters`pts2$$]]}, 
           PlotRange -> {{0, 1}, {0, 1}}]], StandardForm],
        ImageSizeCache->{667., {194., 203.}}]},
      {
       InputFieldBox[Dynamic[peeters`varRsrv$$],
        FieldHint->"Label Import Area",
        FieldSize->55]},
      {
       TemplateBox[{
        ButtonBox[
         "\"Add Labeled Arrow\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts1$$] < 
            3 OptionValue[peeters`lblPlot, {}, peeters`maxArrowedLbls], 
            AppendTo[peeters`lbl1$$, "Arrow"]; 
            peeters`pts1$$ = Join[peeters`pts1$$, $CellContext`u$7323]], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Add Label\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts2$$] < 
            OptionValue[peeters`lblPlot, {}, peeters`maxNonArrowedLbls], 
            AppendTo[peeters`lbl2$$, "Label"]; AppendTo[peeters`pts2$$, 
              Part[$CellContext`u$7323, 2]]], Evaluator -> Automatic, Method -> 
          "Preemptive"],ButtonBox[
         "\"Copy to new .nb\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`copyToNewNB$7323[
           peeters`plotRsrv$7323, {
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Export Labels\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`exportLbls$7323[{
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Import Labels\"", Appearance -> Automatic, ButtonFunction :> (If[
             And[
             Head[peeters`varRsrv$$] == List, Length[peeters`varRsrv$$] == 6, 
              Part[peeters`varRsrv$$, 1] == Part[peeters`varRsrv$$, -1] == 
              Part[peeters`safeGuard$7323, 1]], {
             peeters`pts1$$ = Part[peeters`varRsrv$$, 2], peeters`pts2$$ = 
              Part[peeters`varRsrv$$, 3], peeters`lbl1$$ = 
              Part[peeters`varRsrv$$, 4], peeters`lbl2$$ = 
              Part[peeters`varRsrv$$, 5]}, 
             MessageDialog[
             "You're trying to Import a label set not created by \"Export \
Labels\""], 
             MessageDialog[{
               Head[peeters`varRsrv$$], Part[peeters`varRsrv$$, 1] == 
               Part[peeters`varRsrv$$, -1] == peeters`safeGuard$7323}]]; 
           Null), Evaluator -> Automatic, Method -> "Preemptive"]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Transpose[{
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl1$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl1$$ = Drop[peeters`lbl1$$, {#, #}]; 
                  peeters`pts1$$ = Drop[peeters`pts1$$, {3 # - 2, 3 #}]]}]& , 
               Range[Length[peeters`pts1$$]/3]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]], 
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl2$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl2$$ = Drop[peeters`lbl2$$, {#, #}]; 
                  peeters`pts2$$ = Drop[peeters`pts2$$, {#}]]}]& , 
               Range[
                Length[peeters`pts2$$]]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]]}], ItemSize -> 30], StandardForm],
        ImageSizeCache->{851., {62., 71.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5938193639007163`*^9, 3.5938193955455265`*^9}, 
   3.5938194931441083`*^9, 3.5938195242498875`*^9, 3.593819564177171*^9, {
   3.5938195983691273`*^9, 3.593819605817553*^9}, {3.5938197027350965`*^9, 
   3.59381972569941*^9}, {3.5938199614268928`*^9, 3.593820044287632*^9}, 
   3.593820081787777*^9, 3.593820200461565*^9, 3.5938204974825535`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pi", "/", "a"}]], "Input",
 CellChangeTimes->{{3.5938200658178635`*^9, 3.5938200666559114`*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "a"]], "Output",
 CellChangeTimes->{3.5938200674229555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", " ", "=", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{"1", " ", "-", 
      RowBox[{"2", 
       RowBox[{"Cos", "[", " ", 
        RowBox[{"2", " ", "Pi", " ", "u"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(y\)]\)\>\"", ",", " ", "None"}], " ", 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", " ", "\[Rule]", " ", "None"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`lblPlot", "[", "p", "]"}]}], "Input",
 CellChangeTimes->{{3.593820746181778*^9, 3.593820771507227*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
i/2Tug==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(y\\)]\\)\"", TraditionalForm], None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {-0.9999999999999836, 2.9999997661463436`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.5938207534471936`*^9, 3.593820772226268*^9}}],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{
   peeters`pts1$$ = {{0.017567356704463688`, -0.9783441768209135}, {
    0.2594403412046197, -0.5148555259965184}, {
    0.4086653490065569, -0.9034730427738431}, {0.5051882866951019, 
    2.8824331504608485`}, {
     Rational[1, 2], 0.99999988307318}, {0.7727556433995635, 
    2.2314360676620666`}}, peeters`pts2$$ = {{
   0.5065016123998758, -0.009903722973284568}, {
   0.9794939144907964, -0.020423552202942563`}, {0.001001248309582467, 
   0.0006161062563379005}}, peeters`lbl1$$ = {
   "E(0,0) = E_s - A - 4 B", "E(0, \[Pi]/a) = E_s - A"}, peeters`lbl2$$ = {
   "\[Pi]/a", "2 \[Pi]/a", "0"}, peeters`varRsrv$$ = {
   "FeboAsoma", {{0.017567356704463688`, -0.9783441768209135}, {
     0.2594403412046197, -0.5148555259965184}, {
     0.4086653490065569, -0.9034730427738431}, {0.5051882866951019, 
     2.8824331504608485`}, {
      Rational[1, 2], 0.99999988307318}, {0.7727556433995635, 
     2.2314360676620666`}}, {{0.5065016123998758, -0.009903722973284568}, {
    0.9794939144907964, -0.020423552202942563`}, {0.001001248309582467, 
    0.0006161062563379005}}, {
    "E(0,0) = E_s - A - 4 B", "E(\[Pi]/a, 0) = E_s - A"}, {
    "\[Pi]/a", "2 \[Pi]/a", "0"}, "FeboAsoma"}}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Show[peeters`plotRsrv$11708 = Show[
            Graphics[{{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Line[CompressedData["
1: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
i/2Tug==
                 "]]}}}, {
             AspectRatio -> GoldenRatio^(-1), Axes -> True, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(k\), \(y\)]\)", None}, 
              AxesOrigin -> {0, 0}, Method -> {}, 
              PlotRange -> {{0, 1}, {-0.9999999999999836, 
                2.9999997661463436`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> None}], Epilog -> 
            Map[peeters`myLabel$11708, 
              Apply[Join, {
                MapIndexed[{
                  Part[peeters`lbl1$$, 
                   Part[#2, 1]], #}& , 
                 Partition[peeters`pts1$$, 3]], 
                MapIndexed[{
                  Part[peeters`lbl2$$, 
                   Part[#2, 1]], #}& , peeters`pts2$$]}]], ImageSize -> 500], 
          Graphics[{
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts1$$, peeters`i$]]]]& , peeters`pts1$$]], 
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts2$$, peeters`i$]]]]& , peeters`pts2$$]]}, 
           PlotRange -> {{0, 1}, {0, 1}}]], StandardForm],
        ImageSizeCache->{667., {194., 203.}}]},
      {
       InputFieldBox[Dynamic[peeters`varRsrv$$],
        FieldHint->"Label Import Area",
        FieldSize->55]},
      {
       TemplateBox[{
        ButtonBox[
         "\"Add Labeled Arrow\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts1$$] < 
            3 OptionValue[peeters`lblPlot, {}, peeters`maxArrowedLbls], 
            AppendTo[peeters`lbl1$$, "Arrow"]; 
            peeters`pts1$$ = Join[peeters`pts1$$, $CellContext`u$11708]], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Add Label\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts2$$] < 
            OptionValue[peeters`lblPlot, {}, peeters`maxNonArrowedLbls], 
            AppendTo[peeters`lbl2$$, "Label"]; AppendTo[peeters`pts2$$, 
              Part[$CellContext`u$11708, 2]]], Evaluator -> Automatic, Method -> 
          "Preemptive"],ButtonBox[
         "\"Copy to new .nb\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`copyToNewNB$11708[
           peeters`plotRsrv$11708, {
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Export Labels\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`exportLbls$11708[{
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Import Labels\"", Appearance -> Automatic, ButtonFunction :> (If[
             And[
             Head[peeters`varRsrv$$] == List, Length[peeters`varRsrv$$] == 6, 
              Part[peeters`varRsrv$$, 1] == Part[peeters`varRsrv$$, -1] == 
              Part[peeters`safeGuard$11708, 1]], {
             peeters`pts1$$ = Part[peeters`varRsrv$$, 2], peeters`pts2$$ = 
              Part[peeters`varRsrv$$, 3], peeters`lbl1$$ = 
              Part[peeters`varRsrv$$, 4], peeters`lbl2$$ = 
              Part[peeters`varRsrv$$, 5]}, 
             MessageDialog[
             "You're trying to Import a label set not created by \"Export \
Labels\""], 
             MessageDialog[{
               Head[peeters`varRsrv$$], Part[peeters`varRsrv$$, 1] == 
               Part[peeters`varRsrv$$, -1] == peeters`safeGuard$11708}]]; 
           Null), Evaluator -> Automatic, Method -> "Preemptive"]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Transpose[{
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl1$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl1$$ = Drop[peeters`lbl1$$, {#, #}]; 
                  peeters`pts1$$ = Drop[peeters`pts1$$, {3 # - 2, 3 #}]]}]& , 
               Range[Length[peeters`pts1$$]/3]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]], 
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl2$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl2$$ = Drop[peeters`lbl2$$, {#, #}]; 
                  peeters`pts2$$ = Drop[peeters`pts2$$, {#}]]}]& , 
               Range[
                Length[peeters`pts2$$]]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]]}], ItemSize -> 30], StandardForm],
        ImageSizeCache->{851., {62., 71.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 CellChangeTimes->{{3.5938207534471936`*^9, 3.5938207722402687`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", " ", "=", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{"1", " ", "-", 
      RowBox[{"2", 
       RowBox[{"Cos", "[", " ", 
        RowBox[{"2", " ", "Pi", " ", "u"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", " ", "\[Rule]", " ", "None"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Ticks", " ", "\[Rule]", " ", 
       RowBox[{"{", " ", 
        RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ticks", " ", "\[Rule]", " ", "None"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`lblPlot", "[", "p", "]"}]}], "Input",
 CellChangeTimes->{{3.593821100382037*^9, 3.593821102960185*^9}, {
  3.5938211646747146`*^9, 3.5938212075621676`*^9}, {3.5938212742789836`*^9, 
  3.593821288651806*^9}, {3.593821379662011*^9, 3.5938213809540854`*^9}, {
  3.593821546870575*^9, 3.5938215502497683`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw12Xk4lN37AHDrPJJsLSJFthRJ8lJeuZ+0ydKbiHgLIaSypUhFCqGityQh
VCpZkp2oI6GSLVQYZsbYmZkjiey/5/vHb/6Z63Odc53lPvdZrutZ7+x9+KQA
Hx/fDX4+vv/9m54c+lo5fMTozOL/fhgJ7ZbzYcrqgsiZFXp/KG9LTUgukN0D
Xt70dhblPnmV0AC1g2BQZj9URtms4Uf+I1lr8PmQ5Hqdssqttc8WFezArSXL
YiflOVOXByfUHKBtIunp4AJGI2Ft1SfiT0ClYKjbNcq2rlNv78q6wrUn5+KX
Ua7eLVfyIdkN3hnd2RY1j5G28s7XEwqnwEZyaufvOYySBZxeqj49DZ6y9UWW
lEXY157YqHmBuZp+UsosRm9YLQ0frH3Av8GFR5/ByOeQq+mxeF8I9g7NXUK5
e8uN3bdl/aFrtdNlvT8YxaWurlT99zxEtt6N/GsKI1OJTMN3yRcgEz8UVJ3E
qJhX/xdWuAh1jjr7v/3C6IyDQ/6NE0EwXmQlGT+OkVIj1lJ8egkqfU8d2P8T
o5gcaXVLtWCI/FQudomH0d616enD7iFwMP/5g3kORsG1iZLvra+Ceir7ns8o
Rrp6mrft4kNBoLa1Z8MQRmkr/4mIlg2DMwprmHQWRpcaHlTbvAkDk4Bfiz0M
jGzCWQLK/4ZDWtXN++1dGIn99g0pT44Azzuzig/aMQpsiwvkKESBg/2Lj3ZN
GFnd6i4urYwCdRXdR731GGntUfsddiIaNEd7Ro/XUetZUOK79ulNWP1x9ZRy
DUaW9zo9D6rFQGGy1I/fZRhpmim/lPsYA/XvX94QLKHiLXhmcMA9Fiaqior5
CzFyLFvIQ9Z3oO2a3L2mHIxWbryjdTT+P1hld80+Lw2jUJGCDVGycXBZLJx+
+zpGm/b/F5nvEweFk+PfDoZg1BLuPUz/GAdx2ezn80FU/ghqZmlduA8+Sju/
qvhhVDufrtXWEg9p0aWnHzpS8/0V/5fCrYdQYfd4UF4fo6Kt5+NNeh/CtSsF
w+VbMXLwsZryNUiEYxkB7SaaGOVyJcqqhxJB6bjtNc31GB0eijT03JsM9UkO
umtEMUroDtpdtJACRgaNUQ/aeWiXvF0640gqbD9hu3ZVCw+N2OsLi+SkQrIe
r/TaFx5ax7nokrM5DbQkmiXU3vGQ9yk9Vb6uNMies/S7/4SHpF1zM55tfwKK
ZTF1qz146Kjd49yxn+lg8Mb9e2U/F2G6tegTuWdwoSxi28NuLopwEDlptfsZ
3Apcr+z8jYsKXLzliuOegSFz8X1NNReJe+0Mv6T/HEbUcre3PeGimmsd9rQr
L4C2q39I4hgX6WRL0eRFMqHYqWOl9AcO+qxV49SgnQmBk7VC/GUc5JQXWB5s
lwldDzc0sV5x0O1ipk9PZia03HLkO5fIQUOVOfTnFlnAGTWTZ/twUMq3A3lb
72VD/eSV61w5Dlq6GHps/7pc0BXfqVDvMooSTtk6aO7LhU3dP6pkjo4ilTZN
JymvXKiwWbH5iPkoMnr5w4X+NhcS5SqcnumOorKX8UUlWq9ByDA6LkloFHGt
OBVmja9h4otjSc/jEXQk48GXc8vywWfd3v7hr8NI1ZI39OFmIRhUXylMFhlC
ciH7DdwfF8IqjfMv1f8MIsmctJuiJYWg+dLsW/rgIJoRsdKyZBfCGzHDvrO1
g6i5suQcY3sRBMu/ct59fRAFaYcu/Okvgpaxi2J8MwOoUWLFCi2yBOqyHf5h
0/tRQOMOSJgog+r7Cmmefr1IplCKwc+PoFpcfed4XhcqZu+ubzKsAn8uXU9k
aTOq8ny0xo5TDU77LpjsQY/Rb7WdEjlnPwKZf3J1lfdHEJjOklyjWgfJm2e0
zErooLfoVGz1qh6Oh7neCEjph/ow3cbaTU0QmENaWTlzQeHO6PRLXjOE3ty3
/C1nHEanmIxv2i1wqzRJ43jbJKSPlNeJx7RC8KN/ftn+nAHxtS9wX18beLuf
H3GsW4Bbp4rc0lS+Q0mW7/SO5fzkJJnV5xHyA8h1tcVC7wRIf53qwlUf2sHb
z6E8T1GIdNNVTPvvUztI2+w8aaEmRB7Vu3xTrLEdJjWaovs1hMi/DXSdBTra
4U7YXeOl+kKkgHG6BI/XDoenr+prWgiRsZZhnjVyHfDpcvrXqkAhMtNnj6K/
XwdESHxq0W8QIpmvqm9+Xd8JCy7SPRxPYbKZK8TR2dAJlyRlEsK9hclKzb3m
cZqdIPbGO1bOX5hMy6wRs9XvhIk/fAY7rgiTzs9rb3eZd4LqHdl/D8QKkwOP
PsUOBnRCziqzwoJ8YZJ7q/7efEMnnOx5uS1jUphkfBGbcGjtBJ0Hd2NrZ4TJ
RlEL68r2ThCumhDqWRAmX0U2rLje2wmvt9zVFyVopE9Y432R6U6Qi3VP3ixD
IycuNT9YrkIHxrKaUyV6NHLWsy1pYxAdIubOBjT50UhrveP/aYXQwcvkUq32
BRqZzT8QsS2MDoHjUXdjLtJIh4Qp350xdKhRd0+BqzTyfY2cieUTOjSePucV
cJtG3lA8MRFYRwdpx7927nxBI5d/55p/kusCpZ0Zm+XbaeSZxxeMGxS6wLRe
MmEpnUZWn1nUb1HpggGdebepbhp5QVBKuUurC3TEbm2p7qWRHdq609i4C1gl
XbY6mEam3gx6JnO6Czx/Cpx2EiZIjV3Eglt5FxzEN6cWtAjydWbWhvbKLuhs
sB55tZUgdVccsjxQ2wUVWS0R9roEaTiYkK7xtQueyLLL0ncQ5MHbm8zGBqj6
q/b9EtpDkH4dFgkXpbvhz9iQ+IQtQU4aj78fkemGtBlyj4M9QV7Kjh/9d203
BC6+lqk+RpBhIUwjI/VuUHFaG3/tBEHGq/r2Cxh1wy03c0adJ0GW+cbp3DrV
DW1skyWRlwnSiL792LxXN3ze87Y5K5ggq/Z0h3v5d0NAG0fjy1WCrJNR6zgU
0g2O/0onzYURZNfbkpCV97shiN1ktuk2QfKJ0utTKqn+lwteeJ1MkPufrHfP
k2GAhpPbBtdSar4J4mq18gwg463vM8oIUjFmtq9zPQMqekNkj5QT5MzFb85C
mgw4OyProveOIHMsoxxsSQZor/P4+fkDQS7n/3lk3oMBfIOLObqNVH9T3Suk
vRjAKdGx8WkiSA6nrlXtHANOp++RyGgmyNr2dMtDVxjQFdGcv7SVIC++Pmrx
9D8GzJmaljz9QZBMx8o9B94wwFlNLGAViyDrj+QIOiAGRCROiy7vIchSs8Qq
v2oGSFY7Zy1lE+RdfX8yuZEBphV5kj97CXKvhLohZjPg+XS5261BgtQRXjkr
OMSARjxte2qIINfN8r9ZzaXGb8CyMh4myD8DdH3jKQZkNzV6Do0QZNa72G33
lzJhdn+0hDCPIBMKL4+/lGRC8V77Q1WUwzJP5b1byYR2MEq8hAnSIX73liEF
JjSWRZuwxwhSymtq09+6TLCb9RC9+osgF1z6hv/ZwYQEDeHYtRMEOWL3NcPV
iAkjSk5rSihX781SizFhwsbYN6aM3wQZsNZRqecYE1IbpPjmpwjS+ZC2TdcJ
JkwsWB0K/EPl33X+6B9uTAhjNDViymrDT382+DDhu7GgTes0QUrLn1f9fJ4J
kcfDHGCGIOcP7rOrDmLCicMtcS8otxUOVb4JY0KyoF/0mVmCrBwsmyiKYoL/
s7gDnylnyd1Uz4thggdHVU9pjiCvXd1850UCE6qMyQefKHsVLHx48ojq78bj
pavmCdJuoGnq0RMmeHWvz3GkrG3u5xiXzYTbugYBg5TlQ3bfi81jwt2KvFTV
BYIk8ld8jC5mgqoz8duR8nhf/0x4ORP6t24OiKfMkCnRCq1kwhOlVWqfKdeZ
RjpfrqHiubKY/w/loit28QF1TDD6xi+qvEiQaa831fk1MeGNDDYypXyrd3b+
bBsTzlz2TztLOXBVw9ZTHUzYcjtK6zZllwMpJ10ZTJB/pzacQfngZe+Hjr1U
vM7uba6kbJBLNtgPMWFJH7O3jbIaW4rfhsuEQOufyv2UpVb26lqOM4FHP3/n
J+W5/YUe5lNMqAv13DhDeSgoPHn/HBOy9Rt4C5RHbDQ8HvOx4HJHMmuRstPY
cgEFQRa4be5YmKP8PWouKVmYBR291w5MUjZT7v9LToQFNx8kVY5SrqxoaHog
yoILDaqu3ZT1bIpPrVzGgu8TKrpfKGfjFMF7EizQcn+kXURZKerGI0lpFpAe
cXZJlBOUfPRjVrBAXE0y9wpl8YqjX5fKsKC7VGbrMcphR3adjpJlgaZyAVOP
8jRvozAhz4Jiy9E3yyh7RUqnhq1jgd+auioWFf++9bPbBdZT49tlP5VLudm6
/sy8KgtuG7wbMKa8j1dIu6TOgjql7Mc0yhU3HqX92cQCkbshUbVUPrx449X2
awsL+MmVLIP/5Ye1rZevDgsO9f85iKn8ussFEazLAsQQGk2lHKwoZTiygyrP
ZGf+pvJzomz6m7shC2q3dTcmUva0Ynv3G7FgNsRS0ZDykYiCp6zdLHjcLWB+
jsp3Tc6RpT8sWHBqv+HnAmq/lFqbo+hDLGDdFe7ZQnn3W+NzRlYssJdQCXpB
7Tf7mC30Z0dZ4OUzqx01SZBR2kuy/F1YkBEUX7SK2q8rHi46qLuxwFzuepcX
tb/T+CeluzxYIHdhTUTVONV+CztotxcLtmRLOx/7SZAD/hWm0hdZ4P+t1Nie
Oj/8uvMXai6x4BOZEBbDpfbn3pf5F4NZcL6lzvQdh2pfJl6u5zoLRmRXnpQc
pcZX5j2SG8MCoYLJH8HUeZY2rxRtkc4C5cdtY2FMan5uskb8L6j8sFkf78sg
yJJGifHClyzIVhOotusmyMbUOTv5XKrcueKNPJ3qb9f3jaNlLDDJXZQ/+52a
b0TU58gmFoQe3s23vZ4aLy/kimELCwy5l2y66wjS1/bC1rE2Fqxz/WIQ/Jkg
I9VdHtp2sqDE9+/c/FqCLK4zPKXWT42PeeXwQCV1H0iMiVTPsEAh4R4zsJAg
W95G3zgwT62Xq6zlr3xqfc+o0poWWeCjf2P4VB51XtXZC3YK9UBF/KM7Zq8o
h9fMY/EeyEy6XMV6QZCSs4nja5R7IMPhiLhVIkGKDe7tOmfWA+9aTIztqfux
/j7LftqiBw6d6zxuH0Tt/z2XOoIP9cBQ2LZXNoEEufTJ6+9RR3rg9XU9vNuf
IEWPr/ma6tgDta9v8/08TZAirWM1X871QGn7dOt96r4WQkm5ysk9kGS8WlT8
L4LsNNxjwkzpgZx/O5KcdAgy9w2Hlfi4B9KCghpebaHiV7xTWvpFDzhdCVxu
tIkg83KY/nz5PWA9dppUV6Duh2Rlg+6P1PxK/mvREKHy42JWdfyvHlgjfqni
93caGTNldfzwZA/83PJP79tWGulyfu73sukeEEfGNaHNNFLc12JD+EIP0Nbs
fjf3mUae9MBR55aw4aqBaCqqoJHSttv+OaTAhoMX3o9ffEwjT+uWdywxY4OA
1lb6R3caWdn8LbvUgg3F0r1tcq40cuXZsRD3Q2yIWrmj+ZQTjUTPVNVqjrAh
IWa0afYo9f6SueN31YkN+lwHybEDNLJ82nXp1Hk2/GVXdVVOg0YuReI7+9LY
ILJ+RUHwiDCZdcA57d0kG34Iq0dUHxcmdTXXG8E0G0zN6QU+dsLkO3EWHc2y
oTDleobsEeq923pc5j1fL6TL9o+cMBcmJ47bxXwQ7QXaW7+fXwyESSO/Q5c/
resF+aTLEzQZqn6i0dGWfb3wqjnDR5F6P/8elZMciO+FwPvuOYraQmSR1X7B
uD19QPtmuFqkUIAMMQlPLRzoA7f9UaG7VPnJ9d2m7U/D++Hi3vJ018kFMNAP
i5PVGYDVJxpGmbKzcGxd0zR/6wD8/SujwPvwFPyuu832CR0EvtQfcuOyvyBB
yMH/sMoQXBd7diBVnwfLGUVPBKqHwODCkT3rPQdA+Eqo9Q7fYXC7ds+M+3cX
8L10yGVLj0CGyMbHMil14JeYe1u6agQq/4T0nchORW81IkWkvEZBMtj4JiOz
CUmZ+mleE+dAYWV0NPMaHXVtbm69WMEBt4jy+sMWvSh1VOqKIOLATPhV++NO
vcj5pZXa7fccMHhfrPbvuV40rPIjMK2WAwtJj9y1H/aiyTWMtR+bOaCTuFJk
V18vkhLluK/o5wBZrlk4GdCH9g0Qc6+WcSG+idl/734/ep0CKn0OXFgduK/1
ccYg+hX0izhxggurMsJ/LykdRHq2L0a7XbiQHrS83vXjICqXkCj44cEFedML
N8b7B1HtVcauL35ceOcX9fWs0hCiO19xzI/gwlhRXwwrYQjRNpQnXn3FBaW+
33opl4bRAUHv4PnXXDisWETYRA2jW0wl56ACLij6l6/lezCMpBKiN/qXciGz
4b6YRv4wkl9iX+peRdUXFEqiDw4jndE/3w5+54KYy8u89EMj6HiuntTaBS4Y
1U5sei8ziort/4g38/Gg8oOGB1IZReK0N2LXBXlwRumRSM7WUVR5bKfIsAgP
MvVzXG3MRpGS6J7FwuVUOZ5V6bkyigZcLbnmG3mw6e2VvFbmKPKSO/P5sjUP
AkuyTVc+4KDams0ft9jyYLvzil3TjzlIwRdXs+14YCP8ZEt9Ngc1f/SrNHHk
gV616LBRFQfpnL9YssKTB/FWChdtORw01RTxLDuEB53VwcGHd3LR1fDHoV2Z
PFDZEJB8rIWLlgUQpidyKLsUzIZ1clGix1npgVwefGrYZZDC5qICsx1PcSEP
6l+csXg6zkUDUl+rBRAP7JW97k9J8ZBZCp/IxlYeRDYMC3604KH2WLfmnG88
2OdY7DdnzUOuofUJOu3UfL17nigd46Fg14SNht08SDl8lNzlyUOvN2mb/TNI
tbccwcdwHlpV4hhzfpYHd/44d02U8dDTjBqbmXkeVJf5Pvirkoe0EzUUQvgw
bMp9Nu1Wy0MHrkzlRgpjKOX3y0lq4aHLu2O/Jklg6NNSfGk+wkPspncrqpQx
eAgfyPuyCiPv9yrd+9QwOIUob10lj9FcfvSzL+oYBAoyd1mux2hlvI3et80Y
/CWfSTzUwMjkGM92SB/DvuyTht6AUc7Q2iRxcwySdQ6Nuq4YRT4Kd2IcxDC0
+P06cQoj18Nc1VeWVP+9AgO1ZzGSr6h4bWGLwXUqL3NpAEbRsf/W3nLGkL76
uHhOJEZuez7cPHYSg7j1DoH+WxgZT2+y1PTAcFCY/mDJfxhNO8/Qv5yl6n9w
f7r6IUYeeg9/il7EkEZWyh7MwGjPKF9J5yUMJmdKp0eyMFJI87icGYxh5CG/
n38uRt+XbCdMwzC8kdy5waIYo73d3+WjYjEk2KbcWPkBI8W7RuyjdzGsk/t7
mUwtFY99z1+o36faH9RSFv6MUeHr8zqfEjFoqcfOPW/ESClshQnxnIp34XML
/g6MFrZfXvYjA4NK0z4jdzpGHdzeludZGPhWodKybozu2BYc35eHofrEKRMV
NkZnxNYoryrEUPvD+JhhHxXf99eG+osxtB/bPUUOYLS46fC58ApqfSoOVEqM
YNTJLNt+BGHICFXjdoxiVBy3fkGlCsOMRnvKHS5GXgtjkdUfMRy1ehnzYQwj
04KjB+PqMMQZNH2BcYxUPSqXuzZguEr/fjPjF0ZdX2NTBFsxRJ7ruAuTGJVG
TLm0fsMwdlS04+wURnF/O2582o6B3RaZFvkHI5+xWp4fHUN96cJQ7DRGZs+0
Co0ZGLZ/XJN/fQYjNfv4i9I91HoX3J91mcVIQGLBiN2LoU1ZvUZ7DiPGh5NC
+QMYfHLixEcovwls+Bw6jOFW+5MfsfMYxW/+K9aSg+HaOkVFpQWMfNnJ1usx
BqMR5mAaZfMHQnI/f1L5kFCuJbaIkbr5GWblBIaBC3cnXP73fYC/Lf3OFIaJ
mgM7Miiziv72dJqh1qOkfq6dcoXn0y3a89T4zorBJOUHCkt/Ly5i+P/vC/8H
i/2Tug==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {-0.9999999999999836, 2.9999997661463436`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->None]], "Output",
 CellChangeTimes->{3.5938212578510437`*^9, 3.5938212897488685`*^9, 
  3.5938213817041283`*^9, 3.5938215514758387`*^9}],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{peeters`pts1$$ = {{
   0.017567356704463688`, -0.9783441768209135}, {
   0.2594403412046197, -0.5148555259965184}, {
   0.4086653490065569, -0.9034730427738431}, {0.5051882866951021, 
   2.983752776134258}, {0.7113390441839499, 2.935204733435315}, {
   0.7727556433995635, 
   2.2314360676620666`}, {-0.00047590421801368965`, -0.0101320210307424}, {
   0.024095781985772724`, 0.6656451183509284}, {0.11285191864542629`, 
   0.8145602042308635}, {0.5067378018234652, 0.020263866671275887`}, {
   0.5093928464081767, 0.827756519428378}, {0.6357203687005314, 
   0.8348241293655387}, {0.9998622382526794, 0.01013190410393594}, {
   0.9743387436128642, 0.8480204445630701}, {0.9002855425308091, 
   0.8246921667982066}}, peeters`pts2$$ = {}, peeters`lbl1$$ = {
   "E(0,0) = E_s - A - 4 B", "E(\[Pi]/a, 0) = E_s - A + 4 B", "k = (0,0)", 
    "k = (\[Pi]/a, \[Pi]/a)", "k = (2 \[Pi]/a, 2 \[Pi]/a)"}, 
   peeters`lbl2$$ = {}, peeters`varRsrv$$ = {
   "FeboAsoma", {{0.017567356704463688`, -0.9783441768209135}, {
     0.2594403412046197, -0.5148555259965184}, {
     0.4086653490065569, -0.9034730427738431}, {0.5051882866951019, 
     2.8824331504608485`}, {
      Rational[1, 2], 0.99999988307318}, {0.7727556433995635, 
     2.2314360676620666`}, {-0.00047590421801368965`, -0.0101320210307424}, {
     0.024095781985772724`, 0.6656451183509284}, {0.11285191864542629`, 
     0.8145602042308635}, {0.5051723274221025, 0.07092367950798095}, {
      Rational[1, 2], 0.99999988307318}, {0.6357203687005314, 
     0.8348241293655387}, {0.9998622382526794, 0.0303958292386185}, {
     0.9743387436128642, 0.8480204445630701}, {0.9002855425308091, 
     0.8246921667982066}}, {}, {
    "E(0,0) = E_s - A - 4 B", "E(\[Pi]/a, 0) = E_s - A + 4 B", "k = (0,0)", 
     "k = (\[Pi]/a, \[Pi]/a)", "k = (2 \[Pi]/a, 2 \[Pi]/a)"}, {}, 
    "FeboAsoma"}}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Show[peeters`plotRsrv$15134 = Show[
            Graphics[{{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Line[CompressedData["
1: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
i/2Tug==
                 "]]}}}, {
             AspectRatio -> GoldenRatio^(-1), Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, 
              PlotRange -> {{0, 1}, {-0.9999999999999836, 
                2.9999997661463436`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> None}], Epilog -> 
            Map[peeters`myLabel$15134, 
              Apply[Join, {
                MapIndexed[{
                  Part[peeters`lbl1$$, 
                   Part[#2, 1]], #}& , 
                 Partition[peeters`pts1$$, 3]], 
                MapIndexed[{
                  Part[peeters`lbl2$$, 
                   Part[#2, 1]], #}& , peeters`pts2$$]}]], ImageSize -> 500], 
          Graphics[{
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts1$$, peeters`i$]]]]& , peeters`pts1$$]], 
            Dynamic[
             MapIndexed[With[{peeters`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 Part[peeters`pts2$$, peeters`i$]]]]& , peeters`pts2$$]]}, 
           PlotRange -> {{0, 1}, {0, 1}}]], StandardForm],
        ImageSizeCache->{667., {202., 211.}}]},
      {
       InputFieldBox[Dynamic[peeters`varRsrv$$],
        FieldHint->"Label Import Area",
        FieldSize->55]},
      {
       TemplateBox[{
        ButtonBox[
         "\"Add Labeled Arrow\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts1$$] < 
            3 OptionValue[peeters`lblPlot, {}, peeters`maxArrowedLbls], 
            AppendTo[peeters`lbl1$$, "Arrow"]; 
            peeters`pts1$$ = Join[peeters`pts1$$, $CellContext`u$15134]], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Add Label\"", Appearance -> Automatic, ButtonFunction :> 
          If[Length[peeters`pts2$$] < 
            OptionValue[peeters`lblPlot, {}, peeters`maxNonArrowedLbls], 
            AppendTo[peeters`lbl2$$, "Label"]; AppendTo[peeters`pts2$$, 
              Part[$CellContext`u$15134, 2]]], Evaluator -> Automatic, Method -> 
          "Preemptive"],ButtonBox[
         "\"Copy to new .nb\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`copyToNewNB$15134[
           peeters`plotRsrv$15134, {
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Export Labels\"", Appearance -> Automatic, ButtonFunction :> 
          peeters`exportLbls$15134[{
            peeters`pts1$$, peeters`pts2$$, peeters`lbl1$$, peeters`lbl2$$}], 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Import Labels\"", Appearance -> Automatic, ButtonFunction :> (If[
             And[
             Head[peeters`varRsrv$$] == List, Length[peeters`varRsrv$$] == 6, 
              Part[peeters`varRsrv$$, 1] == Part[peeters`varRsrv$$, -1] == 
              Part[peeters`safeGuard$15134, 1]], {
             peeters`pts1$$ = Part[peeters`varRsrv$$, 2], peeters`pts2$$ = 
              Part[peeters`varRsrv$$, 3], peeters`lbl1$$ = 
              Part[peeters`varRsrv$$, 4], peeters`lbl2$$ = 
              Part[peeters`varRsrv$$, 5]}, 
             MessageDialog[
             "You're trying to Import a label set not created by \"Export \
Labels\""], 
             MessageDialog[{
               Head[peeters`varRsrv$$], Part[peeters`varRsrv$$, 1] == 
               Part[peeters`varRsrv$$, -1] == peeters`safeGuard$15134}]]; 
           Null), Evaluator -> Automatic, Method -> "Preemptive"]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Transpose[{
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl1$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl1$$ = Drop[peeters`lbl1$$, {#, #}]; 
                  peeters`pts1$$ = Drop[peeters`pts1$$, {3 # - 2, 3 #}]]}]& , 
               Range[Length[peeters`pts1$$]/3]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]], 
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[peeters`lbl2$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], 
                  peeters`lbl2$$ = Drop[peeters`lbl2$$, {#, #}]; 
                  peeters`pts2$$ = Drop[peeters`pts2$$, {#}]]}]& , 
               Range[
                Length[peeters`pts2$$]]], 
              Max[
               Length[peeters`lbl1$$], 
               Length[peeters`lbl2$$]], ""]]}], ItemSize -> 30], StandardForm],
        ImageSizeCache->{851., {101., 110.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 CellChangeTimes->{3.5938212578510437`*^9, 3.5938212897488685`*^9, 
  3.5938213817041283`*^9, 3.593821551525841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"OverVector", "[", "k", "]"}], "//", " ", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.5938211253684664`*^9, 3.5938211566292543`*^9}, {
  3.5938216180736475`*^9, 3.593821620135765*^9}}],

Cell[BoxData[
 FormBox[
  OverscriptBox["k", "\[RightVector]"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5938216155545034`*^9, 3.5938216208568068`*^9}}]
}, Open  ]]
},
WindowSize->{1255, 724},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 236, 6, 78, "Input"],
Cell[818, 30, 151, 2, 52, "Output"]
}, Open  ]],
Cell[984, 35, 315, 7, 92, "Text"],
Cell[CellGroupData[{
Cell[1324, 46, 2315, 54, 457, "Input"],
Cell[3642, 102, 9223, 165, 314, "Output"],
Cell[12868, 269, 14906, 282, 669, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27811, 556, 120, 2, 52, "Input"],
Cell[27934, 560, 96, 2, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28067, 567, 912, 22, 228, "Input"],
Cell[28982, 591, 8628, 150, 314, "Output"],
Cell[37613, 743, 14902, 282, 771, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52552, 1030, 1181, 27, 253, "Input"],
Cell[53736, 1059, 8599, 149, 329, "Output"],
Cell[62338, 1210, 15553, 291, 933, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77928, 1506, 230, 5, 52, "Input"],
Cell[78161, 1513, 162, 3, 73, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
